Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag316_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/dag316_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 597489 - 1.01 seconds
Cgl0002I 130 variables fixed
Cgl0003I 0 fixed, 4 tightened bounds, 694 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 293 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 96 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 89 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4046 rows, 1368 columns (1368 integer (1334 of which binary)) and 13488 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1368 objects (1368 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 583 integers unsatisfied sum - 169.78
Cbc0038I Pass   1: (2.03 seconds) suminf.   99.15200 (532) obj. 952668 iterations 1765
Cbc0038I Pass   2: (2.11 seconds) suminf.   84.52217 (498) obj. 960509 iterations 483
Cbc0038I Pass   3: (2.19 seconds) suminf.   75.32037 (468) obj. 960488 iterations 460
Cbc0038I Pass   4: (2.30 seconds) suminf.   70.92149 (469) obj. 959417 iterations 705
Cbc0038I Pass   5: (2.32 seconds) suminf.   70.34614 (455) obj. 959432 iterations 83
Cbc0038I Pass   6: (2.40 seconds) suminf.   57.44278 (465) obj. 983777 iterations 482
Cbc0038I Pass   7: (2.45 seconds) suminf.   55.54563 (458) obj. 976464 iterations 283
Cbc0038I Pass   8: (2.46 seconds) suminf.   55.14498 (446) obj. 976236 iterations 47
Cbc0038I Pass   9: (2.55 seconds) suminf.   54.28366 (482) obj. 1.10591e+06 iterations 533
Cbc0038I Pass  10: (2.61 seconds) suminf.   52.17178 (456) obj. 1.17087e+06 iterations 308
Cbc0038I Pass  11: (2.63 seconds) suminf.   52.01516 (453) obj. 1.18288e+06 iterations 124
Cbc0038I Pass  12: (2.71 seconds) suminf.   49.68293 (424) obj. 1.18908e+06 iterations 436
Cbc0038I Pass  13: (2.75 seconds) suminf.   47.48009 (431) obj. 1.18891e+06 iterations 241
Cbc0038I Pass  14: (2.78 seconds) suminf.   46.55397 (442) obj. 1.20806e+06 iterations 119
Cbc0038I Pass  15: (2.82 seconds) suminf.   44.88274 (472) obj. 1.20762e+06 iterations 193
Cbc0038I Pass  16: (2.93 seconds) suminf.   42.49287 (462) obj. 1.21803e+06 iterations 693
Cbc0038I Pass  17: (2.99 seconds) suminf.   41.74412 (454) obj. 1.19663e+06 iterations 297
Cbc0038I Pass  18: (3.02 seconds) suminf.   41.13112 (449) obj. 1.19582e+06 iterations 140
Cbc0038I Pass  19: (3.10 seconds) suminf.   36.77239 (441) obj. 1.21365e+06 iterations 460
Cbc0038I Pass  20: (3.14 seconds) suminf.   36.42172 (434) obj. 1.19715e+06 iterations 202
Cbc0038I Pass  21: (3.24 seconds) suminf.   38.36321 (414) obj. 1.18681e+06 iterations 635
Cbc0038I Pass  22: (3.30 seconds) suminf.   37.87183 (419) obj. 1.20511e+06 iterations 281
Cbc0038I Pass  23: (3.35 seconds) suminf.   38.27049 (420) obj. 1.21602e+06 iterations 369
Cbc0038I Pass  24: (3.37 seconds) suminf.   37.87442 (412) obj. 1.21712e+06 iterations 67
Cbc0038I Pass  25: (3.44 seconds) suminf.   39.29691 (403) obj. 1.20843e+06 iterations 460
Cbc0038I Pass  26: (3.46 seconds) suminf.   38.77732 (409) obj. 1.20482e+06 iterations 112
Cbc0038I Pass  27: (3.53 seconds) suminf.   40.18847 (403) obj. 1.21459e+06 iterations 397
Cbc0038I Pass  28: (3.60 seconds) suminf.   35.30313 (371) obj. 1.21392e+06 iterations 334
Cbc0038I Pass  29: (3.67 seconds) suminf.   35.54320 (366) obj. 1.21284e+06 iterations 422
Cbc0038I Pass  30: (3.70 seconds) suminf.   34.64561 (384) obj. 1.21612e+06 iterations 178
Cbc0038I Pass  31: (3.73 seconds) suminf.   33.54389 (382) obj. 1.2196e+06 iterations 135
Cbc0038I Pass  32: (3.77 seconds) suminf.   35.29544 (368) obj. 1.21647e+06 iterations 229
Cbc0038I Pass  33: (3.80 seconds) suminf.   33.90999 (386) obj. 1.22529e+06 iterations 129
Cbc0038I Pass  34: (3.93 seconds) suminf.   72.99928 (452) obj. 1.35499e+06 iterations 891
Cbc0038I Pass  35: (4.06 seconds) suminf.   54.38958 (430) obj. 1.26509e+06 iterations 829
Cbc0038I Pass  36: (4.11 seconds) suminf.   53.90455 (414) obj. 1.27035e+06 iterations 291
Cbc0038I Pass  37: (4.20 seconds) suminf.   47.16352 (424) obj. 1.25318e+06 iterations 476
Cbc0038I Pass  38: (4.27 seconds) suminf.   46.03723 (418) obj. 1.26089e+06 iterations 425
Cbc0038I Pass  39: (4.28 seconds) suminf.   46.13548 (419) obj. 1.26091e+06 iterations 4
Cbc0038I Pass  40: (4.35 seconds) suminf.   45.84409 (417) obj. 1.27566e+06 iterations 402
Cbc0038I Pass  41: (4.37 seconds) suminf.   45.64884 (414) obj. 1.25915e+06 iterations 86
Cbc0038I Pass  42: (4.40 seconds) suminf.   45.34925 (410) obj. 1.23764e+06 iterations 108
Cbc0038I Pass  43: (4.42 seconds) suminf.   44.98457 (411) obj. 1.23745e+06 iterations 75
Cbc0038I Pass  44: (4.49 seconds) suminf.   43.68654 (413) obj. 1.30524e+06 iterations 445
Cbc0038I Pass  45: (4.54 seconds) suminf.   42.37971 (404) obj. 1.31582e+06 iterations 198
Cbc0038I Pass  46: (4.56 seconds) suminf.   41.51195 (396) obj. 1.31459e+06 iterations 114
Cbc0038I Pass  47: (4.64 seconds) suminf.   37.88297 (390) obj. 1.36749e+06 iterations 445
Cbc0038I Pass  48: (4.68 seconds) suminf.   35.85469 (393) obj. 1.25979e+06 iterations 221
Cbc0038I Pass  49: (4.69 seconds) suminf.   35.69345 (392) obj. 1.25725e+06 iterations 21
Cbc0038I Pass  50: (4.77 seconds) suminf.   35.19325 (335) obj. 1.25885e+06 iterations 466
Cbc0038I Pass  51: (4.79 seconds) suminf.   34.63122 (328) obj. 1.25984e+06 iterations 89
Cbc0038I Pass  52: (4.86 seconds) suminf.   32.13947 (336) obj. 1.27903e+06 iterations 385
Cbc0038I Pass  53: (4.91 seconds) suminf.   32.17659 (329) obj. 1.26733e+06 iterations 256
Cbc0038I Pass  54: (4.96 seconds) suminf.   32.49219 (329) obj. 1.26627e+06 iterations 253
Cbc0038I Pass  55: (4.98 seconds) suminf.   32.79805 (333) obj. 1.2672e+06 iterations 18
Cbc0038I Pass  56: (5.02 seconds) suminf.   33.80511 (315) obj. 1.28688e+06 iterations 216
Cbc0038I Pass  57: (5.04 seconds) suminf.   32.98507 (312) obj. 1.28603e+06 iterations 91
Cbc0038I Pass  58: (5.06 seconds) suminf.   32.83347 (312) obj. 1.29434e+06 iterations 85
Cbc0038I Pass  59: (5.08 seconds) suminf.   32.24900 (317) obj. 1.28948e+06 iterations 120
Cbc0038I Pass  60: (5.14 seconds) suminf.   35.53228 (322) obj. 1.31952e+06 iterations 333
Cbc0038I Pass  61: (5.18 seconds) suminf.   31.80896 (360) obj. 1.32895e+06 iterations 191
Cbc0038I Pass  62: (5.20 seconds) suminf.   31.74188 (354) obj. 1.32564e+06 iterations 98
Cbc0038I Pass  63: (5.23 seconds) suminf.   32.98860 (345) obj. 1.37247e+06 iterations 171
Cbc0038I Pass  64: (5.25 seconds) suminf.   33.40464 (342) obj. 1.37412e+06 iterations 50
Cbc0038I Pass  65: (5.29 seconds) suminf.   31.04120 (332) obj. 1.32494e+06 iterations 200
Cbc0038I Pass  66: (5.32 seconds) suminf.   30.90308 (336) obj. 1.24708e+06 iterations 138
Cbc0038I Pass  67: (5.39 seconds) suminf.   30.56453 (301) obj. 1.30061e+06 iterations 472
Cbc0038I Pass  68: (5.41 seconds) suminf.   29.81751 (318) obj. 1.29932e+06 iterations 101
Cbc0038I Pass  69: (5.48 seconds) suminf.   27.76182 (293) obj. 1.32189e+06 iterations 428
Cbc0038I Pass  70: (5.50 seconds) suminf.   27.23117 (292) obj. 1.32867e+06 iterations 53
Cbc0038I Pass  71: (5.58 seconds) suminf.   26.02675 (293) obj. 1.23655e+06 iterations 506
Cbc0038I Pass  72: (5.61 seconds) suminf.   25.15618 (316) obj. 1.23717e+06 iterations 133
Cbc0038I Pass  73: (5.65 seconds) suminf.   23.80497 (301) obj. 1.22989e+06 iterations 216
Cbc0038I Pass  74: (5.67 seconds) suminf.   22.44925 (324) obj. 1.23104e+06 iterations 80
Cbc0038I Pass  75: (5.74 seconds) suminf.   21.20778 (264) obj. 1.23627e+06 iterations 446
Cbc0038I Pass  76: (5.79 seconds) suminf.   19.82052 (305) obj. 1.23397e+06 iterations 195
Cbc0038I Pass  77: (5.82 seconds) suminf.   19.76024 (286) obj. 1.23737e+06 iterations 168
Cbc0038I Pass  78: (5.85 seconds) suminf.   17.93089 (293) obj. 1.24258e+06 iterations 127
Cbc0038I Pass  79: (5.90 seconds) suminf.   21.77257 (255) obj. 1.25214e+06 iterations 290
Cbc0038I Pass  80: (5.95 seconds) suminf.   19.26252 (253) obj. 1.24847e+06 iterations 238
Cbc0038I Pass  81: (5.96 seconds) suminf.   17.89838 (263) obj. 1.24983e+06 iterations 78
Cbc0038I Pass  82: (6.02 seconds) suminf.   21.15290 (220) obj. 1.27971e+06 iterations 388
Cbc0038I Pass  83: (6.05 seconds) suminf.   19.64873 (238) obj. 1.31246e+06 iterations 180
Cbc0038I Pass  84: (6.09 seconds) suminf.   17.38249 (263) obj. 1.31463e+06 iterations 242
Cbc0038I Pass  85: (6.17 seconds) suminf.   17.02852 (229) obj. 1.2444e+06 iterations 457
Cbc0038I Pass  86: (6.19 seconds) suminf.   17.52350 (234) obj. 1.24591e+06 iterations 132
Cbc0038I Pass  87: (6.25 seconds) suminf.   21.82286 (221) obj. 1.26443e+06 iterations 419
Cbc0038I Pass  88: (6.30 seconds) suminf.   15.27391 (219) obj. 1.23812e+06 iterations 334
Cbc0038I Pass  89: (6.31 seconds) suminf.   15.27391 (219) obj. 1.23812e+06 iterations 2
Cbc0038I Pass  90: (6.35 seconds) suminf.   14.76724 (219) obj. 1.24231e+06 iterations 302
Cbc0038I Pass  91: (6.37 seconds) suminf.   14.18812 (231) obj. 1.24211e+06 iterations 123
Cbc0038I Pass  92: (6.42 seconds) suminf.   15.64202 (212) obj. 1.24502e+06 iterations 226
Cbc0038I Pass  93: (6.44 seconds) suminf.   14.56133 (229) obj. 1.24746e+06 iterations 143
Cbc0038I Pass  94: (6.50 seconds) suminf.   21.12342 (239) obj. 1.25111e+06 iterations 368
Cbc0038I Pass  95: (6.55 seconds) suminf.   15.74060 (216) obj. 1.24702e+06 iterations 304
Cbc0038I Pass  96: (6.61 seconds) suminf.   15.38099 (191) obj. 1.24842e+06 iterations 430
Cbc0038I Pass  97: (6.63 seconds) suminf.   14.71910 (201) obj. 1.24563e+06 iterations 113
Cbc0038I Pass  98: (6.69 seconds) suminf.   16.16313 (208) obj. 1.24696e+06 iterations 464
Cbc0038I Pass  99: (6.72 seconds) suminf.   14.83329 (210) obj. 1.24629e+06 iterations 158
Cbc0038I Pass 100: (6.84 seconds) suminf.   60.51082 (410) obj. 1.24014e+06 iterations 800
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4046 rows 1368 columns, reduced to 3318 rows 1083 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.30 seconds)
Cbc0038I After 7.30 seconds - Feasibility pump exiting - took 5.57 seconds
Cbc0031I 71 added rows had average density of 10.929577
Cbc0013I At root node, 71 cuts changed objective from 597547.05 to 606208 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 81 row cuts average 387.2 elements, 0 column cuts (0 active)  in 0.497 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 246 row cuts average 79.5 elements, 0 column cuts (0 active)  in 0.271 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 606208 (13.71 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 606213 (101.55 seconds)
Cbc0010I After 200 nodes, 1 on tree, 1e+50 best solution, best possible 606226 (171.11 seconds)
Cbc0010I After 300 nodes, 1 on tree, 1e+50 best solution, best possible 606256 (255.63 seconds)
Cbc0010I After 400 nodes, 1 on tree, 1e+50 best solution, best possible 606274 (308.89 seconds)
Cbc0010I After 500 nodes, 5 on tree, 1e+50 best solution, best possible 606284 (375.87 seconds)
Cbc0010I After 600 nodes, 3 on tree, 1e+50 best solution, best possible 606295 (444.97 seconds)
Cbc0010I After 700 nodes, 4 on tree, 1e+50 best solution, best possible 606309 (520.47 seconds)
Cbc0010I After 800 nodes, 2 on tree, 1e+50 best solution, best possible 606326 (566.06 seconds)
Cbc0010I After 900 nodes, 2 on tree, 1e+50 best solution, best possible 606351 (628.17 seconds)
Cbc0010I After 1000 nodes, 2 on tree, 1e+50 best solution, best possible 606372 (670.76 seconds)
Cbc0010I After 1100 nodes, 2 on tree, 1e+50 best solution, best possible 606391 (719.15 seconds)
Cbc0010I After 1200 nodes, 2 on tree, 1e+50 best solution, best possible 606405 (776.54 seconds)
Cbc0010I After 1300 nodes, 4 on tree, 1e+50 best solution, best possible 606424 (829.26 seconds)
Cbc0010I After 1400 nodes, 2 on tree, 1e+50 best solution, best possible 606432 (878.96 seconds)
Cbc0010I After 1500 nodes, 5 on tree, 1e+50 best solution, best possible 606438 (939.79 seconds)
Cbc0010I After 1600 nodes, 2 on tree, 1e+50 best solution, best possible 606451 (991.60 seconds)
Cbc0010I After 1700 nodes, 4 on tree, 1e+50 best solution, best possible 606463 (1055.00 seconds)
Cbc0010I After 1800 nodes, 2 on tree, 1e+50 best solution, best possible 606495 (1147.49 seconds)
Cbc0010I After 1900 nodes, 1 on tree, 1e+50 best solution, best possible 606522 (1232.61 seconds)
Cbc0010I After 2000 nodes, 2 on tree, 1e+50 best solution, best possible 606556 (1317.32 seconds)
Cbc0010I After 2100 nodes, 1 on tree, 1e+50 best solution, best possible 606596 (1408.25 seconds)
Cbc0010I After 2200 nodes, 2 on tree, 1e+50 best solution, best possible 606628 (1495.70 seconds)
Cbc0010I After 2300 nodes, 1 on tree, 1e+50 best solution, best possible 606645 (1576.00 seconds)
Cbc0010I After 2400 nodes, 2 on tree, 1e+50 best solution, best possible 606675 (1679.32 seconds)
Cbc0010I After 2500 nodes, 2 on tree, 1e+50 best solution, best possible 606708 (1783.65 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 606708), took 5970936 iterations and 2517 nodes (1799.50 seconds)
Cbc0032I Strong branching done 14894 times (1059923 iterations), fathomed 386 nodes and fixed 1123 variables
Cbc0035I Maximum depth 509, 0 variables fixed on reduced cost
Cuts at root node changed objective from 597547 to 606208
Probing was tried 10 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
Gomory was tried 520 times and created 2660 cuts of which 0 were active after adding rounds of cuts (3.143 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 520 times and created 6526 cuts of which 0 were active after adding rounds of cuts (1.268 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
ImplicationCuts was tried 32 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    606708.000
Enumerated nodes:               2517
Total iterations:               5970936
Time (CPU seconds):             1799.50
Time (Wallclock seconds):       1811.19

Total time (CPU seconds):       1799.51   (Wallclock seconds):       1811.21

