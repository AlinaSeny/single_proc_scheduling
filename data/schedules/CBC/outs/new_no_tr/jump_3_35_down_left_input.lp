Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_35_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_35_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 26624 - 0.40 seconds
Cgl0002I 102 variables fixed
Cgl0003I 0 fixed, 11 tightened bounds, 555 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 80 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 3898 rows, 1245 columns (1245 integer (1209 of which binary)) and 13161 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1245 objects (1245 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 708 integers unsatisfied sum - 244.153
Cbc0038I Pass   1: (1.62 seconds) suminf.  125.31673 (727) obj. 40688.5 iterations 2259
Cbc0038I Pass   2: (1.83 seconds) suminf.   71.20159 (788) obj. 46609.9 iterations 1011
Cbc0038I Pass   3: (1.98 seconds) suminf.   60.86073 (804) obj. 47822.4 iterations 689
Cbc0038I Pass   4: (2.09 seconds) suminf.   60.98420 (809) obj. 48035.8 iterations 454
Cbc0038I Pass   5: (2.13 seconds) suminf.   60.63511 (814) obj. 48963.6 iterations 119
Cbc0038I Pass   6: (2.25 seconds) suminf.   56.99792 (844) obj. 48502.5 iterations 562
Cbc0038I Pass   7: (2.29 seconds) suminf.   57.23802 (851) obj. 48417.6 iterations 98
Cbc0038I Pass   8: (2.44 seconds) suminf.   53.35038 (786) obj. 49507.9 iterations 778
Cbc0038I Pass   9: (2.50 seconds) suminf.   49.22531 (765) obj. 53320.2 iterations 373
Cbc0038I Pass  10: (2.57 seconds) suminf.   49.92826 (786) obj. 57920.8 iterations 454
Cbc0038I Pass  11: (2.61 seconds) suminf.   50.07804 (793) obj. 58259.5 iterations 225
Cbc0038I Pass  12: (2.63 seconds) suminf.   49.22214 (803) obj. 58848.4 iterations 81
Cbc0038I Pass  13: (2.65 seconds) suminf.   48.26754 (792) obj. 57632.2 iterations 112
Cbc0038I Pass  14: (2.73 seconds) suminf.   50.14845 (798) obj. 49571.5 iterations 449
Cbc0038I Pass  15: (2.80 seconds) suminf.   49.97310 (817) obj. 50239.4 iterations 374
Cbc0038I Pass  16: (2.92 seconds) suminf.   50.20268 (798) obj. 57348 iterations 673
Cbc0038I Pass  17: (2.98 seconds) suminf.   51.16082 (776) obj. 58013.4 iterations 313
Cbc0038I Pass  18: (3.00 seconds) suminf.   50.38694 (778) obj. 58252.2 iterations 134
Cbc0038I Pass  19: (3.09 seconds) suminf.   48.66211 (829) obj. 58478.1 iterations 462
Cbc0038I Pass  20: (3.15 seconds) suminf.   48.83322 (785) obj. 58203 iterations 301
Cbc0038I Pass  21: (3.17 seconds) suminf.   50.12728 (772) obj. 57840.7 iterations 122
Cbc0038I Pass  22: (3.27 seconds) suminf.   53.01535 (796) obj. 57958.6 iterations 554
Cbc0038I Pass  23: (3.31 seconds) suminf.   47.39284 (798) obj. 58143.3 iterations 261
Cbc0038I Pass  24: (3.35 seconds) suminf.   46.86163 (794) obj. 58127.1 iterations 134
Cbc0038I Pass  25: (3.44 seconds) suminf.   53.52434 (788) obj. 57849.2 iterations 515
Cbc0038I Pass  26: (3.51 seconds) suminf.   48.39774 (807) obj. 58392.9 iterations 366
Cbc0038I Pass  27: (3.53 seconds) suminf.   49.25613 (817) obj. 58395 iterations 101
Cbc0038I Pass  28: (3.61 seconds) suminf.   50.42816 (822) obj. 58257.9 iterations 425
Cbc0038I Pass  29: (3.66 seconds) suminf.   47.11563 (801) obj. 58250.7 iterations 234
Cbc0038I Pass  30: (3.75 seconds) suminf.   52.97097 (798) obj. 58269.6 iterations 533
Cbc0038I Pass  31: (3.79 seconds) suminf.   50.30831 (805) obj. 58128.4 iterations 269
Cbc0038I Pass  32: (3.81 seconds) suminf.   49.74098 (797) obj. 58270 iterations 90
Cbc0038I Pass  33: (3.94 seconds) suminf.   48.01590 (782) obj. 58179.8 iterations 679
Cbc0038I Pass  34: (3.98 seconds) suminf.   46.97555 (795) obj. 58246.4 iterations 251
Cbc0038I Pass  35: (4.05 seconds) suminf.   49.57287 (777) obj. 58388.8 iterations 458
Cbc0038I Pass  36: (4.12 seconds) suminf.   50.26915 (775) obj. 58039.8 iterations 369
Cbc0038I Pass  37: (4.16 seconds) suminf.   49.73454 (780) obj. 57776.9 iterations 228
Cbc0038I Pass  38: (4.23 seconds) suminf.   51.71126 (820) obj. 58412.5 iterations 435
Cbc0038I Pass  39: (4.30 seconds) suminf.   49.77718 (790) obj. 58104.4 iterations 345
Cbc0038I Pass  40: (4.37 seconds) suminf.   51.75484 (808) obj. 58243.2 iterations 406
Cbc0038I Pass  41: (4.43 seconds) suminf.   49.93859 (792) obj. 58319.7 iterations 327
Cbc0038I Pass  42: (4.50 seconds) suminf.   49.91794 (802) obj. 58314.9 iterations 351
Cbc0038I Pass  43: (4.57 seconds) suminf.   49.48923 (808) obj. 58107.9 iterations 306
Cbc0038I Pass  44: (4.66 seconds) suminf.   50.69223 (791) obj. 57804.1 iterations 550
Cbc0038I Pass  45: (4.72 seconds) suminf.   48.86742 (781) obj. 58308.7 iterations 317
Cbc0038I Pass  46: (4.80 seconds) suminf.   51.11214 (800) obj. 57857.3 iterations 517
Cbc0038I Pass  47: (4.84 seconds) suminf.   49.99433 (797) obj. 58238.1 iterations 247
Cbc0038I Pass  48: (4.91 seconds) suminf.   51.97280 (770) obj. 57940.2 iterations 420
Cbc0038I Pass  49: (4.97 seconds) suminf.   49.43904 (784) obj. 58198.1 iterations 319
Cbc0038I Pass  50: (5.04 seconds) suminf.   51.88470 (798) obj. 57896.6 iterations 474
Cbc0038I Pass  51: (5.10 seconds) suminf.   50.17579 (801) obj. 57945.5 iterations 311
Cbc0038I Pass  52: (5.12 seconds) suminf.   49.78894 (801) obj. 57835.3 iterations 104
Cbc0038I Pass  53: (5.23 seconds) suminf.   52.59675 (811) obj. 58377.6 iterations 559
Cbc0038I Pass  54: (5.29 seconds) suminf.   50.34815 (833) obj. 58298.6 iterations 307
Cbc0038I Pass  55: (5.30 seconds) suminf.   49.95310 (812) obj. 58346.8 iterations 66
Cbc0038I Pass  56: (5.40 seconds) suminf.   50.93921 (810) obj. 58169.1 iterations 560
Cbc0038I Pass  57: (5.47 seconds) suminf.   50.15808 (776) obj. 57850.3 iterations 400
Cbc0038I Pass  58: (5.54 seconds) suminf.   51.56894 (836) obj. 58055.9 iterations 398
Cbc0038I Pass  59: (5.61 seconds) suminf.   49.67576 (865) obj. 58276.9 iterations 284
Cbc0038I Pass  60: (5.65 seconds) suminf.   49.77008 (836) obj. 58660.6 iterations 165
Cbc0038I Pass  61: (5.73 seconds) suminf.   51.15513 (774) obj. 57348 iterations 475
Cbc0038I Pass  62: (5.79 seconds) suminf.   50.11351 (787) obj. 58031.9 iterations 316
Cbc0038I Pass  63: (5.86 seconds) suminf.   50.83264 (816) obj. 58780.2 iterations 402
Cbc0038I Pass  64: (5.90 seconds) suminf.   50.09048 (820) obj. 57868 iterations 204
Cbc0038I Pass  65: (5.98 seconds) suminf.   49.38762 (795) obj. 57932.8 iterations 422
Cbc0038I Pass  66: (6.03 seconds) suminf.   49.91614 (792) obj. 58255 iterations 273
Cbc0038I Pass  67: (6.06 seconds) suminf.   49.61999 (790) obj. 57961 iterations 145
Cbc0038I Pass  68: (6.14 seconds) suminf.   51.77760 (816) obj. 58527.7 iterations 470
Cbc0038I Pass  69: (6.19 seconds) suminf.   49.43198 (805) obj. 58515.6 iterations 233
Cbc0038I Pass  70: (6.30 seconds) suminf.   51.10710 (839) obj. 57860 iterations 565
Cbc0038I Pass  71: (6.37 seconds) suminf.   50.79478 (821) obj. 57955.2 iterations 325
Cbc0038I Pass  72: (6.41 seconds) suminf.   50.35510 (842) obj. 58396.2 iterations 145
Cbc0038I Pass  73: (6.48 seconds) suminf.   49.57988 (773) obj. 58299.4 iterations 463
Cbc0038I Pass  74: (6.52 seconds) suminf.   47.90345 (762) obj. 58146.5 iterations 181
Cbc0038I Pass  75: (6.54 seconds) suminf.   47.21030 (783) obj. 58004.1 iterations 122
Cbc0038I Pass  76: (6.60 seconds) suminf.   49.03248 (792) obj. 57878.8 iterations 370
Cbc0038I Pass  77: (6.65 seconds) suminf.   47.39624 (784) obj. 57965.9 iterations 248
Cbc0038I Pass  78: (6.67 seconds) suminf.   47.12640 (776) obj. 58066.4 iterations 90
Cbc0038I Pass  79: (6.69 seconds) suminf.   46.74652 (791) obj. 58218.4 iterations 118
Cbc0038I Pass  80: (6.77 seconds) suminf.   48.60879 (786) obj. 58158.1 iterations 476
Cbc0038I Pass  81: (6.82 seconds) suminf.   48.55455 (816) obj. 58253.5 iterations 215
Cbc0038I Pass  82: (6.87 seconds) suminf.   46.73473 (804) obj. 58272.7 iterations 198
Cbc0038I Pass  83: (6.93 seconds) suminf.   48.28276 (805) obj. 57745 iterations 399
Cbc0038I Pass  84: (6.98 seconds) suminf.   47.99621 (815) obj. 57989.4 iterations 258
Cbc0038I Pass  85: (7.07 seconds) suminf.   48.19952 (802) obj. 58503.2 iterations 520
Cbc0038I Pass  86: (7.11 seconds) suminf.   46.99911 (806) obj. 58124.7 iterations 179
Cbc0038I Pass  87: (7.13 seconds) suminf.   46.77876 (810) obj. 58276.9 iterations 121
Cbc0038I Pass  88: (7.23 seconds) suminf.   48.92329 (798) obj. 57782.7 iterations 557
Cbc0038I Pass  89: (7.29 seconds) suminf.   49.79487 (811) obj. 57630 iterations 261
Cbc0038I Pass  90: (7.35 seconds) suminf.   47.76286 (788) obj. 58572 iterations 356
Cbc0038I Pass  91: (7.37 seconds) suminf.   47.20355 (782) obj. 58216.5 iterations 135
Cbc0038I Pass  92: (7.39 seconds) suminf.   46.65410 (775) obj. 58194.2 iterations 95
Cbc0038I Pass  93: (7.45 seconds) suminf.   48.79797 (791) obj. 57683.6 iterations 367
Cbc0038I Pass  94: (7.51 seconds) suminf.   47.08057 (793) obj. 58301.4 iterations 275
Cbc0038I Pass  95: (7.54 seconds) suminf.   46.45460 (796) obj. 58327 iterations 124
Cbc0038I Pass  96: (7.62 seconds) suminf.   51.00092 (804) obj. 57608.6 iterations 422
Cbc0038I Pass  97: (7.67 seconds) suminf.   47.49533 (781) obj. 58055.1 iterations 317
Cbc0038I Pass  98: (7.75 seconds) suminf.   49.79985 (790) obj. 57454.6 iterations 486
Cbc0038I Pass  99: (7.79 seconds) suminf.   48.08456 (782) obj. 57787.2 iterations 297
Cbc0038I Pass 100: (7.96 seconds) suminf.   79.99391 (776) obj. 67886.1 iterations 1132
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 3760 rows 1183 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.99 seconds)
Cbc0038I After 7.99 seconds - Feasibility pump exiting - took 6.86 seconds
Cbc0031I 30 added rows had average density of 7.9666667
Cbc0013I At root node, 30 cuts changed objective from 26624 to 30490.606 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 3.2 elements, 5 column cuts (5 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 177 row cuts average 283.1 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 218 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 31 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 30490.606 (29.57 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 30490.606 (159.74 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 30490.606 (290.28 seconds)
Cbc0010I After 300 nodes, 42 on tree, 1e+50 best solution, best possible 30490.606 (373.83 seconds)
Cbc0010I After 400 nodes, 87 on tree, 1e+50 best solution, best possible 30490.606 (473.01 seconds)
Cbc0010I After 500 nodes, 129 on tree, 1e+50 best solution, best possible 30490.606 (560.59 seconds)
Cbc0010I After 600 nodes, 179 on tree, 1e+50 best solution, best possible 30490.606 (634.48 seconds)
Cbc0010I After 700 nodes, 229 on tree, 1e+50 best solution, best possible 30490.606 (700.52 seconds)
Cbc0010I After 800 nodes, 275 on tree, 1e+50 best solution, best possible 30490.606 (772.10 seconds)
Cbc0010I After 900 nodes, 325 on tree, 1e+50 best solution, best possible 30490.606 (843.55 seconds)
Cbc0010I After 1000 nodes, 375 on tree, 1e+50 best solution, best possible 30490.606 (913.28 seconds)
Cbc0010I After 1100 nodes, 380 on tree, 1e+50 best solution, best possible 30814.993 (1014.25 seconds)
Cbc0010I After 1200 nodes, 387 on tree, 1e+50 best solution, best possible 30814.993 (1109.18 seconds)
Cbc0010I After 1300 nodes, 387 on tree, 1e+50 best solution, best possible 30814.993 (1181.07 seconds)
Cbc0010I After 1400 nodes, 380 on tree, 1e+50 best solution, best possible 30814.993 (1255.67 seconds)
Cbc0010I After 1500 nodes, 380 on tree, 1e+50 best solution, best possible 30814.993 (1330.04 seconds)
Cbc0010I After 1600 nodes, 379 on tree, 1e+50 best solution, best possible 30814.993 (1414.04 seconds)
Cbc0010I After 1700 nodes, 385 on tree, 1e+50 best solution, best possible 30814.993 (1504.41 seconds)
Cbc0010I After 1800 nodes, 375 on tree, 1e+50 best solution, best possible 30814.993 (1584.29 seconds)
Cbc0010I After 1900 nodes, 387 on tree, 1e+50 best solution, best possible 30814.993 (1656.11 seconds)
Cbc0010I After 2000 nodes, 382 on tree, 1e+50 best solution, best possible 30814.993 (1721.64 seconds)
Cbc0010I After 2100 nodes, 387 on tree, 1e+50 best solution, best possible 30814.993 (1785.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 30814.993), took 4296481 iterations and 2116 nodes (1800.45 seconds)
Cbc0032I Strong branching done 18408 times (1637430 iterations), fathomed 110 nodes and fixed 1126 variables
Cbc0035I Maximum depth 520, 0 variables fixed on reduced cost
Cuts at root node changed objective from 26624 to 30490.6
Probing was tried 1927 times and created 43769 cuts of which 0 were active after adding rounds of cuts (13.035 seconds)
Gomory was tried 1800 times and created 5037 cuts of which 0 were active after adding rounds of cuts (15.109 seconds)
Knapsack was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
MixedIntegerRounding2 was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 1800 times and created 17989 cuts of which 0 were active after adding rounds of cuts (5.182 seconds)
ZeroHalf was tried 1800 times and created 2187 cuts of which 0 were active after adding rounds of cuts (79.464 seconds)
ImplicationCuts was tried 23 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    30814.993
Enumerated nodes:               2116
Total iterations:               4296481
Time (CPU seconds):             1800.46
Time (Wallclock seconds):       1808.69

Total time (CPU seconds):       1800.47   (Wallclock seconds):       1808.72

