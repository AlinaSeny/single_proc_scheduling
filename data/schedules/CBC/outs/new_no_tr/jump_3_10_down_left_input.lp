Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_10_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_10_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 17408 - 0.00 seconds
Cgl0002I 18 variables fixed
Cgl0003I 0 fixed, 2 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 203 rows, 76 columns (76 integer (65 of which binary)) and 651 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 76 objects (76 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 49 integers unsatisfied sum - 14.5582
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20480 iterations 43
Cbc0038I Solution found of 20480
Cbc0038I Cleaned solution of 20480
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 149 rows 52 columns - 7 fixed gives 94, 33 - ok now
Cbc0038I Full problem 203 rows 76 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 20480 to 20480 (0.01 seconds)
Cbc0038I Round again with cutoff of 20171.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.52813 (28) obj. 20171 iterations 6
Cbc0038I Pass   3: suminf.    0.92869 (28) obj. 20171.9 iterations 36
Cbc0038I Pass   4: suminf.    7.10123 (36) obj. 20171.9 iterations 24
Cbc0038I Pass   5: suminf.    0.92231 (33) obj. 20171.9 iterations 24
Cbc0038I Pass   6: suminf.    0.92258 (35) obj. 20171.9 iterations 9
Cbc0038I Pass   7: suminf.    7.48279 (35) obj. 20171.9 iterations 21
Cbc0038I Pass   8: suminf.    6.77885 (27) obj. 20171.9 iterations 19
Cbc0038I Pass   9: suminf.    4.14753 (18) obj. 20171.9 iterations 8
Cbc0038I Pass  10: suminf.    0.92869 (28) obj. 20171.9 iterations 23
Cbc0038I Pass  11: suminf.    7.26678 (40) obj. 20171.9 iterations 32
Cbc0038I Pass  12: suminf.    0.92231 (33) obj. 20171.9 iterations 29
Cbc0038I Pass  13: suminf.    0.92258 (35) obj. 20171.9 iterations 8
Cbc0038I Pass  14: suminf.    7.28672 (31) obj. 20171.9 iterations 13
Cbc0038I Pass  15: suminf.   10.62649 (37) obj. 20171.9 iterations 37
Cbc0038I Pass  16: suminf.    6.99126 (25) obj. 20171.9 iterations 21
Cbc0038I Pass  17: suminf.    5.86257 (25) obj. 20171.9 iterations 15
Cbc0038I Pass  18: suminf.    8.33837 (39) obj. 20171.9 iterations 37
Cbc0038I Pass  19: suminf.    8.24602 (32) obj. 20171.9 iterations 21
Cbc0038I Pass  20: suminf.    0.88477 (33) obj. 20171.9 iterations 24
Cbc0038I Pass  21: suminf.    0.92869 (28) obj. 20171.9 iterations 8
Cbc0038I Pass  22: suminf.    8.00065 (38) obj. 20171.9 iterations 25
Cbc0038I Pass  23: suminf.    3.94436 (32) obj. 20171.9 iterations 34
Cbc0038I Pass  24: suminf.    2.82883 (33) obj. 20171.9 iterations 8
Cbc0038I Pass  25: suminf.    6.73237 (38) obj. 20171.9 iterations 38
Cbc0038I Pass  26: suminf.    6.51308 (37) obj. 20171.9 iterations 3
Cbc0038I Pass  27: suminf.    9.76426 (42) obj. 20171.9 iterations 70
Cbc0038I Pass  28: suminf.    8.60765 (39) obj. 20171.9 iterations 21
Cbc0038I Pass  29: suminf.    7.15400 (42) obj. 20171.9 iterations 15
Cbc0038I Pass  30: suminf.    6.06599 (41) obj. 20171.9 iterations 61
Cbc0038I Pass  31: suminf.    6.26511 (40) obj. 20171.9 iterations 10
Cbc0038I Pass  32: suminf.   10.24301 (42) obj. 20171.9 iterations 43
Cbc0038I Pass  33: suminf.    7.56843 (38) obj. 20171.9 iterations 23
Cbc0038I Pass  34: suminf.    5.34354 (35) obj. 20171.9 iterations 21
Cbc0038I Pass  35: suminf.    1.88935 (40) obj. 20171.9 iterations 41
Cbc0038I Pass  36: suminf.    6.44751 (33) obj. 20171.9 iterations 45
Cbc0038I Pass  37: suminf.    4.43389 (23) obj. 20171.9 iterations 19
Cbc0038I Pass  38: suminf.    5.59991 (12) obj. 20171.9 iterations 33
Cbc0038I Pass  39: suminf.    0.09991 (1) obj. 20171.9 iterations 11
Cbc0038I Solution found of 20171.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 204 rows 76 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 18432
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 195 rows 72 columns - 11 fixed gives 164, 57 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 18226.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  40: suminf.   10.59771 (46) obj. 18226.4 iterations 28
Cbc0038I Pass  41: suminf.   10.93937 (39) obj. 18226.4 iterations 3
Cbc0038I Pass  42: suminf.   11.09440 (54) obj. 18226.4 iterations 54
Cbc0038I Pass  43: suminf.    8.62975 (28) obj. 18226.4 iterations 25
Cbc0038I Pass  44: suminf.    7.47198 (32) obj. 18226.4 iterations 12
Cbc0038I Pass  45: suminf.    7.01487 (29) obj. 18226.4 iterations 29
Cbc0038I Pass  46: suminf.    6.99636 (26) obj. 18226.4 iterations 9
Cbc0038I Pass  47: suminf.    9.06948 (39) obj. 18226.4 iterations 54
Cbc0038I Pass  48: suminf.    9.59382 (39) obj. 18226.4 iterations 12
Cbc0038I Pass  49: suminf.   10.07863 (44) obj. 18226.4 iterations 42
Cbc0038I Pass  50: suminf.    8.50854 (26) obj. 18226.4 iterations 32
Cbc0038I Pass  51: suminf.    8.39344 (28) obj. 18226.4 iterations 7
Cbc0038I Pass  52: suminf.    9.47943 (37) obj. 18226.4 iterations 37
Cbc0038I Pass  53: suminf.    7.55559 (31) obj. 18226.4 iterations 24
Cbc0038I Pass  54: suminf.    7.47198 (32) obj. 18226.4 iterations 6
Cbc0038I Pass  55: suminf.   10.72587 (39) obj. 18226.4 iterations 43
Cbc0038I Pass  56: suminf.    7.77606 (45) obj. 18226.4 iterations 21
Cbc0038I Pass  57: suminf.    7.01692 (41) obj. 18226.4 iterations 7
Cbc0038I Pass  58: suminf.    8.76817 (35) obj. 18226.4 iterations 21
Cbc0038I Pass  59: suminf.    7.99953 (34) obj. 18226.4 iterations 17
Cbc0038I Pass  60: suminf.    7.95641 (31) obj. 18226.4 iterations 5
Cbc0038I Pass  61: suminf.   13.01090 (46) obj. 18226.4 iterations 37
Cbc0038I Pass  62: suminf.   11.45342 (51) obj. 18226.4 iterations 25
Cbc0038I Pass  63: suminf.    9.91918 (45) obj. 18226.4 iterations 52
Cbc0038I Pass  64: suminf.    7.86238 (39) obj. 18226.4 iterations 17
Cbc0038I Pass  65: suminf.    7.82846 (38) obj. 18226.4 iterations 1
Cbc0038I Pass  66: suminf.   10.49295 (44) obj. 18226.4 iterations 43
Cbc0038I Pass  67: suminf.   11.26622 (46) obj. 18226.4 iterations 30
Cbc0038I Pass  68: suminf.   10.58219 (48) obj. 18226.4 iterations 11
Cbc0038I Pass  69: suminf.    8.33866 (37) obj. 18226.4 iterations 37
Cbc0038I Pass  70: suminf.    8.93185 (32) obj. 18226.4 iterations 20
Cbc0038I Pass  71: suminf.    9.02419 (33) obj. 18226.4 iterations 4
Cbc0038I Pass  72: suminf.    8.50334 (37) obj. 18226.4 iterations 40
Cbc0038I Pass  73: suminf.    8.08755 (33) obj. 18226.4 iterations 24
Cbc0038I Pass  74: suminf.   14.60402 (48) obj. 18226.4 iterations 43
Cbc0038I Pass  75: suminf.    7.04583 (33) obj. 18226.4 iterations 41
Cbc0038I Pass  76: suminf.    6.86057 (32) obj. 18226.4 iterations 10
Cbc0038I Pass  77: suminf.   13.33383 (50) obj. 18226.4 iterations 41
Cbc0038I Pass  78: suminf.   13.98390 (51) obj. 18226.4 iterations 15
Cbc0038I Pass  79: suminf.   12.13769 (49) obj. 18226.4 iterations 14
Cbc0038I Pass  80: suminf.    1.00242 (13) obj. 18226.4 iterations 40
Cbc0038I Pass  81: suminf.    0.80164 (9) obj. 18226.4 iterations 18
Cbc0038I Pass  82: suminf.    0.93550 (9) obj. 18226.4 iterations 36
Cbc0038I Pass  83: suminf.    0.86857 (9) obj. 18226.4 iterations 28
Cbc0038I Pass  84: suminf.    0.80164 (9) obj. 18226.4 iterations 23
Cbc0038I Pass  85: suminf.    6.31115 (19) obj. 18226.4 iterations 65
Cbc0038I Pass  86: suminf.    6.34926 (21) obj. 18226.4 iterations 22
Cbc0038I Pass  87: suminf.    4.92796 (16) obj. 18226.4 iterations 40
Cbc0038I Pass  88: suminf.    4.92796 (16) obj. 18226.4 iterations 6
Cbc0038I Pass  89: suminf.    3.43722 (18) obj. 18226.4 iterations 41
Cbc0038I Pass  90: suminf.    3.19479 (19) obj. 18226.4 iterations 3
Cbc0038I Pass  91: suminf.    4.37710 (17) obj. 18226.4 iterations 24
Cbc0038I Pass  92: suminf.    3.69319 (17) obj. 18226.4 iterations 13
Cbc0038I Pass  93: suminf.    1.99084 (14) obj. 18226.4 iterations 35
Cbc0038I Pass  94: suminf.    1.92907 (13) obj. 18226.4 iterations 1
Cbc0038I Pass  95: suminf.    3.75699 (14) obj. 18226.4 iterations 36
Cbc0038I Pass  96: suminf.    1.51706 (14) obj. 18226.4 iterations 21
Cbc0038I Pass  97: suminf.    1.42760 (13) obj. 18226.4 iterations 7
Cbc0038I Pass  98: suminf.    3.69821 (38) obj. 18226.4 iterations 34
Cbc0038I Pass  99: suminf.   12.06196 (39) obj. 18226.4 iterations 50
Cbc0038I Pass 100: suminf.    6.22996 (40) obj. 18226.4 iterations 28
Cbc0038I Pass 101: suminf.    1.76858 (34) obj. 18226.4 iterations 34
Cbc0038I Pass 102: suminf.    1.77938 (22) obj. 18226.4 iterations 7
Cbc0038I Pass 103: suminf.    5.92721 (29) obj. 18226.4 iterations 37
Cbc0038I Pass 104: suminf.    6.29824 (32) obj. 18226.4 iterations 16
Cbc0038I Pass 105: suminf.    8.35253 (28) obj. 18226.4 iterations 39
Cbc0038I Pass 106: suminf.    5.87694 (27) obj. 18226.4 iterations 22
Cbc0038I Pass 107: suminf.    4.86162 (25) obj. 18226.4 iterations 16
Cbc0038I Pass 108: suminf.    5.71772 (24) obj. 18226.4 iterations 22
Cbc0038I Pass 109: suminf.    3.46090 (14) obj. 18226.4 iterations 8
Cbc0038I Pass 110: suminf.    3.46090 (14) obj. 18226.4 iterations 3
Cbc0038I Pass 111: suminf.    1.86162 (14) obj. 18226.4 iterations 12
Cbc0038I Pass 112: suminf.    1.98259 (15) obj. 18226.4 iterations 18
Cbc0038I Pass 113: suminf.    4.63356 (15) obj. 18226.4 iterations 34
Cbc0038I Pass 114: suminf.    3.73105 (14) obj. 18226.4 iterations 17
Cbc0038I Pass 115: suminf.    1.98259 (15) obj. 18226.4 iterations 32
Cbc0038I Pass 116: suminf.    5.30471 (22) obj. 18226.4 iterations 33
Cbc0038I Pass 117: suminf.    1.64567 (29) obj. 18226.4 iterations 27
Cbc0038I Pass 118: suminf.   10.93031 (40) obj. 18226.4 iterations 44
Cbc0038I Pass 119: suminf.    5.20181 (21) obj. 18226.4 iterations 40
Cbc0038I Pass 120: suminf.    5.03227 (26) obj. 18226.4 iterations 15
Cbc0038I Pass 121: suminf.    5.10317 (33) obj. 18226.4 iterations 11
Cbc0038I Pass 122: suminf.    6.77638 (39) obj. 18226.4 iterations 49
Cbc0038I Pass 123: suminf.    3.72994 (17) obj. 18226.4 iterations 12
Cbc0038I Pass 124: suminf.    3.72994 (17) obj. 18226.4 iterations 1
Cbc0038I Pass 125: suminf.    5.57735 (22) obj. 18226.4 iterations 31
Cbc0038I Pass 126: suminf.    5.57735 (22) obj. 18226.4 iterations 0
Cbc0038I Pass 127: suminf.    5.18912 (23) obj. 18226.4 iterations 29
Cbc0038I Pass 128: suminf.    5.11020 (22) obj. 18226.4 iterations 1
Cbc0038I Pass 129: suminf.    3.56161 (25) obj. 18226.4 iterations 8
Cbc0038I Pass 130: suminf.    3.77661 (21) obj. 18226.4 iterations 31
Cbc0038I Pass 131: suminf.    3.51790 (20) obj. 18226.4 iterations 13
Cbc0038I Pass 132: suminf.    4.78586 (20) obj. 18226.4 iterations 27
Cbc0038I Pass 133: suminf.    4.48157 (19) obj. 18226.4 iterations 9
Cbc0038I Pass 134: suminf.    4.22811 (17) obj. 18226.4 iterations 23
Cbc0038I Pass 135: suminf.    3.69642 (17) obj. 18226.4 iterations 15
Cbc0038I Pass 136: suminf.    3.36790 (16) obj. 18226.4 iterations 23
Cbc0038I Pass 137: suminf.    3.36790 (16) obj. 18226.4 iterations 10
Cbc0038I Pass 138: suminf.    3.30511 (15) obj. 18226.4 iterations 32
Cbc0038I Pass 139: suminf.    7.70166 (31) obj. 18226.4 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 194 rows 72 columns - 11 fixed gives 157, 54 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 18432 - took 0.13 seconds
Cbc0012I Integer solution of 18432 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 203 rows 76 columns, reduced to 158 rows 55 columns - 9 fixed gives 101, 32 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 17408 to 17408 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 18432, took 0 iterations and 0 nodes (0.15 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Cuts at root node changed objective from 17408 to 17408
Probing was tried 1 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                18432.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.15
Time (Wallclock seconds):       0.16

Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

