Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag333_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/dag333_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 720896 - 1.24 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 7 tightened bounds, 1406 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 205 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 7104 rows, 2453 columns (2453 integer (2409 of which binary)) and 23406 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2453 objects (2453 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1136 integers unsatisfied sum - 371.685
Cbc0038I Pass   1: (4.91 seconds) suminf.  182.79827 (1164) obj. 1.0099e+06 iterations 3337
Cbc0038I Pass   2: (5.67 seconds) suminf.  121.55387 (1308) obj. 1.15649e+06 iterations 1775
Cbc0038I Pass   3: (6.03 seconds) suminf.  111.90790 (1251) obj. 1.24012e+06 iterations 939
Cbc0038I Pass   4: (6.18 seconds) suminf.  112.18778 (1260) obj. 1.24425e+06 iterations 304
Cbc0038I Pass   5: (6.51 seconds) suminf.  110.46360 (1268) obj. 1.28636e+06 iterations 860
Cbc0038I Pass   6: (6.71 seconds) suminf.  107.72196 (1289) obj. 1.23516e+06 iterations 479
Cbc0038I Pass   7: (6.80 seconds) suminf.  107.87217 (1293) obj. 1.22841e+06 iterations 169
Cbc0038I Pass   8: (7.02 seconds) suminf.  105.07322 (1284) obj. 1.23181e+06 iterations 485
Cbc0038I Pass   9: (7.17 seconds) suminf.  104.45993 (1271) obj. 1.22939e+06 iterations 274
Cbc0038I Pass  10: (7.44 seconds) suminf.  104.72181 (1285) obj. 1.23053e+06 iterations 696
Cbc0038I Pass  11: (7.58 seconds) suminf.  104.34725 (1293) obj. 1.24522e+06 iterations 270
Cbc0038I Pass  12: (7.86 seconds) suminf.  104.51768 (1275) obj. 1.24997e+06 iterations 698
Cbc0038I Pass  13: (8.01 seconds) suminf.  103.46820 (1273) obj. 1.26794e+06 iterations 322
Cbc0038I Pass  14: (8.21 seconds) suminf.  102.25382 (1234) obj. 1.26736e+06 iterations 527
Cbc0038I Pass  15: (8.36 seconds) suminf.  100.73322 (1239) obj. 1.27915e+06 iterations 353
Cbc0038I Pass  16: (8.56 seconds) suminf.  103.71033 (1276) obj. 1.26397e+06 iterations 488
Cbc0038I Pass  17: (8.72 seconds) suminf.  102.31030 (1270) obj. 1.26791e+06 iterations 315
Cbc0038I Pass  18: (8.79 seconds) suminf.  101.82862 (1262) obj. 1.26838e+06 iterations 137
Cbc0038I Pass  19: (8.90 seconds) suminf.  101.30059 (1234) obj. 1.27179e+06 iterations 261
Cbc0038I Pass  20: (8.98 seconds) suminf.  100.96382 (1243) obj. 1.27314e+06 iterations 181
Cbc0038I Pass  21: (9.10 seconds) suminf.  101.14055 (1267) obj. 1.26713e+06 iterations 239
Cbc0038I Pass  22: (9.21 seconds) suminf.  100.80460 (1242) obj. 1.27313e+06 iterations 220
Cbc0038I Pass  23: (9.35 seconds) suminf.  103.38050 (1243) obj. 1.26445e+06 iterations 339
Cbc0038I Pass  24: (9.40 seconds) suminf.  101.72513 (1247) obj. 1.26415e+06 iterations 141
Cbc0038I Pass  25: (9.47 seconds) suminf.  100.98905 (1237) obj. 1.26947e+06 iterations 167
Cbc0038I Pass  26: (9.48 seconds) suminf.  100.98905 (1237) obj. 1.26947e+06 iterations 1
Cbc0038I Pass  27: (9.65 seconds) suminf.  104.71553 (1250) obj. 1.26247e+06 iterations 459
Cbc0038I Pass  28: (9.81 seconds) suminf.  101.82613 (1235) obj. 1.27016e+06 iterations 344
Cbc0038I Pass  29: (9.82 seconds) suminf.  101.64370 (1236) obj. 1.27013e+06 iterations 5
Cbc0038I Pass  30: (9.99 seconds) suminf.  101.68082 (1228) obj. 1.27241e+06 iterations 383
Cbc0038I Pass  31: (10.07 seconds) suminf.  101.09494 (1242) obj. 1.2817e+06 iterations 172
Cbc0038I Pass  32: (10.20 seconds) suminf.  101.21528 (1231) obj. 1.26975e+06 iterations 366
Cbc0038I Pass  33: (10.29 seconds) suminf.  100.97430 (1233) obj. 1.27616e+06 iterations 249
Cbc0038I Pass  34: (10.42 seconds) suminf.  103.47239 (1238) obj. 1.27325e+06 iterations 382
Cbc0038I Pass  35: (10.50 seconds) suminf.  101.81798 (1244) obj. 1.27615e+06 iterations 237
Cbc0038I Pass  36: (10.61 seconds) suminf.  100.79172 (1241) obj. 1.27495e+06 iterations 242
Cbc0038I Pass  37: (10.77 seconds) suminf.  103.89942 (1279) obj. 1.26275e+06 iterations 404
Cbc0038I Pass  38: (10.94 seconds) suminf.  102.36395 (1250) obj. 1.28488e+06 iterations 381
Cbc0038I Pass  39: (11.02 seconds) suminf.  101.37365 (1234) obj. 1.27741e+06 iterations 201
Cbc0038I Pass  40: (11.07 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 132
Cbc0038I Pass  41: (11.23 seconds) suminf.  101.19808 (1227) obj. 1.26286e+06 iterations 436
Cbc0038I Pass  42: (11.30 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 235
Cbc0038I Pass  43: (11.44 seconds) suminf.  101.27915 (1229) obj. 1.27777e+06 iterations 389
Cbc0038I Pass  44: (11.48 seconds) suminf.  100.97430 (1233) obj. 1.27616e+06 iterations 139
Cbc0038I Pass  45: (11.61 seconds) suminf.  101.52769 (1225) obj. 1.26164e+06 iterations 339
Cbc0038I Pass  46: (11.68 seconds) suminf.  100.79172 (1241) obj. 1.27495e+06 iterations 226
Cbc0038I Pass  47: (11.86 seconds) suminf.  101.35307 (1257) obj. 1.26829e+06 iterations 462
Cbc0038I Pass  48: (11.99 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 327
Cbc0038I Pass  49: (12.17 seconds) suminf.  103.49901 (1223) obj. 1.2614e+06 iterations 533
Cbc0038I Pass  50: (12.32 seconds) suminf.  101.74199 (1240) obj. 1.28153e+06 iterations 417
Cbc0038I Pass  51: (12.42 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 259
Cbc0038I Pass  52: (12.58 seconds) suminf.  103.89887 (1239) obj. 1.26475e+06 iterations 500
Cbc0038I Pass  53: (12.68 seconds) suminf.  102.36395 (1250) obj. 1.28488e+06 iterations 257
Cbc0038I Pass  54: (12.76 seconds) suminf.  101.37365 (1234) obj. 1.27741e+06 iterations 189
Cbc0038I Pass  55: (12.80 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 155
Cbc0038I Pass  56: (12.96 seconds) suminf.  103.49901 (1223) obj. 1.2614e+06 iterations 479
Cbc0038I Pass  57: (13.11 seconds) suminf.  101.74199 (1240) obj. 1.28153e+06 iterations 391
Cbc0038I Pass  58: (13.21 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 259
Cbc0038I Pass  59: (13.35 seconds) suminf.  101.36449 (1230) obj. 1.2777e+06 iterations 382
Cbc0038I Pass  60: (13.41 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 170
Cbc0038I Pass  61: (13.61 seconds) suminf.  103.43792 (1226) obj. 1.25728e+06 iterations 489
Cbc0038I Pass  62: (13.73 seconds) suminf.  102.33830 (1244) obj. 1.28359e+06 iterations 359
Cbc0038I Pass  63: (13.77 seconds) suminf.  101.61331 (1239) obj. 1.2774e+06 iterations 120
Cbc0038I Pass  64: (13.86 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 252
Cbc0038I Pass  65: (13.87 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 1
Cbc0038I Pass  66: (14.01 seconds) suminf.  101.27915 (1229) obj. 1.27777e+06 iterations 457
Cbc0038I Pass  67: (14.04 seconds) suminf.  100.97430 (1233) obj. 1.27616e+06 iterations 108
Cbc0038I Pass  68: (14.19 seconds) suminf.  103.29807 (1242) obj. 1.27303e+06 iterations 404
Cbc0038I Pass  69: (14.27 seconds) suminf.  101.81798 (1244) obj. 1.27615e+06 iterations 248
Cbc0038I Pass  70: (14.37 seconds) suminf.  100.79172 (1241) obj. 1.27495e+06 iterations 235
Cbc0038I Pass  71: (14.46 seconds) suminf.  101.27915 (1229) obj. 1.27777e+06 iterations 284
Cbc0038I Pass  72: (14.50 seconds) suminf.  100.97430 (1233) obj. 1.27616e+06 iterations 127
Cbc0038I Pass  73: (14.63 seconds) suminf.  103.41120 (1239) obj. 1.27131e+06 iterations 381
Cbc0038I Pass  74: (14.77 seconds) suminf.  101.74199 (1240) obj. 1.28153e+06 iterations 326
Cbc0038I Pass  75: (14.87 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 287
Cbc0038I Pass  76: (15.01 seconds) suminf.  101.09925 (1226) obj. 1.27177e+06 iterations 444
Cbc0038I Pass  77: (15.11 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 260
Cbc0038I Pass  78: (15.27 seconds) suminf.  103.00738 (1246) obj. 1.26959e+06 iterations 471
Cbc0038I Pass  79: (15.36 seconds) suminf.  101.74199 (1240) obj. 1.28153e+06 iterations 284
Cbc0038I Pass  80: (15.46 seconds) suminf.  100.78897 (1227) obj. 1.28167e+06 iterations 272
Cbc0038I Pass  81: (15.57 seconds) suminf.  101.36449 (1230) obj. 1.2777e+06 iterations 382
Cbc0038I Pass  82: (15.65 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 206
Cbc0038I Pass  83: (15.81 seconds) suminf.  103.00738 (1246) obj. 1.26959e+06 iterations 489
Cbc0038I Pass  84: (15.91 seconds) suminf.  101.74199 (1240) obj. 1.28153e+06 iterations 330
Cbc0038I Pass  85: (15.99 seconds) suminf.  100.78897 (1227) obj. 1.28167e+06 iterations 220
Cbc0038I Pass  86: (16.13 seconds) suminf.  101.70079 (1256) obj. 1.27169e+06 iterations 465
Cbc0038I Pass  87: (16.26 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 276
Cbc0038I Pass  88: (16.44 seconds) suminf.  103.43792 (1226) obj. 1.25728e+06 iterations 542
Cbc0038I Pass  89: (16.57 seconds) suminf.  102.33830 (1244) obj. 1.28359e+06 iterations 379
Cbc0038I Pass  90: (16.62 seconds) suminf.  101.61331 (1239) obj. 1.2774e+06 iterations 132
Cbc0038I Pass  91: (16.71 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 255
Cbc0038I Pass  92: (16.72 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 1
Cbc0038I Pass  93: (16.86 seconds) suminf.  101.94321 (1250) obj. 1.27176e+06 iterations 410
Cbc0038I Pass  94: (16.98 seconds) suminf.  101.08642 (1240) obj. 1.28152e+06 iterations 279
Cbc0038I Pass  95: (17.19 seconds) suminf.  103.43792 (1226) obj. 1.25728e+06 iterations 612
Cbc0038I Pass  96: (17.31 seconds) suminf.  102.33830 (1244) obj. 1.28359e+06 iterations 324
Cbc0038I Pass  97: (17.35 seconds) suminf.  101.61331 (1239) obj. 1.2774e+06 iterations 113
Cbc0038I Pass  98: (17.45 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 276
Cbc0038I Pass  99: (17.46 seconds) suminf.  100.78898 (1227) obj. 1.28167e+06 iterations 1
Cbc0038I Pass 100: (18.07 seconds) suminf.  132.81292 (1231) obj. 1.44322e+06 iterations 1987
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 551 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7104 rows 2453 columns, reduced to 5833 rows 1871 columns - too large
Cbc0038I Mini branch and bound did not improve solution (19.49 seconds)
Cbc0038I After 19.49 seconds - Feasibility pump exiting - took 15.88 seconds
Cbc0031I 47 added rows had average density of 13.212766
Cbc0013I At root node, 47 cuts changed objective from 720896 to 851968 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 53 row cuts average 97.9 elements, 0 column cuts (0 active)  in 1.261 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 82 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.620 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 851968 (45.24 seconds)
Cbc0010I After 100 nodes, 20 on tree, 1e+50 best solution, best possible 851968 (321.82 seconds)
Cbc0010I After 200 nodes, 33 on tree, 1e+50 best solution, best possible 851968 (622.24 seconds)
Cbc0010I After 300 nodes, 23 on tree, 1e+50 best solution, best possible 851968 (853.94 seconds)
Cbc0010I After 400 nodes, 21 on tree, 1e+50 best solution, best possible 851968 (1144.26 seconds)
Cbc0010I After 500 nodes, 22 on tree, 1e+50 best solution, best possible 851968 (1337.46 seconds)
Cbc0010I After 600 nodes, 14 on tree, 1e+50 best solution, best possible 851968 (1560.76 seconds)
Cbc0010I After 700 nodes, 14 on tree, 1e+50 best solution, best possible 851968 (1769.76 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 851968), took 2155648 iterations and 715 nodes (1798.38 seconds)
Cbc0032I Strong branching done 8438 times (717184 iterations), fathomed 71 nodes and fixed 1237 variables
Cbc0035I Maximum depth 36, 0 variables fixed on reduced cost
Cuts at root node changed objective from 720896 to 851968
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.212 seconds)
Gomory was tried 497 times and created 1486 cuts of which 0 were active after adding rounds of cuts (10.350 seconds)
Knapsack was tried 497 times and created 1304 cuts of which 0 were active after adding rounds of cuts (1.070 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 497 times and created 8021 cuts of which 0 were active after adding rounds of cuts (3.482 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.119 seconds)
ImplicationCuts was tried 19 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    851968.000
Enumerated nodes:               715
Total iterations:               2155648
Time (CPU seconds):             1798.38
Time (Wallclock seconds):       1798.84

Total time (CPU seconds):       1798.41   (Wallclock seconds):       1798.87

