Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang7_0_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang7_0_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 253.196 - 0.19 seconds
Cgl0002I 115 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 616 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 223 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 13 tightened bounds, 125 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 2708 rows, 939 columns (939 integer (910 of which binary)) and 9186 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 939 objects (939 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 483 integers unsatisfied sum - 159.677
Cbc0038I Pass   1: suminf.   91.46974 (475) obj. 340.122 iterations 1057
Cbc0038I Pass   2: suminf.   71.22470 (559) obj. 366.919 iterations 548
Cbc0038I Pass   3: suminf.   70.03469 (552) obj. 407.42 iterations 279
Cbc0038I Pass   4: suminf.   63.07020 (565) obj. 420.9 iterations 209
Cbc0038I Pass   5: suminf.   62.31784 (575) obj. 420.929 iterations 101
Cbc0038I Pass   6: suminf.   62.26188 (573) obj. 424.278 iterations 195
Cbc0038I Pass   7: suminf.   61.96482 (579) obj. 426.929 iterations 43
Cbc0038I Pass   8: suminf.   63.77840 (584) obj. 418.89 iterations 171
Cbc0038I Pass   9: suminf.   63.05139 (571) obj. 418.89 iterations 84
Cbc0038I Pass  10: suminf.   61.95115 (567) obj. 419.749 iterations 117
Cbc0038I Pass  11: suminf.   61.95115 (567) obj. 419.749 iterations 1
Cbc0038I Pass  12: suminf.   64.95967 (566) obj. 424.153 iterations 263
Cbc0038I Pass  13: suminf.   62.56295 (564) obj. 425.075 iterations 137
Cbc0038I Pass  14: suminf.   62.39404 (568) obj. 425.09 iterations 19
Cbc0038I Pass  15: suminf.   62.83828 (559) obj. 420.242 iterations 180
Cbc0038I Pass  16: suminf.   62.18407 (557) obj. 419.711 iterations 67
Cbc0038I Pass  17: suminf.   62.09571 (571) obj. 419.597 iterations 43
Cbc0038I Pass  18: suminf.   62.73171 (582) obj. 424.257 iterations 208
Cbc0038I Pass  19: suminf.   61.82949 (581) obj. 424.232 iterations 117
Cbc0038I Pass  20: suminf.   64.51284 (587) obj. 416.13 iterations 192
Cbc0038I Pass  21: suminf.   62.70828 (587) obj. 414.834 iterations 85
Cbc0038I Pass  22: suminf.   61.87630 (579) obj. 418.684 iterations 111
Cbc0038I Pass  23: suminf.   64.01047 (572) obj. 422.51 iterations 229
Cbc0038I Pass  24: suminf.   62.15948 (567) obj. 421.851 iterations 137
Cbc0038I Pass  25: suminf.   61.89125 (580) obj. 421.851 iterations 38
Cbc0038I Pass  26: suminf.   61.70394 (576) obj. 421.835 iterations 49
Cbc0038I Pass  27: suminf.   62.18461 (568) obj. 425.733 iterations 181
Cbc0038I Pass  28: suminf.   61.82264 (575) obj. 425.401 iterations 110
Cbc0038I Pass  29: suminf.   62.27770 (576) obj. 429.214 iterations 179
Cbc0038I Pass  30: suminf.   61.21582 (576) obj. 421.835 iterations 118
Cbc0038I Pass  31: suminf.   63.55884 (566) obj. 425.335 iterations 206
Cbc0038I Pass  32: suminf.   62.62534 (555) obj. 425.501 iterations 184
Cbc0038I Pass  33: suminf.   61.82264 (575) obj. 425.401 iterations 91
Cbc0038I Pass  34: suminf.   62.36563 (577) obj. 428.695 iterations 159
Cbc0038I Pass  35: suminf.   61.21582 (576) obj. 421.835 iterations 128
Cbc0038I Pass  36: suminf.   63.41617 (549) obj. 425.364 iterations 254
Cbc0038I Pass  37: suminf.   62.62534 (555) obj. 425.501 iterations 138
Cbc0038I Pass  38: suminf.   61.82264 (575) obj. 425.401 iterations 83
Cbc0038I Pass  39: suminf.   61.74325 (589) obj. 422.182 iterations 196
Cbc0038I Pass  40: suminf.   61.21582 (576) obj. 421.835 iterations 105
Cbc0038I Pass  41: suminf.   63.41617 (549) obj. 425.364 iterations 225
Cbc0038I Pass  42: suminf.   62.62534 (555) obj. 425.501 iterations 169
Cbc0038I Pass  43: suminf.   61.82264 (575) obj. 425.401 iterations 78
Cbc0038I Pass  44: suminf.   62.36563 (577) obj. 428.695 iterations 161
Cbc0038I Pass  45: suminf.   61.21582 (576) obj. 421.835 iterations 121
Cbc0038I Pass  46: suminf.   62.29517 (569) obj. 425.619 iterations 183
Cbc0038I Pass  47: suminf.   92.78025 (570) obj. 467.864 iterations 979
Cbc0038I Pass  48: suminf.   71.42408 (571) obj. 493.239 iterations 518
Cbc0038I Pass  49: suminf.   67.62398 (567) obj. 496.945 iterations 155
Cbc0038I Pass  50: suminf.   66.20444 (569) obj. 494.663 iterations 89
Cbc0038I Pass  51: suminf.   65.13220 (574) obj. 478.541 iterations 286
Cbc0038I Pass  52: suminf.   64.42153 (572) obj. 480.98 iterations 32
Cbc0038I Pass  53: suminf.   64.20228 (562) obj. 481.93 iterations 59
Cbc0038I Pass  54: suminf.   66.43031 (555) obj. 484.022 iterations 226
Cbc0038I Pass  55: suminf.   64.79530 (559) obj. 487.043 iterations 176
Cbc0038I Pass  56: suminf.   66.76372 (586) obj. 466.339 iterations 250
Cbc0038I Pass  57: suminf.   65.64954 (575) obj. 466.386 iterations 81
Cbc0038I Pass  58: suminf.   66.53577 (560) obj. 502.773 iterations 198
Cbc0038I Pass  59: suminf.   64.82990 (572) obj. 484.285 iterations 120
Cbc0038I Pass  60: suminf.   63.94475 (581) obj. 481.877 iterations 72
Cbc0038I Pass  61: suminf.   63.80624 (587) obj. 490.866 iterations 46
Cbc0038I Pass  62: suminf.   65.02887 (581) obj. 507.096 iterations 174
Cbc0038I Pass  63: suminf.   64.38059 (591) obj. 512.725 iterations 131
Cbc0038I Pass  64: suminf.   63.88591 (576) obj. 507.143 iterations 62
Cbc0038I Pass  65: suminf.   66.86902 (572) obj. 517.31 iterations 172
Cbc0038I Pass  66: suminf.   64.41704 (594) obj. 514.947 iterations 127
Cbc0038I Pass  67: suminf.   64.40791 (593) obj. 514.945 iterations 6
Cbc0038I Pass  68: suminf.   65.56277 (560) obj. 515.111 iterations 123
Cbc0038I Pass  69: suminf.   64.68918 (573) obj. 519.401 iterations 99
Cbc0038I Pass  70: suminf.   64.68918 (573) obj. 519.401 iterations 1
Cbc0038I Pass  71: suminf.   66.54399 (573) obj. 519.128 iterations 107
Cbc0038I Pass  72: suminf.   64.11858 (557) obj. 521.802 iterations 140
Cbc0038I Pass  73: suminf.   64.11858 (557) obj. 521.802 iterations 3
Cbc0038I Pass  74: suminf.   67.13241 (568) obj. 524.834 iterations 135
Cbc0038I Pass  75: suminf.   64.57245 (567) obj. 524.714 iterations 131
Cbc0038I Pass  76: suminf.   64.29707 (563) obj. 524.745 iterations 39
Cbc0038I Pass  77: suminf.   65.31480 (566) obj. 521.77 iterations 124
Cbc0038I Pass  78: suminf.   63.88512 (561) obj. 521.77 iterations 120
Cbc0038I Pass  79: suminf.   65.72974 (572) obj. 524.852 iterations 153
Cbc0038I Pass  80: suminf.   64.45610 (566) obj. 524.692 iterations 121
Cbc0038I Pass  81: suminf.   64.29707 (563) obj. 524.745 iterations 24
Cbc0038I Pass  82: suminf.   66.70277 (565) obj. 522.09 iterations 133
Cbc0038I Pass  83: suminf.   63.88512 (561) obj. 521.77 iterations 157
Cbc0038I Pass  84: suminf.   63.88512 (561) obj. 521.77 iterations 1
Cbc0038I Pass  85: suminf.   69.14058 (583) obj. 562.515 iterations 247
Cbc0038I Pass  86: suminf.   66.82301 (607) obj. 590.473 iterations 176
Cbc0038I Pass  87: suminf.   66.01188 (586) obj. 578.259 iterations 119
Cbc0038I Pass  88: suminf.   65.86004 (586) obj. 582.219 iterations 61
Cbc0038I Pass  89: suminf.   67.71067 (578) obj. 595.111 iterations 278
Cbc0038I Pass  90: suminf.   65.47816 (583) obj. 598.121 iterations 123
Cbc0038I Pass  91: suminf.   65.47842 (582) obj. 598.122 iterations 2
Cbc0038I Pass  92: suminf.   64.68693 (615) obj. 568.449 iterations 285
Cbc0038I Pass  93: suminf.   64.54342 (609) obj. 567.477 iterations 76
Cbc0038I Pass  94: suminf.   64.56701 (598) obj. 538.431 iterations 229
Cbc0038I Pass  95: suminf.   63.90193 (587) obj. 537.031 iterations 89
Cbc0038I Pass  96: suminf.   65.23421 (599) obj. 578.447 iterations 179
Cbc0038I Pass  97: suminf.   64.38395 (605) obj. 569.421 iterations 145
Cbc0038I Pass  98: suminf.   67.15826 (586) obj. 548.565 iterations 170
Cbc0038I Pass  99: suminf.   65.41683 (591) obj. 542.92 iterations 82
Cbc0038I Pass 100: suminf.  104.84163 (538) obj. 586.363 iterations 786
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2708 rows 939 columns, reduced to 2624 rows 897 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.79 seconds)
Cbc0038I After 2.79 seconds - Feasibility pump exiting - took 2.30 seconds
Cbc0031I 50 added rows had average density of 11.6
Cbc0013I At root node, 50 cuts changed objective from 253.23759 to 277.30082 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 199 row cuts average 395.9 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 236 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 15 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 278 (6.41 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 285 (46.62 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 285 (70.80 seconds)
Cbc0010I After 300 nodes, 7 on tree, 1e+50 best solution, best possible 285 (96.79 seconds)
Cbc0010I After 400 nodes, 21 on tree, 1e+50 best solution, best possible 285 (128.43 seconds)
Cbc0010I After 500 nodes, 71 on tree, 1e+50 best solution, best possible 285 (162.94 seconds)
Cbc0010I After 600 nodes, 118 on tree, 1e+50 best solution, best possible 285 (193.58 seconds)
Cbc0010I After 700 nodes, 168 on tree, 1e+50 best solution, best possible 285 (217.93 seconds)
Cbc0010I After 800 nodes, 218 on tree, 1e+50 best solution, best possible 285 (241.79 seconds)
Cbc0010I After 900 nodes, 268 on tree, 1e+50 best solution, best possible 285 (265.75 seconds)
Cbc0010I After 1000 nodes, 318 on tree, 1e+50 best solution, best possible 285 (286.99 seconds)
Cbc0010I After 1100 nodes, 343 on tree, 1e+50 best solution, best possible 285 (308.56 seconds)
Cbc0010I After 1200 nodes, 356 on tree, 1e+50 best solution, best possible 285 (325.93 seconds)
Cbc0010I After 1300 nodes, 352 on tree, 1e+50 best solution, best possible 285 (339.32 seconds)
Cbc0004I Integer solution of 610 found after 1077774 iterations and 1317 nodes (340.65 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1716 rows 490 columns - 78 fixed gives 707, 171 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 10 rows 5 columns
Cbc0012I Integer solution of 508 found by RINS after 1079887 iterations and 1320 nodes (341.48 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1656 rows 475 columns - 78 fixed gives 685, 166 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 26 rows 10 columns
Cbc0010I After 1400 nodes, 212 on tree, 508 best solution, best possible 298 (358.05 seconds)
Cbc0010I After 1500 nodes, 213 on tree, 508 best solution, best possible 298 (375.84 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1728 rows 503 columns - 79 fixed gives 785, 189 - ok now
Cbc0010I After 1600 nodes, 214 on tree, 508 best solution, best possible 298 (394.43 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1677 rows 514 columns - 77 fixed gives 947, 255 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 6 rows 3 columns
Cbc0012I Integer solution of 446 found by RINS after 1338722 iterations and 1700 nodes (411.10 seconds)
Cbc0010I After 1700 nodes, 153 on tree, 446 best solution, best possible 298 (411.10 seconds)
Cbc0010I After 1800 nodes, 154 on tree, 446 best solution, best possible 307 (426.41 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1533 rows 458 columns - 71 fixed gives 824, 206 - ok now
Cbc0010I After 1900 nodes, 152 on tree, 446 best solution, best possible 307 (440.71 seconds)
Cbc0010I After 2000 nodes, 147 on tree, 446 best solution, best possible 307 (450.28 seconds)
Cbc0010I After 2100 nodes, 146 on tree, 446 best solution, best possible 307 (459.93 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1667 rows 483 columns - 99 fixed gives 590, 135 - ok now
Cbc0010I After 2200 nodes, 145 on tree, 446 best solution, best possible 307 (475.30 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1621 rows 477 columns - 92 fixed gives 693, 157 - ok now
Cbc0010I After 2300 nodes, 143 on tree, 446 best solution, best possible 307 (487.75 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1627 rows 480 columns - 75 fixed gives 710, 156 - ok now
Cbc0010I After 2400 nodes, 143 on tree, 446 best solution, best possible 313 (504.49 seconds)
Cbc0010I After 2500 nodes, 136 on tree, 446 best solution, best possible 314 (523.83 seconds)
Cbc0010I After 2600 nodes, 130 on tree, 446 best solution, best possible 323 (543.46 seconds)
Cbc0010I After 2700 nodes, 128 on tree, 446 best solution, best possible 326 (559.66 seconds)
Cbc0010I After 2800 nodes, 124 on tree, 446 best solution, best possible 326 (574.61 seconds)
Cbc0010I After 2900 nodes, 124 on tree, 446 best solution, best possible 329 (585.61 seconds)
Cbc0010I After 3000 nodes, 126 on tree, 446 best solution, best possible 329 (597.81 seconds)
Cbc0010I After 3100 nodes, 137 on tree, 446 best solution, best possible 329 (608.08 seconds)
Cbc0010I After 3200 nodes, 130 on tree, 446 best solution, best possible 329 (617.49 seconds)
Cbc0010I After 3300 nodes, 134 on tree, 446 best solution, best possible 329 (625.55 seconds)
Cbc0010I After 3400 nodes, 141 on tree, 446 best solution, best possible 329 (634.91 seconds)
Cbc0010I After 3500 nodes, 142 on tree, 446 best solution, best possible 329 (641.42 seconds)
Cbc0010I After 3600 nodes, 140 on tree, 446 best solution, best possible 329 (646.78 seconds)
Cbc0010I After 3700 nodes, 138 on tree, 446 best solution, best possible 329 (652.32 seconds)
Cbc0010I After 3800 nodes, 128 on tree, 446 best solution, best possible 329 (660.57 seconds)
Cbc0010I After 3900 nodes, 133 on tree, 446 best solution, best possible 329 (672.23 seconds)
Cbc0010I After 4000 nodes, 122 on tree, 446 best solution, best possible 329 (678.35 seconds)
Cbc0010I After 4100 nodes, 122 on tree, 446 best solution, best possible 332 (689.73 seconds)
Cbc0010I After 4200 nodes, 124 on tree, 446 best solution, best possible 332 (702.55 seconds)
Cbc0010I After 4300 nodes, 126 on tree, 446 best solution, best possible 332 (707.94 seconds)
Cbc0010I After 4400 nodes, 123 on tree, 446 best solution, best possible 332 (716.22 seconds)
Cbc0010I After 4500 nodes, 128 on tree, 446 best solution, best possible 332 (724.69 seconds)
Cbc0010I After 4600 nodes, 131 on tree, 446 best solution, best possible 332 (729.22 seconds)
Cbc0010I After 4700 nodes, 121 on tree, 446 best solution, best possible 332 (738.32 seconds)
Cbc0010I After 4800 nodes, 131 on tree, 446 best solution, best possible 332 (748.12 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1522 rows 454 columns - 71 fixed gives 819, 202 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 20 rows 8 columns
Cbc0010I After 4900 nodes, 122 on tree, 446 best solution, best possible 332 (760.77 seconds)
Cbc0010I After 5000 nodes, 139 on tree, 446 best solution, best possible 332 (769.52 seconds)
Cbc0010I After 5100 nodes, 177 on tree, 446 best solution, best possible 332 (774.79 seconds)
Cbc0004I Integer solution of 445 found after 3200986 iterations and 5175 nodes (778.19 seconds)
Cbc0010I After 5200 nodes, 136 on tree, 445 best solution, best possible 332 (779.99 seconds)
Cbc0010I After 5300 nodes, 137 on tree, 445 best solution, best possible 332 (787.17 seconds)
Cbc0010I After 5400 nodes, 128 on tree, 445 best solution, best possible 332 (795.44 seconds)
Cbc0010I After 5500 nodes, 128 on tree, 445 best solution, best possible 332 (802.77 seconds)
Cbc0010I After 5600 nodes, 126 on tree, 445 best solution, best possible 332 (814.14 seconds)
Cbc0010I After 5700 nodes, 130 on tree, 445 best solution, best possible 332 (820.08 seconds)
Cbc0010I After 5800 nodes, 121 on tree, 445 best solution, best possible 332 (829.44 seconds)
Cbc0010I After 5900 nodes, 122 on tree, 445 best solution, best possible 335 (838.02 seconds)
Cbc0010I After 6000 nodes, 128 on tree, 445 best solution, best possible 335 (847.16 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1598 rows 472 columns - 215 fixed gives 94, 25 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 39 rows 14 columns
Cbc0012I Integer solution of 428 found by RINS after 3567111 iterations and 6002 nodes (847.60 seconds)
Cbc0010I After 6100 nodes, 107 on tree, 428 best solution, best possible 335 (855.23 seconds)
Cbc0010I After 6200 nodes, 101 on tree, 428 best solution, best possible 335 (866.49 seconds)
Cbc0010I After 6300 nodes, 107 on tree, 428 best solution, best possible 335 (874.63 seconds)
Cbc0010I After 6400 nodes, 107 on tree, 428 best solution, best possible 335 (882.62 seconds)
Cbc0010I After 6500 nodes, 107 on tree, 428 best solution, best possible 335 (891.29 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1657 rows 477 columns - 238 fixed gives 66, 21 - ok now
Cbc0010I After 6600 nodes, 106 on tree, 428 best solution, best possible 335 (899.49 seconds)
Cbc0010I After 6700 nodes, 108 on tree, 428 best solution, best possible 335 (907.39 seconds)
Cbc0010I After 6800 nodes, 114 on tree, 428 best solution, best possible 335 (915.48 seconds)
Cbc0010I After 6900 nodes, 113 on tree, 428 best solution, best possible 335 (924.73 seconds)
Cbc0010I After 7000 nodes, 113 on tree, 428 best solution, best possible 335 (933.10 seconds)
Cbc0010I After 7100 nodes, 108 on tree, 428 best solution, best possible 335 (941.11 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 787 rows 232 columns
Cbc0010I After 7200 nodes, 117 on tree, 428 best solution, best possible 335 (950.39 seconds)
Cbc0010I After 7300 nodes, 119 on tree, 428 best solution, best possible 335 (953.57 seconds)
Cbc0010I After 7400 nodes, 106 on tree, 428 best solution, best possible 335 (959.41 seconds)
Cbc0010I After 7500 nodes, 103 on tree, 428 best solution, best possible 338 (968.40 seconds)
Cbc0010I After 7600 nodes, 103 on tree, 428 best solution, best possible 338 (976.39 seconds)
Cbc0010I After 7700 nodes, 110 on tree, 428 best solution, best possible 338 (985.90 seconds)
Cbc0010I After 7800 nodes, 114 on tree, 428 best solution, best possible 338 (991.46 seconds)
Cbc0010I After 7900 nodes, 104 on tree, 428 best solution, best possible 338 (998.25 seconds)
Cbc0010I After 8000 nodes, 101 on tree, 428 best solution, best possible 338 (1007.06 seconds)
Cbc0010I After 8100 nodes, 99 on tree, 428 best solution, best possible 343 (1014.32 seconds)
Cbc0010I After 8200 nodes, 97 on tree, 428 best solution, best possible 343 (1021.66 seconds)
Cbc0010I After 8300 nodes, 96 on tree, 428 best solution, best possible 343 (1029.96 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1651 rows 476 columns - 235 fixed gives 56, 17 - ok now
Cbc0010I After 8400 nodes, 95 on tree, 428 best solution, best possible 343 (1041.03 seconds)
Cbc0010I After 8500 nodes, 97 on tree, 428 best solution, best possible 343 (1053.42 seconds)
Cbc0010I After 8600 nodes, 95 on tree, 428 best solution, best possible 343 (1061.85 seconds)
Cbc0010I After 8700 nodes, 100 on tree, 428 best solution, best possible 343 (1068.09 seconds)
Cbc0010I After 8800 nodes, 97 on tree, 428 best solution, best possible 343 (1072.45 seconds)
Cbc0010I After 8900 nodes, 97 on tree, 428 best solution, best possible 343 (1078.77 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1592 rows 470 columns - 218 fixed gives 59, 18 - ok now
Cbc0010I After 9000 nodes, 98 on tree, 428 best solution, best possible 343 (1086.00 seconds)
Cbc0010I After 9100 nodes, 133 on tree, 428 best solution, best possible 343 (1092.57 seconds)
Cbc0010I After 9200 nodes, 118 on tree, 428 best solution, best possible 343 (1095.08 seconds)
Cbc0010I After 9300 nodes, 124 on tree, 428 best solution, best possible 343 (1098.98 seconds)
Cbc0010I After 9400 nodes, 120 on tree, 428 best solution, best possible 343 (1102.14 seconds)
Cbc0004I Integer solution of 427 found after 4859963 iterations and 9445 nodes (1103.21 seconds)
Cbc0010I After 9500 nodes, 106 on tree, 427 best solution, best possible 343 (1107.97 seconds)
Cbc0010I After 9600 nodes, 103 on tree, 427 best solution, best possible 343 (1112.52 seconds)
Cbc0010I After 9700 nodes, 87 on tree, 427 best solution, best possible 343 (1119.01 seconds)
Cbc0010I After 9800 nodes, 98 on tree, 427 best solution, best possible 343 (1129.53 seconds)
Cbc0010I After 9900 nodes, 99 on tree, 427 best solution, best possible 343 (1133.57 seconds)
Cbc0010I After 10000 nodes, 87 on tree, 427 best solution, best possible 343 (1139.35 seconds)
Cbc0010I After 10100 nodes, 99 on tree, 427 best solution, best possible 343 (1148.05 seconds)
Cbc0010I After 10200 nodes, 91 on tree, 427 best solution, best possible 343 (1154.77 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 911 rows 262 columns
Cbc0010I After 10300 nodes, 83 on tree, 427 best solution, best possible 344 (1163.05 seconds)
Cbc0010I After 10400 nodes, 89 on tree, 427 best solution, best possible 344 (1171.02 seconds)
Cbc0010I After 10500 nodes, 86 on tree, 427 best solution, best possible 344 (1175.05 seconds)
Cbc0010I After 10600 nodes, 79 on tree, 427 best solution, best possible 344 (1182.71 seconds)
Cbc0010I After 10700 nodes, 89 on tree, 427 best solution, best possible 344 (1189.22 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 631 rows 180 columns
Cbc0010I After 10800 nodes, 96 on tree, 427 best solution, best possible 344 (1195.54 seconds)
Cbc0010I After 10900 nodes, 86 on tree, 427 best solution, best possible 344 (1201.88 seconds)
Cbc0010I After 11000 nodes, 97 on tree, 427 best solution, best possible 344 (1211.32 seconds)
Cbc0010I After 11100 nodes, 101 on tree, 427 best solution, best possible 348 (1223.95 seconds)
Cbc0010I After 11200 nodes, 107 on tree, 427 best solution, best possible 348 (1227.77 seconds)
Cbc0010I After 11300 nodes, 110 on tree, 427 best solution, best possible 348 (1230.60 seconds)
Cbc0010I After 11400 nodes, 108 on tree, 427 best solution, best possible 348 (1232.28 seconds)
Cbc0010I After 11500 nodes, 94 on tree, 427 best solution, best possible 349 (1236.81 seconds)
Cbc0010I After 11600 nodes, 82 on tree, 427 best solution, best possible 349 (1246.40 seconds)
Cbc0010I After 11700 nodes, 78 on tree, 427 best solution, best possible 349 (1260.41 seconds)
Cbc0010I After 11800 nodes, 80 on tree, 427 best solution, best possible 352 (1269.02 seconds)
Cbc0010I After 11900 nodes, 79 on tree, 427 best solution, best possible 352 (1277.34 seconds)
Cbc0010I After 12000 nodes, 78 on tree, 427 best solution, best possible 352 (1284.60 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1679 rows 496 columns - 162 fixed gives 491, 119 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 6 rows 3 columns
Cbc0012I Integer solution of 383 found by RINS after 5804246 iterations and 12002 nodes (1285.03 seconds)
Cbc0010I After 12100 nodes, 30 on tree, 383 best solution, best possible 353 (1296.01 seconds)
Cbc0010I After 12200 nodes, 34 on tree, 383 best solution, best possible 353 (1305.17 seconds)
Cbc0010I After 12300 nodes, 28 on tree, 383 best solution, best possible 353 (1314.42 seconds)
Cbc0010I After 12400 nodes, 43 on tree, 383 best solution, best possible 353 (1323.93 seconds)
Cbc0010I After 12500 nodes, 41 on tree, 383 best solution, best possible 353 (1330.55 seconds)
Cbc0010I After 12600 nodes, 34 on tree, 383 best solution, best possible 353 (1338.49 seconds)
Cbc0010I After 12700 nodes, 58 on tree, 383 best solution, best possible 353 (1345.20 seconds)
Cbc0010I After 12800 nodes, 59 on tree, 383 best solution, best possible 353 (1346.58 seconds)
Cbc0010I After 12900 nodes, 47 on tree, 383 best solution, best possible 353 (1349.82 seconds)
Cbc0010I After 13000 nodes, 38 on tree, 383 best solution, best possible 353 (1358.27 seconds)
Cbc0010I After 13100 nodes, 68 on tree, 383 best solution, best possible 353 (1363.66 seconds)
Cbc0010I After 13200 nodes, 67 on tree, 383 best solution, best possible 353 (1366.60 seconds)
Cbc0010I After 13300 nodes, 66 on tree, 383 best solution, best possible 353 (1369.76 seconds)
Cbc0010I After 13400 nodes, 53 on tree, 383 best solution, best possible 353 (1374.52 seconds)
Cbc0010I After 13500 nodes, 59 on tree, 383 best solution, best possible 353 (1378.04 seconds)
Cbc0010I After 13600 nodes, 57 on tree, 383 best solution, best possible 353 (1381.39 seconds)
Cbc0010I After 13700 nodes, 52 on tree, 383 best solution, best possible 353 (1384.66 seconds)
Cbc0010I After 13800 nodes, 57 on tree, 383 best solution, best possible 353 (1389.91 seconds)
Cbc0010I After 13900 nodes, 71 on tree, 383 best solution, best possible 353 (1393.32 seconds)
Cbc0010I After 14000 nodes, 59 on tree, 383 best solution, best possible 353 (1397.09 seconds)
Cbc0010I After 14100 nodes, 71 on tree, 383 best solution, best possible 353 (1406.33 seconds)
Cbc0010I After 14200 nodes, 67 on tree, 383 best solution, best possible 353 (1416.35 seconds)
Cbc0010I After 14300 nodes, 55 on tree, 383 best solution, best possible 354 (1423.50 seconds)
Cbc0010I After 14400 nodes, 67 on tree, 383 best solution, best possible 354 (1432.44 seconds)
Cbc0010I After 14500 nodes, 50 on tree, 383 best solution, best possible 357 (1438.68 seconds)
Cbc0010I After 14600 nodes, 49 on tree, 383 best solution, best possible 358 (1447.20 seconds)
Cbc0010I After 14700 nodes, 51 on tree, 383 best solution, best possible 358 (1455.75 seconds)
Cbc0010I After 14800 nodes, 55 on tree, 383 best solution, best possible 359 (1466.72 seconds)
Cbc0010I After 14900 nodes, 51 on tree, 383 best solution, best possible 359 (1472.18 seconds)
Cbc0010I After 15000 nodes, 54 on tree, 383 best solution, best possible 360 (1480.76 seconds)
Cbc0010I After 15100 nodes, 57 on tree, 383 best solution, best possible 360 (1488.38 seconds)
Cbc0010I After 15200 nodes, 47 on tree, 383 best solution, best possible 361 (1495.06 seconds)
Cbc0010I After 15300 nodes, 50 on tree, 383 best solution, best possible 361 (1502.49 seconds)
Cbc0010I After 15400 nodes, 49 on tree, 383 best solution, best possible 361 (1508.16 seconds)
Cbc0010I After 15500 nodes, 49 on tree, 383 best solution, best possible 361 (1516.82 seconds)
Cbc0010I After 15600 nodes, 55 on tree, 383 best solution, best possible 362 (1524.61 seconds)
Cbc0004I Integer solution of 362 found after 6969048 iterations and 15615 nodes (1524.80 seconds)
Cbc0001I Search completed - best objective 362, took 6969048 iterations and 15615 nodes (1524.81 seconds)
Cbc0032I Strong branching done 41962 times (2768492 iterations), fathomed 1356 nodes and fixed 8689 variables
Cbc0035I Maximum depth 387, 0 variables fixed on reduced cost
Cuts at root node changed objective from 253.238 to 278
Probing was tried 2444 times and created 88181 cuts of which 0 were active after adding rounds of cuts (3.281 seconds)
Gomory was tried 1753 times and created 9722 cuts of which 0 were active after adding rounds of cuts (5.606 seconds)
Knapsack was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 1753 times and created 22556 cuts of which 0 were active after adding rounds of cuts (2.399 seconds)
ZeroHalf was tried 10 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.189 seconds)
ImplicationCuts was tried 28 times and created 38 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                362.00000000
Enumerated nodes:               15615
Total iterations:               6969048
Time (CPU seconds):             1524.89
Time (Wallclock seconds):       1539.02

Total time (CPU seconds):       1524.90   (Wallclock seconds):       1539.04

