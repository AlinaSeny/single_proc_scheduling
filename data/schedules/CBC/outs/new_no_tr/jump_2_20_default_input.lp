Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_20_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_20_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 29167.5 - 0.03 seconds
Cgl0002I 58 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 199 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0004I processed model has 1132 rows, 387 columns (387 integer (366 of which binary)) and 3764 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 387 objects (387 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 228 integers unsatisfied sum - 80.9972
Cbc0038I Pass   1: suminf.   25.88510 (138) obj. 39756.5 iterations 394
Cbc0038I Pass   2: suminf.   17.62118 (92) obj. 39936 iterations 242
Cbc0038I Pass   3: suminf.   12.47543 (72) obj. 40913 iterations 139
Cbc0038I Pass   4: suminf.   10.74942 (73) obj. 42069.4 iterations 137
Cbc0038I Pass   5: suminf.   10.38529 (71) obj. 43489.6 iterations 26
Cbc0038I Pass   6: suminf.    7.03017 (56) obj. 45084.9 iterations 174
Cbc0038I Pass   7: suminf.    6.12020 (62) obj. 45026.2 iterations 68
Cbc0038I Pass   8: suminf.    3.28011 (20) obj. 50051.1 iterations 234
Cbc0038I Pass   9: suminf.    1.78853 (23) obj. 50561.2 iterations 75
Cbc0038I Pass  10: suminf.    0.33161 (7) obj. 44032 iterations 232
Cbc0038I Pass  11: suminf.    0.33161 (7) obj. 44032 iterations 13
Cbc0038I Pass  12: suminf.    0.37000 (8) obj. 44032 iterations 34
Cbc0038I Pass  13: suminf.   15.88725 (88) obj. 46786.5 iterations 240
Cbc0038I Pass  14: suminf.    4.63980 (39) obj. 47601.2 iterations 261
Cbc0038I Pass  15: suminf.    2.31837 (31) obj. 44167 iterations 101
Cbc0038I Pass  16: suminf.    0.00000 (0) obj. 44032 iterations 20
Cbc0038I Solution found of 44032
Cbc0038I Cleaned solution of 44032
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I Round again with cutoff of 42585.5
Cbc0038I Pass  17: suminf.   25.88510 (138) obj. 39756.5 iterations 0
Cbc0038I Pass  18: suminf.   17.62118 (92) obj. 39936 iterations 217
Cbc0038I Pass  19: suminf.   12.47543 (72) obj. 40913 iterations 177
Cbc0038I Pass  20: suminf.   10.74942 (73) obj. 42069.4 iterations 139
Cbc0038I Pass  21: suminf.   10.56635 (71) obj. 42585.5 iterations 25
Cbc0038I Pass  22: suminf.    6.12377 (53) obj. 42585.5 iterations 133
Cbc0038I Pass  23: suminf.    4.59965 (47) obj. 42585.5 iterations 65
Cbc0038I Pass  24: suminf.    1.98354 (17) obj. 42585.5 iterations 75
Cbc0038I Pass  25: suminf.    1.23148 (18) obj. 42585.5 iterations 39
Cbc0038I Pass  26: suminf.    1.64740 (20) obj. 42585.5 iterations 45
Cbc0038I Pass  27: suminf.    4.29252 (29) obj. 42585.5 iterations 109
Cbc0038I Pass  28: suminf.    4.29252 (29) obj. 42585.5 iterations 6
Cbc0038I Pass  29: suminf.    6.70886 (25) obj. 42585.5 iterations 403
Cbc0038I Pass  30: suminf.    4.50800 (17) obj. 42585.5 iterations 31
Cbc0038I Pass  31: suminf.    0.45303 (1) obj. 42585.5 iterations 407
Cbc0038I Solution found of 42585.5
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1133 rows 387 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 41984
Cbc0038I Before mini branch and bound, 108 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1132 rows 387 columns, reduced to 909 rows 279 columns - 134 fixed gives 197, 56 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 56 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I Round again with cutoff of 39501.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.   24.82008 (145) obj. 39501 iterations 21
Cbc0038I Pass  33: suminf.   18.42637 (101) obj. 39501.5 iterations 233
Cbc0038I Pass  34: suminf.   13.90850 (76) obj. 39501.5 iterations 141
Cbc0038I Pass  35: suminf.   11.41308 (81) obj. 39501.5 iterations 63
Cbc0038I Pass  36: suminf.   11.44869 (102) obj. 39501.5 iterations 67
Cbc0038I Pass  37: suminf.   10.39625 (83) obj. 39501.5 iterations 81
Cbc0038I Pass  38: suminf.   10.40743 (86) obj. 39501.5 iterations 24
Cbc0038I Pass  39: suminf.    6.32255 (59) obj. 39501.5 iterations 122
Cbc0038I Pass  40: suminf.    3.69233 (47) obj. 39501.5 iterations 37
Cbc0038I Pass  41: suminf.    4.60520 (40) obj. 39501.5 iterations 245
Cbc0038I Pass  42: suminf.    3.61579 (46) obj. 39501.5 iterations 77
Cbc0038I Pass  43: suminf.   10.60551 (68) obj. 39501.5 iterations 311
Cbc0038I Pass  44: suminf.   10.31188 (76) obj. 39501.5 iterations 46
Cbc0038I Pass  45: suminf.    9.34976 (56) obj. 39501.5 iterations 15
Cbc0038I Pass  46: suminf.    1.76676 (38) obj. 39501.5 iterations 168
Cbc0038I Pass  47: suminf.    1.53977 (67) obj. 39501.5 iterations 49
Cbc0038I Pass  48: suminf.    7.13142 (36) obj. 39501.5 iterations 151
Cbc0038I Pass  49: suminf.    5.35487 (42) obj. 39501.5 iterations 76
Cbc0038I Pass  50: suminf.    5.94954 (42) obj. 39501.5 iterations 222
Cbc0038I Pass  51: suminf.    4.40058 (39) obj. 39501.5 iterations 40
Cbc0038I Pass  52: suminf.    6.36048 (57) obj. 39501.5 iterations 212
Cbc0038I Pass  53: suminf.    4.22050 (38) obj. 39501.5 iterations 46
Cbc0038I Pass  54: suminf.   11.44606 (57) obj. 39501.5 iterations 364
Cbc0038I Pass  55: suminf.    6.54987 (42) obj. 39501.5 iterations 141
Cbc0038I Pass  56: suminf.    8.81978 (48) obj. 39501.5 iterations 166
Cbc0038I Pass  57: suminf.    3.05056 (27) obj. 39501.5 iterations 99
Cbc0038I Pass  58: suminf.    1.33897 (22) obj. 39501.5 iterations 109
Cbc0038I Pass  59: suminf.    3.67156 (34) obj. 39501.5 iterations 261
Cbc0038I Pass  60: suminf.    3.29143 (31) obj. 39501.5 iterations 24
Cbc0038I Pass  61: suminf.    3.01758 (31) obj. 39501.5 iterations 38
Cbc0038I Pass  62: suminf.    6.55017 (38) obj. 39501.5 iterations 199
Cbc0038I Pass  63: suminf.    6.36489 (55) obj. 39501.5 iterations 45
Cbc0038I Pass  64: suminf.    8.19747 (43) obj. 39501.5 iterations 255
Cbc0038I Pass  65: suminf.    2.93913 (43) obj. 39501.5 iterations 200
Cbc0038I Pass  66: suminf.    5.24784 (38) obj. 39501.5 iterations 84
Cbc0038I Pass  67: suminf.    4.97678 (41) obj. 39501.5 iterations 149
Cbc0038I Pass  68: suminf.    7.48970 (54) obj. 39501.5 iterations 196
Cbc0038I Pass  69: suminf.    5.03299 (38) obj. 39501.5 iterations 117
Cbc0038I Pass  70: suminf.    4.52047 (42) obj. 39501.5 iterations 46
Cbc0038I Pass  71: suminf.    7.03575 (59) obj. 39501.5 iterations 158
Cbc0038I Pass  72: suminf.    5.59907 (60) obj. 39501.5 iterations 65
Cbc0038I Pass  73: suminf.    4.91355 (47) obj. 39501.5 iterations 76
Cbc0038I Pass  74: suminf.    3.60885 (50) obj. 39501.5 iterations 30
Cbc0038I Pass  75: suminf.    4.49305 (44) obj. 39501.5 iterations 97
Cbc0038I Pass  76: suminf.    3.67898 (24) obj. 39501.5 iterations 28
Cbc0038I Pass  77: suminf.    7.73758 (47) obj. 39501.5 iterations 175
Cbc0038I Pass  78: suminf.    6.84056 (47) obj. 39501.5 iterations 20
Cbc0038I Pass  79: suminf.    6.65663 (37) obj. 39501.5 iterations 147
Cbc0038I Pass  80: suminf.    5.92189 (40) obj. 39501.5 iterations 11
Cbc0038I Pass  81: suminf.    4.38698 (43) obj. 39501.5 iterations 64
Cbc0038I Pass  82: suminf.    3.47786 (41) obj. 39501.5 iterations 10
Cbc0038I Pass  83: suminf.    2.57386 (59) obj. 39501.5 iterations 94
Cbc0038I Pass  84: suminf.    2.57386 (59) obj. 39501.5 iterations 0
Cbc0038I Pass  85: suminf.   15.96515 (89) obj. 39501.5 iterations 229
Cbc0038I Pass  86: suminf.    9.25269 (56) obj. 39501.5 iterations 118
Cbc0038I Pass  87: suminf.    6.32918 (50) obj. 39501.5 iterations 124
Cbc0038I Pass  88: suminf.    6.72375 (58) obj. 39501.5 iterations 279
Cbc0038I Pass  89: suminf.    6.29347 (61) obj. 39501.5 iterations 36
Cbc0038I Pass  90: suminf.    4.91224 (40) obj. 39501.5 iterations 53
Cbc0038I Pass  91: suminf.    4.91224 (40) obj. 39501.5 iterations 9
Cbc0038I Pass  92: suminf.    8.33126 (47) obj. 39501.5 iterations 110
Cbc0038I Pass  93: suminf.    7.33845 (48) obj. 39501.5 iterations 13
Cbc0038I Pass  94: suminf.    3.18372 (36) obj. 39501.5 iterations 42
Cbc0038I Pass  95: suminf.    3.18372 (36) obj. 39501.5 iterations 4
Cbc0038I Pass  96: suminf.    9.06844 (55) obj. 39501.5 iterations 148
Cbc0038I Pass  97: suminf.    4.88865 (38) obj. 39501.5 iterations 85
Cbc0038I Pass  98: suminf.    3.52930 (43) obj. 39501.5 iterations 275
Cbc0038I Pass  99: suminf.    3.40681 (60) obj. 39501.5 iterations 38
Cbc0038I Pass 100: suminf.    5.60094 (47) obj. 39501.5 iterations 100
Cbc0038I Pass 101: suminf.    5.60094 (47) obj. 39501.5 iterations 7
Cbc0038I Pass 102: suminf.    6.00441 (45) obj. 39501.5 iterations 84
Cbc0038I Pass 103: suminf.    5.29835 (44) obj. 39501.5 iterations 142
Cbc0038I Pass 104: suminf.    5.04595 (44) obj. 39501.5 iterations 12
Cbc0038I Pass 105: suminf.    5.58533 (52) obj. 39501.5 iterations 201
Cbc0038I Pass 106: suminf.    5.40418 (41) obj. 39501.5 iterations 27
Cbc0038I Pass 107: suminf.    7.97177 (54) obj. 39501.5 iterations 149
Cbc0038I Pass 108: suminf.    7.08624 (56) obj. 39501.5 iterations 16
Cbc0038I Pass 109: suminf.    4.59447 (30) obj. 39501.5 iterations 72
Cbc0038I Pass 110: suminf.    4.05121 (34) obj. 39501.5 iterations 24
Cbc0038I Pass 111: suminf.    2.37183 (23) obj. 39501.5 iterations 73
Cbc0038I Pass 112: suminf.    2.37153 (43) obj. 39501.5 iterations 60
Cbc0038I Pass 113: suminf.    4.18223 (47) obj. 39501.5 iterations 145
Cbc0038I Pass 114: suminf.    3.87338 (59) obj. 39501.5 iterations 34
Cbc0038I Pass 115: suminf.    5.78497 (82) obj. 39501.5 iterations 236
Cbc0038I Pass 116: suminf.   13.78135 (59) obj. 39501.5 iterations 256
Cbc0038I Pass 117: suminf.    6.54665 (50) obj. 39501.5 iterations 60
Cbc0038I Pass 118: suminf.   12.94724 (53) obj. 39501.5 iterations 169
Cbc0038I Pass 119: suminf.   11.46654 (72) obj. 39501.5 iterations 98
Cbc0038I Pass 120: suminf.   11.11892 (72) obj. 39501.5 iterations 15
Cbc0038I Pass 121: suminf.   10.60414 (75) obj. 39501.5 iterations 13
Cbc0038I Pass 122: suminf.    7.83921 (63) obj. 39501.5 iterations 115
Cbc0038I Pass 123: suminf.    7.16124 (59) obj. 39501.5 iterations 18
Cbc0038I Pass 124: suminf.    6.61260 (60) obj. 39501.5 iterations 122
Cbc0038I Pass 125: suminf.    5.11444 (63) obj. 39501.5 iterations 47
Cbc0038I Pass 126: suminf.   10.19135 (48) obj. 39501.5 iterations 262
Cbc0038I Pass 127: suminf.    7.00117 (45) obj. 39501.5 iterations 211
Cbc0038I Pass 128: suminf.    6.86889 (46) obj. 39501.5 iterations 29
Cbc0038I Pass 129: suminf.    5.30962 (44) obj. 39501.5 iterations 40
Cbc0038I Pass 130: suminf.    4.62449 (41) obj. 39501.5 iterations 19
Cbc0038I Pass 131: suminf.   38.23380 (160) obj. 39501.5 iterations 243
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1132 rows 387 columns, reduced to 1000 rows 323 columns - 135 fixed gives 279, 83 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 58 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (1.02 seconds)
Cbc0038I After 1.02 seconds - Feasibility pump exiting with objective of 41984 - took 0.96 seconds
Cbc0012I Integer solution of 41984 found by feasibility pump after 0 iterations and 0 nodes (1.02 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 828 rows 240 columns - 134 fixed gives 62, 18 - ok now
Cbc0031I 48 added rows had average density of 86.854167
Cbc0013I At root node, 48 cuts changed objective from 29575.529 to 33792 in 61 passes
Cbc0014I Cut generator 0 (Probing) - 75 row cuts average 3.6 elements, 11 column cuts (11 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1504 row cuts average 346.3 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 322 row cuts average 169.0 elements, 0 column cuts (0 active)  in 0.316 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 43 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.306 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 41984 best solution, best possible 33792 (6.72 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 681 rows 202 columns - 108 fixed gives 47, 12 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 733 rows 221 columns - 104 fixed gives 51, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 737 rows 223 columns - 104 fixed gives 51, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 252 rows 84 columns
Cbc0038I Full problem 1132 rows 387 columns, reduced to 287 rows 94 columns
Cbc0038I Full problem 1132 rows 387 columns, reduced to 725 rows 218 columns - 103 fixed gives 51, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 719 rows 216 columns - 103 fixed gives 50, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 732 rows 221 columns - 104 fixed gives 51, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 730 rows 220 columns - 104 fixed gives 51, 18 - ok now
Cbc0010I After 1000 nodes, 3 on tree, 41984 best solution, best possible 33837 (62.22 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 735 rows 222 columns - 107 fixed gives 51, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 789 rows 236 columns - 108 fixed gives 62, 18 - ok now
Cbc0010I After 2000 nodes, 1 on tree, 41984 best solution, best possible 34622 (116.45 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 771 rows 231 columns - 103 fixed gives 62, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 783 rows 234 columns - 106 fixed gives 62, 18 - ok now
Cbc0010I After 3000 nodes, 1 on tree, 41984 best solution, best possible 35097 (174.43 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 783 rows 234 columns - 106 fixed gives 62, 18 - ok now
Cbc0010I After 4000 nodes, 1 on tree, 41984 best solution, best possible 35577 (235.33 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 803 rows 237 columns - 111 fixed gives 61, 18 - ok now
Cbc0038I Full problem 1132 rows 387 columns, reduced to 230 rows 76 columns
Cbc0010I After 5000 nodes, 3 on tree, 41984 best solution, best possible 35932 (296.34 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 793 rows 235 columns - 108 fixed gives 61, 18 - ok now
Cbc0010I After 6000 nodes, 1 on tree, 41984 best solution, best possible 36167 (357.42 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 797 rows 236 columns - 109 fixed gives 61, 18 - ok now
Cbc0010I After 7000 nodes, 1 on tree, 41984 best solution, best possible 36393 (417.79 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 790 rows 234 columns - 108 fixed gives 43, 12 - ok now
Cbc0010I After 8000 nodes, 1 on tree, 41984 best solution, best possible 36704 (479.13 seconds)
Cbc0010I After 9000 nodes, 2 on tree, 41984 best solution, best possible 36998 (540.68 seconds)
Cbc0010I After 10000 nodes, 2 on tree, 41984 best solution, best possible 37233 (591.76 seconds)
Cbc0038I Full problem 1132 rows 387 columns, reduced to 772 rows 226 columns - 108 fixed gives 12, 4 - ok now
Cbc0010I After 11000 nodes, 2 on tree, 41984 best solution, best possible 37445 (640.56 seconds)
Cbc0010I After 12000 nodes, 1 on tree, 41984 best solution, best possible 37667 (690.00 seconds)
Cbc0016I Integer solution of 37888 found by strong branching after 6309589 iterations and 12999 nodes (738.31 seconds)
Cbc0001I Search completed - best objective 37888, took 6309589 iterations and 12999 nodes (738.31 seconds)
Cbc0032I Strong branching done 68536 times (2432878 iterations), fathomed 3644 nodes and fixed 16085 variables
Cbc0035I Maximum depth 4097, 2 variables fixed on reduced cost
Cuts at root node changed objective from 29575.5 to 33792
Probing was tried 10878 times and created 134465 cuts of which 0 were active after adding rounds of cuts (9.130 seconds)
Gomory was tried 10523 times and created 23130 cuts of which 0 were active after adding rounds of cuts (11.949 seconds)
Knapsack was tried 61 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 61 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 61 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
FlowCover was tried 61 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
TwoMirCuts was tried 10523 times and created 36838 cuts of which 0 were active after adding rounds of cuts (6.192 seconds)
ZeroHalf was tried 61 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.306 seconds)

Result - Optimal solution found

Objective value:                37888.00000000
Enumerated nodes:               12999
Total iterations:               6309589
Time (CPU seconds):             738.37
Time (Wallclock seconds):       745.59

Total time (CPU seconds):       738.37   (Wallclock seconds):       745.60

