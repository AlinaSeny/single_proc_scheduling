Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_4_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_4_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 272.1 - 2.72 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 26 tightened bounds, 1710 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 798 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 428 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 156 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 35 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26753 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 995 integers unsatisfied sum - 246.006
Cbc0038I Pass   1: (9.94 seconds) suminf.  105.82605 (815) obj. 410.541 iterations 3466
Cbc0038I Pass   2: (10.25 seconds) suminf.   83.10774 (815) obj. 403.647 iterations 1366
Cbc0038I Pass   3: (10.37 seconds) suminf.   84.93569 (800) obj. 398.523 iterations 445
Cbc0038I Pass   4: (10.41 seconds) suminf.   84.61930 (790) obj. 399.468 iterations 164
Cbc0038I Pass   5: (10.45 seconds) suminf.   84.08271 (796) obj. 399.75 iterations 153
Cbc0038I Pass   6: (10.66 seconds) suminf.   81.52769 (777) obj. 399.737 iterations 866
Cbc0038I Pass   7: (10.77 seconds) suminf.   78.92517 (782) obj. 401.675 iterations 388
Cbc0038I Pass   8: (10.83 seconds) suminf.   78.04644 (817) obj. 402.694 iterations 185
Cbc0038I Pass   9: (10.89 seconds) suminf.   77.30931 (797) obj. 407.119 iterations 196
Cbc0038I Pass  10: (11.09 seconds) suminf.   73.71003 (743) obj. 410.594 iterations 875
Cbc0038I Pass  11: (11.27 seconds) suminf.   69.74303 (771) obj. 422.67 iterations 730
Cbc0038I Pass  12: (11.48 seconds) suminf.   68.78997 (762) obj. 422.959 iterations 910
Cbc0038I Pass  13: (11.57 seconds) suminf.   66.93508 (747) obj. 445.531 iterations 298
Cbc0038I Pass  14: (11.64 seconds) suminf.   65.50814 (746) obj. 447.492 iterations 241
Cbc0038I Pass  15: (11.80 seconds) suminf.   62.95700 (727) obj. 445.084 iterations 606
Cbc0038I Pass  16: (11.87 seconds) suminf.   64.04471 (721) obj. 452.562 iterations 222
Cbc0038I Pass  17: (12.02 seconds) suminf.   66.18750 (694) obj. 450.007 iterations 587
Cbc0038I Pass  18: (12.14 seconds) suminf.   65.98551 (697) obj. 449.084 iterations 458
Cbc0038I Pass  19: (12.17 seconds) suminf.   66.24603 (690) obj. 449.63 iterations 76
Cbc0038I Pass  20: (12.37 seconds) suminf.   68.20082 (750) obj. 450.288 iterations 787
Cbc0038I Pass  21: (12.47 seconds) suminf.   64.71996 (721) obj. 449.752 iterations 352
Cbc0038I Pass  22: (12.51 seconds) suminf.   63.24855 (727) obj. 449.733 iterations 125
Cbc0038I Pass  23: (12.72 seconds) suminf.   58.64316 (657) obj. 453.41 iterations 862
Cbc0038I Pass  24: (12.80 seconds) suminf.   58.17029 (664) obj. 449.602 iterations 297
Cbc0038I Pass  25: (12.98 seconds) suminf.   58.05305 (671) obj. 449.861 iterations 784
Cbc0038I Pass  26: (13.07 seconds) suminf.   59.65417 (702) obj. 451.651 iterations 298
Cbc0038I Pass  27: (13.13 seconds) suminf.   59.66080 (681) obj. 449.728 iterations 199
Cbc0038I Pass  28: (13.20 seconds) suminf.   59.14953 (671) obj. 449.708 iterations 265
Cbc0038I Pass  29: (13.37 seconds) suminf.   53.83553 (695) obj. 495.248 iterations 756
Cbc0038I Pass  30: (13.40 seconds) suminf.   52.42710 (668) obj. 496.048 iterations 115
Cbc0038I Pass  31: (13.53 seconds) suminf.   54.17899 (641) obj. 462 iterations 664
Cbc0038I Pass  32: (13.63 seconds) suminf.   50.40166 (633) obj. 462 iterations 458
Cbc0038I Pass  33: (13.65 seconds) suminf.   50.29411 (633) obj. 462 iterations 50
Cbc0038I Pass  34: (13.78 seconds) suminf.   50.03305 (655) obj. 462 iterations 653
Cbc0038I Pass  35: (13.89 seconds) suminf.   48.80990 (639) obj. 462 iterations 459
Cbc0038I Pass  36: (13.98 seconds) suminf.   50.04902 (639) obj. 462 iterations 348
Cbc0038I Pass  37: (14.18 seconds) suminf.   49.93484 (640) obj. 462 iterations 861
Cbc0038I Pass  38: (14.31 seconds) suminf.   50.16354 (648) obj. 462 iterations 562
Cbc0038I Pass  39: (14.55 seconds) suminf.   50.57692 (652) obj. 467.069 iterations 1170
Cbc0038I Pass  40: (14.66 seconds) suminf.   50.50258 (634) obj. 472.61 iterations 549
Cbc0038I Pass  41: (14.81 seconds) suminf.   49.42478 (657) obj. 462 iterations 777
Cbc0038I Pass  42: (14.86 seconds) suminf.   48.82347 (661) obj. 462 iterations 211
Cbc0038I Pass  43: (15.03 seconds) suminf.   51.66116 (634) obj. 465.432 iterations 804
Cbc0038I Pass  44: (15.28 seconds) suminf.   48.26072 (643) obj. 489.983 iterations 1169
Cbc0038I Pass  45: (15.35 seconds) suminf.   48.94304 (630) obj. 519.963 iterations 242
Cbc0038I Pass  46: (15.48 seconds) suminf.   48.69457 (651) obj. 549.536 iterations 573
Cbc0038I Pass  47: (15.57 seconds) suminf.   48.25253 (665) obj. 549.529 iterations 345
Cbc0038I Pass  48: (15.75 seconds) suminf.   50.95147 (647) obj. 549.925 iterations 753
Cbc0038I Pass  49: (15.83 seconds) suminf.   50.63960 (636) obj. 549.941 iterations 300
Cbc0038I Pass  50: (16.06 seconds) suminf.   48.62712 (604) obj. 495.997 iterations 1168
Cbc0038I Pass  51: (16.15 seconds) suminf.   48.40737 (630) obj. 484.371 iterations 452
Cbc0038I Pass  52: (16.28 seconds) suminf.   48.85803 (636) obj. 490.282 iterations 677
Cbc0038I Pass  53: (16.32 seconds) suminf.   48.55435 (635) obj. 482.546 iterations 165
Cbc0038I Pass  54: (16.35 seconds) suminf.   48.08160 (633) obj. 484.835 iterations 111
Cbc0038I Pass  55: (16.59 seconds) suminf.   48.84274 (678) obj. 478.849 iterations 1037
Cbc0038I Pass  56: (16.71 seconds) suminf.   48.14103 (650) obj. 483.864 iterations 413
Cbc0038I Pass  57: (16.86 seconds) suminf.   48.97639 (620) obj. 483.95 iterations 655
Cbc0038I Pass  58: (17.07 seconds) suminf.   47.26420 (652) obj. 483.786 iterations 1064
Cbc0038I Pass  59: (17.35 seconds) suminf.   52.63581 (647) obj. 466.077 iterations 1468
Cbc0038I Pass  60: (17.54 seconds) suminf.   48.60014 (644) obj. 494.047 iterations 1015
Cbc0038I Pass  61: (17.57 seconds) suminf.   48.97100 (630) obj. 493.918 iterations 144
Cbc0038I Pass  62: (17.83 seconds) suminf.   54.98989 (689) obj. 498.217 iterations 1232
Cbc0038I Pass  63: (17.97 seconds) suminf.   53.17098 (630) obj. 489.85 iterations 641
Cbc0038I Pass  64: (18.01 seconds) suminf.   52.99766 (632) obj. 485.797 iterations 140
Cbc0038I Pass  65: (18.23 seconds) suminf.   52.54844 (577) obj. 477.847 iterations 1341
Cbc0038I Pass  66: (18.29 seconds) suminf.   51.34583 (594) obj. 475.159 iterations 296
Cbc0038I Pass  67: (18.33 seconds) suminf.   50.75809 (582) obj. 475.877 iterations 173
Cbc0038I Pass  68: (18.36 seconds) suminf.   50.54831 (585) obj. 475.921 iterations 131
Cbc0038I Pass  69: (18.59 seconds) suminf.   48.02195 (624) obj. 483.203 iterations 1148
Cbc0038I Pass  70: (18.68 seconds) suminf.   48.91970 (578) obj. 477.346 iterations 342
Cbc0038I Pass  71: (18.71 seconds) suminf.   48.46069 (572) obj. 481.934 iterations 150
Cbc0038I Pass  72: (18.97 seconds) suminf.   49.01952 (592) obj. 476.169 iterations 1202
Cbc0038I Pass  73: (19.13 seconds) suminf.   48.08910 (582) obj. 477.299 iterations 677
Cbc0038I Pass  74: (19.38 seconds) suminf.   52.70902 (546) obj. 475.283 iterations 1347
Cbc0038I Pass  75: (19.46 seconds) suminf.   51.16097 (566) obj. 475.112 iterations 395
Cbc0038I Pass  76: (19.59 seconds) suminf.   52.56007 (562) obj. 473.23 iterations 764
Cbc0038I Pass  77: (19.76 seconds) suminf.   49.35928 (563) obj. 473.065 iterations 818
Cbc0038I Pass  78: (19.78 seconds) suminf.   49.20726 (560) obj. 473.068 iterations 21
Cbc0038I Pass  79: (20.11 seconds) suminf.   51.77007 (560) obj. 475.407 iterations 1835
Cbc0038I Pass  80: (20.23 seconds) suminf.   50.25386 (547) obj. 475.198 iterations 667
Cbc0038I Pass  81: (20.43 seconds) suminf.   50.73741 (576) obj. 474.938 iterations 1086
Cbc0038I Pass  82: (20.50 seconds) suminf.   49.80953 (550) obj. 472.957 iterations 430
Cbc0038I Pass  83: (20.67 seconds) suminf.   50.92736 (555) obj. 477.279 iterations 911
Cbc0038I Pass  84: (20.76 seconds) suminf.   50.28169 (545) obj. 475.198 iterations 499
Cbc0038I Pass  85: (20.91 seconds) suminf.   51.10734 (592) obj. 462 iterations 916
Cbc0038I Pass  86: (21.15 seconds) suminf.   49.60550 (572) obj. 462 iterations 1126
Cbc0038I Pass  87: (21.20 seconds) suminf.   48.95486 (566) obj. 462 iterations 229
Cbc0038I Pass  88: (21.24 seconds) suminf.   48.63413 (566) obj. 462 iterations 217
Cbc0038I Pass  89: (21.48 seconds) suminf.   50.33433 (579) obj. 462.141 iterations 1240
Cbc0038I Pass  90: (21.59 seconds) suminf.   49.24717 (580) obj. 462.38 iterations 565
Cbc0038I Pass  91: (21.86 seconds) suminf.   49.19155 (578) obj. 462 iterations 1595
Cbc0038I Pass  92: (22.00 seconds) suminf.   48.26384 (573) obj. 462 iterations 765
Cbc0038I Pass  93: (22.21 seconds) suminf.   50.80955 (579) obj. 462.263 iterations 1171
Cbc0038I Pass  94: (22.38 seconds) suminf.   48.97374 (597) obj. 462.18 iterations 911
Cbc0038I Pass  95: (22.49 seconds) suminf.   48.99791 (562) obj. 462 iterations 517
Cbc0038I Pass  96: (22.56 seconds) suminf.   49.01719 (580) obj. 462.637 iterations 293
Cbc0038I Pass  97: (22.78 seconds) suminf.   49.82987 (562) obj. 462 iterations 1156
Cbc0038I Pass  98: (22.89 seconds) suminf.   48.83159 (567) obj. 462 iterations 500
Cbc0038I Pass  99: (23.07 seconds) suminf.   48.54321 (546) obj. 462 iterations 987
Cbc0038I Pass 100: (23.46 seconds) suminf.   72.98943 (616) obj. 534.389 iterations 2216
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 869 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5051 rows 1596 columns - too large
Cbc0038I Mini branch and bound did not improve solution (24.48 seconds)
Cbc0038I After 24.48 seconds - Feasibility pump exiting - took 15.42 seconds
Cbc0031I 107 added rows had average density of 7.4859813
Cbc0013I At root node, 107 cuts changed objective from 273.90698 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 82 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.206 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 224 row cuts average 20.7 elements, 0 column cuts (0 active)  in 1.124 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 386 row cuts average 26.6 elements, 0 column cuts (0 active)  in 0.520 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 6 row cuts average 33.8 elements, 0 column cuts (0 active)  in 1.090 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (35.65 seconds)
Cbc0010I After 100 nodes, 58 on tree, 1e+50 best solution, best possible 300 (157.62 seconds)
Cbc0010I After 200 nodes, 67 on tree, 1e+50 best solution, best possible 300 (203.71 seconds)
Cbc0010I After 300 nodes, 65 on tree, 1e+50 best solution, best possible 300 (296.86 seconds)
Cbc0010I After 400 nodes, 70 on tree, 1e+50 best solution, best possible 300 (396.76 seconds)
Cbc0010I After 500 nodes, 84 on tree, 1e+50 best solution, best possible 300 (524.02 seconds)
Cbc0010I After 600 nodes, 92 on tree, 1e+50 best solution, best possible 300 (602.65 seconds)
Cbc0010I After 700 nodes, 80 on tree, 1e+50 best solution, best possible 300 (762.09 seconds)
Cbc0010I After 800 nodes, 49 on tree, 1e+50 best solution, best possible 300 (972.64 seconds)
Cbc0010I After 900 nodes, 58 on tree, 1e+50 best solution, best possible 300 (1064.22 seconds)
Cbc0010I After 1000 nodes, 55 on tree, 1e+50 best solution, best possible 300 (1164.42 seconds)
Cbc0010I After 1100 nodes, 51 on tree, 1e+50 best solution, best possible 300 (1309.98 seconds)
Cbc0010I After 1200 nodes, 53 on tree, 1e+50 best solution, best possible 300 (1410.21 seconds)
Cbc0010I After 1300 nodes, 51 on tree, 1e+50 best solution, best possible 300 (1555.90 seconds)
Cbc0010I After 1400 nodes, 43 on tree, 1e+50 best solution, best possible 300 (1680.42 seconds)
Cbc0010I After 1500 nodes, 46 on tree, 1e+50 best solution, best possible 300 (1783.40 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 300), took 4209750 iterations and 1508 nodes (1796.38 seconds)
Cbc0032I Strong branching done 15444 times (1218536 iterations), fathomed 206 nodes and fixed 1910 variables
Cbc0035I Maximum depth 80, 0 variables fixed on reduced cost
Cuts at root node changed objective from 273.907 to 300
Probing was tried 292 times and created 44343 cuts of which 0 were active after adding rounds of cuts (2.158 seconds)
Gomory was tried 231 times and created 688 cuts of which 0 were active after adding rounds of cuts (3.198 seconds)
Knapsack was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 231 times and created 7404 cuts of which 0 were active after adding rounds of cuts (1.383 seconds)
ZeroHalf was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (1.090 seconds)
ImplicationCuts was tried 17 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    300.000
Enumerated nodes:               1508
Total iterations:               4209750
Time (CPU seconds):             1796.38
Time (Wallclock seconds):       1797.34

Total time (CPU seconds):       1796.40   (Wallclock seconds):       1797.37

