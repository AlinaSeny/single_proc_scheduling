Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_3_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_3_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 240.758 - 1.08 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 1064 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 18 tightened bounds, 454 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 230 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16342 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 797 integers unsatisfied sum - 243.089
Cbc0038I Pass   1: (3.52 seconds) suminf.   42.14704 (324) obj. 403 iterations 2356
Cbc0038I Pass   2: (3.67 seconds) suminf.   13.38321 (99) obj. 403 iterations 1003
Cbc0038I Pass   3: (3.69 seconds) suminf.    8.45531 (102) obj. 403 iterations 75
Cbc0038I Pass   4: (3.69 seconds) suminf.    8.45531 (102) obj. 403 iterations 5
Cbc0038I Pass   5: (3.71 seconds) suminf.    3.40734 (66) obj. 403 iterations 70
Cbc0038I Pass   6: (3.73 seconds) suminf.    3.18991 (64) obj. 407.365 iterations 91
Cbc0038I Pass   7: (3.80 seconds) suminf.    0.00000 (0) obj. 403 iterations 312
Cbc0038I Solution found of 403
Cbc0038I Cleaned solution of 403
Cbc0038I Before mini branch and bound, 724 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.85 seconds)
Cbc0038I Round again with cutoff of 385.897
Cbc0038I Pass   8: (3.89 seconds) suminf.   45.04879 (343) obj. 385 iterations 163
Cbc0038I Pass   9: (4.01 seconds) suminf.   16.86613 (151) obj. 385.897 iterations 862
Cbc0038I Pass  10: (4.03 seconds) suminf.   16.39718 (147) obj. 385.897 iterations 80
Cbc0038I Pass  11: (4.09 seconds) suminf.    6.98581 (95) obj. 385.897 iterations 391
Cbc0038I Pass  12: (4.12 seconds) suminf.    6.92381 (152) obj. 385.897 iterations 207
Cbc0038I Pass  13: (4.21 seconds) suminf.    7.04883 (50) obj. 385.897 iterations 609
Cbc0038I Pass  14: (4.29 seconds) suminf.    5.05547 (115) obj. 385.897 iterations 475
Cbc0038I Pass  15: (4.49 seconds) suminf.    7.51234 (75) obj. 385.897 iterations 1449
Cbc0038I Pass  16: (4.54 seconds) suminf.    4.62564 (62) obj. 385.897 iterations 277
Cbc0038I Pass  17: (4.63 seconds) suminf.    7.32651 (76) obj. 385.897 iterations 533
Cbc0038I Pass  18: (4.65 seconds) suminf.    7.27487 (123) obj. 385.897 iterations 144
Cbc0038I Pass  19: (4.70 seconds) suminf.    6.60982 (153) obj. 385.897 iterations 285
Cbc0038I Pass  20: (4.82 seconds) suminf.    7.41885 (64) obj. 385.897 iterations 656
Cbc0038I Pass  21: (5.04 seconds) suminf.    5.29217 (131) obj. 385.897 iterations 1293
Cbc0038I Pass  22: (5.28 seconds) suminf.    8.48682 (62) obj. 385.897 iterations 1407
Cbc0038I Pass  23: (5.36 seconds) suminf.    8.35645 (73) obj. 385.897 iterations 521
Cbc0038I Pass  24: (5.37 seconds) suminf.    7.96047 (64) obj. 385.897 iterations 46
Cbc0038I Pass  25: (5.40 seconds) suminf.    6.74174 (73) obj. 385.897 iterations 177
Cbc0038I Pass  26: (5.45 seconds) suminf.    5.53325 (82) obj. 385.897 iterations 291
Cbc0038I Pass  27: (5.52 seconds) suminf.    9.79351 (127) obj. 385.897 iterations 419
Cbc0038I Pass  28: (5.80 seconds) suminf.   67.68669 (377) obj. 385.897 iterations 1824
Cbc0038I Pass  29: (6.04 seconds) suminf.   21.49470 (170) obj. 385.897 iterations 1682
Cbc0038I Pass  30: (6.08 seconds) suminf.   21.23871 (185) obj. 385.897 iterations 196
Cbc0038I Pass  31: (6.10 seconds) suminf.   21.14661 (203) obj. 385.897 iterations 85
Cbc0038I Pass  32: (6.11 seconds) suminf.   19.66254 (190) obj. 385.897 iterations 37
Cbc0038I Pass  33: (6.16 seconds) suminf.   14.86154 (127) obj. 385.897 iterations 237
Cbc0038I Pass  34: (6.17 seconds) suminf.   14.73331 (128) obj. 385.897 iterations 71
Cbc0038I Pass  35: (6.20 seconds) suminf.   10.34761 (91) obj. 385.897 iterations 198
Cbc0038I Pass  36: (6.23 seconds) suminf.    9.84445 (101) obj. 385.897 iterations 175
Cbc0038I Pass  37: (6.28 seconds) suminf.    8.43533 (102) obj. 385.897 iterations 291
Cbc0038I Pass  38: (6.37 seconds) suminf.   12.00524 (130) obj. 385.897 iterations 675
Cbc0038I Pass  39: (6.41 seconds) suminf.   11.58007 (118) obj. 385.897 iterations 230
Cbc0038I Pass  40: (6.45 seconds) suminf.   11.32526 (120) obj. 385.897 iterations 333
Cbc0038I Pass  41: (6.47 seconds) suminf.    8.71056 (109) obj. 385.897 iterations 117
Cbc0038I Pass  42: (6.49 seconds) suminf.    8.18895 (121) obj. 385.897 iterations 68
Cbc0038I Pass  43: (6.55 seconds) suminf.    7.34874 (90) obj. 385.897 iterations 442
Cbc0038I Pass  44: (6.56 seconds) suminf.    6.97359 (89) obj. 385.897 iterations 82
Cbc0038I Pass  45: (6.59 seconds) suminf.    4.72474 (72) obj. 385.897 iterations 191
Cbc0038I Pass  46: (6.61 seconds) suminf.    4.81281 (80) obj. 385.897 iterations 121
Cbc0038I Pass  47: (6.64 seconds) suminf.    6.53814 (78) obj. 385.897 iterations 198
Cbc0038I Pass  48: (6.65 seconds) suminf.    6.11149 (77) obj. 385.897 iterations 77
Cbc0038I Pass  49: (6.68 seconds) suminf.    5.35971 (83) obj. 385.897 iterations 173
Cbc0038I Pass  50: (6.70 seconds) suminf.    4.75016 (74) obj. 385.897 iterations 186
Cbc0038I Pass  51: (6.74 seconds) suminf.   12.71596 (102) obj. 385.897 iterations 302
Cbc0038I Pass  52: (6.81 seconds) suminf.    5.73758 (126) obj. 385.897 iterations 562
Cbc0038I Pass  53: (6.81 seconds) suminf.    5.73758 (126) obj. 385.897 iterations 0
Cbc0038I Pass  54: (6.87 seconds) suminf.    8.81576 (73) obj. 385.897 iterations 484
Cbc0038I Pass  55: (6.91 seconds) suminf.    6.67354 (118) obj. 385.897 iterations 223
Cbc0038I Pass  56: (6.95 seconds) suminf.    3.05294 (50) obj. 385.897 iterations 238
Cbc0038I Pass  57: (6.96 seconds) suminf.    2.60513 (50) obj. 385.897 iterations 72
Cbc0038I Pass  58: (7.02 seconds) suminf.    6.57110 (58) obj. 385.897 iterations 467
Cbc0038I No solution found this major pass
Cbc0038I After 7.02 seconds - Feasibility pump exiting with objective of 403 - took 3.96 seconds
Cbc0012I Integer solution of 403 found by feasibility pump after 0 iterations and 0 nodes (7.03 seconds)
Cbc0031I 59 added rows had average density of 14.949153
Cbc0013I At root node, 59 cuts changed objective from 240.96416 to 262.00741 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 62 row cuts average 3.7 elements, 6 column cuts (6 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.615 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 241 row cuts average 19.2 elements, 0 column cuts (0 active)  in 0.277 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 44 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.598 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 403 best solution, best possible 262.00741 (20.02 seconds)
Cbc0010I After 100 nodes, 21 on tree, 403 best solution, best possible 272 (120.67 seconds)
Cbc0010I After 200 nodes, 35 on tree, 403 best solution, best possible 277 (201.43 seconds)
Cbc0010I After 300 nodes, 24 on tree, 403 best solution, best possible 285 (281.82 seconds)
Cbc0010I After 400 nodes, 27 on tree, 403 best solution, best possible 287 (374.20 seconds)
Cbc0010I After 500 nodes, 30 on tree, 403 best solution, best possible 291 (469.20 seconds)
Cbc0010I After 600 nodes, 29 on tree, 403 best solution, best possible 291 (537.03 seconds)
Cbc0010I After 700 nodes, 29 on tree, 403 best solution, best possible 291 (616.68 seconds)
Cbc0010I After 800 nodes, 27 on tree, 403 best solution, best possible 293 (717.87 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1053 rows 288 columns
Cbc0010I After 900 nodes, 32 on tree, 403 best solution, best possible 296 (788.40 seconds)
Cbc0010I After 1000 nodes, 39 on tree, 403 best solution, best possible 296 (837.16 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1229 rows 350 columns
Cbc0010I After 1100 nodes, 32 on tree, 403 best solution, best possible 296 (874.75 seconds)
Cbc0010I After 1200 nodes, 46 on tree, 403 best solution, best possible 296 (927.34 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1148 rows 329 columns
Cbc0010I After 1300 nodes, 63 on tree, 403 best solution, best possible 296 (966.06 seconds)
Cbc0010I After 1400 nodes, 51 on tree, 403 best solution, best possible 296 (998.68 seconds)
Cbc0010I After 1500 nodes, 60 on tree, 403 best solution, best possible 296 (1034.77 seconds)
Cbc0010I After 1600 nodes, 49 on tree, 403 best solution, best possible 296 (1061.91 seconds)
Cbc0010I After 1700 nodes, 49 on tree, 403 best solution, best possible 296 (1088.54 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 572 rows 154 columns
Cbc0010I After 1800 nodes, 55 on tree, 403 best solution, best possible 296 (1112.57 seconds)
Cbc0010I After 1900 nodes, 57 on tree, 403 best solution, best possible 296 (1132.10 seconds)
Cbc0010I After 2000 nodes, 56 on tree, 403 best solution, best possible 296 (1154.56 seconds)
Cbc0010I After 2100 nodes, 61 on tree, 403 best solution, best possible 296 (1167.37 seconds)
Cbc0010I After 2200 nodes, 56 on tree, 403 best solution, best possible 296 (1173.13 seconds)
Cbc0010I After 2300 nodes, 51 on tree, 403 best solution, best possible 296 (1184.82 seconds)
Cbc0010I After 2400 nodes, 60 on tree, 403 best solution, best possible 296 (1197.95 seconds)
Cbc0010I After 2500 nodes, 48 on tree, 403 best solution, best possible 296 (1208.34 seconds)
Cbc0010I After 2600 nodes, 62 on tree, 403 best solution, best possible 296 (1220.29 seconds)
Cbc0010I After 2700 nodes, 59 on tree, 403 best solution, best possible 296 (1228.06 seconds)
Cbc0010I After 2800 nodes, 63 on tree, 403 best solution, best possible 296 (1236.18 seconds)
Cbc0010I After 2900 nodes, 59 on tree, 403 best solution, best possible 296 (1250.18 seconds)
Cbc0010I After 3000 nodes, 60 on tree, 403 best solution, best possible 296 (1265.13 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 992 rows 287 columns
Cbc0010I After 3100 nodes, 52 on tree, 403 best solution, best possible 296 (1277.95 seconds)
Cbc0010I After 3200 nodes, 66 on tree, 403 best solution, best possible 296 (1292.97 seconds)
Cbc0010I After 3300 nodes, 65 on tree, 403 best solution, best possible 296 (1304.50 seconds)
Cbc0010I After 3400 nodes, 62 on tree, 403 best solution, best possible 296 (1310.92 seconds)
Cbc0010I After 3500 nodes, 56 on tree, 403 best solution, best possible 296 (1320.68 seconds)
Cbc0010I After 3600 nodes, 64 on tree, 403 best solution, best possible 296 (1327.65 seconds)
Cbc0010I After 3700 nodes, 63 on tree, 403 best solution, best possible 296 (1333.86 seconds)
Cbc0010I After 3800 nodes, 61 on tree, 403 best solution, best possible 296 (1341.12 seconds)
Cbc0010I After 3900 nodes, 64 on tree, 403 best solution, best possible 296 (1348.65 seconds)
Cbc0010I After 4000 nodes, 56 on tree, 403 best solution, best possible 296 (1361.55 seconds)
Cbc0010I After 4100 nodes, 62 on tree, 403 best solution, best possible 296 (1371.38 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1173 rows 333 columns
Cbc0010I After 4200 nodes, 53 on tree, 403 best solution, best possible 296 (1382.53 seconds)
Cbc0010I After 4300 nodes, 52 on tree, 403 best solution, best possible 296 (1393.43 seconds)
Cbc0010I After 4400 nodes, 56 on tree, 403 best solution, best possible 296 (1403.97 seconds)
Cbc0010I After 4500 nodes, 62 on tree, 403 best solution, best possible 296 (1422.69 seconds)
Cbc0010I After 4600 nodes, 52 on tree, 403 best solution, best possible 296 (1434.23 seconds)
Cbc0010I After 4700 nodes, 53 on tree, 403 best solution, best possible 296 (1443.23 seconds)
Cbc0010I After 4800 nodes, 58 on tree, 403 best solution, best possible 296 (1451.23 seconds)
Cbc0010I After 4900 nodes, 55 on tree, 403 best solution, best possible 296 (1459.11 seconds)
Cbc0010I After 5000 nodes, 56 on tree, 403 best solution, best possible 296 (1467.33 seconds)
Cbc0010I After 5100 nodes, 50 on tree, 403 best solution, best possible 296 (1477.64 seconds)
Cbc0010I After 5200 nodes, 54 on tree, 403 best solution, best possible 296 (1487.33 seconds)
Cbc0010I After 5300 nodes, 57 on tree, 403 best solution, best possible 296 (1499.94 seconds)
Cbc0010I After 5400 nodes, 58 on tree, 403 best solution, best possible 296 (1508.56 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 901 rows 248 columns
Cbc0010I After 5500 nodes, 55 on tree, 403 best solution, best possible 296 (1517.65 seconds)
Cbc0010I After 5600 nodes, 63 on tree, 403 best solution, best possible 296 (1529.90 seconds)
Cbc0010I After 5700 nodes, 59 on tree, 403 best solution, best possible 296 (1540.27 seconds)
Cbc0010I After 5800 nodes, 52 on tree, 403 best solution, best possible 296 (1550.77 seconds)
Cbc0010I After 5900 nodes, 55 on tree, 403 best solution, best possible 296 (1558.26 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1198 rows 347 columns
Cbc0010I After 6000 nodes, 51 on tree, 403 best solution, best possible 296 (1565.59 seconds)
Cbc0010I After 6100 nodes, 54 on tree, 403 best solution, best possible 296 (1576.30 seconds)
Cbc0010I After 6200 nodes, 61 on tree, 403 best solution, best possible 296 (1585.52 seconds)
Cbc0010I After 6300 nodes, 61 on tree, 403 best solution, best possible 296 (1592.31 seconds)
Cbc0010I After 6400 nodes, 56 on tree, 403 best solution, best possible 296 (1598.54 seconds)
Cbc0010I After 6500 nodes, 59 on tree, 403 best solution, best possible 296 (1606.52 seconds)
Cbc0010I After 6600 nodes, 56 on tree, 403 best solution, best possible 296 (1614.11 seconds)
Cbc0010I After 6700 nodes, 58 on tree, 403 best solution, best possible 296 (1623.54 seconds)
Cbc0010I After 6800 nodes, 56 on tree, 403 best solution, best possible 296 (1635.43 seconds)
Cbc0010I After 6900 nodes, 56 on tree, 403 best solution, best possible 296 (1645.14 seconds)
Cbc0010I After 7000 nodes, 58 on tree, 403 best solution, best possible 296 (1653.42 seconds)
Cbc0010I After 7100 nodes, 56 on tree, 403 best solution, best possible 296 (1661.41 seconds)
Cbc0010I After 7200 nodes, 58 on tree, 403 best solution, best possible 296 (1673.79 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1109 rows 308 columns
Cbc0010I After 7300 nodes, 58 on tree, 403 best solution, best possible 296 (1680.69 seconds)
Cbc0010I After 7400 nodes, 62 on tree, 403 best solution, best possible 296 (1689.08 seconds)
Cbc0010I After 7500 nodes, 59 on tree, 403 best solution, best possible 296 (1695.23 seconds)
Cbc0010I After 7600 nodes, 54 on tree, 403 best solution, best possible 296 (1703.97 seconds)
Cbc0010I After 7700 nodes, 57 on tree, 403 best solution, best possible 296 (1713.57 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 925 rows 277 columns
Cbc0010I After 7800 nodes, 61 on tree, 403 best solution, best possible 296 (1719.71 seconds)
Cbc0010I After 7900 nodes, 59 on tree, 403 best solution, best possible 296 (1725.78 seconds)
Cbc0010I After 8000 nodes, 49 on tree, 403 best solution, best possible 296 (1736.61 seconds)
Cbc0010I After 8100 nodes, 56 on tree, 403 best solution, best possible 296 (1744.97 seconds)
Cbc0010I After 8200 nodes, 55 on tree, 403 best solution, best possible 296 (1758.33 seconds)
Cbc0010I After 8300 nodes, 52 on tree, 403 best solution, best possible 296 (1771.64 seconds)
Cbc0010I After 8400 nodes, 48 on tree, 403 best solution, best possible 296 (1782.01 seconds)
Cbc0010I After 8500 nodes, 48 on tree, 403 best solution, best possible 296 (1795.68 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 403 (best possible 296), took 5162661 iterations and 8522 nodes (1798.05 seconds)
Cbc0032I Strong branching done 29656 times (2180861 iterations), fathomed 482 nodes and fixed 4689 variables
Cbc0035I Maximum depth 114, 0 variables fixed on reduced cost
Cuts at root node changed objective from 240.964 to 262.007
Probing was tried 1895 times and created 269227 cuts of which 0 were active after adding rounds of cuts (10.446 seconds)
Gomory was tried 838 times and created 1946 cuts of which 0 were active after adding rounds of cuts (5.331 seconds)
Knapsack was tried 838 times and created 5333 cuts of which 0 were active after adding rounds of cuts (1.271 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
MixedIntegerRounding2 was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 838 times and created 21543 cuts of which 0 were active after adding rounds of cuts (2.285 seconds)
ZeroHalf was tried 838 times and created 2065 cuts of which 0 were active after adding rounds of cuts (27.133 seconds)
ImplicationCuts was tried 17 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Stopped on time limit

Objective value:                403.00000000
Lower bound:                    296.000
Gap:                            0.36
Enumerated nodes:               8522
Total iterations:               5162661
Time (CPU seconds):             1798.30
Time (Wallclock seconds):       1799.37

Total time (CPU seconds):       1798.31   (Wallclock seconds):       1799.39

