Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_45_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_45_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32588.6 - 6.80 seconds
Cgl0002I 164 variables fixed
Cgl0003I 0 fixed, 30 tightened bounds, 1462 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 13 tightened bounds, 442 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 21 tightened bounds, 472 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 298 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 6991 rows, 2165 columns (2165 integer (2119 of which binary)) and 23931 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2165 objects (2165 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1299 integers unsatisfied sum - 348.013
Cbc0038I Pass   1: (10.14 seconds) suminf.  137.00791 (848) obj. 55631.9 iterations 4014
Cbc0038I Pass   2: (10.71 seconds) suminf.  103.00995 (827) obj. 68234.5 iterations 1656
Cbc0038I Pass   3: (10.97 seconds) suminf.   98.33098 (762) obj. 68206.3 iterations 675
Cbc0038I Pass   4: (11.28 seconds) suminf.  102.28121 (796) obj. 66196.9 iterations 809
Cbc0038I Pass   5: (11.38 seconds) suminf.  101.79285 (790) obj. 64737 iterations 199
Cbc0038I Pass   6: (11.61 seconds) suminf.   91.49447 (763) obj. 64392.3 iterations 574
Cbc0038I Pass   7: (11.80 seconds) suminf.   89.93578 (743) obj. 66038.5 iterations 487
Cbc0038I Pass   8: (11.92 seconds) suminf.   88.63183 (747) obj. 65001.1 iterations 289
Cbc0038I Pass   9: (11.98 seconds) suminf.   88.62117 (750) obj. 64965.9 iterations 120
Cbc0038I Pass  10: (12.18 seconds) suminf.   85.11362 (743) obj. 63732.9 iterations 580
Cbc0038I Pass  11: (12.32 seconds) suminf.   85.60613 (731) obj. 63814.7 iterations 315
Cbc0038I Pass  12: (12.39 seconds) suminf.   85.36613 (734) obj. 63825.1 iterations 162
Cbc0038I Pass  13: (12.58 seconds) suminf.   85.76342 (725) obj. 65107.9 iterations 532
Cbc0038I Pass  14: (12.62 seconds) suminf.   85.80837 (721) obj. 65046.3 iterations 73
Cbc0038I Pass  15: (12.67 seconds) suminf.   85.74983 (720) obj. 64819.3 iterations 102
Cbc0038I Pass  16: (12.84 seconds) suminf.   85.51727 (759) obj. 64083.2 iterations 421
Cbc0038I Pass  17: (12.98 seconds) suminf.   86.64924 (751) obj. 63784.8 iterations 286
Cbc0038I Pass  18: (13.00 seconds) suminf.   87.01091 (752) obj. 63941.6 iterations 19
Cbc0038I Pass  19: (13.21 seconds) suminf.   85.31086 (748) obj. 65294.3 iterations 507
Cbc0038I Pass  20: (13.25 seconds) suminf.   85.17349 (751) obj. 65420.3 iterations 96
Cbc0038I Pass  21: (13.45 seconds) suminf.   85.47625 (776) obj. 63967.3 iterations 531
Cbc0038I Pass  22: (13.48 seconds) suminf.   85.61948 (777) obj. 64007.6 iterations 70
Cbc0038I Pass  23: (13.66 seconds) suminf.   84.54656 (723) obj. 64971.1 iterations 428
Cbc0038I Pass  24: (13.82 seconds) suminf.   84.70671 (767) obj. 64062.5 iterations 368
Cbc0038I Pass  25: (13.97 seconds) suminf.   82.95666 (731) obj. 63837.8 iterations 295
Cbc0038I Pass  26: (14.14 seconds) suminf.   83.27242 (757) obj. 63680.2 iterations 434
Cbc0038I Pass  27: (14.18 seconds) suminf.   83.61737 (771) obj. 63676.4 iterations 85
Cbc0038I Pass  28: (14.35 seconds) suminf.   83.85935 (743) obj. 64183.7 iterations 429
Cbc0038I Pass  29: (14.46 seconds) suminf.   83.17640 (755) obj. 64139.6 iterations 210
Cbc0038I Pass  30: (14.61 seconds) suminf.   82.64516 (766) obj. 63796.5 iterations 307
Cbc0038I Pass  31: (14.75 seconds) suminf.   83.04205 (739) obj. 63765.4 iterations 306
Cbc0038I Pass  32: (14.91 seconds) suminf.   83.61737 (771) obj. 63676.4 iterations 368
Cbc0038I Pass  33: (15.05 seconds) suminf.   83.37285 (753) obj. 64835.3 iterations 318
Cbc0038I Pass  34: (15.13 seconds) suminf.   82.17761 (755) obj. 63922.8 iterations 186
Cbc0038I Pass  35: (15.23 seconds) suminf.   82.92957 (748) obj. 64191 iterations 206
Cbc0038I Pass  36: (15.27 seconds) suminf.   83.52732 (763) obj. 64341 iterations 81
Cbc0038I Pass  37: (15.40 seconds) suminf.   82.59246 (749) obj. 64762.8 iterations 290
Cbc0038I Pass  38: (15.44 seconds) suminf.   82.61412 (751) obj. 64190.3 iterations 74
Cbc0038I Pass  39: (15.59 seconds) suminf.   84.12117 (754) obj. 65241.5 iterations 376
Cbc0038I Pass  40: (15.65 seconds) suminf.   84.24624 (770) obj. 64808.8 iterations 147
Cbc0038I Pass  41: (15.85 seconds) suminf.   83.33369 (748) obj. 64423.3 iterations 514
Cbc0038I Pass  42: (16.00 seconds) suminf.   83.23994 (765) obj. 64037.5 iterations 305
Cbc0038I Pass  43: (16.16 seconds) suminf.   83.13075 (745) obj. 65590 iterations 378
Cbc0038I Pass  44: (16.34 seconds) suminf.   84.06035 (759) obj. 64282.8 iterations 510
Cbc0038I Pass  45: (16.53 seconds) suminf.   81.74636 (714) obj. 63725.9 iterations 486
Cbc0038I Pass  46: (16.68 seconds) suminf.   84.45610 (745) obj. 63823.5 iterations 359
Cbc0038I Pass  47: (16.87 seconds) suminf.   81.36884 (698) obj. 64699.5 iterations 458
Cbc0038I Pass  48: (17.01 seconds) suminf.   83.29228 (751) obj. 64554.3 iterations 294
Cbc0038I Pass  49: (17.11 seconds) suminf.   84.09475 (751) obj. 63973.3 iterations 209
Cbc0038I Pass  50: (17.17 seconds) suminf.   84.14150 (760) obj. 63701.7 iterations 111
Cbc0038I Pass  51: (17.42 seconds) suminf.   82.36479 (743) obj. 64002.6 iterations 686
Cbc0038I Pass  52: (17.57 seconds) suminf.   82.98098 (747) obj. 65860.5 iterations 339
Cbc0038I Pass  53: (17.62 seconds) suminf.   82.46096 (748) obj. 65609.8 iterations 95
Cbc0038I Pass  54: (17.74 seconds) suminf.   81.43218 (726) obj. 64809.8 iterations 257
Cbc0038I Pass  55: (17.77 seconds) suminf.   81.78287 (731) obj. 64956.5 iterations 52
Cbc0038I Pass  56: (17.94 seconds) suminf.   82.30378 (767) obj. 65925.7 iterations 376
Cbc0038I Pass  57: (18.03 seconds) suminf.   82.23005 (778) obj. 65657.1 iterations 180
Cbc0038I Pass  58: (18.31 seconds) suminf.   82.86451 (720) obj. 65601.5 iterations 779
Cbc0038I Pass  59: (18.54 seconds) suminf.   82.39138 (760) obj. 64984.9 iterations 559
Cbc0038I Pass  60: (18.57 seconds) suminf.   82.47923 (759) obj. 64973.7 iterations 52
Cbc0038I Pass  61: (18.83 seconds) suminf.   79.24401 (710) obj. 63003 iterations 811
Cbc0038I Pass  62: (19.00 seconds) suminf.   80.74595 (737) obj. 63883.9 iterations 434
Cbc0038I Pass  63: (19.14 seconds) suminf.   79.52729 (742) obj. 64185.2 iterations 341
Cbc0038I Pass  64: (19.28 seconds) suminf.   79.05753 (756) obj. 67664.9 iterations 324
Cbc0038I Pass  65: (19.36 seconds) suminf.   78.91123 (761) obj. 68323.4 iterations 197
Cbc0038I Pass  66: (19.62 seconds) suminf.   76.87211 (722) obj. 66287.9 iterations 746
Cbc0038I Pass  67: (19.88 seconds) suminf.   80.60543 (748) obj. 63326.5 iterations 708
Cbc0038I Pass  68: (19.90 seconds) suminf.   80.72195 (746) obj. 63479.3 iterations 30
Cbc0038I Pass  69: (20.08 seconds) suminf.   77.47426 (725) obj. 63144.9 iterations 413
Cbc0038I Pass  70: (20.22 seconds) suminf.   79.11810 (737) obj. 63463.2 iterations 268
Cbc0038I Pass  71: (20.40 seconds) suminf.   79.61914 (740) obj. 63476.4 iterations 411
Cbc0038I Pass  72: (20.43 seconds) suminf.   80.03809 (744) obj. 63531 iterations 59
Cbc0038I Pass  73: (20.60 seconds) suminf.   78.44889 (755) obj. 63456.2 iterations 375
Cbc0038I Pass  74: (20.64 seconds) suminf.   79.67839 (766) obj. 63454.8 iterations 86
Cbc0038I Pass  75: (20.89 seconds) suminf.   78.66825 (703) obj. 62510.4 iterations 648
Cbc0038I Pass  76: (21.03 seconds) suminf.   79.32499 (747) obj. 63258.5 iterations 370
Cbc0038I Pass  77: (21.09 seconds) suminf.   79.93061 (744) obj. 63414.7 iterations 128
Cbc0038I Pass  78: (21.21 seconds) suminf.   80.65786 (772) obj. 63464.9 iterations 282
Cbc0038I Pass  79: (21.41 seconds) suminf.   79.00290 (724) obj. 63616.7 iterations 566
Cbc0038I Pass  80: (21.45 seconds) suminf.   79.44311 (728) obj. 63469.7 iterations 76
Cbc0038I Pass  81: (21.62 seconds) suminf.   78.86624 (738) obj. 63160.9 iterations 464
Cbc0038I Pass  82: (21.72 seconds) suminf.   80.20870 (761) obj. 63416.1 iterations 220
Cbc0038I Pass  83: (21.80 seconds) suminf.   80.45111 (778) obj. 63481.9 iterations 224
Cbc0038I Pass  84: (21.94 seconds) suminf.   79.11018 (739) obj. 63456.4 iterations 318
Cbc0038I Pass  85: (21.99 seconds) suminf.   80.03728 (767) obj. 63458.4 iterations 123
Cbc0038I Pass  86: (22.15 seconds) suminf.   78.61767 (740) obj. 63469.9 iterations 426
Cbc0038I Pass  87: (22.27 seconds) suminf.   80.03809 (744) obj. 63531 iterations 253
Cbc0038I Pass  88: (22.48 seconds) suminf.   78.46257 (716) obj. 63401.7 iterations 586
Cbc0038I Pass  89: (22.66 seconds) suminf.   80.46017 (712) obj. 63738.7 iterations 488
Cbc0038I Pass  90: (22.68 seconds) suminf.   80.51046 (712) obj. 63460.9 iterations 9
Cbc0038I Pass  91: (22.88 seconds) suminf.   78.26795 (741) obj. 63352.3 iterations 531
Cbc0038I Pass  92: (23.03 seconds) suminf.   79.83251 (730) obj. 63229.3 iterations 363
Cbc0038I Pass  93: (23.15 seconds) suminf.   79.79728 (728) obj. 63439.7 iterations 254
Cbc0038I Pass  94: (23.32 seconds) suminf.   78.30367 (711) obj. 63440.5 iterations 390
Cbc0038I Pass  95: (23.52 seconds) suminf.   79.29533 (731) obj. 63414.8 iterations 574
Cbc0038I Pass  96: (23.54 seconds) suminf.   79.22469 (728) obj. 63417.1 iterations 17
Cbc0038I Pass  97: (23.70 seconds) suminf.   79.38429 (709) obj. 63756 iterations 405
Cbc0038I Pass  98: (23.89 seconds) suminf.   80.33118 (713) obj. 63734.7 iterations 488
Cbc0038I Pass  99: (23.97 seconds) suminf.   81.00652 (710) obj. 63742.5 iterations 163
Cbc0038I Pass 100: (24.67 seconds) suminf.  110.50774 (752) obj. 77163.2 iterations 2110
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 430 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6991 rows 2165 columns, reduced to 5838 rows 1692 columns - too large
Cbc0038I Mini branch and bound did not improve solution (24.81 seconds)
Cbc0038I After 24.81 seconds - Feasibility pump exiting - took 16.29 seconds
Cbc0031I 50 added rows had average density of 5.4
Cbc0013I At root node, 50 cuts changed objective from 32815.628 to 40960 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 67 row cuts average 158.5 elements, 0 column cuts (0 active)  in 1.633 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 97 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 40960 (43.61 seconds)
Cbc0010I After 100 nodes, 27 on tree, 1e+50 best solution, best possible 40960 (161.41 seconds)
Cbc0010I After 200 nodes, 44 on tree, 1e+50 best solution, best possible 40960 (254.66 seconds)
Cbc0010I After 300 nodes, 42 on tree, 1e+50 best solution, best possible 40960 (473.95 seconds)
Cbc0010I After 400 nodes, 47 on tree, 1e+50 best solution, best possible 40960 (643.56 seconds)
Cbc0010I After 500 nodes, 59 on tree, 1e+50 best solution, best possible 40960 (780.32 seconds)
Cbc0010I After 600 nodes, 78 on tree, 1e+50 best solution, best possible 40960 (907.87 seconds)
Cbc0010I After 700 nodes, 109 on tree, 1e+50 best solution, best possible 40960 (1060.14 seconds)
Cbc0010I After 800 nodes, 126 on tree, 1e+50 best solution, best possible 40960 (1188.50 seconds)
Cbc0010I After 900 nodes, 143 on tree, 1e+50 best solution, best possible 40960 (1341.45 seconds)
Cbc0010I After 1000 nodes, 138 on tree, 1e+50 best solution, best possible 40960 (1501.50 seconds)
Cbc0010I After 1100 nodes, 134 on tree, 1e+50 best solution, best possible 40960 (1624.02 seconds)
Cbc0010I After 1200 nodes, 132 on tree, 1e+50 best solution, best possible 40960 (1784.48 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 40960), took 1643700 iterations and 1208 nodes (1802.69 seconds)
Cbc0032I Strong branching done 14806 times (1228774 iterations), fathomed 68 nodes and fixed 973 variables
Cbc0035I Maximum depth 77, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32815.6 to 40960
Probing was tried 923 times and created 35039 cuts of which 0 were active after adding rounds of cuts (16.677 seconds)
Gomory was tried 854 times and created 432 cuts of which 0 were active after adding rounds of cuts (17.789 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 854 times and created 7101 cuts of which 0 were active after adding rounds of cuts (4.866 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.145 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    40960.000
Enumerated nodes:               1208
Total iterations:               1643700
Time (CPU seconds):             1802.69
Time (Wallclock seconds):       1802.91

Total time (CPU seconds):       1802.72   (Wallclock seconds):       1802.94

