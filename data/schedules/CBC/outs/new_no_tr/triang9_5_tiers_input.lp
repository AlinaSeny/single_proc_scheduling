Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_5_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_5_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 276.909 - 1.64 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 1690 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 33 tightened bounds, 785 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 426 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 103 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 44 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26736 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1221 integers unsatisfied sum - 432.124
Cbc0038I Pass   1: (6.73 seconds) suminf.  186.62364 (1216) obj. 502.577 iterations 4515
Cbc0038I Pass   2: (7.25 seconds) suminf.  137.49676 (1355) obj. 550.472 iterations 1769
Cbc0038I Pass   3: (7.43 seconds) suminf.  140.05951 (1344) obj. 552.229 iterations 557
Cbc0038I Pass   4: (7.56 seconds) suminf.  139.48559 (1333) obj. 552.366 iterations 379
Cbc0038I Pass   5: (7.62 seconds) suminf.  136.50422 (1352) obj. 550.069 iterations 195
Cbc0038I Pass   6: (7.64 seconds) suminf.  137.07270 (1352) obj. 550.421 iterations 14
Cbc0038I Pass   7: (7.97 seconds) suminf.  122.68664 (1329) obj. 575.949 iterations 1136
Cbc0038I Pass   8: (8.08 seconds) suminf.  119.79256 (1350) obj. 574.645 iterations 334
Cbc0038I Pass   9: (8.20 seconds) suminf.  117.83585 (1379) obj. 571.397 iterations 400
Cbc0038I Pass  10: (8.28 seconds) suminf.  116.46191 (1349) obj. 568.744 iterations 219
Cbc0038I Pass  11: (8.53 seconds) suminf.  112.00968 (1380) obj. 580.57 iterations 966
Cbc0038I Pass  12: (8.59 seconds) suminf.  110.36576 (1382) obj. 582.763 iterations 198
Cbc0038I Pass  13: (8.63 seconds) suminf.  109.70372 (1374) obj. 583.946 iterations 135
Cbc0038I Pass  14: (8.84 seconds) suminf.  107.76490 (1432) obj. 621.053 iterations 972
Cbc0038I Pass  15: (8.98 seconds) suminf.  103.37493 (1421) obj. 648.913 iterations 562
Cbc0038I Pass  16: (9.06 seconds) suminf.  102.71918 (1431) obj. 642.338 iterations 292
Cbc0038I Pass  17: (9.26 seconds) suminf.  101.18744 (1361) obj. 638.64 iterations 777
Cbc0038I Pass  18: (9.35 seconds) suminf.  100.20223 (1371) obj. 633.724 iterations 289
Cbc0038I Pass  19: (9.61 seconds) suminf.   99.23735 (1433) obj. 635.441 iterations 1131
Cbc0038I Pass  20: (9.73 seconds) suminf.   96.98670 (1421) obj. 634.964 iterations 497
Cbc0038I Pass  21: (9.87 seconds) suminf.   97.64093 (1450) obj. 634.678 iterations 657
Cbc0038I Pass  22: (9.96 seconds) suminf.   96.35606 (1453) obj. 634.759 iterations 272
Cbc0038I Pass  23: (10.13 seconds) suminf.   97.57731 (1519) obj. 635.686 iterations 699
Cbc0038I Pass  24: (10.21 seconds) suminf.   96.67997 (1523) obj. 635.693 iterations 304
Cbc0038I Pass  25: (10.37 seconds) suminf.   97.26291 (1475) obj. 635.287 iterations 564
Cbc0038I Pass  26: (10.45 seconds) suminf.   96.57722 (1476) obj. 635.664 iterations 235
Cbc0038I Pass  27: (10.62 seconds) suminf.   98.64549 (1501) obj. 635.416 iterations 767
Cbc0038I Pass  28: (10.72 seconds) suminf.   96.76061 (1508) obj. 636.231 iterations 386
Cbc0038I Pass  29: (10.75 seconds) suminf.   96.54532 (1509) obj. 636.245 iterations 74
Cbc0038I Pass  30: (10.92 seconds) suminf.   97.09749 (1487) obj. 635.286 iterations 637
Cbc0038I Pass  31: (11.01 seconds) suminf.   96.31139 (1502) obj. 635.136 iterations 308
Cbc0038I Pass  32: (11.18 seconds) suminf.   99.05037 (1452) obj. 635.835 iterations 732
Cbc0038I Pass  33: (11.28 seconds) suminf.   96.19371 (1446) obj. 635.835 iterations 362
Cbc0038I Pass  34: (11.46 seconds) suminf.   97.94913 (1516) obj. 635.286 iterations 752
Cbc0038I Pass  35: (11.55 seconds) suminf.   96.42852 (1508) obj. 635.317 iterations 267
Cbc0038I Pass  36: (11.75 seconds) suminf.   97.31275 (1449) obj. 635.679 iterations 710
Cbc0038I Pass  37: (11.81 seconds) suminf.   96.20258 (1466) obj. 635.677 iterations 206
Cbc0038I Pass  38: (11.98 seconds) suminf.   98.30429 (1486) obj. 635.286 iterations 688
Cbc0038I Pass  39: (12.09 seconds) suminf.   96.29139 (1466) obj. 635.748 iterations 453
Cbc0038I Pass  40: (12.15 seconds) suminf.   95.93779 (1502) obj. 635.768 iterations 225
Cbc0038I Pass  41: (12.28 seconds) suminf.   97.70359 (1481) obj. 635.742 iterations 557
Cbc0038I Pass  42: (12.35 seconds) suminf.   96.13640 (1473) obj. 635.715 iterations 207
Cbc0038I Pass  43: (12.52 seconds) suminf.   98.34365 (1488) obj. 635.686 iterations 682
Cbc0038I Pass  44: (12.63 seconds) suminf.   96.20824 (1474) obj. 635.686 iterations 377
Cbc0038I Pass  45: (12.78 seconds) suminf.   97.83377 (1494) obj. 635.7 iterations 599
Cbc0038I Pass  46: (12.84 seconds) suminf.   96.54909 (1485) obj. 635.7 iterations 223
Cbc0038I Pass  47: (12.89 seconds) suminf.   96.21826 (1494) obj. 635.768 iterations 133
Cbc0038I Pass  48: (13.02 seconds) suminf.   96.36828 (1484) obj. 636.039 iterations 512
Cbc0038I Pass  49: (13.10 seconds) suminf.   95.97026 (1486) obj. 635.701 iterations 286
Cbc0038I Pass  50: (13.28 seconds) suminf.   99.20259 (1483) obj. 635.553 iterations 718
Cbc0038I Pass  51: (13.35 seconds) suminf.   98.42426 (1474) obj. 635.697 iterations 243
Cbc0038I Pass  52: (13.42 seconds) suminf.   98.00563 (1474) obj. 635.654 iterations 199
Cbc0038I Pass  53: (13.51 seconds) suminf.   96.19992 (1464) obj. 635.618 iterations 300
Cbc0038I Pass  54: (13.69 seconds) suminf.   97.28793 (1466) obj. 635.686 iterations 733
Cbc0038I Pass  55: (13.78 seconds) suminf.   96.63865 (1484) obj. 635.485 iterations 322
Cbc0038I Pass  56: (13.97 seconds) suminf.   98.60120 (1489) obj. 635.688 iterations 774
Cbc0038I Pass  57: (14.07 seconds) suminf.   96.79693 (1479) obj. 637.659 iterations 310
Cbc0038I Pass  58: (14.17 seconds) suminf.   95.49205 (1465) obj. 636.038 iterations 394
Cbc0038I Pass  59: (14.26 seconds) suminf.   95.25812 (1441) obj. 635.686 iterations 268
Cbc0038I Pass  60: (14.41 seconds) suminf.   96.88491 (1477) obj. 635.686 iterations 709
Cbc0038I Pass  61: (14.54 seconds) suminf.   95.72639 (1469) obj. 635.686 iterations 521
Cbc0038I Pass  62: (14.71 seconds) suminf.   97.37592 (1481) obj. 635.029 iterations 701
Cbc0038I Pass  63: (14.81 seconds) suminf.   96.35980 (1472) obj. 635.286 iterations 310
Cbc0038I Pass  64: (14.84 seconds) suminf.   96.14308 (1468) obj. 635.286 iterations 117
Cbc0038I Pass  65: (14.89 seconds) suminf.   95.58019 (1476) obj. 635.686 iterations 166
Cbc0038I Pass  66: (14.96 seconds) suminf.   95.37010 (1448) obj. 635.286 iterations 202
Cbc0038I Pass  67: (15.10 seconds) suminf.   96.97812 (1496) obj. 635.622 iterations 617
Cbc0038I Pass  68: (15.22 seconds) suminf.   95.72639 (1469) obj. 635.686 iterations 417
Cbc0038I Pass  69: (15.40 seconds) suminf.   97.37592 (1481) obj. 635.029 iterations 697
Cbc0038I Pass  70: (15.49 seconds) suminf.   96.35980 (1472) obj. 635.286 iterations 290
Cbc0038I Pass  71: (15.52 seconds) suminf.   96.14308 (1468) obj. 635.286 iterations 114
Cbc0038I Pass  72: (15.57 seconds) suminf.   95.58019 (1476) obj. 635.686 iterations 177
Cbc0038I Pass  73: (15.62 seconds) suminf.   95.37010 (1448) obj. 635.286 iterations 187
Cbc0038I Pass  74: (15.80 seconds) suminf.   96.97812 (1496) obj. 635.622 iterations 699
Cbc0038I Pass  75: (15.93 seconds) suminf.   95.72639 (1469) obj. 635.686 iterations 479
Cbc0038I Pass  76: (16.10 seconds) suminf.   97.37592 (1481) obj. 635.029 iterations 714
Cbc0038I Pass  77: (16.18 seconds) suminf.   96.35980 (1472) obj. 635.286 iterations 309
Cbc0038I Pass  78: (16.21 seconds) suminf.   96.14308 (1468) obj. 635.286 iterations 131
Cbc0038I Pass  79: (16.26 seconds) suminf.   95.58019 (1476) obj. 635.686 iterations 158
Cbc0038I Pass  80: (16.31 seconds) suminf.   95.37010 (1448) obj. 635.286 iterations 194
Cbc0038I Pass  81: (16.47 seconds) suminf.   96.82484 (1492) obj. 635.673 iterations 624
Cbc0038I Pass  82: (16.55 seconds) suminf.   96.09478 (1463) obj. 635.687 iterations 266
Cbc0038I Pass  83: (16.73 seconds) suminf.   97.68902 (1451) obj. 635.663 iterations 652
Cbc0038I Pass  84: (16.82 seconds) suminf.   96.73039 (1446) obj. 635.021 iterations 308
Cbc0038I Pass  85: (16.96 seconds) suminf.   97.59031 (1453) obj. 635.673 iterations 625
Cbc0038I Pass  86: (17.06 seconds) suminf.   95.75916 (1468) obj. 635.686 iterations 363
Cbc0038I Pass  87: (17.15 seconds) suminf.   95.41496 (1465) obj. 635.686 iterations 249
Cbc0038I Pass  88: (17.26 seconds) suminf.   96.27928 (1468) obj. 634.902 iterations 448
Cbc0038I Pass  89: (17.34 seconds) suminf.   95.37010 (1448) obj. 635.286 iterations 263
Cbc0038I Pass  90: (17.50 seconds) suminf.   96.97812 (1496) obj. 635.622 iterations 649
Cbc0038I Pass  91: (17.65 seconds) suminf.   95.72639 (1469) obj. 635.686 iterations 489
Cbc0038I Pass  92: (17.82 seconds) suminf.   97.20495 (1476) obj. 634.874 iterations 663
Cbc0038I Pass  93: (17.89 seconds) suminf.   96.35980 (1472) obj. 635.286 iterations 255
Cbc0038I Pass  94: (17.93 seconds) suminf.   96.14308 (1468) obj. 635.286 iterations 125
Cbc0038I Pass  95: (17.98 seconds) suminf.   95.58019 (1476) obj. 635.686 iterations 178
Cbc0038I Pass  96: (18.03 seconds) suminf.   95.37010 (1448) obj. 635.286 iterations 182
Cbc0038I Pass  97: (18.21 seconds) suminf.   96.82484 (1492) obj. 635.673 iterations 692
Cbc0038I Pass  98: (18.30 seconds) suminf.   96.09478 (1463) obj. 635.687 iterations 262
Cbc0038I Pass  99: (18.47 seconds) suminf.   97.68902 (1451) obj. 635.663 iterations 655
Cbc0038I Pass 100: (18.91 seconds) suminf.  132.17365 (1328) obj. 648.106 iterations 2051
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 364 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 6896 rows 2233 columns - too large
Cbc0038I Mini branch and bound did not improve solution (21.52 seconds)
Cbc0038I After 21.52 seconds - Feasibility pump exiting - took 16.24 seconds
Cbc0031I 55 added rows had average density of 20.109091
Cbc0013I At root node, 55 cuts changed objective from 276.90909 to 320 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.282 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 92 row cuts average 18.6 elements, 0 column cuts (0 active)  in 1.359 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 334 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.606 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 77 row cuts average 36.6 elements, 0 column cuts (0 active)  in 1.656 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 320 (58.76 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 321 (319.08 seconds)
Cbc0010I After 200 nodes, 11 on tree, 1e+50 best solution, best possible 322 (517.97 seconds)
Cbc0010I After 300 nodes, 11 on tree, 1e+50 best solution, best possible 322 (638.45 seconds)
Cbc0010I After 400 nodes, 13 on tree, 1e+50 best solution, best possible 322 (732.55 seconds)
Cbc0010I After 500 nodes, 11 on tree, 1e+50 best solution, best possible 322 (845.72 seconds)
Cbc0010I After 600 nodes, 16 on tree, 1e+50 best solution, best possible 322 (950.87 seconds)
Cbc0010I After 700 nodes, 18 on tree, 1e+50 best solution, best possible 322 (1039.52 seconds)
Cbc0010I After 800 nodes, 4 on tree, 1e+50 best solution, best possible 322 (1137.46 seconds)
Cbc0010I After 900 nodes, 18 on tree, 1e+50 best solution, best possible 323 (1273.75 seconds)
Cbc0010I After 1000 nodes, 30 on tree, 1e+50 best solution, best possible 323 (1413.02 seconds)
Cbc0010I After 1100 nodes, 46 on tree, 1e+50 best solution, best possible 323 (1552.45 seconds)
Cbc0010I After 1200 nodes, 53 on tree, 1e+50 best solution, best possible 323 (1661.23 seconds)
Cbc0010I After 1300 nodes, 50 on tree, 1e+50 best solution, best possible 323 (1754.40 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 323), took 2287868 iterations and 1340 nodes (1796.73 seconds)
Cbc0032I Strong branching done 13934 times (1259597 iterations), fathomed 58 nodes and fixed 960 variables
Cbc0035I Maximum depth 71, 0 variables fixed on reduced cost
Cuts at root node changed objective from 276.909 to 320
Probing was tried 15 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.282 seconds)
Gomory was tried 892 times and created 1062 cuts of which 0 were active after adding rounds of cuts (17.805 seconds)
Knapsack was tried 892 times and created 1558 cuts of which 0 were active after adding rounds of cuts (1.899 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
MixedIntegerRounding2 was tried 15 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
TwoMirCuts was tried 892 times and created 9344 cuts of which 0 were active after adding rounds of cuts (5.880 seconds)
ZeroHalf was tried 892 times and created 3813 cuts of which 0 were active after adding rounds of cuts (106.152 seconds)
ImplicationCuts was tried 119 times and created 95 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    323.000
Enumerated nodes:               1340
Total iterations:               2287868
Time (CPU seconds):             1796.73
Time (Wallclock seconds):       1797.20

Total time (CPU seconds):       1796.76   (Wallclock seconds):       1797.23

