Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_1_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_1_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 223.83 - 1.41 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 17 tightened bounds, 1055 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 21 tightened bounds, 439 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 217 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 95 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16299 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 805 integers unsatisfied sum - 232.728
Cbc0038I Pass   1: (3.73 seconds) suminf.  108.19532 (569) obj. 316.694 iterations 2412
Cbc0038I Pass   2: (3.99 seconds) suminf.   58.02172 (389) obj. 335.64 iterations 1440
Cbc0038I Pass   3: (4.10 seconds) suminf.   48.21215 (319) obj. 347.789 iterations 638
Cbc0038I Pass   4: (4.12 seconds) suminf.   47.06311 (321) obj. 333.94 iterations 84
Cbc0038I Pass   5: (4.23 seconds) suminf.   38.08108 (240) obj. 321.853 iterations 693
Cbc0038I Pass   6: (4.32 seconds) suminf.   27.00407 (203) obj. 321.956 iterations 539
Cbc0038I Pass   7: (4.43 seconds) suminf.   22.81994 (185) obj. 327 iterations 725
Cbc0038I Pass   8: (4.45 seconds) suminf.   22.65004 (182) obj. 327 iterations 70
Cbc0038I Pass   9: (4.49 seconds) suminf.   18.20816 (154) obj. 328.251 iterations 193
Cbc0038I Pass  10: (4.53 seconds) suminf.   16.27196 (145) obj. 332.179 iterations 267
Cbc0038I Pass  11: (4.58 seconds) suminf.    9.62437 (94) obj. 333.13 iterations 346
Cbc0038I Pass  12: (4.59 seconds) suminf.    9.65376 (92) obj. 333.13 iterations 10
Cbc0038I Pass  13: (4.61 seconds) suminf.    5.34294 (70) obj. 333.13 iterations 168
Cbc0038I Pass  14: (4.62 seconds) suminf.    5.34294 (70) obj. 333.13 iterations 35
Cbc0038I Pass  15: (4.65 seconds) suminf.    0.00000 (0) obj. 332 iterations 182
Cbc0038I Solution found of 332
Cbc0038I Cleaned solution of 332
Cbc0038I Before mini branch and bound, 586 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (4.70 seconds)
Cbc0038I Round again with cutoff of 320.345
Cbc0038I Pass  16: (4.71 seconds) suminf.  108.19532 (569) obj. 316.694 iterations 0
Cbc0038I Pass  17: (4.93 seconds) suminf.   59.05176 (388) obj. 320.345 iterations 1351
Cbc0038I Pass  18: (5.01 seconds) suminf.   47.59521 (336) obj. 320.345 iterations 507
Cbc0038I Pass  19: (5.07 seconds) suminf.   42.70649 (287) obj. 320.345 iterations 359
Cbc0038I Pass  20: (5.14 seconds) suminf.   33.48726 (263) obj. 320.345 iterations 388
Cbc0038I Pass  21: (5.20 seconds) suminf.   32.78842 (240) obj. 320.345 iterations 400
Cbc0038I Pass  22: (5.23 seconds) suminf.   30.86583 (214) obj. 320.345 iterations 186
Cbc0038I Pass  23: (5.25 seconds) suminf.   28.01771 (217) obj. 320.345 iterations 120
Cbc0038I Pass  24: (5.26 seconds) suminf.   27.59260 (216) obj. 320.345 iterations 19
Cbc0038I Pass  25: (5.33 seconds) suminf.   18.89408 (169) obj. 320.345 iterations 483
Cbc0038I Pass  26: (5.35 seconds) suminf.   18.48805 (166) obj. 320.345 iterations 75
Cbc0038I Pass  27: (5.39 seconds) suminf.   18.03221 (139) obj. 320.345 iterations 295
Cbc0038I Pass  28: (5.41 seconds) suminf.   12.61956 (124) obj. 320.345 iterations 126
Cbc0038I Pass  29: (5.53 seconds) suminf.    6.94406 (83) obj. 320.345 iterations 720
Cbc0038I Pass  30: (5.54 seconds) suminf.    6.90286 (84) obj. 320.345 iterations 30
Cbc0038I Pass  31: (5.58 seconds) suminf.    9.12472 (85) obj. 320.345 iterations 266
Cbc0038I Pass  32: (5.61 seconds) suminf.    8.10776 (79) obj. 320.345 iterations 196
Cbc0038I Pass  33: (5.62 seconds) suminf.    7.86614 (77) obj. 320.345 iterations 71
Cbc0038I Pass  34: (5.66 seconds) suminf.    8.48403 (59) obj. 320.345 iterations 289
Cbc0038I Pass  35: (5.72 seconds) suminf.    8.03993 (129) obj. 320.345 iterations 360
Cbc0038I Pass  36: (5.83 seconds) suminf.    7.46120 (77) obj. 320.345 iterations 692
Cbc0038I Pass  37: (5.85 seconds) suminf.    8.18051 (73) obj. 320.345 iterations 117
Cbc0038I Pass  38: (5.86 seconds) suminf.    6.77321 (133) obj. 320.345 iterations 92
Cbc0038I Pass  39: (5.91 seconds) suminf.    8.35104 (97) obj. 320.345 iterations 275
Cbc0038I Pass  40: (5.91 seconds) suminf.    8.35441 (96) obj. 320.345 iterations 4
Cbc0038I Pass  41: (5.97 seconds) suminf.   11.23197 (86) obj. 320.345 iterations 378
Cbc0038I Pass  42: (5.99 seconds) suminf.    7.43041 (66) obj. 320.345 iterations 106
Cbc0038I Pass  43: (6.04 seconds) suminf.   12.56622 (81) obj. 320.345 iterations 365
Cbc0038I Pass  44: (6.08 seconds) suminf.    8.31175 (86) obj. 320.345 iterations 216
Cbc0038I Pass  45: (6.12 seconds) suminf.    8.45151 (82) obj. 320.345 iterations 207
Cbc0038I Pass  46: (6.18 seconds) suminf.   12.97678 (95) obj. 320.345 iterations 448
Cbc0038I Pass  47: (6.21 seconds) suminf.   12.83352 (101) obj. 320.345 iterations 168
Cbc0038I Pass  48: (6.31 seconds) suminf.    8.16528 (77) obj. 320.345 iterations 667
Cbc0038I Pass  49: (6.32 seconds) suminf.    7.45247 (76) obj. 320.345 iterations 19
Cbc0038I Pass  50: (6.45 seconds) suminf.    9.02388 (86) obj. 320.345 iterations 833
Cbc0038I Pass  51: (6.47 seconds) suminf.    8.35441 (96) obj. 320.345 iterations 97
Cbc0038I Pass  52: (6.53 seconds) suminf.    7.72548 (83) obj. 320.345 iterations 354
Cbc0038I Pass  53: (6.54 seconds) suminf.    7.43041 (66) obj. 320.345 iterations 84
Cbc0038I Pass  54: (6.59 seconds) suminf.    8.88813 (77) obj. 320.345 iterations 308
Cbc0038I Pass  55: (6.62 seconds) suminf.    8.44239 (124) obj. 320.345 iterations 150
Cbc0038I Pass  56: (6.67 seconds) suminf.   10.23916 (85) obj. 320.345 iterations 363
Cbc0038I Pass  57: (6.70 seconds) suminf.    7.69261 (69) obj. 320.345 iterations 188
Cbc0038I Pass  58: (6.73 seconds) suminf.    7.41949 (132) obj. 320.345 iterations 163
Cbc0038I Pass  59: (6.81 seconds) suminf.    9.87617 (87) obj. 320.345 iterations 465
Cbc0038I Pass  60: (6.83 seconds) suminf.    8.35476 (69) obj. 320.345 iterations 100
Cbc0038I Pass  61: (6.86 seconds) suminf.    8.47580 (73) obj. 320.345 iterations 165
Cbc0038I Pass  62: (6.92 seconds) suminf.    9.20033 (82) obj. 320.345 iterations 323
Cbc0038I Pass  63: (6.95 seconds) suminf.    8.48816 (115) obj. 320.345 iterations 169
Cbc0038I Pass  64: (7.03 seconds) suminf.    8.93015 (100) obj. 320.345 iterations 518
Cbc0038I Pass  65: (7.03 seconds) suminf.    8.88623 (99) obj. 320.345 iterations 6
Cbc0038I Pass  66: (7.15 seconds) suminf.   12.47289 (74) obj. 320.345 iterations 785
Cbc0038I Pass  67: (7.18 seconds) suminf.   10.55181 (67) obj. 320.345 iterations 180
Cbc0038I Pass  68: (7.19 seconds) suminf.   10.55181 (67) obj. 320.345 iterations 4
Cbc0038I Pass  69: (7.27 seconds) suminf.   10.03465 (91) obj. 320.345 iterations 539
Cbc0038I Pass  70: (7.31 seconds) suminf.    8.24842 (76) obj. 320.345 iterations 261
Cbc0038I Pass  71: (7.41 seconds) suminf.    8.17714 (62) obj. 320.345 iterations 727
Cbc0038I Pass  72: (7.56 seconds) suminf.    6.16728 (56) obj. 320.345 iterations 922
Cbc0038I Pass  73: (7.69 seconds) suminf.   10.45405 (100) obj. 320.345 iterations 947
Cbc0038I Pass  74: (7.71 seconds) suminf.   10.09995 (91) obj. 320.345 iterations 117
Cbc0038I Pass  75: (7.84 seconds) suminf.   13.04767 (86) obj. 320.345 iterations 829
Cbc0038I Pass  76: (7.89 seconds) suminf.   10.54889 (91) obj. 320.345 iterations 377
Cbc0038I Pass  77: (8.00 seconds) suminf.   10.11368 (88) obj. 320.345 iterations 689
Cbc0038I Pass  78: (8.01 seconds) suminf.    9.87529 (86) obj. 320.345 iterations 51
Cbc0038I Pass  79: (8.06 seconds) suminf.    8.66563 (86) obj. 320.345 iterations 282
Cbc0038I Pass  80: (8.08 seconds) suminf.    5.24940 (65) obj. 320.345 iterations 132
Cbc0038I Pass  81: (8.24 seconds) suminf.    8.45641 (64) obj. 320.345 iterations 1088
Cbc0038I Pass  82: (8.27 seconds) suminf.    5.28065 (56) obj. 320.345 iterations 198
Cbc0038I Pass  83: (8.30 seconds) suminf.    4.75953 (56) obj. 320.345 iterations 156
Cbc0038I Pass  84: (8.34 seconds) suminf.    8.51459 (64) obj. 320.345 iterations 293
Cbc0038I Pass  85: (8.39 seconds) suminf.    5.33174 (55) obj. 320.345 iterations 266
Cbc0038I Pass  86: (8.42 seconds) suminf.    4.74903 (53) obj. 320.345 iterations 174
Cbc0038I Pass  87: (8.64 seconds) suminf.    7.41475 (51) obj. 320.345 iterations 1396
Cbc0038I No solution found this major pass
Cbc0038I After 8.64 seconds - Feasibility pump exiting with objective of 332 - took 5.42 seconds
Cbc0012I Integer solution of 332 found by feasibility pump after 0 iterations and 0 nodes (8.65 seconds)
Cbc0031I 68 added rows had average density of 18.132353
Cbc0013I At root node, 68 cuts changed objective from 224.44832 to 250 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 73 row cuts average 11.1 elements, 3 column cuts (3 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 111 row cuts average 571.9 elements, 0 column cuts (0 active)  in 0.624 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 195 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 42 row cuts average 34.9 elements, 0 column cuts (0 active)  in 0.496 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 332 best solution, best possible 250 (19.83 seconds)
Cbc0010I After 100 nodes, 9 on tree, 332 best solution, best possible 257 (158.72 seconds)
Cbc0010I After 200 nodes, 23 on tree, 332 best solution, best possible 257 (249.21 seconds)
Cbc0010I After 300 nodes, 21 on tree, 332 best solution, best possible 263 (326.96 seconds)
Cbc0010I After 400 nodes, 26 on tree, 332 best solution, best possible 263 (387.74 seconds)
Cbc0010I After 500 nodes, 24 on tree, 332 best solution, best possible 263 (462.03 seconds)
Cbc0010I After 600 nodes, 23 on tree, 332 best solution, best possible 263 (534.26 seconds)
Cbc0010I After 700 nodes, 20 on tree, 332 best solution, best possible 265 (618.55 seconds)
Cbc0010I After 800 nodes, 28 on tree, 332 best solution, best possible 265 (705.76 seconds)
Cbc0010I After 900 nodes, 23 on tree, 332 best solution, best possible 265 (774.12 seconds)
Cbc0010I After 1000 nodes, 25 on tree, 332 best solution, best possible 268 (856.53 seconds)
Cbc0010I After 1100 nodes, 41 on tree, 332 best solution, best possible 268 (919.54 seconds)
Cbc0010I After 1200 nodes, 42 on tree, 332 best solution, best possible 268 (987.61 seconds)
Cbc0010I After 1300 nodes, 43 on tree, 332 best solution, best possible 268 (1043.36 seconds)
Cbc0010I After 1400 nodes, 39 on tree, 332 best solution, best possible 268 (1075.18 seconds)
Cbc0010I After 1500 nodes, 40 on tree, 332 best solution, best possible 268 (1119.10 seconds)
Cbc0010I After 1600 nodes, 38 on tree, 332 best solution, best possible 268 (1161.55 seconds)
Cbc0010I After 1700 nodes, 36 on tree, 332 best solution, best possible 268 (1188.33 seconds)
Cbc0010I After 1800 nodes, 40 on tree, 332 best solution, best possible 268 (1246.34 seconds)
Cbc0010I After 1900 nodes, 44 on tree, 332 best solution, best possible 268 (1272.24 seconds)
Cbc0010I After 2000 nodes, 49 on tree, 332 best solution, best possible 268 (1291.94 seconds)
Cbc0010I After 2100 nodes, 50 on tree, 332 best solution, best possible 268 (1309.90 seconds)
Cbc0010I After 2200 nodes, 48 on tree, 332 best solution, best possible 268 (1325.83 seconds)
Cbc0010I After 2300 nodes, 43 on tree, 332 best solution, best possible 268 (1343.54 seconds)
Cbc0010I After 2400 nodes, 51 on tree, 332 best solution, best possible 268 (1369.11 seconds)
Cbc0010I After 2500 nodes, 41 on tree, 332 best solution, best possible 268 (1401.32 seconds)
Cbc0010I After 2600 nodes, 40 on tree, 332 best solution, best possible 268 (1418.72 seconds)
Cbc0010I After 2700 nodes, 41 on tree, 332 best solution, best possible 268 (1430.98 seconds)
Cbc0010I After 2800 nodes, 60 on tree, 332 best solution, best possible 268 (1450.65 seconds)
Cbc0010I After 2900 nodes, 57 on tree, 332 best solution, best possible 268 (1461.95 seconds)
Cbc0010I After 3000 nodes, 55 on tree, 332 best solution, best possible 268 (1473.21 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1113 rows 345 columns
Cbc0010I After 3100 nodes, 56 on tree, 332 best solution, best possible 268 (1482.53 seconds)
Cbc0010I After 3200 nodes, 45 on tree, 332 best solution, best possible 268 (1493.12 seconds)
Cbc0010I After 3300 nodes, 53 on tree, 332 best solution, best possible 268 (1502.11 seconds)
Cbc0010I After 3400 nodes, 47 on tree, 332 best solution, best possible 268 (1512.09 seconds)
Cbc0010I After 3500 nodes, 57 on tree, 332 best solution, best possible 268 (1526.70 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 797 rows 232 columns
Cbc0010I After 3600 nodes, 56 on tree, 332 best solution, best possible 268 (1534.70 seconds)
Cbc0010I After 3700 nodes, 48 on tree, 332 best solution, best possible 268 (1543.11 seconds)
Cbc0010I After 3800 nodes, 39 on tree, 332 best solution, best possible 268 (1554.03 seconds)
Cbc0010I After 3900 nodes, 38 on tree, 332 best solution, best possible 268 (1601.72 seconds)
Cbc0010I After 4000 nodes, 34 on tree, 332 best solution, best possible 268 (1620.96 seconds)
Cbc0010I After 4100 nodes, 48 on tree, 332 best solution, best possible 268 (1688.38 seconds)
Cbc0010I After 4200 nodes, 61 on tree, 332 best solution, best possible 268 (1702.45 seconds)
Cbc0010I After 4300 nodes, 49 on tree, 332 best solution, best possible 268 (1715.95 seconds)
Cbc0010I After 4400 nodes, 55 on tree, 332 best solution, best possible 268 (1742.82 seconds)
Cbc0010I After 4500 nodes, 44 on tree, 332 best solution, best possible 268 (1759.50 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 332 (best possible 268), took 4155838 iterations and 4586 nodes (1798.25 seconds)
Cbc0032I Strong branching done 27040 times (2119141 iterations), fathomed 154 nodes and fixed 3763 variables
Cbc0035I Maximum depth 86, 0 variables fixed on reduced cost
Cuts at root node changed objective from 224.448 to 250
Probing was tried 3425 times and created 322606 cuts of which 0 were active after adding rounds of cuts (23.652 seconds)
Gomory was tried 2692 times and created 2738 cuts of which 0 were active after adding rounds of cuts (17.005 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 2692 times and created 34940 cuts of which 0 were active after adding rounds of cuts (7.023 seconds)
ZeroHalf was tried 2692 times and created 5328 cuts of which 0 were active after adding rounds of cuts (92.847 seconds)

Result - Stopped on time limit

Objective value:                332.00000000
Lower bound:                    268.000
Gap:                            0.24
Enumerated nodes:               4586
Total iterations:               4155838
Time (CPU seconds):             1798.50
Time (Wallclock seconds):       1806.54

Total time (CPU seconds):       1798.52   (Wallclock seconds):       1806.56

