Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_15_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_15_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20480 - 0.01 seconds
Cgl0002I 30 variables fixed
Cgl0003I 0 fixed, 2 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 568 rows, 207 columns (207 integer (191 of which binary)) and 1869 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 207 objects (207 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 105 integers unsatisfied sum - 31.0112
Cbc0038I Pass   1: suminf.    6.00000 (21) obj. 24085 iterations 239
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 25600 iterations 49
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 25087.1
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    6.00000 (21) obj. 24085 iterations 0
Cbc0038I Pass   4: suminf.    0.51749 (6) obj. 25087.1 iterations 63
Cbc0038I Pass   5: suminf.    0.72619 (6) obj. 25087.1 iterations 139
Cbc0038I Pass   6: suminf.   21.30783 (106) obj. 25087.1 iterations 210
Cbc0038I Pass   7: suminf.   16.95452 (79) obj. 25087.1 iterations 109
Cbc0038I Pass   8: suminf.   13.07489 (67) obj. 25087.1 iterations 41
Cbc0038I Pass   9: suminf.   11.00357 (62) obj. 25087.1 iterations 50
Cbc0038I Pass  10: suminf.   11.06637 (60) obj. 25087.1 iterations 3
Cbc0038I Pass  11: suminf.    2.59768 (34) obj. 25087.1 iterations 74
Cbc0038I Pass  12: suminf.    2.59768 (34) obj. 25087.1 iterations 4
Cbc0038I Pass  13: suminf.    6.26792 (39) obj. 25087.1 iterations 68
Cbc0038I Pass  14: suminf.    0.51749 (6) obj. 25087.1 iterations 34
Cbc0038I Pass  15: suminf.    0.72619 (6) obj. 25087.1 iterations 63
Cbc0038I Pass  16: suminf.    9.60787 (79) obj. 25087.1 iterations 126
Cbc0038I Pass  17: suminf.    3.31441 (31) obj. 25087.1 iterations 75
Cbc0038I Pass  18: suminf.    3.31441 (31) obj. 25087.1 iterations 0
Cbc0038I Pass  19: suminf.    6.06622 (26) obj. 25087.1 iterations 101
Cbc0038I Pass  20: suminf.    5.44492 (32) obj. 25087.1 iterations 46
Cbc0038I Pass  21: suminf.    4.56424 (27) obj. 25087.1 iterations 37
Cbc0038I Pass  22: suminf.    4.22370 (23) obj. 25087.1 iterations 131
Cbc0038I Pass  23: suminf.    4.06751 (26) obj. 25087.1 iterations 9
Cbc0038I Pass  24: suminf.    1.78782 (26) obj. 25087.1 iterations 65
Cbc0038I Pass  25: suminf.    2.36006 (24) obj. 25087.1 iterations 135
Cbc0038I Pass  26: suminf.    2.55165 (26) obj. 25087.1 iterations 28
Cbc0038I Pass  27: suminf.    3.31730 (22) obj. 25087.1 iterations 54
Cbc0038I Pass  28: suminf.    1.70777 (21) obj. 25087.1 iterations 13
Cbc0038I Pass  29: suminf.    2.66917 (18) obj. 25087.1 iterations 94
Cbc0038I Pass  30: suminf.    2.35088 (21) obj. 25087.1 iterations 54
Cbc0038I Pass  31: suminf.    6.10009 (13) obj. 25087.1 iterations 88
Cbc0038I Pass  32: suminf.    0.72619 (6) obj. 25087.1 iterations 52
Cbc0038I Pass  33: suminf.    0.51749 (6) obj. 25087.1 iterations 18
Cbc0038I Pass  34: suminf.   14.49556 (68) obj. 25087.1 iterations 121
Cbc0038I Pass  35: suminf.    3.41699 (39) obj. 25087.1 iterations 113
Cbc0038I Pass  36: suminf.    3.40331 (26) obj. 25087.1 iterations 11
Cbc0038I Pass  37: suminf.    1.95624 (27) obj. 25087.1 iterations 153
Cbc0038I Pass  38: suminf.    5.74439 (32) obj. 25087.1 iterations 115
Cbc0038I Pass  39: suminf.    5.39159 (33) obj. 25087.1 iterations 57
Cbc0038I Pass  40: suminf.    4.44473 (28) obj. 25087.1 iterations 60
Cbc0038I Pass  41: suminf.    2.09905 (23) obj. 25087.1 iterations 14
Cbc0038I Pass  42: suminf.    3.47306 (19) obj. 25087.1 iterations 61
Cbc0038I Pass  43: suminf.    2.52230 (17) obj. 25087.1 iterations 12
Cbc0038I Pass  44: suminf.    1.40949 (19) obj. 25087.1 iterations 33
Cbc0038I Pass  45: suminf.    2.09057 (22) obj. 25087.1 iterations 80
Cbc0038I Pass  46: suminf.    1.85784 (16) obj. 25087.1 iterations 29
Cbc0038I Pass  47: suminf.    0.85141 (7) obj. 25087.1 iterations 41
Cbc0038I Pass  48: suminf.    0.72619 (6) obj. 25087.1 iterations 36
Cbc0038I Pass  49: suminf.    0.51749 (6) obj. 25087.1 iterations 17
Cbc0038I Pass  50: suminf.   14.77600 (88) obj. 25087.1 iterations 143
Cbc0038I Pass  51: suminf.    9.65903 (46) obj. 25087.1 iterations 106
Cbc0038I Pass  52: suminf.    7.61965 (43) obj. 25087.1 iterations 45
Cbc0038I Pass  53: suminf.    4.58741 (29) obj. 25005.5 iterations 128
Cbc0038I Pass  54: suminf.    3.31811 (30) obj. 25087.1 iterations 52
Cbc0038I Pass  55: suminf.    0.76793 (13) obj. 25087.1 iterations 59
Cbc0038I Pass  56: suminf.    0.51749 (6) obj. 25087.1 iterations 7
Cbc0038I Pass  57: suminf.    0.72619 (6) obj. 25087.1 iterations 55
Cbc0038I Pass  58: suminf.   18.28257 (94) obj. 25087.1 iterations 185
Cbc0038I Pass  59: suminf.   11.73954 (66) obj. 25087.1 iterations 87
Cbc0038I Pass  60: suminf.    9.09097 (51) obj. 25087.1 iterations 48
Cbc0038I Pass  61: suminf.    7.85780 (49) obj. 25087.1 iterations 43
Cbc0038I Pass  62: suminf.    4.58800 (39) obj. 25087.1 iterations 31
Cbc0038I Pass  63: suminf.    2.47263 (32) obj. 25087.1 iterations 25
Cbc0038I Pass  64: suminf.    1.59921 (5) obj. 25087.1 iterations 15
Cbc0038I Pass  65: suminf.    0.10009 (1) obj. 25087.1 iterations 3
Cbc0038I Solution found of 25087.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 569 rows 207 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 568 rows 207 columns, reduced to 544 rows 195 columns - 38 fixed gives 340, 115 - still too large
Cbc0038I Full problem 568 rows 207 columns, reduced to 124 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I Round again with cutoff of 23756
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  66: suminf.    6.06029 (21) obj. 23756 iterations 23
Cbc0038I Pass  67: suminf.    1.50073 (6) obj. 23756 iterations 40
Cbc0038I Pass  68: suminf.    2.25106 (6) obj. 23756 iterations 126
Cbc0038I Pass  69: suminf.   18.09716 (68) obj. 23756 iterations 221
Cbc0038I Pass  70: suminf.    8.40385 (40) obj. 23756 iterations 178
Cbc0038I Pass  71: suminf.    8.84752 (40) obj. 23756 iterations 9
Cbc0038I Pass  72: suminf.    7.96149 (37) obj. 23756 iterations 34
Cbc0038I Pass  73: suminf.    4.36419 (21) obj. 23756 iterations 71
Cbc0038I Pass  74: suminf.    3.36419 (18) obj. 23756 iterations 6
Cbc0038I Pass  75: suminf.    2.25106 (6) obj. 23756 iterations 175
Cbc0038I Pass  76: suminf.    1.50073 (6) obj. 23756 iterations 18
Cbc0038I Pass  77: suminf.    9.83892 (60) obj. 23756 iterations 102
Cbc0038I Pass  78: suminf.    3.89191 (15) obj. 23756 iterations 87
Cbc0038I Pass  79: suminf.    2.34712 (11) obj. 23756 iterations 62
Cbc0038I Pass  80: suminf.    2.25106 (6) obj. 23756 iterations 24
Cbc0038I Pass  81: suminf.    2.13623 (17) obj. 23756 iterations 38
Cbc0038I Pass  82: suminf.    5.32645 (26) obj. 23756 iterations 66
Cbc0038I Pass  83: suminf.    4.88506 (24) obj. 23756 iterations 88
Cbc0038I Pass  84: suminf.    2.37904 (23) obj. 23756 iterations 30
Cbc0038I Pass  85: suminf.    5.79611 (25) obj. 23756 iterations 191
Cbc0038I Pass  86: suminf.    5.45313 (25) obj. 23756 iterations 32
Cbc0038I Pass  87: suminf.    1.92195 (14) obj. 23756 iterations 72
Cbc0038I Pass  88: suminf.    0.64070 (20) obj. 23756 iterations 37
Cbc0038I Pass  89: suminf.    4.43259 (18) obj. 23756 iterations 41
Cbc0038I Pass  90: suminf.    2.80041 (13) obj. 23756 iterations 7
Cbc0038I Pass  91: suminf.    2.80041 (13) obj. 23756 iterations 3
Cbc0038I Pass  92: suminf.    1.95975 (13) obj. 23756 iterations 41
Cbc0038I Pass  93: suminf.    2.25106 (6) obj. 23756 iterations 29
Cbc0038I Pass  94: suminf.    1.50073 (6) obj. 23756 iterations 13
Cbc0038I Pass  95: suminf.    9.90659 (66) obj. 23756 iterations 98
Cbc0038I Pass  96: suminf.    4.21934 (23) obj. 23756 iterations 93
Cbc0038I Pass  97: suminf.    2.02053 (23) obj. 23756 iterations 18
Cbc0038I Pass  98: suminf.    5.05042 (32) obj. 23756 iterations 190
Cbc0038I Pass  99: suminf.    4.93452 (46) obj. 23756 iterations 21
Cbc0038I Pass 100: suminf.    2.30108 (13) obj. 23756 iterations 121
Cbc0038I Pass 101: suminf.    2.60014 (20) obj. 23756 iterations 34
Cbc0038I Pass 102: suminf.    4.32805 (18) obj. 23756 iterations 153
Cbc0038I Pass 103: suminf.    4.15495 (20) obj. 23756 iterations 19
Cbc0038I Pass 104: suminf.    3.91313 (20) obj. 23756 iterations 3
Cbc0038I Pass 105: suminf.    2.52273 (22) obj. 23756 iterations 36
Cbc0038I Pass 106: suminf.    6.85722 (20) obj. 23756 iterations 67
Cbc0038I Pass 107: suminf.    4.79807 (48) obj. 23756 iterations 56
Cbc0038I Pass 108: suminf.    7.10809 (32) obj. 23756 iterations 81
Cbc0038I Pass 109: suminf.    2.07066 (12) obj. 23756 iterations 56
Cbc0038I Pass 110: suminf.    1.50073 (6) obj. 23756 iterations 17
Cbc0038I Pass 111: suminf.    2.25106 (6) obj. 23756 iterations 86
Cbc0038I Pass 112: suminf.   15.10390 (92) obj. 23756 iterations 215
Cbc0038I Pass 113: suminf.   11.60059 (77) obj. 23756 iterations 132
Cbc0038I Pass 114: suminf.   12.01134 (47) obj. 23756 iterations 45
Cbc0038I Pass 115: suminf.    8.37578 (43) obj. 23756 iterations 77
Cbc0038I Pass 116: suminf.    4.15058 (17) obj. 23756 iterations 78
Cbc0038I Pass 117: suminf.    2.25106 (6) obj. 23756 iterations 26
Cbc0038I Pass 118: suminf.    1.50073 (6) obj. 23756 iterations 10
Cbc0038I Pass 119: suminf.   16.19500 (71) obj. 23756 iterations 158
Cbc0038I Pass 120: suminf.    6.57863 (37) obj. 23756 iterations 91
Cbc0038I Pass 121: suminf.    4.92852 (24) obj. 23756 iterations 34
Cbc0038I Pass 122: suminf.    2.58971 (27) obj. 23756 iterations 10
Cbc0038I Pass 123: suminf.    7.23618 (24) obj. 23756 iterations 94
Cbc0038I Pass 124: suminf.    6.49371 (25) obj. 23756 iterations 2
Cbc0038I Pass 125: suminf.    4.78645 (25) obj. 23756 iterations 51
Cbc0038I Pass 126: suminf.    4.41740 (20) obj. 23756 iterations 33
Cbc0038I Pass 127: suminf.    5.18202 (37) obj. 23756 iterations 106
Cbc0038I Pass 128: suminf.    4.80911 (36) obj. 23756 iterations 56
Cbc0038I Pass 129: suminf.    3.03855 (26) obj. 23756 iterations 38
Cbc0038I Pass 130: suminf.    6.47415 (16) obj. 23756 iterations 93
Cbc0038I Pass 131: suminf.    4.78491 (12) obj. 23756 iterations 10
Cbc0038I Pass 132: suminf.    1.50073 (6) obj. 23756 iterations 32
Cbc0038I Pass 133: suminf.    2.25106 (6) obj. 23756 iterations 103
Cbc0038I Pass 134: suminf.   23.90881 (96) obj. 23756 iterations 151
Cbc0038I Pass 135: suminf.    7.38837 (56) obj. 23756 iterations 76
Cbc0038I Pass 136: suminf.    3.78884 (32) obj. 23756 iterations 44
Cbc0038I Pass 137: suminf.    2.34938 (23) obj. 23756 iterations 4
Cbc0038I Pass 138: suminf.    6.70582 (28) obj. 23756 iterations 88
Cbc0038I Pass 139: suminf.    2.10099 (12) obj. 23756 iterations 88
Cbc0038I Pass 140: suminf.    2.00129 (20) obj. 23756 iterations 16
Cbc0038I Pass 141: suminf.    5.21464 (23) obj. 23756 iterations 87
Cbc0038I Pass 142: suminf.    3.90094 (23) obj. 23756 iterations 54
Cbc0038I Pass 143: suminf.    2.38471 (20) obj. 23756 iterations 44
Cbc0038I Pass 144: suminf.    6.70582 (28) obj. 23756 iterations 61
Cbc0038I Pass 145: suminf.    2.47497 (11) obj. 23756 iterations 77
Cbc0038I Pass 146: suminf.    2.47497 (11) obj. 23756 iterations 8
Cbc0038I Pass 147: suminf.    0.64070 (20) obj. 23756 iterations 47
Cbc0038I Pass 148: suminf.    0.64070 (20) obj. 23756 iterations 8
Cbc0038I Pass 149: suminf.    6.68752 (21) obj. 23756 iterations 100
Cbc0038I Pass 150: suminf.    3.85132 (13) obj. 23756 iterations 81
Cbc0038I Pass 151: suminf.    2.25106 (6) obj. 23756 iterations 22
Cbc0038I Pass 152: suminf.    1.50073 (6) obj. 23756 iterations 11
Cbc0038I Pass 153: suminf.   12.98891 (56) obj. 23756 iterations 81
Cbc0038I Pass 154: suminf.    2.93122 (15) obj. 23756 iterations 76
Cbc0038I Pass 155: suminf.    2.93122 (15) obj. 23756 iterations 7
Cbc0038I Pass 156: suminf.    2.25106 (6) obj. 23756 iterations 140
Cbc0038I Pass 157: suminf.    1.50073 (6) obj. 23756 iterations 12
Cbc0038I Pass 158: suminf.   17.47786 (85) obj. 23756 iterations 175
Cbc0038I Pass 159: suminf.    7.88136 (64) obj. 23756 iterations 85
Cbc0038I Pass 160: suminf.    5.44962 (34) obj. 23756 iterations 30
Cbc0038I Pass 161: suminf.    5.14588 (18) obj. 23756 iterations 78
Cbc0038I Pass 162: suminf.    3.90452 (18) obj. 23756 iterations 35
Cbc0038I Pass 163: suminf.    3.42078 (21) obj. 23756 iterations 60
Cbc0038I Pass 164: suminf.    3.74685 (20) obj. 23756 iterations 126
Cbc0038I Pass 165: suminf.   20.98292 (76) obj. 23756 iterations 165
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 568 rows 207 columns, reduced to 545 rows 196 columns - 39 fixed gives 344, 117 - still too large
Cbc0038I Full problem 568 rows 207 columns, reduced to 122 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.54 seconds)
Cbc0038I After 0.54 seconds - Feasibility pump exiting with objective of 24576 - took 0.51 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.54 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 370 rows 113 columns - 34 fixed gives 217, 67 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 77 rows 28 columns
Cbc0031I 35 added rows had average density of 5.7142857
Cbc0013I At root node, 35 cuts changed objective from 20480 to 20524.497 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 186 row cuts average 5.9 elements, 7 column cuts (7 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 23 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 241 row cuts average 93.8 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 24576 best solution, best possible 20525 (0.89 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 440 rows 145 columns - 36 fixed gives 276, 87 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 51 rows 19 columns
Cbc0038I Full problem 603 rows 207 columns, reduced to 521 rows 185 columns - too large
Cbc0038I Full problem 568 rows 207 columns, reduced to 430 rows 141 columns - 35 fixed gives 228, 73 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 102 rows 38 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 433 rows 143 columns - 35 fixed gives 229, 74 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 104 rows 40 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 92 rows 32 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 52 rows 19 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 60 rows 20 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 347 rows 108 columns - 25 fixed gives 163, 51 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 84 rows 30 columns
Cbc0010I After 1000 nodes, 2 on tree, 24576 best solution, best possible 20553.129 (10.70 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 403 rows 130 columns - 33 fixed gives 256, 78 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 53 rows 20 columns
Cbc0010I After 2000 nodes, 11 on tree, 24576 best solution, best possible 20553.129 (19.40 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 360 rows 112 columns - 28 fixed gives 206, 61 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 86 rows 31 columns
Cbc0010I After 3000 nodes, 22 on tree, 24576 best solution, best possible 20553.129 (27.90 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 385 rows 123 columns - 29 fixed gives 203, 63 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 53 rows 20 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 77 rows 28 columns
Cbc0010I After 4000 nodes, 44 on tree, 24576 best solution, best possible 20553.129 (36.29 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 129 rows 44 columns
Cbc0010I After 5000 nodes, 77 on tree, 24576 best solution, best possible 20553.129 (44.79 seconds)
Cbc0010I After 6000 nodes, 104 on tree, 24576 best solution, best possible 20553.129 (53.78 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 403 rows 130 columns - 33 fixed gives 257, 79 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 53 rows 20 columns
Cbc0010I After 7000 nodes, 124 on tree, 24576 best solution, best possible 20553.129 (62.19 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 112 rows 39 columns
Cbc0010I After 8000 nodes, 156 on tree, 24576 best solution, best possible 20553.129 (70.68 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 382 rows 121 columns - 30 fixed gives 206, 64 - ok now
Cbc0038I Full problem 568 rows 207 columns, reduced to 93 rows 33 columns
Cbc0010I After 9000 nodes, 182 on tree, 24576 best solution, best possible 20553.129 (77.95 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 71 rows 27 columns
Cbc0010I After 10000 nodes, 198 on tree, 24576 best solution, best possible 20553.129 (84.44 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 76 rows 28 columns
Cbc0010I After 11000 nodes, 213 on tree, 24576 best solution, best possible 20553.129 (90.68 seconds)
Cbc0010I After 12000 nodes, 12 on tree, 24576 best solution, best possible 23356 (97.40 seconds)
Cbc0010I After 13000 nodes, 2 on tree, 24576 best solution, best possible 23544 (104.70 seconds)
Cbc0010I After 14000 nodes, 20 on tree, 24576 best solution, best possible 23554 (111.05 seconds)
Cbc0010I After 15000 nodes, 3 on tree, 24576 best solution, best possible 23620 (116.19 seconds)
Cbc0010I After 16000 nodes, 4 on tree, 24576 best solution, best possible 23655 (121.08 seconds)
Cbc0010I After 17000 nodes, 4 on tree, 24576 best solution, best possible 23688 (125.92 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 384 rows 122 columns - 31 fixed gives 234, 71 - ok now
Cbc0010I After 18000 nodes, 15 on tree, 24576 best solution, best possible 23691 (130.69 seconds)
Cbc0010I After 19000 nodes, 3 on tree, 24576 best solution, best possible 23743 (135.24 seconds)
Cbc0010I After 20000 nodes, 1 on tree, 24576 best solution, best possible 23777 (139.88 seconds)
Cbc0010I After 21000 nodes, 3 on tree, 24576 best solution, best possible 23809 (144.55 seconds)
Cbc0010I After 22000 nodes, 20 on tree, 24576 best solution, best possible 23810 (149.28 seconds)
Cbc0010I After 23000 nodes, 1 on tree, 24576 best solution, best possible 23871 (154.16 seconds)
Cbc0010I After 24000 nodes, 4 on tree, 24576 best solution, best possible 23903 (158.98 seconds)
Cbc0010I After 25000 nodes, 4 on tree, 24576 best solution, best possible 23932 (163.74 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 323 rows 107 columns - 28 fixed gives 202, 66 - ok now
Cbc0010I After 26000 nodes, 16 on tree, 24576 best solution, best possible 23933 (168.38 seconds)
Cbc0010I After 27000 nodes, 1 on tree, 24576 best solution, best possible 23987 (173.41 seconds)
Cbc0010I After 28000 nodes, 5 on tree, 24576 best solution, best possible 24013 (178.37 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 367 rows 120 columns - 29 fixed gives 243, 78 - ok now
Cbc0010I After 29000 nodes, 3 on tree, 24576 best solution, best possible 24042 (183.30 seconds)
Cbc0010I After 30000 nodes, 14 on tree, 24576 best solution, best possible 24043 (188.34 seconds)
Cbc0010I After 31000 nodes, 3 on tree, 24576 best solution, best possible 24102 (193.34 seconds)
Cbc0010I After 32000 nodes, 4 on tree, 24576 best solution, best possible 24133 (198.10 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 298 rows 99 columns - 25 fixed gives 180, 62 - ok now
Cbc0010I After 33000 nodes, 4 on tree, 24576 best solution, best possible 24171 (202.59 seconds)
Cbc0010I After 34000 nodes, 24 on tree, 24576 best solution, best possible 24175 (207.20 seconds)
Cbc0010I After 35000 nodes, 6 on tree, 24576 best solution, best possible 24243 (211.78 seconds)
Cbc0010I After 36000 nodes, 5 on tree, 24576 best solution, best possible 24279 (216.43 seconds)
Cbc0010I After 37000 nodes, 3 on tree, 24576 best solution, best possible 24314 (221.02 seconds)
Cbc0010I After 38000 nodes, 26 on tree, 24576 best solution, best possible 24316 (225.64 seconds)
Cbc0010I After 39000 nodes, 5 on tree, 24576 best solution, best possible 24384 (230.35 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 323 rows 104 columns - 27 fixed gives 139, 47 - ok now
Cbc0010I After 40000 nodes, 4 on tree, 24576 best solution, best possible 24411 (234.78 seconds)
Cbc0010I After 41000 nodes, 3 on tree, 24576 best solution, best possible 24444 (239.32 seconds)
Cbc0010I After 42000 nodes, 18 on tree, 24576 best solution, best possible 24445 (243.81 seconds)
Cbc0010I After 43000 nodes, 3 on tree, 24576 best solution, best possible 24508 (248.38 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 192 rows 64 columns
Cbc0010I After 44000 nodes, 3 on tree, 24576 best solution, best possible 24534 (252.92 seconds)
Cbc0010I After 45000 nodes, 3 on tree, 24576 best solution, best possible 24560 (257.51 seconds)
Cbc0001I Search completed - best objective 24576, took 3054927 iterations and 45702 nodes (260.85 seconds)
Cbc0032I Strong branching done 74004 times (1431869 iterations), fathomed 7090 nodes and fixed 13685 variables
Cbc0035I Maximum depth 3200, 6 variables fixed on reduced cost
Cuts at root node changed objective from 20480 to 20525
Probing was tried 7952 times and created 181764 cuts of which 0 were active after adding rounds of cuts (3.971 seconds)
Gomory was tried 4906 times and created 1907 cuts of which 0 were active after adding rounds of cuts (2.178 seconds)
Knapsack was tried 4906 times and created 3998 cuts of which 0 were active after adding rounds of cuts (0.904 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 24 times and created 241 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ImplicationCuts was tried 54 times and created 88 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               45702
Total iterations:               3054927
Time (CPU seconds):             260.86
Time (Wallclock seconds):       265.14

Total time (CPU seconds):       260.86   (Wallclock seconds):       265.15

