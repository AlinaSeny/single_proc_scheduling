Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_5_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_5_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 264.964 - 0.09 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 9 tightened bounds, 308 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 106 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 1 tightened bounds, 9 strengthened rows, 1 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 1386 rows, 489 columns (489 integer (467 of which binary)) and 4671 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 489 objects (489 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 268 integers unsatisfied sum - 69.2978
Cbc0038I Pass   1: suminf.   46.21755 (262) obj. 322.443 iterations 466
Cbc0038I Pass   2: suminf.   39.85590 (228) obj. 369.551 iterations 133
Cbc0038I Pass   3: suminf.   35.56255 (191) obj. 368.789 iterations 201
Cbc0038I Pass   4: suminf.   29.58810 (160) obj. 360.118 iterations 152
Cbc0038I Pass   5: suminf.   29.49319 (151) obj. 365.585 iterations 59
Cbc0038I Pass   6: suminf.   27.80988 (145) obj. 414.409 iterations 212
Cbc0038I Pass   7: suminf.   26.51451 (146) obj. 396.603 iterations 61
Cbc0038I Pass   8: suminf.   22.49871 (123) obj. 426.327 iterations 143
Cbc0038I Pass   9: suminf.   22.67998 (142) obj. 426.085 iterations 50
Cbc0038I Pass  10: suminf.   17.01379 (122) obj. 439.144 iterations 130
Cbc0038I Pass  11: suminf.   12.95892 (102) obj. 436.908 iterations 101
Cbc0038I Pass  12: suminf.   13.22040 (94) obj. 431.784 iterations 13
Cbc0038I Pass  13: suminf.    1.59563 (35) obj. 434.091 iterations 148
Cbc0038I Pass  14: suminf.    1.59106 (33) obj. 434.091 iterations 29
Cbc0038I Pass  15: suminf.    2.48023 (25) obj. 450 iterations 201
Cbc0038I Pass  16: suminf.    2.48023 (25) obj. 450 iterations 2
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 450 iterations 39
Cbc0038I Solution found of 450
Cbc0038I Cleaned solution of 450
Cbc0038I Before mini branch and bound, 135 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1086 rows 354 columns - 44 fixed gives 729, 226 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I Round again with cutoff of 430.645
Cbc0038I Pass  18: suminf.   46.21755 (262) obj. 322.443 iterations 0
Cbc0038I Pass  19: suminf.   39.85590 (228) obj. 369.551 iterations 111
Cbc0038I Pass  20: suminf.   35.56255 (191) obj. 368.789 iterations 143
Cbc0038I Pass  21: suminf.   29.58810 (160) obj. 360.118 iterations 177
Cbc0038I Pass  22: suminf.   29.49319 (151) obj. 365.585 iterations 82
Cbc0038I Pass  23: suminf.   25.23196 (130) obj. 430.645 iterations 187
Cbc0038I Pass  24: suminf.   24.17939 (134) obj. 430.645 iterations 65
Cbc0038I Pass  25: suminf.   23.34959 (125) obj. 430.645 iterations 42
Cbc0038I Pass  26: suminf.   18.31586 (113) obj. 430.645 iterations 134
Cbc0038I Pass  27: suminf.   17.94474 (120) obj. 430.645 iterations 45
Cbc0038I Pass  28: suminf.   10.34465 (70) obj. 430.645 iterations 181
Cbc0038I Pass  29: suminf.    8.84952 (65) obj. 430.645 iterations 56
Cbc0038I Pass  30: suminf.    4.15072 (42) obj. 430.645 iterations 122
Cbc0038I Pass  31: suminf.    3.59968 (28) obj. 430.645 iterations 22
Cbc0038I Pass  32: suminf.    2.07216 (18) obj. 430.645 iterations 91
Cbc0038I Pass  33: suminf.    1.52852 (19) obj. 430.645 iterations 15
Cbc0038I Pass  34: suminf.    0.35460 (1) obj. 430.645 iterations 31
Cbc0038I Solution found of 430.645
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1387 rows 489 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 396
Cbc0038I Before mini branch and bound, 135 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1085 rows 354 columns - 124 fixed gives 327, 105 - ok now
Cbc0038I Full problem 1386 rows 489 columns, reduced to 140 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 396 to 372 (0.66 seconds)
Cbc0038I Round again with cutoff of 349.891
Cbc0038I Pass  35: suminf.   46.21755 (262) obj. 322.443 iterations 0
Cbc0038I Pass  36: suminf.   40.31765 (229) obj. 349.891 iterations 112
Cbc0038I Pass  37: suminf.   36.67003 (192) obj. 349.891 iterations 175
Cbc0038I Pass  38: suminf.   32.38838 (153) obj. 349.891 iterations 148
Cbc0038I Pass  39: suminf.   31.01280 (168) obj. 349.891 iterations 114
Cbc0038I Pass  40: suminf.   26.54966 (169) obj. 349.891 iterations 109
Cbc0038I Pass  41: suminf.   27.22312 (170) obj. 349.891 iterations 50
Cbc0038I Pass  42: suminf.   25.58050 (132) obj. 349.891 iterations 156
Cbc0038I Pass  43: suminf.   23.44408 (121) obj. 349.891 iterations 96
Cbc0038I Pass  44: suminf.   20.36759 (113) obj. 349.891 iterations 217
Cbc0038I Pass  45: suminf.   18.00612 (116) obj. 349.891 iterations 95
Cbc0038I Pass  46: suminf.   17.90194 (117) obj. 349.891 iterations 8
Cbc0038I Pass  47: suminf.   13.64086 (83) obj. 349.891 iterations 331
Cbc0038I Pass  48: suminf.   11.11925 (92) obj. 349.891 iterations 207
Cbc0038I Pass  49: suminf.    4.99709 (54) obj. 349.891 iterations 235
Cbc0038I Pass  50: suminf.    4.66509 (59) obj. 349.891 iterations 72
Cbc0038I Pass  51: suminf.    4.70308 (31) obj. 349.891 iterations 154
Cbc0038I Pass  52: suminf.    3.69279 (27) obj. 349.891 iterations 12
Cbc0038I Pass  53: suminf.    1.25474 (32) obj. 349.891 iterations 80
Cbc0038I Pass  54: suminf.    1.25474 (32) obj. 349.891 iterations 6
Cbc0038I Pass  55: suminf.    3.51100 (30) obj. 349.891 iterations 81
Cbc0038I Pass  56: suminf.    2.87112 (19) obj. 349.891 iterations 31
Cbc0038I Pass  57: suminf.    0.10930 (1) obj. 349.891 iterations 62
Cbc0038I Solution found of 349.891
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1387 rows 489 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 321
Cbc0038I Before mini branch and bound, 114 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1131 rows 375 columns - 121 fixed gives 442, 140 - ok now
Cbc0038I Full problem 1386 rows 489 columns, reduced to 234 rows 82 columns
Cbc0038I Mini branch and bound improved solution from 321 to 307 (0.92 seconds)
Cbc0038I Round again with cutoff of 293.836
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 4
Cbc0038I Pass  58: suminf.   46.57253 (276) obj. 293 iterations 131
Cbc0038I Pass  59: suminf.   43.02338 (227) obj. 293.836 iterations 135
Cbc0038I Pass  60: suminf.   29.00341 (185) obj. 293.836 iterations 186
Cbc0038I Pass  61: suminf.   17.83706 (94) obj. 287 iterations 177
Cbc0038I Pass  62: suminf.   15.85826 (84) obj. 289.359 iterations 40
Cbc0038I Pass  63: suminf.   12.45514 (65) obj. 288.463 iterations 49
Cbc0038I Pass  64: suminf.    7.19081 (49) obj. 287 iterations 35
Cbc0038I Pass  65: suminf.    2.16564 (23) obj. 287 iterations 43
Cbc0038I Pass  66: suminf.    1.04735 (21) obj. 287 iterations 42
Cbc0038I Pass  67: suminf.    1.04735 (21) obj. 287 iterations 15
Cbc0038I Pass  68: suminf.    0.78135 (19) obj. 287 iterations 56
Cbc0038I Pass  69: suminf.    1.66580 (28) obj. 293.836 iterations 44
Cbc0038I Pass  70: suminf.    1.55093 (16) obj. 293.836 iterations 113
Cbc0038I Pass  71: suminf.    1.56263 (19) obj. 293.836 iterations 17
Cbc0038I Pass  72: suminf.    0.48141 (14) obj. 293.836 iterations 117
Cbc0038I Pass  73: suminf.    0.16400 (1) obj. 293.836 iterations 42
Cbc0038I Solution found of 293.836
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1387 rows 489 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 287
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1061 rows 341 columns - 111 fixed gives 423, 134 - ok now
Cbc0038I Full problem 1386 rows 489 columns, reduced to 227 rows 81 columns
Cbc0038I Mini branch and bound did not improve solution (1.10 seconds)
Cbc0038I Round again with cutoff of 279.836
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 5
Cbc0038I Pass  74: suminf.   48.21881 (273) obj. 279.836 iterations 71
Cbc0038I Pass  75: suminf.   48.20853 (250) obj. 279.836 iterations 133
Cbc0038I Pass  76: suminf.   47.29085 (242) obj. 279.836 iterations 59
Cbc0038I Pass  77: suminf.   28.64028 (217) obj. 279.836 iterations 153
Cbc0038I Pass  78: suminf.   25.39200 (192) obj. 279.836 iterations 156
Cbc0038I Pass  79: suminf.   24.31779 (199) obj. 279.836 iterations 25
Cbc0038I Pass  80: suminf.   16.31739 (163) obj. 279.836 iterations 178
Cbc0038I Pass  81: suminf.   14.58753 (157) obj. 279.836 iterations 62
Cbc0038I Pass  82: suminf.   14.42829 (153) obj. 279.836 iterations 101
Cbc0038I Pass  83: suminf.   13.54425 (151) obj. 279.836 iterations 87
Cbc0038I Pass  84: suminf.   13.96898 (148) obj. 279.836 iterations 116
Cbc0038I Pass  85: suminf.   37.63317 (200) obj. 279.836 iterations 366
Cbc0038I Pass  86: suminf.   19.34690 (172) obj. 279.836 iterations 285
Cbc0038I Pass  87: suminf.   16.47648 (148) obj. 279.836 iterations 110
Cbc0038I Pass  88: suminf.   15.44119 (157) obj. 279.836 iterations 81
Cbc0038I Pass  89: suminf.   14.61342 (146) obj. 279.836 iterations 46
Cbc0038I Pass  90: suminf.   13.98424 (147) obj. 279.836 iterations 15
Cbc0038I Pass  91: suminf.   15.66272 (166) obj. 279.836 iterations 105
Cbc0038I Pass  92: suminf.   37.76653 (207) obj. 279.836 iterations 363
Cbc0038I Pass  93: suminf.   22.91955 (162) obj. 279.836 iterations 232
Cbc0038I Pass  94: suminf.   22.08614 (164) obj. 279.836 iterations 15
Cbc0038I Pass  95: suminf.   14.43840 (163) obj. 279.836 iterations 142
Cbc0038I Pass  96: suminf.   15.10659 (155) obj. 279.836 iterations 33
Cbc0038I Pass  97: suminf.   16.03528 (157) obj. 279.836 iterations 77
Cbc0038I Pass  98: suminf.   15.44837 (161) obj. 279.836 iterations 39
Cbc0038I Pass  99: suminf.   15.76011 (160) obj. 279.836 iterations 23
Cbc0038I Pass 100: suminf.   15.96029 (153) obj. 279.836 iterations 93
Cbc0038I Pass 101: suminf.   14.79007 (161) obj. 279.836 iterations 82
Cbc0038I Pass 102: suminf.   13.91478 (148) obj. 279.836 iterations 58
Cbc0038I Pass 103: suminf.   14.11287 (142) obj. 279.836 iterations 49
Cbc0038I Pass 104: suminf.   31.12941 (208) obj. 279.836 iterations 253
Cbc0038I Pass 105: suminf.   19.47774 (174) obj. 279.836 iterations 264
Cbc0038I Pass 106: suminf.   18.78542 (169) obj. 279.836 iterations 15
Cbc0038I Pass 107: suminf.   15.28585 (147) obj. 279.836 iterations 112
Cbc0038I Pass 108: suminf.   15.34112 (149) obj. 279.836 iterations 8
Cbc0038I Pass 109: suminf.   15.26178 (148) obj. 279.836 iterations 55
Cbc0038I Pass 110: suminf.   15.12351 (146) obj. 279.836 iterations 21
Cbc0038I Pass 111: suminf.   15.81160 (148) obj. 279.836 iterations 60
Cbc0038I Pass 112: suminf.   15.53768 (150) obj. 279.836 iterations 20
Cbc0038I Pass 113: suminf.   15.95767 (147) obj. 279.836 iterations 108
Cbc0038I Pass 114: suminf.   14.97255 (150) obj. 279.836 iterations 45
Cbc0038I Pass 115: suminf.   13.94964 (143) obj. 279.836 iterations 95
Cbc0038I Pass 116: suminf.   13.63588 (148) obj. 279.836 iterations 38
Cbc0038I Pass 117: suminf.   14.94037 (161) obj. 279.836 iterations 138
Cbc0038I Pass 118: suminf.   14.26624 (158) obj. 279.836 iterations 111
Cbc0038I Pass 119: suminf.   14.42773 (152) obj. 279.836 iterations 89
Cbc0038I Pass 120: suminf.   46.34358 (216) obj. 279.836 iterations 278
Cbc0038I Pass 121: suminf.   21.50797 (161) obj. 279.836 iterations 248
Cbc0038I Pass 122: suminf.   20.53507 (172) obj. 279.836 iterations 57
Cbc0038I Pass 123: suminf.   17.67422 (161) obj. 279.836 iterations 73
Cbc0038I Pass 124: suminf.   17.04634 (157) obj. 279.836 iterations 28
Cbc0038I Pass 125: suminf.   16.99620 (146) obj. 279.836 iterations 155
Cbc0038I Pass 126: suminf.   15.89382 (148) obj. 279.836 iterations 42
Cbc0038I Pass 127: suminf.   13.47755 (135) obj. 279.836 iterations 77
Cbc0038I Pass 128: suminf.   14.36929 (145) obj. 279.836 iterations 48
Cbc0038I Pass 129: suminf.   17.48602 (169) obj. 279.836 iterations 162
Cbc0038I Pass 130: suminf.   14.26624 (158) obj. 279.836 iterations 135
Cbc0038I Pass 131: suminf.   16.63248 (174) obj. 279.836 iterations 127
Cbc0038I Pass 132: suminf.   13.63588 (148) obj. 279.836 iterations 104
Cbc0038I Pass 133: suminf.   14.64731 (156) obj. 279.836 iterations 77
Cbc0038I Pass 134: suminf.   41.55468 (238) obj. 279.836 iterations 295
Cbc0038I Pass 135: suminf.   18.28991 (151) obj. 279.836 iterations 251
Cbc0038I Pass 136: suminf.   16.41966 (151) obj. 279.836 iterations 65
Cbc0038I Pass 137: suminf.   14.36299 (139) obj. 279.836 iterations 82
Cbc0038I Pass 138: suminf.   14.06607 (150) obj. 279.836 iterations 46
Cbc0038I Pass 139: suminf.   15.96625 (158) obj. 279.836 iterations 95
Cbc0038I Pass 140: suminf.   14.74231 (158) obj. 279.836 iterations 91
Cbc0038I Pass 141: suminf.   14.51683 (150) obj. 279.836 iterations 67
Cbc0038I Pass 142: suminf.   14.36929 (145) obj. 279.836 iterations 24
Cbc0038I Pass 143: suminf.   17.48602 (169) obj. 279.836 iterations 119
Cbc0038I Pass 144: suminf.   14.26624 (158) obj. 279.836 iterations 119
Cbc0038I Pass 145: suminf.   16.66394 (148) obj. 279.836 iterations 118
Cbc0038I Pass 146: suminf.   36.61540 (209) obj. 279.836 iterations 351
Cbc0038I Pass 147: suminf.   20.87289 (168) obj. 279.836 iterations 215
Cbc0038I Pass 148: suminf.   19.62852 (163) obj. 279.836 iterations 25
Cbc0038I Pass 149: suminf.   17.12975 (164) obj. 279.836 iterations 45
Cbc0038I Pass 150: suminf.   15.42399 (150) obj. 279.836 iterations 133
Cbc0038I Pass 151: suminf.   14.87250 (155) obj. 279.836 iterations 92
Cbc0038I Pass 152: suminf.   14.59240 (144) obj. 279.836 iterations 71
Cbc0038I Pass 153: suminf.   13.70552 (151) obj. 279.836 iterations 73
Cbc0038I Pass 154: suminf.   14.48855 (152) obj. 279.836 iterations 105
Cbc0038I Pass 155: suminf.   13.89577 (146) obj. 279.836 iterations 115
Cbc0038I Pass 156: suminf.   14.08837 (153) obj. 279.836 iterations 123
Cbc0038I Pass 157: suminf.   30.26554 (183) obj. 279.836 iterations 297
Cbc0038I Pass 158: suminf.   17.72603 (154) obj. 279.836 iterations 213
Cbc0038I Pass 159: suminf.   14.68320 (150) obj. 279.836 iterations 116
Cbc0038I Pass 160: suminf.   14.68320 (150) obj. 279.836 iterations 7
Cbc0038I Pass 161: suminf.   16.17728 (142) obj. 279.836 iterations 133
Cbc0038I Pass 162: suminf.   13.24146 (150) obj. 279.836 iterations 91
Cbc0038I Pass 163: suminf.   14.70456 (143) obj. 279.836 iterations 66
Cbc0038I Pass 164: suminf.   13.91478 (148) obj. 279.836 iterations 61
Cbc0038I Pass 165: suminf.   15.02481 (167) obj. 279.836 iterations 90
Cbc0038I Pass 166: suminf.   41.30692 (198) obj. 279.836 iterations 368
Cbc0038I Pass 167: suminf.   17.36749 (162) obj. 279.836 iterations 274
Cbc0038I Pass 168: suminf.   16.92359 (169) obj. 279.836 iterations 77
Cbc0038I Pass 169: suminf.   16.03632 (159) obj. 279.836 iterations 96
Cbc0038I Pass 170: suminf.   16.07887 (163) obj. 279.836 iterations 56
Cbc0038I Pass 171: suminf.   16.07887 (163) obj. 279.836 iterations 4
Cbc0038I Pass 172: suminf.   15.76773 (158) obj. 279.836 iterations 93
Cbc0038I Pass 173: suminf.   30.01381 (225) obj. 279.836 iterations 260
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1286 rows 439 columns - 133 fixed gives 489, 159 - ok now
Cbc0038I Mini branch and bound did not improve solution (2.01 seconds)
Cbc0038I After 2.01 seconds - Feasibility pump exiting with objective of 287 - took 1.78 seconds
Cbc0012I Integer solution of 287 found by feasibility pump after 0 iterations and 0 nodes (2.01 seconds)
Cbc0038I Full problem 1386 rows 489 columns, reduced to 935 rows 282 columns - 104 fixed gives 253, 70 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 265.45312 to 284.26749 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 115 row cuts average 2.0 elements, 32 column cuts (32 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 287, took 404 iterations and 0 nodes (2.22 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Cuts at root node changed objective from 265.453 to 284.267
Probing was tried 1 times and created 147 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                287.00000000
Enumerated nodes:               0
Total iterations:               404
Time (CPU seconds):             2.25
Time (Wallclock seconds):       2.27

Total time (CPU seconds):       2.25   (Wallclock seconds):       2.28

