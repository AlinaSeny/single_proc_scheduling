Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_30_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_30_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 31744 - 0.30 seconds
Cgl0002I 94 variables fixed
Cgl0003I 0 fixed, 12 tightened bounds, 460 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 13 tightened bounds, 95 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 2845 rows, 918 columns (918 integer (887 of which binary)) and 9642 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 918 objects (918 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 518 integers unsatisfied sum - 173.613
Cbc0038I Pass   1: suminf.   26.39172 (165) obj. 46160.4 iterations 1305
Cbc0038I Pass   2: suminf.   21.31658 (148) obj. 46384.8 iterations 378
Cbc0038I Pass   3: suminf.   15.00065 (135) obj. 50567.6 iterations 583
Cbc0038I Pass   4: suminf.   13.18788 (137) obj. 51065.4 iterations 160
Cbc0038I Pass   5: suminf.   12.49452 (137) obj. 51157.2 iterations 74
Cbc0038I Pass   6: suminf.   12.92332 (116) obj. 50089.2 iterations 358
Cbc0038I Pass   7: suminf.    8.67580 (100) obj. 49152 iterations 110
Cbc0038I Pass   8: suminf.    7.03520 (111) obj. 49152 iterations 153
Cbc0038I Pass   9: suminf.    4.98174 (67) obj. 49152 iterations 520
Cbc0038I Pass  10: suminf.    3.46320 (61) obj. 49152 iterations 90
Cbc0038I Pass  11: suminf.    0.76234 (36) obj. 49152 iterations 360
Cbc0038I Pass  12: suminf.    0.76234 (36) obj. 49152 iterations 19
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 49152 iterations 60
Cbc0038I Solution found of 49152
Cbc0038I Cleaned solution of 49152
Cbc0038I Before mini branch and bound, 322 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2845 rows 918 columns, reduced to 2168 rows 596 columns - 112 fixed gives 966, 253 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.16 seconds)
Cbc0038I Round again with cutoff of 47410.3
Cbc0038I Pass  14: suminf.   26.39172 (165) obj. 46160.4 iterations 0
Cbc0038I Pass  15: suminf.   21.31658 (148) obj. 46384.8 iterations 363
Cbc0038I Pass  16: suminf.   14.85004 (138) obj. 47410.3 iterations 304
Cbc0038I Pass  17: suminf.   13.31692 (132) obj. 47410.3 iterations 182
Cbc0038I Pass  18: suminf.   10.72638 (129) obj. 47410.3 iterations 441
Cbc0038I Pass  19: suminf.    9.29929 (135) obj. 47410.3 iterations 331
Cbc0038I Pass  20: suminf.    9.22344 (130) obj. 47410.3 iterations 23
Cbc0038I Pass  21: suminf.   14.05226 (109) obj. 47410.3 iterations 637
Cbc0038I Pass  22: suminf.   11.13009 (103) obj. 47410.3 iterations 140
Cbc0038I Pass  23: suminf.    9.37228 (104) obj. 47410.3 iterations 60
Cbc0038I Pass  24: suminf.    9.37228 (104) obj. 47410.3 iterations 10
Cbc0038I Pass  25: suminf.    8.99077 (125) obj. 45385 iterations 522
Cbc0038I Pass  26: suminf.   11.87373 (95) obj. 47410.3 iterations 236
Cbc0038I Pass  27: suminf.    9.10880 (90) obj. 47410.3 iterations 97
Cbc0038I Pass  28: suminf.    8.86860 (91) obj. 47410.3 iterations 9
Cbc0038I Pass  29: suminf.    5.70706 (82) obj. 45677.7 iterations 388
Cbc0038I Pass  30: suminf.    3.90325 (83) obj. 45677.7 iterations 51
Cbc0038I Pass  31: suminf.    5.18465 (135) obj. 47410.3 iterations 473
Cbc0038I Pass  32: suminf.    3.95626 (57) obj. 45671.5 iterations 260
Cbc0038I Pass  33: suminf.    3.95752 (61) obj. 45671.5 iterations 29
Cbc0038I Pass  34: suminf.    4.70553 (51) obj. 47410.3 iterations 331
Cbc0038I Pass  35: suminf.    4.70553 (51) obj. 47410.3 iterations 8
Cbc0038I Pass  36: suminf.    4.84404 (27) obj. 45056 iterations 162
Cbc0038I Pass  37: suminf.    4.86670 (39) obj. 45056 iterations 197
Cbc0038I Pass  38: suminf.    5.28664 (26) obj. 47410.3 iterations 145
Cbc0038I Pass  39: suminf.    3.60852 (24) obj. 47410.3 iterations 42
Cbc0038I Pass  40: suminf.    3.32318 (30) obj. 47410.3 iterations 35
Cbc0038I Pass  41: suminf.    3.30208 (35) obj. 45056 iterations 397
Cbc0038I Pass  42: suminf.    3.04853 (28) obj. 45056 iterations 79
Cbc0038I Pass  43: suminf.    2.38347 (20) obj. 47410.3 iterations 621
Cbc0038I Pass  44: suminf.    1.89251 (20) obj. 47410.3 iterations 24
Cbc0038I Pass  45: suminf.    3.04751 (23) obj. 47410.3 iterations 91
Cbc0038I Pass  46: suminf.    2.40666 (23) obj. 46842.7 iterations 46
Cbc0038I Pass  47: suminf.    3.05996 (23) obj. 47410.3 iterations 119
Cbc0038I Pass  48: suminf.    2.04592 (25) obj. 45843.6 iterations 49
Cbc0038I Pass  49: suminf.    3.32603 (46) obj. 47410.3 iterations 229
Cbc0038I Pass  50: suminf.    2.71570 (46) obj. 47410.3 iterations 75
Cbc0038I Pass  51: suminf.    2.16046 (48) obj. 47410.3 iterations 66
Cbc0038I Pass  52: suminf.    2.15765 (47) obj. 47410.3 iterations 7
Cbc0038I Pass  53: suminf.    1.26968 (35) obj. 46983.4 iterations 85
Cbc0038I Pass  54: suminf.    1.26968 (35) obj. 46983.4 iterations 1
Cbc0038I Pass  55: suminf.    6.68174 (43) obj. 47410.3 iterations 131
Cbc0038I Pass  56: suminf.    4.15700 (25) obj. 45056 iterations 46
Cbc0038I Pass  57: suminf.    1.28655 (34) obj. 47410.3 iterations 1036
Cbc0038I Pass  58: suminf.    3.46648 (34) obj. 45056 iterations 182
Cbc0038I Pass  59: suminf.    0.64009 (29) obj. 45056 iterations 80
Cbc0038I Pass  60: suminf.    0.64009 (29) obj. 45056 iterations 3
Cbc0038I Pass  61: suminf.    3.02721 (29) obj. 47410.3 iterations 37
Cbc0038I Pass  62: suminf.    0.75945 (12) obj. 47410.3 iterations 28
Cbc0038I Pass  63: suminf.    0.26175 (9) obj. 45056 iterations 56
Cbc0038I Pass  64: suminf.    0.65053 (6) obj. 47410.3 iterations 11
Cbc0038I Pass  65: suminf.    0.65053 (6) obj. 47410.3 iterations 15
Cbc0038I Pass  66: suminf.    0.00000 (0) obj. 45056 iterations 90
Cbc0038I Solution found of 45056
Cbc0038I Cleaned solution of 45056
Cbc0038I Before mini branch and bound, 289 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.29 seconds)
Cbc0038I Round again with cutoff of 42392.8
Cbc0038I Pass  67: suminf.   24.08851 (183) obj. 42392 iterations 140
Cbc0038I Pass  68: suminf.   18.89438 (149) obj. 42392.8 iterations 696
Cbc0038I Pass  69: suminf.   17.99559 (147) obj. 42392.8 iterations 80
Cbc0038I Pass  70: suminf.   18.40826 (199) obj. 42392.8 iterations 465
Cbc0038I Pass  71: suminf.   15.41916 (173) obj. 42392.8 iterations 138
Cbc0038I Pass  72: suminf.   14.75429 (192) obj. 42392.8 iterations 168
Cbc0038I Pass  73: suminf.   13.64591 (138) obj. 42392.8 iterations 160
Cbc0038I Pass  74: suminf.   12.95196 (132) obj. 42392.8 iterations 68
Cbc0038I Pass  75: suminf.    9.96691 (136) obj. 42392.8 iterations 354
Cbc0038I Pass  76: suminf.    9.37079 (138) obj. 42392.8 iterations 33
Cbc0038I Pass  77: suminf.   10.02959 (120) obj. 42392.8 iterations 148
Cbc0038I Pass  78: suminf.   10.02959 (120) obj. 42392.8 iterations 2
Cbc0038I Pass  79: suminf.    8.02377 (98) obj. 42392.8 iterations 649
Cbc0038I Pass  80: suminf.    6.90428 (104) obj. 42392.8 iterations 126
Cbc0038I Pass  81: suminf.   10.25979 (159) obj. 42392.8 iterations 507
Cbc0038I Pass  82: suminf.   10.35150 (156) obj. 42392.8 iterations 36
Cbc0038I Pass  83: suminf.    9.54146 (98) obj. 42392.8 iterations 554
Cbc0038I Pass  84: suminf.    8.69862 (102) obj. 42392.8 iterations 114
Cbc0038I Pass  85: suminf.   10.13137 (100) obj. 42392.8 iterations 156
Cbc0038I Pass  86: suminf.    7.99431 (92) obj. 42392.8 iterations 152
Cbc0038I Pass  87: suminf.    7.57830 (96) obj. 42392.8 iterations 236
Cbc0038I Pass  88: suminf.   10.16458 (150) obj. 42392.8 iterations 308
Cbc0038I Pass  89: suminf.    8.52859 (85) obj. 42392.8 iterations 355
Cbc0038I Pass  90: suminf.    7.90277 (76) obj. 42392.8 iterations 145
Cbc0038I Pass  91: suminf.    7.71004 (109) obj. 42392.8 iterations 262
Cbc0038I Pass  92: suminf.    7.68488 (108) obj. 42392.8 iterations 14
Cbc0038I Pass  93: suminf.    7.42958 (91) obj. 42392.8 iterations 499
Cbc0038I Pass  94: suminf.    7.42958 (91) obj. 42392.8 iterations 4
Cbc0038I Pass  95: suminf.    6.54202 (84) obj. 42392.8 iterations 217
Cbc0038I Pass  96: suminf.    5.21664 (78) obj. 42392.8 iterations 126
Cbc0038I Pass  97: suminf.    9.07563 (155) obj. 42392.8 iterations 519
Cbc0038I Pass  98: suminf.    6.53151 (156) obj. 42392.8 iterations 178
Cbc0038I Pass  99: suminf.    9.96615 (163) obj. 42392.8 iterations 458
Cbc0038I Pass 100: suminf.    7.81301 (91) obj. 42392.8 iterations 221
Cbc0038I Pass 101: suminf.    6.70369 (80) obj. 42392.8 iterations 250
Cbc0038I Pass 102: suminf.    6.55369 (76) obj. 42392.8 iterations 28
Cbc0038I Pass 103: suminf.    6.76141 (74) obj. 42392.8 iterations 171
Cbc0038I Pass 104: suminf.    6.54113 (77) obj. 42392.8 iterations 84
Cbc0038I Pass 105: suminf.    8.07924 (73) obj. 42392.8 iterations 289
Cbc0038I Pass 106: suminf.    6.14765 (72) obj. 42392.8 iterations 58
Cbc0038I Pass 107: suminf.    9.19501 (79) obj. 42392.8 iterations 204
Cbc0038I Pass 108: suminf.   54.37279 (344) obj. 42392.8 iterations 869
Cbc0038I Pass 109: suminf.   26.31255 (172) obj. 42392.8 iterations 777
Cbc0038I Pass 110: suminf.   22.36870 (165) obj. 42392.8 iterations 189
Cbc0038I Pass 111: suminf.   18.21633 (142) obj. 42392.8 iterations 127
Cbc0038I Pass 112: suminf.   17.51906 (146) obj. 42392.8 iterations 30
Cbc0038I Pass 113: suminf.   16.67839 (152) obj. 42392.8 iterations 280
Cbc0038I Pass 114: suminf.   12.76714 (129) obj. 42392.8 iterations 205
Cbc0038I Pass 115: suminf.   12.76714 (129) obj. 42392.8 iterations 10
Cbc0038I Pass 116: suminf.   10.69121 (120) obj. 42392.8 iterations 148
Cbc0038I Pass 117: suminf.   10.69121 (120) obj. 42392.8 iterations 18
Cbc0038I Pass 118: suminf.    8.79678 (112) obj. 42392.8 iterations 45
Cbc0038I Pass 119: suminf.    8.79678 (112) obj. 42392.8 iterations 9
Cbc0038I Pass 120: suminf.    6.77042 (76) obj. 42392.8 iterations 308
Cbc0038I Pass 121: suminf.    4.53298 (78) obj. 42392.8 iterations 168
Cbc0038I Pass 122: suminf.    4.17411 (77) obj. 42392.8 iterations 74
Cbc0038I Pass 123: suminf.   10.50893 (78) obj. 42392.8 iterations 532
Cbc0038I Pass 124: suminf.   10.54866 (74) obj. 42392.8 iterations 31
Cbc0038I Pass 125: suminf.   11.06539 (68) obj. 42392.8 iterations 208
Cbc0038I Pass 126: suminf.    8.31174 (65) obj. 42392.8 iterations 102
Cbc0038I Pass 127: suminf.    7.01327 (74) obj. 42392.8 iterations 95
Cbc0038I Pass 128: suminf.   18.50931 (92) obj. 42392.8 iterations 568
Cbc0038I Pass 129: suminf.   16.82832 (102) obj. 42392.8 iterations 166
Cbc0038I Pass 130: suminf.    8.45735 (61) obj. 42392.8 iterations 357
Cbc0038I Pass 131: suminf.    7.42172 (60) obj. 42392.8 iterations 52
Cbc0038I Pass 132: suminf.    9.23332 (59) obj. 42392.8 iterations 194
Cbc0038I Pass 133: suminf.    8.12598 (71) obj. 42392.8 iterations 171
Cbc0038I Pass 134: suminf.   10.94593 (62) obj. 42392.8 iterations 261
Cbc0038I Pass 135: suminf.   10.17408 (75) obj. 42392.8 iterations 219
Cbc0038I Pass 136: suminf.    8.41184 (65) obj. 42392.8 iterations 257
Cbc0038I Pass 137: suminf.    8.17584 (78) obj. 42392.8 iterations 85
Cbc0038I Pass 138: suminf.   10.32041 (76) obj. 42392.8 iterations 197
Cbc0038I Pass 139: suminf.    8.53264 (80) obj. 42392.8 iterations 158
Cbc0038I Pass 140: suminf.    8.79561 (63) obj. 42392.8 iterations 308
Cbc0038I Pass 141: suminf.    8.39139 (70) obj. 42392.8 iterations 199
Cbc0038I Pass 142: suminf.   10.09963 (68) obj. 42392.8 iterations 344
Cbc0038I Pass 143: suminf.    7.05746 (74) obj. 42392.8 iterations 594
Cbc0038I Pass 144: suminf.    6.57975 (85) obj. 42392.8 iterations 150
Cbc0038I Pass 145: suminf.   11.57036 (70) obj. 42392.8 iterations 500
Cbc0038I Pass 146: suminf.    8.94038 (82) obj. 42392.8 iterations 125
Cbc0038I Pass 147: suminf.   10.03735 (79) obj. 42392.8 iterations 253
Cbc0038I Pass 148: suminf.    7.31423 (76) obj. 42392.8 iterations 173
Cbc0038I Pass 149: suminf.   10.87229 (64) obj. 42392.8 iterations 260
Cbc0038I Pass 150: suminf.    8.67187 (76) obj. 42392.8 iterations 150
Cbc0038I Pass 151: suminf.    9.02219 (60) obj. 42392.8 iterations 154
Cbc0038I Pass 152: suminf.    5.72282 (64) obj. 42392.8 iterations 156
Cbc0038I Pass 153: suminf.   18.57919 (96) obj. 42392.8 iterations 480
Cbc0038I No solution found this major pass
Cbc0038I After 4.67 seconds - Feasibility pump exiting with objective of 45056 - took 4.24 seconds
Cbc0012I Integer solution of 45056 found by feasibility pump after 0 iterations and 0 nodes (4.68 seconds)
Cbc0031I 74 added rows had average density of 12.472973
Cbc0013I At root node, 74 cuts changed objective from 31744 to 34569.147 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 125 row cuts average 5.5 elements, 11 column cuts (28 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 409 row cuts average 259.1 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 635 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 45056 best solution, best possible 34570 (14.87 seconds)
Cbc0010I After 100 nodes, 18 on tree, 45056 best solution, best possible 34703.081 (70.77 seconds)
Cbc0010I After 200 nodes, 38 on tree, 45056 best solution, best possible 34703.081 (138.31 seconds)
Cbc0038I Full problem 2845 rows 918 columns, reduced to 1999 rows 563 columns - 291 fixed gives 302, 72 - ok now
Cbc0038I Full problem 2845 rows 918 columns, reduced to 23 rows 13 columns
Cbc0010I After 300 nodes, 59 on tree, 45056 best solution, best possible 34703.081 (184.54 seconds)
Cbc0010I After 400 nodes, 57 on tree, 45056 best solution, best possible 34703.081 (217.54 seconds)
Cbc0038I Full problem 2845 rows 918 columns, reduced to 2063 rows 586 columns - 297 fixed gives 250, 60 - ok now
Cbc0038I Full problem 2845 rows 918 columns, reduced to 90 rows 34 columns
Cbc0010I After 500 nodes, 59 on tree, 45056 best solution, best possible 34703.081 (250.15 seconds)
Cbc0010I After 600 nodes, 62 on tree, 45056 best solution, best possible 34703.081 (282.61 seconds)
Cbc0010I After 700 nodes, 98 on tree, 45056 best solution, best possible 34703.081 (320.53 seconds)
Cbc0010I After 800 nodes, 148 on tree, 45056 best solution, best possible 34703.081 (357.79 seconds)
Cbc0010I After 900 nodes, 198 on tree, 45056 best solution, best possible 34703.081 (397.32 seconds)
Cbc0010I After 1000 nodes, 248 on tree, 45056 best solution, best possible 34703.081 (436.87 seconds)
Cbc0010I After 1100 nodes, 253 on tree, 45056 best solution, best possible 34703.081 (470.33 seconds)
Cbc0010I After 1200 nodes, 253 on tree, 45056 best solution, best possible 34703.081 (496.23 seconds)
Cbc0010I After 1300 nodes, 257 on tree, 45056 best solution, best possible 34703.081 (528.92 seconds)
Cbc0010I After 1400 nodes, 252 on tree, 45056 best solution, best possible 34703.081 (557.83 seconds)
Cbc0010I After 1500 nodes, 251 on tree, 45056 best solution, best possible 34703.081 (584.27 seconds)
Cbc0010I After 1600 nodes, 252 on tree, 45056 best solution, best possible 34703.081 (612.13 seconds)
Cbc0010I After 1700 nodes, 252 on tree, 45056 best solution, best possible 34703.081 (636.09 seconds)
Cbc0010I After 1800 nodes, 251 on tree, 45056 best solution, best possible 34703.081 (662.71 seconds)
Cbc0010I After 1900 nodes, 252 on tree, 45056 best solution, best possible 34703.081 (688.33 seconds)
Cbc0010I After 2000 nodes, 250 on tree, 45056 best solution, best possible 34703.081 (710.94 seconds)
Cbc0010I After 2100 nodes, 250 on tree, 45056 best solution, best possible 34703.081 (741.00 seconds)
Cbc0010I After 2200 nodes, 251 on tree, 45056 best solution, best possible 34703.081 (769.47 seconds)
Cbc0010I After 2300 nodes, 251 on tree, 45056 best solution, best possible 34703.081 (795.52 seconds)
Cbc0010I After 2400 nodes, 256 on tree, 45056 best solution, best possible 34703.081 (821.99 seconds)
Cbc0010I After 2500 nodes, 259 on tree, 45056 best solution, best possible 34703.081 (850.02 seconds)
Cbc0010I After 2600 nodes, 261 on tree, 45056 best solution, best possible 34703.081 (877.22 seconds)
Cbc0010I After 2700 nodes, 262 on tree, 45056 best solution, best possible 34703.081 (905.88 seconds)
Cbc0010I After 2800 nodes, 264 on tree, 45056 best solution, best possible 34703.081 (934.69 seconds)
Cbc0010I After 2900 nodes, 265 on tree, 45056 best solution, best possible 34703.081 (964.13 seconds)
Cbc0038I Full problem 2845 rows 918 columns, reduced to 2026 rows 564 columns - 305 fixed gives 293, 67 - ok now
Cbc0038I Full problem 2845 rows 918 columns, reduced to 95 rows 36 columns
Cbc0010I After 3000 nodes, 265 on tree, 45056 best solution, best possible 34703.081 (991.69 seconds)
Cbc0010I After 3100 nodes, 269 on tree, 45056 best solution, best possible 34703.081 (1019.61 seconds)
Cbc0010I After 3200 nodes, 268 on tree, 45056 best solution, best possible 34703.081 (1047.47 seconds)
Cbc0010I After 3300 nodes, 269 on tree, 45056 best solution, best possible 34703.081 (1072.74 seconds)
Cbc0010I After 3400 nodes, 269 on tree, 45056 best solution, best possible 34703.081 (1098.25 seconds)
Cbc0010I After 3500 nodes, 273 on tree, 45056 best solution, best possible 34703.081 (1126.72 seconds)
Cbc0010I After 3600 nodes, 275 on tree, 45056 best solution, best possible 34703.081 (1153.75 seconds)
Cbc0010I After 3700 nodes, 275 on tree, 45056 best solution, best possible 34703.081 (1179.54 seconds)
Cbc0010I After 3800 nodes, 275 on tree, 45056 best solution, best possible 34703.081 (1205.38 seconds)
Cbc0010I After 3900 nodes, 275 on tree, 45056 best solution, best possible 34703.081 (1230.86 seconds)
Cbc0010I After 4000 nodes, 277 on tree, 45056 best solution, best possible 34703.081 (1254.68 seconds)
Cbc0010I After 4100 nodes, 286 on tree, 45056 best solution, best possible 34703.081 (1279.74 seconds)
Cbc0010I After 4200 nodes, 290 on tree, 45056 best solution, best possible 34703.081 (1305.06 seconds)
Cbc0010I After 4300 nodes, 291 on tree, 45056 best solution, best possible 34703.081 (1330.53 seconds)
Cbc0010I After 4400 nodes, 297 on tree, 45056 best solution, best possible 34703.081 (1355.04 seconds)
Cbc0010I After 4500 nodes, 302 on tree, 45056 best solution, best possible 34703.081 (1381.44 seconds)
Cbc0010I After 4600 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1409.56 seconds)
Cbc0010I After 4700 nodes, 301 on tree, 45056 best solution, best possible 34703.081 (1437.50 seconds)
Cbc0010I After 4800 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1464.14 seconds)
Cbc0010I After 4900 nodes, 301 on tree, 45056 best solution, best possible 34703.081 (1488.05 seconds)
Cbc0010I After 5000 nodes, 301 on tree, 45056 best solution, best possible 34703.081 (1512.90 seconds)
Cbc0010I After 5100 nodes, 302 on tree, 45056 best solution, best possible 34703.081 (1540.92 seconds)
Cbc0010I After 5200 nodes, 305 on tree, 45056 best solution, best possible 34703.081 (1567.86 seconds)
Cbc0010I After 5300 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1592.91 seconds)
Cbc0010I After 5400 nodes, 305 on tree, 45056 best solution, best possible 34703.081 (1619.01 seconds)
Cbc0010I After 5500 nodes, 304 on tree, 45056 best solution, best possible 34703.081 (1646.31 seconds)
Cbc0010I After 5600 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1674.16 seconds)
Cbc0010I After 5700 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1702.56 seconds)
Cbc0010I After 5800 nodes, 304 on tree, 45056 best solution, best possible 34703.081 (1731.59 seconds)
Cbc0010I After 5900 nodes, 303 on tree, 45056 best solution, best possible 34703.081 (1759.44 seconds)
Cbc0010I After 6000 nodes, 306 on tree, 45056 best solution, best possible 34703.081 (1787.68 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 45056 (best possible 34703.081), took 6684553 iterations and 6048 nodes (1800.00 seconds)
Cbc0032I Strong branching done 33886 times (2475651 iterations), fathomed 784 nodes and fixed 6597 variables
Cbc0035I Maximum depth 1289, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31744 to 34570
Probing was tried 1049 times and created 29202 cuts of which 17 were active after adding rounds of cuts (2.975 seconds)
Gomory was tried 877 times and created 7358 cuts of which 0 were active after adding rounds of cuts (4.408 seconds)
Knapsack was tried 877 times and created 2938 cuts of which 0 were active after adding rounds of cuts (0.835 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 20 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 877 times and created 7543 cuts of which 0 were active after adding rounds of cuts (1.667 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ImplicationCuts was tried 37 times and created 98 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

Objective value:                45056.00000000
Lower bound:                    34703.081
Gap:                            0.30
Enumerated nodes:               6048
Total iterations:               6684553
Time (CPU seconds):             1800.10
Time (Wallclock seconds):       1818.68

Total time (CPU seconds):       1800.11   (Wallclock seconds):       1818.70

