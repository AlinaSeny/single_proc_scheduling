Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump45_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump45_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 34133.3 - 4.75 seconds
Cgl0002I 167 variables fixed
Cgl0003I 0 fixed, 14 tightened bounds, 1134 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 165 strengthened rows, 0 substitutions
Cgl0004I processed model has 7057 rows, 2103 columns (2103 integer (2057 of which binary)) and 24321 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2103 objects (2103 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1204 integers unsatisfied sum - 418.303
Cbc0038I Pass   1: (10.26 seconds) suminf.  161.18285 (1302) obj. 70294.6 iterations 4782
Cbc0038I Pass   2: (11.03 seconds) suminf.  102.56232 (1261) obj. 84121.3 iterations 2050
Cbc0038I Pass   3: (11.48 seconds) suminf.   87.14531 (1251) obj. 88342.3 iterations 1121
Cbc0038I Pass   4: (11.75 seconds) suminf.   84.00411 (1244) obj. 87788.1 iterations 560
Cbc0038I Pass   5: (11.81 seconds) suminf.   84.52032 (1240) obj. 87536.1 iterations 111
Cbc0038I Pass   6: (11.95 seconds) suminf.   84.05205 (1247) obj. 86458.9 iterations 241
Cbc0038I Pass   7: (12.22 seconds) suminf.   77.98569 (1214) obj. 86627.6 iterations 572
Cbc0038I Pass   8: (12.32 seconds) suminf.   81.30371 (1251) obj. 87047.6 iterations 171
Cbc0038I Pass   9: (12.60 seconds) suminf.   73.84838 (1231) obj. 89140.6 iterations 615
Cbc0038I Pass  10: (12.92 seconds) suminf.   72.11537 (1237) obj. 90511.2 iterations 717
Cbc0038I Pass  11: (13.44 seconds) suminf.   67.98643 (1231) obj. 86850.2 iterations 1254
Cbc0038I Pass  12: (13.54 seconds) suminf.   66.32071 (1235) obj. 87242.6 iterations 181
Cbc0038I Pass  13: (13.73 seconds) suminf.   65.15167 (1250) obj. 88291.7 iterations 369
Cbc0038I Pass  14: (14.22 seconds) suminf.   65.18332 (1246) obj. 89851.1 iterations 1126
Cbc0038I Pass  15: (14.46 seconds) suminf.   64.99822 (1259) obj. 88846.1 iterations 548
Cbc0038I Pass  16: (14.50 seconds) suminf.   64.40818 (1269) obj. 88857 iterations 66
Cbc0038I Pass  17: (14.96 seconds) suminf.   62.92010 (1273) obj. 92780.5 iterations 1089
Cbc0038I Pass  18: (15.20 seconds) suminf.   61.03879 (1291) obj. 93216.7 iterations 508
Cbc0038I Pass  19: (15.34 seconds) suminf.   59.40354 (1280) obj. 93363 iterations 261
Cbc0038I Pass  20: (15.85 seconds) suminf.   58.61848 (1280) obj. 92729.1 iterations 1126
Cbc0038I Pass  21: (15.87 seconds) suminf.   58.41575 (1271) obj. 92722.2 iterations 33
Cbc0038I Pass  22: (15.96 seconds) suminf.   58.01261 (1310) obj. 92649.6 iterations 138
Cbc0038I Pass  23: (16.39 seconds) suminf.   57.21377 (1273) obj. 93911.1 iterations 1025
Cbc0038I Pass  24: (16.71 seconds) suminf.   53.11759 (1267) obj. 93833.9 iterations 740
Cbc0038I Pass  25: (17.08 seconds) suminf.   54.41158 (1264) obj. 93832.8 iterations 820
Cbc0038I Pass  26: (17.38 seconds) suminf.   54.57745 (1300) obj. 93822.4 iterations 678
Cbc0038I Pass  27: (17.87 seconds) suminf.   52.66816 (1284) obj. 93268.1 iterations 1135
Cbc0038I Pass  28: (18.24 seconds) suminf.   53.61264 (1280) obj. 93845 iterations 823
Cbc0038I Pass  29: (18.59 seconds) suminf.   52.42819 (1259) obj. 93517.1 iterations 803
Cbc0038I Pass  30: (18.82 seconds) suminf.   50.54685 (1317) obj. 93398 iterations 485
Cbc0038I Pass  31: (19.17 seconds) suminf.   53.17908 (1310) obj. 93957 iterations 792
Cbc0038I Pass  32: (19.40 seconds) suminf.   54.24808 (1246) obj. 93942.8 iterations 488
Cbc0038I Pass  33: (19.82 seconds) suminf.   57.11797 (1220) obj. 94233.4 iterations 1051
Cbc0038I Pass  34: (20.06 seconds) suminf.   53.92136 (1272) obj. 93506.4 iterations 535
Cbc0038I Pass  35: (20.21 seconds) suminf.   53.34040 (1287) obj. 93501.7 iterations 249
Cbc0038I Pass  36: (20.25 seconds) suminf.   53.42457 (1289) obj. 93491.2 iterations 57
Cbc0038I Pass  37: (20.62 seconds) suminf.   54.38803 (1294) obj. 93936.1 iterations 866
Cbc0038I Pass  38: (20.96 seconds) suminf.   54.48742 (1252) obj. 93702.6 iterations 815
Cbc0038I Pass  39: (21.27 seconds) suminf.   52.78196 (1238) obj. 93400.2 iterations 764
Cbc0038I Pass  40: (21.47 seconds) suminf.   49.69415 (1236) obj. 93446.9 iterations 420
Cbc0038I Pass  41: (21.92 seconds) suminf.   52.83984 (1277) obj. 93361.9 iterations 1202
Cbc0038I Pass  42: (22.19 seconds) suminf.   50.11066 (1259) obj. 93349.1 iterations 674
Cbc0038I Pass  43: (22.35 seconds) suminf.   50.52414 (1256) obj. 93326.7 iterations 347
Cbc0038I Pass  44: (22.67 seconds) suminf.   53.26049 (1274) obj. 93202 iterations 756
Cbc0038I Pass  45: (22.94 seconds) suminf.   49.69415 (1236) obj. 93446.9 iterations 604
Cbc0038I Pass  46: (23.33 seconds) suminf.   53.07008 (1285) obj. 93432.8 iterations 959
Cbc0038I Pass  47: (23.63 seconds) suminf.   49.86384 (1274) obj. 93366 iterations 719
Cbc0038I Pass  48: (23.81 seconds) suminf.   49.98108 (1265) obj. 93322.6 iterations 372
Cbc0038I Pass  49: (23.99 seconds) suminf.   50.31219 (1260) obj. 93309.3 iterations 375
Cbc0038I Pass  50: (24.35 seconds) suminf.   53.17725 (1281) obj. 93566.3 iterations 820
Cbc0038I Pass  51: (24.64 seconds) suminf.   51.75533 (1232) obj. 93433.4 iterations 720
Cbc0038I Pass  52: (25.01 seconds) suminf.   54.19485 (1270) obj. 93689.8 iterations 957
Cbc0038I Pass  53: (25.31 seconds) suminf.   51.57680 (1240) obj. 93395.4 iterations 798
Cbc0038I Pass  54: (25.45 seconds) suminf.   51.06563 (1240) obj. 93332.7 iterations 276
Cbc0038I Pass  55: (25.59 seconds) suminf.   52.17660 (1223) obj. 93320.3 iterations 266
Cbc0038I Pass  56: (25.91 seconds) suminf.   56.46607 (1277) obj. 93446.7 iterations 807
Cbc0038I Pass  57: (26.17 seconds) suminf.   51.98047 (1226) obj. 93283.5 iterations 607
Cbc0038I Pass  58: (26.22 seconds) suminf.   51.75533 (1232) obj. 93433.4 iterations 93
Cbc0038I Pass  59: (26.49 seconds) suminf.   53.14289 (1270) obj. 93353.4 iterations 612
Cbc0038I Pass  60: (26.77 seconds) suminf.   52.17660 (1223) obj. 93320.3 iterations 688
Cbc0038I Pass  61: (27.19 seconds) suminf.   54.11851 (1305) obj. 93653.7 iterations 1000
Cbc0038I Pass  62: (27.46 seconds) suminf.   50.17762 (1263) obj. 93357.9 iterations 589
Cbc0038I Pass  63: (27.58 seconds) suminf.   50.29682 (1231) obj. 93502.2 iterations 239
Cbc0038I Pass  64: (27.89 seconds) suminf.   52.80840 (1260) obj. 93652.3 iterations 811
Cbc0038I Pass  65: (28.18 seconds) suminf.   51.85590 (1251) obj. 93494.5 iterations 744
Cbc0038I Pass  66: (28.50 seconds) suminf.   55.57079 (1283) obj. 93351.8 iterations 811
Cbc0038I Pass  67: (28.75 seconds) suminf.   50.79289 (1237) obj. 93290.1 iterations 584
Cbc0038I Pass  68: (28.82 seconds) suminf.   50.11149 (1233) obj. 93457 iterations 116
Cbc0038I Pass  69: (29.13 seconds) suminf.   53.35301 (1290) obj. 93604.5 iterations 818
Cbc0038I Pass  70: (29.41 seconds) suminf.   50.50738 (1263) obj. 93154.5 iterations 687
Cbc0038I Pass  71: (29.55 seconds) suminf.   50.28918 (1272) obj. 93257.8 iterations 264
Cbc0038I Pass  72: (29.72 seconds) suminf.   50.35901 (1251) obj. 93282.1 iterations 353
Cbc0038I Pass  73: (30.15 seconds) suminf.   54.70897 (1267) obj. 93205.5 iterations 1036
Cbc0038I Pass  74: (30.49 seconds) suminf.   52.59592 (1252) obj. 93385.4 iterations 808
Cbc0038I Pass  75: (30.62 seconds) suminf.   51.32205 (1222) obj. 93490 iterations 249
Cbc0038I Pass  76: (30.92 seconds) suminf.   51.93259 (1279) obj. 93467.2 iterations 733
Cbc0038I Pass  77: (31.20 seconds) suminf.   50.17466 (1250) obj. 93287.1 iterations 678
Cbc0038I Pass  78: (31.22 seconds) suminf.   50.35901 (1251) obj. 93282.1 iterations 21
Cbc0038I Pass  79: (31.51 seconds) suminf.   54.54686 (1303) obj. 93818.4 iterations 680
Cbc0038I Pass  80: (31.78 seconds) suminf.   51.56633 (1250) obj. 93409.7 iterations 629
Cbc0038I Pass  81: (31.91 seconds) suminf.   51.32205 (1222) obj. 93490 iterations 234
Cbc0038I Pass  82: (32.28 seconds) suminf.   54.01375 (1269) obj. 93567.8 iterations 888
Cbc0038I Pass  83: (32.59 seconds) suminf.   51.08683 (1250) obj. 93287.4 iterations 736
Cbc0038I Pass  84: (32.72 seconds) suminf.   50.43668 (1258) obj. 93267.8 iterations 244
Cbc0038I Pass  85: (32.79 seconds) suminf.   50.35901 (1251) obj. 93282.1 iterations 120
Cbc0038I Pass  86: (33.20 seconds) suminf.   55.00423 (1262) obj. 93238 iterations 999
Cbc0038I Pass  87: (33.52 seconds) suminf.   51.39657 (1251) obj. 93514.2 iterations 765
Cbc0038I Pass  88: (33.69 seconds) suminf.   51.32205 (1222) obj. 93490 iterations 365
Cbc0038I Pass  89: (34.12 seconds) suminf.   53.45506 (1273) obj. 93450.3 iterations 1060
Cbc0038I Pass  90: (34.43 seconds) suminf.   50.03907 (1260) obj. 93276.1 iterations 727
Cbc0038I Pass  91: (34.61 seconds) suminf.   50.43668 (1258) obj. 93267.8 iterations 374
Cbc0038I Pass  92: (34.68 seconds) suminf.   50.35901 (1251) obj. 93282.1 iterations 133
Cbc0038I Pass  93: (35.13 seconds) suminf.   54.33474 (1266) obj. 93205 iterations 1051
Cbc0038I Pass  94: (35.46 seconds) suminf.   52.59592 (1252) obj. 93385.4 iterations 788
Cbc0038I Pass  95: (35.61 seconds) suminf.   51.32205 (1222) obj. 93490 iterations 315
Cbc0038I Pass  96: (36.06 seconds) suminf.   53.45506 (1273) obj. 93450.3 iterations 1135
Cbc0038I Pass  97: (36.36 seconds) suminf.   50.03907 (1260) obj. 93276.1 iterations 729
Cbc0038I Pass  98: (36.54 seconds) suminf.   50.43668 (1258) obj. 93267.8 iterations 349
Cbc0038I Pass  99: (36.60 seconds) suminf.   50.35901 (1251) obj. 93282.1 iterations 109
Cbc0038I Pass 100: (37.47 seconds) suminf.   78.14857 (1260) obj. 113156 iterations 2461
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 134 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7057 rows 2103 columns, reduced to 6728 rows 1961 columns - too large
Cbc0038I Mini branch and bound did not improve solution (37.51 seconds)
Cbc0038I After 37.51 seconds - Feasibility pump exiting - took 29.04 seconds
Cbc0031I 42 added rows had average density of 9.3333333
Cbc0013I At root node, 42 cuts changed objective from 34466.341 to 46080 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 103 row cuts average 31.2 elements, 0 column cuts (0 active)  in 1.262 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 166 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.626 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 10 row cuts average 23.4 elements, 0 column cuts (0 active)  in 1.253 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 46080 (65.10 seconds)
Cbc0010I After 100 nodes, 34 on tree, 1e+50 best solution, best possible 46080 (260.51 seconds)
Cbc0010I After 200 nodes, 50 on tree, 1e+50 best solution, best possible 46080 (442.69 seconds)
Cbc0010I After 300 nodes, 63 on tree, 1e+50 best solution, best possible 46080 (662.11 seconds)
Cbc0010I After 400 nodes, 84 on tree, 1e+50 best solution, best possible 46080 (898.20 seconds)
Cbc0010I After 500 nodes, 108 on tree, 1e+50 best solution, best possible 46080 (1056.89 seconds)
Cbc0010I After 600 nodes, 137 on tree, 1e+50 best solution, best possible 46080 (1265.56 seconds)
Cbc0010I After 700 nodes, 155 on tree, 1e+50 best solution, best possible 46080 (1445.16 seconds)
Cbc0010I After 800 nodes, 182 on tree, 1e+50 best solution, best possible 46080 (1667.51 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 46080), took 1585027 iterations and 858 nodes (1798.02 seconds)
Cbc0032I Strong branching done 12836 times (1171522 iterations), fathomed 48 nodes and fixed 957 variables
Cbc0035I Maximum depth 51, 0 variables fixed on reduced cost
Cuts at root node changed objective from 34466.3 to 46080
Probing was tried 726 times and created 19646 cuts of which 0 were active after adding rounds of cuts (10.886 seconds)
Gomory was tried 698 times and created 728 cuts of which 0 were active after adding rounds of cuts (14.552 seconds)
Knapsack was tried 698 times and created 468 cuts of which 0 were active after adding rounds of cuts (1.301 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 698 times and created 3664 cuts of which 0 were active after adding rounds of cuts (4.500 seconds)
ZeroHalf was tried 698 times and created 1348 cuts of which 0 were active after adding rounds of cuts (85.608 seconds)
ImplicationCuts was tried 22 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    46080.000
Enumerated nodes:               858
Total iterations:               1585027
Time (CPU seconds):             1798.02
Time (Wallclock seconds):       1804.80

Total time (CPU seconds):       1798.05   (Wallclock seconds):       1804.83

