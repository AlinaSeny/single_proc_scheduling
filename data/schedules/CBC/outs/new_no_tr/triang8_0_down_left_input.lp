Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_0_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_0_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 215.116 - 1.08 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 18 tightened bounds, 1042 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 21 tightened bounds, 426 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 221 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 93 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16309 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 782 integers unsatisfied sum - 237.918
Cbc0038I Pass   1: (3.35 seconds) suminf.  118.77251 (754) obj. 300.801 iterations 2204
Cbc0038I Pass   2: (3.61 seconds) suminf.   86.91730 (941) obj. 332.052 iterations 1228
Cbc0038I Pass   3: (3.70 seconds) suminf.   78.36946 (994) obj. 358.92 iterations 371
Cbc0038I Pass   4: (3.74 seconds) suminf.   76.59949 (973) obj. 360.212 iterations 202
Cbc0038I Pass   5: (3.78 seconds) suminf.   76.00197 (951) obj. 360.61 iterations 179
Cbc0038I Pass   6: (3.87 seconds) suminf.   75.08521 (944) obj. 361.208 iterations 480
Cbc0038I Pass   7: (3.95 seconds) suminf.   72.23266 (960) obj. 356.863 iterations 405
Cbc0038I Pass   8: (3.96 seconds) suminf.   72.36056 (961) obj. 358.544 iterations 75
Cbc0038I Pass   9: (4.06 seconds) suminf.   72.75346 (959) obj. 358.285 iterations 471
Cbc0038I Pass  10: (4.10 seconds) suminf.   72.25009 (960) obj. 364.752 iterations 167
Cbc0038I Pass  11: (4.16 seconds) suminf.   71.82665 (949) obj. 399.468 iterations 219
Cbc0038I Pass  12: (4.23 seconds) suminf.   71.36537 (955) obj. 400.094 iterations 389
Cbc0038I Pass  13: (4.27 seconds) suminf.   70.75510 (969) obj. 400.094 iterations 184
Cbc0038I Pass  14: (4.30 seconds) suminf.   70.88144 (964) obj. 400.58 iterations 99
Cbc0038I Pass  15: (4.38 seconds) suminf.   70.51867 (977) obj. 397.548 iterations 430
Cbc0038I Pass  16: (4.41 seconds) suminf.   69.78539 (982) obj. 397.966 iterations 102
Cbc0038I Pass  17: (4.49 seconds) suminf.   70.47822 (961) obj. 398.94 iterations 349
Cbc0038I Pass  18: (4.55 seconds) suminf.   69.40250 (973) obj. 397.385 iterations 295
Cbc0038I Pass  19: (4.65 seconds) suminf.   69.76916 (941) obj. 390.117 iterations 514
Cbc0038I Pass  20: (4.71 seconds) suminf.   68.30111 (948) obj. 398.733 iterations 300
Cbc0038I Pass  21: (4.75 seconds) suminf.   67.77883 (951) obj. 397.128 iterations 156
Cbc0038I Pass  22: (4.80 seconds) suminf.   68.22301 (963) obj. 398.733 iterations 220
Cbc0038I Pass  23: (4.82 seconds) suminf.   67.98541 (953) obj. 398.733 iterations 83
Cbc0038I Pass  24: (4.89 seconds) suminf.   69.63104 (940) obj. 398.454 iterations 357
Cbc0038I Pass  25: (4.94 seconds) suminf.   68.30887 (936) obj. 400.095 iterations 243
Cbc0038I Pass  26: (4.97 seconds) suminf.   68.15049 (949) obj. 398.652 iterations 153
Cbc0038I Pass  27: (5.07 seconds) suminf.   68.57349 (970) obj. 395.352 iterations 455
Cbc0038I Pass  28: (5.13 seconds) suminf.   66.50457 (944) obj. 394.159 iterations 337
Cbc0038I Pass  29: (5.17 seconds) suminf.   66.71492 (949) obj. 397.496 iterations 166
Cbc0038I Pass  30: (5.25 seconds) suminf.   68.16767 (964) obj. 395.87 iterations 410
Cbc0038I Pass  31: (5.32 seconds) suminf.   66.60901 (956) obj. 392.378 iterations 377
Cbc0038I Pass  32: (5.40 seconds) suminf.   67.54756 (972) obj. 395.348 iterations 420
Cbc0038I Pass  33: (5.48 seconds) suminf.   66.58595 (949) obj. 394.524 iterations 374
Cbc0038I Pass  34: (5.54 seconds) suminf.   67.47441 (960) obj. 394.533 iterations 274
Cbc0038I Pass  35: (5.57 seconds) suminf.   67.14476 (962) obj. 394.317 iterations 118
Cbc0038I Pass  36: (5.63 seconds) suminf.   67.40526 (966) obj. 397.08 iterations 293
Cbc0038I Pass  37: (5.69 seconds) suminf.   66.60901 (956) obj. 392.378 iterations 273
Cbc0038I Pass  38: (5.76 seconds) suminf.   67.93482 (947) obj. 396.875 iterations 401
Cbc0038I Pass  39: (5.84 seconds) suminf.   66.58595 (949) obj. 394.524 iterations 415
Cbc0038I Pass  40: (5.94 seconds) suminf.   67.61350 (976) obj. 392.363 iterations 481
Cbc0038I Pass  41: (6.01 seconds) suminf.   66.66457 (972) obj. 397.396 iterations 311
Cbc0038I Pass  42: (6.09 seconds) suminf.   67.58199 (975) obj. 395.67 iterations 383
Cbc0038I Pass  43: (6.13 seconds) suminf.   66.05440 (969) obj. 394.737 iterations 179
Cbc0038I Pass  44: (6.15 seconds) suminf.   66.05859 (985) obj. 393.583 iterations 58
Cbc0038I Pass  45: (6.24 seconds) suminf.   67.86708 (968) obj. 396.708 iterations 476
Cbc0038I Pass  46: (6.30 seconds) suminf.   66.06572 (978) obj. 398.18 iterations 267
Cbc0038I Pass  47: (6.36 seconds) suminf.   67.21236 (986) obj. 400.234 iterations 227
Cbc0038I Pass  48: (6.43 seconds) suminf.   65.90724 (981) obj. 394.083 iterations 318
Cbc0038I Pass  49: (6.50 seconds) suminf.   66.69171 (970) obj. 395.792 iterations 282
Cbc0038I Pass  50: (6.55 seconds) suminf.   66.00724 (978) obj. 398.779 iterations 228
Cbc0038I Pass  51: (6.61 seconds) suminf.   66.66056 (990) obj. 401.123 iterations 307
Cbc0038I Pass  52: (6.67 seconds) suminf.   66.21782 (993) obj. 398.779 iterations 206
Cbc0038I Pass  53: (6.72 seconds) suminf.   66.42246 (957) obj. 402.139 iterations 239
Cbc0038I Pass  54: (6.77 seconds) suminf.   66.05859 (985) obj. 393.583 iterations 223
Cbc0038I Pass  55: (6.86 seconds) suminf.   67.86708 (968) obj. 396.708 iterations 428
Cbc0038I Pass  56: (6.91 seconds) suminf.   66.06572 (978) obj. 398.18 iterations 264
Cbc0038I Pass  57: (6.97 seconds) suminf.   67.12057 (983) obj. 396.123 iterations 237
Cbc0038I Pass  58: (7.04 seconds) suminf.   66.21782 (993) obj. 398.779 iterations 301
Cbc0038I Pass  59: (7.10 seconds) suminf.   67.55079 (963) obj. 397.717 iterations 290
Cbc0038I Pass  60: (7.16 seconds) suminf.   66.05859 (985) obj. 393.583 iterations 268
Cbc0038I Pass  61: (7.24 seconds) suminf.   67.86708 (968) obj. 396.708 iterations 384
Cbc0038I Pass  62: (7.30 seconds) suminf.   66.06572 (978) obj. 398.18 iterations 231
Cbc0038I Pass  63: (7.38 seconds) suminf.   67.65813 (955) obj. 396.921 iterations 394
Cbc0038I Pass  64: (7.44 seconds) suminf.   66.00724 (978) obj. 398.779 iterations 305
Cbc0038I Pass  65: (7.51 seconds) suminf.   66.99047 (998) obj. 392.714 iterations 363
Cbc0038I Pass  66: (7.56 seconds) suminf.   66.29832 (992) obj. 396.107 iterations 200
Cbc0038I Pass  67: (7.63 seconds) suminf.   66.95348 (970) obj. 394.486 iterations 305
Cbc0038I Pass  68: (7.94 seconds) suminf.  125.01272 (968) obj. 536.093 iterations 1693
Cbc0038I Pass  69: (8.15 seconds) suminf.   79.91418 (955) obj. 561.606 iterations 1095
Cbc0038I Pass  70: (8.20 seconds) suminf.   76.59381 (975) obj. 559.529 iterations 256
Cbc0038I Pass  71: (8.23 seconds) suminf.   75.53992 (959) obj. 557.708 iterations 124
Cbc0038I Pass  72: (8.32 seconds) suminf.   75.10101 (997) obj. 561.397 iterations 538
Cbc0038I Pass  73: (8.37 seconds) suminf.   73.05805 (994) obj. 560.967 iterations 239
Cbc0038I Pass  74: (8.44 seconds) suminf.   73.47590 (969) obj. 560.826 iterations 384
Cbc0038I Pass  75: (8.48 seconds) suminf.   72.00168 (968) obj. 559.948 iterations 176
Cbc0038I Pass  76: (8.54 seconds) suminf.   73.96084 (934) obj. 563.851 iterations 321
Cbc0038I Pass  77: (8.58 seconds) suminf.   72.73802 (945) obj. 560.462 iterations 191
Cbc0038I Pass  78: (8.63 seconds) suminf.   70.68464 (979) obj. 561.158 iterations 240
Cbc0038I Pass  79: (8.69 seconds) suminf.   72.10697 (980) obj. 559.839 iterations 295
Cbc0038I Pass  80: (8.74 seconds) suminf.   71.02142 (973) obj. 560.903 iterations 213
Cbc0038I Pass  81: (8.82 seconds) suminf.   72.75329 (989) obj. 562.108 iterations 477
Cbc0038I Pass  82: (8.83 seconds) suminf.   72.88291 (984) obj. 562.412 iterations 26
Cbc0038I Pass  83: (8.90 seconds) suminf.   74.94233 (985) obj. 560.333 iterations 379
Cbc0038I Pass  84: (8.94 seconds) suminf.   73.05981 (989) obj. 561.554 iterations 179
Cbc0038I Pass  85: (8.95 seconds) suminf.   72.47902 (984) obj. 561.688 iterations 63
Cbc0038I Pass  86: (8.97 seconds) suminf.   72.21684 (988) obj. 561.637 iterations 72
Cbc0038I Pass  87: (8.99 seconds) suminf.   71.52394 (979) obj. 561.628 iterations 117
Cbc0038I Pass  88: (9.06 seconds) suminf.   72.49896 (978) obj. 561.42 iterations 395
Cbc0038I Pass  89: (9.11 seconds) suminf.   71.29211 (969) obj. 561.977 iterations 176
Cbc0038I Pass  90: (9.18 seconds) suminf.   73.50231 (983) obj. 559.434 iterations 353
Cbc0038I Pass  91: (9.22 seconds) suminf.   72.75206 (968) obj. 562.296 iterations 159
Cbc0038I Pass  92: (9.25 seconds) suminf.   72.18556 (1000) obj. 562.335 iterations 126
Cbc0038I Pass  93: (9.27 seconds) suminf.   71.62790 (999) obj. 561.565 iterations 115
Cbc0038I Pass  94: (9.34 seconds) suminf.   75.42573 (993) obj. 560.352 iterations 332
Cbc0038I Pass  95: (9.39 seconds) suminf.   72.40801 (971) obj. 559.694 iterations 243
Cbc0038I Pass  96: (9.42 seconds) suminf.   72.18716 (973) obj. 560.473 iterations 121
Cbc0038I Pass  97: (9.49 seconds) suminf.   72.38042 (988) obj. 560.514 iterations 366
Cbc0038I Pass  98: (9.53 seconds) suminf.   71.09028 (966) obj. 561.296 iterations 167
Cbc0038I Pass  99: (9.58 seconds) suminf.   71.08043 (938) obj. 559.905 iterations 310
Cbc0038I Pass 100: (9.80 seconds) suminf.  115.34376 (917) obj. 677.297 iterations 1348
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4514 rows 1506 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.83 seconds)
Cbc0038I After 9.83 seconds - Feasibility pump exiting - took 6.96 seconds
Cbc0031I 30 added rows had average density of 17
Cbc0013I At root node, 30 cuts changed objective from 215.33735 to 254.00087 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 37 row cuts average 3.7 elements, 7 column cuts (7 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 229 row cuts average 262.3 elements, 0 column cuts (0 active)  in 1.105 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 287 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.277 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 68 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.995 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 254.00087 (30.21 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 256 (165.65 seconds)
Cbc0010I After 200 nodes, 8 on tree, 1e+50 best solution, best possible 256 (230.93 seconds)
Cbc0010I After 300 nodes, 25 on tree, 1e+50 best solution, best possible 256 (339.39 seconds)
Cbc0010I After 400 nodes, 75 on tree, 1e+50 best solution, best possible 256 (439.12 seconds)
Cbc0010I After 500 nodes, 125 on tree, 1e+50 best solution, best possible 256 (539.98 seconds)
Cbc0010I After 600 nodes, 175 on tree, 1e+50 best solution, best possible 256 (637.09 seconds)
Cbc0010I After 700 nodes, 225 on tree, 1e+50 best solution, best possible 256 (738.93 seconds)
Cbc0010I After 800 nodes, 275 on tree, 1e+50 best solution, best possible 256 (838.06 seconds)
Cbc0010I After 900 nodes, 325 on tree, 1e+50 best solution, best possible 256 (944.03 seconds)
Cbc0010I After 1000 nodes, 375 on tree, 1e+50 best solution, best possible 256 (1053.04 seconds)
Cbc0004I Integer solution of 637 found after 2832384 iterations and 1035 nodes (1076.37 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2888 rows 811 columns - 127 fixed gives 1354, 327 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 6 rows 3 columns
Cbc0012I Integer solution of 374 found by RINS after 2836346 iterations and 1036 nodes (1079.21 seconds)
Cbc0010I After 1100 nodes, 115 on tree, 374 best solution, best possible 268 (1140.55 seconds)
Cbc0010I After 1200 nodes, 121 on tree, 374 best solution, best possible 268 (1213.95 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2701 rows 797 columns - 87 fixed gives 1688, 464 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 14 rows 8 columns
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2740 rows 796 columns - 115 fixed gives 1348, 332 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 18 rows 9 columns
Cbc0010I After 1300 nodes, 122 on tree, 374 best solution, best possible 268 (1285.18 seconds)
Cbc0010I After 1400 nodes, 120 on tree, 374 best solution, best possible 268 (1352.61 seconds)
Cbc0010I After 1500 nodes, 122 on tree, 374 best solution, best possible 268 (1422.46 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2731 rows 796 columns - 127 fixed gives 1127, 276 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 39 rows 18 columns
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2610 rows 747 columns - 104 fixed gives 1382, 342 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 12 rows 6 columns
Cbc0010I After 1600 nodes, 128 on tree, 374 best solution, best possible 268 (1497.51 seconds)
Cbc0010I After 1700 nodes, 127 on tree, 374 best solution, best possible 268 (1575.68 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2783 rows 797 columns - 141 fixed gives 1302, 313 - ok now
Cbc0010I After 1800 nodes, 127 on tree, 374 best solution, best possible 268 (1643.39 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2641 rows 763 columns - 113 fixed gives 1339, 338 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 27 rows 11 columns
Cbc0010I After 1900 nodes, 129 on tree, 374 best solution, best possible 268 (1710.11 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2927 rows 809 columns - 137 fixed gives 1258, 299 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 58 rows 27 columns
Cbc0010I After 2000 nodes, 109 on tree, 374 best solution, best possible 270 (1788.02 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 374 (best possible 270), took 4422077 iterations and 2012 nodes (1799.48 seconds)
Cbc0032I Strong branching done 20178 times (1696214 iterations), fathomed 51 nodes and fixed 3088 variables
Cbc0035I Maximum depth 410, 0 variables fixed on reduced cost
Cuts at root node changed objective from 215.337 to 254.001
Probing was tried 1652 times and created 69539 cuts of which 0 were active after adding rounds of cuts (17.741 seconds)
Gomory was tried 1574 times and created 6320 cuts of which 0 were active after adding rounds of cuts (13.824 seconds)
Knapsack was tried 20 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Clique was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
MixedIntegerRounding2 was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
FlowCover was tried 20 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 1574 times and created 12840 cuts of which 0 were active after adding rounds of cuts (4.897 seconds)
ZeroHalf was tried 1574 times and created 2657 cuts of which 0 were active after adding rounds of cuts (75.899 seconds)
ImplicationCuts was tried 38 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

Objective value:                374.00000000
Lower bound:                    270.000
Gap:                            0.39
Enumerated nodes:               2012
Total iterations:               4422077
Time (CPU seconds):             1799.74
Time (Wallclock seconds):       1805.24

Total time (CPU seconds):       1799.75   (Wallclock seconds):       1805.26

