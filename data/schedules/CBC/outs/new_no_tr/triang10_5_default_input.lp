Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang10_5_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang10_5_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 235.346 - 15.20 seconds
Cgl0002I 253 variables fixed
Cgl0003I 0 fixed, 34 tightened bounds, 2629 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 32 tightened bounds, 1397 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 28 tightened bounds, 622 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 29 tightened bounds, 228 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 121 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 12052 rows, 4026 columns (4026 integer (3970 of which binary)) and 41720 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 4026 objects (4026 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1948 integers unsatisfied sum - 623.526
Cbc0038I Pass   1: (43.62 seconds) suminf.  109.24434 (645) obj. 464.508 iterations 8320
Cbc0038I Pass   2: (44.53 seconds) suminf.   71.43630 (600) obj. 470.348 iterations 1619
Cbc0038I Pass   3: (44.58 seconds) suminf.   70.99465 (613) obj. 470.49 iterations 53
Cbc0038I Pass   4: (45.49 seconds) suminf.   61.53375 (541) obj. 470.509 iterations 1540
Cbc0038I Pass   5: (45.71 seconds) suminf.   60.40237 (542) obj. 469.516 iterations 263
Cbc0038I Pass   6: (46.13 seconds) suminf.   53.23495 (510) obj. 468.602 iterations 763
Cbc0038I Pass   7: (46.16 seconds) suminf.   53.26104 (509) obj. 468.602 iterations 17
Cbc0038I Pass   8: (46.52 seconds) suminf.   49.70999 (480) obj. 468.783 iterations 554
Cbc0038I Pass   9: (46.54 seconds) suminf.   49.61366 (479) obj. 468.794 iterations 14
Cbc0038I Pass  10: (46.74 seconds) suminf.   45.05799 (452) obj. 468.809 iterations 266
Cbc0038I Pass  11: (46.78 seconds) suminf.   42.84553 (451) obj. 468.86 iterations 45
Cbc0038I Pass  12: (46.83 seconds) suminf.   40.23850 (439) obj. 468.87 iterations 69
Cbc0038I Pass  13: (46.86 seconds) suminf.   40.23850 (439) obj. 468.87 iterations 27
Cbc0038I Pass  14: (47.13 seconds) suminf.   32.46992 (411) obj. 468.964 iterations 383
Cbc0038I Pass  15: (47.18 seconds) suminf.   32.07384 (409) obj. 468.964 iterations 64
Cbc0038I Pass  16: (47.27 seconds) suminf.   29.95043 (400) obj. 468.988 iterations 150
Cbc0038I Pass  17: (47.30 seconds) suminf.   29.88233 (403) obj. 468.988 iterations 32
Cbc0038I Pass  18: (47.44 seconds) suminf.   29.21799 (402) obj. 468.316 iterations 206
Cbc0038I Pass  19: (47.48 seconds) suminf.   29.19021 (399) obj. 468.316 iterations 54
Cbc0038I Pass  20: (47.54 seconds) suminf.   26.77361 (374) obj. 468.316 iterations 91
Cbc0038I Pass  21: (47.59 seconds) suminf.   26.67645 (376) obj. 468.31 iterations 68
Cbc0038I Pass  22: (47.64 seconds) suminf.   23.34681 (351) obj. 468.325 iterations 82
Cbc0038I Pass  23: (47.68 seconds) suminf.   22.79132 (354) obj. 468.319 iterations 42
Cbc0038I Pass  24: (47.76 seconds) suminf.   21.86550 (349) obj. 467.684 iterations 134
Cbc0038I Pass  25: (47.80 seconds) suminf.   21.85578 (348) obj. 467.681 iterations 64
Cbc0038I Pass  26: (47.86 seconds) suminf.   20.78945 (337) obj. 467.046 iterations 95
Cbc0038I Pass  27: (47.90 seconds) suminf.   20.78720 (337) obj. 467.042 iterations 65
Cbc0038I Pass  28: (48.10 seconds) suminf.   19.75627 (322) obj. 467.196 iterations 367
Cbc0038I Pass  29: (48.16 seconds) suminf.   19.49098 (318) obj. 467.209 iterations 91
Cbc0038I Pass  30: (48.30 seconds) suminf.   18.50507 (307) obj. 444.286 iterations 227
Cbc0038I Pass  31: (48.34 seconds) suminf.   18.57494 (308) obj. 444.384 iterations 50
Cbc0038I Pass  32: (49.15 seconds) suminf.   16.37113 (243) obj. 496.188 iterations 1502
Cbc0038I Pass  33: (49.20 seconds) suminf.   15.22302 (254) obj. 473.84 iterations 90
Cbc0038I Pass  34: (49.35 seconds) suminf.   17.84765 (236) obj. 471.387 iterations 272
Cbc0038I Pass  35: (49.41 seconds) suminf.   17.01888 (235) obj. 466.475 iterations 89
Cbc0038I Pass  36: (49.63 seconds) suminf.   11.51743 (190) obj. 503.934 iterations 440
Cbc0038I Pass  37: (49.68 seconds) suminf.   11.07309 (195) obj. 503.945 iterations 108
Cbc0038I Pass  38: (50.04 seconds) suminf.    9.73959 (165) obj. 503.94 iterations 741
Cbc0038I Pass  39: (50.10 seconds) suminf.    7.94603 (166) obj. 503.94 iterations 119
Cbc0038I Pass  40: (50.88 seconds) suminf.    6.31416 (149) obj. 503.94 iterations 1498
Cbc0038I Pass  41: (50.92 seconds) suminf.    6.05913 (148) obj. 503.935 iterations 71
Cbc0038I Pass  42: (52.20 seconds) suminf.    5.19519 (116) obj. 503.465 iterations 2075
Cbc0038I Pass  43: (52.22 seconds) suminf.    5.19519 (116) obj. 503.465 iterations 24
Cbc0038I Pass  44: (53.23 seconds) suminf.    8.34500 (136) obj. 503.047 iterations 1707
Cbc0038I Pass  45: (53.25 seconds) suminf.    7.40727 (129) obj. 503.05 iterations 18
Cbc0038I Pass  46: (53.32 seconds) suminf.    1.86913 (93) obj. 503.015 iterations 118
Cbc0038I Pass  47: (53.34 seconds) suminf.    1.86913 (93) obj. 503.015 iterations 12
Cbc0038I Pass  48: (54.68 seconds) suminf.    4.62421 (79) obj. 503.296 iterations 2196
Cbc0038I Pass  49: (54.71 seconds) suminf.    4.38210 (87) obj. 503.296 iterations 42
Cbc0038I Pass  50: (54.82 seconds) suminf.    0.45540 (54) obj. 503 iterations 174
Cbc0038I Pass  51: (54.84 seconds) suminf.    0.45710 (52) obj. 503 iterations 19
Cbc0038I Pass  52: (55.90 seconds) suminf.    3.55356 (49) obj. 503 iterations 1559
Cbc0038I Pass  53: (55.93 seconds) suminf.    3.42314 (49) obj. 503 iterations 23
Cbc0038I Pass  54: (55.98 seconds) suminf.    0.00000 (0) obj. 503 iterations 73
Cbc0038I Solution found of 503
Cbc0038I Cleaned solution of 503
Cbc0038I Before mini branch and bound, 1676 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 8523 rows 2350 columns - 387 fixed gives 3646, 964 - ok now
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 203 rows 73 columns
Cbc0038I Mini branch and bound improved solution from 503 to 490 (63.48 seconds)
Cbc0038I Round again with cutoff of 463.639
Cbc0038I Pass  55: (63.52 seconds) suminf.  108.96769 (645) obj. 463 iterations 23
Cbc0038I Pass  56: (64.29 seconds) suminf.   70.74886 (606) obj. 463.639 iterations 1653
Cbc0038I Pass  57: (64.33 seconds) suminf.   70.61917 (619) obj. 463.639 iterations 31
Cbc0038I Pass  58: (64.83 seconds) suminf.   64.34240 (561) obj. 463.639 iterations 938
Cbc0038I Pass  59: (64.95 seconds) suminf.   61.87827 (554) obj. 463.639 iterations 215
Cbc0038I Pass  60: (65.33 seconds) suminf.   59.90416 (533) obj. 463.639 iterations 636
Cbc0038I Pass  61: (65.35 seconds) suminf.   59.97040 (531) obj. 463.639 iterations 20
Cbc0038I Pass  62: (66.02 seconds) suminf.   51.81613 (502) obj. 463.639 iterations 1335
Cbc0038I Pass  63: (66.10 seconds) suminf.   50.10193 (500) obj. 463.639 iterations 138
Cbc0038I Pass  64: (66.32 seconds) suminf.   46.14671 (464) obj. 463.639 iterations 320
Cbc0038I Pass  65: (66.41 seconds) suminf.   43.14586 (460) obj. 463.639 iterations 171
Cbc0038I Pass  66: (66.46 seconds) suminf.   40.47286 (441) obj. 463.639 iterations 58
Cbc0038I Pass  67: (66.49 seconds) suminf.   40.35433 (445) obj. 463.639 iterations 40
Cbc0038I Pass  68: (66.58 seconds) suminf.   39.67510 (439) obj. 463.639 iterations 144
Cbc0038I Pass  69: (66.61 seconds) suminf.   39.57592 (446) obj. 463.639 iterations 38
Cbc0038I Pass  70: (66.82 seconds) suminf.   30.64738 (403) obj. 463.639 iterations 337
Cbc0038I Pass  71: (66.85 seconds) suminf.   30.57766 (407) obj. 463.639 iterations 42
Cbc0038I Pass  72: (66.90 seconds) suminf.   30.25048 (400) obj. 463.639 iterations 81
Cbc0038I Pass  73: (67.06 seconds) suminf.   29.99139 (432) obj. 463.639 iterations 279
Cbc0038I Pass  74: (67.14 seconds) suminf.   28.23427 (390) obj. 463.639 iterations 130
Cbc0038I Pass  75: (67.17 seconds) suminf.   28.16078 (394) obj. 463.639 iterations 44
Cbc0038I Pass  76: (67.27 seconds) suminf.   23.85186 (361) obj. 463.639 iterations 183
Cbc0038I Pass  77: (67.31 seconds) suminf.   23.52739 (363) obj. 463.639 iterations 63
Cbc0038I Pass  78: (67.35 seconds) suminf.   21.01250 (347) obj. 463.639 iterations 55
Cbc0038I Pass  79: (67.38 seconds) suminf.   20.91344 (351) obj. 463.639 iterations 38
Cbc0038I Pass  80: (67.51 seconds) suminf.   20.88135 (331) obj. 463.639 iterations 251
Cbc0038I Pass  81: (67.60 seconds) suminf.   19.34793 (326) obj. 463.639 iterations 202
Cbc0038I Pass  82: (67.73 seconds) suminf.   19.13096 (311) obj. 463.639 iterations 245
Cbc0038I Pass  83: (67.81 seconds) suminf.   17.46940 (304) obj. 463.639 iterations 159
Cbc0038I Pass  84: (68.00 seconds) suminf.   17.64885 (272) obj. 463.639 iterations 381
Cbc0038I Pass  85: (68.07 seconds) suminf.   16.91654 (284) obj. 463.639 iterations 128
Cbc0038I Pass  86: (68.12 seconds) suminf.   15.89592 (272) obj. 463.639 iterations 97
Cbc0038I Pass  87: (68.30 seconds) suminf.   14.60165 (227) obj. 463.639 iterations 399
Cbc0038I Pass  88: (68.32 seconds) suminf.   14.56594 (227) obj. 463.639 iterations 29
Cbc0038I Pass  89: (68.52 seconds) suminf.   17.83450 (229) obj. 463.639 iterations 372
Cbc0038I Pass  90: (68.58 seconds) suminf.   16.48038 (233) obj. 463.639 iterations 114
Cbc0038I Pass  91: (68.79 seconds) suminf.   18.32694 (233) obj. 463.639 iterations 434
Cbc0038I Pass  92: (68.81 seconds) suminf.   17.97217 (232) obj. 463.639 iterations 5
Cbc0038I Pass  93: (68.89 seconds) suminf.   17.06262 (235) obj. 463.639 iterations 150
Cbc0038I Pass  94: (69.05 seconds) suminf.   16.12087 (235) obj. 463.639 iterations 314
Cbc0038I Pass  95: (69.10 seconds) suminf.   13.84508 (222) obj. 463.639 iterations 104
Cbc0038I Pass  96: (69.58 seconds) suminf.   16.98363 (291) obj. 463.639 iterations 660
Cbc0038I Pass  97: (69.74 seconds) suminf.   15.79590 (288) obj. 463.639 iterations 256
Cbc0038I Pass  98: (69.99 seconds) suminf.   15.21283 (221) obj. 463.639 iterations 419
Cbc0038I Pass  99: (70.07 seconds) suminf.   12.37820 (209) obj. 463.639 iterations 144
Cbc0038I Pass 100: (70.23 seconds) suminf.   13.29978 (208) obj. 463.639 iterations 345
Cbc0038I Pass 101: (70.31 seconds) suminf.   12.62224 (204) obj. 463.639 iterations 152
Cbc0038I Pass 102: (70.55 seconds) suminf.   12.46733 (191) obj. 463.639 iterations 456
Cbc0038I Pass 103: (70.61 seconds) suminf.   10.22734 (179) obj. 463.639 iterations 120
Cbc0038I Pass 104: (70.80 seconds) suminf.   12.66096 (179) obj. 463.639 iterations 365
Cbc0038I Pass 105: (70.86 seconds) suminf.   10.96541 (175) obj. 463.639 iterations 132
Cbc0038I Pass 106: (70.93 seconds) suminf.    8.70752 (173) obj. 463.639 iterations 155
Cbc0038I Pass 107: (71.20 seconds) suminf.   17.68499 (261) obj. 463.639 iterations 553
Cbc0038I Pass 108: (71.22 seconds) suminf.   17.09138 (261) obj. 463.639 iterations 21
Cbc0038I Pass 109: (72.44 seconds) suminf.    9.82385 (168) obj. 463.639 iterations 2405
Cbc0038I Pass 110: (72.50 seconds) suminf.    7.66786 (155) obj. 463.639 iterations 94
Cbc0038I Pass 111: (72.92 seconds) suminf.   10.93983 (222) obj. 463.639 iterations 708
Cbc0038I Pass 112: (72.95 seconds) suminf.   10.93983 (222) obj. 463.639 iterations 45
Cbc0038I Pass 113: (73.47 seconds) suminf.    8.55054 (148) obj. 463.639 iterations 814
Cbc0038I Pass 114: (73.51 seconds) suminf.    6.02502 (139) obj. 463.639 iterations 85
Cbc0038I Pass 115: (74.37 seconds) suminf.   10.56357 (208) obj. 463.639 iterations 1478
Cbc0038I Pass 116: (74.40 seconds) suminf.   10.56164 (216) obj. 463.639 iterations 11
Cbc0038I Pass 117: (74.81 seconds) suminf.    9.04301 (147) obj. 463.639 iterations 622
Cbc0038I Pass 118: (74.86 seconds) suminf.    6.58725 (136) obj. 463.639 iterations 84
Cbc0038I Pass 119: (75.00 seconds) suminf.    8.79869 (125) obj. 463.639 iterations 228
Cbc0038I Pass 120: (75.08 seconds) suminf.    8.54345 (207) obj. 463.639 iterations 127
Cbc0038I Pass 121: (75.31 seconds) suminf.    7.27442 (105) obj. 463.639 iterations 315
Cbc0038I Pass 122: (75.36 seconds) suminf.    4.70934 (94) obj. 463.639 iterations 78
Cbc0038I Pass 123: (75.83 seconds) suminf.    9.94906 (98) obj. 463.639 iterations 714
Cbc0038I Pass 124: (76.46 seconds) suminf.    9.48709 (173) obj. 463.639 iterations 862
Cbc0038I Pass 125: (78.03 seconds) suminf.    9.21710 (77) obj. 463.639 iterations 2518
Cbc0038I Pass 126: (78.14 seconds) suminf.    4.53709 (64) obj. 463.639 iterations 213
Cbc0038I Pass 127: (79.07 seconds) suminf.    6.59722 (48) obj. 463.639 iterations 1525
Cbc0038I Pass 128: (81.25 seconds) suminf.    7.73335 (48) obj. 463.639 iterations 3829
Cbc0038I Pass 129: (81.34 seconds) suminf.    3.58731 (29) obj. 463.639 iterations 152
Cbc0038I Pass 130: (81.66 seconds) suminf.    7.00533 (35) obj. 463.639 iterations 539
Cbc0038I Pass 131: (81.96 seconds) suminf.    6.50991 (121) obj. 463.639 iterations 395
Cbc0038I Pass 132: (83.63 seconds) suminf.    8.80886 (76) obj. 463.639 iterations 2840
Cbc0038I Pass 133: (84.14 seconds) suminf.    3.48675 (38) obj. 463.639 iterations 855
Cbc0038I Pass 134: (86.43 seconds) suminf.   11.10320 (141) obj. 463.639 iterations 4503
Cbc0038I Pass 135: (86.57 seconds) suminf.    7.50481 (70) obj. 463.639 iterations 227
Cbc0038I Pass 136: (87.00 seconds) suminf.    5.68046 (51) obj. 463.639 iterations 880
Cbc0038I Pass 137: (87.09 seconds) suminf.    3.68011 (38) obj. 463.639 iterations 172
Cbc0038I Pass 138: (89.28 seconds) suminf.    9.98157 (76) obj. 463.639 iterations 3702
Cbc0038I Pass 139: (90.56 seconds) suminf.    4.14875 (72) obj. 463.639 iterations 2558
Cbc0038I Pass 140: (90.60 seconds) suminf.    3.90604 (59) obj. 463.639 iterations 64
Cbc0038I Pass 141: (91.89 seconds) suminf.    8.85101 (52) obj. 463.639 iterations 2445
Cbc0038I Pass 142: (92.00 seconds) suminf.    6.03453 (47) obj. 463.639 iterations 151
Cbc0038I Pass 143: (92.48 seconds) suminf.    5.82125 (59) obj. 463.639 iterations 840
Cbc0038I Pass 144: (92.86 seconds) suminf.    4.01754 (50) obj. 463.639 iterations 546
Cbc0038I Pass 145: (94.18 seconds) suminf.    8.45279 (132) obj. 463.639 iterations 2414
Cbc0038I Pass 146: (94.25 seconds) suminf.    6.82219 (115) obj. 463.639 iterations 138
Cbc0038I Pass 147: (95.96 seconds) suminf.    8.64343 (75) obj. 463.639 iterations 3611
Cbc0038I Pass 148: (96.70 seconds) suminf.    4.64626 (50) obj. 463.639 iterations 1080
Cbc0038I Pass 149: (97.15 seconds) suminf.    7.14387 (69) obj. 463.639 iterations 813
Cbc0038I Pass 150: (98.51 seconds) suminf.   60.40725 (367) obj. 463.639 iterations 3309
Cbc0038I Pass 151: (99.25 seconds) suminf.   26.42812 (249) obj. 463.639 iterations 1985
Cbc0038I Pass 152: (99.33 seconds) suminf.   24.17105 (223) obj. 463.639 iterations 175
Cbc0038I Pass 153: (99.61 seconds) suminf.   15.49053 (178) obj. 463.639 iterations 788
Cbc0038I Pass 154: (100.67 seconds) suminf.   42.59697 (322) obj. 463.639 iterations 3059
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1419 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (100.69 seconds)
Cbc0038I After 100.69 seconds - Feasibility pump exiting with objective of 490 - took 63.10 seconds
Cbc0012I Integer solution of 490 found by feasibility pump after 0 iterations and 0 nodes (100.69 seconds)
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 7923 rows 2053 columns - 1253 fixed gives 188, 45 - ok now
Cbc0031I 113 added rows had average density of 14.530973
Cbc0013I At root node, 113 cuts changed objective from 235.39239 to 243.45326 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 82 row cuts average 4.6 elements, 14 column cuts (14 active)  in 1.260 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 5.8 elements, 0 column cuts (0 active)  in 2.830 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.452 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 102 row cuts average 25.6 elements, 0 column cuts (0 active)  in 2.031 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 613 row cuts average 26.8 elements, 0 column cuts (0 active)  in 8.941 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 490 best solution, best possible 244 (176.67 seconds)
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 7824 rows 2015 columns - 1262 fixed gives 45, 11 - ok now
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 7283 rows 1817 columns - 1198 fixed gives 272, 58 - ok now
Cbc0010I After 100 nodes, 39 on tree, 490 best solution, best possible 250 (1329.52 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 490 (best possible 250), took 1321678 iterations and 150 nodes (1794.33 seconds)
Cbc0032I Strong branching done 1778 times (161226 iterations), fathomed 10 nodes and fixed 197 variables
Cbc0035I Maximum depth 47, 0 variables fixed on reduced cost
Cuts at root node changed objective from 235.392 to 244
Probing was tried 69 times and created 1055 cuts of which 0 were active after adding rounds of cuts (1.494 seconds)
Gomory was tried 24 times and created 44 cuts of which 0 were active after adding rounds of cuts (2.830 seconds)
Knapsack was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.452 seconds)
MixedIntegerRounding2 was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.138 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
TwoMirCuts was tried 65 times and created 825 cuts of which 0 were active after adding rounds of cuts (4.329 seconds)
ZeroHalf was tried 65 times and created 1710 cuts of which 0 were active after adding rounds of cuts (23.192 seconds)

Result - Stopped on time limit

Objective value:                490.00000000
Lower bound:                    250.000
Gap:                            0.96
Enumerated nodes:               150
Total iterations:               1321678
Time (CPU seconds):             1796.62
Time (Wallclock seconds):       1797.33

Total time (CPU seconds):       1796.66   (Wallclock seconds):       1797.39

