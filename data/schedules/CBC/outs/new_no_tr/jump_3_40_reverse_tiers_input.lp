Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_40_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_40_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 30997.7 - 2.45 seconds
Cgl0002I 151 variables fixed
Cgl0003I 0 fixed, 24 tightened bounds, 1074 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 5456 rows, 1649 columns (1649 integer (1608 of which binary)) and 18700 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1649 objects (1649 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 934 integers unsatisfied sum - 334.006
Cbc0038I Pass   1: (4.31 seconds) suminf.  178.17366 (942) obj. 55644.9 iterations 3505
Cbc0038I Pass   2: (4.67 seconds) suminf.  131.04192 (893) obj. 62039.9 iterations 1161
Cbc0038I Pass   3: (5.06 seconds) suminf.  106.90977 (897) obj. 80501.7 iterations 1281
Cbc0038I Pass   4: (5.32 seconds) suminf.   96.35885 (923) obj. 85378.3 iterations 784
Cbc0038I Pass   5: (5.43 seconds) suminf.   95.80114 (887) obj. 85313.2 iterations 244
Cbc0038I Pass   6: (5.52 seconds) suminf.   96.28220 (897) obj. 85695.2 iterations 212
Cbc0038I Pass   7: (5.63 seconds) suminf.   95.61228 (897) obj. 85798.6 iterations 273
Cbc0038I Pass   8: (5.68 seconds) suminf.   94.89674 (912) obj. 85989.8 iterations 126
Cbc0038I Pass   9: (5.70 seconds) suminf.   95.17185 (918) obj. 86058.9 iterations 39
Cbc0038I Pass  10: (5.88 seconds) suminf.   93.79663 (883) obj. 86302.5 iterations 508
Cbc0038I Pass  11: (5.91 seconds) suminf.   94.24660 (838) obj. 86310.7 iterations 88
Cbc0038I Pass  12: (5.99 seconds) suminf.   93.23270 (894) obj. 86121.6 iterations 182
Cbc0038I Pass  13: (6.03 seconds) suminf.   93.78934 (883) obj. 86083.9 iterations 84
Cbc0038I Pass  14: (6.21 seconds) suminf.   87.94951 (864) obj. 80433.6 iterations 554
Cbc0038I Pass  15: (6.37 seconds) suminf.   85.22275 (864) obj. 81624.4 iterations 491
Cbc0038I Pass  16: (6.48 seconds) suminf.   82.49121 (865) obj. 81926.8 iterations 261
Cbc0038I Pass  17: (6.67 seconds) suminf.   83.17757 (850) obj. 81557.9 iterations 589
Cbc0038I Pass  18: (6.74 seconds) suminf.   83.06696 (840) obj. 81552.7 iterations 144
Cbc0038I Pass  19: (6.79 seconds) suminf.   82.08228 (839) obj. 81665.3 iterations 121
Cbc0038I Pass  20: (6.96 seconds) suminf.   78.49563 (837) obj. 81879.5 iterations 509
Cbc0038I Pass  21: (7.09 seconds) suminf.   77.25021 (849) obj. 82003.6 iterations 330
Cbc0038I Pass  22: (7.13 seconds) suminf.   76.90819 (859) obj. 82076.1 iterations 104
Cbc0038I Pass  23: (7.34 seconds) suminf.   76.73364 (841) obj. 82606.8 iterations 651
Cbc0038I Pass  24: (7.37 seconds) suminf.   76.75324 (840) obj. 82608.1 iterations 60
Cbc0038I Pass  25: (7.48 seconds) suminf.   73.84288 (849) obj. 82432.7 iterations 293
Cbc0038I Pass  26: (7.58 seconds) suminf.   72.58274 (856) obj. 82758.6 iterations 310
Cbc0038I Pass  27: (7.68 seconds) suminf.   71.47579 (867) obj. 82528.8 iterations 220
Cbc0038I Pass  28: (7.71 seconds) suminf.   70.40853 (873) obj. 82461.9 iterations 75
Cbc0038I Pass  29: (7.75 seconds) suminf.   70.13000 (868) obj. 82446 iterations 87
Cbc0038I Pass  30: (7.97 seconds) suminf.   68.03749 (851) obj. 82953.6 iterations 669
Cbc0038I Pass  31: (8.11 seconds) suminf.   64.27729 (863) obj. 82680.4 iterations 389
Cbc0038I Pass  32: (8.21 seconds) suminf.   65.15369 (829) obj. 82773.8 iterations 243
Cbc0038I Pass  33: (8.22 seconds) suminf.   65.19498 (836) obj. 82773.8 iterations 10
Cbc0038I Pass  34: (8.45 seconds) suminf.   62.67379 (743) obj. 83405.5 iterations 691
Cbc0038I Pass  35: (8.51 seconds) suminf.   62.30619 (819) obj. 83430.4 iterations 124
Cbc0038I Pass  36: (8.52 seconds) suminf.   61.95835 (821) obj. 83428.9 iterations 9
Cbc0038I Pass  37: (8.75 seconds) suminf.   64.41899 (734) obj. 83159.5 iterations 777
Cbc0038I Pass  38: (8.85 seconds) suminf.   62.72055 (755) obj. 83202.8 iterations 243
Cbc0038I Pass  39: (8.92 seconds) suminf.   61.21633 (755) obj. 82976 iterations 168
Cbc0038I Pass  40: (9.07 seconds) suminf.   63.62129 (785) obj. 83697 iterations 407
Cbc0038I Pass  41: (9.17 seconds) suminf.   62.59989 (814) obj. 83516.1 iterations 223
Cbc0038I Pass  42: (9.36 seconds) suminf.   62.04285 (775) obj. 83236.3 iterations 617
Cbc0038I Pass  43: (9.45 seconds) suminf.   61.39177 (805) obj. 83208.5 iterations 212
Cbc0038I Pass  44: (9.60 seconds) suminf.   59.17004 (735) obj. 83117.5 iterations 471
Cbc0038I Pass  45: (9.69 seconds) suminf.   59.48261 (751) obj. 83108.1 iterations 233
Cbc0038I Pass  46: (9.83 seconds) suminf.   58.60520 (745) obj. 83348.5 iterations 415
Cbc0038I Pass  47: (9.93 seconds) suminf.   57.93648 (739) obj. 83476.8 iterations 228
Cbc0038I Pass  48: (10.05 seconds) suminf.   58.53874 (767) obj. 83590.2 iterations 379
Cbc0038I Pass  49: (10.12 seconds) suminf.   57.99770 (761) obj. 83412.9 iterations 165
Cbc0038I Pass  50: (10.25 seconds) suminf.   60.31915 (747) obj. 83742.3 iterations 366
Cbc0038I Pass  51: (10.31 seconds) suminf.   59.08376 (774) obj. 83623.4 iterations 153
Cbc0038I Pass  52: (10.46 seconds) suminf.   58.98477 (775) obj. 83456 iterations 445
Cbc0038I Pass  53: (11.09 seconds) suminf.   98.40978 (843) obj. 85172.2 iterations 2198
Cbc0038I Pass  54: (11.41 seconds) suminf.   67.23883 (788) obj. 80827.6 iterations 1114
Cbc0038I Pass  55: (11.55 seconds) suminf.   66.07085 (772) obj. 81007.6 iterations 382
Cbc0038I Pass  56: (11.64 seconds) suminf.   64.26501 (771) obj. 80890.8 iterations 218
Cbc0038I Pass  57: (11.81 seconds) suminf.   65.84436 (779) obj. 80993.3 iterations 524
Cbc0038I Pass  58: (11.86 seconds) suminf.   63.20865 (774) obj. 80973.3 iterations 146
Cbc0038I Pass  59: (12.02 seconds) suminf.   62.93346 (789) obj. 80997 iterations 475
Cbc0038I Pass  60: (12.14 seconds) suminf.   62.08744 (810) obj. 80701.8 iterations 319
Cbc0038I Pass  61: (12.32 seconds) suminf.   57.67345 (784) obj. 81224.4 iterations 503
Cbc0038I Pass  62: (12.42 seconds) suminf.   56.86843 (766) obj. 81043.7 iterations 237
Cbc0038I Pass  63: (12.56 seconds) suminf.   55.21700 (720) obj. 81238.1 iterations 503
Cbc0038I Pass  64: (12.60 seconds) suminf.   54.44941 (726) obj. 81338.3 iterations 76
Cbc0038I Pass  65: (12.83 seconds) suminf.   53.51131 (711) obj. 81492.3 iterations 790
Cbc0038I Pass  66: (12.93 seconds) suminf.   52.54469 (695) obj. 81474.6 iterations 269
Cbc0038I Pass  67: (13.13 seconds) suminf.   56.18771 (722) obj. 80820.8 iterations 623
Cbc0038I Pass  68: (13.21 seconds) suminf.   53.99243 (762) obj. 81151.5 iterations 218
Cbc0038I Pass  69: (13.23 seconds) suminf.   53.35152 (763) obj. 81234.2 iterations 45
Cbc0038I Pass  70: (13.25 seconds) suminf.   52.83507 (758) obj. 81241.2 iterations 35
Cbc0038I Pass  71: (13.40 seconds) suminf.   53.11342 (732) obj. 80991.2 iterations 479
Cbc0038I Pass  72: (13.50 seconds) suminf.   51.61672 (726) obj. 80977 iterations 268
Cbc0038I Pass  73: (13.73 seconds) suminf.   56.83199 (680) obj. 81248.3 iterations 698
Cbc0038I Pass  74: (13.86 seconds) suminf.   51.82796 (688) obj. 81348.8 iterations 389
Cbc0038I Pass  75: (14.11 seconds) suminf.   57.74210 (663) obj. 80782.1 iterations 902
Cbc0038I Pass  76: (14.21 seconds) suminf.   55.93715 (694) obj. 80802.6 iterations 285
Cbc0038I Pass  77: (14.38 seconds) suminf.   52.48328 (711) obj. 80721.8 iterations 535
Cbc0038I Pass  78: (14.43 seconds) suminf.   51.88065 (718) obj. 80742 iterations 114
Cbc0038I Pass  79: (14.56 seconds) suminf.   53.41350 (723) obj. 80388.7 iterations 396
Cbc0038I Pass  80: (14.58 seconds) suminf.   53.43509 (659) obj. 80519.2 iterations 56
Cbc0038I Pass  81: (14.75 seconds) suminf.   50.49961 (682) obj. 80740.1 iterations 545
Cbc0038I Pass  82: (14.82 seconds) suminf.   50.11186 (672) obj. 80730.1 iterations 166
Cbc0038I Pass  83: (15.02 seconds) suminf.   49.23873 (734) obj. 81185.6 iterations 611
Cbc0038I Pass  84: (15.11 seconds) suminf.   47.82503 (734) obj. 80980.1 iterations 223
Cbc0038I Pass  85: (15.27 seconds) suminf.   49.07813 (709) obj. 80970 iterations 528
Cbc0038I Pass  86: (15.40 seconds) suminf.   47.56645 (691) obj. 81111.9 iterations 388
Cbc0038I Pass  87: (15.58 seconds) suminf.   47.86661 (732) obj. 81171.4 iterations 567
Cbc0038I Pass  88: (15.65 seconds) suminf.   45.97152 (742) obj. 81187.9 iterations 164
Cbc0038I Pass  89: (15.87 seconds) suminf.   43.98465 (696) obj. 81311.4 iterations 717
Cbc0038I Pass  90: (15.98 seconds) suminf.   42.92616 (680) obj. 81067.5 iterations 317
Cbc0038I Pass  91: (16.23 seconds) suminf.   42.95863 (641) obj. 83858.7 iterations 833
Cbc0038I Pass  92: (16.33 seconds) suminf.   42.83590 (672) obj. 83919.5 iterations 288
Cbc0038I Pass  93: (16.51 seconds) suminf.   45.82920 (642) obj. 83644.4 iterations 620
Cbc0038I Pass  94: (16.62 seconds) suminf.   43.92542 (644) obj. 83559.2 iterations 331
Cbc0038I Pass  95: (16.66 seconds) suminf.   44.03962 (631) obj. 83634.2 iterations 117
Cbc0038I Pass  96: (16.75 seconds) suminf.   43.52137 (615) obj. 83636.6 iterations 250
Cbc0038I Pass  97: (16.80 seconds) suminf.   43.64257 (617) obj. 83745.8 iterations 131
Cbc0038I Pass  98: (16.89 seconds) suminf.   44.14387 (640) obj. 83677.1 iterations 260
Cbc0038I Pass  99: (16.92 seconds) suminf.   43.75952 (629) obj. 83649.6 iterations 78
Cbc0038I Pass 100: (17.43 seconds) suminf.   72.72261 (783) obj. 89552.7 iterations 1833
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5456 rows 1649 columns, reduced to 5243 rows 1548 columns - too large
Cbc0038I Mini branch and bound did not improve solution (19.97 seconds)
Cbc0038I After 19.97 seconds - Feasibility pump exiting - took 16.80 seconds
Cbc0031I 47 added rows had average density of 27.404255
Cbc0013I At root node, 47 cuts changed objective from 31103.799 to 34591.6 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.153 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 171 row cuts average 90.1 elements, 0 column cuts (0 active)  in 1.239 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 493 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.484 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 50 row cuts average 24.4 elements, 0 column cuts (0 active)  in 1.175 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 34592 (62.89 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 35348.101 (439.42 seconds)
Cbc0010I After 200 nodes, 13 on tree, 1e+50 best solution, best possible 35348.101 (608.55 seconds)
Cbc0010I After 300 nodes, 27 on tree, 1e+50 best solution, best possible 35348.101 (791.21 seconds)
Cbc0010I After 400 nodes, 29 on tree, 1e+50 best solution, best possible 35348.101 (935.52 seconds)
Cbc0010I After 500 nodes, 53 on tree, 1e+50 best solution, best possible 35348.101 (1101.62 seconds)
Cbc0010I After 600 nodes, 82 on tree, 1e+50 best solution, best possible 35348.101 (1314.88 seconds)
Cbc0010I After 700 nodes, 102 on tree, 1e+50 best solution, best possible 35348.101 (1490.44 seconds)
Cbc0010I After 800 nodes, 153 on tree, 1e+50 best solution, best possible 35348.101 (1678.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 35348.101), took 3428916 iterations and 863 nodes (1801.45 seconds)
Cbc0032I Strong branching done 6304 times (542980 iterations), fathomed 16 nodes and fixed 697 variables
Cbc0035I Maximum depth 328, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31103.8 to 34592
Probing was tried 13 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
Gomory was tried 808 times and created 1137 cuts of which 0 were active after adding rounds of cuts (11.922 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 808 times and created 11824 cuts of which 0 were active after adding rounds of cuts (3.868 seconds)
ZeroHalf was tried 808 times and created 9744 cuts of which 0 were active after adding rounds of cuts (64.085 seconds)
ImplicationCuts was tried 31 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    35348.101
Enumerated nodes:               863
Total iterations:               3428916
Time (CPU seconds):             1801.45
Time (Wallclock seconds):       1805.82

Total time (CPU seconds):       1801.48   (Wallclock seconds):       1805.85

