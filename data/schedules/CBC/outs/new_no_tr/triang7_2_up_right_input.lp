Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang7_2_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang7_2_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 227.878 - 0.42 seconds
Cgl0002I 115 variables fixed
Cgl0003I 0 fixed, 17 tightened bounds, 577 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 421 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 250 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 185 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 119 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2708 rows, 939 columns (939 integer (910 of which binary)) and 8966 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 939 objects (939 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 456 integers unsatisfied sum - 126.89
Cbc0038I Pass   1: suminf.   60.42410 (430) obj. 300.599 iterations 1211
Cbc0038I Pass   2: suminf.   56.25603 (433) obj. 305.059 iterations 314
Cbc0038I Pass   3: suminf.   56.43791 (436) obj. 305.539 iterations 47
Cbc0038I Pass   4: suminf.   54.89840 (467) obj. 308.288 iterations 226
Cbc0038I Pass   5: suminf.   53.09635 (468) obj. 325.762 iterations 218
Cbc0038I Pass   6: suminf.   50.02254 (471) obj. 339.318 iterations 189
Cbc0038I Pass   7: suminf.   50.93898 (465) obj. 343.22 iterations 53
Cbc0038I Pass   8: suminf.   47.01774 (445) obj. 345.257 iterations 253
Cbc0038I Pass   9: suminf.   47.24085 (466) obj. 345.803 iterations 88
Cbc0038I Pass  10: suminf.   47.89994 (477) obj. 344.843 iterations 70
Cbc0038I Pass  11: suminf.   47.95743 (482) obj. 344.857 iterations 9
Cbc0038I Pass  12: suminf.   45.14044 (417) obj. 348.761 iterations 321
Cbc0038I Pass  13: suminf.   45.70143 (404) obj. 351.306 iterations 134
Cbc0038I Pass  14: suminf.   44.66034 (394) obj. 354.377 iterations 77
Cbc0038I Pass  15: suminf.   41.96681 (392) obj. 369.744 iterations 151
Cbc0038I Pass  16: suminf.   39.84812 (402) obj. 373.711 iterations 194
Cbc0038I Pass  17: suminf.   36.48843 (366) obj. 377.245 iterations 178
Cbc0038I Pass  18: suminf.   31.76104 (299) obj. 370.329 iterations 266
Cbc0038I Pass  19: suminf.   30.83011 (271) obj. 367.618 iterations 169
Cbc0038I Pass  20: suminf.   33.38135 (253) obj. 364.123 iterations 442
Cbc0038I Pass  21: suminf.   27.91249 (249) obj. 357.648 iterations 321
Cbc0038I Pass  22: suminf.   27.91249 (249) obj. 357.648 iterations 12
Cbc0038I Pass  23: suminf.   25.02818 (201) obj. 376.691 iterations 238
Cbc0038I Pass  24: suminf.   21.88553 (193) obj. 407.823 iterations 133
Cbc0038I Pass  25: suminf.   21.88553 (193) obj. 407.823 iterations 4
Cbc0038I Pass  26: suminf.   17.73067 (154) obj. 391.847 iterations 302
Cbc0038I Pass  27: suminf.   16.80361 (152) obj. 391.88 iterations 110
Cbc0038I Pass  28: suminf.   15.25911 (132) obj. 389.133 iterations 460
Cbc0038I Pass  29: suminf.   15.05107 (134) obj. 387.677 iterations 92
Cbc0038I Pass  30: suminf.    9.02981 (101) obj. 397.103 iterations 177
Cbc0038I Pass  31: suminf.    9.01176 (92) obj. 398.296 iterations 75
Cbc0038I Pass  32: suminf.    5.59653 (86) obj. 463.694 iterations 232
Cbc0038I Pass  33: suminf.    5.44626 (86) obj. 463.842 iterations 6
Cbc0038I Pass  34: suminf.    3.11636 (35) obj. 372.986 iterations 604
Cbc0038I Pass  35: suminf.    2.77010 (35) obj. 372.982 iterations 8
Cbc0038I Pass  36: suminf.    2.99279 (39) obj. 372.34 iterations 151
Cbc0038I Pass  37: suminf.    2.73060 (37) obj. 372.34 iterations 36
Cbc0038I Pass  38: suminf.    0.00000 (0) obj. 373 iterations 43
Cbc0038I Solution found of 373
Cbc0038I Cleaned solution of 373
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.98 seconds)
Cbc0038I Round again with cutoff of 357.588
Cbc0038I Pass  39: suminf.   60.42410 (430) obj. 300.599 iterations 0
Cbc0038I Pass  40: suminf.   56.25603 (433) obj. 305.059 iterations 291
Cbc0038I Pass  41: suminf.   56.43791 (436) obj. 305.539 iterations 59
Cbc0038I Pass  42: suminf.   54.14715 (435) obj. 315.291 iterations 150
Cbc0038I Pass  43: suminf.   54.78774 (442) obj. 353.491 iterations 193
Cbc0038I Pass  44: suminf.   50.83218 (426) obj. 350.652 iterations 302
Cbc0038I Pass  45: suminf.   48.63627 (411) obj. 350.488 iterations 136
Cbc0038I Pass  46: suminf.   47.79813 (415) obj. 350.436 iterations 51
Cbc0038I Pass  47: suminf.   50.11344 (449) obj. 349.975 iterations 226
Cbc0038I Pass  48: suminf.   51.22329 (455) obj. 350.436 iterations 114
Cbc0038I Pass  49: suminf.   45.71773 (429) obj. 351.631 iterations 180
Cbc0038I Pass  50: suminf.   43.75364 (420) obj. 351.692 iterations 65
Cbc0038I Pass  51: suminf.   45.91333 (418) obj. 357.588 iterations 137
Cbc0038I Pass  52: suminf.   42.90825 (404) obj. 357.588 iterations 132
Cbc0038I Pass  53: suminf.   42.68285 (396) obj. 357.588 iterations 54
Cbc0038I Pass  54: suminf.   41.55259 (396) obj. 357.588 iterations 54
Cbc0038I Pass  55: suminf.   40.83499 (394) obj. 357.588 iterations 30
Cbc0038I Pass  56: suminf.   40.97590 (394) obj. 357.588 iterations 40
Cbc0038I Pass  57: suminf.   41.67823 (389) obj. 357.588 iterations 89
Cbc0038I Pass  58: suminf.   41.38848 (396) obj. 357.588 iterations 59
Cbc0038I Pass  59: suminf.   39.42538 (350) obj. 357.588 iterations 225
Cbc0038I Pass  60: suminf.   39.03093 (349) obj. 357.588 iterations 13
Cbc0038I Pass  61: suminf.   37.15663 (347) obj. 357.588 iterations 105
Cbc0038I Pass  62: suminf.   36.79035 (347) obj. 357.588 iterations 41
Cbc0038I Pass  63: suminf.   41.25778 (330) obj. 357.588 iterations 247
Cbc0038I Pass  64: suminf.   35.27437 (319) obj. 357.588 iterations 182
Cbc0038I Pass  65: suminf.   34.22348 (306) obj. 357.588 iterations 85
Cbc0038I Pass  66: suminf.   33.51009 (305) obj. 357.588 iterations 77
Cbc0038I Pass  67: suminf.   33.51009 (305) obj. 357.588 iterations 12
Cbc0038I Pass  68: suminf.   29.56291 (294) obj. 357.588 iterations 181
Cbc0038I Pass  69: suminf.   29.63654 (298) obj. 357.588 iterations 53
Cbc0038I Pass  70: suminf.   32.35867 (285) obj. 357.588 iterations 125
Cbc0038I Pass  71: suminf.   30.99881 (282) obj. 357.588 iterations 71
Cbc0038I Pass  72: suminf.   30.63627 (291) obj. 357.588 iterations 31
Cbc0038I Pass  73: suminf.   33.92474 (268) obj. 357.588 iterations 239
Cbc0038I Pass  74: suminf.   33.27483 (285) obj. 357.588 iterations 97
Cbc0038I Pass  75: suminf.   32.52745 (278) obj. 357.588 iterations 172
Cbc0038I Pass  76: suminf.   31.05463 (270) obj. 357.588 iterations 78
Cbc0038I Pass  77: suminf.   29.94002 (274) obj. 357.588 iterations 25
Cbc0038I Pass  78: suminf.   31.57528 (228) obj. 357.588 iterations 275
Cbc0038I Pass  79: suminf.   30.14815 (254) obj. 357.588 iterations 193
Cbc0038I Pass  80: suminf.   31.30383 (222) obj. 357.588 iterations 161
Cbc0038I Pass  81: suminf.   30.29509 (199) obj. 357.588 iterations 167
Cbc0038I Pass  82: suminf.   28.96103 (200) obj. 357.588 iterations 72
Cbc0038I Pass  83: suminf.   21.36299 (178) obj. 357.588 iterations 244
Cbc0038I Pass  84: suminf.   21.70987 (184) obj. 357.588 iterations 57
Cbc0038I Pass  85: suminf.   20.97265 (172) obj. 357.588 iterations 42
Cbc0038I Pass  86: suminf.   15.66268 (139) obj. 357.588 iterations 251
Cbc0038I Pass  87: suminf.   14.72736 (150) obj. 357.588 iterations 59
Cbc0038I Pass  88: suminf.   11.95756 (128) obj. 357.588 iterations 48
Cbc0038I Pass  89: suminf.   11.95756 (128) obj. 357.588 iterations 0
Cbc0038I Pass  90: suminf.    9.16803 (94) obj. 357.588 iterations 167
Cbc0038I Pass  91: suminf.    8.98340 (97) obj. 357.588 iterations 166
Cbc0038I Pass  92: suminf.    8.72088 (80) obj. 357.588 iterations 264
Cbc0038I Pass  93: suminf.    7.08071 (74) obj. 357.588 iterations 30
Cbc0038I Pass  94: suminf.    4.00597 (39) obj. 357.588 iterations 182
Cbc0038I Pass  95: suminf.    3.94194 (81) obj. 357.588 iterations 169
Cbc0038I Pass  96: suminf.    4.15176 (36) obj. 357.588 iterations 391
Cbc0038I Pass  97: suminf.    4.12110 (44) obj. 357.588 iterations 93
Cbc0038I Pass  98: suminf.    9.77989 (77) obj. 357.588 iterations 329
Cbc0038I Pass  99: suminf.    8.80613 (70) obj. 357.588 iterations 51
Cbc0038I Pass 100: suminf.    7.79167 (49) obj. 357.588 iterations 299
Cbc0038I Pass 101: suminf.    6.78808 (69) obj. 357.588 iterations 151
Cbc0038I Pass 102: suminf.    5.28640 (69) obj. 357.588 iterations 110
Cbc0038I Pass 103: suminf.    3.73916 (24) obj. 357.588 iterations 183
Cbc0038I Pass 104: suminf.    2.49782 (93) obj. 357.588 iterations 316
Cbc0038I Pass 105: suminf.    7.56919 (85) obj. 357.588 iterations 608
Cbc0038I Pass 106: suminf.    7.56919 (85) obj. 357.588 iterations 43
Cbc0038I Pass 107: suminf.    6.84340 (85) obj. 357.588 iterations 189
Cbc0038I Pass 108: suminf.    5.63824 (78) obj. 357.588 iterations 50
Cbc0038I Pass 109: suminf.    4.23231 (26) obj. 357.588 iterations 346
Cbc0038I Pass 110: suminf.    2.29611 (67) obj. 357.588 iterations 192
Cbc0038I Pass 111: suminf.    9.00628 (73) obj. 357.588 iterations 259
Cbc0038I Pass 112: suminf.    7.40972 (70) obj. 357.588 iterations 113
Cbc0038I Pass 113: suminf.    7.36829 (62) obj. 357.588 iterations 141
Cbc0038I Pass 114: suminf.    3.01755 (31) obj. 357.588 iterations 66
Cbc0038I Pass 115: suminf.    3.01755 (31) obj. 357.588 iterations 0
Cbc0038I Pass 116: suminf.    8.24855 (53) obj. 357.588 iterations 261
Cbc0038I Pass 117: suminf.    5.25049 (50) obj. 357.588 iterations 281
Cbc0038I Pass 118: suminf.    9.78645 (51) obj. 357.588 iterations 259
Cbc0038I Pass 119: suminf.    6.86443 (48) obj. 357.588 iterations 135
Cbc0038I Pass 120: suminf.    6.42048 (46) obj. 357.588 iterations 94
Cbc0038I Pass 121: suminf.    5.45242 (90) obj. 357.588 iterations 216
Cbc0038I Pass 122: suminf.    2.86273 (76) obj. 357.588 iterations 79
Cbc0038I Pass 123: suminf.   22.66420 (153) obj. 357.588 iterations 572
Cbc0038I Pass 124: suminf.   19.73616 (136) obj. 357.588 iterations 368
Cbc0038I Pass 125: suminf.   16.42778 (156) obj. 357.588 iterations 315
Cbc0038I Pass 126: suminf.   16.37077 (152) obj. 357.588 iterations 48
Cbc0038I Pass 127: suminf.   12.95749 (121) obj. 357.588 iterations 438
Cbc0038I Pass 128: suminf.   11.22429 (113) obj. 357.588 iterations 155
Cbc0038I Pass 129: suminf.   10.22067 (112) obj. 357.588 iterations 37
Cbc0038I Pass 130: suminf.    9.69483 (108) obj. 357.588 iterations 216
Cbc0038I Pass 131: suminf.    9.13996 (111) obj. 357.588 iterations 76
Cbc0038I Pass 132: suminf.   13.17012 (112) obj. 357.588 iterations 170
Cbc0038I Pass 133: suminf.   12.23943 (116) obj. 357.588 iterations 61
Cbc0038I Pass 134: suminf.    8.56814 (75) obj. 357.588 iterations 308
Cbc0038I Pass 135: suminf.    7.89779 (79) obj. 357.588 iterations 117
Cbc0038I Pass 136: suminf.    8.25540 (74) obj. 357.588 iterations 179
Cbc0038I Pass 137: suminf.    7.12162 (59) obj. 357.588 iterations 73
Cbc0038I Pass 138: suminf.   54.91092 (333) obj. 357.588 iterations 688
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 136 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.89 seconds)
Cbc0038I After 3.89 seconds - Feasibility pump exiting with objective of 373 - took 2.92 seconds
Cbc0012I Integer solution of 373 found by feasibility pump after 0 iterations and 0 nodes (3.89 seconds)
Cbc0031I 57 added rows had average density of 68
Cbc0013I At root node, 57 cuts changed objective from 227.87755 to 258 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 6.3 elements, 5 column cuts (5 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 177 row cuts average 614.0 elements, 0 column cuts (0 active)  in 0.352 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 154 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 16 row cuts average 21.1 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 373 best solution, best possible 258 (8.40 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 483 rows 145 columns
Cbc0038I Full problem 2708 rows 939 columns, reduced to 550 rows 170 columns
Cbc0010I After 100 nodes, 5 on tree, 373 best solution, best possible 269 (43.01 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 644 rows 194 columns
Cbc0010I After 200 nodes, 6 on tree, 373 best solution, best possible 269 (68.05 seconds)
Cbc0010I After 300 nodes, 6 on tree, 373 best solution, best possible 278 (93.04 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 433 rows 128 columns
Cbc0010I After 400 nodes, 13 on tree, 373 best solution, best possible 280 (118.53 seconds)
Cbc0010I After 500 nodes, 1 on tree, 373 best solution, best possible 281 (137.12 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 631 rows 194 columns
Cbc0010I After 600 nodes, 9 on tree, 373 best solution, best possible 282 (159.73 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 674 rows 201 columns
Cbc0010I After 700 nodes, 15 on tree, 373 best solution, best possible 282 (180.46 seconds)
Cbc0010I After 800 nodes, 38 on tree, 373 best solution, best possible 282 (205.55 seconds)
Cbc0010I After 900 nodes, 28 on tree, 373 best solution, best possible 282 (224.28 seconds)
Cbc0010I After 1000 nodes, 13 on tree, 373 best solution, best possible 282 (243.40 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 613 rows 193 columns
Cbc0010I After 1100 nodes, 11 on tree, 373 best solution, best possible 284 (261.34 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 619 rows 188 columns
Cbc0010I After 1200 nodes, 15 on tree, 373 best solution, best possible 284 (277.37 seconds)
Cbc0010I After 1300 nodes, 5 on tree, 373 best solution, best possible 284 (292.87 seconds)
Cbc0010I After 1400 nodes, 6 on tree, 373 best solution, best possible 284 (308.11 seconds)
Cbc0010I After 1500 nodes, 6 on tree, 373 best solution, best possible 284 (322.28 seconds)
Cbc0010I After 1600 nodes, 15 on tree, 373 best solution, best possible 284 (333.34 seconds)
Cbc0010I After 1700 nodes, 7 on tree, 373 best solution, best possible 284 (348.25 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 373 best solution, best possible 285 (361.53 seconds)
Cbc0010I After 1900 nodes, 16 on tree, 373 best solution, best possible 285 (377.85 seconds)
Cbc0010I After 2000 nodes, 8 on tree, 373 best solution, best possible 285 (389.31 seconds)
Cbc0010I After 2100 nodes, 9 on tree, 373 best solution, best possible 286 (402.62 seconds)
Cbc0010I After 2200 nodes, 10 on tree, 373 best solution, best possible 286 (416.20 seconds)
Cbc0010I After 2300 nodes, 9 on tree, 373 best solution, best possible 286 (424.77 seconds)
Cbc0010I After 2400 nodes, 14 on tree, 373 best solution, best possible 287 (436.68 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 574 rows 174 columns
Cbc0010I After 2500 nodes, 13 on tree, 373 best solution, best possible 287 (451.12 seconds)
Cbc0010I After 2600 nodes, 15 on tree, 373 best solution, best possible 287 (462.97 seconds)
Cbc0010I After 2700 nodes, 14 on tree, 373 best solution, best possible 287 (473.25 seconds)
Cbc0010I After 2800 nodes, 18 on tree, 373 best solution, best possible 287 (485.17 seconds)
Cbc0010I After 2900 nodes, 19 on tree, 373 best solution, best possible 287 (493.70 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 456 rows 134 columns
Cbc0010I After 3000 nodes, 25 on tree, 373 best solution, best possible 287 (504.00 seconds)
Cbc0010I After 3100 nodes, 25 on tree, 373 best solution, best possible 287 (515.91 seconds)
Cbc0010I After 3200 nodes, 21 on tree, 373 best solution, best possible 287 (528.03 seconds)
Cbc0010I After 3300 nodes, 12 on tree, 373 best solution, best possible 287 (539.50 seconds)
Cbc0010I After 3400 nodes, 9 on tree, 373 best solution, best possible 287 (550.85 seconds)
Cbc0010I After 3500 nodes, 35 on tree, 373 best solution, best possible 288 (563.67 seconds)
Cbc0010I After 3600 nodes, 24 on tree, 373 best solution, best possible 288 (575.58 seconds)
Cbc0010I After 3700 nodes, 26 on tree, 373 best solution, best possible 288 (588.56 seconds)
Cbc0010I After 3800 nodes, 21 on tree, 373 best solution, best possible 288 (597.91 seconds)
Cbc0010I After 3900 nodes, 16 on tree, 373 best solution, best possible 288 (611.48 seconds)
Cbc0010I After 4000 nodes, 14 on tree, 373 best solution, best possible 288 (622.95 seconds)
Cbc0010I After 4100 nodes, 23 on tree, 373 best solution, best possible 288 (632.51 seconds)
Cbc0010I After 4200 nodes, 18 on tree, 373 best solution, best possible 288 (646.91 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 588 rows 181 columns
Cbc0010I After 4300 nodes, 26 on tree, 373 best solution, best possible 288 (657.62 seconds)
Cbc0010I After 4400 nodes, 17 on tree, 373 best solution, best possible 288 (668.50 seconds)
Cbc0010I After 4500 nodes, 15 on tree, 373 best solution, best possible 288 (679.63 seconds)
Cbc0010I After 4600 nodes, 14 on tree, 373 best solution, best possible 288 (690.37 seconds)
Cbc0010I After 4700 nodes, 27 on tree, 373 best solution, best possible 288 (699.66 seconds)
Cbc0010I After 4800 nodes, 20 on tree, 373 best solution, best possible 288 (708.09 seconds)
Cbc0010I After 4900 nodes, 21 on tree, 373 best solution, best possible 288 (720.30 seconds)
Cbc0010I After 5000 nodes, 12 on tree, 373 best solution, best possible 288 (729.10 seconds)
Cbc0010I After 5100 nodes, 18 on tree, 373 best solution, best possible 289 (741.06 seconds)
Cbc0010I After 5200 nodes, 12 on tree, 373 best solution, best possible 289 (751.37 seconds)
Cbc0010I After 5300 nodes, 14 on tree, 373 best solution, best possible 290 (763.98 seconds)
Cbc0010I After 5400 nodes, 4 on tree, 373 best solution, best possible 290 (773.83 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 562 rows 176 columns
Cbc0010I After 5500 nodes, 23 on tree, 373 best solution, best possible 290 (782.13 seconds)
Cbc0010I After 5600 nodes, 17 on tree, 373 best solution, best possible 290 (790.14 seconds)
Cbc0010I After 5700 nodes, 17 on tree, 373 best solution, best possible 291 (800.46 seconds)
Cbc0010I After 5800 nodes, 11 on tree, 373 best solution, best possible 291 (813.05 seconds)
Cbc0010I After 5900 nodes, 8 on tree, 373 best solution, best possible 291 (823.27 seconds)
Cbc0010I After 6000 nodes, 26 on tree, 373 best solution, best possible 291 (831.27 seconds)
Cbc0010I After 6100 nodes, 18 on tree, 373 best solution, best possible 291 (843.23 seconds)
Cbc0010I After 6200 nodes, 7 on tree, 373 best solution, best possible 291 (853.39 seconds)
Cbc0010I After 6300 nodes, 29 on tree, 373 best solution, best possible 292 (865.38 seconds)
Cbc0010I After 6400 nodes, 28 on tree, 373 best solution, best possible 292 (878.11 seconds)
Cbc0010I After 6500 nodes, 16 on tree, 373 best solution, best possible 292 (888.22 seconds)
Cbc0010I After 6600 nodes, 24 on tree, 373 best solution, best possible 293 (895.02 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 479 rows 151 columns
Cbc0010I After 6700 nodes, 2 on tree, 373 best solution, best possible 293 (904.29 seconds)
Cbc0010I After 6800 nodes, 12 on tree, 373 best solution, best possible 294 (915.67 seconds)
Cbc0010I After 6900 nodes, 3 on tree, 373 best solution, best possible 295 (925.74 seconds)
Cbc0010I After 7000 nodes, 31 on tree, 373 best solution, best possible 295 (934.67 seconds)
Cbc0010I After 7100 nodes, 20 on tree, 373 best solution, best possible 295 (943.38 seconds)
Cbc0010I After 7200 nodes, 16 on tree, 373 best solution, best possible 295 (953.93 seconds)
Cbc0010I After 7300 nodes, 16 on tree, 373 best solution, best possible 295 (962.15 seconds)
Cbc0010I After 7400 nodes, 18 on tree, 373 best solution, best possible 296 (973.88 seconds)
Cbc0010I After 7500 nodes, 37 on tree, 373 best solution, best possible 296 (981.93 seconds)
Cbc0010I After 7600 nodes, 40 on tree, 373 best solution, best possible 296 (990.34 seconds)
Cbc0010I After 7700 nodes, 33 on tree, 373 best solution, best possible 296 (997.98 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 525 rows 160 columns
Cbc0010I After 7800 nodes, 5 on tree, 373 best solution, best possible 296 (1009.09 seconds)
Cbc0010I After 7900 nodes, 6 on tree, 373 best solution, best possible 297 (1017.24 seconds)
Cbc0010I After 8000 nodes, 9 on tree, 373 best solution, best possible 297 (1026.17 seconds)
Cbc0010I After 8100 nodes, 13 on tree, 373 best solution, best possible 297 (1035.60 seconds)
Cbc0010I After 8200 nodes, 12 on tree, 373 best solution, best possible 298 (1047.00 seconds)
Cbc0010I After 8300 nodes, 7 on tree, 373 best solution, best possible 298 (1056.22 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 478 rows 140 columns
Cbc0010I After 8400 nodes, 21 on tree, 373 best solution, best possible 298 (1065.48 seconds)
Cbc0010I After 8500 nodes, 8 on tree, 373 best solution, best possible 299 (1074.76 seconds)
Cbc0010I After 8600 nodes, 10 on tree, 373 best solution, best possible 299 (1083.04 seconds)
Cbc0010I After 8700 nodes, 21 on tree, 373 best solution, best possible 300 (1089.38 seconds)
Cbc0010I After 8800 nodes, 24 on tree, 373 best solution, best possible 300 (1098.72 seconds)
Cbc0010I After 8900 nodes, 21 on tree, 373 best solution, best possible 300 (1108.55 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 419 rows 130 columns
Cbc0010I After 9000 nodes, 27 on tree, 373 best solution, best possible 300 (1115.91 seconds)
Cbc0010I After 9100 nodes, 39 on tree, 373 best solution, best possible 300 (1123.85 seconds)
Cbc0010I After 9200 nodes, 23 on tree, 373 best solution, best possible 300 (1132.39 seconds)
Cbc0010I After 9300 nodes, 27 on tree, 373 best solution, best possible 300 (1138.81 seconds)
Cbc0010I After 9400 nodes, 9 on tree, 373 best solution, best possible 300 (1150.79 seconds)
Cbc0010I After 9500 nodes, 8 on tree, 373 best solution, best possible 300 (1159.12 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 524 rows 163 columns
Cbc0010I After 9600 nodes, 15 on tree, 373 best solution, best possible 301 (1168.93 seconds)
Cbc0010I After 9700 nodes, 28 on tree, 373 best solution, best possible 301 (1176.19 seconds)
Cbc0010I After 9800 nodes, 13 on tree, 373 best solution, best possible 301 (1185.52 seconds)
Cbc0010I After 9900 nodes, 14 on tree, 373 best solution, best possible 302 (1196.14 seconds)
Cbc0010I After 10000 nodes, 30 on tree, 373 best solution, best possible 302 (1205.64 seconds)
Cbc0010I After 10100 nodes, 12 on tree, 373 best solution, best possible 302 (1212.73 seconds)
Cbc0010I After 10200 nodes, 19 on tree, 373 best solution, best possible 302 (1222.41 seconds)
Cbc0010I After 10300 nodes, 19 on tree, 373 best solution, best possible 302 (1230.83 seconds)
Cbc0010I After 10400 nodes, 10 on tree, 373 best solution, best possible 302 (1239.96 seconds)
Cbc0010I After 10500 nodes, 14 on tree, 373 best solution, best possible 303 (1250.04 seconds)
Cbc0010I After 10600 nodes, 14 on tree, 373 best solution, best possible 303 (1259.88 seconds)
Cbc0010I After 10700 nodes, 14 on tree, 373 best solution, best possible 303 (1270.62 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 369 rows 120 columns
Cbc0010I After 10800 nodes, 15 on tree, 373 best solution, best possible 304 (1281.71 seconds)
Cbc0010I After 10900 nodes, 21 on tree, 373 best solution, best possible 304 (1292.97 seconds)
Cbc0010I After 11000 nodes, 23 on tree, 373 best solution, best possible 304 (1300.65 seconds)
Cbc0010I After 11100 nodes, 40 on tree, 373 best solution, best possible 304 (1308.14 seconds)
Cbc0010I After 11200 nodes, 26 on tree, 373 best solution, best possible 304 (1319.96 seconds)
Cbc0010I After 11300 nodes, 19 on tree, 373 best solution, best possible 304 (1328.85 seconds)
Cbc0010I After 11400 nodes, 16 on tree, 373 best solution, best possible 304 (1339.32 seconds)
Cbc0010I After 11500 nodes, 16 on tree, 373 best solution, best possible 305 (1350.54 seconds)
Cbc0004I Integer solution of 305 found after 5507617 iterations and 11510 nodes (1350.98 seconds)
Cbc0001I Search completed - best objective 305, took 5507617 iterations and 11510 nodes (1350.99 seconds)
Cbc0032I Strong branching done 39478 times (2583675 iterations), fathomed 711 nodes and fixed 6166 variables
Cbc0035I Maximum depth 83, 0 variables fixed on reduced cost
Cuts at root node changed objective from 227.878 to 258
Probing was tried 7994 times and created 220020 cuts of which 0 were active after adding rounds of cuts (17.345 seconds)
Gomory was tried 7143 times and created 3050 cuts of which 0 were active after adding rounds of cuts (14.871 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 7143 times and created 59796 cuts of which 0 were active after adding rounds of cuts (6.230 seconds)
ZeroHalf was tried 10 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.182 seconds)

Result - Optimal solution found

Objective value:                305.00000000
Enumerated nodes:               11510
Total iterations:               5507617
Time (CPU seconds):             1351.07
Time (Wallclock seconds):       1360.22

Total time (CPU seconds):       1351.08   (Wallclock seconds):       1360.30

