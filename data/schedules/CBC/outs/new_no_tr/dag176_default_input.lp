Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag176_default_input.lp sec 1800 solve solu solutions/new_no_tr/dag176_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 787510 - 2.07 seconds
Cgl0002I 165 variables fixed
Cgl0003I 0 fixed, 24 tightened bounds, 1455 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 410 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 7265 rows, 2424 columns (2424 integer (2380 of which binary)) and 23995 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2424 objects (2424 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1322 integers unsatisfied sum - 367.998
Cbc0038I Pass   1: (5.38 seconds) suminf.  200.41717 (1296) obj. 1.09168e+06 iterations 3500
Cbc0038I Pass   2: (6.10 seconds) suminf.  159.05948 (1324) obj. 1.20428e+06 iterations 1539
Cbc0038I Pass   3: (6.54 seconds) suminf.  140.44109 (1318) obj. 1.20598e+06 iterations 906
Cbc0038I Pass   4: (6.75 seconds) suminf.  136.56164 (1316) obj. 1.20469e+06 iterations 405
Cbc0038I Pass   5: (6.95 seconds) suminf.  130.97037 (1306) obj. 1.19615e+06 iterations 392
Cbc0038I Pass   6: (7.07 seconds) suminf.  130.03620 (1314) obj. 1.19444e+06 iterations 192
Cbc0038I Pass   7: (7.13 seconds) suminf.  129.18537 (1325) obj. 1.19313e+06 iterations 112
Cbc0038I Pass   8: (7.56 seconds) suminf.  122.33186 (1320) obj. 1.18233e+06 iterations 941
Cbc0038I Pass   9: (7.76 seconds) suminf.  118.63729 (1315) obj. 1.20162e+06 iterations 391
Cbc0038I Pass  10: (7.94 seconds) suminf.  116.47334 (1334) obj. 1.19992e+06 iterations 298
Cbc0038I Pass  11: (8.38 seconds) suminf.  110.83734 (1230) obj. 1.20654e+06 iterations 979
Cbc0038I Pass  12: (8.56 seconds) suminf.  107.83748 (1246) obj. 1.29859e+06 iterations 381
Cbc0038I Pass  13: (8.69 seconds) suminf.  107.21005 (1268) obj. 1.29692e+06 iterations 223
Cbc0038I Pass  14: (9.00 seconds) suminf.  104.39792 (1299) obj. 1.30239e+06 iterations 720
Cbc0038I Pass  15: (9.28 seconds) suminf.  103.32026 (1309) obj. 1.30119e+06 iterations 547
Cbc0038I Pass  16: (9.62 seconds) suminf.  100.83168 (1357) obj. 1.30957e+06 iterations 680
Cbc0038I Pass  17: (9.72 seconds) suminf.   99.94445 (1362) obj. 1.29675e+06 iterations 152
Cbc0038I Pass  18: (10.02 seconds) suminf.  100.46606 (1350) obj. 1.29014e+06 iterations 608
Cbc0038I Pass  19: (10.23 seconds) suminf.   96.64079 (1328) obj. 1.28613e+06 iterations 363
Cbc0038I Pass  20: (10.35 seconds) suminf.   95.71270 (1327) obj. 1.28464e+06 iterations 187
Cbc0038I Pass  21: (10.66 seconds) suminf.   87.45902 (1299) obj. 1.27928e+06 iterations 664
Cbc0038I Pass  22: (10.70 seconds) suminf.   87.47030 (1298) obj. 1.27928e+06 iterations 67
Cbc0038I Pass  23: (10.95 seconds) suminf.   86.26118 (1305) obj. 1.27905e+06 iterations 573
Cbc0038I Pass  24: (11.10 seconds) suminf.   86.26186 (1329) obj. 1.27931e+06 iterations 240
Cbc0038I Pass  25: (11.35 seconds) suminf.   87.23732 (1325) obj. 1.27844e+06 iterations 653
Cbc0038I Pass  26: (11.48 seconds) suminf.   86.75188 (1326) obj. 1.27885e+06 iterations 228
Cbc0038I Pass  27: (11.68 seconds) suminf.   87.87673 (1324) obj. 1.28928e+06 iterations 507
Cbc0038I Pass  28: (11.84 seconds) suminf.   87.05934 (1336) obj. 1.2981e+06 iterations 310
Cbc0038I Pass  29: (12.12 seconds) suminf.   86.22864 (1346) obj. 1.29246e+06 iterations 607
Cbc0038I Pass  30: (12.21 seconds) suminf.   85.68243 (1342) obj. 1.29268e+06 iterations 153
Cbc0038I Pass  31: (12.30 seconds) suminf.   85.70957 (1346) obj. 1.28774e+06 iterations 153
Cbc0038I Pass  32: (12.53 seconds) suminf.   87.13578 (1339) obj. 1.2835e+06 iterations 462
Cbc0038I Pass  33: (12.68 seconds) suminf.   86.60400 (1321) obj. 1.28222e+06 iterations 231
Cbc0038I Pass  34: (12.82 seconds) suminf.   86.27290 (1349) obj. 1.28368e+06 iterations 223
Cbc0038I Pass  35: (12.94 seconds) suminf.   85.77116 (1332) obj. 1.28231e+06 iterations 195
Cbc0038I Pass  36: (13.13 seconds) suminf.   85.54474 (1333) obj. 1.2708e+06 iterations 469
Cbc0038I Pass  37: (13.27 seconds) suminf.   85.08397 (1343) obj. 1.27429e+06 iterations 231
Cbc0038I Pass  38: (13.45 seconds) suminf.   85.29482 (1321) obj. 1.28097e+06 iterations 357
Cbc0038I Pass  39: (13.52 seconds) suminf.   85.25937 (1320) obj. 1.28093e+06 iterations 117
Cbc0038I Pass  40: (13.77 seconds) suminf.   86.24904 (1343) obj. 1.26764e+06 iterations 548
Cbc0038I Pass  41: (13.86 seconds) suminf.   85.93802 (1340) obj. 1.27224e+06 iterations 139
Cbc0038I Pass  42: (13.91 seconds) suminf.   85.26306 (1347) obj. 1.27249e+06 iterations 98
Cbc0038I Pass  43: (14.11 seconds) suminf.   87.42482 (1310) obj. 1.27919e+06 iterations 412
Cbc0038I Pass  44: (14.26 seconds) suminf.   86.66966 (1305) obj. 1.27934e+06 iterations 265
Cbc0038I Pass  45: (14.47 seconds) suminf.   86.28069 (1342) obj. 1.27142e+06 iterations 457
Cbc0038I Pass  46: (14.55 seconds) suminf.   85.60129 (1338) obj. 1.26958e+06 iterations 140
Cbc0038I Pass  47: (14.82 seconds) suminf.   87.46708 (1309) obj. 1.28053e+06 iterations 597
Cbc0038I Pass  48: (15.55 seconds) suminf.  120.95765 (1326) obj. 1.74144e+06 iterations 2050
Cbc0038I Pass  49: (16.02 seconds) suminf.   88.34343 (1331) obj. 1.69494e+06 iterations 1306
Cbc0038I Pass  50: (16.10 seconds) suminf.   85.89776 (1330) obj. 1.69418e+06 iterations 174
Cbc0038I Pass  51: (16.39 seconds) suminf.   86.54768 (1307) obj. 1.69772e+06 iterations 725
Cbc0038I Pass  52: (16.51 seconds) suminf.   86.11726 (1304) obj. 1.69845e+06 iterations 218
Cbc0038I Pass  53: (16.71 seconds) suminf.   84.08196 (1302) obj. 1.6991e+06 iterations 514
Cbc0038I Pass  54: (16.80 seconds) suminf.   83.51562 (1309) obj. 1.68687e+06 iterations 183
Cbc0038I Pass  55: (16.97 seconds) suminf.   84.95956 (1302) obj. 1.68934e+06 iterations 372
Cbc0038I Pass  56: (17.12 seconds) suminf.   83.83613 (1276) obj. 1.69601e+06 iterations 316
Cbc0038I Pass  57: (17.28 seconds) suminf.   84.28302 (1289) obj. 1.69697e+06 iterations 347
Cbc0038I Pass  58: (17.38 seconds) suminf.   82.61878 (1299) obj. 1.696e+06 iterations 206
Cbc0038I Pass  59: (17.65 seconds) suminf.   85.68179 (1294) obj. 1.69502e+06 iterations 615
Cbc0038I Pass  60: (17.82 seconds) suminf.   84.11082 (1315) obj. 1.69479e+06 iterations 331
Cbc0038I Pass  61: (18.08 seconds) suminf.   84.78558 (1323) obj. 1.69668e+06 iterations 566
Cbc0038I Pass  62: (18.21 seconds) suminf.   83.20803 (1324) obj. 1.69615e+06 iterations 250
Cbc0038I Pass  63: (18.53 seconds) suminf.   84.12027 (1315) obj. 1.68602e+06 iterations 699
Cbc0038I Pass  64: (18.62 seconds) suminf.   83.26566 (1321) obj. 1.69203e+06 iterations 179
Cbc0038I Pass  65: (18.70 seconds) suminf.   82.84323 (1303) obj. 1.68235e+06 iterations 218
Cbc0038I Pass  66: (18.76 seconds) suminf.   82.40539 (1300) obj. 1.69774e+06 iterations 123
Cbc0038I Pass  67: (18.99 seconds) suminf.   85.32275 (1294) obj. 1.6977e+06 iterations 532
Cbc0038I Pass  68: (19.11 seconds) suminf.   84.05108 (1335) obj. 1.69634e+06 iterations 195
Cbc0038I Pass  69: (19.32 seconds) suminf.   83.44660 (1317) obj. 1.69609e+06 iterations 453
Cbc0038I Pass  70: (19.40 seconds) suminf.   82.59086 (1307) obj. 1.6945e+06 iterations 151
Cbc0038I Pass  71: (19.57 seconds) suminf.   84.65080 (1304) obj. 1.69398e+06 iterations 323
Cbc0038I Pass  72: (19.71 seconds) suminf.   83.20803 (1324) obj. 1.69615e+06 iterations 247
Cbc0038I Pass  73: (19.90 seconds) suminf.   83.55449 (1302) obj. 1.6952e+06 iterations 426
Cbc0038I Pass  74: (20.02 seconds) suminf.   82.40539 (1300) obj. 1.69774e+06 iterations 205
Cbc0038I Pass  75: (20.20 seconds) suminf.   84.42350 (1322) obj. 1.69659e+06 iterations 385
Cbc0038I Pass  76: (20.78 seconds) suminf.  131.44953 (1256) obj. 1.78192e+06 iterations 1775
Cbc0038I Pass  77: (21.13 seconds) suminf.   93.01137 (1241) obj. 1.77847e+06 iterations 1200
Cbc0038I Pass  78: (21.31 seconds) suminf.   88.18082 (1254) obj. 1.78586e+06 iterations 425
Cbc0038I Pass  79: (21.35 seconds) suminf.   87.39426 (1251) obj. 1.7803e+06 iterations 71
Cbc0038I Pass  80: (21.53 seconds) suminf.   86.52650 (1272) obj. 1.81864e+06 iterations 432
Cbc0038I Pass  81: (21.54 seconds) suminf.   86.52650 (1272) obj. 1.81864e+06 iterations 1
Cbc0038I Pass  82: (21.70 seconds) suminf.   86.67224 (1273) obj. 1.92273e+06 iterations 348
Cbc0038I Pass  83: (21.82 seconds) suminf.   85.24948 (1274) obj. 2.01958e+06 iterations 213
Cbc0038I Pass  84: (21.92 seconds) suminf.   86.21398 (1269) obj. 2.01744e+06 iterations 185
Cbc0038I Pass  85: (22.01 seconds) suminf.   85.24948 (1274) obj. 2.01958e+06 iterations 182
Cbc0038I Pass  86: (22.45 seconds) suminf.  113.78168 (1285) obj. 2.20624e+06 iterations 1432
Cbc0038I Pass  87: (22.91 seconds) suminf.   90.13520 (1283) obj. 2.23262e+06 iterations 1244
Cbc0038I Pass  88: (23.03 seconds) suminf.   88.58878 (1312) obj. 2.23185e+06 iterations 212
Cbc0038I Pass  89: (23.33 seconds) suminf.   89.15282 (1285) obj. 2.23339e+06 iterations 617
Cbc0038I Pass  90: (23.46 seconds) suminf.   86.80320 (1289) obj. 2.24122e+06 iterations 279
Cbc0038I Pass  91: (23.59 seconds) suminf.   86.73088 (1281) obj. 2.24119e+06 iterations 186
Cbc0038I Pass  92: (23.63 seconds) suminf.   86.25446 (1292) obj. 2.23995e+06 iterations 90
Cbc0038I Pass  93: (23.91 seconds) suminf.   86.17137 (1284) obj. 2.23353e+06 iterations 598
Cbc0038I Pass  94: (24.00 seconds) suminf.   85.43688 (1283) obj. 2.23874e+06 iterations 142
Cbc0038I Pass  95: (24.12 seconds) suminf.   85.13708 (1301) obj. 2.23559e+06 iterations 171
Cbc0038I Pass  96: (24.19 seconds) suminf.   84.50516 (1303) obj. 2.23829e+06 iterations 91
Cbc0038I Pass  97: (24.38 seconds) suminf.   85.49142 (1286) obj. 2.23805e+06 iterations 391
Cbc0038I Pass  98: (24.40 seconds) suminf.   85.44045 (1287) obj. 2.2382e+06 iterations 23
Cbc0038I Pass  99: (24.61 seconds) suminf.   84.69285 (1315) obj. 2.23743e+06 iterations 472
Cbc0038I Pass 100: (25.16 seconds) suminf.  128.31825 (1287) obj. 2.08065e+06 iterations 1542
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 193 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7265 rows 2424 columns, reduced to 6839 rows 2223 columns - too large
Cbc0038I Mini branch and bound did not improve solution (27.49 seconds)
Cbc0038I After 27.49 seconds - Feasibility pump exiting - took 23.76 seconds
Cbc0031I 40 added rows had average density of 5.125
Cbc0013I At root node, 40 cuts changed objective from 788430.05 to 901120 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.245 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 176 row cuts average 11.3 elements, 0 column cuts (0 active)  in 1.569 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 257 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 901120 (52.96 seconds)
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 901120 (392.52 seconds)
Cbc0010I After 200 nodes, 11 on tree, 1e+50 best solution, best possible 901120 (978.78 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1e+50 best solution, best possible 901120 (1304.53 seconds)
Cbc0010I After 400 nodes, 35 on tree, 1e+50 best solution, best possible 901120 (1725.93 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 901120), took 2345373 iterations and 416 nodes (1802.90 seconds)
Cbc0032I Strong branching done 4814 times (425130 iterations), fathomed 24 nodes and fixed 612 variables
Cbc0035I Maximum depth 48, 0 variables fixed on reduced cost
Cuts at root node changed objective from 788430 to 901120
Probing was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.245 seconds)
Gomory was tried 315 times and created 685 cuts of which 0 were active after adding rounds of cuts (8.102 seconds)
Knapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 315 times and created 2006 cuts of which 0 were active after adding rounds of cuts (2.618 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.145 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    901120.000
Enumerated nodes:               416
Total iterations:               2345373
Time (CPU seconds):             1802.90
Time (Wallclock seconds):       1803.14

Total time (CPU seconds):       1802.92   (Wallclock seconds):       1803.17

