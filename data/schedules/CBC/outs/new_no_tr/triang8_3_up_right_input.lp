Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_3_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_3_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 240.758 - 1.08 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 999 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 631 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 470 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 13 tightened bounds, 299 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 206 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 71 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 15901 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 824 integers unsatisfied sum - 241.261
Cbc0038I Pass   1: (2.40 seconds) suminf.   50.96900 (286) obj. 375.234 iterations 2191
Cbc0038I Pass   2: (2.47 seconds) suminf.   43.22001 (251) obj. 392.865 iterations 509
Cbc0038I Pass   3: (2.53 seconds) suminf.   31.76316 (219) obj. 402.53 iterations 497
Cbc0038I Pass   4: (2.58 seconds) suminf.   31.93689 (190) obj. 407.997 iterations 398
Cbc0038I Pass   5: (2.61 seconds) suminf.   31.74616 (204) obj. 405.214 iterations 227
Cbc0038I Pass   6: (2.62 seconds) suminf.   31.26200 (212) obj. 404.749 iterations 38
Cbc0038I Pass   7: (2.67 seconds) suminf.   23.17205 (193) obj. 380.008 iterations 391
Cbc0038I Pass   8: (2.69 seconds) suminf.   22.91329 (178) obj. 379.872 iterations 149
Cbc0038I Pass   9: (2.71 seconds) suminf.   21.97897 (179) obj. 379.934 iterations 81
Cbc0038I Pass  10: (2.73 seconds) suminf.   21.57840 (167) obj. 379.864 iterations 173
Cbc0038I Pass  11: (2.74 seconds) suminf.   21.28329 (169) obj. 379.854 iterations 38
Cbc0038I Pass  12: (2.79 seconds) suminf.   14.10513 (135) obj. 418.367 iterations 451
Cbc0038I Pass  13: (2.81 seconds) suminf.   14.23142 (134) obj. 418.283 iterations 157
Cbc0038I Pass  14: (2.85 seconds) suminf.    7.65398 (73) obj. 415.512 iterations 348
Cbc0038I Pass  15: (2.85 seconds) suminf.    7.65398 (73) obj. 415.512 iterations 3
Cbc0038I Pass  16: (2.88 seconds) suminf.    5.36796 (61) obj. 416 iterations 247
Cbc0038I Pass  17: (2.89 seconds) suminf.    5.36796 (61) obj. 416 iterations 5
Cbc0038I Pass  18: (3.01 seconds) suminf.    3.38942 (76) obj. 416 iterations 878
Cbc0038I Pass  19: (3.03 seconds) suminf.    1.08980 (64) obj. 416 iterations 122
Cbc0038I Pass  20: (3.03 seconds) suminf.    1.92728 (26) obj. 416 iterations 45
Cbc0038I Pass  21: (3.04 seconds) suminf.    1.92728 (26) obj. 416 iterations 11
Cbc0038I Pass  22: (3.05 seconds) suminf.    0.00000 (0) obj. 416 iterations 33
Cbc0038I Solution found of 416
Cbc0038I Cleaned solution of 416
Cbc0038I Before mini branch and bound, 665 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.07 seconds)
Cbc0038I Round again with cutoff of 397.596
Cbc0038I Pass  23: (3.08 seconds) suminf.   50.96900 (286) obj. 375.234 iterations 0
Cbc0038I Pass  24: (3.13 seconds) suminf.   43.22001 (251) obj. 392.865 iterations 446
Cbc0038I Pass  25: (3.20 seconds) suminf.   33.39966 (228) obj. 380.494 iterations 589
Cbc0038I Pass  26: (3.24 seconds) suminf.   30.58922 (225) obj. 379.877 iterations 258
Cbc0038I Pass  27: (3.26 seconds) suminf.   30.19833 (228) obj. 379.88 iterations 131
Cbc0038I Pass  28: (3.30 seconds) suminf.   28.16779 (213) obj. 381.142 iterations 322
Cbc0038I Pass  29: (3.38 seconds) suminf.   18.31821 (155) obj. 380.352 iterations 616
Cbc0038I Pass  30: (3.41 seconds) suminf.   16.99972 (154) obj. 380.377 iterations 262
Cbc0038I Pass  31: (3.44 seconds) suminf.   12.27752 (136) obj. 380.407 iterations 271
Cbc0038I Pass  32: (3.45 seconds) suminf.   11.98117 (143) obj. 380.522 iterations 63
Cbc0038I Pass  33: (3.48 seconds) suminf.    7.87199 (78) obj. 397.596 iterations 210
Cbc0038I Pass  34: (3.49 seconds) suminf.    8.10187 (89) obj. 397.596 iterations 95
Cbc0038I Pass  35: (3.51 seconds) suminf.    8.08168 (85) obj. 397.596 iterations 147
Cbc0038I Pass  36: (3.53 seconds) suminf.    6.35140 (87) obj. 397.596 iterations 234
Cbc0038I Pass  37: (3.54 seconds) suminf.    6.10343 (82) obj. 397.596 iterations 75
Cbc0038I Pass  38: (3.57 seconds) suminf.    6.40878 (53) obj. 397.596 iterations 258
Cbc0038I Pass  39: (3.59 seconds) suminf.    4.60115 (57) obj. 397.596 iterations 97
Cbc0038I Pass  40: (3.66 seconds) suminf.    4.50133 (67) obj. 397.596 iterations 715
Cbc0038I Pass  41: (3.68 seconds) suminf.    4.39448 (74) obj. 397.596 iterations 104
Cbc0038I Pass  42: (3.75 seconds) suminf.    3.48460 (31) obj. 397.596 iterations 618
Cbc0038I Pass  43: (3.77 seconds) suminf.    1.65405 (28) obj. 397.596 iterations 126
Cbc0038I Pass  44: (3.93 seconds) suminf.    3.68466 (46) obj. 397.596 iterations 1423
Cbc0038I Pass  45: (3.93 seconds) suminf.    3.68466 (46) obj. 397.596 iterations 6
Cbc0038I Pass  46: (3.94 seconds) suminf.    0.40412 (1) obj. 397.596 iterations 23
Cbc0038I Solution found of 397.596
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4765 rows 1627 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 382
Cbc0038I Before mini branch and bound, 676 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 3339 rows 951 columns - 141 fixed gives 2418, 655 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 102 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (4.55 seconds)
Cbc0038I Round again with cutoff of 352.992
Cbc0038I Pass  47: (4.60 seconds) suminf.   54.60699 (306) obj. 352 iterations 225
Cbc0038I Pass  48: (4.67 seconds) suminf.   41.64391 (302) obj. 352.992 iterations 581
Cbc0038I Pass  49: (4.68 seconds) suminf.   41.25686 (300) obj. 352.992 iterations 24
Cbc0038I Pass  50: (4.71 seconds) suminf.   40.67175 (283) obj. 352.992 iterations 186
Cbc0038I Pass  51: (4.76 seconds) suminf.   33.68069 (248) obj. 352.992 iterations 327
Cbc0038I Pass  52: (4.77 seconds) suminf.   33.64932 (248) obj. 352.992 iterations 21
Cbc0038I Pass  53: (4.82 seconds) suminf.   24.23910 (216) obj. 352.992 iterations 364
Cbc0038I Pass  54: (4.86 seconds) suminf.   23.29586 (220) obj. 352.992 iterations 289
Cbc0038I Pass  55: (4.89 seconds) suminf.   23.42872 (213) obj. 352.992 iterations 200
Cbc0038I Pass  56: (4.98 seconds) suminf.   13.26319 (147) obj. 352.992 iterations 791
Cbc0038I Pass  57: (5.00 seconds) suminf.   11.63421 (123) obj. 352.992 iterations 111
Cbc0038I Pass  58: (5.04 seconds) suminf.    9.58872 (129) obj. 352.992 iterations 331
Cbc0038I Pass  59: (5.05 seconds) suminf.    9.64205 (131) obj. 352.992 iterations 95
Cbc0038I Pass  60: (5.07 seconds) suminf.   10.68248 (119) obj. 352.992 iterations 154
Cbc0038I Pass  61: (5.10 seconds) suminf.    9.28267 (115) obj. 352.992 iterations 143
Cbc0038I Pass  62: (5.23 seconds) suminf.   11.91228 (105) obj. 352.992 iterations 1119
Cbc0038I Pass  63: (5.25 seconds) suminf.   11.10855 (127) obj. 352.992 iterations 125
Cbc0038I Pass  64: (5.28 seconds) suminf.   10.27035 (116) obj. 352.992 iterations 151
Cbc0038I Pass  65: (5.29 seconds) suminf.    9.73613 (122) obj. 352.992 iterations 119
Cbc0038I Pass  66: (5.32 seconds) suminf.    9.89140 (120) obj. 352.992 iterations 150
Cbc0038I Pass  67: (5.35 seconds) suminf.   10.38259 (143) obj. 352.992 iterations 326
Cbc0038I Pass  68: (5.36 seconds) suminf.    8.79799 (148) obj. 352.992 iterations 31
Cbc0038I Pass  69: (5.37 seconds) suminf.    8.58885 (154) obj. 352.992 iterations 75
Cbc0038I Pass  70: (5.41 seconds) suminf.    7.15007 (108) obj. 352.992 iterations 345
Cbc0038I Pass  71: (5.42 seconds) suminf.    7.02873 (109) obj. 352.992 iterations 37
Cbc0038I Pass  72: (5.46 seconds) suminf.    6.68497 (110) obj. 352.992 iterations 294
Cbc0038I Pass  73: (5.47 seconds) suminf.    6.60864 (122) obj. 352.992 iterations 42
Cbc0038I Pass  74: (5.51 seconds) suminf.   10.63468 (99) obj. 352.992 iterations 352
Cbc0038I Pass  75: (5.62 seconds) suminf.    7.81027 (127) obj. 352.992 iterations 800
Cbc0038I Pass  76: (5.68 seconds) suminf.    6.91803 (93) obj. 352.992 iterations 440
Cbc0038I Pass  77: (5.71 seconds) suminf.    6.53080 (107) obj. 352.992 iterations 183
Cbc0038I Pass  78: (5.74 seconds) suminf.    8.25347 (117) obj. 352.992 iterations 335
Cbc0038I Pass  79: (5.75 seconds) suminf.    8.15703 (99) obj. 352.992 iterations 59
Cbc0038I Pass  80: (5.78 seconds) suminf.    4.34203 (104) obj. 352.992 iterations 175
Cbc0038I Pass  81: (5.81 seconds) suminf.    7.68173 (87) obj. 352.992 iterations 219
Cbc0038I Pass  82: (5.83 seconds) suminf.    6.03552 (91) obj. 352.992 iterations 202
Cbc0038I Pass  83: (5.84 seconds) suminf.    6.03552 (91) obj. 352.992 iterations 2
Cbc0038I Pass  84: (5.88 seconds) suminf.    8.56634 (97) obj. 352.992 iterations 344
Cbc0038I Pass  85: (5.88 seconds) suminf.    8.45557 (95) obj. 352.992 iterations 18
Cbc0038I Pass  86: (5.97 seconds) suminf.    4.72045 (88) obj. 352.992 iterations 661
Cbc0038I Pass  87: (5.98 seconds) suminf.    4.72045 (88) obj. 352.992 iterations 4
Cbc0038I Pass  88: (6.03 seconds) suminf.    8.69319 (98) obj. 352.992 iterations 446
Cbc0038I Pass  89: (6.05 seconds) suminf.    7.72427 (95) obj. 352.992 iterations 77
Cbc0038I Pass  90: (6.06 seconds) suminf.    7.72956 (91) obj. 352.992 iterations 92
Cbc0038I Pass  91: (6.10 seconds) suminf.    4.32353 (56) obj. 352.992 iterations 389
Cbc0038I Pass  92: (6.13 seconds) suminf.    1.83366 (47) obj. 352.992 iterations 137
Cbc0038I Pass  93: (6.15 seconds) suminf.    3.76211 (46) obj. 352.992 iterations 151
Cbc0038I Pass  94: (6.16 seconds) suminf.    2.28990 (50) obj. 352.992 iterations 105
Cbc0038I Pass  95: (6.19 seconds) suminf.    3.33111 (35) obj. 352.992 iterations 201
Cbc0038I Pass  96: (6.21 seconds) suminf.    2.70131 (25) obj. 352.992 iterations 119
Cbc0038I Pass  97: (6.25 seconds) suminf.    0.95738 (43) obj. 352.992 iterations 271
Cbc0038I Pass  98: (6.26 seconds) suminf.    0.89657 (40) obj. 352.992 iterations 59
Cbc0038I Pass  99: (6.30 seconds) suminf.    7.15050 (66) obj. 352.992 iterations 330
Cbc0038I Pass 100: (6.34 seconds) suminf.    6.86967 (73) obj. 352.992 iterations 258
Cbc0038I Pass 101: (6.38 seconds) suminf.    0.22930 (8) obj. 352.992 iterations 231
Cbc0038I Pass 102: (6.38 seconds) suminf.    0.22930 (8) obj. 352.992 iterations 9
Cbc0038I Pass 103: (6.40 seconds) suminf.    0.19168 (12) obj. 352.992 iterations 53
Cbc0038I Pass 104: (6.41 seconds) suminf.    0.28050 (13) obj. 352.992 iterations 24
Cbc0038I Pass 105: (6.42 seconds) suminf.    0.00833 (1) obj. 352.992 iterations 27
Cbc0038I Solution found of 352.992
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4765 rows 1627 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 344
Cbc0038I Before mini branch and bound, 626 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 3452 rows 1001 columns - 124 fixed gives 2610, 738 - still too large
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 339 rows 120 columns
Cbc0038I Mini branch and bound improved solution from 344 to 340 (7.01 seconds)
Cbc0038I Round again with cutoff of 309.587
Cbc0038I Pass 106: (7.09 seconds) suminf.   58.42947 (333) obj. 309.587 iterations 377
Cbc0038I Pass 107: (7.20 seconds) suminf.   41.79584 (310) obj. 309.587 iterations 792
Cbc0038I Pass 108: (7.23 seconds) suminf.   39.84939 (292) obj. 309.587 iterations 242
Cbc0038I Pass 109: (7.27 seconds) suminf.   33.87191 (261) obj. 309.587 iterations 238
Cbc0038I Pass 110: (7.30 seconds) suminf.   31.92740 (268) obj. 309.587 iterations 217
Cbc0038I Pass 111: (7.31 seconds) suminf.   31.79039 (267) obj. 309.587 iterations 46
Cbc0038I Pass 112: (7.37 seconds) suminf.   21.03414 (196) obj. 309.587 iterations 486
Cbc0038I Pass 113: (7.40 seconds) suminf.   21.39288 (201) obj. 309.587 iterations 162
Cbc0038I Pass 114: (7.45 seconds) suminf.   22.55041 (194) obj. 309.587 iterations 438
Cbc0038I Pass 115: (7.48 seconds) suminf.   20.85468 (186) obj. 309.587 iterations 195
Cbc0038I Pass 116: (7.53 seconds) suminf.   22.57418 (176) obj. 309.587 iterations 499
Cbc0038I Pass 117: (7.57 seconds) suminf.   19.81682 (178) obj. 309.587 iterations 294
Cbc0038I Pass 118: (7.59 seconds) suminf.   18.90112 (179) obj. 309.587 iterations 133
Cbc0038I Pass 119: (7.61 seconds) suminf.   18.00477 (173) obj. 309.587 iterations 60
Cbc0038I Pass 120: (7.68 seconds) suminf.   23.44552 (178) obj. 309.587 iterations 607
Cbc0038I Pass 121: (7.76 seconds) suminf.   20.11659 (198) obj. 309.587 iterations 597
Cbc0038I Pass 122: (7.79 seconds) suminf.   20.98015 (185) obj. 309.587 iterations 242
Cbc0038I Pass 123: (7.83 seconds) suminf.   19.80283 (189) obj. 309.587 iterations 256
Cbc0038I Pass 124: (7.89 seconds) suminf.   20.79351 (224) obj. 309.587 iterations 486
Cbc0038I Pass 125: (7.93 seconds) suminf.   18.84424 (182) obj. 309.587 iterations 220
Cbc0038I Pass 126: (7.96 seconds) suminf.   22.16805 (181) obj. 309.587 iterations 271
Cbc0038I Pass 127: (7.99 seconds) suminf.   20.07865 (197) obj. 309.587 iterations 229
Cbc0038I Pass 128: (8.03 seconds) suminf.   19.64209 (183) obj. 309.587 iterations 238
Cbc0038I Pass 129: (8.06 seconds) suminf.   19.19076 (183) obj. 309.587 iterations 169
Cbc0038I Pass 130: (8.11 seconds) suminf.   22.52705 (184) obj. 309.587 iterations 385
Cbc0038I Pass 131: (8.14 seconds) suminf.   19.80283 (189) obj. 309.587 iterations 244
Cbc0038I Pass 132: (8.26 seconds) suminf.   19.85150 (188) obj. 309.587 iterations 904
Cbc0038I Pass 133: (8.30 seconds) suminf.   18.15010 (221) obj. 309.587 iterations 278
Cbc0038I Pass 134: (8.35 seconds) suminf.   23.73445 (181) obj. 309.587 iterations 373
Cbc0038I Pass 135: (8.40 seconds) suminf.   18.29862 (215) obj. 309.587 iterations 325
Cbc0038I Pass 136: (8.45 seconds) suminf.   18.12468 (237) obj. 309.587 iterations 375
Cbc0038I Pass 137: (8.46 seconds) suminf.   17.55372 (202) obj. 309.587 iterations 71
Cbc0038I Pass 138: (8.49 seconds) suminf.   17.66431 (225) obj. 309.587 iterations 160
Cbc0038I Pass 139: (8.50 seconds) suminf.   16.80196 (197) obj. 309.587 iterations 73
Cbc0038I Pass 140: (8.55 seconds) suminf.   19.60575 (277) obj. 309.587 iterations 360
Cbc0038I Pass 141: (8.57 seconds) suminf.   18.84980 (207) obj. 309.587 iterations 136
Cbc0038I Pass 142: (8.64 seconds) suminf.   18.11434 (241) obj. 309.587 iterations 535
Cbc0038I Pass 143: (8.67 seconds) suminf.   17.31991 (241) obj. 309.587 iterations 170
Cbc0038I Pass 144: (8.74 seconds) suminf.   19.03221 (238) obj. 309.587 iterations 522
Cbc0038I Pass 145: (8.78 seconds) suminf.   17.74994 (209) obj. 309.587 iterations 336
Cbc0038I Pass 146: (8.83 seconds) suminf.   19.21278 (243) obj. 309.587 iterations 299
Cbc0038I Pass 147: (8.86 seconds) suminf.   18.88361 (248) obj. 309.587 iterations 215
Cbc0038I Pass 148: (8.91 seconds) suminf.   18.24272 (284) obj. 309.587 iterations 338
Cbc0038I Pass 149: (8.97 seconds) suminf.   17.67352 (297) obj. 309.587 iterations 381
Cbc0038I Pass 150: (9.00 seconds) suminf.   18.60572 (288) obj. 309.587 iterations 240
Cbc0038I Pass 151: (9.03 seconds) suminf.   18.43395 (292) obj. 309.587 iterations 148
Cbc0038I Pass 152: (9.11 seconds) suminf.   18.70521 (236) obj. 309.587 iterations 598
Cbc0038I Pass 153: (9.14 seconds) suminf.   17.94812 (249) obj. 309.587 iterations 210
Cbc0038I Pass 154: (9.19 seconds) suminf.   18.60572 (288) obj. 309.587 iterations 371
Cbc0038I Pass 155: (9.37 seconds) suminf.   59.09430 (400) obj. 309.587 iterations 1457
Cbc0038I Pass 156: (9.54 seconds) suminf.   34.42564 (317) obj. 309.587 iterations 1266
Cbc0038I Pass 157: (9.56 seconds) suminf.   32.94930 (318) obj. 309.587 iterations 129
Cbc0038I Pass 158: (9.62 seconds) suminf.   29.83525 (373) obj. 309.587 iterations 403
Cbc0038I Pass 159: (9.68 seconds) suminf.   25.38046 (296) obj. 309.587 iterations 361
Cbc0038I Pass 160: (9.69 seconds) suminf.   24.24165 (279) obj. 309.587 iterations 67
Cbc0038I Pass 161: (9.79 seconds) suminf.   26.34885 (331) obj. 309.587 iterations 707
Cbc0038I Pass 162: (9.84 seconds) suminf.   25.05537 (342) obj. 309.587 iterations 300
Cbc0038I Pass 163: (9.86 seconds) suminf.   23.57194 (338) obj. 309.587 iterations 120
Cbc0038I Pass 164: (9.91 seconds) suminf.   21.58129 (260) obj. 309.587 iterations 296
Cbc0038I Pass 165: (9.95 seconds) suminf.   22.85908 (274) obj. 309.587 iterations 341
Cbc0038I Pass 166: (9.97 seconds) suminf.   20.83226 (247) obj. 309.587 iterations 61
Cbc0038I Pass 167: (9.98 seconds) suminf.   20.87435 (247) obj. 309.587 iterations 105
Cbc0038I Pass 168: (10.01 seconds) suminf.   21.01345 (246) obj. 309.587 iterations 166
Cbc0038I Pass 169: (10.05 seconds) suminf.   22.93614 (267) obj. 309.587 iterations 331
Cbc0038I Pass 170: (10.10 seconds) suminf.   19.64175 (262) obj. 309.587 iterations 294
Cbc0038I Pass 171: (10.18 seconds) suminf.   23.32766 (319) obj. 309.587 iterations 576
Cbc0038I Pass 172: (10.22 seconds) suminf.   20.78374 (323) obj. 309.587 iterations 314
Cbc0038I Pass 173: (10.25 seconds) suminf.   19.48290 (238) obj. 309.587 iterations 179
Cbc0038I Pass 174: (10.29 seconds) suminf.   18.71216 (225) obj. 309.587 iterations 296
Cbc0038I Pass 175: (10.34 seconds) suminf.   20.69963 (227) obj. 309.587 iterations 380
Cbc0038I Pass 176: (10.37 seconds) suminf.   19.00847 (228) obj. 309.587 iterations 226
Cbc0038I Pass 177: (10.42 seconds) suminf.   22.20727 (274) obj. 309.587 iterations 345
Cbc0038I Pass 178: (10.47 seconds) suminf.   18.87809 (259) obj. 309.587 iterations 431
Cbc0038I Pass 179: (10.48 seconds) suminf.   18.84231 (258) obj. 309.587 iterations 6
Cbc0038I Pass 180: (10.57 seconds) suminf.   23.07061 (334) obj. 309.587 iterations 703
Cbc0038I Pass 181: (10.61 seconds) suminf.   19.58231 (249) obj. 309.587 iterations 304
Cbc0038I Pass 182: (10.65 seconds) suminf.   18.83737 (233) obj. 309.587 iterations 202
Cbc0038I Pass 183: (10.68 seconds) suminf.   20.42967 (235) obj. 309.587 iterations 205
Cbc0038I Pass 184: (10.83 seconds) suminf.   51.08372 (354) obj. 309.587 iterations 1264
Cbc0038I Pass 185: (10.94 seconds) suminf.   33.94885 (303) obj. 309.587 iterations 875
Cbc0038I Pass 186: (10.98 seconds) suminf.   32.86470 (285) obj. 309.587 iterations 299
Cbc0038I Pass 187: (11.06 seconds) suminf.   20.74804 (258) obj. 309.587 iterations 625
Cbc0038I Pass 188: (11.08 seconds) suminf.   20.59133 (268) obj. 309.587 iterations 103
Cbc0038I Pass 189: (11.13 seconds) suminf.   21.10853 (279) obj. 309.587 iterations 367
Cbc0038I Pass 190: (11.15 seconds) suminf.   19.61895 (246) obj. 309.587 iterations 133
Cbc0038I Pass 191: (11.15 seconds) suminf.   19.04111 (246) obj. 309.587 iterations 12
Cbc0038I Pass 192: (11.20 seconds) suminf.   24.08020 (255) obj. 309.587 iterations 350
Cbc0038I Pass 193: (11.24 seconds) suminf.   22.48457 (268) obj. 309.587 iterations 284
Cbc0038I Pass 194: (11.25 seconds) suminf.   22.05199 (265) obj. 309.587 iterations 92
Cbc0038I Pass 195: (11.29 seconds) suminf.   22.38215 (241) obj. 309.587 iterations 253
Cbc0038I Pass 196: (11.32 seconds) suminf.   19.19594 (251) obj. 309.587 iterations 190
Cbc0038I Pass 197: (11.34 seconds) suminf.   18.74355 (253) obj. 309.587 iterations 96
Cbc0038I Pass 198: (11.37 seconds) suminf.   21.23962 (238) obj. 309.587 iterations 192
Cbc0038I Pass 199: (11.38 seconds) suminf.   20.74650 (248) obj. 309.587 iterations 116
Cbc0038I Pass 200: (11.43 seconds) suminf.   22.30667 (197) obj. 309.587 iterations 401
Cbc0038I Pass 201: (11.50 seconds) suminf.   20.20279 (231) obj. 309.587 iterations 550
Cbc0038I Pass 202: (11.54 seconds) suminf.   21.77292 (250) obj. 309.587 iterations 288
Cbc0038I Pass 203: (11.56 seconds) suminf.   19.46936 (241) obj. 309.587 iterations 138
Cbc0038I Pass 204: (11.67 seconds) suminf.   25.09257 (283) obj. 309.587 iterations 912
Cbc0038I Pass 205: (11.87 seconds) suminf.   65.47034 (419) obj. 309.587 iterations 1484
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 378 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 3984 rows 1249 columns - 126 fixed gives 3005, 924 - still too large
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 337 rows 122 columns
Cbc0038I Mini branch and bound did not improve solution (12.50 seconds)
Cbc0038I After 12.50 seconds - Feasibility pump exiting with objective of 340 - took 10.45 seconds
Cbc0012I Integer solution of 340 found by feasibility pump after 0 iterations and 0 nodes (12.50 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 3118 rows 841 columns - 122 fixed gives 2348, 612 - ok now
Cbc0031I 77 added rows had average density of 15.597403
Cbc0013I At root node, 77 cuts changed objective from 240.95793 to 262.02018 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 5.1 elements, 6 column cuts (6 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 105 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.804 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 327 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 21 row cuts average 30.3 elements, 0 column cuts (0 active)  in 0.673 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 340 best solution, best possible 263 (25.09 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 2655 rows 706 columns - 112 fixed gives 1984, 483 - ok now
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 55 rows 21 columns
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1262 rows 294 columns
Cbc0010I After 100 nodes, 5 on tree, 340 best solution, best possible 275 (91.28 seconds)
Cbc0010I After 200 nodes, 4 on tree, 340 best solution, best possible 281 (142.84 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 1086 rows 279 columns
Cbc0010I After 300 nodes, 4 on tree, 340 best solution, best possible 291 (177.97 seconds)
Cbc0010I After 400 nodes, 18 on tree, 340 best solution, best possible 296 (207.31 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 613 rows 164 columns
Cbc0010I After 500 nodes, 21 on tree, 340 best solution, best possible 296 (238.58 seconds)
Cbc0010I After 600 nodes, 40 on tree, 340 best solution, best possible 296 (277.54 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 843 rows 237 columns
Cbc0010I After 700 nodes, 55 on tree, 340 best solution, best possible 296 (315.02 seconds)
Cbc0010I After 800 nodes, 55 on tree, 340 best solution, best possible 296 (344.40 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 962 rows 260 columns
Cbc0010I After 900 nodes, 63 on tree, 340 best solution, best possible 296 (383.81 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 982 rows 268 columns
Cbc0010I After 1000 nodes, 56 on tree, 340 best solution, best possible 296 (421.22 seconds)
Cbc0010I After 1100 nodes, 48 on tree, 340 best solution, best possible 296 (464.55 seconds)
Cbc0010I After 1200 nodes, 38 on tree, 340 best solution, best possible 296 (513.34 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 965 rows 285 columns
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 975 rows 244 columns
Cbc0010I After 1300 nodes, 29 on tree, 340 best solution, best possible 296 (553.07 seconds)
Cbc0010I After 1400 nodes, 11 on tree, 340 best solution, best possible 296 (595.37 seconds)
Cbc0010I After 1500 nodes, 9 on tree, 340 best solution, best possible 296 (635.11 seconds)
Cbc0010I After 1600 nodes, 2 on tree, 340 best solution, best possible 297 (672.39 seconds)
Cbc0010I After 1700 nodes, 8 on tree, 340 best solution, best possible 298 (709.02 seconds)
Cbc0010I After 1800 nodes, 6 on tree, 340 best solution, best possible 300 (743.55 seconds)
Cbc0010I After 1900 nodes, 6 on tree, 340 best solution, best possible 300 (789.24 seconds)
Cbc0010I After 2000 nodes, 12 on tree, 340 best solution, best possible 300 (827.53 seconds)
Cbc0010I After 2100 nodes, 3 on tree, 340 best solution, best possible 300 (857.20 seconds)
Cbc0010I After 2200 nodes, 25 on tree, 340 best solution, best possible 300 (906.57 seconds)
Cbc0010I After 2300 nodes, 20 on tree, 340 best solution, best possible 300 (938.08 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 752 rows 222 columns
Cbc0010I After 2400 nodes, 29 on tree, 340 best solution, best possible 300 (972.16 seconds)
Cbc0010I After 2500 nodes, 5 on tree, 340 best solution, best possible 300 (1002.77 seconds)
Cbc0010I After 2600 nodes, 31 on tree, 340 best solution, best possible 300 (1033.72 seconds)
Cbc0010I After 2700 nodes, 21 on tree, 340 best solution, best possible 300 (1061.19 seconds)
Cbc0010I After 2800 nodes, 19 on tree, 340 best solution, best possible 300 (1088.60 seconds)
Cbc0010I After 2900 nodes, 22 on tree, 340 best solution, best possible 300 (1112.53 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 791 rows 212 columns
Cbc0010I After 3000 nodes, 23 on tree, 340 best solution, best possible 300 (1157.87 seconds)
Cbc0010I After 3100 nodes, 28 on tree, 340 best solution, best possible 300 (1192.13 seconds)
Cbc0010I After 3200 nodes, 25 on tree, 340 best solution, best possible 300 (1222.59 seconds)
Cbc0010I After 3300 nodes, 33 on tree, 340 best solution, best possible 300 (1264.90 seconds)
Cbc0010I After 3400 nodes, 37 on tree, 340 best solution, best possible 300 (1326.69 seconds)
Cbc0010I After 3500 nodes, 41 on tree, 340 best solution, best possible 300 (1365.60 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 666 rows 198 columns
Cbc0010I After 3600 nodes, 41 on tree, 340 best solution, best possible 300 (1416.63 seconds)
Cbc0010I After 3700 nodes, 38 on tree, 340 best solution, best possible 300 (1451.88 seconds)
Cbc0010I After 3800 nodes, 10 on tree, 340 best solution, best possible 300 (1492.02 seconds)
Cbc0010I After 3900 nodes, 26 on tree, 340 best solution, best possible 300 (1514.20 seconds)
Cbc0010I After 4000 nodes, 8 on tree, 340 best solution, best possible 300 (1534.45 seconds)
Cbc0010I After 4100 nodes, 17 on tree, 340 best solution, best possible 300 (1573.19 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 933 rows 232 columns
Cbc0010I After 4200 nodes, 7 on tree, 340 best solution, best possible 300 (1598.50 seconds)
Cbc0010I After 4300 nodes, 29 on tree, 340 best solution, best possible 300 (1629.04 seconds)
Cbc0010I After 4400 nodes, 24 on tree, 340 best solution, best possible 300 (1646.67 seconds)
Cbc0010I After 4500 nodes, 31 on tree, 340 best solution, best possible 300 (1678.02 seconds)
Cbc0010I After 4600 nodes, 20 on tree, 340 best solution, best possible 300 (1710.11 seconds)
Cbc0010I After 4700 nodes, 14 on tree, 340 best solution, best possible 300 (1737.53 seconds)
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 573 rows 176 columns
Cbc0010I After 4800 nodes, 15 on tree, 340 best solution, best possible 300 (1769.74 seconds)
Cbc0010I After 4900 nodes, 9 on tree, 340 best solution, best possible 300 (1793.83 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 340 (best possible 300), took 5287132 iterations and 4951 nodes (1800.10 seconds)
Cbc0032I Strong branching done 30572 times (2390114 iterations), fathomed 396 nodes and fixed 2828 variables
Cbc0035I Maximum depth 98, 0 variables fixed on reduced cost
Cuts at root node changed objective from 240.958 to 263
Probing was tried 887 times and created 66132 cuts of which 0 were active after adding rounds of cuts (4.587 seconds)
Gomory was tried 620 times and created 564 cuts of which 0 were active after adding rounds of cuts (3.651 seconds)
Knapsack was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 13 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 620 times and created 12213 cuts of which 0 were active after adding rounds of cuts (1.285 seconds)
ZeroHalf was tried 13 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.673 seconds)
ImplicationCuts was tried 28 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

Objective value:                340.00000000
Lower bound:                    300.000
Gap:                            0.13
Enumerated nodes:               4951
Total iterations:               5287132
Time (CPU seconds):             1800.31
Time (Wallclock seconds):       1800.66

Total time (CPU seconds):       1800.32   (Wallclock seconds):       1800.68

