Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump25_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump25_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 25600 - 0.05 seconds
Cgl0002I 68 variables fixed
Cgl0003I 0 fixed, 8 tightened bounds, 208 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 1577 rows, 516 columns (516 integer (490 of which binary)) and 5422 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 516 objects (516 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 286 integers unsatisfied sum - 104.235
Cbc0038I Pass   1: suminf.   34.66389 (181) obj. 37611.9 iterations 670
Cbc0038I Pass   2: suminf.   22.68608 (114) obj. 38108.3 iterations 254
Cbc0038I Pass   3: suminf.   19.02555 (103) obj. 38912 iterations 160
Cbc0038I Pass   4: suminf.   17.29947 (99) obj. 38912 iterations 59
Cbc0038I Pass   5: suminf.   16.59483 (94) obj. 38912 iterations 32
Cbc0038I Pass   6: suminf.    7.89458 (60) obj. 39497.2 iterations 144
Cbc0038I Pass   7: suminf.    0.65616 (23) obj. 39830.8 iterations 157
Cbc0038I Pass   8: suminf.    0.65616 (23) obj. 39830.8 iterations 4
Cbc0038I Pass   9: suminf.    2.25306 (20) obj. 43520 iterations 81
Cbc0038I Pass  10: suminf.    1.06147 (18) obj. 43557.2 iterations 31
Cbc0038I Pass  11: suminf.    0.83482 (14) obj. 44568.1 iterations 219
Cbc0038I Pass  12: suminf.    0.76764 (12) obj. 44569.3 iterations 6
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 38912 iterations 41
Cbc0038I Solution found of 38912
Cbc0038I Cleaned solution of 38912
Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1577 rows 516 columns, reduced to 1200 rows 343 columns - 50 fixed gives 684, 187 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.49 seconds)
Cbc0038I Round again with cutoff of 37587.2
Cbc0038I Pass  14: suminf.   34.67945 (180) obj. 37587 iterations 1
Cbc0038I Pass  15: suminf.   22.63385 (139) obj. 37587.2 iterations 274
Cbc0038I Pass  16: suminf.   20.37934 (117) obj. 37587.2 iterations 163
Cbc0038I Pass  17: suminf.   18.38205 (115) obj. 37587.2 iterations 57
Cbc0038I Pass  18: suminf.   18.31622 (115) obj. 37587.2 iterations 2
Cbc0038I Pass  19: suminf.   14.63331 (104) obj. 37587.2 iterations 261
Cbc0038I Pass  20: suminf.   14.36834 (93) obj. 37587.2 iterations 70
Cbc0038I Pass  21: suminf.    7.93124 (69) obj. 37587.2 iterations 101
Cbc0038I Pass  22: suminf.    3.44280 (49) obj. 37587.2 iterations 201
Cbc0038I Pass  23: suminf.    3.21949 (54) obj. 37587.2 iterations 98
Cbc0038I Pass  24: suminf.    4.39606 (38) obj. 37587.2 iterations 105
Cbc0038I Pass  25: suminf.    1.96712 (34) obj. 37587.2 iterations 39
Cbc0038I Pass  26: suminf.    1.31654 (34) obj. 37587.2 iterations 6
Cbc0038I Pass  27: suminf.    5.87666 (40) obj. 37587.2 iterations 136
Cbc0038I Pass  28: suminf.    2.39506 (38) obj. 37587.2 iterations 86
Cbc0038I Pass  29: suminf.    8.72038 (43) obj. 37587.2 iterations 233
Cbc0038I Pass  30: suminf.    2.85594 (44) obj. 37587.2 iterations 85
Cbc0038I Pass  31: suminf.    5.67474 (52) obj. 37587.2 iterations 177
Cbc0038I Pass  32: suminf.    2.30419 (41) obj. 37587.2 iterations 65
Cbc0038I Pass  33: suminf.    9.05722 (49) obj. 37587.2 iterations 297
Cbc0038I Pass  34: suminf.    3.81990 (35) obj. 37587.2 iterations 89
Cbc0038I Pass  35: suminf.    2.44150 (28) obj. 37587.2 iterations 102
Cbc0038I Pass  36: suminf.    3.32567 (20) obj. 37587.2 iterations 107
Cbc0038I Pass  37: suminf.    1.54672 (19) obj. 37587.2 iterations 40
Cbc0038I Pass  38: suminf.    4.24940 (18) obj. 37587.2 iterations 80
Cbc0038I Pass  39: suminf.    3.60282 (18) obj. 37587.2 iterations 14
Cbc0038I Pass  40: suminf.    2.15672 (29) obj. 37587.2 iterations 131
Cbc0038I Pass  41: suminf.    1.93462 (29) obj. 37587.2 iterations 15
Cbc0038I Pass  42: suminf.    6.79458 (29) obj. 37587.2 iterations 109
Cbc0038I Pass  43: suminf.    2.66399 (15) obj. 37587.2 iterations 60
Cbc0038I Pass  44: suminf.    2.45400 (16) obj. 37587.2 iterations 34
Cbc0038I Pass  45: suminf.    2.11134 (10) obj. 37587.2 iterations 72
Cbc0038I Pass  46: suminf.    1.69936 (11) obj. 37587.2 iterations 40
Cbc0038I Pass  47: suminf.    1.79436 (10) obj. 37587.2 iterations 58
Cbc0038I Pass  48: suminf.    1.14378 (10) obj. 37587.2 iterations 11
Cbc0038I Pass  49: suminf.    2.06161 (12) obj. 37587.2 iterations 70
Cbc0038I Pass  50: suminf.   38.78034 (164) obj. 37587.2 iterations 510
Cbc0038I Pass  51: suminf.   28.86125 (127) obj. 37587.2 iterations 213
Cbc0038I Pass  52: suminf.   22.63716 (112) obj. 37587.2 iterations 99
Cbc0038I Pass  53: suminf.   20.76786 (112) obj. 37587.2 iterations 51
Cbc0038I Pass  54: suminf.   20.32905 (111) obj. 37587.2 iterations 8
Cbc0038I Pass  55: suminf.    9.45966 (75) obj. 37587.2 iterations 143
Cbc0038I Pass  56: suminf.    8.59264 (73) obj. 37587.2 iterations 27
Cbc0038I Pass  57: suminf.    7.89484 (70) obj. 37587.2 iterations 176
Cbc0038I Pass  58: suminf.    7.64633 (72) obj. 37587.2 iterations 48
Cbc0038I Pass  59: suminf.    7.07764 (71) obj. 37587.2 iterations 141
Cbc0038I Pass  60: suminf.    6.33414 (66) obj. 37587.2 iterations 73
Cbc0038I Pass  61: suminf.    7.77163 (67) obj. 37587.2 iterations 143
Cbc0038I Pass  62: suminf.    7.73471 (74) obj. 37587.2 iterations 38
Cbc0038I Pass  63: suminf.    8.95813 (63) obj. 37587.2 iterations 190
Cbc0038I Pass  64: suminf.    6.73008 (62) obj. 37587.2 iterations 52
Cbc0038I Pass  65: suminf.    5.49678 (50) obj. 37587.2 iterations 213
Cbc0038I Pass  66: suminf.    5.38261 (48) obj. 37587.2 iterations 27
Cbc0038I Pass  67: suminf.    3.69948 (41) obj. 37587.2 iterations 138
Cbc0038I Pass  68: suminf.    1.54745 (33) obj. 37587.2 iterations 117
Cbc0038I Pass  69: suminf.    3.88820 (30) obj. 37587.2 iterations 103
Cbc0038I Pass  70: suminf.    3.58256 (34) obj. 37587.2 iterations 43
Cbc0038I Pass  71: suminf.    3.50579 (30) obj. 37587.2 iterations 111
Cbc0038I Pass  72: suminf.    3.51419 (36) obj. 37587.2 iterations 55
Cbc0038I Pass  73: suminf.    2.26768 (20) obj. 37587.2 iterations 188
Cbc0038I Pass  74: suminf.    2.04494 (19) obj. 37587.2 iterations 31
Cbc0038I Pass  75: suminf.    4.06046 (16) obj. 37587.2 iterations 70
Cbc0038I Pass  76: suminf.    1.22734 (17) obj. 37587.2 iterations 44
Cbc0038I Pass  77: suminf.    1.22734 (17) obj. 37587.2 iterations 1
Cbc0038I Pass  78: suminf.    1.87834 (12) obj. 37587.2 iterations 211
Cbc0038I Pass  79: suminf.    1.49754 (11) obj. 37587.2 iterations 80
Cbc0038I Pass  80: suminf.    1.66167 (11) obj. 37587.2 iterations 31
Cbc0038I Pass  81: suminf.    1.01110 (11) obj. 37587.2 iterations 17
Cbc0038I Pass  82: suminf.    3.01058 (12) obj. 37587.2 iterations 75
Cbc0038I Pass  83: suminf.    2.76753 (12) obj. 37587.2 iterations 13
Cbc0038I Pass  84: suminf.    1.66167 (11) obj. 37587.2 iterations 65
Cbc0038I Pass  85: suminf.    1.01110 (11) obj. 37587.2 iterations 20
Cbc0038I Pass  86: suminf.    1.77121 (12) obj. 37587.2 iterations 38
Cbc0038I Pass  87: suminf.    1.47749 (11) obj. 37587.2 iterations 6
Cbc0038I Pass  88: suminf.    1.74363 (13) obj. 37587.2 iterations 36
Cbc0038I Pass  89: suminf.    1.09681 (13) obj. 37587.2 iterations 6
Cbc0038I Pass  90: suminf.    7.22430 (68) obj. 37587.2 iterations 263
Cbc0038I Pass  91: suminf.    6.12551 (64) obj. 37587.2 iterations 43
Cbc0038I Pass  92: suminf.    6.68854 (43) obj. 37587.2 iterations 254
Cbc0038I Pass  93: suminf.    2.21596 (37) obj. 37587.2 iterations 88
Cbc0038I Pass  94: suminf.    2.07654 (28) obj. 37587.2 iterations 14
Cbc0038I Pass  95: suminf.    2.91816 (17) obj. 37587.2 iterations 300
Cbc0038I Pass  96: suminf.    2.46150 (22) obj. 37587.2 iterations 53
Cbc0038I Pass  97: suminf.    2.57391 (22) obj. 37587.2 iterations 62
Cbc0038I Pass  98: suminf.    1.24082 (19) obj. 37587.2 iterations 22
Cbc0038I Pass  99: suminf.    2.22183 (18) obj. 37587.2 iterations 66
Cbc0038I Pass 100: suminf.    1.69936 (11) obj. 37587.2 iterations 38
Cbc0038I Pass 101: suminf.    1.79436 (10) obj. 37587.2 iterations 72
Cbc0038I Pass 102: suminf.    1.14378 (10) obj. 37587.2 iterations 12
Cbc0038I Pass 103: suminf.    2.06161 (12) obj. 37587.2 iterations 60
Cbc0038I Pass 104: suminf.   26.81099 (117) obj. 37587.2 iterations 330
Cbc0038I Pass 105: suminf.   16.80276 (92) obj. 37587.2 iterations 178
Cbc0038I Pass 106: suminf.   12.44564 (77) obj. 37587.2 iterations 71
Cbc0038I Pass 107: suminf.   11.65193 (74) obj. 37587.2 iterations 46
Cbc0038I Pass 108: suminf.    1.96339 (36) obj. 37587.2 iterations 237
Cbc0038I Pass 109: suminf.    1.95687 (36) obj. 37587.2 iterations 19
Cbc0038I Pass 110: suminf.    8.49744 (43) obj. 37587.2 iterations 134
Cbc0038I Pass 111: suminf.    7.31777 (39) obj. 37587.2 iterations 59
Cbc0038I Pass 112: suminf.    7.07493 (33) obj. 37587.2 iterations 30
Cbc0038I Pass 113: suminf.   38.37348 (190) obj. 37587.2 iterations 475
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1577 rows 516 columns, reduced to 1436 rows 450 columns - 59 fixed gives 1117, 349 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.48 seconds)
Cbc0038I After 1.48 seconds - Feasibility pump exiting with objective of 38912 - took 1.30 seconds
Cbc0012I Integer solution of 38912 found by feasibility pump after 0 iterations and 0 nodes (1.48 seconds)
Cbc0031I 44 added rows had average density of 213.13636
Cbc0013I At root node, 44 cuts changed objective from 25673.493 to 28672 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 208 row cuts average 349.7 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 253 row cuts average 268.0 elements, 0 column cuts (0 active)  in 0.385 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 38912 best solution, best possible 28672 (4.04 seconds)
Cbc0010I After 100 nodes, 10 on tree, 38912 best solution, best possible 28680 (20.45 seconds)
Cbc0010I After 200 nodes, 10 on tree, 38912 best solution, best possible 28680 (29.65 seconds)
Cbc0010I After 300 nodes, 10 on tree, 38912 best solution, best possible 28680 (38.64 seconds)
Cbc0010I After 400 nodes, 10 on tree, 38912 best solution, best possible 28680 (47.59 seconds)
Cbc0010I After 500 nodes, 2 on tree, 38912 best solution, best possible 28682 (55.91 seconds)
Cbc0010I After 600 nodes, 2 on tree, 38912 best solution, best possible 28682 (64.39 seconds)
Cbc0010I After 700 nodes, 2 on tree, 38912 best solution, best possible 28682 (72.52 seconds)
Cbc0010I After 800 nodes, 2 on tree, 38912 best solution, best possible 28682 (80.70 seconds)
Cbc0010I After 900 nodes, 2 on tree, 38912 best solution, best possible 28682 (88.62 seconds)
Cbc0010I After 1000 nodes, 2 on tree, 38912 best solution, best possible 28682 (96.53 seconds)
Cbc0010I After 1100 nodes, 1 on tree, 38912 best solution, best possible 29198 (103.82 seconds)
Cbc0010I After 1200 nodes, 1 on tree, 38912 best solution, best possible 29248 (111.44 seconds)
Cbc0010I After 1300 nodes, 1 on tree, 38912 best solution, best possible 29298 (119.25 seconds)
Cbc0010I After 1400 nodes, 1 on tree, 38912 best solution, best possible 29348 (127.17 seconds)
Cbc0010I After 1500 nodes, 1 on tree, 38912 best solution, best possible 29398 (134.93 seconds)
Cbc0010I After 1600 nodes, 1 on tree, 38912 best solution, best possible 29448 (142.56 seconds)
Cbc0010I After 1700 nodes, 1 on tree, 38912 best solution, best possible 29495 (152.56 seconds)
Cbc0010I After 1800 nodes, 1 on tree, 38912 best solution, best possible 29545 (164.32 seconds)
Cbc0010I After 1900 nodes, 1 on tree, 38912 best solution, best possible 29595 (174.93 seconds)
Cbc0010I After 2000 nodes, 1 on tree, 38912 best solution, best possible 29645 (184.74 seconds)
Cbc0010I After 2100 nodes, 1 on tree, 38912 best solution, best possible 29695 (194.79 seconds)
Cbc0010I After 2200 nodes, 1 on tree, 38912 best solution, best possible 29745 (205.45 seconds)
Cbc0010I After 2300 nodes, 1 on tree, 38912 best solution, best possible 29795 (216.37 seconds)
Cbc0010I After 2400 nodes, 1 on tree, 38912 best solution, best possible 29845 (226.22 seconds)
Cbc0010I After 2500 nodes, 1 on tree, 38912 best solution, best possible 29895 (235.92 seconds)
Cbc0010I After 2600 nodes, 1 on tree, 38912 best solution, best possible 29945 (243.07 seconds)
Cbc0010I After 2700 nodes, 1 on tree, 38912 best solution, best possible 29995 (250.07 seconds)
Cbc0010I After 2800 nodes, 1 on tree, 38912 best solution, best possible 30045 (257.03 seconds)
Cbc0010I After 2900 nodes, 1 on tree, 38912 best solution, best possible 30095 (263.94 seconds)
Cbc0010I After 3000 nodes, 1 on tree, 38912 best solution, best possible 30145 (270.90 seconds)
Cbc0010I After 3100 nodes, 1 on tree, 38912 best solution, best possible 30195 (277.86 seconds)
Cbc0010I After 3200 nodes, 1 on tree, 38912 best solution, best possible 30245 (284.80 seconds)
Cbc0010I After 3300 nodes, 1 on tree, 38912 best solution, best possible 30295 (291.78 seconds)
Cbc0010I After 3400 nodes, 1 on tree, 38912 best solution, best possible 30345 (298.89 seconds)
Cbc0010I After 3500 nodes, 1 on tree, 38912 best solution, best possible 30395 (305.96 seconds)
Cbc0010I After 3600 nodes, 1 on tree, 38912 best solution, best possible 30445 (312.83 seconds)
Cbc0010I After 3700 nodes, 1 on tree, 38912 best solution, best possible 30495 (319.80 seconds)
Cbc0010I After 3800 nodes, 1 on tree, 38912 best solution, best possible 30545 (327.10 seconds)
Cbc0010I After 3900 nodes, 1 on tree, 38912 best solution, best possible 30595 (334.14 seconds)
Cbc0010I After 4000 nodes, 1 on tree, 38912 best solution, best possible 30645 (341.02 seconds)
Cbc0010I After 4100 nodes, 1 on tree, 38912 best solution, best possible 30695 (347.75 seconds)
Cbc0010I After 4200 nodes, 2 on tree, 38912 best solution, best possible 30739 (358.43 seconds)
Cbc0010I After 4300 nodes, 1 on tree, 38912 best solution, best possible 30761 (370.11 seconds)
Cbc0010I After 4400 nodes, 1 on tree, 38912 best solution, best possible 30783 (381.05 seconds)
Cbc0010I After 4500 nodes, 2 on tree, 38912 best solution, best possible 30806 (391.81 seconds)
Cbc0010I After 4600 nodes, 1 on tree, 38912 best solution, best possible 30830 (402.87 seconds)
Cbc0010I After 4700 nodes, 2 on tree, 38912 best solution, best possible 30854 (413.67 seconds)
Cbc0010I After 4800 nodes, 2 on tree, 38912 best solution, best possible 30879 (424.24 seconds)
Cbc0010I After 4900 nodes, 2 on tree, 38912 best solution, best possible 30903 (434.25 seconds)
Cbc0010I After 5000 nodes, 2 on tree, 38912 best solution, best possible 30926 (444.42 seconds)
Cbc0010I After 5100 nodes, 1 on tree, 38912 best solution, best possible 30957 (455.86 seconds)
Cbc0010I After 5200 nodes, 1 on tree, 38912 best solution, best possible 31005 (468.10 seconds)
Cbc0010I After 5300 nodes, 1 on tree, 38912 best solution, best possible 31054 (479.36 seconds)
Cbc0010I After 5400 nodes, 1 on tree, 38912 best solution, best possible 31104 (490.64 seconds)
Cbc0010I After 5500 nodes, 1 on tree, 38912 best solution, best possible 31150 (501.44 seconds)
Cbc0010I After 5600 nodes, 1 on tree, 38912 best solution, best possible 31200 (512.59 seconds)
Cbc0010I After 5700 nodes, 1 on tree, 38912 best solution, best possible 31250 (524.71 seconds)
Cbc0010I After 5800 nodes, 1 on tree, 38912 best solution, best possible 31300 (535.93 seconds)
Cbc0010I After 5900 nodes, 1 on tree, 38912 best solution, best possible 31350 (546.69 seconds)
Cbc0010I After 6000 nodes, 1 on tree, 38912 best solution, best possible 31400 (558.20 seconds)
Cbc0010I After 6100 nodes, 1 on tree, 38912 best solution, best possible 31449 (568.72 seconds)
Cbc0010I After 6200 nodes, 1 on tree, 38912 best solution, best possible 31499 (578.99 seconds)
Cbc0010I After 6300 nodes, 1 on tree, 38912 best solution, best possible 31549 (589.59 seconds)
Cbc0010I After 6400 nodes, 1 on tree, 38912 best solution, best possible 31599 (601.05 seconds)
Cbc0010I After 6500 nodes, 1 on tree, 38912 best solution, best possible 31648 (611.71 seconds)
Cbc0010I After 6600 nodes, 1 on tree, 38912 best solution, best possible 31698 (622.51 seconds)
Cbc0010I After 6700 nodes, 3 on tree, 38912 best solution, best possible 31744 (634.04 seconds)
Cbc0010I After 6800 nodes, 1 on tree, 38912 best solution, best possible 31768 (649.67 seconds)
Cbc0010I After 6900 nodes, 2 on tree, 38912 best solution, best possible 31791 (662.06 seconds)
Cbc0010I After 7000 nodes, 2 on tree, 38912 best solution, best possible 31813 (674.79 seconds)
Cbc0010I After 7100 nodes, 2 on tree, 38912 best solution, best possible 31837 (685.12 seconds)
Cbc0010I After 7200 nodes, 2 on tree, 38912 best solution, best possible 31861 (695.66 seconds)
Cbc0010I After 7300 nodes, 1 on tree, 38912 best solution, best possible 31885 (706.04 seconds)
Cbc0010I After 7400 nodes, 2 on tree, 38912 best solution, best possible 31909 (718.74 seconds)
Cbc0010I After 7500 nodes, 2 on tree, 38912 best solution, best possible 31934 (731.83 seconds)
Cbc0010I After 7600 nodes, 2 on tree, 38912 best solution, best possible 31956 (744.52 seconds)
Cbc0010I After 7700 nodes, 1 on tree, 38912 best solution, best possible 31981 (753.83 seconds)
Cbc0010I After 7800 nodes, 1 on tree, 38912 best solution, best possible 32006 (762.54 seconds)
Cbc0010I After 7900 nodes, 1 on tree, 38912 best solution, best possible 32031 (771.09 seconds)
Cbc0010I After 8000 nodes, 1 on tree, 38912 best solution, best possible 32056 (780.00 seconds)
Cbc0010I After 8100 nodes, 2 on tree, 38912 best solution, best possible 32080 (789.57 seconds)
Cbc0010I After 8200 nodes, 2 on tree, 38912 best solution, best possible 32105 (798.02 seconds)
Cbc0010I After 8300 nodes, 2 on tree, 38912 best solution, best possible 32130 (806.79 seconds)
Cbc0010I After 8400 nodes, 2 on tree, 38912 best solution, best possible 32155 (815.84 seconds)
Cbc0010I After 8500 nodes, 2 on tree, 38912 best solution, best possible 32180 (824.47 seconds)
Cbc0010I After 8600 nodes, 1 on tree, 38912 best solution, best possible 32204 (833.23 seconds)
Cbc0010I After 8700 nodes, 1 on tree, 38912 best solution, best possible 32229 (841.71 seconds)
Cbc0010I After 8800 nodes, 1 on tree, 38912 best solution, best possible 32254 (849.47 seconds)
Cbc0010I After 8900 nodes, 1 on tree, 38912 best solution, best possible 32279 (857.58 seconds)
Cbc0010I After 9000 nodes, 2 on tree, 38912 best solution, best possible 32303 (866.49 seconds)
Cbc0010I After 9100 nodes, 2 on tree, 38912 best solution, best possible 32328 (874.76 seconds)
Cbc0010I After 9200 nodes, 1 on tree, 38912 best solution, best possible 32353 (883.60 seconds)
Cbc0010I After 9300 nodes, 1 on tree, 38912 best solution, best possible 32378 (892.31 seconds)
Cbc0010I After 9400 nodes, 1 on tree, 38912 best solution, best possible 32403 (900.82 seconds)
Cbc0010I After 9500 nodes, 1 on tree, 38912 best solution, best possible 32428 (909.20 seconds)
Cbc0010I After 9600 nodes, 2 on tree, 38912 best solution, best possible 32452 (917.34 seconds)
Cbc0010I After 9700 nodes, 2 on tree, 38912 best solution, best possible 32477 (925.11 seconds)
Cbc0010I After 9800 nodes, 2 on tree, 38912 best solution, best possible 32502 (932.76 seconds)
Cbc0010I After 9900 nodes, 2 on tree, 38912 best solution, best possible 32527 (940.75 seconds)
Cbc0010I After 10000 nodes, 2 on tree, 38912 best solution, best possible 32552 (950.23 seconds)
Cbc0010I After 10100 nodes, 2 on tree, 38912 best solution, best possible 32577 (957.88 seconds)
Cbc0010I After 10200 nodes, 2 on tree, 38912 best solution, best possible 32602 (964.65 seconds)
Cbc0010I After 10300 nodes, 2 on tree, 38912 best solution, best possible 32627 (972.50 seconds)
Cbc0010I After 10400 nodes, 2 on tree, 38912 best solution, best possible 32652 (979.68 seconds)
Cbc0010I After 10500 nodes, 2 on tree, 38912 best solution, best possible 32677 (986.64 seconds)
Cbc0010I After 10600 nodes, 2 on tree, 38912 best solution, best possible 32702 (993.48 seconds)
Cbc0010I After 10700 nodes, 2 on tree, 38912 best solution, best possible 32727 (1000.51 seconds)
Cbc0010I After 10800 nodes, 2 on tree, 38912 best solution, best possible 32752 (1007.53 seconds)
Cbc0010I After 10900 nodes, 2 on tree, 38912 best solution, best possible 32777 (1014.63 seconds)
Cbc0010I After 11000 nodes, 2 on tree, 38912 best solution, best possible 32802 (1021.81 seconds)
Cbc0010I After 11100 nodes, 1 on tree, 38912 best solution, best possible 32827 (1029.99 seconds)
Cbc0010I After 11200 nodes, 1 on tree, 38912 best solution, best possible 32852 (1037.87 seconds)
Cbc0010I After 11300 nodes, 1 on tree, 38912 best solution, best possible 32877 (1046.22 seconds)
Cbc0010I After 11400 nodes, 1 on tree, 38912 best solution, best possible 32902 (1054.59 seconds)
Cbc0010I After 11500 nodes, 1 on tree, 38912 best solution, best possible 32927 (1062.85 seconds)
Cbc0010I After 11600 nodes, 1 on tree, 38912 best solution, best possible 32952 (1070.89 seconds)
Cbc0010I After 11700 nodes, 1 on tree, 38912 best solution, best possible 32977 (1078.69 seconds)
Cbc0010I After 11800 nodes, 2 on tree, 38912 best solution, best possible 33001 (1087.21 seconds)
Cbc0010I After 11900 nodes, 2 on tree, 38912 best solution, best possible 33026 (1095.24 seconds)
Cbc0010I After 12000 nodes, 2 on tree, 38912 best solution, best possible 33051 (1103.21 seconds)
Cbc0010I After 12100 nodes, 2 on tree, 38912 best solution, best possible 33076 (1111.72 seconds)
Cbc0010I After 12200 nodes, 2 on tree, 38912 best solution, best possible 33101 (1120.59 seconds)
Cbc0010I After 12300 nodes, 2 on tree, 38912 best solution, best possible 33126 (1128.91 seconds)
Cbc0010I After 12400 nodes, 2 on tree, 38912 best solution, best possible 33151 (1136.75 seconds)
Cbc0010I After 12500 nodes, 2 on tree, 38912 best solution, best possible 33176 (1144.10 seconds)
Cbc0010I After 12600 nodes, 2 on tree, 38912 best solution, best possible 33201 (1151.78 seconds)
Cbc0010I After 12700 nodes, 2 on tree, 38912 best solution, best possible 33224 (1160.01 seconds)
Cbc0010I After 12800 nodes, 2 on tree, 38912 best solution, best possible 33249 (1168.58 seconds)
Cbc0010I After 12900 nodes, 2 on tree, 38912 best solution, best possible 33273 (1176.68 seconds)
Cbc0010I After 13000 nodes, 1 on tree, 38912 best solution, best possible 33297 (1185.20 seconds)
Cbc0010I After 13100 nodes, 2 on tree, 38912 best solution, best possible 33297 (1193.91 seconds)
Cbc0010I After 13200 nodes, 3 on tree, 38912 best solution, best possible 33297 (1202.93 seconds)
Cbc0010I After 13300 nodes, 3 on tree, 38912 best solution, best possible 33297 (1211.96 seconds)
Cbc0010I After 13400 nodes, 2 on tree, 38912 best solution, best possible 33297 (1220.92 seconds)
Cbc0010I After 13500 nodes, 3 on tree, 38912 best solution, best possible 33297 (1229.73 seconds)
Cbc0010I After 13600 nodes, 3 on tree, 38912 best solution, best possible 33297 (1238.06 seconds)
Cbc0010I After 13700 nodes, 2 on tree, 38912 best solution, best possible 33297 (1245.19 seconds)
Cbc0010I After 13800 nodes, 2 on tree, 38912 best solution, best possible 33297 (1252.71 seconds)
Cbc0010I After 13900 nodes, 2 on tree, 38912 best solution, best possible 33297 (1260.40 seconds)
Cbc0010I After 14000 nodes, 2 on tree, 38912 best solution, best possible 33297 (1268.00 seconds)
Cbc0010I After 14100 nodes, 1 on tree, 38912 best solution, best possible 33569 (1275.64 seconds)
Cbc0010I After 14200 nodes, 1 on tree, 38912 best solution, best possible 33594 (1283.49 seconds)
Cbc0010I After 14300 nodes, 1 on tree, 38912 best solution, best possible 33619 (1291.37 seconds)
Cbc0010I After 14400 nodes, 1 on tree, 38912 best solution, best possible 33644 (1298.83 seconds)
Cbc0010I After 14500 nodes, 1 on tree, 38912 best solution, best possible 33669 (1306.12 seconds)
Cbc0010I After 14600 nodes, 1 on tree, 38912 best solution, best possible 33694 (1313.56 seconds)
Cbc0010I After 14700 nodes, 1 on tree, 38912 best solution, best possible 33719 (1321.06 seconds)
Cbc0010I After 14800 nodes, 1 on tree, 38912 best solution, best possible 33744 (1328.30 seconds)
Cbc0010I After 14900 nodes, 1 on tree, 38912 best solution, best possible 33769 (1335.61 seconds)
Cbc0010I After 15000 nodes, 4 on tree, 38912 best solution, best possible 33792 (1343.71 seconds)
Cbc0004I Integer solution of 33792 found after 8103712 iterations and 15021 nodes (1346.01 seconds)
Cbc0001I Search completed - best objective 33792, took 8103712 iterations and 15021 nodes (1346.07 seconds)
Cbc0032I Strong branching done 39272 times (2449681 iterations), fathomed 3210 nodes and fixed 8613 variables
Cbc0035I Maximum depth 5132, 0 variables fixed on reduced cost
Cuts at root node changed objective from 25673.5 to 28672
Probing was tried 12822 times and created 247166 cuts of which 0 were active after adding rounds of cuts (25.864 seconds)
Gomory was tried 11260 times and created 110880 cuts of which 0 were active after adding rounds of cuts (23.832 seconds)
Knapsack was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 11260 times and created 38329 cuts of which 0 were active after adding rounds of cuts (9.805 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
ImplicationCuts was tried 41 times and created 63 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                33792.00000000
Enumerated nodes:               15021
Total iterations:               8103712
Time (CPU seconds):             1346.11
Time (Wallclock seconds):       1356.82

Total time (CPU seconds):       1346.12   (Wallclock seconds):       1356.83

