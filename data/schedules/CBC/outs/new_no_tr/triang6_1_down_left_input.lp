Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_1_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_1_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 311.217 - 0.03 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 314 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 101 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1394 rows, 493 columns (493 integer (471 of which binary)) and 4742 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 493 objects (493 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 261 integers unsatisfied sum - 79.2465
Cbc0038I Pass   1: suminf.   47.94334 (202) obj. 343.429 iterations 324
Cbc0038I Pass   2: suminf.   33.28291 (155) obj. 346.62 iterations 283
Cbc0038I Pass   3: suminf.   30.08698 (142) obj. 352.732 iterations 102
Cbc0038I Pass   4: suminf.   25.37604 (148) obj. 371.502 iterations 138
Cbc0038I Pass   5: suminf.   24.49370 (146) obj. 370.905 iterations 37
Cbc0038I Pass   6: suminf.   23.88710 (141) obj. 367.721 iterations 105
Cbc0038I Pass   7: suminf.   23.36910 (140) obj. 370.882 iterations 57
Cbc0038I Pass   8: suminf.   18.13796 (109) obj. 400.264 iterations 177
Cbc0038I Pass   9: suminf.   13.84780 (94) obj. 385.994 iterations 157
Cbc0038I Pass  10: suminf.   13.83242 (92) obj. 385.866 iterations 24
Cbc0038I Pass  11: suminf.   13.04373 (91) obj. 385.618 iterations 28
Cbc0038I Pass  12: suminf.   12.17021 (96) obj. 385.724 iterations 103
Cbc0038I Pass  13: suminf.   10.65350 (93) obj. 385.748 iterations 102
Cbc0038I Pass  14: suminf.    7.84015 (84) obj. 388.343 iterations 126
Cbc0038I Pass  15: suminf.    7.39900 (92) obj. 390.115 iterations 27
Cbc0038I Pass  16: suminf.    5.26233 (51) obj. 391.206 iterations 110
Cbc0038I Pass  17: suminf.    3.44376 (46) obj. 391.048 iterations 46
Cbc0038I Pass  18: suminf.    9.17617 (84) obj. 390.681 iterations 290
Cbc0038I Pass  19: suminf.    4.11340 (64) obj. 391.176 iterations 76
Cbc0038I Pass  20: suminf.    4.21626 (37) obj. 390.558 iterations 160
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 391 iterations 60
Cbc0038I Solution found of 391
Cbc0038I Cleaned solution of 391
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I Round again with cutoff of 382.2
Cbc0038I Pass  22: suminf.   47.94334 (202) obj. 343.429 iterations 0
Cbc0038I Pass  23: suminf.   33.28291 (155) obj. 346.62 iterations 224
Cbc0038I Pass  24: suminf.   30.08698 (142) obj. 352.732 iterations 127
Cbc0038I Pass  25: suminf.   22.52564 (134) obj. 378.155 iterations 136
Cbc0038I Pass  26: suminf.   22.59354 (128) obj. 381.879 iterations 34
Cbc0038I Pass  27: suminf.   23.80257 (133) obj. 382.2 iterations 124
Cbc0038I Pass  28: suminf.   21.24945 (128) obj. 382.2 iterations 69
Cbc0038I Pass  29: suminf.   11.52944 (111) obj. 382.2 iterations 176
Cbc0038I Pass  30: suminf.   11.27802 (102) obj. 382.2 iterations 33
Cbc0038I Pass  31: suminf.   10.06128 (91) obj. 382.2 iterations 146
Cbc0038I Pass  32: suminf.    5.93950 (69) obj. 382.2 iterations 48
Cbc0038I Pass  33: suminf.    5.52258 (70) obj. 382.2 iterations 10
Cbc0038I Pass  34: suminf.    4.43920 (65) obj. 382.2 iterations 122
Cbc0038I Pass  35: suminf.    4.43940 (68) obj. 382.2 iterations 25
Cbc0038I Pass  36: suminf.    0.20000 (1) obj. 382.2 iterations 41
Cbc0038I Solution found of 382.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1395 rows 493 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 371
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1394 rows 493 columns, reduced to 1056 rows 339 columns - 134 fixed gives 156, 41 - ok now
Cbc0038I Full problem 1394 rows 493 columns, reduced to 28 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 371 to 361 (0.39 seconds)
Cbc0038I Round again with cutoff of 350.4
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  37: suminf.   45.45443 (199) obj. 332.67 iterations 44
Cbc0038I Pass  38: suminf.   34.64566 (167) obj. 344.295 iterations 260
Cbc0038I Pass  39: suminf.   35.10847 (147) obj. 346.549 iterations 66
Cbc0038I Pass  40: suminf.   31.58365 (145) obj. 344.107 iterations 48
Cbc0038I Pass  41: suminf.   24.55070 (127) obj. 340.13 iterations 90
Cbc0038I Pass  42: suminf.   25.17480 (133) obj. 340.206 iterations 66
Cbc0038I Pass  43: suminf.   17.13425 (107) obj. 327.199 iterations 152
Cbc0038I Pass  44: suminf.   15.68975 (99) obj. 326.904 iterations 112
Cbc0038I Pass  45: suminf.   11.43133 (101) obj. 343.693 iterations 162
Cbc0038I Pass  46: suminf.    9.51462 (79) obj. 350.4 iterations 66
Cbc0038I Pass  47: suminf.   12.45734 (88) obj. 350.4 iterations 231
Cbc0038I Pass  48: suminf.    8.25836 (71) obj. 350.4 iterations 135
Cbc0038I Pass  49: suminf.   10.19711 (72) obj. 350.4 iterations 259
Cbc0038I Pass  50: suminf.    9.03959 (76) obj. 350.4 iterations 101
Cbc0038I Pass  51: suminf.    9.56014 (58) obj. 350.4 iterations 261
Cbc0038I Pass  52: suminf.    7.90191 (105) obj. 350.4 iterations 335
Cbc0038I Pass  53: suminf.    8.89821 (64) obj. 350.4 iterations 146
Cbc0038I Pass  54: suminf.    6.83231 (79) obj. 350.4 iterations 106
Cbc0038I Pass  55: suminf.   12.00834 (64) obj. 350.4 iterations 165
Cbc0038I Pass  56: suminf.    7.84915 (74) obj. 350.4 iterations 218
Cbc0038I Pass  57: suminf.    7.90191 (105) obj. 350.4 iterations 73
Cbc0038I Pass  58: suminf.    9.24237 (70) obj. 350.4 iterations 115
Cbc0038I Pass  59: suminf.    6.66873 (71) obj. 350.4 iterations 178
Cbc0038I Pass  60: suminf.   10.76535 (67) obj. 350.4 iterations 157
Cbc0038I Pass  61: suminf.    7.91194 (76) obj. 350.4 iterations 109
Cbc0038I Pass  62: suminf.    7.75384 (76) obj. 350.4 iterations 5
Cbc0038I Pass  63: suminf.    9.35172 (56) obj. 350.4 iterations 214
Cbc0038I Pass  64: suminf.    8.79228 (76) obj. 350.4 iterations 121
Cbc0038I Pass  65: suminf.    7.63509 (73) obj. 350.4 iterations 15
Cbc0038I Pass  66: suminf.    7.63509 (73) obj. 350.4 iterations 2
Cbc0038I Pass  67: suminf.   10.69504 (77) obj. 350.4 iterations 96
Cbc0038I Pass  68: suminf.    7.45057 (75) obj. 350.4 iterations 43
Cbc0038I Pass  69: suminf.    7.45057 (75) obj. 350.4 iterations 0
Cbc0038I Pass  70: suminf.   10.86925 (61) obj. 350.4 iterations 154
Cbc0038I Pass  71: suminf.    9.04720 (72) obj. 350.4 iterations 225
Cbc0038I Pass  72: suminf.   11.10517 (62) obj. 350.4 iterations 164
Cbc0038I Pass  73: suminf.    9.48150 (78) obj. 350.4 iterations 159
Cbc0038I Pass  74: suminf.    9.48150 (78) obj. 350.4 iterations 10
Cbc0038I Pass  75: suminf.   11.27486 (69) obj. 350.4 iterations 253
Cbc0038I Pass  76: suminf.    9.91768 (71) obj. 350.4 iterations 69
Cbc0038I Pass  77: suminf.    9.91768 (71) obj. 350.4 iterations 0
Cbc0038I Pass  78: suminf.    8.40670 (83) obj. 350.4 iterations 165
Cbc0038I Pass  79: suminf.    8.14391 (110) obj. 350.4 iterations 42
Cbc0038I Pass  80: suminf.    9.75302 (73) obj. 350.4 iterations 118
Cbc0038I Pass  81: suminf.    9.20326 (92) obj. 350.4 iterations 125
Cbc0038I Pass  82: suminf.   10.00570 (64) obj. 350.4 iterations 254
Cbc0038I Pass  83: suminf.    7.80410 (73) obj. 350.4 iterations 167
Cbc0038I Pass  84: suminf.    9.34804 (58) obj. 350.4 iterations 159
Cbc0038I Pass  85: suminf.    7.38693 (77) obj. 350.4 iterations 169
Cbc0038I Pass  86: suminf.    7.19884 (78) obj. 350.4 iterations 12
Cbc0038I Pass  87: suminf.   10.23869 (55) obj. 350.4 iterations 169
Cbc0038I Pass  88: suminf.    8.65375 (103) obj. 350.4 iterations 186
Cbc0038I Pass  89: suminf.    8.65375 (103) obj. 350.4 iterations 0
Cbc0038I Pass  90: suminf.    8.81460 (58) obj. 350.4 iterations 158
Cbc0038I Pass  91: suminf.    8.74230 (71) obj. 350.4 iterations 109
Cbc0038I Pass  92: suminf.   11.20592 (63) obj. 350.4 iterations 111
Cbc0038I Pass  93: suminf.    8.74702 (81) obj. 350.4 iterations 110
Cbc0038I Pass  94: suminf.    7.83356 (81) obj. 350.4 iterations 97
Cbc0038I Pass  95: suminf.    9.49341 (57) obj. 350.4 iterations 162
Cbc0038I Pass  96: suminf.    7.52507 (70) obj. 350.4 iterations 83
Cbc0038I Pass  97: suminf.    8.68354 (71) obj. 350.4 iterations 117
Cbc0038I Pass  98: suminf.    7.19884 (78) obj. 350.4 iterations 83
Cbc0038I Pass  99: suminf.   10.52927 (53) obj. 350.4 iterations 178
Cbc0038I Pass 100: suminf.    8.65375 (103) obj. 350.4 iterations 279
Cbc0038I Pass 101: suminf.    8.65375 (103) obj. 350.4 iterations 1
Cbc0038I Pass 102: suminf.   10.86949 (59) obj. 350.4 iterations 180
Cbc0038I Pass 103: suminf.    7.89648 (76) obj. 350.4 iterations 132
Cbc0038I Pass 104: suminf.    7.89648 (76) obj. 350.4 iterations 3
Cbc0038I Pass 105: suminf.    9.11309 (62) obj. 350.4 iterations 66
Cbc0038I Pass 106: suminf.    7.82671 (77) obj. 350.4 iterations 70
Cbc0038I Pass 107: suminf.    7.82671 (77) obj. 350.4 iterations 0
Cbc0038I Pass 108: suminf.    9.19930 (62) obj. 350.4 iterations 105
Cbc0038I Pass 109: suminf.    6.81788 (81) obj. 350.4 iterations 86
Cbc0038I Pass 110: suminf.    6.81788 (81) obj. 350.4 iterations 1
Cbc0038I Pass 111: suminf.   10.37636 (63) obj. 350.4 iterations 107
Cbc0038I Pass 112: suminf.    9.15924 (79) obj. 350.4 iterations 102
Cbc0038I Pass 113: suminf.    9.16179 (78) obj. 350.4 iterations 12
Cbc0038I Pass 114: suminf.    7.46195 (61) obj. 350.4 iterations 34
Cbc0038I Pass 115: suminf.    7.82671 (77) obj. 350.4 iterations 38
Cbc0038I Pass 116: suminf.    9.19930 (62) obj. 350.4 iterations 105
Cbc0038I Pass 117: suminf.    6.81788 (81) obj. 350.4 iterations 65
Cbc0038I Pass 118: suminf.    6.81788 (81) obj. 350.4 iterations 3
Cbc0038I Pass 119: suminf.   13.62632 (78) obj. 350.4 iterations 158
Cbc0038I Pass 120: suminf.   10.41467 (69) obj. 350.4 iterations 99
Cbc0038I Pass 121: suminf.    9.89911 (79) obj. 350.4 iterations 119
Cbc0038I Pass 122: suminf.    7.49762 (69) obj. 350.4 iterations 60
Cbc0038I Pass 123: suminf.    7.49865 (77) obj. 350.4 iterations 20
Cbc0038I Pass 124: suminf.   10.31206 (61) obj. 350.4 iterations 305
Cbc0038I Pass 125: suminf.   10.22476 (71) obj. 350.4 iterations 110
Cbc0038I Pass 126: suminf.   10.22476 (71) obj. 350.4 iterations 4
Cbc0038I Pass 127: suminf.    7.89576 (71) obj. 350.4 iterations 67
Cbc0038I Pass 128: suminf.    7.42304 (66) obj. 350.4 iterations 46
Cbc0038I Pass 129: suminf.   11.05152 (56) obj. 350.4 iterations 170
Cbc0038I Pass 130: suminf.    9.87626 (74) obj. 350.4 iterations 119
Cbc0038I Pass 131: suminf.    9.96655 (78) obj. 350.4 iterations 100
Cbc0038I Pass 132: suminf.   10.25422 (71) obj. 350.4 iterations 29
Cbc0038I Pass 133: suminf.    9.55292 (78) obj. 350.4 iterations 18
Cbc0038I Pass 134: suminf.    8.90784 (67) obj. 350.4 iterations 92
Cbc0038I Pass 135: suminf.    7.43316 (64) obj. 350.4 iterations 80
Cbc0038I Pass 136: suminf.   27.54528 (173) obj. 350.4 iterations 376
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1394 rows 493 columns, reduced to 1172 rows 388 columns - 143 fixed gives 206, 57 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.06 seconds)
Cbc0038I After 1.06 seconds - Feasibility pump exiting with objective of 361 - took 0.95 seconds
Cbc0012I Integer solution of 361 found by feasibility pump after 0 iterations and 0 nodes (1.06 seconds)
Cbc0038I Full problem 1394 rows 493 columns, reduced to 907 rows 269 columns - 124 fixed gives 9, 4 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 311.99906 to 311.99906 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 43 row cuts average 2.0 elements, 5 column cuts (5 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 361, took 0 iterations and 0 nodes (1.23 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 311.999 to 311.999
Probing was tried 1 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                361.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             1.26
Time (Wallclock seconds):       1.27

Total time (CPU seconds):       1.26   (Wallclock seconds):       1.28

