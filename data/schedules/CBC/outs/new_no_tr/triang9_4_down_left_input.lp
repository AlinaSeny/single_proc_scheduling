Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_4_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_4_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 272.1 - 2.59 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1693 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 27 tightened bounds, 755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 442 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 184 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26765 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 984 integers unsatisfied sum - 252.047
Cbc0038I Pass   1: (10.54 seconds) suminf.  146.80194 (920) obj. 349.384 iterations 3382
Cbc0038I Pass   2: (10.85 seconds) suminf.  118.31086 (843) obj. 371.033 iterations 1155
Cbc0038I Pass   3: (11.13 seconds) suminf.  105.21400 (944) obj. 373.713 iterations 952
Cbc0038I Pass   4: (11.29 seconds) suminf.  102.90076 (981) obj. 402.212 iterations 503
Cbc0038I Pass   5: (11.34 seconds) suminf.  100.83958 (979) obj. 398.444 iterations 147
Cbc0038I Pass   6: (11.37 seconds) suminf.  100.19850 (978) obj. 397.576 iterations 65
Cbc0038I Pass   7: (11.52 seconds) suminf.   99.87061 (906) obj. 394.407 iterations 495
Cbc0038I Pass   8: (11.60 seconds) suminf.   96.67612 (903) obj. 397.222 iterations 231
Cbc0038I Pass   9: (11.66 seconds) suminf.   95.63277 (906) obj. 399.011 iterations 149
Cbc0038I Pass  10: (11.75 seconds) suminf.   99.55378 (896) obj. 402.004 iterations 283
Cbc0038I Pass  11: (11.78 seconds) suminf.   99.98790 (895) obj. 401.822 iterations 69
Cbc0038I Pass  12: (11.92 seconds) suminf.   92.55752 (922) obj. 393.847 iterations 458
Cbc0038I Pass  13: (12.03 seconds) suminf.   89.40897 (915) obj. 398.11 iterations 292
Cbc0038I Pass  14: (12.09 seconds) suminf.   87.50461 (894) obj. 397.177 iterations 160
Cbc0038I Pass  15: (12.21 seconds) suminf.   90.00204 (914) obj. 400.426 iterations 390
Cbc0038I Pass  16: (12.33 seconds) suminf.   84.55377 (883) obj. 420.321 iterations 365
Cbc0038I Pass  17: (12.42 seconds) suminf.   83.74601 (887) obj. 420.709 iterations 267
Cbc0038I Pass  18: (12.45 seconds) suminf.   83.60763 (885) obj. 420.73 iterations 75
Cbc0038I Pass  19: (12.55 seconds) suminf.   83.80256 (891) obj. 420.855 iterations 330
Cbc0038I Pass  20: (12.59 seconds) suminf.   83.12898 (902) obj. 421.028 iterations 125
Cbc0038I Pass  21: (12.61 seconds) suminf.   83.17241 (896) obj. 421.096 iterations 29
Cbc0038I Pass  22: (12.71 seconds) suminf.   84.97913 (907) obj. 421.824 iterations 286
Cbc0038I Pass  23: (12.80 seconds) suminf.   83.52583 (908) obj. 422.533 iterations 265
Cbc0038I Pass  24: (12.85 seconds) suminf.   82.68443 (910) obj. 422.057 iterations 122
Cbc0038I Pass  25: (12.86 seconds) suminf.   83.03894 (900) obj. 422.512 iterations 33
Cbc0038I Pass  26: (13.04 seconds) suminf.   85.65990 (921) obj. 441.108 iterations 661
Cbc0038I Pass  27: (13.16 seconds) suminf.   83.07109 (917) obj. 449.254 iterations 438
Cbc0038I Pass  28: (13.38 seconds) suminf.   86.16379 (891) obj. 472.837 iterations 828
Cbc0038I Pass  29: (13.56 seconds) suminf.   83.95058 (904) obj. 477.474 iterations 645
Cbc0038I Pass  30: (13.64 seconds) suminf.   82.44969 (909) obj. 479.988 iterations 224
Cbc0038I Pass  31: (13.92 seconds) suminf.   82.20547 (910) obj. 481.01 iterations 1125
Cbc0038I Pass  32: (14.09 seconds) suminf.   80.02687 (884) obj. 476.784 iterations 592
Cbc0038I Pass  33: (14.31 seconds) suminf.   85.27835 (921) obj. 479.141 iterations 770
Cbc0038I Pass  34: (14.42 seconds) suminf.   84.53338 (924) obj. 489.198 iterations 300
Cbc0038I Pass  35: (14.58 seconds) suminf.   88.52705 (917) obj. 471.51 iterations 606
Cbc0038I Pass  36: (14.66 seconds) suminf.   87.20153 (903) obj. 483.889 iterations 250
Cbc0038I Pass  37: (14.88 seconds) suminf.   88.27299 (926) obj. 491.196 iterations 915
Cbc0038I Pass  38: (15.00 seconds) suminf.   86.80153 (917) obj. 489.037 iterations 433
Cbc0038I Pass  39: (15.06 seconds) suminf.   86.33957 (932) obj. 483.993 iterations 191
Cbc0038I Pass  40: (15.34 seconds) suminf.   79.52830 (952) obj. 473.182 iterations 1000
Cbc0038I Pass  41: (15.47 seconds) suminf.   77.10168 (935) obj. 482.417 iterations 393
Cbc0038I Pass  42: (15.70 seconds) suminf.   79.34684 (921) obj. 482.439 iterations 878
Cbc0038I Pass  43: (15.82 seconds) suminf.   78.09107 (913) obj. 489.196 iterations 302
Cbc0038I Pass  44: (16.02 seconds) suminf.   80.23411 (913) obj. 485.037 iterations 684
Cbc0038I Pass  45: (16.20 seconds) suminf.   77.60365 (916) obj. 489.266 iterations 632
Cbc0038I Pass  46: (16.40 seconds) suminf.   77.70411 (920) obj. 464.947 iterations 691
Cbc0038I Pass  47: (16.56 seconds) suminf.   76.53991 (912) obj. 465.627 iterations 537
Cbc0038I Pass  48: (16.72 seconds) suminf.   77.73998 (904) obj. 473.921 iterations 461
Cbc0038I Pass  49: (16.83 seconds) suminf.   75.95050 (898) obj. 483.031 iterations 323
Cbc0038I Pass  50: (16.85 seconds) suminf.   76.38676 (900) obj. 482.588 iterations 51
Cbc0038I Pass  51: (16.99 seconds) suminf.   78.65887 (931) obj. 472.597 iterations 455
Cbc0038I Pass  52: (17.12 seconds) suminf.   77.36674 (908) obj. 476.425 iterations 407
Cbc0038I Pass  53: (17.30 seconds) suminf.   78.15019 (909) obj. 474.099 iterations 629
Cbc0038I Pass  54: (17.43 seconds) suminf.   75.64555 (898) obj. 480.565 iterations 396
Cbc0038I Pass  55: (17.60 seconds) suminf.   80.29592 (913) obj. 482.827 iterations 566
Cbc0038I Pass  56: (17.66 seconds) suminf.   79.22315 (907) obj. 489.145 iterations 174
Cbc0038I Pass  57: (17.89 seconds) suminf.   77.86762 (903) obj. 484.558 iterations 807
Cbc0038I Pass  58: (17.94 seconds) suminf.   77.10026 (904) obj. 485.566 iterations 136
Cbc0038I Pass  59: (18.14 seconds) suminf.   78.87873 (882) obj. 462.506 iterations 727
Cbc0038I Pass  60: (18.30 seconds) suminf.   76.30877 (907) obj. 467.738 iterations 595
Cbc0038I Pass  61: (18.46 seconds) suminf.   79.01373 (890) obj. 478.11 iterations 541
Cbc0038I Pass  62: (18.58 seconds) suminf.   78.96689 (885) obj. 488.328 iterations 347
Cbc0038I Pass  63: (18.77 seconds) suminf.   78.90612 (912) obj. 482.664 iterations 701
Cbc0038I Pass  64: (18.83 seconds) suminf.   78.47528 (901) obj. 488.216 iterations 171
Cbc0038I Pass  65: (18.97 seconds) suminf.   80.34271 (893) obj. 496.438 iterations 446
Cbc0038I Pass  66: (19.13 seconds) suminf.   78.11769 (904) obj. 487.462 iterations 542
Cbc0038I Pass  67: (19.19 seconds) suminf.   77.77682 (896) obj. 488.717 iterations 172
Cbc0038I Pass  68: (19.43 seconds) suminf.   77.45509 (913) obj. 460.833 iterations 862
Cbc0038I Pass  69: (19.54 seconds) suminf.   76.30877 (907) obj. 467.738 iterations 308
Cbc0038I Pass  70: (19.71 seconds) suminf.   79.72266 (907) obj. 486.214 iterations 591
Cbc0038I Pass  71: (19.90 seconds) suminf.   77.06439 (901) obj. 484.195 iterations 699
Cbc0038I Pass  72: (19.97 seconds) suminf.   77.10026 (904) obj. 485.566 iterations 203
Cbc0038I Pass  73: (20.14 seconds) suminf.   78.34067 (888) obj. 458.871 iterations 557
Cbc0038I Pass  74: (20.28 seconds) suminf.   76.30877 (907) obj. 467.738 iterations 442
Cbc0038I Pass  75: (20.41 seconds) suminf.   77.65754 (892) obj. 485.659 iterations 476
Cbc0038I Pass  76: (20.90 seconds) suminf.  114.60824 (856) obj. 522.098 iterations 2049
Cbc0038I Pass  77: (21.31 seconds) suminf.   82.25345 (869) obj. 515.522 iterations 1613
Cbc0038I Pass  78: (21.42 seconds) suminf.   82.76736 (853) obj. 515.984 iterations 348
Cbc0038I Pass  79: (21.48 seconds) suminf.   82.43277 (837) obj. 515.967 iterations 197
Cbc0038I Pass  80: (21.52 seconds) suminf.   82.46206 (838) obj. 516.471 iterations 118
Cbc0038I Pass  81: (21.73 seconds) suminf.   80.68783 (897) obj. 523.773 iterations 675
Cbc0038I Pass  82: (21.78 seconds) suminf.   80.68995 (880) obj. 522.092 iterations 152
Cbc0038I Pass  83: (22.01 seconds) suminf.   82.90758 (873) obj. 535.694 iterations 890
Cbc0038I Pass  84: (22.18 seconds) suminf.   80.04318 (878) obj. 535.091 iterations 629
Cbc0038I Pass  85: (22.24 seconds) suminf.   79.92416 (886) obj. 535.822 iterations 191
Cbc0038I Pass  86: (22.49 seconds) suminf.   77.64158 (859) obj. 533.288 iterations 986
Cbc0038I Pass  87: (22.59 seconds) suminf.   76.26632 (863) obj. 514.469 iterations 265
Cbc0038I Pass  88: (22.84 seconds) suminf.   72.97548 (889) obj. 515.06 iterations 947
Cbc0038I Pass  89: (22.95 seconds) suminf.   73.87193 (898) obj. 514.294 iterations 336
Cbc0038I Pass  90: (23.12 seconds) suminf.   74.33210 (895) obj. 517.053 iterations 624
Cbc0038I Pass  91: (23.32 seconds) suminf.   72.94982 (862) obj. 516.96 iterations 754
Cbc0038I Pass  92: (23.53 seconds) suminf.   78.63090 (872) obj. 517.518 iterations 762
Cbc0038I Pass  93: (23.71 seconds) suminf.   73.90297 (905) obj. 514.422 iterations 653
Cbc0038I Pass  94: (23.91 seconds) suminf.   77.79104 (869) obj. 519.418 iterations 717
Cbc0038I Pass  95: (24.09 seconds) suminf.   73.11262 (907) obj. 517.628 iterations 695
Cbc0038I Pass  96: (24.31 seconds) suminf.   82.17119 (863) obj. 520.222 iterations 832
Cbc0038I Pass  97: (24.47 seconds) suminf.   75.99074 (881) obj. 515.403 iterations 545
Cbc0038I Pass  98: (24.57 seconds) suminf.   74.30448 (900) obj. 515.004 iterations 307
Cbc0038I Pass  99: (24.74 seconds) suminf.   69.73612 (891) obj. 514.514 iterations 596
Cbc0038I Pass 100: (25.20 seconds) suminf.  117.18334 (905) obj. 542.937 iterations 1970
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 663 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5830 rows 1866 columns - too large
Cbc0038I Mini branch and bound did not improve solution (26.45 seconds)
Cbc0038I After 26.45 seconds - Feasibility pump exiting - took 16.85 seconds
Cbc0031I 78 added rows had average density of 10.987179
Cbc0013I At root node, 78 cuts changed objective from 273.90698 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.199 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 88 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.959 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 162 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.431 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 65 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.884 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (32.94 seconds)
Cbc0010I After 100 nodes, 39 on tree, 1e+50 best solution, best possible 300 (157.02 seconds)
Cbc0010I After 200 nodes, 51 on tree, 1e+50 best solution, best possible 300 (247.14 seconds)
Cbc0010I After 300 nodes, 47 on tree, 1e+50 best solution, best possible 300 (361.08 seconds)
Cbc0010I After 400 nodes, 44 on tree, 1e+50 best solution, best possible 300 (444.99 seconds)
Cbc0010I After 500 nodes, 51 on tree, 1e+50 best solution, best possible 300 (559.94 seconds)
Cbc0010I After 600 nodes, 55 on tree, 1e+50 best solution, best possible 300 (656.89 seconds)
Cbc0010I After 700 nodes, 56 on tree, 1e+50 best solution, best possible 300 (797.20 seconds)
Cbc0010I After 800 nodes, 46 on tree, 1e+50 best solution, best possible 300 (919.68 seconds)
Cbc0010I After 900 nodes, 38 on tree, 1e+50 best solution, best possible 300 (1031.61 seconds)
Cbc0010I After 1000 nodes, 57 on tree, 1e+50 best solution, best possible 300 (1111.76 seconds)
Cbc0010I After 1100 nodes, 49 on tree, 1e+50 best solution, best possible 300 (1248.66 seconds)
Cbc0010I After 1200 nodes, 38 on tree, 1e+50 best solution, best possible 300 (1364.57 seconds)
Cbc0010I After 1300 nodes, 44 on tree, 1e+50 best solution, best possible 300 (1444.86 seconds)
Cbc0010I After 1400 nodes, 54 on tree, 1e+50 best solution, best possible 300 (1553.19 seconds)
Cbc0010I After 1500 nodes, 48 on tree, 1e+50 best solution, best possible 300 (1628.44 seconds)
Cbc0010I After 1600 nodes, 51 on tree, 1e+50 best solution, best possible 300 (1737.49 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 300), took 4479935 iterations and 1652 nodes (1793.63 seconds)
Cbc0032I Strong branching done 17668 times (1441836 iterations), fathomed 208 nodes and fixed 2274 variables
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost
Cuts at root node changed objective from 273.907 to 300
Probing was tried 361 times and created 58465 cuts of which 0 were active after adding rounds of cuts (2.519 seconds)
Gomory was tried 274 times and created 745 cuts of which 0 were active after adding rounds of cuts (3.141 seconds)
Knapsack was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 274 times and created 8592 cuts of which 0 were active after adding rounds of cuts (1.307 seconds)
ZeroHalf was tried 274 times and created 691 cuts of which 0 were active after adding rounds of cuts (14.753 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    300.000
Enumerated nodes:               1652
Total iterations:               4479935
Time (CPU seconds):             1793.63
Time (Wallclock seconds):       1799.31

Total time (CPU seconds):       1793.65   (Wallclock seconds):       1799.34

