Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_10_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_10_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 17408 - 0.00 seconds
Cgl0002I 18 variables fixed
Cgl0003I 0 fixed, 2 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 203 rows, 76 columns (76 integer (65 of which binary)) and 654 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 76 objects (76 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 16.7432
Cbc0038I Pass   1: suminf.   10.17582 (34) obj. 19071.7 iterations 48
Cbc0038I Pass   2: suminf.    3.59651 (19) obj. 20518.1 iterations 32
Cbc0038I Pass   3: suminf.    3.86722 (19) obj. 20429.6 iterations 7
Cbc0038I Pass   4: suminf.    3.46212 (14) obj. 20410.2 iterations 39
Cbc0038I Pass   5: suminf.    1.54545 (10) obj. 20666.2 iterations 4
Cbc0038I Pass   6: suminf.    1.68750 (11) obj. 20462.5 iterations 20
Cbc0038I Pass   7: suminf.    4.32648 (29) obj. 20161.7 iterations 33
Cbc0038I Pass   8: suminf.    1.68750 (11) obj. 20462.5 iterations 18
Cbc0038I Pass   9: suminf.    1.54545 (10) obj. 20666.2 iterations 17
Cbc0038I Pass  10: suminf.    5.85909 (25) obj. 22946.9 iterations 21
Cbc0038I Pass  11: suminf.    3.95882 (22) obj. 23495.2 iterations 14
Cbc0038I Pass  12: suminf.    1.13115 (9) obj. 24441.7 iterations 39
Cbc0038I Pass  13: suminf.    0.62500 (5) obj. 24448 iterations 6
Cbc0038I Pass  14: suminf.    0.80000 (8) obj. 23552 iterations 18
Cbc0038I Pass  15: suminf.    1.13115 (9) obj. 24441.7 iterations 13
Cbc0038I Pass  16: suminf.   12.12331 (44) obj. 23386.5 iterations 52
Cbc0038I Pass  17: suminf.    6.54019 (34) obj. 25600 iterations 35
Cbc0038I Pass  18: suminf.    5.98908 (32) obj. 25130.1 iterations 10
Cbc0038I Pass  19: suminf.    6.04094 (31) obj. 25143.2 iterations 4
Cbc0038I Pass  20: suminf.    7.49154 (34) obj. 26624 iterations 47
Cbc0038I Pass  21: suminf.    5.73438 (23) obj. 26624 iterations 10
Cbc0038I Pass  22: suminf.    2.95930 (23) obj. 26981.2 iterations 33
Cbc0038I Pass  23: suminf.    1.81057 (12) obj. 26894.7 iterations 9
Cbc0038I Pass  24: suminf.    1.35961 (12) obj. 29272.3 iterations 22
Cbc0038I Pass  25: suminf.   11.47305 (47) obj. 25346.6 iterations 53
Cbc0038I Pass  26: suminf.    7.61010 (33) obj. 25267.7 iterations 28
Cbc0038I Pass  27: suminf.    5.02806 (32) obj. 26601.2 iterations 10
Cbc0038I Pass  28: suminf.    4.43861 (29) obj. 28641.2 iterations 10
Cbc0038I Pass  29: suminf.    0.00000 (0) obj. 30720 iterations 43
Cbc0038I Solution found of 30720
Cbc0038I Cleaned solution of 30720
Cbc0038I Rounding solution of 20462 is better than previous of 30720

Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 201 rows 75 columns - 5 fixed gives 181, 68 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 20155.7
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  30: suminf.    8.76718 (33) obj. 20155.7 iterations 38
Cbc0038I Pass  31: suminf.    2.55945 (12) obj. 20155.7 iterations 36
Cbc0038I Pass  32: suminf.    2.23324 (15) obj. 20155.7 iterations 10
Cbc0038I Pass  33: suminf.    5.10348 (38) obj. 20155.7 iterations 39
Cbc0038I Pass  34: suminf.   10.28374 (37) obj. 20155.7 iterations 47
Cbc0038I Pass  35: suminf.    8.26745 (34) obj. 20155.7 iterations 20
Cbc0038I Pass  36: suminf.    7.36269 (35) obj. 20155.7 iterations 7
Cbc0038I Pass  37: suminf.    8.24678 (30) obj. 20155.7 iterations 62
Cbc0038I Pass  38: suminf.    4.67982 (31) obj. 20155.7 iterations 23
Cbc0038I Pass  39: suminf.    4.34063 (27) obj. 20155.7 iterations 9
Cbc0038I Pass  40: suminf.   10.30817 (42) obj. 20155.7 iterations 48
Cbc0038I Pass  41: suminf.    7.22295 (36) obj. 20155.7 iterations 24
Cbc0038I Pass  42: suminf.    0.29991 (1) obj. 20155.7 iterations 29
Cbc0038I Solution found of 20155.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 204 rows 76 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 18432
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 191 rows 70 columns - 7 fixed gives 151, 56 - still too large
Cbc0038I Full problem 203 rows 76 columns, reduced to 6 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 18226.4
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  43: suminf.    8.31979 (47) obj. 18226.4 iterations 6
Cbc0038I Pass  44: suminf.    2.47982 (17) obj. 18226.4 iterations 40
Cbc0038I Pass  45: suminf.    5.81784 (39) obj. 18226.4 iterations 36
Cbc0038I Pass  46: suminf.    5.81784 (39) obj. 18226.4 iterations 6
Cbc0038I Pass  47: suminf.   10.59999 (31) obj. 18226.4 iterations 40
Cbc0038I Pass  48: suminf.    0.80164 (9) obj. 18226.4 iterations 34
Cbc0038I Pass  49: suminf.    4.40008 (9) obj. 18226.4 iterations 26
Cbc0038I Pass  50: suminf.    0.80164 (9) obj. 18226.4 iterations 13
Cbc0038I Pass  51: suminf.    1.01916 (14) obj. 18226.4 iterations 32
Cbc0038I Pass  52: suminf.    0.86857 (9) obj. 18226.4 iterations 11
Cbc0038I Pass  53: suminf.    4.40008 (9) obj. 18226.4 iterations 12
Cbc0038I Pass  54: suminf.    1.75349 (20) obj. 18226.4 iterations 29
Cbc0038I Pass  55: suminf.    1.39489 (45) obj. 18226.4 iterations 23
Cbc0038I Pass  56: suminf.    4.72018 (27) obj. 18226.4 iterations 33
Cbc0038I Pass  57: suminf.    4.54683 (31) obj. 18226.4 iterations 10
Cbc0038I Pass  58: suminf.    0.82395 (12) obj. 18226.4 iterations 22
Cbc0038I Pass  59: suminf.    0.82395 (12) obj. 18226.4 iterations 14
Cbc0038I Pass  60: suminf.    4.40008 (9) obj. 18226.4 iterations 38
Cbc0038I Pass  61: suminf.    0.80164 (9) obj. 18226.4 iterations 19
Cbc0038I Pass  62: suminf.    0.80164 (9) obj. 18226.4 iterations 22
Cbc0038I Pass  63: suminf.    3.19431 (32) obj. 18226.4 iterations 23
Cbc0038I Pass  64: suminf.    0.80164 (9) obj. 18226.4 iterations 18
Cbc0038I Pass  65: suminf.    1.37889 (29) obj. 18226.4 iterations 21
Cbc0038I Pass  66: suminf.    0.95223 (12) obj. 18226.4 iterations 22
Cbc0038I Pass  67: suminf.    4.40008 (9) obj. 18226.4 iterations 36
Cbc0038I Pass  68: suminf.    0.80164 (9) obj. 18226.4 iterations 13
Cbc0038I Pass  69: suminf.   10.41437 (39) obj. 18226.4 iterations 35
Cbc0038I Pass  70: suminf.    0.80164 (9) obj. 18226.4 iterations 37
Cbc0038I Pass  71: suminf.    0.80164 (9) obj. 18226.4 iterations 6
Cbc0038I Pass  72: suminf.    7.81370 (50) obj. 18226.4 iterations 41
Cbc0038I Pass  73: suminf.    0.95223 (12) obj. 18226.4 iterations 24
Cbc0038I Pass  74: suminf.    0.95223 (12) obj. 18226.4 iterations 0
Cbc0038I Pass  75: suminf.    4.40008 (9) obj. 18226.4 iterations 37
Cbc0038I Pass  76: suminf.    0.80164 (9) obj. 18226.4 iterations 10
Cbc0038I Pass  77: suminf.    0.80164 (9) obj. 18226.4 iterations 16
Cbc0038I Pass  78: suminf.    8.07833 (37) obj. 18226.4 iterations 32
Cbc0038I Pass  79: suminf.    0.82395 (12) obj. 18226.4 iterations 60
Cbc0038I Pass  80: suminf.    1.06247 (44) obj. 18226.4 iterations 27
Cbc0038I Pass  81: suminf.    0.82395 (12) obj. 18226.4 iterations 24
Cbc0038I Pass  82: suminf.    4.40008 (9) obj. 18226.4 iterations 29
Cbc0038I Pass  83: suminf.    5.36878 (26) obj. 18226.4 iterations 32
Cbc0038I Pass  84: suminf.    3.90408 (21) obj. 18226.4 iterations 30
Cbc0038I Pass  85: suminf.    0.86857 (9) obj. 18226.4 iterations 21
Cbc0038I Pass  86: suminf.    4.40008 (9) obj. 18226.4 iterations 19
Cbc0038I Pass  87: suminf.    0.80164 (9) obj. 18226.4 iterations 9
Cbc0038I Pass  88: suminf.    0.80164 (9) obj. 18226.4 iterations 34
Cbc0038I Pass  89: suminf.    4.40008 (9) obj. 18226.4 iterations 26
Cbc0038I Pass  90: suminf.    0.80164 (9) obj. 18226.4 iterations 19
Cbc0038I Pass  91: suminf.    7.62495 (37) obj. 18226.4 iterations 43
Cbc0038I Pass  92: suminf.    7.03917 (23) obj. 18226.4 iterations 30
Cbc0038I Pass  93: suminf.    4.51119 (12) obj. 18226.4 iterations 52
Cbc0038I Pass  94: suminf.    0.82395 (12) obj. 18226.4 iterations 17
Cbc0038I Pass  95: suminf.    0.82395 (12) obj. 18226.4 iterations 13
Cbc0038I Pass  96: suminf.    4.40008 (9) obj. 18226.4 iterations 24
Cbc0038I Pass  97: suminf.    0.93550 (9) obj. 18226.4 iterations 13
Cbc0038I Pass  98: suminf.    0.86857 (9) obj. 18226.4 iterations 15
Cbc0038I Pass  99: suminf.    4.40008 (9) obj. 18226.4 iterations 12
Cbc0038I Pass 100: suminf.    0.80164 (9) obj. 18226.4 iterations 7
Cbc0038I Pass 101: suminf.    0.80164 (9) obj. 18226.4 iterations 11
Cbc0038I Pass 102: suminf.    4.40008 (9) obj. 18226.4 iterations 26
Cbc0038I Pass 103: suminf.    9.94698 (44) obj. 18226.4 iterations 49
Cbc0038I Pass 104: suminf.    0.80164 (9) obj. 18226.4 iterations 38
Cbc0038I Pass 105: suminf.    1.40564 (33) obj. 18226.4 iterations 29
Cbc0038I Pass 106: suminf.    6.53555 (41) obj. 18226.4 iterations 37
Cbc0038I Pass 107: suminf.    4.36686 (16) obj. 18226.4 iterations 25
Cbc0038I Pass 108: suminf.    0.80164 (9) obj. 18226.4 iterations 37
Cbc0038I Pass 109: suminf.    0.80164 (9) obj. 18226.4 iterations 0
Cbc0038I Pass 110: suminf.    4.40008 (9) obj. 18226.4 iterations 33
Cbc0038I Pass 111: suminf.    0.86857 (9) obj. 18226.4 iterations 19
Cbc0038I Pass 112: suminf.    0.86857 (9) obj. 18226.4 iterations 17
Cbc0038I Pass 113: suminf.    4.40008 (9) obj. 18226.4 iterations 12
Cbc0038I Pass 114: suminf.    0.80164 (9) obj. 18226.4 iterations 4
Cbc0038I Pass 115: suminf.    0.80164 (9) obj. 18226.4 iterations 17
Cbc0038I Pass 116: suminf.    4.40008 (9) obj. 18226.4 iterations 20
Cbc0038I Pass 117: suminf.    4.40008 (9) obj. 18226.4 iterations 4
Cbc0038I Pass 118: suminf.    7.14914 (34) obj. 18226.4 iterations 55
Cbc0038I Pass 119: suminf.    2.77158 (20) obj. 18226.4 iterations 23
Cbc0038I Pass 120: suminf.    4.40008 (9) obj. 18226.4 iterations 30
Cbc0038I Pass 121: suminf.    0.80164 (9) obj. 18226.4 iterations 13
Cbc0038I Pass 122: suminf.    0.80164 (9) obj. 18226.4 iterations 16
Cbc0038I Pass 123: suminf.    4.40008 (9) obj. 18226.4 iterations 31
Cbc0038I Pass 124: suminf.    8.03050 (46) obj. 18226.4 iterations 61
Cbc0038I Pass 125: suminf.    4.62366 (25) obj. 18226.4 iterations 33
Cbc0038I Pass 126: suminf.    3.64660 (20) obj. 18226.4 iterations 10
Cbc0038I Pass 127: suminf.    2.06905 (21) obj. 18226.4 iterations 46
Cbc0038I Pass 128: suminf.    1.61117 (17) obj. 18226.4 iterations 8
Cbc0038I Pass 129: suminf.    4.71042 (25) obj. 18226.4 iterations 30
Cbc0038I Pass 130: suminf.    4.36590 (19) obj. 18226.4 iterations 35
Cbc0038I Pass 131: suminf.    2.00906 (16) obj. 18226.4 iterations 4
Cbc0038I Pass 132: suminf.    1.90389 (22) obj. 18226.4 iterations 8
Cbc0038I Pass 133: suminf.    6.85744 (28) obj. 18226.4 iterations 51
Cbc0038I Pass 134: suminf.    3.34345 (19) obj. 18226.4 iterations 32
Cbc0038I Pass 135: suminf.    3.30814 (19) obj. 18226.4 iterations 5
Cbc0038I Pass 136: suminf.    5.08484 (20) obj. 18226.4 iterations 37
Cbc0038I Pass 137: suminf.    4.75094 (19) obj. 18226.4 iterations 12
Cbc0038I Pass 138: suminf.    4.17650 (17) obj. 18226.4 iterations 36
Cbc0038I Pass 139: suminf.    3.67340 (17) obj. 18226.4 iterations 28
Cbc0038I Pass 140: suminf.    3.36790 (16) obj. 18226.4 iterations 32
Cbc0038I Pass 141: suminf.    3.36790 (16) obj. 18226.4 iterations 4
Cbc0038I Pass 142: suminf.    4.23286 (16) obj. 18226.4 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 203 rows 76 columns, reduced to 194 rows 72 columns - 7 fixed gives 150, 56 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of 18432 - took 0.13 seconds
Cbc0012I Integer solution of 18432 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 203 rows 76 columns, reduced to 164 rows 59 columns - 7 fixed gives 125, 45 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 17408 to 17408 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 18432, took 0 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Cuts at root node changed objective from 17408 to 17408
Probing was tried 1 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                18432.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.15
Time (Wallclock seconds):       0.15

Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

