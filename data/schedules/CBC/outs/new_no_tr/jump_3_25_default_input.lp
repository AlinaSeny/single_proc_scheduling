Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_25_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_25_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 27648 - 0.07 seconds
Cgl0002I 61 variables fixed
Cgl0003I 0 fixed, 3 tightened bounds, 264 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 1808 rows, 620 columns (620 integer (594 of which binary)) and 6012 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 620 objects (620 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 347 integers unsatisfied sum - 130.855
Cbc0038I Pass   1: suminf.   47.17400 (200) obj. 50928.7 iterations 811
Cbc0038I Pass   2: suminf.   28.76732 (163) obj. 54272 iterations 376
Cbc0038I Pass   3: suminf.   21.53010 (146) obj. 53296.8 iterations 274
Cbc0038I Pass   4: suminf.   19.80624 (150) obj. 54209.2 iterations 141
Cbc0038I Pass   5: suminf.   19.03662 (151) obj. 54079.7 iterations 58
Cbc0038I Pass   6: suminf.   18.65781 (147) obj. 53842.1 iterations 68
Cbc0038I Pass   7: suminf.   13.44606 (94) obj. 55287.4 iterations 180
Cbc0038I Pass   8: suminf.   10.52016 (97) obj. 55282.4 iterations 69
Cbc0038I Pass   9: suminf.    9.81413 (91) obj. 55284.4 iterations 21
Cbc0038I Pass  10: suminf.    1.43033 (40) obj. 55296 iterations 110
Cbc0038I Pass  11: suminf.    1.60287 (15) obj. 55296 iterations 42
Cbc0038I Pass  12: suminf.    0.95544 (11) obj. 55296 iterations 36
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 55296 iterations 48
Cbc0038I Solution found of 55296
Cbc0038I Cleaned solution of 55296
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.38 seconds)
Cbc0038I Round again with cutoff of 52530.3
Cbc0038I Pass  14: suminf.   47.17400 (200) obj. 50928.7 iterations 0
Cbc0038I Pass  15: suminf.   28.48622 (171) obj. 52530.3 iterations 235
Cbc0038I Pass  16: suminf.   22.73850 (142) obj. 52530.3 iterations 290
Cbc0038I Pass  17: suminf.   19.99954 (138) obj. 52530.3 iterations 85
Cbc0038I Pass  18: suminf.   20.01687 (141) obj. 52530.3 iterations 87
Cbc0038I Pass  19: suminf.   14.33932 (124) obj. 52530.3 iterations 180
Cbc0038I Pass  20: suminf.   11.90570 (120) obj. 52530.3 iterations 61
Cbc0038I Pass  21: suminf.    7.06936 (84) obj. 52530.3 iterations 304
Cbc0038I Pass  22: suminf.    6.44990 (92) obj. 52530.3 iterations 114
Cbc0038I Pass  23: suminf.    5.93578 (72) obj. 52530.3 iterations 108
Cbc0038I Pass  24: suminf.    5.04796 (69) obj. 52530.3 iterations 1
Cbc0038I Pass  25: suminf.    6.12870 (37) obj. 52530.3 iterations 406
Cbc0038I Pass  26: suminf.    3.94665 (32) obj. 52530.3 iterations 74
Cbc0038I Pass  27: suminf.    3.13892 (27) obj. 52530.3 iterations 127
Cbc0038I Pass  28: suminf.    2.48265 (47) obj. 52530.3 iterations 131
Cbc0038I Pass  29: suminf.   11.08166 (72) obj. 52530.3 iterations 197
Cbc0038I Pass  30: suminf.    9.83580 (58) obj. 52530.3 iterations 122
Cbc0038I Pass  31: suminf.    9.86496 (60) obj. 52530.3 iterations 234
Cbc0038I Pass  32: suminf.    7.45495 (47) obj. 52530.3 iterations 113
Cbc0038I Pass  33: suminf.    7.36016 (48) obj. 52530.3 iterations 12
Cbc0038I Pass  34: suminf.    3.79617 (32) obj. 52530.3 iterations 173
Cbc0038I Pass  35: suminf.    3.72042 (32) obj. 52400.7 iterations 16
Cbc0038I Pass  36: suminf.    1.21486 (14) obj. 52530.3 iterations 80
Cbc0038I Pass  37: suminf.    1.73516 (27) obj. 52530.3 iterations 490
Cbc0038I Pass  38: suminf.    7.00232 (47) obj. 52530.3 iterations 188
Cbc0038I Pass  39: suminf.    4.16021 (46) obj. 52530.3 iterations 21
Cbc0038I Pass  40: suminf.    4.90170 (21) obj. 52530.3 iterations 110
Cbc0038I Pass  41: suminf.    2.78593 (11) obj. 52530.3 iterations 152
Cbc0038I Pass  42: suminf.    2.04400 (16) obj. 52530.3 iterations 97
Cbc0038I Pass  43: suminf.    2.30726 (18) obj. 52530.3 iterations 62
Cbc0038I Pass  44: suminf.    3.64664 (17) obj. 52530.3 iterations 139
Cbc0038I Pass  45: suminf.    2.83717 (17) obj. 52530.3 iterations 41
Cbc0038I Pass  46: suminf.    2.53531 (10) obj. 52224 iterations 154
Cbc0038I Pass  47: suminf.    2.24792 (11) obj. 52224 iterations 36
Cbc0038I Pass  48: suminf.    2.67680 (15) obj. 52530.3 iterations 558
Cbc0038I Pass  49: suminf.    1.76249 (23) obj. 52530.3 iterations 235
Cbc0038I Pass  50: suminf.    1.11732 (13) obj. 52530.3 iterations 64
Cbc0038I Pass  51: suminf.    2.32372 (19) obj. 52530.3 iterations 86
Cbc0038I Pass  52: suminf.    5.36377 (29) obj. 52530.3 iterations 337
Cbc0038I Pass  53: suminf.    5.10745 (30) obj. 52530.3 iterations 59
Cbc0038I Pass  54: suminf.    5.61191 (30) obj. 52530.3 iterations 315
Cbc0038I Pass  55: suminf.    4.76862 (29) obj. 52530.3 iterations 53
Cbc0038I Pass  56: suminf.    4.39889 (27) obj. 52530.3 iterations 38
Cbc0038I Pass  57: suminf.    3.65704 (25) obj. 52530.3 iterations 116
Cbc0038I Pass  58: suminf.    3.41882 (29) obj. 52530.3 iterations 69
Cbc0038I Pass  59: suminf.    3.20382 (22) obj. 52530.3 iterations 171
Cbc0038I Pass  60: suminf.    3.20305 (21) obj. 52530.3 iterations 30
Cbc0038I Pass  61: suminf.    3.00507 (26) obj. 52530.3 iterations 83
Cbc0038I Pass  62: suminf.    2.85231 (28) obj. 52530.3 iterations 13
Cbc0038I Pass  63: suminf.    4.04857 (25) obj. 52530.3 iterations 258
Cbc0038I Pass  64: suminf.    3.65473 (24) obj. 52530.3 iterations 66
Cbc0038I Pass  65: suminf.    3.02716 (23) obj. 52530.3 iterations 155
Cbc0038I Pass  66: suminf.    2.98311 (23) obj. 52530.3 iterations 18
Cbc0038I Pass  67: suminf.    3.37651 (23) obj. 52530.3 iterations 149
Cbc0038I Pass  68: suminf.    3.20305 (21) obj. 52530.3 iterations 34
Cbc0038I Pass  69: suminf.    3.22560 (25) obj. 52530.3 iterations 105
Cbc0038I Pass  70: suminf.    3.18599 (25) obj. 52530.3 iterations 18
Cbc0038I Pass  71: suminf.    4.24813 (28) obj. 52293.6 iterations 318
Cbc0038I Pass  72: suminf.    5.63208 (23) obj. 52530.3 iterations 128
Cbc0038I Pass  73: suminf.    3.73938 (24) obj. 52530.3 iterations 263
Cbc0038I Pass  74: suminf.    4.28923 (23) obj. 52530.3 iterations 50
Cbc0038I Pass  75: suminf.    2.46930 (9) obj. 52530.3 iterations 169
Cbc0038I Pass  76: suminf.    0.30009 (1) obj. 52530.3 iterations 33
Cbc0038I Solution found of 52530.3
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1809 rows 620 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 51200
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1463 rows 448 columns - 199 fixed gives 442, 101 - ok now
Cbc0038I Full problem 1808 rows 620 columns, reduced to 78 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (1.24 seconds)
Cbc0038I Round again with cutoff of 46488.8
Cbc0038I Pass  77: suminf.   47.50338 (220) obj. 46488 iterations 55
Cbc0038I Pass  78: suminf.   27.86690 (173) obj. 46488.8 iterations 348
Cbc0038I Pass  79: suminf.   27.12714 (171) obj. 46488.8 iterations 150
Cbc0038I Pass  80: suminf.   25.09566 (174) obj. 46488.8 iterations 69
Cbc0038I Pass  81: suminf.   24.89122 (170) obj. 46488.8 iterations 185
Cbc0038I Pass  82: suminf.   23.13693 (170) obj. 46488.8 iterations 67
Cbc0038I Pass  83: suminf.   22.36104 (170) obj. 46488.8 iterations 56
Cbc0038I Pass  84: suminf.   18.53632 (146) obj. 46488.8 iterations 218
Cbc0038I Pass  85: suminf.   18.17835 (138) obj. 46488.8 iterations 23
Cbc0038I Pass  86: suminf.   14.17594 (106) obj. 46488.8 iterations 246
Cbc0038I Pass  87: suminf.   12.97671 (104) obj. 46488.8 iterations 80
Cbc0038I Pass  88: suminf.   12.36690 (100) obj. 46488.8 iterations 146
Cbc0038I Pass  89: suminf.   10.10504 (111) obj. 46488.8 iterations 256
Cbc0038I Pass  90: suminf.    9.78601 (111) obj. 46488.8 iterations 11
Cbc0038I Pass  91: suminf.    8.86549 (112) obj. 46488.8 iterations 234
Cbc0038I Pass  92: suminf.    7.00163 (115) obj. 46488.8 iterations 66
Cbc0038I Pass  93: suminf.    8.04543 (61) obj. 46488.8 iterations 263
Cbc0038I Pass  94: suminf.    7.42033 (63) obj. 46488.8 iterations 79
Cbc0038I Pass  95: suminf.   10.25562 (63) obj. 46488.8 iterations 263
Cbc0038I Pass  96: suminf.    7.09090 (56) obj. 46488.8 iterations 109
Cbc0038I Pass  97: suminf.    6.53031 (39) obj. 46488.8 iterations 127
Cbc0038I Pass  98: suminf.    3.85654 (31) obj. 46488.8 iterations 71
Cbc0038I Pass  99: suminf.    6.75250 (33) obj. 46488.8 iterations 103
Cbc0038I Pass 100: suminf.    4.22923 (32) obj. 46488.8 iterations 87
Cbc0038I Pass 101: suminf.    9.40111 (48) obj. 46488.8 iterations 191
Cbc0038I Pass 102: suminf.    8.31075 (51) obj. 46488.8 iterations 145
Cbc0038I Pass 103: suminf.    7.15475 (52) obj. 46488.8 iterations 73
Cbc0038I Pass 104: suminf.   10.05454 (60) obj. 46488.8 iterations 204
Cbc0038I Pass 105: suminf.    8.66611 (57) obj. 46488.8 iterations 66
Cbc0038I Pass 106: suminf.    7.24317 (57) obj. 46488.8 iterations 325
Cbc0038I Pass 107: suminf.    6.58747 (58) obj. 46488.8 iterations 117
Cbc0038I Pass 108: suminf.    9.23927 (66) obj. 46488.8 iterations 252
Cbc0038I Pass 109: suminf.    7.99672 (81) obj. 46488.8 iterations 134
Cbc0038I Pass 110: suminf.    6.41992 (41) obj. 46488.8 iterations 212
Cbc0038I Pass 111: suminf.    5.38044 (32) obj. 46488.8 iterations 24
Cbc0038I Pass 112: suminf.    4.96343 (40) obj. 46488.8 iterations 233
Cbc0038I Pass 113: suminf.    2.63428 (42) obj. 46488.8 iterations 215
Cbc0038I Pass 114: suminf.    4.87792 (49) obj. 46488.8 iterations 148
Cbc0038I Pass 115: suminf.    3.54750 (44) obj. 46488.8 iterations 59
Cbc0038I Pass 116: suminf.    3.54750 (44) obj. 46488.8 iterations 2
Cbc0038I Pass 117: suminf.    8.52212 (64) obj. 46488.8 iterations 513
Cbc0038I Pass 118: suminf.    5.24057 (43) obj. 46488.8 iterations 186
Cbc0038I Pass 119: suminf.    4.74728 (54) obj. 46488.8 iterations 163
Cbc0038I Pass 120: suminf.    9.65084 (68) obj. 46488.8 iterations 372
Cbc0038I Pass 121: suminf.    6.05945 (67) obj. 46488.8 iterations 163
Cbc0038I Pass 122: suminf.    6.05945 (67) obj. 46488.8 iterations 13
Cbc0038I Pass 123: suminf.   10.35311 (77) obj. 46488.8 iterations 185
Cbc0038I Pass 124: suminf.    8.03119 (64) obj. 46488.8 iterations 106
Cbc0038I Pass 125: suminf.    4.15541 (44) obj. 46488.8 iterations 143
Cbc0038I Pass 126: suminf.    4.03344 (42) obj. 46488.8 iterations 31
Cbc0038I Pass 127: suminf.   11.21890 (70) obj. 46488.8 iterations 254
Cbc0038I Pass 128: suminf.    8.11272 (62) obj. 46488.8 iterations 182
Cbc0038I Pass 129: suminf.   11.08807 (63) obj. 46488.8 iterations 272
Cbc0038I Pass 130: suminf.    9.99356 (61) obj. 46488.8 iterations 105
Cbc0038I Pass 131: suminf.    6.04730 (32) obj. 46488.8 iterations 146
Cbc0038I Pass 132: suminf.    4.82305 (53) obj. 46488.8 iterations 128
Cbc0038I Pass 133: suminf.    9.81998 (79) obj. 46488.8 iterations 559
Cbc0038I Pass 134: suminf.    3.86304 (46) obj. 46488.8 iterations 505
Cbc0038I Pass 135: suminf.    3.50785 (38) obj. 46488.8 iterations 127
Cbc0038I Pass 136: suminf.    9.01829 (53) obj. 46488.8 iterations 378
Cbc0038I Pass 137: suminf.    7.20912 (39) obj. 46488.8 iterations 289
Cbc0038I Pass 138: suminf.    5.92336 (40) obj. 46488.8 iterations 294
Cbc0038I Pass 139: suminf.    5.01987 (40) obj. 46488.8 iterations 349
Cbc0038I Pass 140: suminf.   10.98064 (65) obj. 46488.8 iterations 323
Cbc0038I Pass 141: suminf.    6.13945 (70) obj. 46488.8 iterations 202
Cbc0038I Pass 142: suminf.   10.59590 (69) obj. 46488.8 iterations 387
Cbc0038I Pass 143: suminf.    9.29778 (50) obj. 46488.8 iterations 91
Cbc0038I Pass 144: suminf.    8.97041 (63) obj. 46488.8 iterations 114
Cbc0038I Pass 145: suminf.    9.00574 (69) obj. 46488.8 iterations 242
Cbc0038I Pass 146: suminf.    7.88949 (69) obj. 46488.8 iterations 71
Cbc0038I Pass 147: suminf.    7.73469 (70) obj. 46488.8 iterations 206
Cbc0038I Pass 148: suminf.    7.24172 (68) obj. 46488.8 iterations 72
Cbc0038I Pass 149: suminf.    4.82364 (36) obj. 46488.8 iterations 259
Cbc0038I Pass 150: suminf.    3.32851 (38) obj. 46488.8 iterations 250
Cbc0038I Pass 151: suminf.   11.27523 (84) obj. 46488.8 iterations 384
Cbc0038I Pass 152: suminf.   10.12870 (51) obj. 46488.8 iterations 205
Cbc0038I Pass 153: suminf.    9.97211 (52) obj. 46488.8 iterations 169
Cbc0038I Pass 154: suminf.    8.80508 (50) obj. 46488.8 iterations 483
Cbc0038I Pass 155: suminf.    7.82830 (48) obj. 46488.8 iterations 17
Cbc0038I Pass 156: suminf.    8.92364 (79) obj. 46488.8 iterations 305
Cbc0038I Pass 157: suminf.    3.71290 (45) obj. 46488.8 iterations 365
Cbc0038I Pass 158: suminf.    7.02005 (65) obj. 46488.8 iterations 361
Cbc0038I Pass 159: suminf.    5.67443 (57) obj. 46488.8 iterations 165
Cbc0038I Pass 160: suminf.    4.62402 (60) obj. 46488.8 iterations 457
Cbc0038I Pass 161: suminf.    4.22051 (67) obj. 46488.8 iterations 50
Cbc0038I Pass 162: suminf.   12.30867 (88) obj. 46488.8 iterations 321
Cbc0038I Pass 163: suminf.   12.00864 (84) obj. 46488.8 iterations 18
Cbc0038I Pass 164: suminf.   15.56249 (97) obj. 46488.8 iterations 176
Cbc0038I Pass 165: suminf.   14.81828 (90) obj. 46488.8 iterations 120
Cbc0038I Pass 166: suminf.   10.14450 (84) obj. 46488.8 iterations 153
Cbc0038I Pass 167: suminf.   10.08028 (84) obj. 46488.8 iterations 6
Cbc0038I Pass 168: suminf.   16.41747 (102) obj. 46488.8 iterations 349
Cbc0038I Pass 169: suminf.   13.55508 (106) obj. 46488.8 iterations 82
Cbc0038I Pass 170: suminf.   13.51196 (106) obj. 46488.8 iterations 6
Cbc0038I Pass 171: suminf.   14.29564 (100) obj. 46488.8 iterations 233
Cbc0038I Pass 172: suminf.   13.82261 (113) obj. 46488.8 iterations 60
Cbc0038I Pass 173: suminf.   11.74440 (93) obj. 46488.8 iterations 33
Cbc0038I Pass 174: suminf.   11.13991 (95) obj. 46488.8 iterations 34
Cbc0038I Pass 175: suminf.   11.14282 (105) obj. 46488.8 iterations 90
Cbc0038I Pass 176: suminf.   53.75082 (229) obj. 46488.8 iterations 908
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1612 rows 523 columns - 200 fixed gives 635, 163 - ok now
Cbc0038I Full problem 1808 rows 620 columns, reduced to 91 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (2.83 seconds)
Cbc0038I After 2.83 seconds - Feasibility pump exiting with objective of 51200 - took 2.68 seconds
Cbc0012I Integer solution of 51200 found by feasibility pump after 0 iterations and 0 nodes (2.83 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1316 rows 376 columns - 197 fixed gives 100, 24 - ok now
Cbc0031I 70 added rows had average density of 119.55714
Cbc0013I At root node, 70 cuts changed objective from 27648 to 27683.507 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 258 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.177 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 952 row cuts average 560.0 elements, 0 column cuts (0 active)  in 1.540 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 305 row cuts average 88.1 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 51200 best solution, best possible 27684 (9.64 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1409 rows 424 columns - 197 fixed gives 219, 47 - ok now
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1317 rows 383 columns - 190 fixed gives 87, 19 - ok now
Cbc0010I After 100 nodes, 3 on tree, 51200 best solution, best possible 27700 (25.06 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1384 rows 412 columns - 196 fixed gives 152, 31 - ok now
Cbc0038I Full problem 1808 rows 620 columns, reduced to 0 rows 0 columns
Cbc0010I After 200 nodes, 3 on tree, 51200 best solution, best possible 27700 (36.45 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1381 rows 411 columns - 196 fixed gives 152, 31 - ok now
Cbc0010I After 300 nodes, 3 on tree, 51200 best solution, best possible 27700 (42.37 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1372 rows 406 columns - 194 fixed gives 148, 30 - ok now
Cbc0010I After 400 nodes, 3 on tree, 51200 best solution, best possible 27700 (50.84 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1363 rows 402 columns - 194 fixed gives 149, 30 - ok now
Cbc0010I After 500 nodes, 3 on tree, 51200 best solution, best possible 27700 (59.43 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1348 rows 396 columns - 192 fixed gives 103, 23 - ok now
Cbc0010I After 600 nodes, 6 on tree, 51200 best solution, best possible 27700 (68.93 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1346 rows 397 columns - 192 fixed gives 104, 23 - ok now
Cbc0010I After 700 nodes, 9 on tree, 51200 best solution, best possible 27700 (80.34 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1359 rows 399 columns - 194 fixed gives 104, 23 - ok now
Cbc0010I After 800 nodes, 7 on tree, 51200 best solution, best possible 27700 (89.56 seconds)
Cbc0010I After 900 nodes, 7 on tree, 51200 best solution, best possible 27700 (98.65 seconds)
Cbc0010I After 1000 nodes, 7 on tree, 51200 best solution, best possible 27700 (108.44 seconds)
Cbc0010I After 1100 nodes, 17 on tree, 51200 best solution, best possible 27700 (117.78 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1345 rows 393 columns - 193 fixed gives 104, 23 - ok now
Cbc0010I After 1200 nodes, 35 on tree, 51200 best solution, best possible 27700 (125.12 seconds)
Cbc0010I After 1300 nodes, 48 on tree, 51200 best solution, best possible 27700 (130.81 seconds)
Cbc0010I After 1400 nodes, 53 on tree, 51200 best solution, best possible 27700 (138.66 seconds)
Cbc0010I After 1500 nodes, 60 on tree, 51200 best solution, best possible 27700 (145.65 seconds)
Cbc0010I After 1600 nodes, 66 on tree, 51200 best solution, best possible 27700 (152.97 seconds)
Cbc0010I After 1700 nodes, 69 on tree, 51200 best solution, best possible 27700 (159.83 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1375 rows 405 columns - 195 fixed gives 63, 14 - ok now
Cbc0010I After 1800 nodes, 77 on tree, 51200 best solution, best possible 27700 (166.90 seconds)
Cbc0010I After 1900 nodes, 85 on tree, 51200 best solution, best possible 27700 (173.68 seconds)
Cbc0010I After 2000 nodes, 90 on tree, 51200 best solution, best possible 27700 (180.36 seconds)
Cbc0010I After 2100 nodes, 98 on tree, 51200 best solution, best possible 27700 (188.54 seconds)
Cbc0010I After 2200 nodes, 104 on tree, 51200 best solution, best possible 27700 (196.90 seconds)
Cbc0010I After 2300 nodes, 110 on tree, 51200 best solution, best possible 27700 (204.97 seconds)
Cbc0010I After 2400 nodes, 118 on tree, 51200 best solution, best possible 27700 (212.57 seconds)
Cbc0010I After 2500 nodes, 122 on tree, 51200 best solution, best possible 27700 (220.47 seconds)
Cbc0010I After 2600 nodes, 128 on tree, 51200 best solution, best possible 27700 (228.34 seconds)
Cbc0010I After 2700 nodes, 140 on tree, 51200 best solution, best possible 27700 (235.59 seconds)
Cbc0010I After 2800 nodes, 148 on tree, 51200 best solution, best possible 27700 (242.98 seconds)
Cbc0010I After 2900 nodes, 154 on tree, 51200 best solution, best possible 27700 (250.23 seconds)
Cbc0010I After 3000 nodes, 154 on tree, 51200 best solution, best possible 27700 (259.29 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1369 rows 402 columns - 197 fixed gives 94, 23 - ok now
Cbc0010I After 3100 nodes, 157 on tree, 51200 best solution, best possible 27700 (270.55 seconds)
Cbc0010I After 3200 nodes, 156 on tree, 51200 best solution, best possible 27700 (280.88 seconds)
Cbc0010I After 3300 nodes, 157 on tree, 51200 best solution, best possible 27700 (290.08 seconds)
Cbc0010I After 3400 nodes, 158 on tree, 51200 best solution, best possible 27700 (298.63 seconds)
Cbc0010I After 3500 nodes, 159 on tree, 51200 best solution, best possible 27700 (306.16 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1339 rows 392 columns - 191 fixed gives 94, 23 - ok now
Cbc0010I After 3600 nodes, 165 on tree, 51200 best solution, best possible 27700 (314.55 seconds)
Cbc0010I After 3700 nodes, 176 on tree, 51200 best solution, best possible 27700 (320.90 seconds)
Cbc0010I After 3800 nodes, 181 on tree, 51200 best solution, best possible 27700 (329.12 seconds)
Cbc0010I After 3900 nodes, 189 on tree, 51200 best solution, best possible 27700 (338.35 seconds)
Cbc0010I After 4000 nodes, 198 on tree, 51200 best solution, best possible 27700 (347.80 seconds)
Cbc0010I After 4100 nodes, 205 on tree, 51200 best solution, best possible 27700 (356.03 seconds)
Cbc0010I After 4200 nodes, 206 on tree, 51200 best solution, best possible 27700 (366.55 seconds)
Cbc0010I After 4300 nodes, 222 on tree, 51200 best solution, best possible 27700 (373.93 seconds)
Cbc0010I After 4400 nodes, 228 on tree, 51200 best solution, best possible 27700 (382.11 seconds)
Cbc0010I After 4500 nodes, 239 on tree, 51200 best solution, best possible 27700 (390.02 seconds)
Cbc0010I After 4600 nodes, 248 on tree, 51200 best solution, best possible 27700 (398.14 seconds)
Cbc0010I After 4700 nodes, 256 on tree, 51200 best solution, best possible 27700 (405.84 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1326 rows 384 columns - 190 fixed gives 94, 23 - ok now
Cbc0010I After 4800 nodes, 259 on tree, 51200 best solution, best possible 27700 (414.36 seconds)
Cbc0010I After 4900 nodes, 269 on tree, 51200 best solution, best possible 27700 (422.09 seconds)
Cbc0010I After 5000 nodes, 277 on tree, 51200 best solution, best possible 27700 (430.51 seconds)
Cbc0010I After 5100 nodes, 281 on tree, 51200 best solution, best possible 27700 (438.47 seconds)
Cbc0010I After 5200 nodes, 287 on tree, 51200 best solution, best possible 27700 (447.01 seconds)
Cbc0010I After 5300 nodes, 303 on tree, 51200 best solution, best possible 27700 (454.02 seconds)
Cbc0010I After 5400 nodes, 320 on tree, 51200 best solution, best possible 27700 (461.09 seconds)
Cbc0010I After 5500 nodes, 325 on tree, 51200 best solution, best possible 27700 (469.14 seconds)
Cbc0010I After 5600 nodes, 337 on tree, 51200 best solution, best possible 27700 (476.72 seconds)
Cbc0010I After 5700 nodes, 347 on tree, 51200 best solution, best possible 27700 (484.60 seconds)
Cbc0010I After 5800 nodes, 372 on tree, 51200 best solution, best possible 27700 (490.72 seconds)
Cbc0010I After 5900 nodes, 383 on tree, 51200 best solution, best possible 27700 (498.44 seconds)
Cbc0010I After 6000 nodes, 394 on tree, 51200 best solution, best possible 27700 (506.42 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1321 rows 382 columns - 190 fixed gives 94, 23 - ok now
Cbc0010I After 6100 nodes, 396 on tree, 51200 best solution, best possible 27700 (514.86 seconds)
Cbc0010I After 6200 nodes, 406 on tree, 51200 best solution, best possible 27700 (522.82 seconds)
Cbc0010I After 6300 nodes, 411 on tree, 51200 best solution, best possible 27700 (531.06 seconds)
Cbc0010I After 6400 nodes, 424 on tree, 51200 best solution, best possible 27700 (538.03 seconds)
Cbc0010I After 6500 nodes, 431 on tree, 51200 best solution, best possible 27700 (545.41 seconds)
Cbc0010I After 6600 nodes, 444 on tree, 51200 best solution, best possible 27700 (553.45 seconds)
Cbc0010I After 6700 nodes, 453 on tree, 51200 best solution, best possible 27700 (561.72 seconds)
Cbc0010I After 6800 nodes, 467 on tree, 51200 best solution, best possible 27700 (569.69 seconds)
Cbc0010I After 6900 nodes, 474 on tree, 51200 best solution, best possible 27700 (578.44 seconds)
Cbc0010I After 7000 nodes, 484 on tree, 51200 best solution, best possible 27700 (586.78 seconds)
Cbc0010I After 7100 nodes, 491 on tree, 51200 best solution, best possible 27700 (595.14 seconds)
Cbc0010I After 7200 nodes, 500 on tree, 51200 best solution, best possible 27700 (603.46 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1309 rows 377 columns - 187 fixed gives 94, 23 - ok now
Cbc0010I After 7300 nodes, 516 on tree, 51200 best solution, best possible 27700 (611.40 seconds)
Cbc0010I After 7400 nodes, 534 on tree, 51200 best solution, best possible 27700 (618.97 seconds)
Cbc0010I After 7500 nodes, 543 on tree, 51200 best solution, best possible 27700 (627.17 seconds)
Cbc0010I After 7600 nodes, 553 on tree, 51200 best solution, best possible 27700 (635.65 seconds)
Cbc0010I After 7700 nodes, 569 on tree, 51200 best solution, best possible 27700 (643.70 seconds)
Cbc0010I After 7800 nodes, 578 on tree, 51200 best solution, best possible 27700 (652.70 seconds)
Cbc0010I After 7900 nodes, 590 on tree, 51200 best solution, best possible 27700 (661.33 seconds)
Cbc0010I After 8000 nodes, 603 on tree, 51200 best solution, best possible 27700 (670.08 seconds)
Cbc0010I After 8100 nodes, 612 on tree, 51200 best solution, best possible 27700 (679.28 seconds)
Cbc0010I After 8200 nodes, 620 on tree, 51200 best solution, best possible 27700 (688.76 seconds)
Cbc0010I After 8300 nodes, 623 on tree, 51200 best solution, best possible 27700 (698.12 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1307 rows 376 columns - 187 fixed gives 94, 23 - ok now
Cbc0010I After 8400 nodes, 633 on tree, 51200 best solution, best possible 27700 (706.51 seconds)
Cbc0010I After 8500 nodes, 639 on tree, 51200 best solution, best possible 27700 (716.08 seconds)
Cbc0010I After 8600 nodes, 651 on tree, 51200 best solution, best possible 27700 (724.35 seconds)
Cbc0010I After 8700 nodes, 660 on tree, 51200 best solution, best possible 27700 (733.27 seconds)
Cbc0010I After 8800 nodes, 671 on tree, 51200 best solution, best possible 27700 (742.10 seconds)
Cbc0010I After 8900 nodes, 675 on tree, 51200 best solution, best possible 27700 (751.10 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1286 rows 368 columns - 184 fixed gives 94, 23 - ok now
Cbc0010I After 9000 nodes, 687 on tree, 51200 best solution, best possible 27700 (759.64 seconds)
Cbc0010I After 9100 nodes, 695 on tree, 51200 best solution, best possible 27700 (768.44 seconds)
Cbc0010I After 9200 nodes, 712 on tree, 51200 best solution, best possible 27700 (776.48 seconds)
Cbc0010I After 9300 nodes, 731 on tree, 51200 best solution, best possible 27700 (784.15 seconds)
Cbc0010I After 9400 nodes, 747 on tree, 51200 best solution, best possible 27700 (792.19 seconds)
Cbc0010I After 9500 nodes, 759 on tree, 51200 best solution, best possible 27700 (800.81 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1297 rows 373 columns - 185 fixed gives 94, 23 - ok now
Cbc0010I After 9600 nodes, 775 on tree, 51200 best solution, best possible 27700 (808.68 seconds)
Cbc0010I After 9700 nodes, 780 on tree, 51200 best solution, best possible 27700 (816.83 seconds)
Cbc0010I After 9800 nodes, 795 on tree, 51200 best solution, best possible 27700 (824.40 seconds)
Cbc0010I After 9900 nodes, 815 on tree, 51200 best solution, best possible 27700 (831.84 seconds)
Cbc0010I After 10000 nodes, 826 on tree, 51200 best solution, best possible 27700 (839.71 seconds)
Cbc0010I After 10100 nodes, 847 on tree, 51200 best solution, best possible 27700 (846.66 seconds)
Cbc0010I After 10200 nodes, 859 on tree, 51200 best solution, best possible 27700 (855.02 seconds)
Cbc0010I After 10300 nodes, 866 on tree, 51200 best solution, best possible 27700 (863.46 seconds)
Cbc0010I After 10400 nodes, 867 on tree, 51200 best solution, best possible 27700 (872.48 seconds)
Cbc0010I After 10500 nodes, 867 on tree, 51200 best solution, best possible 27700 (881.45 seconds)
Cbc0010I After 10600 nodes, 868 on tree, 51200 best solution, best possible 27700 (890.15 seconds)
Cbc0010I After 10700 nodes, 868 on tree, 51200 best solution, best possible 27700 (898.95 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1275 rows 365 columns - 180 fixed gives 94, 23 - ok now
Cbc0010I After 10800 nodes, 869 on tree, 51200 best solution, best possible 27700 (907.68 seconds)
Cbc0010I After 10900 nodes, 876 on tree, 51200 best solution, best possible 27700 (916.18 seconds)
Cbc0010I After 11000 nodes, 882 on tree, 51200 best solution, best possible 27700 (924.39 seconds)
Cbc0010I After 11100 nodes, 788 on tree, 51200 best solution, best possible 28607 (935.64 seconds)
Cbc0010I After 11200 nodes, 688 on tree, 51200 best solution, best possible 29346 (949.14 seconds)
Cbc0010I After 11300 nodes, 588 on tree, 51200 best solution, best possible 30024 (965.15 seconds)
Cbc0010I After 11400 nodes, 488 on tree, 51200 best solution, best possible 30495 (978.95 seconds)
Cbc0010I After 11500 nodes, 388 on tree, 51200 best solution, best possible 31069 (992.98 seconds)
Cbc0010I After 11600 nodes, 288 on tree, 51200 best solution, best possible 31508 (1008.48 seconds)
Cbc0010I After 11700 nodes, 188 on tree, 51200 best solution, best possible 32132 (1023.89 seconds)
Cbc0010I After 11800 nodes, 90 on tree, 51200 best solution, best possible 32511 (1039.16 seconds)
Cbc0010I After 11900 nodes, 1 on tree, 51200 best solution, best possible 33108 (1052.85 seconds)
Cbc0010I After 12000 nodes, 1 on tree, 51200 best solution, best possible 33151 (1060.61 seconds)
Cbc0010I After 12100 nodes, 2 on tree, 51200 best solution, best possible 33196 (1068.25 seconds)
Cbc0010I After 12200 nodes, 1 on tree, 51200 best solution, best possible 33241 (1075.79 seconds)
Cbc0010I After 12300 nodes, 1 on tree, 51200 best solution, best possible 33285 (1083.52 seconds)
Cbc0010I After 12400 nodes, 2 on tree, 51200 best solution, best possible 33328 (1091.32 seconds)
Cbc0010I After 12500 nodes, 1 on tree, 51200 best solution, best possible 33373 (1098.77 seconds)
Cbc0010I After 12600 nodes, 1 on tree, 51200 best solution, best possible 33420 (1106.45 seconds)
Cbc0010I After 12700 nodes, 2 on tree, 51200 best solution, best possible 33464 (1114.42 seconds)
Cbc0010I After 12800 nodes, 1 on tree, 51200 best solution, best possible 33509 (1122.15 seconds)
Cbc0010I After 12900 nodes, 2 on tree, 51200 best solution, best possible 33556 (1129.97 seconds)
Cbc0010I After 13000 nodes, 2 on tree, 51200 best solution, best possible 33600 (1137.72 seconds)
Cbc0010I After 13100 nodes, 5 on tree, 51200 best solution, best possible 33600 (1145.72 seconds)
Cbc0010I After 13200 nodes, 7 on tree, 51200 best solution, best possible 33600 (1153.31 seconds)
Cbc0010I After 13300 nodes, 11 on tree, 51200 best solution, best possible 33600 (1161.29 seconds)
Cbc0010I After 13400 nodes, 15 on tree, 51200 best solution, best possible 33600 (1168.97 seconds)
Cbc0010I After 13500 nodes, 19 on tree, 51200 best solution, best possible 33600 (1180.41 seconds)
Cbc0010I After 13600 nodes, 24 on tree, 51200 best solution, best possible 33600 (1191.85 seconds)
Cbc0010I After 13700 nodes, 27 on tree, 51200 best solution, best possible 33600 (1203.50 seconds)
Cbc0010I After 13800 nodes, 30 on tree, 51200 best solution, best possible 33600 (1215.10 seconds)
Cbc0010I After 13900 nodes, 30 on tree, 51200 best solution, best possible 33600 (1227.12 seconds)
Cbc0010I After 14000 nodes, 33 on tree, 51200 best solution, best possible 33600 (1238.31 seconds)
Cbc0010I After 14100 nodes, 1 on tree, 51200 best solution, best possible 34094 (1251.95 seconds)
Cbc0010I After 14200 nodes, 1 on tree, 51200 best solution, best possible 34139 (1264.15 seconds)
Cbc0010I After 14300 nodes, 1 on tree, 51200 best solution, best possible 34181 (1276.20 seconds)
Cbc0010I After 14400 nodes, 1 on tree, 51200 best solution, best possible 34225 (1288.27 seconds)
Cbc0010I After 14500 nodes, 1 on tree, 51200 best solution, best possible 34269 (1300.46 seconds)
Cbc0010I After 14600 nodes, 1 on tree, 51200 best solution, best possible 34312 (1312.14 seconds)
Cbc0010I After 14700 nodes, 1 on tree, 51200 best solution, best possible 34354 (1324.12 seconds)
Cbc0010I After 14800 nodes, 1 on tree, 51200 best solution, best possible 34397 (1336.04 seconds)
Cbc0010I After 14900 nodes, 2 on tree, 51200 best solution, best possible 34440 (1348.24 seconds)
Cbc0010I After 15000 nodes, 1 on tree, 51200 best solution, best possible 34483 (1360.26 seconds)
Cbc0010I After 15100 nodes, 1 on tree, 51200 best solution, best possible 34527 (1372.54 seconds)
Cbc0010I After 15200 nodes, 1 on tree, 51200 best solution, best possible 34575 (1385.43 seconds)
Cbc0010I After 15300 nodes, 1 on tree, 51200 best solution, best possible 34623 (1398.36 seconds)
Cbc0010I After 15400 nodes, 1 on tree, 51200 best solution, best possible 34670 (1410.99 seconds)
Cbc0010I After 15500 nodes, 1 on tree, 51200 best solution, best possible 34718 (1423.67 seconds)
Cbc0010I After 15600 nodes, 1 on tree, 51200 best solution, best possible 34765 (1436.32 seconds)
Cbc0010I After 15700 nodes, 1 on tree, 51200 best solution, best possible 34809 (1448.91 seconds)
Cbc0010I After 15800 nodes, 2 on tree, 51200 best solution, best possible 34833 (1461.01 seconds)
Cbc0010I After 15900 nodes, 1 on tree, 51200 best solution, best possible 34858 (1472.33 seconds)
Cbc0010I After 16000 nodes, 1 on tree, 51200 best solution, best possible 34883 (1483.75 seconds)
Cbc0010I After 16100 nodes, 2 on tree, 51200 best solution, best possible 34907 (1495.20 seconds)
Cbc0010I After 16200 nodes, 2 on tree, 51200 best solution, best possible 34932 (1506.37 seconds)
Cbc0010I After 16300 nodes, 1 on tree, 51200 best solution, best possible 34957 (1517.54 seconds)
Cbc0010I After 16400 nodes, 1 on tree, 51200 best solution, best possible 34982 (1528.97 seconds)
Cbc0010I After 16500 nodes, 1 on tree, 51200 best solution, best possible 35007 (1540.38 seconds)
Cbc0010I After 16600 nodes, 1 on tree, 51200 best solution, best possible 35032 (1551.50 seconds)
Cbc0010I After 16700 nodes, 1 on tree, 51200 best solution, best possible 35057 (1562.30 seconds)
Cbc0010I After 16800 nodes, 1 on tree, 51200 best solution, best possible 35082 (1573.67 seconds)
Cbc0010I After 16900 nodes, 2 on tree, 51200 best solution, best possible 35106 (1584.86 seconds)
Cbc0010I After 17000 nodes, 2 on tree, 51200 best solution, best possible 35131 (1596.12 seconds)
Cbc0010I After 17100 nodes, 4 on tree, 51200 best solution, best possible 35131 (1608.17 seconds)
Cbc0010I After 17200 nodes, 5 on tree, 51200 best solution, best possible 35131 (1618.62 seconds)
Cbc0010I After 17300 nodes, 5 on tree, 51200 best solution, best possible 35131 (1629.06 seconds)
Cbc0010I After 17400 nodes, 6 on tree, 51200 best solution, best possible 35131 (1639.39 seconds)
Cbc0010I After 17500 nodes, 9 on tree, 51200 best solution, best possible 35131 (1649.32 seconds)
Cbc0010I After 17600 nodes, 12 on tree, 51200 best solution, best possible 35131 (1659.76 seconds)
Cbc0010I After 17700 nodes, 21 on tree, 51200 best solution, best possible 35131 (1669.45 seconds)
Cbc0010I After 17800 nodes, 21 on tree, 51200 best solution, best possible 35131 (1679.47 seconds)
Cbc0010I After 17900 nodes, 24 on tree, 51200 best solution, best possible 35131 (1690.01 seconds)
Cbc0010I After 18000 nodes, 28 on tree, 51200 best solution, best possible 35131 (1700.07 seconds)
Cbc0038I Full problem 1808 rows 620 columns, reduced to 1282 rows 370 columns - 183 fixed gives 154, 39 - ok now
Cbc0038I Full problem 1808 rows 620 columns, reduced to 25 rows 12 columns
Cbc0010I After 18100 nodes, 2 on tree, 51200 best solution, best possible 35406 (1712.15 seconds)
Cbc0010I After 18200 nodes, 2 on tree, 51200 best solution, best possible 35431 (1722.36 seconds)
Cbc0010I After 18300 nodes, 2 on tree, 51200 best solution, best possible 35456 (1732.78 seconds)
Cbc0010I After 18400 nodes, 2 on tree, 51200 best solution, best possible 35481 (1743.23 seconds)
Cbc0010I After 18500 nodes, 2 on tree, 51200 best solution, best possible 35506 (1753.55 seconds)
Cbc0010I After 18600 nodes, 2 on tree, 51200 best solution, best possible 35531 (1763.90 seconds)
Cbc0010I After 18700 nodes, 2 on tree, 51200 best solution, best possible 35556 (1774.37 seconds)
Cbc0010I After 18800 nodes, 2 on tree, 51200 best solution, best possible 35581 (1784.93 seconds)
Cbc0010I After 18900 nodes, 2 on tree, 51200 best solution, best possible 35606 (1795.39 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 51200 (best possible 35606), took 11687033 iterations and 18943 nodes (1800.06 seconds)
Cbc0032I Strong branching done 48630 times (3042473 iterations), fathomed 6933 nodes and fixed 5019 variables
Cbc0035I Maximum depth 7926, 0 variables fixed on reduced cost
Cuts at root node changed objective from 27648 to 27684
Probing was tried 3444 times and created 256377 cuts of which 0 were active after adding rounds of cuts (9.129 seconds)
Gomory was tried 3280 times and created 3412 cuts of which 0 were active after adding rounds of cuts (8.747 seconds)
Knapsack was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Clique was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
MixedIntegerRounding2 was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
FlowCover was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
TwoMirCuts was tried 48 times and created 305 cuts of which 0 were active after adding rounds of cuts (0.285 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Stopped on time limit

Objective value:                51200.00000000
Lower bound:                    35606.000
Gap:                            0.44
Enumerated nodes:               18943
Total iterations:               11687033
Time (CPU seconds):             1800.12
Time (Wallclock seconds):       1807.33

Total time (CPU seconds):       1800.13   (Wallclock seconds):       1807.34

