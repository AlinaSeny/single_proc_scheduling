Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_2_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_2_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 290.555 - 0.52 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 19 tightened bounds, 1062 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 21 tightened bounds, 484 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 18 tightened bounds, 213 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 71 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16330 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 740 integers unsatisfied sum - 248.85
Cbc0038I Pass   1: (2.19 seconds) suminf.  135.91927 (720) obj. 416.48 iterations 2279
Cbc0038I Pass   2: (2.40 seconds) suminf.  100.06181 (918) obj. 434.535 iterations 1011
Cbc0038I Pass   3: (2.51 seconds) suminf.   89.81472 (957) obj. 472.669 iterations 390
Cbc0038I Pass   4: (2.57 seconds) suminf.   86.70308 (964) obj. 481.909 iterations 253
Cbc0038I Pass   5: (2.61 seconds) suminf.   86.48740 (967) obj. 476.365 iterations 155
Cbc0038I Pass   6: (2.75 seconds) suminf.   83.03662 (951) obj. 496.037 iterations 681
Cbc0038I Pass   7: (2.77 seconds) suminf.   82.32977 (950) obj. 495.965 iterations 81
Cbc0038I Pass   8: (2.80 seconds) suminf.   81.23502 (945) obj. 496.155 iterations 118
Cbc0038I Pass   9: (2.83 seconds) suminf.   80.51535 (954) obj. 495.761 iterations 145
Cbc0038I Pass  10: (2.87 seconds) suminf.   79.41412 (939) obj. 494.001 iterations 177
Cbc0038I Pass  11: (2.97 seconds) suminf.   76.78298 (918) obj. 510.288 iterations 501
Cbc0038I Pass  12: (3.02 seconds) suminf.   75.29948 (911) obj. 498.172 iterations 207
Cbc0038I Pass  13: (3.10 seconds) suminf.   76.29921 (938) obj. 503.349 iterations 382
Cbc0038I Pass  14: (3.17 seconds) suminf.   74.58585 (929) obj. 504.196 iterations 336
Cbc0038I Pass  15: (3.19 seconds) suminf.   74.35097 (929) obj. 503.951 iterations 76
Cbc0038I Pass  16: (3.29 seconds) suminf.   75.33242 (951) obj. 512.947 iterations 554
Cbc0038I Pass  17: (3.36 seconds) suminf.   74.60527 (949) obj. 510.745 iterations 348
Cbc0038I Pass  18: (3.40 seconds) suminf.   74.55498 (933) obj. 512.417 iterations 193
Cbc0038I Pass  19: (3.49 seconds) suminf.   76.92219 (958) obj. 510.618 iterations 483
Cbc0038I Pass  20: (3.57 seconds) suminf.   75.14833 (951) obj. 512.423 iterations 386
Cbc0038I Pass  21: (3.62 seconds) suminf.   74.49744 (931) obj. 521.656 iterations 252
Cbc0038I Pass  22: (3.72 seconds) suminf.   75.41313 (952) obj. 522.2 iterations 478
Cbc0038I Pass  23: (3.78 seconds) suminf.   74.71406 (933) obj. 514.312 iterations 336
Cbc0038I Pass  24: (3.81 seconds) suminf.   74.52587 (929) obj. 514.257 iterations 120
Cbc0038I Pass  25: (3.90 seconds) suminf.   75.74806 (950) obj. 519.672 iterations 497
Cbc0038I Pass  26: (3.98 seconds) suminf.   74.29743 (927) obj. 511.555 iterations 384
Cbc0038I Pass  27: (4.00 seconds) suminf.   74.21046 (924) obj. 511.579 iterations 54
Cbc0038I Pass  28: (4.10 seconds) suminf.   76.99662 (966) obj. 512.255 iterations 510
Cbc0038I Pass  29: (4.16 seconds) suminf.   75.24447 (929) obj. 510.917 iterations 291
Cbc0038I Pass  30: (4.18 seconds) suminf.   75.14254 (921) obj. 509.209 iterations 109
Cbc0038I Pass  31: (4.27 seconds) suminf.   75.07075 (950) obj. 504.118 iterations 469
Cbc0038I Pass  32: (4.34 seconds) suminf.   74.29743 (927) obj. 511.555 iterations 351
Cbc0038I Pass  33: (4.36 seconds) suminf.   74.21046 (924) obj. 511.579 iterations 52
Cbc0038I Pass  34: (4.45 seconds) suminf.   75.94549 (968) obj. 511.509 iterations 467
Cbc0038I Pass  35: (4.52 seconds) suminf.   74.55859 (941) obj. 511.417 iterations 390
Cbc0038I Pass  36: (4.56 seconds) suminf.   74.45425 (938) obj. 509.579 iterations 129
Cbc0038I Pass  37: (4.64 seconds) suminf.   77.30929 (968) obj. 503.586 iterations 460
Cbc0038I Pass  38: (4.72 seconds) suminf.   74.03942 (930) obj. 512.072 iterations 367
Cbc0038I Pass  39: (4.75 seconds) suminf.   74.21046 (924) obj. 511.579 iterations 123
Cbc0038I Pass  40: (4.85 seconds) suminf.   76.82768 (963) obj. 505.04 iterations 570
Cbc0038I Pass  41: (4.93 seconds) suminf.   74.70038 (930) obj. 516.168 iterations 447
Cbc0038I Pass  42: (5.04 seconds) suminf.   76.50550 (967) obj. 522.491 iterations 549
Cbc0038I Pass  43: (5.10 seconds) suminf.   74.28962 (929) obj. 512.182 iterations 300
Cbc0038I Pass  44: (5.13 seconds) suminf.   74.21046 (924) obj. 511.579 iterations 122
Cbc0038I Pass  45: (5.24 seconds) suminf.   77.14445 (962) obj. 505.572 iterations 619
Cbc0038I Pass  46: (5.33 seconds) suminf.   74.70038 (930) obj. 516.168 iterations 426
Cbc0038I Pass  47: (5.43 seconds) suminf.   75.24194 (944) obj. 522.491 iterations 540
Cbc0038I Pass  48: (5.63 seconds) suminf.  121.53027 (927) obj. 627.105 iterations 1292
Cbc0038I Pass  49: (5.77 seconds) suminf.   84.52471 (943) obj. 634.369 iterations 871
Cbc0038I Pass  50: (5.79 seconds) suminf.   83.16731 (956) obj. 632.019 iterations 97
Cbc0038I Pass  51: (5.86 seconds) suminf.   78.41470 (946) obj. 633.825 iterations 357
Cbc0038I Pass  52: (5.89 seconds) suminf.   77.68643 (943) obj. 633.825 iterations 131
Cbc0038I Pass  53: (5.96 seconds) suminf.   77.31762 (952) obj. 632.78 iterations 368
Cbc0038I Pass  54: (6.01 seconds) suminf.   76.34350 (959) obj. 624.682 iterations 285
Cbc0038I Pass  55: (6.09 seconds) suminf.   80.78742 (924) obj. 636.601 iterations 456
Cbc0038I Pass  56: (6.16 seconds) suminf.   77.37156 (942) obj. 624.067 iterations 350
Cbc0038I Pass  57: (6.19 seconds) suminf.   76.85034 (937) obj. 624.067 iterations 149
Cbc0038I Pass  58: (6.26 seconds) suminf.   76.58860 (958) obj. 630.321 iterations 320
Cbc0038I Pass  59: (6.31 seconds) suminf.   75.52776 (934) obj. 623.463 iterations 254
Cbc0038I Pass  60: (6.37 seconds) suminf.   77.48921 (944) obj. 636.601 iterations 277
Cbc0038I Pass  61: (6.40 seconds) suminf.   76.37702 (944) obj. 630.363 iterations 152
Cbc0038I Pass  62: (6.44 seconds) suminf.   75.47461 (957) obj. 622.693 iterations 197
Cbc0038I Pass  63: (6.46 seconds) suminf.   75.38891 (956) obj. 622.693 iterations 88
Cbc0038I Pass  64: (6.49 seconds) suminf.   74.73311 (956) obj. 622.958 iterations 106
Cbc0038I Pass  65: (6.55 seconds) suminf.   76.76691 (934) obj. 633.825 iterations 342
Cbc0038I Pass  66: (6.61 seconds) suminf.   75.34586 (950) obj. 623.463 iterations 272
Cbc0038I Pass  67: (6.63 seconds) suminf.   75.23778 (957) obj. 623.463 iterations 82
Cbc0038I Pass  68: (6.70 seconds) suminf.   78.51639 (961) obj. 636.601 iterations 378
Cbc0038I Pass  69: (6.76 seconds) suminf.   75.85485 (935) obj. 624.067 iterations 266
Cbc0038I Pass  70: (6.78 seconds) suminf.   75.43735 (951) obj. 624.067 iterations 97
Cbc0038I Pass  71: (6.85 seconds) suminf.   76.91251 (957) obj. 637.465 iterations 391
Cbc0038I Pass  72: (6.90 seconds) suminf.   76.04186 (950) obj. 637.085 iterations 162
Cbc0038I Pass  73: (6.96 seconds) suminf.   76.25021 (938) obj. 636.601 iterations 358
Cbc0038I Pass  74: (7.01 seconds) suminf.   75.35533 (926) obj. 626.29 iterations 199
Cbc0038I Pass  75: (7.08 seconds) suminf.   77.17507 (945) obj. 636.601 iterations 379
Cbc0038I Pass  76: (7.13 seconds) suminf.   75.51881 (933) obj. 633.038 iterations 205
Cbc0038I Pass  77: (7.15 seconds) suminf.   75.63240 (932) obj. 623.463 iterations 135
Cbc0038I Pass  78: (7.24 seconds) suminf.   79.54705 (924) obj. 600.299 iterations 391
Cbc0038I Pass  79: (7.28 seconds) suminf.   76.41452 (926) obj. 623.711 iterations 233
Cbc0038I Pass  80: (7.30 seconds) suminf.   76.16425 (922) obj. 623.402 iterations 76
Cbc0038I Pass  81: (7.35 seconds) suminf.   75.34890 (915) obj. 624.248 iterations 207
Cbc0038I Pass  82: (7.43 seconds) suminf.   76.60557 (937) obj. 636.601 iterations 438
Cbc0038I Pass  83: (7.48 seconds) suminf.   75.30875 (914) obj. 622.693 iterations 265
Cbc0038I Pass  84: (7.54 seconds) suminf.   78.23313 (947) obj. 603.299 iterations 359
Cbc0038I Pass  85: (7.60 seconds) suminf.   76.07107 (924) obj. 627.755 iterations 316
Cbc0038I Pass  86: (7.63 seconds) suminf.   75.39147 (925) obj. 622.693 iterations 155
Cbc0038I Pass  87: (7.66 seconds) suminf.   75.12690 (919) obj. 622.693 iterations 122
Cbc0038I Pass  88: (7.74 seconds) suminf.   76.41297 (931) obj. 587.141 iterations 412
Cbc0038I Pass  89: (7.79 seconds) suminf.   75.44049 (918) obj. 587.774 iterations 286
Cbc0038I Pass  90: (7.86 seconds) suminf.   76.97414 (937) obj. 620.163 iterations 381
Cbc0038I Pass  91: (7.91 seconds) suminf.   76.06398 (913) obj. 620.163 iterations 236
Cbc0038I Pass  92: (7.98 seconds) suminf.   76.38841 (918) obj. 620.163 iterations 396
Cbc0038I Pass  93: (8.03 seconds) suminf.   75.02069 (901) obj. 626.273 iterations 269
Cbc0038I Pass  94: (8.10 seconds) suminf.   78.67572 (950) obj. 582.945 iterations 390
Cbc0038I Pass  95: (8.17 seconds) suminf.   75.87226 (931) obj. 575.829 iterations 437
Cbc0038I Pass  96: (8.23 seconds) suminf.   77.21091 (934) obj. 581.792 iterations 281
Cbc0038I Pass  97: (8.28 seconds) suminf.   75.99735 (923) obj. 575.829 iterations 208
Cbc0038I Pass  98: (8.29 seconds) suminf.   75.42385 (926) obj. 578.621 iterations 65
Cbc0038I Pass  99: (8.37 seconds) suminf.   76.53597 (953) obj. 573.613 iterations 434
Cbc0038I Pass 100: (8.52 seconds) suminf.  116.06435 (912) obj. 625.469 iterations 1096
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 126 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4483 rows 1497 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.02 seconds)
Cbc0038I After 9.02 seconds - Feasibility pump exiting - took 7.32 seconds
Cbc0031I 64 added rows had average density of 27.953125
Cbc0013I At root node, 64 cuts changed objective from 290.60929 to 311 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 86 row cuts average 614.6 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 126 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 311 (16.03 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 326 (105.78 seconds)
Cbc0010I After 200 nodes, 27 on tree, 1e+50 best solution, best possible 326 (170.44 seconds)
Cbc0010I After 300 nodes, 41 on tree, 1e+50 best solution, best possible 326 (231.65 seconds)
Cbc0010I After 400 nodes, 43 on tree, 1e+50 best solution, best possible 326 (290.01 seconds)
Cbc0010I After 500 nodes, 41 on tree, 1e+50 best solution, best possible 326 (352.61 seconds)
Cbc0010I After 600 nodes, 39 on tree, 1e+50 best solution, best possible 326 (418.34 seconds)
Cbc0010I After 700 nodes, 29 on tree, 1e+50 best solution, best possible 326 (493.61 seconds)
Cbc0010I After 800 nodes, 20 on tree, 1e+50 best solution, best possible 326 (552.90 seconds)
Cbc0010I After 900 nodes, 25 on tree, 1e+50 best solution, best possible 326 (619.20 seconds)
Cbc0010I After 1000 nodes, 19 on tree, 1e+50 best solution, best possible 326 (673.21 seconds)
Cbc0010I After 1100 nodes, 26 on tree, 1e+50 best solution, best possible 327 (733.78 seconds)
Cbc0010I After 1200 nodes, 27 on tree, 1e+50 best solution, best possible 327 (782.31 seconds)
Cbc0010I After 1300 nodes, 36 on tree, 1e+50 best solution, best possible 327 (836.22 seconds)
Cbc0010I After 1400 nodes, 41 on tree, 1e+50 best solution, best possible 327 (869.99 seconds)
Cbc0010I After 1500 nodes, 28 on tree, 1e+50 best solution, best possible 327 (920.33 seconds)
Cbc0010I After 1600 nodes, 29 on tree, 1e+50 best solution, best possible 327 (980.68 seconds)
Cbc0010I After 1700 nodes, 26 on tree, 1e+50 best solution, best possible 327 (1023.58 seconds)
Cbc0010I After 1800 nodes, 36 on tree, 1e+50 best solution, best possible 327 (1067.35 seconds)
Cbc0010I After 1900 nodes, 29 on tree, 1e+50 best solution, best possible 327 (1092.57 seconds)
Cbc0010I After 2000 nodes, 21 on tree, 1e+50 best solution, best possible 327 (1128.96 seconds)
Cbc0010I After 2100 nodes, 19 on tree, 1e+50 best solution, best possible 327 (1182.14 seconds)
Cbc0010I After 2200 nodes, 21 on tree, 1e+50 best solution, best possible 327 (1222.51 seconds)
Cbc0010I After 2300 nodes, 16 on tree, 1e+50 best solution, best possible 327 (1267.90 seconds)
Cbc0010I After 2400 nodes, 15 on tree, 1e+50 best solution, best possible 327 (1307.99 seconds)
Cbc0010I After 2500 nodes, 26 on tree, 1e+50 best solution, best possible 327 (1338.60 seconds)
Cbc0010I After 2600 nodes, 16 on tree, 1e+50 best solution, best possible 327 (1371.29 seconds)
Cbc0010I After 2700 nodes, 20 on tree, 1e+50 best solution, best possible 327 (1403.45 seconds)
Cbc0010I After 2800 nodes, 26 on tree, 1e+50 best solution, best possible 327 (1432.76 seconds)
Cbc0010I After 2900 nodes, 24 on tree, 1e+50 best solution, best possible 327 (1457.68 seconds)
Cbc0010I After 3000 nodes, 19 on tree, 1e+50 best solution, best possible 327 (1495.18 seconds)
Cbc0010I After 3100 nodes, 35 on tree, 1e+50 best solution, best possible 327 (1515.97 seconds)
Cbc0010I After 3200 nodes, 24 on tree, 1e+50 best solution, best possible 327 (1535.28 seconds)
Cbc0010I After 3300 nodes, 44 on tree, 1e+50 best solution, best possible 327 (1556.95 seconds)
Cbc0010I After 3400 nodes, 32 on tree, 1e+50 best solution, best possible 327 (1593.83 seconds)
Cbc0010I After 3500 nodes, 35 on tree, 1e+50 best solution, best possible 327 (1639.38 seconds)
Cbc0010I After 3600 nodes, 41 on tree, 1e+50 best solution, best possible 327 (1666.21 seconds)
Cbc0010I After 3700 nodes, 33 on tree, 1e+50 best solution, best possible 327 (1687.81 seconds)
Cbc0010I After 3800 nodes, 35 on tree, 1e+50 best solution, best possible 327 (1713.23 seconds)
Cbc0010I After 3900 nodes, 32 on tree, 1e+50 best solution, best possible 327 (1729.97 seconds)
Cbc0010I After 4000 nodes, 29 on tree, 1e+50 best solution, best possible 327 (1757.39 seconds)
Cbc0010I After 4100 nodes, 32 on tree, 1e+50 best solution, best possible 327 (1778.41 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 327), took 4276797 iterations and 4146 nodes (1800.21 seconds)
Cbc0032I Strong branching done 29928 times (2254395 iterations), fathomed 625 nodes and fixed 4775 variables
Cbc0035I Maximum depth 81, 0 variables fixed on reduced cost
Cuts at root node changed objective from 290.609 to 311
Probing was tried 10 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.116 seconds)
Gomory was tried 673 times and created 3285 cuts of which 0 were active after adding rounds of cuts (5.773 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 673 times and created 17978 cuts of which 0 were active after adding rounds of cuts (2.216 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
ImplicationCuts was tried 54 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    327.000
Enumerated nodes:               4146
Total iterations:               4276797
Time (CPU seconds):             1800.21
Time (Wallclock seconds):       1803.47

Total time (CPU seconds):       1800.23   (Wallclock seconds):       1803.50

