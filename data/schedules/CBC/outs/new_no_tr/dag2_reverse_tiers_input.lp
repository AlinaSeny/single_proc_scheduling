Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag2_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/dag2_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 787342 - 0.94 seconds
Cgl0002I 152 variables fixed
Cgl0003I 0 fixed, 22 tightened bounds, 1295 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 399 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 165 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0004I processed model has 6511 rows, 2202 columns (2202 integer (2160 of which binary)) and 21440 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2202 objects (2202 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 993 integers unsatisfied sum - 332.617
Cbc0038I Pass   1: (4.17 seconds) suminf.  130.20715 (997) obj. 1.06474e+06 iterations 3334
Cbc0038I Pass   2: (4.51 seconds) suminf.  103.32113 (1116) obj. 1.14896e+06 iterations 1448
Cbc0038I Pass   3: (4.79 seconds) suminf.   94.31638 (1141) obj. 1.36194e+06 iterations 1126
Cbc0038I Pass   4: (4.88 seconds) suminf.   94.09775 (1141) obj. 1.37653e+06 iterations 289
Cbc0038I Pass   5: (5.03 seconds) suminf.   90.76648 (1174) obj. 1.39289e+06 iterations 469
Cbc0038I Pass   6: (5.16 seconds) suminf.   87.37782 (1186) obj. 1.41355e+06 iterations 458
Cbc0038I Pass   7: (5.55 seconds) suminf.   84.66052 (1124) obj. 1.41722e+06 iterations 1375
Cbc0038I Pass   8: (5.78 seconds) suminf.   81.95586 (1219) obj. 1.41214e+06 iterations 785
Cbc0038I Pass   9: (5.89 seconds) suminf.   82.31458 (1215) obj. 1.4099e+06 iterations 269
Cbc0038I Pass  10: (6.18 seconds) suminf.   78.79165 (1196) obj. 1.40617e+06 iterations 958
Cbc0038I Pass  11: (6.32 seconds) suminf.   78.12891 (1233) obj. 1.404e+06 iterations 396
Cbc0038I Pass  12: (6.38 seconds) suminf.   77.77036 (1243) obj. 1.40794e+06 iterations 170
Cbc0038I Pass  13: (6.66 seconds) suminf.   77.65116 (1190) obj. 1.40569e+06 iterations 910
Cbc0038I Pass  14: (6.81 seconds) suminf.   77.11830 (1175) obj. 1.4022e+06 iterations 474
Cbc0038I Pass  15: (7.00 seconds) suminf.   80.30686 (1170) obj. 1.42268e+06 iterations 668
Cbc0038I Pass  16: (7.14 seconds) suminf.   78.58949 (1163) obj. 1.42141e+06 iterations 444
Cbc0038I Pass  17: (7.20 seconds) suminf.   77.97991 (1172) obj. 1.42057e+06 iterations 154
Cbc0038I Pass  18: (7.36 seconds) suminf.   79.09809 (1179) obj. 1.41704e+06 iterations 574
Cbc0038I Pass  19: (7.53 seconds) suminf.   77.95315 (1161) obj. 1.4152e+06 iterations 544
Cbc0038I Pass  20: (7.58 seconds) suminf.   78.20983 (1153) obj. 1.41459e+06 iterations 142
Cbc0038I Pass  21: (7.76 seconds) suminf.   80.12399 (1169) obj. 1.42022e+06 iterations 617
Cbc0038I Pass  22: (7.91 seconds) suminf.   77.98114 (1181) obj. 1.41957e+06 iterations 506
Cbc0038I Pass  23: (8.00 seconds) suminf.   77.92180 (1173) obj. 1.41906e+06 iterations 232
Cbc0038I Pass  24: (8.16 seconds) suminf.   81.30038 (1171) obj. 1.41488e+06 iterations 563
Cbc0038I Pass  25: (8.32 seconds) suminf.   78.82225 (1165) obj. 1.41161e+06 iterations 450
Cbc0038I Pass  26: (8.36 seconds) suminf.   79.43681 (1152) obj. 1.41003e+06 iterations 98
Cbc0038I Pass  27: (8.53 seconds) suminf.   79.59503 (1176) obj. 1.41994e+06 iterations 548
Cbc0038I Pass  28: (8.64 seconds) suminf.   77.98114 (1181) obj. 1.41957e+06 iterations 321
Cbc0038I Pass  29: (8.74 seconds) suminf.   77.92180 (1173) obj. 1.41906e+06 iterations 234
Cbc0038I Pass  30: (8.90 seconds) suminf.   79.28993 (1173) obj. 1.41707e+06 iterations 541
Cbc0038I Pass  31: (9.03 seconds) suminf.   78.73677 (1161) obj. 1.41233e+06 iterations 365
Cbc0038I Pass  32: (9.11 seconds) suminf.   78.70552 (1196) obj. 1.41087e+06 iterations 195
Cbc0038I Pass  33: (9.26 seconds) suminf.   77.56768 (1152) obj. 1.42167e+06 iterations 459
Cbc0038I Pass  34: (9.36 seconds) suminf.   77.48287 (1182) obj. 1.41974e+06 iterations 330
Cbc0038I Pass  35: (9.50 seconds) suminf.   79.15807 (1168) obj. 1.41807e+06 iterations 449
Cbc0038I Pass  36: (9.59 seconds) suminf.   78.35508 (1189) obj. 1.41489e+06 iterations 276
Cbc0038I Pass  37: (9.74 seconds) suminf.   79.76675 (1153) obj. 1.41502e+06 iterations 514
Cbc0038I Pass  38: (9.88 seconds) suminf.   76.71617 (1160) obj. 1.43136e+06 iterations 459
Cbc0038I Pass  39: (9.98 seconds) suminf.   76.30460 (1190) obj. 1.44072e+06 iterations 303
Cbc0038I Pass  40: (10.26 seconds) suminf.   81.39173 (1163) obj. 1.40869e+06 iterations 943
Cbc0038I Pass  41: (10.40 seconds) suminf.   80.63267 (1187) obj. 1.41146e+06 iterations 453
Cbc0038I Pass  42: (10.46 seconds) suminf.   80.33775 (1119) obj. 1.41293e+06 iterations 157
Cbc0038I Pass  43: (10.70 seconds) suminf.   79.82874 (1113) obj. 1.42369e+06 iterations 934
Cbc0038I Pass  44: (10.78 seconds) suminf.   79.41226 (1085) obj. 1.42311e+06 iterations 263
Cbc0038I Pass  45: (10.96 seconds) suminf.   78.99627 (1139) obj. 1.41483e+06 iterations 648
Cbc0038I Pass  46: (11.02 seconds) suminf.   78.76610 (1132) obj. 1.41412e+06 iterations 182
Cbc0038I Pass  47: (11.15 seconds) suminf.   78.92095 (1116) obj. 1.42084e+06 iterations 433
Cbc0038I Pass  48: (11.26 seconds) suminf.   78.47844 (1132) obj. 1.41825e+06 iterations 293
Cbc0038I Pass  49: (11.48 seconds) suminf.   79.01008 (1098) obj. 1.40846e+06 iterations 793
Cbc0038I Pass  50: (11.64 seconds) suminf.   76.81042 (1151) obj. 1.42595e+06 iterations 447
Cbc0038I Pass  51: (11.89 seconds) suminf.   77.53257 (1094) obj. 1.41343e+06 iterations 874
Cbc0038I Pass  52: (12.04 seconds) suminf.   78.01940 (1128) obj. 1.41573e+06 iterations 443
Cbc0038I Pass  53: (12.29 seconds) suminf.   80.98585 (1127) obj. 1.3984e+06 iterations 917
Cbc0038I Pass  54: (12.44 seconds) suminf.   77.32612 (1135) obj. 1.39927e+06 iterations 534
Cbc0038I Pass  55: (12.48 seconds) suminf.   77.13828 (1143) obj. 1.39923e+06 iterations 90
Cbc0038I Pass  56: (12.68 seconds) suminf.   82.55772 (1113) obj. 1.41314e+06 iterations 773
Cbc0038I Pass  57: (12.80 seconds) suminf.   79.60152 (1106) obj. 1.4107e+06 iterations 380
Cbc0038I Pass  58: (12.98 seconds) suminf.   79.68403 (1113) obj. 1.4268e+06 iterations 686
Cbc0038I Pass  59: (13.09 seconds) suminf.   76.71825 (1138) obj. 1.42064e+06 iterations 357
Cbc0038I Pass  60: (13.26 seconds) suminf.   78.51162 (1081) obj. 1.41871e+06 iterations 631
Cbc0038I Pass  61: (13.40 seconds) suminf.   75.81076 (1105) obj. 1.41285e+06 iterations 514
Cbc0038I Pass  62: (13.60 seconds) suminf.   78.85173 (1131) obj. 1.4237e+06 iterations 714
Cbc0038I Pass  63: (13.74 seconds) suminf.   75.84977 (1126) obj. 1.42097e+06 iterations 405
Cbc0038I Pass  64: (13.92 seconds) suminf.   78.10200 (1145) obj. 1.41581e+06 iterations 619
Cbc0038I Pass  65: (14.05 seconds) suminf.   75.19528 (1127) obj. 1.41842e+06 iterations 396
Cbc0038I Pass  66: (14.23 seconds) suminf.   75.56084 (1187) obj. 1.42746e+06 iterations 561
Cbc0038I Pass  67: (14.35 seconds) suminf.   73.18807 (1175) obj. 1.42972e+06 iterations 343
Cbc0038I Pass  68: (14.55 seconds) suminf.   75.40830 (1167) obj. 1.4188e+06 iterations 608
Cbc0038I Pass  69: (14.99 seconds) suminf.  112.31427 (1040) obj. 1.81524e+06 iterations 1882
Cbc0038I Pass  70: (15.34 seconds) suminf.   82.43808 (1095) obj. 1.69643e+06 iterations 1570
Cbc0038I Pass  71: (15.45 seconds) suminf.   79.76594 (1098) obj. 1.69715e+06 iterations 374
Cbc0038I Pass  72: (15.50 seconds) suminf.   79.07553 (1080) obj. 1.69475e+06 iterations 130
Cbc0038I Pass  73: (15.81 seconds) suminf.   80.31853 (1150) obj. 1.69731e+06 iterations 1115
Cbc0038I Pass  74: (15.96 seconds) suminf.   79.06995 (1149) obj. 1.70026e+06 iterations 486
Cbc0038I Pass  75: (16.23 seconds) suminf.   83.56417 (1181) obj. 1.69828e+06 iterations 966
Cbc0038I Pass  76: (16.37 seconds) suminf.   82.55289 (1187) obj. 1.69498e+06 iterations 466
Cbc0038I Pass  77: (16.59 seconds) suminf.   80.41117 (1166) obj. 1.69888e+06 iterations 741
Cbc0038I Pass  78: (16.73 seconds) suminf.   78.97840 (1165) obj. 1.69908e+06 iterations 392
Cbc0038I Pass  79: (16.99 seconds) suminf.   77.41347 (1169) obj. 1.69408e+06 iterations 839
Cbc0038I Pass  80: (17.13 seconds) suminf.   77.82007 (1162) obj. 1.69161e+06 iterations 398
Cbc0038I Pass  81: (17.37 seconds) suminf.   82.08517 (1140) obj. 1.69828e+06 iterations 766
Cbc0038I Pass  82: (17.52 seconds) suminf.   78.26764 (1181) obj. 1.69967e+06 iterations 456
Cbc0038I Pass  83: (17.81 seconds) suminf.   78.16493 (1117) obj. 1.69304e+06 iterations 1011
Cbc0038I Pass  84: (17.92 seconds) suminf.   78.35094 (1173) obj. 1.69545e+06 iterations 340
Cbc0038I Pass  85: (18.15 seconds) suminf.   79.63257 (1121) obj. 1.70153e+06 iterations 796
Cbc0038I Pass  86: (18.35 seconds) suminf.   78.65372 (1133) obj. 1.6985e+06 iterations 527
Cbc0038I Pass  87: (18.61 seconds) suminf.   81.20737 (1096) obj. 1.6883e+06 iterations 850
Cbc0038I Pass  88: (18.76 seconds) suminf.   78.71997 (1144) obj. 1.69088e+06 iterations 412
Cbc0038I Pass  89: (19.00 seconds) suminf.   82.68973 (1101) obj. 1.69844e+06 iterations 772
Cbc0038I Pass  90: (19.10 seconds) suminf.   79.75508 (1113) obj. 1.70428e+06 iterations 308
Cbc0038I Pass  91: (19.19 seconds) suminf.   79.54651 (1109) obj. 1.70507e+06 iterations 265
Cbc0038I Pass  92: (19.43 seconds) suminf.   80.45654 (1118) obj. 1.69442e+06 iterations 698
Cbc0038I Pass  93: (19.54 seconds) suminf.   79.50680 (1105) obj. 1.6848e+06 iterations 347
Cbc0038I Pass  94: (19.78 seconds) suminf.   81.95777 (1100) obj. 1.70143e+06 iterations 783
Cbc0038I Pass  95: (19.91 seconds) suminf.   79.92626 (1127) obj. 1.70217e+06 iterations 434
Cbc0038I Pass  96: (20.10 seconds) suminf.   80.96774 (1126) obj. 1.69036e+06 iterations 662
Cbc0038I Pass  97: (20.60 seconds) suminf.  114.01328 (1092) obj. 1.741e+06 iterations 1968
Cbc0038I Pass  98: (20.88 seconds) suminf.   85.29713 (1135) obj. 1.7323e+06 iterations 1232
Cbc0038I Pass  99: (21.13 seconds) suminf.   83.04063 (1174) obj. 1.79484e+06 iterations 813
Cbc0038I Pass 100: (21.59 seconds) suminf.  102.55476 (1202) obj. 1.75513e+06 iterations 1876
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 253 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6511 rows 2202 columns, reduced to 5893 rows 1927 columns - too large
Cbc0038I Mini branch and bound did not improve solution (22.60 seconds)
Cbc0038I After 22.60 seconds - Feasibility pump exiting - took 19.29 seconds
Cbc0031I 125 added rows had average density of 10.848
Cbc0013I At root node, 125 cuts changed objective from 788417.94 to 802816 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.179 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 69.7 elements, 0 column cuts (0 active)  in 0.908 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 104 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.428 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 488 row cuts average 25.3 elements, 0 column cuts (0 active)  in 1.083 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 802816 (38.64 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 802821 (174.99 seconds)
Cbc0010I After 200 nodes, 17 on tree, 1e+50 best solution, best possible 802821 (285.53 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 802821 (376.80 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 802821 (478.62 seconds)
Cbc0010I After 500 nodes, 15 on tree, 1e+50 best solution, best possible 802821 (586.37 seconds)
Cbc0010I After 600 nodes, 25 on tree, 1e+50 best solution, best possible 802821 (677.69 seconds)
Cbc0010I After 700 nodes, 39 on tree, 1e+50 best solution, best possible 802821 (777.92 seconds)
Cbc0010I After 800 nodes, 36 on tree, 1e+50 best solution, best possible 802821 (867.59 seconds)
Cbc0010I After 900 nodes, 45 on tree, 1e+50 best solution, best possible 802821 (961.18 seconds)
Cbc0010I After 1000 nodes, 48 on tree, 1e+50 best solution, best possible 802821 (1033.77 seconds)
Cbc0010I After 1100 nodes, 56 on tree, 1e+50 best solution, best possible 802821 (1115.06 seconds)
Cbc0010I After 1200 nodes, 61 on tree, 1e+50 best solution, best possible 802821 (1180.67 seconds)
Cbc0010I After 1300 nodes, 64 on tree, 1e+50 best solution, best possible 802821 (1266.20 seconds)
Cbc0010I After 1400 nodes, 62 on tree, 1e+50 best solution, best possible 802821 (1369.10 seconds)
Cbc0010I After 1500 nodes, 68 on tree, 1e+50 best solution, best possible 802821 (1441.43 seconds)
Cbc0010I After 1600 nodes, 70 on tree, 1e+50 best solution, best possible 802821 (1525.81 seconds)
Cbc0010I After 1700 nodes, 68 on tree, 1e+50 best solution, best possible 802821 (1624.89 seconds)
Cbc0010I After 1800 nodes, 87 on tree, 1e+50 best solution, best possible 802821 (1692.26 seconds)
Cbc0010I After 1900 nodes, 77 on tree, 1e+50 best solution, best possible 802821 (1764.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 802821), took 3316160 iterations and 1946 nodes (1797.73 seconds)
Cbc0032I Strong branching done 20986 times (1770460 iterations), fathomed 288 nodes and fixed 2249 variables
Cbc0035I Maximum depth 133, 0 variables fixed on reduced cost
Cuts at root node changed objective from 788418 to 802816
Probing was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.179 seconds)
Gomory was tried 397 times and created 849 cuts of which 0 were active after adding rounds of cuts (5.825 seconds)
Knapsack was tried 397 times and created 2078 cuts of which 0 were active after adding rounds of cuts (0.670 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 397 times and created 6814 cuts of which 0 were active after adding rounds of cuts (1.915 seconds)
ZeroHalf was tried 397 times and created 1451 cuts of which 0 were active after adding rounds of cuts (30.722 seconds)
ImplicationCuts was tried 38 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    802821.000
Enumerated nodes:               1946
Total iterations:               3316160
Time (CPU seconds):             1797.73
Time (Wallclock seconds):       1801.18

Total time (CPU seconds):       1797.74   (Wallclock seconds):       1801.20

