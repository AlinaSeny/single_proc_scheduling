Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default35_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/default35_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 28672 - 0.16 seconds
Cgl0002I 118 variables fixed
Cgl0003I 0 fixed, 23 tightened bounds, 975 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 414 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 304 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 4131 rows, 1401 columns (1401 integer (1365 of which binary)) and 13767 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1401 objects (1401 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 597 integers unsatisfied sum - 127.367
Cbc0038I Pass   1: (0.66 seconds) suminf.    7.92556 (123) obj. 35049.7 iterations 1455
Cbc0038I Pass   2: (0.67 seconds) suminf.    7.27325 (119) obj. 35053 iterations 52
Cbc0038I Pass   3: (0.70 seconds) suminf.    3.92241 (63) obj. 39004.2 iterations 237
Cbc0038I Pass   4: (0.71 seconds) suminf.    3.72371 (55) obj. 38819.1 iterations 77
Cbc0038I Pass   5: (1.02 seconds) suminf.    0.00000 (0) obj. 34816 iterations 2511
Cbc0038I Solution found of 34816
Cbc0038I Cleaned solution of 34816
Cbc0038I Before mini branch and bound, 758 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.06 seconds)
Cbc0038I Round again with cutoff of 34200.7
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   6: (1.08 seconds) suminf.    8.59734 (133) obj. 34200 iterations 96
Cbc0038I Pass   7: (1.09 seconds) suminf.    7.65265 (147) obj. 34200.7 iterations 73
Cbc0038I Pass   8: (1.09 seconds) suminf.    7.59196 (145) obj. 34200.7 iterations 7
Cbc0038I Pass   9: (1.15 seconds) suminf.   10.51939 (85) obj. 34200.7 iterations 561
Cbc0038I Pass  10: (1.16 seconds) suminf.    9.30317 (75) obj. 34200.7 iterations 100
Cbc0038I Pass  11: (1.25 seconds) suminf.    1.72093 (31) obj. 34200.7 iterations 640
Cbc0038I Pass  12: (1.26 seconds) suminf.    1.22845 (28) obj. 34200.7 iterations 28
Cbc0038I Pass  13: (1.29 seconds) suminf.    3.66606 (36) obj. 34200.7 iterations 234
Cbc0038I Pass  14: (1.32 seconds) suminf.    2.12886 (31) obj. 34200.7 iterations 183
Cbc0038I Pass  15: (1.35 seconds) suminf.    1.55584 (28) obj. 34200.7 iterations 166
Cbc0038I Pass  16: (1.38 seconds) suminf.    1.44714 (29) obj. 34200.7 iterations 154
Cbc0038I Pass  17: (1.44 seconds) suminf.    4.61959 (38) obj. 34200.7 iterations 435
Cbc0038I Pass  18: (1.45 seconds) suminf.    2.27256 (38) obj. 34200.7 iterations 73
Cbc0038I Pass  19: (1.49 seconds) suminf.    1.56200 (35) obj. 34200.7 iterations 217
Cbc0038I Pass  20: (1.72 seconds) suminf.    1.44554 (29) obj. 34200.7 iterations 1647
Cbc0038I Pass  21: (1.73 seconds) suminf.    1.44554 (29) obj. 34200.7 iterations 2
Cbc0038I Pass  22: (1.78 seconds) suminf.    1.93667 (29) obj. 34200.7 iterations 489
Cbc0038I Pass  23: (1.79 seconds) suminf.    1.93667 (29) obj. 34200.7 iterations 3
Cbc0038I Pass  24: (1.81 seconds) suminf.    1.73196 (29) obj. 34200.7 iterations 124
Cbc0038I Pass  25: (1.82 seconds) suminf.    1.63789 (30) obj. 34200.7 iterations 95
Cbc0038I Pass  26: (1.85 seconds) suminf.    2.34021 (24) obj. 34200.7 iterations 190
Cbc0038I Pass  27: (1.85 seconds) suminf.    2.34021 (24) obj. 34200.7 iterations 1
Cbc0038I Pass  28: (1.89 seconds) suminf.    4.49258 (32) obj. 34200.7 iterations 249
Cbc0038I Pass  29: (1.91 seconds) suminf.    4.35731 (31) obj. 34200.7 iterations 87
Cbc0038I Pass  30: (2.06 seconds) suminf.    4.64725 (36) obj. 34200.7 iterations 1148
Cbc0038I Pass  31: (2.08 seconds) suminf.    4.01575 (36) obj. 34200.7 iterations 84
Cbc0038I Pass  32: (2.13 seconds) suminf.    1.57109 (28) obj. 34200.7 iterations 354
Cbc0038I Pass  33: (2.14 seconds) suminf.    1.57109 (28) obj. 34200.7 iterations 12
Cbc0038I Pass  34: (2.15 seconds) suminf.    2.68982 (27) obj. 34200.7 iterations 124
Cbc0038I Pass  35: (2.18 seconds) suminf.    1.64438 (20) obj. 34200.7 iterations 223
Cbc0038I Pass  36: (2.20 seconds) suminf.    1.44893 (17) obj. 34200.7 iterations 115
Cbc0038I Pass  37: (2.24 seconds) suminf.    4.80141 (30) obj. 34200.7 iterations 248
Cbc0038I Pass  38: (2.25 seconds) suminf.    3.32855 (29) obj. 34200.7 iterations 74
Cbc0038I Pass  39: (2.26 seconds) suminf.    4.32399 (32) obj. 34200.7 iterations 113
Cbc0038I Pass  40: (2.28 seconds) suminf.    2.20100 (31) obj. 34200.7 iterations 183
Cbc0038I Pass  41: (2.34 seconds) suminf.    3.15588 (31) obj. 34200.7 iterations 420
Cbc0038I Pass  42: (2.35 seconds) suminf.    3.03191 (30) obj. 34200.7 iterations 16
Cbc0038I Pass  43: (2.38 seconds) suminf.    1.77514 (27) obj. 34200.7 iterations 230
Cbc0038I Pass  44: (2.38 seconds) suminf.    1.56514 (27) obj. 34200.7 iterations 19
Cbc0038I Pass  45: (2.41 seconds) suminf.    2.60291 (27) obj. 34200.7 iterations 188
Cbc0038I Pass  46: (2.42 seconds) suminf.    2.47882 (32) obj. 34200.7 iterations 11
Cbc0038I Pass  47: (2.45 seconds) suminf.    4.21174 (26) obj. 34200.7 iterations 239
Cbc0038I Pass  48: (2.48 seconds) suminf.    3.98181 (26) obj. 34200.7 iterations 216
Cbc0038I Pass  49: (2.68 seconds) suminf.    1.55380 (46) obj. 34200.7 iterations 1819
Cbc0038I Pass  50: (2.68 seconds) suminf.    1.55380 (46) obj. 34200.7 iterations 7
Cbc0038I Pass  51: (2.89 seconds) suminf.    4.56069 (30) obj. 34200.7 iterations 1913
Cbc0038I Pass  52: (2.93 seconds) suminf.    1.50167 (13) obj. 34200.7 iterations 191
Cbc0038I Pass  53: (2.96 seconds) suminf.    3.32855 (29) obj. 34200.7 iterations 194
Cbc0038I Pass  54: (2.99 seconds) suminf.    4.58699 (26) obj. 34200.7 iterations 210
Cbc0038I Pass  55: (3.01 seconds) suminf.    4.35731 (31) obj. 34200.7 iterations 151
Cbc0038I Pass  56: (3.03 seconds) suminf.    4.66248 (34) obj. 34200.7 iterations 206
Cbc0038I Pass  57: (3.04 seconds) suminf.    4.04601 (30) obj. 34200.7 iterations 86
Cbc0038I Pass  58: (3.07 seconds) suminf.    2.59520 (35) obj. 34200.7 iterations 353
Cbc0038I Pass  59: (3.09 seconds) suminf.    5.09053 (40) obj. 34200.7 iterations 204
Cbc0038I Pass  60: (3.10 seconds) suminf.    4.64877 (35) obj. 34200.7 iterations 90
Cbc0038I Pass  61: (3.13 seconds) suminf.    2.25225 (34) obj. 34200.7 iterations 205
Cbc0038I Pass  62: (3.13 seconds) suminf.    2.25225 (34) obj. 34200.7 iterations 4
Cbc0038I Pass  63: (3.25 seconds) suminf.    2.41124 (30) obj. 34200.7 iterations 1196
Cbc0038I Pass  64: (3.25 seconds) suminf.    2.40388 (32) obj. 34200.7 iterations 4
Cbc0038I Pass  65: (3.27 seconds) suminf.    1.69085 (23) obj. 34200.7 iterations 182
Cbc0038I Pass  66: (3.29 seconds) suminf.    1.61944 (24) obj. 34200.7 iterations 74
Cbc0038I Pass  67: (3.34 seconds) suminf.    2.88244 (29) obj. 34200.7 iterations 599
Cbc0038I Pass  68: (3.35 seconds) suminf.    2.31948 (23) obj. 34200.7 iterations 66
Cbc0038I Pass  69: (3.38 seconds) suminf.    4.11209 (25) obj. 34200.7 iterations 171
Cbc0038I Pass  70: (3.39 seconds) suminf.    3.99789 (26) obj. 34200.7 iterations 85
Cbc0038I Pass  71: (3.49 seconds) suminf.    3.04163 (32) obj. 34200.7 iterations 1008
Cbc0038I Pass  72: (3.50 seconds) suminf.    2.74400 (32) obj. 34200.7 iterations 50
Cbc0038I Pass  73: (3.52 seconds) suminf.    1.44714 (29) obj. 34200.7 iterations 184
Cbc0038I Pass  74: (3.53 seconds) suminf.    1.44714 (29) obj. 34200.7 iterations 7
Cbc0038I Pass  75: (3.60 seconds) suminf.    3.80062 (38) obj. 34200.7 iterations 647
Cbc0038I Pass  76: (3.62 seconds) suminf.    1.49223 (44) obj. 34200.7 iterations 224
Cbc0038I No solution found this major pass
Cbc0038I After 3.62 seconds - Feasibility pump exiting with objective of 34816 - took 3.15 seconds
Cbc0012I Integer solution of 34816 found by feasibility pump after 0 iterations and 0 nodes (3.62 seconds)
Cbc0031I 39 added rows had average density of 10.307692
Cbc0013I At root node, 39 cuts changed objective from 28672 to 28672 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 4.8 elements, 4 column cuts (4 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.322 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 58 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 34816 best solution, best possible 28672 (7.73 seconds)
Cbc0010I After 100 nodes, 4 on tree, 34816 best solution, best possible 28682 (98.14 seconds)
Cbc0010I After 200 nodes, 3 on tree, 34816 best solution, best possible 28682 (154.59 seconds)
Cbc0010I After 300 nodes, 3 on tree, 34816 best solution, best possible 28682 (219.15 seconds)
Cbc0010I After 400 nodes, 2 on tree, 34816 best solution, best possible 28687 (297.92 seconds)
Cbc0010I After 500 nodes, 3 on tree, 34816 best solution, best possible 28687 (364.76 seconds)
Cbc0010I After 600 nodes, 4 on tree, 34816 best solution, best possible 28687 (432.74 seconds)
Cbc0010I After 700 nodes, 5 on tree, 34816 best solution, best possible 28687 (501.39 seconds)
Cbc0010I After 800 nodes, 4 on tree, 34816 best solution, best possible 28844 (573.77 seconds)
Cbc0010I After 900 nodes, 3 on tree, 34816 best solution, best possible 28888 (652.42 seconds)
Cbc0010I After 1000 nodes, 2 on tree, 34816 best solution, best possible 28888 (739.07 seconds)
Cbc0010I After 1100 nodes, 2 on tree, 34816 best solution, best possible 28888 (795.29 seconds)
Cbc0010I After 1200 nodes, 2 on tree, 34816 best solution, best possible 28888 (867.79 seconds)
Cbc0010I After 1300 nodes, 2 on tree, 34816 best solution, best possible 28888 (947.15 seconds)
Cbc0010I After 1400 nodes, 2 on tree, 34816 best solution, best possible 28888 (1022.70 seconds)
Cbc0010I After 1500 nodes, 3 on tree, 34816 best solution, best possible 28888 (1101.11 seconds)
Cbc0010I After 1600 nodes, 2 on tree, 34816 best solution, best possible 28888 (1175.16 seconds)
Cbc0010I After 1700 nodes, 2 on tree, 34816 best solution, best possible 28888 (1239.58 seconds)
Cbc0010I After 1800 nodes, 2 on tree, 34816 best solution, best possible 28888 (1306.65 seconds)
Cbc0010I After 1900 nodes, 2 on tree, 34816 best solution, best possible 28888 (1389.90 seconds)
Cbc0010I After 2000 nodes, 3 on tree, 34816 best solution, best possible 28888 (1471.00 seconds)
Cbc0010I After 2100 nodes, 2 on tree, 34816 best solution, best possible 28888 (1543.75 seconds)
Cbc0010I After 2200 nodes, 2 on tree, 34816 best solution, best possible 28888 (1620.77 seconds)
Cbc0010I After 2300 nodes, 2 on tree, 34816 best solution, best possible 28888 (1703.33 seconds)
Cbc0010I After 2400 nodes, 2 on tree, 34816 best solution, best possible 28888 (1777.73 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 34816 (best possible 28888), took 7167231 iterations and 2424 nodes (1801.03 seconds)
Cbc0032I Strong branching done 6848 times (490426 iterations), fathomed 964 nodes and fixed 470 variables
Cbc0035I Maximum depth 977, 13 variables fixed on reduced cost
Cuts at root node changed objective from 28672 to 28672
Probing was tried 513 times and created 35625 cuts of which 0 were active after adding rounds of cuts (2.955 seconds)
Gomory was tried 456 times and created 80 cuts of which 0 were active after adding rounds of cuts (2.821 seconds)
Knapsack was tried 456 times and created 2487 cuts of which 0 were active after adding rounds of cuts (0.537 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 10 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
ImplicationCuts was tried 73 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

Objective value:                34816.00000000
Lower bound:                    28888.000
Gap:                            0.21
Enumerated nodes:               2424
Total iterations:               7167231
Time (CPU seconds):             1801.17
Time (Wallclock seconds):       1807.85

Total time (CPU seconds):       1801.18   (Wallclock seconds):       1807.87

