Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang7_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang7_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 224.703 - 0.30 seconds
Cgl0002I 115 variables fixed
Cgl0003I 0 fixed, 15 tightened bounds, 529 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 398 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 215 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 81 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2708 rows, 939 columns (939 integer (910 of which binary)) and 9034 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 939 objects (939 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 494 integers unsatisfied sum - 131.693
Cbc0038I Pass   1: suminf.   70.35863 (376) obj. 307.145 iterations 939
Cbc0038I Pass   2: suminf.   58.88456 (429) obj. 341.553 iterations 437
Cbc0038I Pass   3: suminf.   52.69701 (416) obj. 346.323 iterations 114
Cbc0038I Pass   4: suminf.   52.41976 (426) obj. 346.371 iterations 67
Cbc0038I Pass   5: suminf.   51.50008 (420) obj. 346.615 iterations 145
Cbc0038I Pass   6: suminf.   49.84613 (426) obj. 345.555 iterations 76
Cbc0038I Pass   7: suminf.   46.64914 (444) obj. 368.792 iterations 494
Cbc0038I Pass   8: suminf.   44.32600 (441) obj. 383.587 iterations 386
Cbc0038I Pass   9: suminf.   43.92308 (427) obj. 382.711 iterations 344
Cbc0038I Pass  10: suminf.   42.92893 (454) obj. 380.08 iterations 238
Cbc0038I Pass  11: suminf.   43.70874 (451) obj. 388.951 iterations 130
Cbc0038I Pass  12: suminf.   46.78691 (386) obj. 380.932 iterations 409
Cbc0038I Pass  13: suminf.   43.13908 (392) obj. 380.811 iterations 164
Cbc0038I Pass  14: suminf.   41.74869 (393) obj. 380.804 iterations 49
Cbc0038I Pass  15: suminf.   41.20214 (387) obj. 380.953 iterations 252
Cbc0038I Pass  16: suminf.   40.60691 (390) obj. 381.223 iterations 73
Cbc0038I Pass  17: suminf.   42.44228 (397) obj. 382.078 iterations 114
Cbc0038I Pass  18: suminf.   43.15477 (401) obj. 381.325 iterations 86
Cbc0038I Pass  19: suminf.   44.73045 (380) obj. 381.237 iterations 222
Cbc0038I Pass  20: suminf.   42.50744 (395) obj. 381.22 iterations 156
Cbc0038I Pass  21: suminf.   40.04126 (393) obj. 380.163 iterations 245
Cbc0038I Pass  22: suminf.   41.54688 (412) obj. 380.267 iterations 64
Cbc0038I Pass  23: suminf.   42.32181 (388) obj. 381.048 iterations 108
Cbc0038I Pass  24: suminf.   41.66456 (396) obj. 381.914 iterations 119
Cbc0038I Pass  25: suminf.   43.61422 (383) obj. 379.681 iterations 244
Cbc0038I Pass  26: suminf.   43.15477 (401) obj. 381.325 iterations 121
Cbc0038I Pass  27: suminf.   42.62592 (396) obj. 382.168 iterations 161
Cbc0038I Pass  28: suminf.   72.91037 (439) obj. 505.913 iterations 950
Cbc0038I Pass  29: suminf.   51.72476 (413) obj. 496.494 iterations 463
Cbc0038I Pass  30: suminf.   48.72235 (422) obj. 517.704 iterations 223
Cbc0038I Pass  31: suminf.   48.60668 (420) obj. 523.745 iterations 12
Cbc0038I Pass  32: suminf.   46.66904 (401) obj. 488.204 iterations 461
Cbc0038I Pass  33: suminf.   44.93375 (401) obj. 489.35 iterations 169
Cbc0038I Pass  34: suminf.   45.98918 (399) obj. 487.932 iterations 61
Cbc0038I Pass  35: suminf.   46.56960 (381) obj. 482.704 iterations 190
Cbc0038I Pass  36: suminf.   46.32850 (371) obj. 485.532 iterations 121
Cbc0038I Pass  37: suminf.   47.10597 (351) obj. 486.56 iterations 190
Cbc0038I Pass  38: suminf.   44.55771 (352) obj. 482.868 iterations 121
Cbc0038I Pass  39: suminf.   43.44017 (354) obj. 483.03 iterations 26
Cbc0038I Pass  40: suminf.   44.55226 (360) obj. 482.031 iterations 213
Cbc0038I Pass  41: suminf.   43.95559 (371) obj. 482.449 iterations 30
Cbc0038I Pass  42: suminf.   44.17103 (373) obj. 472.561 iterations 277
Cbc0038I Pass  43: suminf.   41.53407 (362) obj. 471.839 iterations 129
Cbc0038I Pass  44: suminf.   39.29079 (323) obj. 436.948 iterations 349
Cbc0038I Pass  45: suminf.   36.11370 (311) obj. 437.647 iterations 148
Cbc0038I Pass  46: suminf.   35.21064 (305) obj. 440.824 iterations 124
Cbc0038I Pass  47: suminf.   35.93603 (293) obj. 441.185 iterations 193
Cbc0038I Pass  48: suminf.   35.08733 (292) obj. 440.986 iterations 72
Cbc0038I Pass  49: suminf.   34.28324 (320) obj. 437.129 iterations 275
Cbc0038I Pass  50: suminf.   33.22039 (326) obj. 437.135 iterations 65
Cbc0038I Pass  51: suminf.   32.53947 (325) obj. 440.313 iterations 55
Cbc0038I Pass  52: suminf.   32.53622 (333) obj. 440.579 iterations 94
Cbc0038I Pass  53: suminf.   31.85626 (328) obj. 440.676 iterations 115
Cbc0038I Pass  54: suminf.   31.69863 (245) obj. 492.375 iterations 309
Cbc0038I Pass  55: suminf.   31.39171 (247) obj. 492.673 iterations 84
Cbc0038I Pass  56: suminf.   30.62271 (219) obj. 494.703 iterations 243
Cbc0038I Pass  57: suminf.   30.05903 (214) obj. 497.657 iterations 54
Cbc0038I Pass  58: suminf.   29.31587 (213) obj. 497.648 iterations 13
Cbc0038I Pass  59: suminf.   26.17600 (208) obj. 497.041 iterations 186
Cbc0038I Pass  60: suminf.   25.52416 (206) obj. 497.04 iterations 41
Cbc0038I Pass  61: suminf.   26.31742 (205) obj. 497.04 iterations 49
Cbc0038I Pass  62: suminf.   28.18270 (207) obj. 497.384 iterations 195
Cbc0038I Pass  63: suminf.   26.76847 (200) obj. 497.216 iterations 39
Cbc0038I Pass  64: suminf.   26.70799 (200) obj. 497.218 iterations 34
Cbc0038I Pass  65: suminf.   24.84521 (208) obj. 517.566 iterations 214
Cbc0038I Pass  66: suminf.   20.09537 (190) obj. 527.215 iterations 282
Cbc0038I Pass  67: suminf.   19.60795 (182) obj. 486.916 iterations 256
Cbc0038I Pass  68: suminf.   18.40515 (195) obj. 482.823 iterations 147
Cbc0038I Pass  69: suminf.   17.80347 (125) obj. 496.417 iterations 327
Cbc0038I Pass  70: suminf.   13.15718 (134) obj. 532.404 iterations 131
Cbc0038I Pass  71: suminf.   12.86180 (119) obj. 532.427 iterations 23
Cbc0038I Pass  72: suminf.    9.41739 (132) obj. 532.431 iterations 194
Cbc0038I Pass  73: suminf.    9.43733 (108) obj. 532.433 iterations 17
Cbc0038I Pass  74: suminf.    7.48157 (69) obj. 457 iterations 619
Cbc0038I Pass  75: suminf.    7.34319 (65) obj. 457 iterations 36
Cbc0038I Pass  76: suminf.    5.58400 (48) obj. 457 iterations 483
Cbc0038I Pass  77: suminf.    0.89544 (27) obj. 457 iterations 9
Cbc0038I Pass  78: suminf.    0.89544 (27) obj. 457 iterations 21
Cbc0038I Pass  79: suminf.    1.05669 (21) obj. 457 iterations 50
Cbc0038I Pass  80: suminf.    0.58165 (19) obj. 457 iterations 81
Cbc0038I Pass  81: suminf.    0.81433 (26) obj. 457 iterations 124
Cbc0038I Pass  82: suminf.    0.99717 (19) obj. 457 iterations 51
Cbc0038I Pass  83: suminf.    0.92102 (18) obj. 457 iterations 5
Cbc0038I Pass  84: suminf.    0.00000 (0) obj. 457 iterations 24
Cbc0038I Solution found of 457
Cbc0038I Cleaned solution of 457
Cbc0038I Before mini branch and bound, 84 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.82 seconds)
Cbc0038I Round again with cutoff of 432.88
Cbc0038I Pass  85: suminf.   70.35863 (376) obj. 307.145 iterations 0
Cbc0038I Pass  86: suminf.   58.88456 (429) obj. 341.553 iterations 401
Cbc0038I Pass  87: suminf.   52.69701 (416) obj. 346.323 iterations 128
Cbc0038I Pass  88: suminf.   52.41976 (426) obj. 346.371 iterations 61
Cbc0038I Pass  89: suminf.   51.50008 (420) obj. 346.615 iterations 117
Cbc0038I Pass  90: suminf.   49.84613 (426) obj. 345.555 iterations 81
Cbc0038I Pass  91: suminf.   47.50231 (457) obj. 353.056 iterations 298
Cbc0038I Pass  92: suminf.   48.16189 (459) obj. 355.712 iterations 55
Cbc0038I Pass  93: suminf.   49.01884 (465) obj. 357.389 iterations 126
Cbc0038I Pass  94: suminf.   50.26523 (468) obj. 361.311 iterations 86
Cbc0038I Pass  95: suminf.   43.20270 (486) obj. 368.091 iterations 362
Cbc0038I Pass  96: suminf.   42.92189 (488) obj. 370.083 iterations 16
Cbc0038I Pass  97: suminf.   45.20319 (462) obj. 363.505 iterations 247
Cbc0038I Pass  98: suminf.   42.62790 (460) obj. 364.063 iterations 103
Cbc0038I Pass  99: suminf.   43.30365 (446) obj. 365.429 iterations 192
Cbc0038I Pass 100: suminf.   41.61959 (477) obj. 366.265 iterations 273
Cbc0038I Pass 101: suminf.   46.82800 (455) obj. 363.684 iterations 307
Cbc0038I Pass 102: suminf.   39.65107 (469) obj. 363.879 iterations 220
Cbc0038I Pass 103: suminf.   39.76231 (472) obj. 365.177 iterations 80
Cbc0038I Pass 104: suminf.   38.94633 (491) obj. 366.946 iterations 143
Cbc0038I Pass 105: suminf.   44.71438 (454) obj. 361.019 iterations 295
Cbc0038I Pass 106: suminf.   40.25420 (490) obj. 367.125 iterations 315
Cbc0038I Pass 107: suminf.   36.85368 (493) obj. 365.235 iterations 133
Cbc0038I Pass 108: suminf.   43.79705 (468) obj. 363.926 iterations 265
Cbc0038I Pass 109: suminf.   72.06700 (513) obj. 432.88 iterations 903
Cbc0038I Pass 110: suminf.   43.44353 (515) obj. 432.88 iterations 634
Cbc0038I Pass 111: suminf.   42.30745 (521) obj. 432.88 iterations 166
Cbc0038I Pass 112: suminf.   42.63305 (528) obj. 432.88 iterations 61
Cbc0038I Pass 113: suminf.   42.24642 (528) obj. 432.88 iterations 3
Cbc0038I Pass 114: suminf.   47.31661 (501) obj. 432.88 iterations 285
Cbc0038I Pass 115: suminf.   44.02891 (503) obj. 432.88 iterations 216
Cbc0038I Pass 116: suminf.   43.77471 (503) obj. 432.88 iterations 92
Cbc0038I Pass 117: suminf.   43.07426 (490) obj. 432.88 iterations 365
Cbc0038I Pass 118: suminf.   39.49369 (527) obj. 432.88 iterations 230
Cbc0038I Pass 119: suminf.   43.30018 (515) obj. 432.88 iterations 314
Cbc0038I Pass 120: suminf.   42.29093 (515) obj. 432.88 iterations 207
Cbc0038I Pass 121: suminf.   41.91654 (516) obj. 432.88 iterations 37
Cbc0038I Pass 122: suminf.   41.43428 (503) obj. 432.88 iterations 350
Cbc0038I Pass 123: suminf.   43.27435 (506) obj. 432.88 iterations 187
Cbc0038I Pass 124: suminf.   45.19202 (494) obj. 432.88 iterations 152
Cbc0038I Pass 125: suminf.   43.93735 (505) obj. 432.88 iterations 189
Cbc0038I Pass 126: suminf.   42.84524 (499) obj. 432.88 iterations 168
Cbc0038I Pass 127: suminf.   45.89436 (511) obj. 432.88 iterations 302
Cbc0038I Pass 128: suminf.   42.76047 (519) obj. 432.88 iterations 281
Cbc0038I Pass 129: suminf.   42.55191 (499) obj. 432.88 iterations 185
Cbc0038I Pass 130: suminf.   84.91907 (517) obj. 432.88 iterations 721
Cbc0038I Pass 131: suminf.   51.33349 (491) obj. 432.88 iterations 513
Cbc0038I Pass 132: suminf.   47.35395 (486) obj. 432.88 iterations 224
Cbc0038I Pass 133: suminf.   45.31436 (506) obj. 432.88 iterations 197
Cbc0038I Pass 134: suminf.   42.18784 (493) obj. 432.88 iterations 382
Cbc0038I Pass 135: suminf.   44.24790 (484) obj. 432.88 iterations 304
Cbc0038I Pass 136: suminf.   41.81474 (469) obj. 432.88 iterations 261
Cbc0038I Pass 137: suminf.   43.24172 (480) obj. 432.88 iterations 228
Cbc0038I Pass 138: suminf.   44.14141 (468) obj. 432.88 iterations 350
Cbc0038I Pass 139: suminf.   39.69374 (481) obj. 432.88 iterations 267
Cbc0038I Pass 140: suminf.   39.68466 (481) obj. 432.88 iterations 22
Cbc0038I Pass 141: suminf.   40.74480 (477) obj. 432.88 iterations 298
Cbc0038I Pass 142: suminf.   41.68384 (478) obj. 432.88 iterations 179
Cbc0038I Pass 143: suminf.   41.03735 (477) obj. 432.88 iterations 277
Cbc0038I Pass 144: suminf.   40.08726 (483) obj. 432.88 iterations 125
Cbc0038I Pass 145: suminf.   39.77228 (489) obj. 432.88 iterations 286
Cbc0038I Pass 146: suminf.   40.36490 (499) obj. 432.88 iterations 165
Cbc0038I Pass 147: suminf.   37.56961 (482) obj. 431.416 iterations 118
Cbc0038I Pass 148: suminf.   41.46485 (499) obj. 431.024 iterations 265
Cbc0038I Pass 149: suminf.   39.49240 (502) obj. 423.417 iterations 131
Cbc0038I Pass 150: suminf.   38.27927 (481) obj. 425.235 iterations 101
Cbc0038I Pass 151: suminf.   36.95699 (486) obj. 432.88 iterations 278
Cbc0038I Pass 152: suminf.   38.84503 (488) obj. 432.88 iterations 133
Cbc0038I Pass 153: suminf.   37.78789 (469) obj. 432.88 iterations 283
Cbc0038I Pass 154: suminf.   40.44718 (476) obj. 432.88 iterations 142
Cbc0038I Pass 155: suminf.   40.61277 (474) obj. 432.88 iterations 303
Cbc0038I Pass 156: suminf.   43.04278 (484) obj. 432.88 iterations 154
Cbc0038I Pass 157: suminf.   38.15052 (468) obj. 432.88 iterations 215
Cbc0038I Pass 158: suminf.   37.79633 (495) obj. 432.88 iterations 107
Cbc0038I Pass 159: suminf.   39.07452 (497) obj. 432.88 iterations 121
Cbc0038I Pass 160: suminf.   39.37144 (499) obj. 432.88 iterations 206
Cbc0038I Pass 161: suminf.   37.15989 (497) obj. 432.88 iterations 231
Cbc0038I Pass 162: suminf.   41.18926 (485) obj. 432.88 iterations 277
Cbc0038I Pass 163: suminf.   40.59470 (487) obj. 432.88 iterations 128
Cbc0038I Pass 164: suminf.   39.40568 (513) obj. 432.88 iterations 200
Cbc0038I Pass 165: suminf.   38.74416 (520) obj. 432.88 iterations 215
Cbc0038I Pass 166: suminf.   41.44663 (470) obj. 432.88 iterations 331
Cbc0038I Pass 167: suminf.   40.16669 (494) obj. 432.88 iterations 235
Cbc0038I Pass 168: suminf.   39.25591 (489) obj. 432.88 iterations 74
Cbc0038I Pass 169: suminf.   39.46285 (483) obj. 432.88 iterations 237
Cbc0038I Pass 170: suminf.   42.52974 (505) obj. 432.88 iterations 213
Cbc0038I Pass 171: suminf.   38.92184 (487) obj. 432.88 iterations 178
Cbc0038I Pass 172: suminf.   38.14628 (475) obj. 432.88 iterations 129
Cbc0038I Pass 173: suminf.   41.23053 (492) obj. 432.88 iterations 240
Cbc0038I Pass 174: suminf.   41.24119 (483) obj. 432.88 iterations 226
Cbc0038I Pass 175: suminf.   41.55348 (485) obj. 432.88 iterations 58
Cbc0038I Pass 176: suminf.   41.84425 (487) obj. 432.88 iterations 54
Cbc0038I Pass 177: suminf.   38.01115 (478) obj. 432.88 iterations 256
Cbc0038I Pass 178: suminf.   39.48289 (492) obj. 432.88 iterations 188
Cbc0038I Pass 179: suminf.   39.73115 (473) obj. 432.88 iterations 264
Cbc0038I Pass 180: suminf.   40.37872 (484) obj. 432.88 iterations 226
Cbc0038I Pass 181: suminf.   38.53315 (485) obj. 432.88 iterations 131
Cbc0038I Pass 182: suminf.   38.94819 (488) obj. 432.88 iterations 229
Cbc0038I Pass 183: suminf.   40.29430 (484) obj. 432.88 iterations 226
Cbc0038I Pass 184: suminf.   71.61753 (513) obj. 432.88 iterations 733
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (6.27 seconds)
Cbc0038I After 6.27 seconds - Feasibility pump exiting with objective of 457 - took 5.61 seconds
Cbc0012I Integer solution of 457 found by feasibility pump after 0 iterations and 0 nodes (6.27 seconds)
Cbc0031I 78 added rows had average density of 54.307692
Cbc0013I At root node, 78 cuts changed objective from 224.79628 to 247.97898 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 329 row cuts average 469.6 elements, 0 column cuts (0 active)  in 0.458 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 315 row cuts average 14.3 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 141 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.376 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 457 best solution, best possible 248 (11.29 seconds)
Cbc0010I After 100 nodes, 3 on tree, 457 best solution, best possible 280 (49.97 seconds)
Cbc0010I After 200 nodes, 2 on tree, 457 best solution, best possible 291 (75.24 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 484 rows 157 columns
Cbc0010I After 300 nodes, 13 on tree, 457 best solution, best possible 296 (97.02 seconds)
Cbc0010I After 400 nodes, 43 on tree, 457 best solution, best possible 296 (115.00 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 767 rows 224 columns
Cbc0010I After 500 nodes, 63 on tree, 457 best solution, best possible 296 (134.68 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 630 rows 193 columns
Cbc0010I After 600 nodes, 81 on tree, 457 best solution, best possible 296 (153.25 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 372 rows 120 columns
Cbc0010I After 700 nodes, 92 on tree, 457 best solution, best possible 296 (169.32 seconds)
Cbc0010I After 800 nodes, 105 on tree, 457 best solution, best possible 296 (186.94 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 463 rows 144 columns
Cbc0010I After 900 nodes, 130 on tree, 457 best solution, best possible 296 (196.34 seconds)
Cbc0010I After 1000 nodes, 135 on tree, 457 best solution, best possible 296 (205.65 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 370 rows 118 columns
Cbc0010I After 1100 nodes, 119 on tree, 457 best solution, best possible 296 (216.38 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 456 rows 142 columns
Cbc0010I After 1200 nodes, 104 on tree, 457 best solution, best possible 296 (229.71 seconds)
Cbc0010I After 1300 nodes, 104 on tree, 457 best solution, best possible 296 (244.97 seconds)
Cbc0010I After 1400 nodes, 103 on tree, 457 best solution, best possible 296 (258.07 seconds)
Cbc0010I After 1500 nodes, 96 on tree, 457 best solution, best possible 296 (268.99 seconds)
Cbc0010I After 1600 nodes, 90 on tree, 457 best solution, best possible 296 (279.24 seconds)
Cbc0010I After 1700 nodes, 75 on tree, 457 best solution, best possible 296 (290.90 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 554 rows 158 columns
Cbc0010I After 1800 nodes, 64 on tree, 457 best solution, best possible 296 (302.75 seconds)
Cbc0010I After 1900 nodes, 63 on tree, 457 best solution, best possible 296 (314.24 seconds)
Cbc0010I After 2000 nodes, 57 on tree, 457 best solution, best possible 296 (326.24 seconds)
Cbc0010I After 2100 nodes, 55 on tree, 457 best solution, best possible 296 (333.51 seconds)
Cbc0010I After 2200 nodes, 44 on tree, 457 best solution, best possible 296 (345.52 seconds)
Cbc0010I After 2300 nodes, 46 on tree, 457 best solution, best possible 296 (355.86 seconds)
Cbc0010I After 2400 nodes, 36 on tree, 457 best solution, best possible 296 (368.03 seconds)
Cbc0010I After 2500 nodes, 43 on tree, 457 best solution, best possible 296 (374.96 seconds)
Cbc0010I After 2600 nodes, 42 on tree, 457 best solution, best possible 296 (385.49 seconds)
Cbc0010I After 2700 nodes, 38 on tree, 457 best solution, best possible 296 (394.18 seconds)
Cbc0010I After 2800 nodes, 27 on tree, 457 best solution, best possible 296 (406.34 seconds)
Cbc0010I After 2900 nodes, 21 on tree, 457 best solution, best possible 296 (420.60 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 716 rows 224 columns
Cbc0010I After 3000 nodes, 15 on tree, 457 best solution, best possible 296 (433.01 seconds)
Cbc0010I After 3100 nodes, 11 on tree, 457 best solution, best possible 296 (445.86 seconds)
Cbc0010I After 3200 nodes, 13 on tree, 457 best solution, best possible 296 (459.36 seconds)
Cbc0010I After 3300 nodes, 6 on tree, 457 best solution, best possible 296 (471.98 seconds)
Cbc0010I After 3400 nodes, 12 on tree, 457 best solution, best possible 296 (482.95 seconds)
Cbc0010I After 3500 nodes, 15 on tree, 457 best solution, best possible 296 (492.03 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 652 rows 205 columns
Cbc0010I After 3600 nodes, 9 on tree, 457 best solution, best possible 296 (502.53 seconds)
Cbc0010I After 3700 nodes, 4 on tree, 457 best solution, best possible 296 (510.33 seconds)
Cbc0010I After 3800 nodes, 17 on tree, 457 best solution, best possible 296 (517.95 seconds)
Cbc0010I After 3900 nodes, 23 on tree, 457 best solution, best possible 296 (526.54 seconds)
Cbc0010I After 4000 nodes, 17 on tree, 457 best solution, best possible 296 (538.20 seconds)
Cbc0010I After 4100 nodes, 23 on tree, 457 best solution, best possible 296 (549.36 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 472 rows 151 columns
Cbc0010I After 4200 nodes, 11 on tree, 457 best solution, best possible 296 (557.29 seconds)
Cbc0010I After 4300 nodes, 24 on tree, 457 best solution, best possible 296 (566.62 seconds)
Cbc0010I After 4400 nodes, 13 on tree, 457 best solution, best possible 296 (576.27 seconds)
Cbc0010I After 4500 nodes, 18 on tree, 457 best solution, best possible 296 (582.63 seconds)
Cbc0010I After 4600 nodes, 16 on tree, 457 best solution, best possible 296 (591.04 seconds)
Cbc0010I After 4700 nodes, 9 on tree, 457 best solution, best possible 296 (598.54 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 463 rows 149 columns
Cbc0010I After 4800 nodes, 9 on tree, 457 best solution, best possible 296 (606.51 seconds)
Cbc0010I After 4900 nodes, 12 on tree, 457 best solution, best possible 296 (616.67 seconds)
Cbc0010I After 5000 nodes, 13 on tree, 457 best solution, best possible 296 (623.05 seconds)
Cbc0010I After 5100 nodes, 7 on tree, 457 best solution, best possible 296 (633.81 seconds)
Cbc0010I After 5200 nodes, 15 on tree, 457 best solution, best possible 296 (644.01 seconds)
Cbc0010I After 5300 nodes, 7 on tree, 457 best solution, best possible 296 (653.40 seconds)
Cbc0010I After 5400 nodes, 13 on tree, 457 best solution, best possible 296 (659.28 seconds)
Cbc0010I After 5500 nodes, 18 on tree, 457 best solution, best possible 296 (664.97 seconds)
Cbc0010I After 5600 nodes, 18 on tree, 457 best solution, best possible 296 (668.35 seconds)
Cbc0010I After 5700 nodes, 25 on tree, 457 best solution, best possible 296 (673.83 seconds)
Cbc0010I After 5800 nodes, 22 on tree, 457 best solution, best possible 296 (677.68 seconds)
Cbc0010I After 5900 nodes, 9 on tree, 457 best solution, best possible 296 (683.22 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 512 rows 164 columns
Cbc0010I After 6000 nodes, 21 on tree, 457 best solution, best possible 296 (692.08 seconds)
Cbc0010I After 6100 nodes, 23 on tree, 457 best solution, best possible 296 (698.91 seconds)
Cbc0010I After 6200 nodes, 30 on tree, 457 best solution, best possible 296 (705.33 seconds)
Cbc0010I After 6300 nodes, 18 on tree, 457 best solution, best possible 296 (713.78 seconds)
Cbc0010I After 6400 nodes, 21 on tree, 457 best solution, best possible 296 (719.29 seconds)
Cbc0010I After 6500 nodes, 12 on tree, 457 best solution, best possible 296 (725.70 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 502 rows 157 columns
Cbc0010I After 6600 nodes, 17 on tree, 457 best solution, best possible 296 (735.40 seconds)
Cbc0010I After 6700 nodes, 26 on tree, 457 best solution, best possible 296 (742.46 seconds)
Cbc0010I After 6800 nodes, 25 on tree, 457 best solution, best possible 296 (750.34 seconds)
Cbc0010I After 6900 nodes, 19 on tree, 457 best solution, best possible 296 (758.42 seconds)
Cbc0010I After 7000 nodes, 12 on tree, 457 best solution, best possible 296 (763.80 seconds)
Cbc0010I After 7100 nodes, 21 on tree, 457 best solution, best possible 296 (773.46 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 464 rows 144 columns
Cbc0010I After 7200 nodes, 17 on tree, 457 best solution, best possible 296 (780.32 seconds)
Cbc0010I After 7300 nodes, 12 on tree, 457 best solution, best possible 296 (788.96 seconds)
Cbc0010I After 7400 nodes, 23 on tree, 457 best solution, best possible 296 (795.41 seconds)
Cbc0010I After 7500 nodes, 34 on tree, 457 best solution, best possible 296 (801.71 seconds)
Cbc0010I After 7600 nodes, 28 on tree, 457 best solution, best possible 296 (807.60 seconds)
Cbc0010I After 7700 nodes, 26 on tree, 457 best solution, best possible 296 (813.73 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 580 rows 186 columns
Cbc0010I After 7800 nodes, 23 on tree, 457 best solution, best possible 296 (820.01 seconds)
Cbc0010I After 7900 nodes, 29 on tree, 457 best solution, best possible 296 (827.15 seconds)
Cbc0010I After 8000 nodes, 33 on tree, 457 best solution, best possible 296 (833.65 seconds)
Cbc0010I After 8100 nodes, 27 on tree, 457 best solution, best possible 296 (839.26 seconds)
Cbc0010I After 8200 nodes, 18 on tree, 457 best solution, best possible 296 (851.01 seconds)
Cbc0010I After 8300 nodes, 19 on tree, 457 best solution, best possible 296 (862.19 seconds)
Cbc0010I After 8400 nodes, 27 on tree, 457 best solution, best possible 296 (866.63 seconds)
Cbc0010I After 8500 nodes, 22 on tree, 457 best solution, best possible 296 (872.92 seconds)
Cbc0010I After 8600 nodes, 16 on tree, 457 best solution, best possible 296 (881.69 seconds)
Cbc0010I After 8700 nodes, 19 on tree, 457 best solution, best possible 296 (891.13 seconds)
Cbc0010I After 8800 nodes, 24 on tree, 457 best solution, best possible 296 (896.98 seconds)
Cbc0010I After 8900 nodes, 24 on tree, 457 best solution, best possible 296 (903.48 seconds)
Cbc0010I After 9000 nodes, 22 on tree, 457 best solution, best possible 296 (907.82 seconds)
Cbc0010I After 9100 nodes, 22 on tree, 457 best solution, best possible 296 (912.54 seconds)
Cbc0010I After 9200 nodes, 19 on tree, 457 best solution, best possible 296 (917.84 seconds)
Cbc0010I After 9300 nodes, 18 on tree, 457 best solution, best possible 296 (923.49 seconds)
Cbc0010I After 9400 nodes, 19 on tree, 457 best solution, best possible 296 (930.35 seconds)
Cbc0010I After 9500 nodes, 23 on tree, 457 best solution, best possible 296 (939.63 seconds)
Cbc0010I After 9600 nodes, 29 on tree, 457 best solution, best possible 296 (945.09 seconds)
Cbc0010I After 9700 nodes, 27 on tree, 457 best solution, best possible 296 (948.73 seconds)
Cbc0010I After 9800 nodes, 23 on tree, 457 best solution, best possible 296 (952.52 seconds)
Cbc0010I After 9900 nodes, 25 on tree, 457 best solution, best possible 296 (956.32 seconds)
Cbc0010I After 10000 nodes, 19 on tree, 457 best solution, best possible 296 (960.54 seconds)
Cbc0010I After 10100 nodes, 25 on tree, 457 best solution, best possible 296 (965.45 seconds)
Cbc0010I After 10200 nodes, 21 on tree, 457 best solution, best possible 296 (971.86 seconds)
Cbc0010I After 10300 nodes, 17 on tree, 457 best solution, best possible 296 (979.48 seconds)
Cbc0010I After 10400 nodes, 19 on tree, 457 best solution, best possible 296 (984.87 seconds)
Cbc0010I After 10500 nodes, 15 on tree, 457 best solution, best possible 296 (990.63 seconds)
Cbc0010I After 10600 nodes, 22 on tree, 457 best solution, best possible 296 (996.29 seconds)
Cbc0010I After 10700 nodes, 21 on tree, 457 best solution, best possible 296 (1000.95 seconds)
Cbc0010I After 10800 nodes, 16 on tree, 457 best solution, best possible 296 (1006.59 seconds)
Cbc0010I After 10900 nodes, 13 on tree, 457 best solution, best possible 296 (1012.29 seconds)
Cbc0010I After 11000 nodes, 18 on tree, 457 best solution, best possible 296 (1018.40 seconds)
Cbc0010I After 11100 nodes, 36 on tree, 457 best solution, best possible 296 (1026.59 seconds)
Cbc0010I After 11200 nodes, 25 on tree, 457 best solution, best possible 296 (1037.62 seconds)
Cbc0010I After 11300 nodes, 10 on tree, 457 best solution, best possible 299 (1048.34 seconds)
Cbc0010I After 11400 nodes, 22 on tree, 457 best solution, best possible 299 (1053.64 seconds)
Cbc0010I After 11500 nodes, 12 on tree, 457 best solution, best possible 299 (1059.17 seconds)
Cbc0010I After 11600 nodes, 17 on tree, 457 best solution, best possible 299 (1065.38 seconds)
Cbc0010I After 11700 nodes, 23 on tree, 457 best solution, best possible 299 (1070.57 seconds)
Cbc0010I After 11800 nodes, 19 on tree, 457 best solution, best possible 299 (1077.90 seconds)
Cbc0010I After 11900 nodes, 11 on tree, 457 best solution, best possible 299 (1089.86 seconds)
Cbc0010I After 12000 nodes, 14 on tree, 457 best solution, best possible 300 (1099.28 seconds)
Cbc0010I After 12100 nodes, 29 on tree, 457 best solution, best possible 300 (1103.56 seconds)
Cbc0010I After 12200 nodes, 44 on tree, 457 best solution, best possible 300 (1109.43 seconds)
Cbc0010I After 12300 nodes, 52 on tree, 457 best solution, best possible 300 (1115.65 seconds)
Cbc0010I After 12400 nodes, 70 on tree, 457 best solution, best possible 300 (1123.33 seconds)
Cbc0010I After 12500 nodes, 73 on tree, 457 best solution, best possible 300 (1129.37 seconds)
Cbc0010I After 12600 nodes, 86 on tree, 457 best solution, best possible 300 (1135.95 seconds)
Cbc0010I After 12700 nodes, 98 on tree, 457 best solution, best possible 300 (1141.95 seconds)
Cbc0010I After 12800 nodes, 98 on tree, 457 best solution, best possible 300 (1147.12 seconds)
Cbc0010I After 12900 nodes, 104 on tree, 457 best solution, best possible 300 (1154.86 seconds)
Cbc0010I After 13000 nodes, 105 on tree, 457 best solution, best possible 300 (1162.10 seconds)
Cbc0010I After 13100 nodes, 89 on tree, 457 best solution, best possible 300 (1169.72 seconds)
Cbc0010I After 13200 nodes, 72 on tree, 457 best solution, best possible 300 (1180.09 seconds)
Cbc0010I After 13300 nodes, 65 on tree, 457 best solution, best possible 300 (1187.03 seconds)
Cbc0010I After 13400 nodes, 57 on tree, 457 best solution, best possible 300 (1194.10 seconds)
Cbc0010I After 13500 nodes, 45 on tree, 457 best solution, best possible 300 (1201.32 seconds)
Cbc0010I After 13600 nodes, 51 on tree, 457 best solution, best possible 300 (1207.19 seconds)
Cbc0010I After 13700 nodes, 45 on tree, 457 best solution, best possible 300 (1212.85 seconds)
Cbc0010I After 13800 nodes, 44 on tree, 457 best solution, best possible 300 (1221.56 seconds)
Cbc0010I After 13900 nodes, 43 on tree, 457 best solution, best possible 300 (1227.86 seconds)
Cbc0010I After 14000 nodes, 40 on tree, 457 best solution, best possible 300 (1235.41 seconds)
Cbc0010I After 14100 nodes, 41 on tree, 457 best solution, best possible 300 (1243.68 seconds)
Cbc0010I After 14200 nodes, 42 on tree, 457 best solution, best possible 300 (1253.11 seconds)
Cbc0010I After 14300 nodes, 61 on tree, 457 best solution, best possible 300 (1258.31 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 382 rows 126 columns
Cbc0010I After 14400 nodes, 66 on tree, 457 best solution, best possible 300 (1263.09 seconds)
Cbc0010I After 14500 nodes, 68 on tree, 457 best solution, best possible 300 (1268.67 seconds)
Cbc0010I After 14600 nodes, 65 on tree, 457 best solution, best possible 300 (1275.27 seconds)
Cbc0010I After 14700 nodes, 64 on tree, 457 best solution, best possible 300 (1280.84 seconds)
Cbc0010I After 14800 nodes, 65 on tree, 457 best solution, best possible 300 (1288.56 seconds)
Cbc0010I After 14900 nodes, 65 on tree, 457 best solution, best possible 300 (1293.97 seconds)
Cbc0010I After 15000 nodes, 67 on tree, 457 best solution, best possible 300 (1299.41 seconds)
Cbc0010I After 15100 nodes, 69 on tree, 457 best solution, best possible 300 (1303.57 seconds)
Cbc0010I After 15200 nodes, 67 on tree, 457 best solution, best possible 300 (1307.53 seconds)
Cbc0010I After 15300 nodes, 64 on tree, 457 best solution, best possible 300 (1311.54 seconds)
Cbc0010I After 15400 nodes, 68 on tree, 457 best solution, best possible 300 (1318.58 seconds)
Cbc0010I After 15500 nodes, 62 on tree, 457 best solution, best possible 300 (1323.95 seconds)
Cbc0010I After 15600 nodes, 56 on tree, 457 best solution, best possible 300 (1331.40 seconds)
Cbc0010I After 15700 nodes, 59 on tree, 457 best solution, best possible 300 (1338.96 seconds)
Cbc0010I After 15800 nodes, 63 on tree, 457 best solution, best possible 300 (1345.75 seconds)
Cbc0010I After 15900 nodes, 57 on tree, 457 best solution, best possible 300 (1351.29 seconds)
Cbc0010I After 16000 nodes, 67 on tree, 457 best solution, best possible 300 (1357.89 seconds)
Cbc0010I After 16100 nodes, 59 on tree, 457 best solution, best possible 300 (1365.45 seconds)
Cbc0010I After 16200 nodes, 62 on tree, 457 best solution, best possible 300 (1370.76 seconds)
Cbc0010I After 16300 nodes, 53 on tree, 457 best solution, best possible 300 (1378.85 seconds)
Cbc0010I After 16400 nodes, 43 on tree, 457 best solution, best possible 300 (1386.45 seconds)
Cbc0010I After 16500 nodes, 27 on tree, 457 best solution, best possible 300 (1395.01 seconds)
Cbc0010I After 16600 nodes, 9 on tree, 457 best solution, best possible 300 (1403.43 seconds)
Cbc0010I After 16700 nodes, 22 on tree, 457 best solution, best possible 301 (1410.40 seconds)
Cbc0010I After 16800 nodes, 30 on tree, 457 best solution, best possible 301 (1417.61 seconds)
Cbc0010I After 16900 nodes, 39 on tree, 457 best solution, best possible 301 (1424.92 seconds)
Cbc0010I After 17000 nodes, 47 on tree, 457 best solution, best possible 301 (1432.00 seconds)
Cbc0010I After 17100 nodes, 42 on tree, 457 best solution, best possible 301 (1438.16 seconds)
Cbc0010I After 17200 nodes, 39 on tree, 457 best solution, best possible 301 (1443.79 seconds)
Cbc0010I After 17300 nodes, 30 on tree, 457 best solution, best possible 301 (1453.38 seconds)
Cbc0010I After 17400 nodes, 20 on tree, 457 best solution, best possible 301 (1463.13 seconds)
Cbc0010I After 17500 nodes, 21 on tree, 457 best solution, best possible 301 (1472.19 seconds)
Cbc0010I After 17600 nodes, 32 on tree, 457 best solution, best possible 301 (1476.59 seconds)
Cbc0010I After 17700 nodes, 30 on tree, 457 best solution, best possible 301 (1481.76 seconds)
Cbc0010I After 17800 nodes, 25 on tree, 457 best solution, best possible 301 (1485.97 seconds)
Cbc0010I After 17900 nodes, 30 on tree, 457 best solution, best possible 301 (1492.13 seconds)
Cbc0010I After 18000 nodes, 37 on tree, 457 best solution, best possible 301 (1496.74 seconds)
Cbc0010I After 18100 nodes, 18 on tree, 457 best solution, best possible 301 (1503.59 seconds)
Cbc0010I After 18200 nodes, 38 on tree, 457 best solution, best possible 301 (1510.60 seconds)
Cbc0010I After 18300 nodes, 44 on tree, 457 best solution, best possible 301 (1516.95 seconds)
Cbc0010I After 18400 nodes, 45 on tree, 457 best solution, best possible 301 (1523.89 seconds)
Cbc0010I After 18500 nodes, 40 on tree, 457 best solution, best possible 301 (1530.96 seconds)
Cbc0010I After 18600 nodes, 36 on tree, 457 best solution, best possible 301 (1539.43 seconds)
Cbc0010I After 18700 nodes, 42 on tree, 457 best solution, best possible 301 (1547.56 seconds)
Cbc0010I After 18800 nodes, 55 on tree, 457 best solution, best possible 301 (1553.01 seconds)
Cbc0010I After 18900 nodes, 65 on tree, 457 best solution, best possible 301 (1560.71 seconds)
Cbc0010I After 19000 nodes, 64 on tree, 457 best solution, best possible 301 (1568.13 seconds)
Cbc0010I After 19100 nodes, 72 on tree, 457 best solution, best possible 301 (1575.23 seconds)
Cbc0010I After 19200 nodes, 63 on tree, 457 best solution, best possible 301 (1583.49 seconds)
Cbc0010I After 19300 nodes, 76 on tree, 457 best solution, best possible 301 (1591.76 seconds)
Cbc0010I After 19400 nodes, 66 on tree, 457 best solution, best possible 301 (1596.54 seconds)
Cbc0010I After 19500 nodes, 77 on tree, 457 best solution, best possible 301 (1602.74 seconds)
Cbc0010I After 19600 nodes, 71 on tree, 457 best solution, best possible 301 (1608.31 seconds)
Cbc0010I After 19700 nodes, 59 on tree, 457 best solution, best possible 301 (1616.69 seconds)
Cbc0010I After 19800 nodes, 48 on tree, 457 best solution, best possible 301 (1624.94 seconds)
Cbc0010I After 19900 nodes, 25 on tree, 457 best solution, best possible 301 (1633.43 seconds)
Cbc0010I After 20000 nodes, 10 on tree, 457 best solution, best possible 301 (1642.03 seconds)
Cbc0004I Integer solution of 302 found after 7846199 iterations and 20081 nodes (1649.44 seconds)
Cbc0001I Search completed - best objective 302, took 7846199 iterations and 20081 nodes (1649.44 seconds)
Cbc0032I Strong branching done 41100 times (2390453 iterations), fathomed 1133 nodes and fixed 6184 variables
Cbc0035I Maximum depth 75, 0 variables fixed on reduced cost
Cuts at root node changed objective from 224.796 to 248
Probing was tried 14658 times and created 554273 cuts of which 0 were active after adding rounds of cuts (34.721 seconds)
Gomory was tried 12096 times and created 4522 cuts of which 0 were active after adding rounds of cuts (19.486 seconds)
Knapsack was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 12096 times and created 62912 cuts of which 0 were active after adding rounds of cuts (8.470 seconds)
ZeroHalf was tried 12096 times and created 17551 cuts of which 0 were active after adding rounds of cuts (80.003 seconds)

Result - Optimal solution found

Objective value:                302.00000000
Enumerated nodes:               20081
Total iterations:               7846199
Time (CPU seconds):             1649.53
Time (Wallclock seconds):       1659.35

Total time (CPU seconds):       1649.54   (Wallclock seconds):       1659.36

