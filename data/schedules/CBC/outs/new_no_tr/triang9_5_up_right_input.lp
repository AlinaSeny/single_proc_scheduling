Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_5_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_5_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 276.909 - 1.32 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 28 tightened bounds, 1672 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 1047 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 28 tightened bounds, 806 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 522 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 412 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 298 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 132 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26145 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1136 integers unsatisfied sum - 391.68
Cbc0038I Pass   1: (5.96 seconds) suminf.  147.71465 (929) obj. 499.9 iterations 4711
Cbc0038I Pass   2: (6.29 seconds) suminf.  112.63605 (892) obj. 481.834 iterations 1424
Cbc0038I Pass   3: (6.56 seconds) suminf.   98.89589 (897) obj. 479.165 iterations 1121
Cbc0038I Pass   4: (6.70 seconds) suminf.   92.01803 (898) obj. 478.461 iterations 525
Cbc0038I Pass   5: (6.80 seconds) suminf.   89.48130 (920) obj. 478.518 iterations 368
Cbc0038I Pass   6: (6.89 seconds) suminf.   87.50306 (950) obj. 478.306 iterations 269
Cbc0038I Pass   7: (6.95 seconds) suminf.   86.27651 (960) obj. 477.103 iterations 186
Cbc0038I Pass   8: (6.99 seconds) suminf.   86.32271 (954) obj. 477.846 iterations 105
Cbc0038I Pass   9: (7.07 seconds) suminf.   86.02939 (963) obj. 476.901 iterations 253
Cbc0038I Pass  10: (7.09 seconds) suminf.   85.52063 (961) obj. 476.912 iterations 63
Cbc0038I Pass  11: (7.30 seconds) suminf.   84.86004 (927) obj. 484.079 iterations 829
Cbc0038I Pass  12: (7.33 seconds) suminf.   84.17011 (963) obj. 486.434 iterations 110
Cbc0038I Pass  13: (7.49 seconds) suminf.   83.31474 (908) obj. 479.261 iterations 610
Cbc0038I Pass  14: (7.63 seconds) suminf.   81.87317 (944) obj. 486.405 iterations 560
Cbc0038I Pass  15: (7.65 seconds) suminf.   81.51680 (937) obj. 485.937 iterations 22
Cbc0038I Pass  16: (7.82 seconds) suminf.   83.88714 (892) obj. 483.552 iterations 667
Cbc0038I Pass  17: (7.92 seconds) suminf.   82.12438 (937) obj. 497.323 iterations 389
Cbc0038I Pass  18: (7.97 seconds) suminf.   81.06668 (950) obj. 507.907 iterations 138
Cbc0038I Pass  19: (8.11 seconds) suminf.   82.70255 (960) obj. 512.547 iterations 519
Cbc0038I Pass  20: (8.23 seconds) suminf.   80.12246 (914) obj. 505.715 iterations 467
Cbc0038I Pass  21: (8.38 seconds) suminf.   83.47497 (903) obj. 525.091 iterations 591
Cbc0038I Pass  22: (8.49 seconds) suminf.   79.73967 (917) obj. 539.958 iterations 437
Cbc0038I Pass  23: (8.61 seconds) suminf.   80.83312 (889) obj. 531.989 iterations 441
Cbc0038I Pass  24: (8.71 seconds) suminf.   78.07056 (906) obj. 540.878 iterations 366
Cbc0038I Pass  25: (8.80 seconds) suminf.   82.04616 (911) obj. 534.569 iterations 293
Cbc0038I Pass  26: (8.89 seconds) suminf.   78.13093 (931) obj. 541.995 iterations 305
Cbc0038I Pass  27: (9.04 seconds) suminf.   83.85832 (896) obj. 530.339 iterations 568
Cbc0038I Pass  28: (9.14 seconds) suminf.   79.02464 (934) obj. 537.592 iterations 393
Cbc0038I Pass  29: (9.25 seconds) suminf.   80.25875 (929) obj. 533.973 iterations 407
Cbc0038I Pass  30: (9.33 seconds) suminf.   79.18636 (914) obj. 536.692 iterations 264
Cbc0038I Pass  31: (9.46 seconds) suminf.   82.11999 (921) obj. 531.688 iterations 467
Cbc0038I Pass  32: (9.58 seconds) suminf.   78.77290 (950) obj. 536.092 iterations 447
Cbc0038I Pass  33: (9.71 seconds) suminf.   81.08974 (932) obj. 533.79 iterations 456
Cbc0038I Pass  34: (10.26 seconds) suminf.  121.32766 (868) obj. 665.167 iterations 2392
Cbc0038I Pass  35: (10.58 seconds) suminf.   92.63664 (868) obj. 682.025 iterations 1340
Cbc0038I Pass  36: (10.70 seconds) suminf.   86.91872 (816) obj. 675.335 iterations 515
Cbc0038I Pass  37: (10.74 seconds) suminf.   86.37191 (836) obj. 676.721 iterations 137
Cbc0038I Pass  38: (10.83 seconds) suminf.   87.13706 (808) obj. 668.508 iterations 307
Cbc0038I Pass  39: (10.85 seconds) suminf.   86.32468 (807) obj. 668.463 iterations 70
Cbc0038I Pass  40: (10.95 seconds) suminf.   85.11370 (801) obj. 673.255 iterations 358
Cbc0038I Pass  41: (10.98 seconds) suminf.   84.44421 (831) obj. 673.322 iterations 98
Cbc0038I Pass  42: (11.06 seconds) suminf.   83.18040 (799) obj. 669.962 iterations 294
Cbc0038I Pass  43: (11.07 seconds) suminf.   83.07395 (793) obj. 669.737 iterations 15
Cbc0038I Pass  44: (11.10 seconds) suminf.   83.49597 (817) obj. 669.042 iterations 87
Cbc0038I Pass  45: (11.12 seconds) suminf.   83.36391 (819) obj. 669.382 iterations 69
Cbc0038I Pass  46: (11.24 seconds) suminf.   85.30806 (762) obj. 671.221 iterations 436
Cbc0038I Pass  47: (11.27 seconds) suminf.   83.52119 (743) obj. 671.189 iterations 89
Cbc0038I Pass  48: (11.32 seconds) suminf.   81.42967 (755) obj. 671.227 iterations 224
Cbc0038I Pass  49: (11.37 seconds) suminf.   81.59994 (741) obj. 671.596 iterations 167
Cbc0038I Pass  50: (11.39 seconds) suminf.   81.30284 (743) obj. 671.465 iterations 77
Cbc0038I Pass  51: (11.44 seconds) suminf.   80.17063 (751) obj. 672.724 iterations 166
Cbc0038I Pass  52: (11.46 seconds) suminf.   80.08399 (750) obj. 672.722 iterations 65
Cbc0038I Pass  53: (11.50 seconds) suminf.   80.41356 (737) obj. 671.9 iterations 155
Cbc0038I Pass  54: (11.52 seconds) suminf.   79.71960 (742) obj. 672.068 iterations 59
Cbc0038I Pass  55: (11.61 seconds) suminf.   80.04861 (717) obj. 683.242 iterations 377
Cbc0038I Pass  56: (11.65 seconds) suminf.   78.67893 (740) obj. 682.921 iterations 134
Cbc0038I Pass  57: (11.68 seconds) suminf.   78.17916 (724) obj. 678.808 iterations 97
Cbc0038I Pass  58: (11.77 seconds) suminf.   76.19917 (736) obj. 670.594 iterations 371
Cbc0038I Pass  59: (11.79 seconds) suminf.   76.09343 (740) obj. 670.531 iterations 36
Cbc0038I Pass  60: (11.86 seconds) suminf.   77.03445 (713) obj. 668.208 iterations 273
Cbc0038I Pass  61: (11.88 seconds) suminf.   76.95138 (706) obj. 667.768 iterations 92
Cbc0038I Pass  62: (11.97 seconds) suminf.   73.11340 (702) obj. 676.901 iterations 331
Cbc0038I Pass  63: (11.99 seconds) suminf.   73.01206 (703) obj. 678.961 iterations 71
Cbc0038I Pass  64: (12.07 seconds) suminf.   73.52549 (702) obj. 678.933 iterations 262
Cbc0038I Pass  65: (12.09 seconds) suminf.   73.60133 (690) obj. 678.791 iterations 47
Cbc0038I Pass  66: (12.21 seconds) suminf.   73.64218 (655) obj. 612.441 iterations 475
Cbc0038I Pass  67: (12.26 seconds) suminf.   72.89868 (654) obj. 611.757 iterations 190
Cbc0038I Pass  68: (12.38 seconds) suminf.   72.39608 (666) obj. 611.957 iterations 488
Cbc0038I Pass  69: (12.42 seconds) suminf.   71.52510 (657) obj. 610.37 iterations 158
Cbc0038I Pass  70: (12.44 seconds) suminf.   71.23332 (658) obj. 610.398 iterations 28
Cbc0038I Pass  71: (12.55 seconds) suminf.   67.37680 (680) obj. 618.122 iterations 448
Cbc0038I Pass  72: (12.57 seconds) suminf.   66.00889 (686) obj. 619.326 iterations 66
Cbc0038I Pass  73: (12.71 seconds) suminf.   60.04241 (619) obj. 575.151 iterations 596
Cbc0038I Pass  74: (12.75 seconds) suminf.   59.17574 (615) obj. 548.3 iterations 156
Cbc0038I Pass  75: (12.81 seconds) suminf.   56.96669 (612) obj. 547.393 iterations 208
Cbc0038I Pass  76: (12.82 seconds) suminf.   56.70433 (617) obj. 547.442 iterations 10
Cbc0038I Pass  77: (12.92 seconds) suminf.   53.76733 (581) obj. 509.506 iterations 426
Cbc0038I Pass  78: (12.94 seconds) suminf.   53.22223 (558) obj. 510.845 iterations 71
Cbc0038I Pass  79: (13.01 seconds) suminf.   51.47450 (575) obj. 486.068 iterations 225
Cbc0038I Pass  80: (13.03 seconds) suminf.   51.51541 (570) obj. 486.122 iterations 68
Cbc0038I Pass  81: (13.12 seconds) suminf.   50.04012 (549) obj. 521.226 iterations 323
Cbc0038I Pass  82: (13.13 seconds) suminf.   49.71695 (549) obj. 521.209 iterations 27
Cbc0038I Pass  83: (13.23 seconds) suminf.   48.00023 (510) obj. 494.595 iterations 492
Cbc0038I Pass  84: (13.26 seconds) suminf.   46.28157 (511) obj. 498.173 iterations 111
Cbc0038I Pass  85: (13.28 seconds) suminf.   46.23260 (510) obj. 498.186 iterations 33
Cbc0038I Pass  86: (13.36 seconds) suminf.   43.18628 (500) obj. 491.082 iterations 368
Cbc0038I Pass  87: (13.42 seconds) suminf.   41.19494 (509) obj. 499.583 iterations 226
Cbc0038I Pass  88: (13.51 seconds) suminf.   45.19526 (514) obj. 486.249 iterations 451
Cbc0038I Pass  89: (13.58 seconds) suminf.   40.29697 (463) obj. 494.128 iterations 299
Cbc0038I Pass  90: (13.67 seconds) suminf.   39.29281 (460) obj. 483.741 iterations 397
Cbc0038I Pass  91: (13.71 seconds) suminf.   37.85098 (455) obj. 484.026 iterations 168
Cbc0038I Pass  92: (13.81 seconds) suminf.   35.87205 (430) obj. 511.502 iterations 513
Cbc0038I Pass  93: (13.84 seconds) suminf.   35.30082 (433) obj. 511.525 iterations 104
Cbc0038I Pass  94: (13.95 seconds) suminf.   31.20958 (408) obj. 512.607 iterations 523
Cbc0038I Pass  95: (13.99 seconds) suminf.   30.61955 (387) obj. 513.904 iterations 170
Cbc0038I Pass  96: (14.14 seconds) suminf.   25.80650 (355) obj. 552.666 iterations 841
Cbc0038I Pass  97: (14.15 seconds) suminf.   25.38237 (355) obj. 557.071 iterations 20
Cbc0038I Pass  98: (14.24 seconds) suminf.   23.70975 (332) obj. 542.097 iterations 527
Cbc0038I Pass  99: (14.25 seconds) suminf.   23.48587 (330) obj. 542.096 iterations 23
Cbc0038I Pass 100: (14.40 seconds) suminf.   49.38926 (438) obj. 546.091 iterations 985
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 648 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 6205 rows 1931 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.44 seconds)
Cbc0038I After 14.44 seconds - Feasibility pump exiting - took 9.68 seconds
Cbc0031I 53 added rows had average density of 16.188679
Cbc0013I At root node, 53 cuts changed objective from 276.90909 to 317 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 4.9 elements, 7 column cuts (7 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 98 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.493 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 287 row cuts average 34.3 elements, 0 column cuts (0 active)  in 0.507 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 166 row cuts average 70.8 elements, 0 column cuts (0 active)  in 1.013 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 317 (30.93 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 320 (192.86 seconds)
Cbc0010I After 200 nodes, 16 on tree, 1e+50 best solution, best possible 322 (348.67 seconds)
Cbc0010I After 300 nodes, 24 on tree, 1e+50 best solution, best possible 322 (448.80 seconds)
Cbc0010I After 400 nodes, 18 on tree, 1e+50 best solution, best possible 322 (539.39 seconds)
Cbc0010I After 500 nodes, 40 on tree, 1e+50 best solution, best possible 322 (652.67 seconds)
Cbc0010I After 600 nodes, 54 on tree, 1e+50 best solution, best possible 322 (753.71 seconds)
Cbc0010I After 700 nodes, 71 on tree, 1e+50 best solution, best possible 322 (870.68 seconds)
Cbc0010I After 800 nodes, 79 on tree, 1e+50 best solution, best possible 322 (1011.98 seconds)
Cbc0010I After 900 nodes, 87 on tree, 1e+50 best solution, best possible 322 (1148.86 seconds)
Cbc0010I After 1000 nodes, 89 on tree, 1e+50 best solution, best possible 322 (1287.98 seconds)
Cbc0010I After 1100 nodes, 100 on tree, 1e+50 best solution, best possible 322 (1393.37 seconds)
Cbc0010I After 1200 nodes, 110 on tree, 1e+50 best solution, best possible 322 (1486.67 seconds)
Cbc0010I After 1300 nodes, 115 on tree, 1e+50 best solution, best possible 322 (1590.57 seconds)
Cbc0010I After 1400 nodes, 109 on tree, 1e+50 best solution, best possible 322 (1685.24 seconds)
Cbc0010I After 1500 nodes, 113 on tree, 1e+50 best solution, best possible 322 (1776.03 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 322), took 2616733 iterations and 1524 nodes (1796.62 seconds)
Cbc0032I Strong branching done 17084 times (1544261 iterations), fathomed 61 nodes and fixed 937 variables
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost
Cuts at root node changed objective from 276.909 to 317
Probing was tried 1073 times and created 35152 cuts of which 0 were active after adding rounds of cuts (17.813 seconds)
Gomory was tried 1016 times and created 472 cuts of which 0 were active after adding rounds of cuts (16.495 seconds)
Knapsack was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 1016 times and created 12487 cuts of which 0 were active after adding rounds of cuts (4.416 seconds)
ZeroHalf was tried 1016 times and created 5485 cuts of which 0 were active after adding rounds of cuts (103.955 seconds)
ImplicationCuts was tried 44 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    322.000
Enumerated nodes:               1524
Total iterations:               2616733
Time (CPU seconds):             1796.62
Time (Wallclock seconds):       1798.56

Total time (CPU seconds):       1796.64   (Wallclock seconds):       1798.59

