Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_20_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_20_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 21504 - 0.02 seconds
Cgl0002I 54 variables fixed
Cgl0003I 0 fixed, 4 tightened bounds, 222 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 1129 rows, 377 columns (377 integer (356 of which binary)) and 3781 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 377 objects (377 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 193 integers unsatisfied sum - 65.9302
Cbc0038I Pass   1: suminf.   24.45228 (185) obj. 28201.6 iterations 420
Cbc0038I Pass   2: suminf.   17.58827 (104) obj. 28256.1 iterations 214
Cbc0038I Pass   3: suminf.   18.36733 (97) obj. 28647.1 iterations 35
Cbc0038I Pass   4: suminf.   13.09167 (71) obj. 32265.9 iterations 211
Cbc0038I Pass   5: suminf.   12.23684 (71) obj. 32633 iterations 52
Cbc0038I Pass   6: suminf.   12.11752 (72) obj. 32828 iterations 16
Cbc0038I Pass   7: suminf.    2.96822 (21) obj. 29696 iterations 151
Cbc0038I Pass   8: suminf.    2.96822 (21) obj. 29696 iterations 3
Cbc0038I Pass   9: suminf.    1.85385 (16) obj. 29696 iterations 396
Cbc0038I Pass  10: suminf.    1.11678 (16) obj. 29696 iterations 35
Cbc0038I Pass  11: suminf.    0.92845 (10) obj. 29696 iterations 26
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. 29696 iterations 18
Cbc0038I Solution found of 29696
Cbc0038I Cleaned solution of 29696
Cbc0038I Before mini branch and bound, 113 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1129 rows 377 columns, reduced to 895 rows 264 columns - 22 fixed gives 716, 212 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I Round again with cutoff of 28875.9
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass  13: suminf.   21.47687 (138) obj. 28022.8 iterations 43
Cbc0038I Pass  14: suminf.   18.51058 (103) obj. 28727.6 iterations 178
Cbc0038I Pass  15: suminf.   18.36733 (97) obj. 28647.1 iterations 22
Cbc0038I Pass  16: suminf.   14.11489 (81) obj. 28875.9 iterations 131
Cbc0038I Pass  17: suminf.   12.21993 (74) obj. 28875.9 iterations 70
Cbc0038I Pass  18: suminf.    7.47687 (54) obj. 27905.2 iterations 96
Cbc0038I Pass  19: suminf.    6.06776 (73) obj. 28875.9 iterations 21
Cbc0038I Pass  20: suminf.    6.82876 (51) obj. 28875.9 iterations 157
Cbc0038I Pass  21: suminf.    5.91625 (35) obj. 28875.9 iterations 36
Cbc0038I Pass  22: suminf.    4.61342 (40) obj. 28875.9 iterations 36
Cbc0038I Pass  23: suminf.    5.12659 (37) obj. 28875.9 iterations 151
Cbc0038I Pass  24: suminf.    4.31224 (47) obj. 28875.9 iterations 43
Cbc0038I Pass  25: suminf.    6.10007 (57) obj. 28875.9 iterations 159
Cbc0038I Pass  26: suminf.    5.40968 (59) obj. 28875.9 iterations 28
Cbc0038I Pass  27: suminf.    6.91814 (69) obj. 28875.9 iterations 141
Cbc0038I Pass  28: suminf.    5.00507 (64) obj. 28875.9 iterations 52
Cbc0038I Pass  29: suminf.    2.98526 (63) obj. 28875.9 iterations 48
Cbc0038I Pass  30: suminf.    2.67074 (61) obj. 28875.9 iterations 23
Cbc0038I Pass  31: suminf.   11.44451 (65) obj. 28875.9 iterations 122
Cbc0038I Pass  32: suminf.    5.57102 (49) obj. 28875.9 iterations 66
Cbc0038I Pass  33: suminf.    4.38697 (40) obj. 28875.9 iterations 38
Cbc0038I Pass  34: suminf.    3.20150 (62) obj. 28875.9 iterations 35
Cbc0038I Pass  35: suminf.    5.62813 (47) obj. 26695.2 iterations 141
Cbc0038I Pass  36: suminf.    5.62813 (47) obj. 26695.2 iterations 4
Cbc0038I Pass  37: suminf.    2.24877 (34) obj. 28875.9 iterations 53
Cbc0038I Pass  38: suminf.    1.81705 (38) obj. 28875.9 iterations 46
Cbc0038I Pass  39: suminf.    3.34712 (41) obj. 28875.9 iterations 71
Cbc0038I Pass  40: suminf.    1.74212 (35) obj. 28875.9 iterations 44
Cbc0038I Pass  41: suminf.    4.34020 (39) obj. 27458.5 iterations 118
Cbc0038I Pass  42: suminf.    4.34020 (39) obj. 27458.5 iterations 9
Cbc0038I Pass  43: suminf.    4.12734 (35) obj. 28875.9 iterations 104
Cbc0038I Pass  44: suminf.    4.07620 (39) obj. 28875.9 iterations 29
Cbc0038I Pass  45: suminf.    0.00000 (0) obj. 27648 iterations 308
Cbc0038I Solution found of 27648
Cbc0038I Cleaned solution of 27648
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I Round again with cutoff of 26418.4
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  46: suminf.   26.43561 (174) obj. 26418 iterations 46
Cbc0038I Pass  47: suminf.   16.43980 (125) obj. 26418.4 iterations 223
Cbc0038I Pass  48: suminf.   16.17541 (124) obj. 26418.4 iterations 5
Cbc0038I Pass  49: suminf.   15.42915 (111) obj. 26418.4 iterations 95
Cbc0038I Pass  50: suminf.   14.49760 (99) obj. 26418.4 iterations 61
Cbc0038I Pass  51: suminf.   13.91337 (108) obj. 26418.4 iterations 34
Cbc0038I Pass  52: suminf.   13.55889 (108) obj. 26418.4 iterations 14
Cbc0038I Pass  53: suminf.   10.06643 (64) obj. 26418.4 iterations 111
Cbc0038I Pass  54: suminf.    9.98427 (66) obj. 26418.4 iterations 22
Cbc0038I Pass  55: suminf.    7.84400 (44) obj. 26418.4 iterations 128
Cbc0038I Pass  56: suminf.    6.75815 (59) obj. 26418.4 iterations 79
Cbc0038I Pass  57: suminf.    7.82840 (48) obj. 26418.4 iterations 312
Cbc0038I Pass  58: suminf.    7.82840 (48) obj. 26418.4 iterations 4
Cbc0038I Pass  59: suminf.    2.11458 (21) obj. 26418.4 iterations 127
Cbc0038I Pass  60: suminf.    2.11458 (21) obj. 26418.4 iterations 4
Cbc0038I Pass  61: suminf.    5.14955 (20) obj. 26418.4 iterations 123
Cbc0038I Pass  62: suminf.    2.57848 (10) obj. 26418.4 iterations 112
Cbc0038I Pass  63: suminf.    2.53061 (24) obj. 26418.4 iterations 86
Cbc0038I Pass  64: suminf.    5.22171 (22) obj. 26418.4 iterations 143
Cbc0038I Pass  65: suminf.    4.18899 (30) obj. 26418.4 iterations 77
Cbc0038I Pass  66: suminf.    3.39286 (20) obj. 26418.4 iterations 91
Cbc0038I Pass  67: suminf.    3.39286 (20) obj. 26418.4 iterations 5
Cbc0038I Pass  68: suminf.    3.96863 (12) obj. 26418.4 iterations 108
Cbc0038I Pass  69: suminf.    3.96863 (12) obj. 26418.4 iterations 5
Cbc0038I Pass  70: suminf.    3.88291 (16) obj. 26418.4 iterations 69
Cbc0038I Pass  71: suminf.    4.40101 (30) obj. 26418.4 iterations 108
Cbc0038I Pass  72: suminf.    6.80741 (36) obj. 26418.4 iterations 120
Cbc0038I Pass  73: suminf.    6.80741 (36) obj. 26418.4 iterations 9
Cbc0038I Pass  74: suminf.    5.53718 (35) obj. 26418.4 iterations 121
Cbc0038I Pass  75: suminf.    4.41416 (25) obj. 26418.4 iterations 38
Cbc0038I Pass  76: suminf.    5.12547 (34) obj. 26418.4 iterations 96
Cbc0038I Pass  77: suminf.    5.14257 (34) obj. 26418.4 iterations 5
Cbc0038I Pass  78: suminf.    5.14257 (34) obj. 26418.4 iterations 11
Cbc0038I Pass  79: suminf.    4.06223 (29) obj. 26418.4 iterations 99
Cbc0038I Pass  80: suminf.    3.99855 (21) obj. 26418.4 iterations 9
Cbc0038I Pass  81: suminf.    3.89509 (31) obj. 26418.4 iterations 121
Cbc0038I Pass  82: suminf.    2.56462 (21) obj. 26418.4 iterations 49
Cbc0038I Pass  83: suminf.    4.14379 (22) obj. 26418.4 iterations 82
Cbc0038I Pass  84: suminf.    5.77961 (34) obj. 26418.4 iterations 194
Cbc0038I Pass  85: suminf.    4.50402 (39) obj. 26418.4 iterations 54
Cbc0038I Pass  86: suminf.    3.96863 (12) obj. 26418.4 iterations 137
Cbc0038I Pass  87: suminf.    3.96863 (12) obj. 26418.4 iterations 5
Cbc0038I Pass  88: suminf.    3.79402 (13) obj. 26418.4 iterations 83
Cbc0038I Pass  89: suminf.    4.40101 (30) obj. 26418.4 iterations 102
Cbc0038I Pass  90: suminf.    8.58021 (36) obj. 26418.4 iterations 110
Cbc0038I Pass  91: suminf.    5.82681 (37) obj. 26418.4 iterations 59
Cbc0038I Pass  92: suminf.   25.38645 (114) obj. 26418.4 iterations 211
Cbc0038I Pass  93: suminf.   14.36889 (86) obj. 26418.4 iterations 152
Cbc0038I Pass  94: suminf.   13.87757 (89) obj. 26418.4 iterations 21
Cbc0038I Pass  95: suminf.    8.37875 (63) obj. 26418.4 iterations 209
Cbc0038I Pass  96: suminf.    7.16553 (57) obj. 26418.4 iterations 117
Cbc0038I Pass  97: suminf.    6.24882 (53) obj. 26418.4 iterations 50
Cbc0038I Pass  98: suminf.    6.78385 (60) obj. 26418.4 iterations 193
Cbc0038I Pass  99: suminf.    7.07432 (57) obj. 26418.4 iterations 28
Cbc0038I Pass 100: suminf.    7.81476 (47) obj. 26418.4 iterations 152
Cbc0038I Pass 101: suminf.    7.12071 (57) obj. 26418.4 iterations 59
Cbc0038I Pass 102: suminf.    7.18911 (34) obj. 26418.4 iterations 148
Cbc0038I Pass 103: suminf.    6.31967 (29) obj. 26418.4 iterations 159
Cbc0038I Pass 104: suminf.    4.11037 (17) obj. 26418.4 iterations 100
Cbc0038I Pass 105: suminf.    3.34046 (17) obj. 26418.4 iterations 9
Cbc0038I Pass 106: suminf.    2.44441 (19) obj. 26418.4 iterations 69
Cbc0038I Pass 107: suminf.    2.44441 (19) obj. 26418.4 iterations 16
Cbc0038I Pass 108: suminf.    4.49169 (19) obj. 26418.4 iterations 84
Cbc0038I Pass 109: suminf.    3.78487 (19) obj. 26418.4 iterations 37
Cbc0038I Pass 110: suminf.    3.23086 (20) obj. 26418.4 iterations 77
Cbc0038I Pass 111: suminf.    3.07551 (19) obj. 26418.4 iterations 5
Cbc0038I Pass 112: suminf.    5.35754 (31) obj. 26418.4 iterations 117
Cbc0038I Pass 113: suminf.    4.46752 (17) obj. 26418.4 iterations 62
Cbc0038I Pass 114: suminf.    4.19518 (17) obj. 26418.4 iterations 30
Cbc0038I Pass 115: suminf.    3.12738 (24) obj. 26418.4 iterations 90
Cbc0038I Pass 116: suminf.    2.82646 (20) obj. 26418.4 iterations 26
Cbc0038I Pass 117: suminf.    4.48188 (22) obj. 26418.4 iterations 74
Cbc0038I Pass 118: suminf.    4.52769 (24) obj. 26418.4 iterations 6
Cbc0038I Pass 119: suminf.    4.47768 (32) obj. 26418.4 iterations 137
Cbc0038I Pass 120: suminf.    2.98595 (22) obj. 26418.4 iterations 16
Cbc0038I Pass 121: suminf.    4.61924 (21) obj. 26418.4 iterations 98
Cbc0038I Pass 122: suminf.    3.59112 (17) obj. 26418.4 iterations 19
Cbc0038I Pass 123: suminf.    4.73402 (30) obj. 26418.4 iterations 132
Cbc0038I Pass 124: suminf.    4.40101 (30) obj. 26418.4 iterations 18
Cbc0038I Pass 125: suminf.    9.85942 (36) obj. 26418.4 iterations 162
Cbc0038I Pass 126: suminf.    8.98685 (36) obj. 26418.4 iterations 59
Cbc0038I Pass 127: suminf.    7.52462 (33) obj. 26418.4 iterations 36
Cbc0038I Pass 128: suminf.    4.66893 (28) obj. 26418.4 iterations 111
Cbc0038I Pass 129: suminf.    4.18808 (27) obj. 26418.4 iterations 30
Cbc0038I Pass 130: suminf.    7.35777 (48) obj. 26418.4 iterations 133
Cbc0038I Pass 131: suminf.    5.62321 (36) obj. 26418.4 iterations 29
Cbc0038I Pass 132: suminf.    4.52222 (33) obj. 26418.4 iterations 162
Cbc0038I Pass 133: suminf.    3.96863 (12) obj. 26418.4 iterations 47
Cbc0038I Pass 134: suminf.    3.79402 (13) obj. 26418.4 iterations 73
Cbc0038I Pass 135: suminf.    4.40101 (30) obj. 26418.4 iterations 81
Cbc0038I Pass 136: suminf.    9.85942 (36) obj. 26418.4 iterations 181
Cbc0038I Pass 137: suminf.    8.98685 (36) obj. 26418.4 iterations 36
Cbc0038I Pass 138: suminf.    7.52462 (33) obj. 26418.4 iterations 36
Cbc0038I Pass 139: suminf.    4.65688 (17) obj. 26418.4 iterations 100
Cbc0038I Pass 140: suminf.    4.40101 (30) obj. 26418.4 iterations 34
Cbc0038I Pass 141: suminf.    4.98147 (40) obj. 26418.4 iterations 117
Cbc0038I Pass 142: suminf.    4.93249 (32) obj. 26418.4 iterations 17
Cbc0038I Pass 143: suminf.    7.81735 (29) obj. 26418.4 iterations 129
Cbc0038I Pass 144: suminf.    6.63291 (24) obj. 26418.4 iterations 15
Cbc0038I Pass 145: suminf.   28.14390 (136) obj. 26418.4 iterations 373
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.93 seconds)
Cbc0038I After 0.93 seconds - Feasibility pump exiting with objective of 27648 - took 0.85 seconds
Cbc0012I Integer solution of 27648 found by feasibility pump after 0 iterations and 0 nodes (0.93 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 802 rows 224 columns - 50 fixed gives 513, 142 - ok now
Cbc0031I 53 added rows had average density of 52.754717
Cbc0013I At root node, 53 cuts changed objective from 21504 to 21504 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 109 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.268 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2441 row cuts average 344.4 elements, 0 column cuts (0 active)  in 0.889 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 332 row cuts average 190.5 elements, 0 column cuts (0 active)  in 0.315 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 27648 best solution, best possible 21504 (9.39 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 838 rows 238 columns - 48 fixed gives 552, 158 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 838 rows 238 columns - 48 fixed gives 552, 158 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 838 rows 238 columns - 48 fixed gives 552, 158 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 835 rows 237 columns - 48 fixed gives 552, 158 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 830 rows 235 columns - 48 fixed gives 548, 156 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 826 rows 234 columns - 48 fixed gives 542, 153 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 826 rows 234 columns - 48 fixed gives 542, 153 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 826 rows 234 columns - 48 fixed gives 542, 153 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 826 rows 234 columns - 48 fixed gives 542, 153 - ok now
Cbc0010I After 1000 nodes, 6 on tree, 27648 best solution, best possible 21511 (39.53 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 827 rows 235 columns - 48 fixed gives 542, 154 - ok now
Cbc0010I After 2000 nodes, 5 on tree, 27648 best solution, best possible 21511 (67.32 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 827 rows 235 columns - 48 fixed gives 542, 154 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 821 rows 233 columns - 48 fixed gives 544, 155 - ok now
Cbc0010I After 3000 nodes, 5 on tree, 27648 best solution, best possible 21511 (103.42 seconds)
Cbc0010I After 4000 nodes, 5 on tree, 27648 best solution, best possible 21511 (146.18 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 823 rows 234 columns - 48 fixed gives 552, 157 - ok now
Cbc0010I After 5000 nodes, 6 on tree, 27648 best solution, best possible 21511 (183.31 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 815 rows 231 columns - 47 fixed gives 548, 155 - ok now
Cbc0038I Full problem 1129 rows 377 columns, reduced to 817 rows 232 columns - 47 fixed gives 550, 156 - ok now
Cbc0010I After 6000 nodes, 4 on tree, 27648 best solution, best possible 21511 (221.17 seconds)
Cbc0010I After 7000 nodes, 4 on tree, 27648 best solution, best possible 21511 (254.86 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 817 rows 232 columns - 47 fixed gives 550, 156 - ok now
Cbc0010I After 8000 nodes, 5 on tree, 27648 best solution, best possible 21511 (294.17 seconds)
Cbc0038I Full problem 1129 rows 377 columns, reduced to 817 rows 232 columns - 47 fixed gives 550, 156 - ok now
Cbc0010I After 9000 nodes, 4 on tree, 27648 best solution, best possible 21511 (327.79 seconds)
Cbc0004I Integer solution of 24576 found after 2963222 iterations and 9111 nodes (331.12 seconds)
Cbc0001I Search completed - best objective 24576, took 2963687 iterations and 9115 nodes (331.21 seconds)
Cbc0032I Strong branching done 30440 times (1150161 iterations), fathomed 3525 nodes and fixed 4744 variables
Cbc0035I Maximum depth 3090, 3 variables fixed on reduced cost
Cuts at root node changed objective from 21504 to 21504
Probing was tried 100 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.268 seconds)
Gomory was tried 100 times and created 2441 cuts of which 0 were active after adding rounds of cuts (0.889 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.058 seconds)
TwoMirCuts was tried 100 times and created 332 cuts of which 0 were active after adding rounds of cuts (0.315 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ImplicationCuts was tried 24 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               9115
Total iterations:               2963687
Time (CPU seconds):             331.26
Time (Wallclock seconds):       332.70

Total time (CPU seconds):       331.27   (Wallclock seconds):       332.71

