Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_5_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_5_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 295.613 - 1.51 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 1039 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 482 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 216 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16263 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 834 integers unsatisfied sum - 214.252
Cbc0038I Pass   1: (3.88 seconds) suminf.   90.47851 (682) obj. 437.047 iterations 2083
Cbc0038I Pass   2: (4.04 seconds) suminf.   76.19771 (695) obj. 438.077 iterations 764
Cbc0038I Pass   3: (4.09 seconds) suminf.   76.31298 (691) obj. 461.482 iterations 233
Cbc0038I Pass   4: (4.17 seconds) suminf.   79.43454 (723) obj. 483.261 iterations 360
Cbc0038I Pass   5: (4.23 seconds) suminf.   72.66282 (741) obj. 505.149 iterations 218
Cbc0038I Pass   6: (4.29 seconds) suminf.   68.03122 (737) obj. 515.231 iterations 220
Cbc0038I Pass   7: (4.34 seconds) suminf.   65.34109 (719) obj. 516.943 iterations 274
Cbc0038I Pass   8: (4.36 seconds) suminf.   64.65139 (708) obj. 515.993 iterations 67
Cbc0038I Pass   9: (4.41 seconds) suminf.   62.88351 (712) obj. 516.833 iterations 233
Cbc0038I Pass  10: (4.44 seconds) suminf.   61.56539 (716) obj. 516.586 iterations 153
Cbc0038I Pass  11: (4.45 seconds) suminf.   61.56539 (716) obj. 516.586 iterations 7
Cbc0038I Pass  12: (4.54 seconds) suminf.   58.52777 (680) obj. 512.554 iterations 449
Cbc0038I Pass  13: (4.56 seconds) suminf.   58.18432 (696) obj. 512.689 iterations 88
Cbc0038I Pass  14: (4.58 seconds) suminf.   58.41708 (695) obj. 516.634 iterations 94
Cbc0038I Pass  15: (4.65 seconds) suminf.   61.02841 (702) obj. 506.962 iterations 340
Cbc0038I Pass  16: (4.68 seconds) suminf.   60.94749 (690) obj. 508.315 iterations 157
Cbc0038I Pass  17: (4.73 seconds) suminf.   59.10179 (684) obj. 508.079 iterations 180
Cbc0038I Pass  18: (4.77 seconds) suminf.   57.21856 (678) obj. 553.739 iterations 202
Cbc0038I Pass  19: (4.87 seconds) suminf.   58.89334 (692) obj. 507.144 iterations 591
Cbc0038I Pass  20: (4.94 seconds) suminf.   56.51427 (719) obj. 506.619 iterations 302
Cbc0038I Pass  21: (4.95 seconds) suminf.   55.96617 (720) obj. 506.94 iterations 16
Cbc0038I Pass  22: (5.02 seconds) suminf.   58.07217 (726) obj. 496.668 iterations 379
Cbc0038I Pass  23: (5.06 seconds) suminf.   58.10873 (729) obj. 503.998 iterations 175
Cbc0038I Pass  24: (5.16 seconds) suminf.   61.98846 (683) obj. 520.979 iterations 547
Cbc0038I Pass  25: (5.22 seconds) suminf.   58.95592 (690) obj. 524.127 iterations 317
Cbc0038I Pass  26: (5.32 seconds) suminf.   57.33024 (751) obj. 507.899 iterations 457
Cbc0038I Pass  27: (5.37 seconds) suminf.   56.24313 (725) obj. 515.855 iterations 203
Cbc0038I Pass  28: (5.45 seconds) suminf.   61.34976 (678) obj. 508.259 iterations 459
Cbc0038I Pass  29: (5.51 seconds) suminf.   57.77187 (687) obj. 512.473 iterations 352
Cbc0038I Pass  30: (5.53 seconds) suminf.   56.70933 (689) obj. 511.071 iterations 83
Cbc0038I Pass  31: (5.60 seconds) suminf.   58.84335 (699) obj. 498.263 iterations 329
Cbc0038I Pass  32: (5.65 seconds) suminf.   57.57472 (682) obj. 505.098 iterations 218
Cbc0038I Pass  33: (5.73 seconds) suminf.   61.85829 (663) obj. 518.624 iterations 475
Cbc0038I Pass  34: (5.80 seconds) suminf.   57.62364 (677) obj. 512.518 iterations 329
Cbc0038I Pass  35: (5.90 seconds) suminf.   59.51987 (672) obj. 495.292 iterations 552
Cbc0038I Pass  36: (5.97 seconds) suminf.   55.23726 (700) obj. 507.013 iterations 349
Cbc0038I Pass  37: (5.98 seconds) suminf.   55.54235 (717) obj. 511.565 iterations 22
Cbc0038I Pass  38: (6.07 seconds) suminf.   58.17850 (715) obj. 522.205 iterations 448
Cbc0038I Pass  39: (6.13 seconds) suminf.   56.72096 (755) obj. 521.299 iterations 244
Cbc0038I Pass  40: (6.22 seconds) suminf.   58.58057 (702) obj. 501.688 iterations 439
Cbc0038I Pass  41: (6.27 seconds) suminf.   58.84106 (734) obj. 509.792 iterations 180
Cbc0038I Pass  42: (6.31 seconds) suminf.   59.06443 (715) obj. 506.981 iterations 150
Cbc0038I Pass  43: (6.38 seconds) suminf.   63.20488 (747) obj. 514.546 iterations 329
Cbc0038I Pass  44: (6.46 seconds) suminf.   59.21276 (745) obj. 504.803 iterations 370
Cbc0038I Pass  45: (6.57 seconds) suminf.   58.56844 (693) obj. 505.313 iterations 548
Cbc0038I Pass  46: (6.60 seconds) suminf.   58.63213 (723) obj. 508.203 iterations 113
Cbc0038I Pass  47: (6.62 seconds) suminf.   57.88558 (711) obj. 507.083 iterations 83
Cbc0038I Pass  48: (6.65 seconds) suminf.   57.62744 (708) obj. 515.846 iterations 103
Cbc0038I Pass  49: (6.69 seconds) suminf.   57.59744 (694) obj. 519.27 iterations 181
Cbc0038I Pass  50: (6.75 seconds) suminf.   57.64780 (707) obj. 518.382 iterations 234
Cbc0038I Pass  51: (6.82 seconds) suminf.   57.42811 (717) obj. 510.453 iterations 301
Cbc0038I Pass  52: (6.87 seconds) suminf.   57.20965 (707) obj. 517.507 iterations 219
Cbc0038I Pass  53: (6.94 seconds) suminf.   57.31193 (713) obj. 510.009 iterations 341
Cbc0038I Pass  54: (6.97 seconds) suminf.   57.87784 (726) obj. 511.451 iterations 107
Cbc0038I Pass  55: (7.06 seconds) suminf.   57.50425 (694) obj. 505.273 iterations 485
Cbc0038I Pass  56: (7.12 seconds) suminf.   57.70083 (736) obj. 511.451 iterations 265
Cbc0038I Pass  57: (7.14 seconds) suminf.   57.45533 (728) obj. 512.331 iterations 49
Cbc0038I Pass  58: (7.20 seconds) suminf.   57.87720 (719) obj. 506.435 iterations 292
Cbc0038I Pass  59: (7.24 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 174
Cbc0038I Pass  60: (7.32 seconds) suminf.   58.75220 (720) obj. 501.257 iterations 379
Cbc0038I Pass  61: (7.36 seconds) suminf.   57.05430 (717) obj. 502.4 iterations 167
Cbc0038I Pass  62: (7.40 seconds) suminf.   56.52056 (722) obj. 511.147 iterations 130
Cbc0038I Pass  63: (7.46 seconds) suminf.   60.71266 (717) obj. 502.389 iterations 332
Cbc0038I Pass  64: (7.51 seconds) suminf.   57.30791 (731) obj. 507.97 iterations 212
Cbc0038I Pass  65: (7.53 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 47
Cbc0038I Pass  66: (7.59 seconds) suminf.   59.58395 (721) obj. 502.517 iterations 275
Cbc0038I Pass  67: (7.61 seconds) suminf.   58.40661 (730) obj. 504.314 iterations 106
Cbc0038I Pass  68: (7.63 seconds) suminf.   57.87085 (731) obj. 505.743 iterations 52
Cbc0038I Pass  69: (7.69 seconds) suminf.   57.69465 (709) obj. 512.584 iterations 306
Cbc0038I Pass  70: (7.71 seconds) suminf.   58.07902 (722) obj. 510.808 iterations 76
Cbc0038I Pass  71: (7.80 seconds) suminf.   58.08371 (716) obj. 501.887 iterations 426
Cbc0038I Pass  72: (7.82 seconds) suminf.   57.11957 (721) obj. 502.491 iterations 94
Cbc0038I Pass  73: (7.84 seconds) suminf.   56.52056 (722) obj. 511.147 iterations 74
Cbc0038I Pass  74: (7.90 seconds) suminf.   56.95099 (715) obj. 502.744 iterations 225
Cbc0038I Pass  75: (7.93 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 149
Cbc0038I Pass  76: (8.03 seconds) suminf.   59.21769 (724) obj. 501.077 iterations 479
Cbc0038I Pass  77: (8.11 seconds) suminf.   56.51165 (723) obj. 511.137 iterations 378
Cbc0038I Pass  78: (8.12 seconds) suminf.   56.52056 (722) obj. 511.147 iterations 5
Cbc0038I Pass  79: (8.17 seconds) suminf.   56.95099 (715) obj. 502.744 iterations 252
Cbc0038I Pass  80: (8.21 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 142
Cbc0038I Pass  81: (8.28 seconds) suminf.   59.42045 (725) obj. 501.548 iterations 346
Cbc0038I Pass  82: (8.32 seconds) suminf.   58.40661 (730) obj. 504.314 iterations 169
Cbc0038I Pass  83: (8.34 seconds) suminf.   57.87085 (731) obj. 505.743 iterations 72
Cbc0038I Pass  84: (8.43 seconds) suminf.   58.77064 (702) obj. 501.558 iterations 412
Cbc0038I Pass  85: (8.48 seconds) suminf.   58.07902 (722) obj. 510.808 iterations 193
Cbc0038I Pass  86: (8.55 seconds) suminf.   57.77643 (719) obj. 501.927 iterations 361
Cbc0038I Pass  87: (8.57 seconds) suminf.   57.11957 (721) obj. 502.491 iterations 77
Cbc0038I Pass  88: (8.59 seconds) suminf.   56.52056 (722) obj. 511.147 iterations 72
Cbc0038I Pass  89: (8.65 seconds) suminf.   59.86804 (711) obj. 501.501 iterations 254
Cbc0038I Pass  90: (8.70 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 199
Cbc0038I Pass  91: (8.70 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 0
Cbc0038I Pass  92: (8.78 seconds) suminf.   59.12905 (729) obj. 501.469 iterations 380
Cbc0038I Pass  93: (8.81 seconds) suminf.   57.05430 (717) obj. 502.4 iterations 155
Cbc0038I Pass  94: (8.85 seconds) suminf.   56.52056 (722) obj. 511.147 iterations 126
Cbc0038I Pass  95: (8.91 seconds) suminf.   59.86804 (711) obj. 501.501 iterations 285
Cbc0038I Pass  96: (8.95 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 172
Cbc0038I Pass  97: (8.96 seconds) suminf.   57.15110 (732) obj. 508.072 iterations 0
Cbc0038I Pass  98: (9.02 seconds) suminf.   59.58395 (721) obj. 502.517 iterations 297
Cbc0038I Pass  99: (9.05 seconds) suminf.   58.40661 (730) obj. 504.314 iterations 100
Cbc0038I Pass 100: (9.28 seconds) suminf.  117.76110 (803) obj. 624.416 iterations 1350
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4080 rows 1343 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.44 seconds)
Cbc0038I After 9.44 seconds - Feasibility pump exiting - took 5.99 seconds
Cbc0031I 53 added rows had average density of 17.603774
Cbc0013I At root node, 53 cuts changed objective from 295.88633 to 348 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 73 row cuts average 66.4 elements, 0 column cuts (0 active)  in 0.652 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 303 row cuts average 31.5 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 348 (16.40 seconds)
Cbc0010I After 100 nodes, 1 on tree, 1e+50 best solution, best possible 356 (169.20 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 357 (255.93 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 357 (332.19 seconds)
Cbc0010I After 400 nodes, 28 on tree, 1e+50 best solution, best possible 357 (397.70 seconds)
Cbc0010I After 500 nodes, 44 on tree, 1e+50 best solution, best possible 357 (461.93 seconds)
Cbc0010I After 600 nodes, 44 on tree, 1e+50 best solution, best possible 357 (528.83 seconds)
Cbc0010I After 700 nodes, 39 on tree, 1e+50 best solution, best possible 357 (620.04 seconds)
Cbc0010I After 800 nodes, 42 on tree, 1e+50 best solution, best possible 357 (705.51 seconds)
Cbc0010I After 900 nodes, 43 on tree, 1e+50 best solution, best possible 357 (785.68 seconds)
Cbc0010I After 1000 nodes, 36 on tree, 1e+50 best solution, best possible 357 (864.84 seconds)
Cbc0010I After 1100 nodes, 33 on tree, 1e+50 best solution, best possible 357 (939.70 seconds)
Cbc0010I After 1200 nodes, 27 on tree, 1e+50 best solution, best possible 357 (1014.08 seconds)
Cbc0010I After 1300 nodes, 34 on tree, 1e+50 best solution, best possible 357 (1091.25 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 1e+50 best solution, best possible 357 (1168.00 seconds)
Cbc0010I After 1500 nodes, 22 on tree, 1e+50 best solution, best possible 357 (1281.46 seconds)
Cbc0010I After 1600 nodes, 12 on tree, 1e+50 best solution, best possible 357 (1397.53 seconds)
Cbc0010I After 1700 nodes, 10 on tree, 1e+50 best solution, best possible 357 (1478.29 seconds)
Cbc0010I After 1800 nodes, 9 on tree, 1e+50 best solution, best possible 357 (1568.31 seconds)
Cbc0010I After 1900 nodes, 4 on tree, 1e+50 best solution, best possible 360 (1664.00 seconds)
Cbc0010I After 2000 nodes, 2 on tree, 1e+50 best solution, best possible 370 (1783.59 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 370), took 4284670 iterations and 2015 nodes (1798.18 seconds)
Cbc0032I Strong branching done 21972 times (1789278 iterations), fathomed 213 nodes and fixed 3361 variables
Cbc0035I Maximum depth 46, 0 variables fixed on reduced cost
Cuts at root node changed objective from 295.886 to 348
Probing was tried 10 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.110 seconds)
Gomory was tried 1523 times and created 3529 cuts of which 0 were active after adding rounds of cuts (13.499 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 1523 times and created 15574 cuts of which 0 were active after adding rounds of cuts (5.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    370.000
Enumerated nodes:               2015
Total iterations:               4284670
Time (CPU seconds):             1798.18
Time (Wallclock seconds):       1804.59

Total time (CPU seconds):       1798.20   (Wallclock seconds):       1804.61

