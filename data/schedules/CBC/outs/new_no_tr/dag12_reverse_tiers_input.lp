Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/order/dag12_reverse_tiers_input.lp sec 1800 solve solu no_transitive/dag12_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 591084 - 0.22 seconds
Cgl0002I 121 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 716 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 287 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 3501 rows, 1192 columns (1192 integer (1160 of which binary)) and 11545 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1192 objects (1192 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 539 integers unsatisfied sum - 166.256
Cbc0038I Pass   1: (0.96 seconds) suminf.   87.41263 (563) obj. 731468 iterations 1279
Cbc0038I Pass   2: (1.08 seconds) suminf.   72.78931 (549) obj. 774496 iterations 705
Cbc0038I Pass   3: (1.12 seconds) suminf.   71.47969 (552) obj. 780381 iterations 218
Cbc0038I Pass   4: (1.14 seconds) suminf.   71.16312 (544) obj. 776408 iterations 105
Cbc0038I Pass   5: (1.19 seconds) suminf.   69.11791 (561) obj. 743198 iterations 282
Cbc0038I Pass   6: (1.22 seconds) suminf.   67.68921 (566) obj. 737738 iterations 153
Cbc0038I Pass   7: (1.24 seconds) suminf.   67.49131 (570) obj. 743825 iterations 104
Cbc0038I Pass   8: (1.31 seconds) suminf.   66.84569 (532) obj. 756242 iterations 375
Cbc0038I Pass   9: (1.35 seconds) suminf.   66.94938 (555) obj. 740022 iterations 202
Cbc0038I Pass  10: (1.39 seconds) suminf.   66.63306 (551) obj. 751436 iterations 170
Cbc0038I Pass  11: (1.41 seconds) suminf.   68.29191 (549) obj. 741836 iterations 94
Cbc0038I Pass  12: (1.45 seconds) suminf.   66.75806 (532) obj. 735486 iterations 246
Cbc0038I Pass  13: (1.49 seconds) suminf.   67.57380 (533) obj. 740719 iterations 169
Cbc0038I Pass  14: (1.57 seconds) suminf.   70.39636 (525) obj. 776466 iterations 543
Cbc0038I Pass  15: (1.62 seconds) suminf.   69.25709 (536) obj. 745107 iterations 265
Cbc0038I Pass  16: (1.64 seconds) suminf.   69.27611 (540) obj. 742893 iterations 50
Cbc0038I Pass  17: (1.68 seconds) suminf.   67.10335 (546) obj. 752116 iterations 196
Cbc0038I Pass  18: (1.72 seconds) suminf.   67.64587 (530) obj. 749734 iterations 234
Cbc0038I Pass  19: (1.76 seconds) suminf.   66.32015 (560) obj. 757911 iterations 198
Cbc0038I Pass  20: (1.77 seconds) suminf.   66.02326 (556) obj. 757961 iterations 17
Cbc0038I Pass  21: (1.81 seconds) suminf.   67.13722 (525) obj. 749624 iterations 219
Cbc0038I Pass  22: (1.86 seconds) suminf.   64.84327 (566) obj. 764569 iterations 215
Cbc0038I Pass  23: (1.88 seconds) suminf.   65.43994 (562) obj. 760504 iterations 84
Cbc0038I Pass  24: (1.95 seconds) suminf.   68.94577 (555) obj. 759327 iterations 431
Cbc0038I Pass  25: (2.01 seconds) suminf.   61.48002 (589) obj. 773734 iterations 328
Cbc0038I Pass  26: (2.05 seconds) suminf.   63.22397 (572) obj. 770012 iterations 208
Cbc0038I Pass  27: (2.09 seconds) suminf.   60.82654 (586) obj. 788614 iterations 171
Cbc0038I Pass  28: (2.17 seconds) suminf.   66.18828 (545) obj. 769696 iterations 434
Cbc0038I Pass  29: (2.22 seconds) suminf.   59.00954 (576) obj. 785643 iterations 278
Cbc0038I Pass  30: (2.28 seconds) suminf.   59.66069 (553) obj. 779592 iterations 332
Cbc0038I Pass  31: (2.32 seconds) suminf.   61.84145 (587) obj. 791163 iterations 188
Cbc0038I Pass  32: (2.37 seconds) suminf.   59.15404 (558) obj. 836143 iterations 256
Cbc0038I Pass  33: (2.40 seconds) suminf.   60.48630 (575) obj. 839321 iterations 138
Cbc0038I Pass  34: (2.49 seconds) suminf.   60.94868 (502) obj. 798994 iterations 525
Cbc0038I Pass  35: (2.54 seconds) suminf.   56.42862 (536) obj. 810342 iterations 317
Cbc0038I Pass  36: (2.55 seconds) suminf.   56.49785 (538) obj. 810610 iterations 32
Cbc0038I Pass  37: (2.57 seconds) suminf.   55.35500 (541) obj. 810460 iterations 98
Cbc0038I Pass  38: (2.63 seconds) suminf.   60.07047 (526) obj. 809068 iterations 276
Cbc0038I Pass  39: (2.67 seconds) suminf.   55.74143 (567) obj. 829195 iterations 243
Cbc0038I Pass  40: (2.68 seconds) suminf.   55.59144 (571) obj. 823436 iterations 35
Cbc0038I Pass  41: (2.73 seconds) suminf.   59.94505 (519) obj. 796281 iterations 281
Cbc0038I Pass  42: (2.78 seconds) suminf.   56.54212 (536) obj. 811061 iterations 282
Cbc0038I Pass  43: (2.79 seconds) suminf.   56.66685 (539) obj. 810889 iterations 12
Cbc0038I Pass  44: (2.84 seconds) suminf.   61.60396 (519) obj. 801777 iterations 268
Cbc0038I Pass  45: (2.89 seconds) suminf.   58.85009 (553) obj. 810517 iterations 267
Cbc0038I Pass  46: (2.93 seconds) suminf.   61.84793 (523) obj. 794581 iterations 252
Cbc0038I Pass  47: (3.13 seconds) suminf.   96.52572 (533) obj. 1.19159e+06 iterations 1347
Cbc0038I Pass  48: (3.25 seconds) suminf.   71.48258 (486) obj. 1.22379e+06 iterations 803
Cbc0038I Pass  49: (3.30 seconds) suminf.   68.86710 (472) obj. 1.21971e+06 iterations 265
Cbc0038I Pass  50: (3.32 seconds) suminf.   69.68673 (480) obj. 1.2036e+06 iterations 106
Cbc0038I Pass  51: (3.39 seconds) suminf.   65.83952 (465) obj. 1.22122e+06 iterations 373
Cbc0038I Pass  52: (3.42 seconds) suminf.   66.61144 (464) obj. 1.24785e+06 iterations 150
Cbc0038I Pass  53: (3.44 seconds) suminf.   66.17885 (474) obj. 1.25364e+06 iterations 85
Cbc0038I Pass  54: (3.45 seconds) suminf.   65.26333 (474) obj. 1.2412e+06 iterations 42
Cbc0038I Pass  55: (3.52 seconds) suminf.   63.83297 (444) obj. 1.24198e+06 iterations 430
Cbc0038I Pass  56: (3.58 seconds) suminf.   63.92582 (469) obj. 1.24307e+06 iterations 350
Cbc0038I Pass  57: (3.61 seconds) suminf.   62.89812 (478) obj. 1.24634e+06 iterations 117
Cbc0038I Pass  58: (3.68 seconds) suminf.   58.84851 (450) obj. 1.2372e+06 iterations 405
Cbc0038I Pass  59: (3.72 seconds) suminf.   55.90460 (445) obj. 1.24501e+06 iterations 245
Cbc0038I Pass  60: (3.74 seconds) suminf.   56.43064 (448) obj. 1.24187e+06 iterations 43
Cbc0038I Pass  61: (3.79 seconds) suminf.   55.43490 (399) obj. 1.23577e+06 iterations 349
Cbc0038I Pass  62: (3.83 seconds) suminf.   54.55335 (378) obj. 1.22573e+06 iterations 244
Cbc0038I Pass  63: (3.84 seconds) suminf.   54.36375 (377) obj. 1.21897e+06 iterations 12
Cbc0038I Pass  64: (3.89 seconds) suminf.   55.22023 (385) obj. 1.31974e+06 iterations 277
Cbc0038I Pass  65: (3.93 seconds) suminf.   52.99654 (382) obj. 1.31599e+06 iterations 178
Cbc0038I Pass  66: (3.94 seconds) suminf.   52.91982 (377) obj. 1.31799e+06 iterations 28
Cbc0038I Pass  67: (4.01 seconds) suminf.   50.49210 (332) obj. 1.4022e+06 iterations 436
Cbc0038I Pass  68: (4.04 seconds) suminf.   48.41327 (342) obj. 1.39822e+06 iterations 128
Cbc0038I Pass  69: (4.08 seconds) suminf.   42.07716 (342) obj. 1.40634e+06 iterations 248
Cbc0038I Pass  70: (4.10 seconds) suminf.   40.80099 (350) obj. 1.38922e+06 iterations 95
Cbc0038I Pass  71: (4.17 seconds) suminf.   38.96164 (309) obj. 1.35572e+06 iterations 423
Cbc0038I Pass  72: (4.19 seconds) suminf.   38.63269 (295) obj. 1.35611e+06 iterations 29
Cbc0038I Pass  73: (4.26 seconds) suminf.   35.17344 (306) obj. 1.14028e+06 iterations 485
Cbc0038I Pass  74: (4.27 seconds) suminf.   33.23648 (288) obj. 1.14105e+06 iterations 89
Cbc0038I Pass  75: (4.31 seconds) suminf.   30.72331 (298) obj. 1.10844e+06 iterations 334
Cbc0038I Pass  76: (4.33 seconds) suminf.   28.12858 (279) obj. 1.10605e+06 iterations 110
Cbc0038I Pass  77: (4.35 seconds) suminf.   26.63356 (268) obj. 1.10578e+06 iterations 102
Cbc0038I Pass  78: (4.38 seconds) suminf.   26.73261 (260) obj. 1.10597e+06 iterations 250
Cbc0038I Pass  79: (4.39 seconds) suminf.   26.26542 (267) obj. 1.10603e+06 iterations 21
Cbc0038I Pass  80: (4.42 seconds) suminf.   26.17077 (251) obj. 1.10241e+06 iterations 135
Cbc0038I Pass  81: (4.45 seconds) suminf.   25.26222 (271) obj. 1.11115e+06 iterations 210
Cbc0038I Pass  82: (4.46 seconds) suminf.   24.66779 (260) obj. 1.11587e+06 iterations 59
Cbc0038I Pass  83: (4.48 seconds) suminf.   22.92285 (259) obj. 1.11422e+06 iterations 113
Cbc0038I Pass  84: (4.52 seconds) suminf.   20.32563 (218) obj. 1.09832e+06 iterations 238
Cbc0038I Pass  85: (4.54 seconds) suminf.   19.95021 (229) obj. 1.09858e+06 iterations 113
Cbc0038I Pass  86: (4.56 seconds) suminf.   21.28065 (218) obj. 1.09839e+06 iterations 91
Cbc0038I Pass  87: (4.58 seconds) suminf.   20.03626 (222) obj. 1.09902e+06 iterations 130
Cbc0038I Pass  88: (4.61 seconds) suminf.   21.97999 (229) obj. 1.10067e+06 iterations 187
Cbc0038I Pass  89: (4.63 seconds) suminf.   20.83076 (215) obj. 1.10196e+06 iterations 115
Cbc0038I Pass  90: (4.65 seconds) suminf.   19.43321 (213) obj. 1.10283e+06 iterations 82
Cbc0038I Pass  91: (4.68 seconds) suminf.   19.49275 (216) obj. 1.12017e+06 iterations 158
Cbc0038I Pass  92: (4.70 seconds) suminf.   19.09626 (209) obj. 1.13466e+06 iterations 110
Cbc0038I Pass  93: (4.72 seconds) suminf.   22.71703 (219) obj. 1.15232e+06 iterations 152
Cbc0038I Pass  94: (4.74 seconds) suminf.   22.43572 (224) obj. 1.15568e+06 iterations 89
Cbc0038I Pass  95: (4.78 seconds) suminf.   23.24075 (218) obj. 1.11071e+06 iterations 343
Cbc0038I Pass  96: (4.80 seconds) suminf.   22.84489 (240) obj. 1.11979e+06 iterations 99
Cbc0038I Pass  97: (4.81 seconds) suminf.   22.99039 (242) obj. 1.11885e+06 iterations 35
Cbc0038I Pass  98: (4.85 seconds) suminf.   19.70415 (219) obj. 1.10875e+06 iterations 336
Cbc0038I Pass  99: (4.87 seconds) suminf.   18.00809 (214) obj. 1.1161e+06 iterations 116
Cbc0038I Pass 100: (5.04 seconds) suminf.   70.81052 (420) obj. 1.12021e+06 iterations 1331
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3501 rows 1192 columns, reduced to 3102 rows 1019 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.22 seconds)
Cbc0038I After 5.22 seconds - Feasibility pump exiting - took 4.46 seconds
Cbc0031I 26 added rows had average density of 6.1538462
Cbc0013I At root node, 26 cuts changed objective from 592554.67 to 622592 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 36 row cuts average 2.4 elements, 6 column cuts (6 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 83 row cuts average 165.9 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 109 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 622592 (9.67 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 622592 (45.67 seconds)
Cbc0010I After 200 nodes, 2 on tree, 1e+50 best solution, best possible 622592 (74.21 seconds)
Cbc0010I After 300 nodes, 5 on tree, 1e+50 best solution, best possible 622592 (106.15 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 622592 (130.41 seconds)
Cbc0010I After 500 nodes, 8 on tree, 1e+50 best solution, best possible 622592 (154.91 seconds)
Cbc0010I After 600 nodes, 9 on tree, 1e+50 best solution, best possible 622592 (183.28 seconds)
Cbc0010I After 700 nodes, 4 on tree, 1e+50 best solution, best possible 622592 (207.18 seconds)
Cbc0010I After 800 nodes, 14 on tree, 1e+50 best solution, best possible 622592 (242.90 seconds)
Cbc0010I After 900 nodes, 23 on tree, 1e+50 best solution, best possible 622592 (270.72 seconds)
Cbc0010I After 1000 nodes, 16 on tree, 1e+50 best solution, best possible 622592 (305.20 seconds)
Cbc0010I After 1100 nodes, 3 on tree, 1e+50 best solution, best possible 622659 (329.00 seconds)
Cbc0010I After 1200 nodes, 4 on tree, 1e+50 best solution, best possible 622665 (360.63 seconds)
Cbc0010I After 1300 nodes, 1 on tree, 1e+50 best solution, best possible 622670 (386.17 seconds)
Cbc0010I After 1400 nodes, 1 on tree, 1e+50 best solution, best possible 622703 (412.23 seconds)
Cbc0010I After 1500 nodes, 1 on tree, 1e+50 best solution, best possible 622743 (439.68 seconds)
Cbc0010I After 1600 nodes, 1 on tree, 1e+50 best solution, best possible 622784 (468.46 seconds)
Cbc0010I After 1700 nodes, 2 on tree, 1e+50 best solution, best possible 622823 (498.75 seconds)
Cbc0010I After 1800 nodes, 2 on tree, 1e+50 best solution, best possible 622859 (526.58 seconds)
Cbc0010I After 1900 nodes, 1 on tree, 1e+50 best solution, best possible 622896 (554.02 seconds)
Cbc0010I After 2000 nodes, 1 on tree, 1e+50 best solution, best possible 622935 (583.44 seconds)
Cbc0010I After 2100 nodes, 2 on tree, 1e+50 best solution, best possible 622972 (612.01 seconds)
Cbc0010I After 2200 nodes, 1 on tree, 1e+50 best solution, best possible 623015 (641.44 seconds)
Cbc0010I After 2300 nodes, 1 on tree, 1e+50 best solution, best possible 623060 (671.85 seconds)
Cbc0010I After 2400 nodes, 1 on tree, 1e+50 best solution, best possible 623102 (701.51 seconds)
Cbc0010I After 2500 nodes, 1 on tree, 1e+50 best solution, best possible 623143 (730.43 seconds)
Cbc0010I After 2600 nodes, 1 on tree, 1e+50 best solution, best possible 623183 (759.93 seconds)
Cbc0010I After 2700 nodes, 1 on tree, 1e+50 best solution, best possible 623222 (788.83 seconds)
Cbc0010I After 2800 nodes, 1 on tree, 1e+50 best solution, best possible 623260 (816.95 seconds)
Cbc0010I After 2900 nodes, 1 on tree, 1e+50 best solution, best possible 623299 (846.45 seconds)
Cbc0010I After 3000 nodes, 2 on tree, 1e+50 best solution, best possible 623339 (876.85 seconds)
Cbc0010I After 3100 nodes, 2 on tree, 1e+50 best solution, best possible 623380 (906.29 seconds)
Cbc0010I After 3200 nodes, 1 on tree, 1e+50 best solution, best possible 623423 (935.86 seconds)
Cbc0010I After 3300 nodes, 1 on tree, 1e+50 best solution, best possible 623465 (966.04 seconds)
Cbc0010I After 3400 nodes, 3 on tree, 1e+50 best solution, best possible 623504 (995.65 seconds)
Cbc0010I After 3500 nodes, 1 on tree, 1e+50 best solution, best possible 623543 (1024.16 seconds)
Cbc0010I After 3600 nodes, 1 on tree, 1e+50 best solution, best possible 623582 (1052.72 seconds)
Cbc0010I After 3700 nodes, 1 on tree, 1e+50 best solution, best possible 623619 (1080.38 seconds)
Cbc0010I After 3800 nodes, 1 on tree, 1e+50 best solution, best possible 623658 (1108.60 seconds)
Cbc0010I After 3900 nodes, 1 on tree, 1e+50 best solution, best possible 623695 (1136.11 seconds)
Cbc0010I After 4000 nodes, 1 on tree, 1e+50 best solution, best possible 623739 (1166.42 seconds)
Cbc0010I After 4100 nodes, 1 on tree, 1e+50 best solution, best possible 623781 (1197.75 seconds)
Cbc0010I After 4200 nodes, 2 on tree, 1e+50 best solution, best possible 623823 (1228.52 seconds)
Cbc0010I After 4300 nodes, 1 on tree, 1e+50 best solution, best possible 623871 (1260.72 seconds)
Cbc0010I After 4400 nodes, 1 on tree, 1e+50 best solution, best possible 623909 (1290.62 seconds)
Cbc0010I After 4500 nodes, 2 on tree, 1e+50 best solution, best possible 623947 (1319.72 seconds)
Cbc0010I After 4600 nodes, 1 on tree, 1e+50 best solution, best possible 623989 (1350.54 seconds)
Cbc0010I After 4700 nodes, 1 on tree, 1e+50 best solution, best possible 624029 (1381.55 seconds)
Cbc0010I After 4800 nodes, 1 on tree, 1e+50 best solution, best possible 624072 (1413.82 seconds)
Cbc0010I After 4900 nodes, 1 on tree, 1e+50 best solution, best possible 624113 (1444.83 seconds)
Cbc0010I After 5000 nodes, 1 on tree, 1e+50 best solution, best possible 624155 (1476.33 seconds)
Cbc0010I After 5100 nodes, 1 on tree, 1e+50 best solution, best possible 624194 (1507.14 seconds)
Cbc0010I After 5200 nodes, 1 on tree, 1e+50 best solution, best possible 624236 (1538.85 seconds)
Cbc0010I After 5300 nodes, 1 on tree, 1e+50 best solution, best possible 624278 (1570.45 seconds)
Cbc0010I After 5400 nodes, 1 on tree, 1e+50 best solution, best possible 624319 (1601.38 seconds)
Cbc0010I After 5500 nodes, 1 on tree, 1e+50 best solution, best possible 624359 (1631.68 seconds)
Cbc0010I After 5600 nodes, 1 on tree, 1e+50 best solution, best possible 624400 (1663.89 seconds)
Cbc0010I After 5700 nodes, 2 on tree, 1e+50 best solution, best possible 624439 (1695.75 seconds)
Cbc0010I After 5800 nodes, 1 on tree, 1e+50 best solution, best possible 624481 (1727.82 seconds)
Cbc0010I After 5900 nodes, 1 on tree, 1e+50 best solution, best possible 624523 (1760.98 seconds)
Cbc0010I After 6000 nodes, 2 on tree, 1e+50 best solution, best possible 624564 (1794.72 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 624564), took 8576301 iterations and 6015 nodes (1799.52 seconds)
Cbc0032I Strong branching done 25942 times (1959520 iterations), fathomed 1924 nodes and fixed 2468 variables
Cbc0035I Maximum depth 1979, 0 variables fixed on reduced cost
Cuts at root node changed objective from 592555 to 622592
Probing was tried 1115 times and created 31658 cuts of which 0 were active after adding rounds of cuts (5.417 seconds)
Gomory was tried 1050 times and created 241 cuts of which 0 were active after adding rounds of cuts (3.841 seconds)
Knapsack was tried 1050 times and created 2629 cuts of which 0 were active after adding rounds of cuts (1.159 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 1050 times and created 5640 cuts of which 0 were active after adding rounds of cuts (1.436 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ImplicationCuts was tried 114 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    624564.000
Enumerated nodes:               6015
Total iterations:               8576301
Time (CPU seconds):             1799.52
Time (Wallclock seconds):       1809.39

Total time (CPU seconds):       1799.54   (Wallclock seconds):       1809.41

