Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag63_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/dag63_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 823311 - 0.99 seconds
Cgl0002I 137 variables fixed
Cgl0003I 0 fixed, 27 tightened bounds, 1074 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 81 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 91 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 4919 rows, 1657 columns (1657 integer (1620 of which binary)) and 16188 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1657 objects (1657 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 784 integers unsatisfied sum - 222.205
Cbc0038I Pass   1: (3.12 seconds) suminf.  112.62869 (669) obj. 1.13046e+06 iterations 2587
Cbc0038I Pass   2: (3.30 seconds) suminf.  108.34053 (618) obj. 1.14039e+06 iterations 717
Cbc0038I Pass   3: (3.39 seconds) suminf.  104.67724 (621) obj. 1.15049e+06 iterations 278
Cbc0038I Pass   4: (3.42 seconds) suminf.  104.41935 (625) obj. 1.15049e+06 iterations 83
Cbc0038I Pass   5: (3.64 seconds) suminf.   94.26437 (639) obj. 1.15463e+06 iterations 926
Cbc0038I Pass   6: (3.70 seconds) suminf.   92.99796 (628) obj. 1.16057e+06 iterations 184
Cbc0038I Pass   7: (3.78 seconds) suminf.   93.12148 (691) obj. 1.16211e+06 iterations 225
Cbc0038I Pass   8: (3.81 seconds) suminf.   92.68506 (674) obj. 1.1635e+06 iterations 89
Cbc0038I Pass   9: (3.95 seconds) suminf.   91.38761 (633) obj. 1.227e+06 iterations 506
Cbc0038I Pass  10: (4.02 seconds) suminf.   92.27496 (655) obj. 1.25423e+06 iterations 185
Cbc0038I Pass  11: (4.04 seconds) suminf.   92.71718 (632) obj. 1.25225e+06 iterations 16
Cbc0038I Pass  12: (4.20 seconds) suminf.   82.85956 (610) obj. 1.12891e+06 iterations 670
Cbc0038I Pass  13: (4.36 seconds) suminf.   84.33134 (572) obj. 1.12124e+06 iterations 603
Cbc0038I Pass  14: (4.39 seconds) suminf.   82.75465 (548) obj. 1.11982e+06 iterations 112
Cbc0038I Pass  15: (4.60 seconds) suminf.   71.95815 (501) obj. 1.20489e+06 iterations 872
Cbc0038I Pass  16: (4.70 seconds) suminf.   66.14987 (530) obj. 1.19887e+06 iterations 442
Cbc0038I Pass  17: (4.71 seconds) suminf.   66.09345 (532) obj. 1.19855e+06 iterations 20
Cbc0038I Pass  18: (4.90 seconds) suminf.   67.59213 (467) obj. 1.18814e+06 iterations 899
Cbc0038I Pass  19: (5.05 seconds) suminf.   63.64673 (424) obj. 1.216e+06 iterations 697
Cbc0038I Pass  20: (5.09 seconds) suminf.   63.05486 (458) obj. 1.21637e+06 iterations 153
Cbc0038I Pass  21: (5.10 seconds) suminf.   63.32285 (461) obj. 1.21641e+06 iterations 26
Cbc0038I Pass  22: (5.30 seconds) suminf.   57.29887 (423) obj. 1.42762e+06 iterations 977
Cbc0038I Pass  23: (5.32 seconds) suminf.   57.01176 (429) obj. 1.47422e+06 iterations 50
Cbc0038I Pass  24: (5.52 seconds) suminf.   57.61524 (420) obj. 1.24469e+06 iterations 1087
Cbc0038I Pass  25: (5.55 seconds) suminf.   56.69446 (442) obj. 1.26183e+06 iterations 93
Cbc0038I Pass  26: (5.58 seconds) suminf.   55.94074 (446) obj. 1.27685e+06 iterations 89
Cbc0038I Pass  27: (5.61 seconds) suminf.   55.36754 (446) obj. 1.2781e+06 iterations 128
Cbc0038I Pass  28: (5.77 seconds) suminf.   55.77116 (388) obj. 1.22852e+06 iterations 863
Cbc0038I Pass  29: (5.83 seconds) suminf.   53.87587 (383) obj. 1.22491e+06 iterations 277
Cbc0038I Pass  30: (5.85 seconds) suminf.   53.29123 (394) obj. 1.22577e+06 iterations 87
Cbc0038I Pass  31: (5.95 seconds) suminf.   57.45858 (388) obj. 1.28095e+06 iterations 497
Cbc0038I Pass  32: (5.99 seconds) suminf.   55.23778 (378) obj. 1.31765e+06 iterations 179
Cbc0038I Pass  33: (6.07 seconds) suminf.   51.39869 (369) obj. 1.41042e+06 iterations 384
Cbc0038I Pass  34: (6.08 seconds) suminf.   51.10134 (376) obj. 1.41057e+06 iterations 50
Cbc0038I Pass  35: (6.15 seconds) suminf.   50.03578 (379) obj. 1.41246e+06 iterations 264
Cbc0038I Pass  36: (6.21 seconds) suminf.   49.18846 (375) obj. 1.41132e+06 iterations 314
Cbc0038I Pass  37: (6.29 seconds) suminf.   51.97594 (393) obj. 1.41583e+06 iterations 352
Cbc0038I Pass  38: (6.35 seconds) suminf.   48.51621 (383) obj. 1.40793e+06 iterations 294
Cbc0038I Pass  39: (6.36 seconds) suminf.   47.07982 (381) obj. 1.40842e+06 iterations 22
Cbc0038I Pass  40: (6.37 seconds) suminf.   47.07982 (381) obj. 1.40842e+06 iterations 6
Cbc0038I Pass  41: (6.45 seconds) suminf.   44.29199 (325) obj. 1.405e+06 iterations 387
Cbc0038I Pass  42: (6.54 seconds) suminf.   44.15357 (335) obj. 1.40522e+06 iterations 413
Cbc0038I Pass  43: (6.55 seconds) suminf.   43.89609 (331) obj. 1.40511e+06 iterations 4
Cbc0038I Pass  44: (6.63 seconds) suminf.   43.39682 (356) obj. 1.40618e+06 iterations 407
Cbc0038I Pass  45: (6.65 seconds) suminf.   42.58476 (348) obj. 1.40571e+06 iterations 93
Cbc0038I Pass  46: (6.66 seconds) suminf.   42.84493 (348) obj. 1.40571e+06 iterations 11
Cbc0038I Pass  47: (6.75 seconds) suminf.   43.92601 (368) obj. 1.41676e+06 iterations 410
Cbc0038I Pass  48: (6.83 seconds) suminf.   41.54051 (347) obj. 1.45493e+06 iterations 340
Cbc0038I Pass  49: (6.94 seconds) suminf.   41.65507 (327) obj. 1.4275e+06 iterations 547
Cbc0038I Pass  50: (6.99 seconds) suminf.   40.93382 (321) obj. 1.42812e+06 iterations 202
Cbc0038I Pass  51: (7.08 seconds) suminf.   40.98005 (335) obj. 1.43682e+06 iterations 501
Cbc0038I Pass  52: (7.13 seconds) suminf.   40.94359 (320) obj. 1.4655e+06 iterations 226
Cbc0038I Pass  53: (7.14 seconds) suminf.   40.94359 (320) obj. 1.4655e+06 iterations 11
Cbc0038I Pass  54: (7.24 seconds) suminf.   40.65796 (332) obj. 1.46368e+06 iterations 613
Cbc0038I Pass  55: (7.28 seconds) suminf.   40.82279 (373) obj. 1.45164e+06 iterations 119
Cbc0038I Pass  56: (7.38 seconds) suminf.   37.95992 (357) obj. 1.41262e+06 iterations 494
Cbc0038I Pass  57: (7.44 seconds) suminf.   36.52327 (312) obj. 1.42246e+06 iterations 337
Cbc0038I Pass  58: (7.46 seconds) suminf.   36.19822 (311) obj. 1.42618e+06 iterations 33
Cbc0038I Pass  59: (7.53 seconds) suminf.   32.71946 (299) obj. 1.45109e+06 iterations 347
Cbc0038I Pass  60: (7.54 seconds) suminf.   31.99081 (302) obj. 1.43851e+06 iterations 64
Cbc0038I Pass  61: (7.61 seconds) suminf.   29.76364 (319) obj. 1.43423e+06 iterations 370
Cbc0038I Pass  62: (7.63 seconds) suminf.   29.60157 (294) obj. 1.44823e+06 iterations 81
Cbc0038I Pass  63: (7.65 seconds) suminf.   27.41109 (313) obj. 1.45586e+06 iterations 69
Cbc0038I Pass  64: (7.66 seconds) suminf.   27.16979 (290) obj. 1.44324e+06 iterations 32
Cbc0038I Pass  65: (7.76 seconds) suminf.   30.16500 (285) obj. 1.44956e+06 iterations 540
Cbc0038I Pass  66: (7.81 seconds) suminf.   27.39474 (281) obj. 1.44913e+06 iterations 217
Cbc0038I Pass  67: (7.82 seconds) suminf.   27.30857 (283) obj. 1.44955e+06 iterations 12
Cbc0038I Pass  68: (7.88 seconds) suminf.   24.10173 (272) obj. 1.41661e+06 iterations 278
Cbc0038I Pass  69: (7.88 seconds) suminf.   24.01224 (269) obj. 1.41656e+06 iterations 9
Cbc0038I Pass  70: (7.97 seconds) suminf.   23.94749 (285) obj. 1.41888e+06 iterations 515
Cbc0038I Pass  71: (7.98 seconds) suminf.   23.80997 (285) obj. 1.42182e+06 iterations 52
Cbc0038I Pass  72: (8.11 seconds) suminf.   26.94668 (321) obj. 1.41225e+06 iterations 723
Cbc0038I Pass  73: (8.19 seconds) suminf.   24.51154 (278) obj. 1.44368e+06 iterations 406
Cbc0038I Pass  74: (8.28 seconds) suminf.   27.19495 (296) obj. 1.42915e+06 iterations 580
Cbc0038I Pass  75: (8.32 seconds) suminf.   24.71362 (295) obj. 1.4235e+06 iterations 162
Cbc0038I Pass  76: (8.44 seconds) suminf.   25.67708 (289) obj. 1.41391e+06 iterations 706
Cbc0038I Pass  77: (8.50 seconds) suminf.   23.16304 (286) obj. 1.4473e+06 iterations 306
Cbc0038I Pass  78: (8.55 seconds) suminf.   20.51282 (264) obj. 1.42574e+06 iterations 274
Cbc0038I Pass  79: (8.56 seconds) suminf.   20.51282 (264) obj. 1.42574e+06 iterations 3
Cbc0038I Pass  80: (8.65 seconds) suminf.   19.54839 (242) obj. 1.41762e+06 iterations 458
Cbc0038I Pass  81: (8.67 seconds) suminf.   18.43566 (246) obj. 1.41604e+06 iterations 93
Cbc0038I Pass  82: (8.73 seconds) suminf.   18.90164 (236) obj. 1.41351e+06 iterations 390
Cbc0038I Pass  83: (8.79 seconds) suminf.   16.67470 (231) obj. 1.41407e+06 iterations 264
Cbc0038I Pass  84: (8.89 seconds) suminf.   21.82578 (260) obj. 1.43407e+06 iterations 690
Cbc0038I Pass  85: (8.92 seconds) suminf.   21.78003 (263) obj. 1.43384e+06 iterations 96
Cbc0038I Pass  86: (9.04 seconds) suminf.   21.72717 (252) obj. 1.42749e+06 iterations 695
Cbc0038I Pass  87: (9.06 seconds) suminf.   21.80474 (252) obj. 1.42756e+06 iterations 97
Cbc0038I Pass  88: (9.13 seconds) suminf.   22.59961 (241) obj. 1.43131e+06 iterations 376
Cbc0038I Pass  89: (9.16 seconds) suminf.   21.34431 (240) obj. 1.43241e+06 iterations 149
Cbc0038I Pass  90: (9.24 seconds) suminf.   17.07000 (223) obj. 1.42381e+06 iterations 473
Cbc0038I Pass  91: (9.29 seconds) suminf.   16.46035 (232) obj. 1.43329e+06 iterations 282
Cbc0038I Pass  92: (9.39 seconds) suminf.   15.59525 (243) obj. 1.44031e+06 iterations 550
Cbc0038I Pass  93: (9.44 seconds) suminf.   14.17352 (238) obj. 1.4432e+06 iterations 238
Cbc0038I Pass  94: (9.56 seconds) suminf.    9.51663 (201) obj. 1.43874e+06 iterations 790
Cbc0038I Pass  95: (9.58 seconds) suminf.    9.36085 (208) obj. 1.43875e+06 iterations 82
Cbc0038I Pass  96: (9.61 seconds) suminf.   13.42702 (198) obj. 1.42887e+06 iterations 192
Cbc0038I Pass  97: (9.63 seconds) suminf.   12.22328 (217) obj. 1.42257e+06 iterations 87
Cbc0038I Pass  98: (9.74 seconds) suminf.   14.46930 (185) obj. 1.42481e+06 iterations 609
Cbc0038I Pass  99: (9.75 seconds) suminf.   10.81593 (178) obj. 1.42445e+06 iterations 54
Cbc0038I Pass 100: (10.20 seconds) suminf.   73.34161 (492) obj. 1.6106e+06 iterations 2543
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4919 rows 1657 columns, reduced to 4135 rows 1327 columns - too large
Cbc0038I Mini branch and bound did not improve solution (10.59 seconds)
Cbc0038I After 10.59 seconds - Feasibility pump exiting - took 8.19 seconds
Cbc0031I 32 added rows had average density of 6.75
Cbc0013I At root node, 32 cuts changed objective from 835012.46 to 1130496 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 58 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 57 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.388 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 111 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1130496 (17.53 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 1130496 (142.77 seconds)
Cbc0010I After 200 nodes, 13 on tree, 1e+50 best solution, best possible 1130496 (251.27 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 1130496 (360.37 seconds)
Cbc0010I After 400 nodes, 3 on tree, 1e+50 best solution, best possible 1130504 (465.63 seconds)
Cbc0010I After 500 nodes, 19 on tree, 1e+50 best solution, best possible 1130504 (526.88 seconds)
Cbc0010I After 600 nodes, 27 on tree, 1e+50 best solution, best possible 1130504 (580.25 seconds)
Cbc0010I After 700 nodes, 35 on tree, 1e+50 best solution, best possible 1130504 (652.32 seconds)
Cbc0010I After 800 nodes, 46 on tree, 1e+50 best solution, best possible 1130504 (708.55 seconds)
Cbc0010I After 900 nodes, 42 on tree, 1e+50 best solution, best possible 1130504 (775.99 seconds)
Cbc0010I After 1000 nodes, 44 on tree, 1e+50 best solution, best possible 1130504 (845.29 seconds)
Cbc0010I After 1100 nodes, 26 on tree, 1e+50 best solution, best possible 1130504 (907.08 seconds)
Cbc0010I After 1200 nodes, 14 on tree, 1e+50 best solution, best possible 1130504 (975.57 seconds)
Cbc0010I After 1300 nodes, 9 on tree, 1e+50 best solution, best possible 1130504 (1032.73 seconds)
Cbc0010I After 1400 nodes, 11 on tree, 1e+50 best solution, best possible 1130505 (1089.27 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 1e+50 best solution, best possible 1130505 (1150.64 seconds)
Cbc0010I After 1600 nodes, 20 on tree, 1e+50 best solution, best possible 1130505 (1212.75 seconds)
Cbc0010I After 1700 nodes, 15 on tree, 1e+50 best solution, best possible 1130505 (1258.45 seconds)
Cbc0010I After 1800 nodes, 20 on tree, 1e+50 best solution, best possible 1130505 (1311.24 seconds)
Cbc0010I After 1900 nodes, 27 on tree, 1e+50 best solution, best possible 1130505 (1366.30 seconds)
Cbc0010I After 2000 nodes, 15 on tree, 1e+50 best solution, best possible 1130505 (1400.54 seconds)
Cbc0010I After 2100 nodes, 26 on tree, 1e+50 best solution, best possible 1130505 (1435.17 seconds)
Cbc0010I After 2200 nodes, 19 on tree, 1e+50 best solution, best possible 1130505 (1472.05 seconds)
Cbc0010I After 2300 nodes, 3 on tree, 1e+50 best solution, best possible 1130505 (1522.93 seconds)
Cbc0010I After 2400 nodes, 6 on tree, 1e+50 best solution, best possible 1130505 (1576.98 seconds)
Cbc0010I After 2500 nodes, 3 on tree, 1e+50 best solution, best possible 1130505 (1640.71 seconds)
Cbc0010I After 2600 nodes, 4 on tree, 1e+50 best solution, best possible 1130505 (1685.60 seconds)
Cbc0010I After 2700 nodes, 9 on tree, 1e+50 best solution, best possible 1130505 (1765.32 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1130505), took 4437981 iterations and 2747 nodes (1799.74 seconds)
Cbc0032I Strong branching done 21906 times (1701578 iterations), fathomed 146 nodes and fixed 2487 variables
Cbc0035I Maximum depth 52, 0 variables fixed on reduced cost
Cuts at root node changed objective from 835012 to 1.1305e+06
Probing was tried 2110 times and created 124695 cuts of which 0 were active after adding rounds of cuts (17.830 seconds)
Gomory was tried 1744 times and created 1979 cuts of which 0 were active after adding rounds of cuts (11.666 seconds)
Knapsack was tried 1744 times and created 2574 cuts of which 0 were active after adding rounds of cuts (2.924 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 1744 times and created 21710 cuts of which 0 were active after adding rounds of cuts (3.757 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
ImplicationCuts was tried 116 times and created 168 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1130505.000
Enumerated nodes:               2747
Total iterations:               4437981
Time (CPU seconds):             1799.74
Time (Wallclock seconds):       1800.50

Total time (CPU seconds):       1799.76   (Wallclock seconds):       1800.52

