Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_5_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_5_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 295.613 - 1.14 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 1039 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 482 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 217 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16262 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 830 integers unsatisfied sum - 215.941
Cbc0038I Pass   1: (3.12 seconds) suminf.   96.49389 (687) obj. 437.127 iterations 2204
Cbc0038I Pass   2: (3.27 seconds) suminf.   75.52123 (718) obj. 473.756 iterations 861
Cbc0038I Pass   3: (3.35 seconds) suminf.   76.06985 (720) obj. 503.192 iterations 361
Cbc0038I Pass   4: (3.38 seconds) suminf.   74.49967 (747) obj. 500.749 iterations 125
Cbc0038I Pass   5: (3.46 seconds) suminf.   70.05880 (722) obj. 507.062 iterations 409
Cbc0038I Pass   6: (3.48 seconds) suminf.   74.19964 (702) obj. 505.569 iterations 96
Cbc0038I Pass   7: (3.53 seconds) suminf.   70.65400 (680) obj. 506.839 iterations 226
Cbc0038I Pass   8: (3.57 seconds) suminf.   69.76392 (680) obj. 505.083 iterations 168
Cbc0038I Pass   9: (3.62 seconds) suminf.   70.67685 (682) obj. 505.796 iterations 252
Cbc0038I Pass  10: (3.65 seconds) suminf.   71.02517 (684) obj. 504.22 iterations 153
Cbc0038I Pass  11: (3.71 seconds) suminf.   71.77183 (662) obj. 518.474 iterations 301
Cbc0038I Pass  12: (3.73 seconds) suminf.   72.27940 (674) obj. 506.195 iterations 127
Cbc0038I Pass  13: (3.78 seconds) suminf.   69.53177 (671) obj. 504.392 iterations 230
Cbc0038I Pass  14: (3.93 seconds) suminf.   71.15802 (724) obj. 517.898 iterations 941
Cbc0038I Pass  15: (4.02 seconds) suminf.   71.24872 (725) obj. 490.139 iterations 527
Cbc0038I Pass  16: (4.06 seconds) suminf.   72.20068 (691) obj. 487.314 iterations 140
Cbc0038I Pass  17: (4.11 seconds) suminf.   70.40749 (686) obj. 487.889 iterations 292
Cbc0038I Pass  18: (4.15 seconds) suminf.   70.35098 (698) obj. 489.5 iterations 162
Cbc0038I Pass  19: (4.17 seconds) suminf.   69.98172 (687) obj. 490.477 iterations 88
Cbc0038I Pass  20: (4.25 seconds) suminf.   70.93934 (661) obj. 586.323 iterations 466
Cbc0038I Pass  21: (4.30 seconds) suminf.   69.31607 (689) obj. 623.382 iterations 265
Cbc0038I Pass  22: (4.32 seconds) suminf.   68.60076 (682) obj. 623.334 iterations 104
Cbc0038I Pass  23: (4.43 seconds) suminf.   65.26034 (686) obj. 676.39 iterations 701
Cbc0038I Pass  24: (4.50 seconds) suminf.   66.70575 (692) obj. 687.847 iterations 353
Cbc0038I Pass  25: (4.51 seconds) suminf.   67.13092 (698) obj. 687.782 iterations 70
Cbc0038I Pass  26: (4.59 seconds) suminf.   66.73109 (673) obj. 681.245 iterations 423
Cbc0038I Pass  27: (4.63 seconds) suminf.   67.51793 (703) obj. 681.705 iterations 162
Cbc0038I Pass  28: (4.65 seconds) suminf.   67.28161 (706) obj. 689.33 iterations 83
Cbc0038I Pass  29: (4.71 seconds) suminf.   65.01407 (664) obj. 676.022 iterations 328
Cbc0038I Pass  30: (4.74 seconds) suminf.   65.67361 (691) obj. 681.002 iterations 146
Cbc0038I Pass  31: (4.77 seconds) suminf.   66.41370 (686) obj. 677.73 iterations 137
Cbc0038I Pass  32: (4.89 seconds) suminf.   64.96926 (678) obj. 613.146 iterations 783
Cbc0038I Pass  33: (4.92 seconds) suminf.   65.31745 (690) obj. 611.222 iterations 155
Cbc0038I Pass  34: (4.95 seconds) suminf.   66.17672 (684) obj. 616.664 iterations 132
Cbc0038I Pass  35: (4.97 seconds) suminf.   66.34963 (673) obj. 621.856 iterations 62
Cbc0038I Pass  36: (5.02 seconds) suminf.   64.60758 (674) obj. 613.394 iterations 265
Cbc0038I Pass  37: (5.27 seconds) suminf.  115.92500 (802) obj. 686.51 iterations 1545
Cbc0038I Pass  38: (5.45 seconds) suminf.   75.63531 (672) obj. 648.231 iterations 1041
Cbc0038I Pass  39: (5.51 seconds) suminf.   67.95644 (611) obj. 647.212 iterations 294
Cbc0038I Pass  40: (5.52 seconds) suminf.   67.67334 (615) obj. 647.22 iterations 45
Cbc0038I Pass  41: (5.60 seconds) suminf.   64.25738 (609) obj. 647.846 iterations 387
Cbc0038I Pass  42: (5.61 seconds) suminf.   63.66721 (583) obj. 646.701 iterations 54
Cbc0038I Pass  43: (5.71 seconds) suminf.   59.71607 (629) obj. 647.421 iterations 566
Cbc0038I Pass  44: (5.75 seconds) suminf.   62.65857 (634) obj. 645.209 iterations 158
Cbc0038I Pass  45: (5.78 seconds) suminf.   62.11154 (632) obj. 645.076 iterations 164
Cbc0038I Pass  46: (5.83 seconds) suminf.   60.61886 (640) obj. 645.076 iterations 178
Cbc0038I Pass  47: (5.84 seconds) suminf.   60.50813 (632) obj. 645.131 iterations 39
Cbc0038I Pass  48: (5.90 seconds) suminf.   61.30558 (622) obj. 643.937 iterations 299
Cbc0038I Pass  49: (5.92 seconds) suminf.   61.53129 (621) obj. 642.889 iterations 80
Cbc0038I Pass  50: (5.99 seconds) suminf.   57.78736 (636) obj. 635.879 iterations 346
Cbc0038I Pass  51: (6.05 seconds) suminf.   55.80387 (602) obj. 635.666 iterations 277
Cbc0038I Pass  52: (6.09 seconds) suminf.   55.51380 (608) obj. 635.598 iterations 181
Cbc0038I Pass  53: (6.16 seconds) suminf.   55.83747 (621) obj. 636.901 iterations 382
Cbc0038I Pass  54: (6.17 seconds) suminf.   55.77571 (619) obj. 636.768 iterations 19
Cbc0038I Pass  55: (6.30 seconds) suminf.   61.05582 (652) obj. 636.961 iterations 807
Cbc0038I Pass  56: (6.36 seconds) suminf.   59.06096 (633) obj. 636.902 iterations 274
Cbc0038I Pass  57: (6.42 seconds) suminf.   56.68872 (638) obj. 636.857 iterations 294
Cbc0038I Pass  58: (6.53 seconds) suminf.   58.76322 (600) obj. 636.298 iterations 629
Cbc0038I Pass  59: (6.58 seconds) suminf.   58.47204 (639) obj. 635.078 iterations 198
Cbc0038I Pass  60: (6.60 seconds) suminf.   58.66168 (622) obj. 634.207 iterations 127
Cbc0038I Pass  61: (6.69 seconds) suminf.   56.89190 (567) obj. 610.317 iterations 675
Cbc0038I Pass  62: (6.73 seconds) suminf.   55.27174 (588) obj. 606.254 iterations 222
Cbc0038I Pass  63: (6.75 seconds) suminf.   55.48941 (592) obj. 606.304 iterations 89
Cbc0038I Pass  64: (6.87 seconds) suminf.   52.30512 (557) obj. 560.636 iterations 854
Cbc0038I Pass  65: (6.93 seconds) suminf.   51.77249 (553) obj. 560.779 iterations 320
Cbc0038I Pass  66: (7.02 seconds) suminf.   51.48685 (576) obj. 561.535 iterations 510
Cbc0038I Pass  67: (7.12 seconds) suminf.   47.92052 (549) obj. 559.782 iterations 623
Cbc0038I Pass  68: (7.14 seconds) suminf.   48.14294 (558) obj. 560.416 iterations 112
Cbc0038I Pass  69: (7.27 seconds) suminf.   48.72610 (559) obj. 560.48 iterations 853
Cbc0038I Pass  70: (7.33 seconds) suminf.   47.42292 (569) obj. 559.606 iterations 319
Cbc0038I Pass  71: (7.36 seconds) suminf.   47.28028 (584) obj. 559.608 iterations 132
Cbc0038I Pass  72: (7.47 seconds) suminf.   49.48536 (566) obj. 559.806 iterations 698
Cbc0038I Pass  73: (7.50 seconds) suminf.   49.08092 (586) obj. 559.884 iterations 109
Cbc0038I Pass  74: (7.62 seconds) suminf.   51.62273 (556) obj. 559.427 iterations 661
Cbc0038I Pass  75: (7.65 seconds) suminf.   51.23031 (543) obj. 559.709 iterations 160
Cbc0038I Pass  76: (7.70 seconds) suminf.   50.56755 (567) obj. 559.602 iterations 178
Cbc0038I Pass  77: (7.78 seconds) suminf.   51.83684 (542) obj. 560 iterations 498
Cbc0038I Pass  78: (7.86 seconds) suminf.   48.95900 (585) obj. 561.077 iterations 403
Cbc0038I Pass  79: (7.95 seconds) suminf.   49.55858 (576) obj. 559.516 iterations 479
Cbc0038I Pass  80: (7.98 seconds) suminf.   49.41290 (575) obj. 559.594 iterations 144
Cbc0038I Pass  81: (8.01 seconds) suminf.   48.61922 (558) obj. 559.644 iterations 108
Cbc0038I Pass  82: (8.09 seconds) suminf.   47.21928 (542) obj. 560.385 iterations 477
Cbc0038I Pass  83: (8.12 seconds) suminf.   47.21670 (558) obj. 561.241 iterations 126
Cbc0038I Pass  84: (8.24 seconds) suminf.   48.25103 (546) obj. 559.466 iterations 698
Cbc0038I Pass  85: (8.32 seconds) suminf.   46.33549 (558) obj. 559.721 iterations 454
Cbc0038I Pass  86: (8.38 seconds) suminf.   46.44311 (557) obj. 559.808 iterations 269
Cbc0038I Pass  87: (8.54 seconds) suminf.   45.69880 (521) obj. 560.513 iterations 969
Cbc0038I Pass  88: (8.61 seconds) suminf.   43.74048 (583) obj. 559.76 iterations 367
Cbc0038I Pass  89: (8.74 seconds) suminf.   49.04775 (521) obj. 560.001 iterations 775
Cbc0038I Pass  90: (8.77 seconds) suminf.   49.82242 (519) obj. 560.001 iterations 139
Cbc0038I Pass  91: (8.83 seconds) suminf.   49.16917 (534) obj. 560.001 iterations 325
Cbc0038I Pass  92: (8.99 seconds) suminf.   46.60539 (538) obj. 560 iterations 1022
Cbc0038I Pass  93: (9.09 seconds) suminf.   42.05278 (552) obj. 560 iterations 554
Cbc0038I Pass  94: (9.22 seconds) suminf.   46.52669 (518) obj. 561.777 iterations 801
Cbc0038I Pass  95: (9.29 seconds) suminf.   44.79148 (542) obj. 560 iterations 331
Cbc0038I Pass  96: (9.40 seconds) suminf.   44.13292 (514) obj. 606.654 iterations 700
Cbc0038I Pass  97: (9.49 seconds) suminf.   42.44974 (529) obj. 630.979 iterations 581
Cbc0038I Pass  98: (9.60 seconds) suminf.   45.48456 (530) obj. 631.213 iterations 765
Cbc0038I Pass  99: (9.64 seconds) suminf.   42.93467 (540) obj. 617.032 iterations 236
Cbc0038I Pass 100: (9.87 seconds) suminf.   94.53771 (712) obj. 604.898 iterations 1584
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 139 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4466 rows 1484 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.90 seconds)
Cbc0038I After 9.90 seconds - Feasibility pump exiting - took 7.18 seconds
Cbc0031I 31 added rows had average density of 7.0322581
Cbc0013I At root node, 31 cuts changed objective from 295.88715 to 374 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 31 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 120 row cuts average 45.2 elements, 0 column cuts (0 active)  in 0.474 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 212 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 374 (18.61 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 374 (128.86 seconds)
Cbc0010I After 200 nodes, 11 on tree, 1e+50 best solution, best possible 374 (203.30 seconds)
Cbc0010I After 300 nodes, 9 on tree, 1e+50 best solution, best possible 374 (267.54 seconds)
Cbc0010I After 400 nodes, 19 on tree, 1e+50 best solution, best possible 375 (353.68 seconds)
Cbc0010I After 500 nodes, 21 on tree, 1e+50 best solution, best possible 375 (445.15 seconds)
Cbc0010I After 600 nodes, 18 on tree, 1e+50 best solution, best possible 375 (527.21 seconds)
Cbc0010I After 700 nodes, 11 on tree, 1e+50 best solution, best possible 375 (610.04 seconds)
Cbc0010I After 800 nodes, 12 on tree, 1e+50 best solution, best possible 375 (699.47 seconds)
Cbc0010I After 900 nodes, 13 on tree, 1e+50 best solution, best possible 375 (777.03 seconds)
Cbc0010I After 1000 nodes, 29 on tree, 1e+50 best solution, best possible 375 (866.55 seconds)
Cbc0010I After 1100 nodes, 40 on tree, 1e+50 best solution, best possible 375 (1003.44 seconds)
Cbc0010I After 1200 nodes, 38 on tree, 1e+50 best solution, best possible 375 (1073.95 seconds)
Cbc0010I After 1300 nodes, 48 on tree, 1e+50 best solution, best possible 375 (1181.19 seconds)
Cbc0010I After 1400 nodes, 43 on tree, 1e+50 best solution, best possible 375 (1277.14 seconds)
Cbc0010I After 1500 nodes, 46 on tree, 1e+50 best solution, best possible 375 (1367.80 seconds)
Cbc0010I After 1600 nodes, 40 on tree, 1e+50 best solution, best possible 375 (1448.38 seconds)
Cbc0010I After 1700 nodes, 37 on tree, 1e+50 best solution, best possible 375 (1526.55 seconds)
Cbc0010I After 1800 nodes, 35 on tree, 1e+50 best solution, best possible 375 (1655.44 seconds)
Cbc0010I After 1900 nodes, 47 on tree, 1e+50 best solution, best possible 375 (1736.14 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 375), took 5334532 iterations and 1985 nodes (1798.50 seconds)
Cbc0032I Strong branching done 19858 times (1753716 iterations), fathomed 79 nodes and fixed 1968 variables
Cbc0035I Maximum depth 36, 0 variables fixed on reduced cost
Cuts at root node changed objective from 295.887 to 374
Probing was tried 1465 times and created 86128 cuts of which 0 were active after adding rounds of cuts (13.863 seconds)
Gomory was tried 1325 times and created 1294 cuts of which 0 were active after adding rounds of cuts (10.144 seconds)
Knapsack was tried 1325 times and created 2355 cuts of which 0 were active after adding rounds of cuts (1.759 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 1325 times and created 11839 cuts of which 0 were active after adding rounds of cuts (3.835 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
ImplicationCuts was tried 132 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    375.000
Enumerated nodes:               1985
Total iterations:               5334532
Time (CPU seconds):             1798.50
Time (Wallclock seconds):       1801.26

Total time (CPU seconds):       1798.51   (Wallclock seconds):       1802.58

