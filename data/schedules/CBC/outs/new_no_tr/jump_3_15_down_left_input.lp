Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_15_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_15_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20480 - 0.01 seconds
Cgl0002I 30 variables fixed
Cgl0003I 0 fixed, 2 tightened bounds, 112 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 568 rows, 207 columns (207 integer (191 of which binary)) and 1872 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 207 objects (207 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 109 integers unsatisfied sum - 38.3282
Cbc0038I Pass   1: suminf.   14.63222 (67) obj. 24576 iterations 200
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 25600 iterations 188
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 25087.1
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.   14.63222 (67) obj. 24576 iterations 0
Cbc0038I Pass   4: suminf.    0.45607 (16) obj. 25087.1 iterations 189
Cbc0038I Pass   5: suminf.    3.14327 (18) obj. 25087.1 iterations 54
Cbc0038I Pass   6: suminf.    1.46382 (12) obj. 25087.1 iterations 15
Cbc0038I Pass   7: suminf.    3.94859 (17) obj. 25087.1 iterations 64
Cbc0038I Pass   8: suminf.    1.35082 (6) obj. 25087.1 iterations 28
Cbc0038I Pass   9: suminf.    1.62685 (11) obj. 25087.1 iterations 17
Cbc0038I Pass  10: suminf.    3.34190 (18) obj. 25087.1 iterations 46
Cbc0038I Pass  11: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  12: suminf.    1.46382 (12) obj. 25087.1 iterations 16
Cbc0038I Pass  13: suminf.    3.94859 (17) obj. 25087.1 iterations 51
Cbc0038I Pass  14: suminf.    1.35082 (6) obj. 25087.1 iterations 20
Cbc0038I Pass  15: suminf.    1.62685 (11) obj. 25087.1 iterations 15
Cbc0038I Pass  16: suminf.    3.34190 (18) obj. 25087.1 iterations 58
Cbc0038I Pass  17: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  18: suminf.    1.46382 (12) obj. 25087.1 iterations 24
Cbc0038I Pass  19: suminf.    3.94859 (17) obj. 25087.1 iterations 54
Cbc0038I Pass  20: suminf.    1.35082 (6) obj. 25087.1 iterations 29
Cbc0038I Pass  21: suminf.    1.62685 (11) obj. 25087.1 iterations 21
Cbc0038I Pass  22: suminf.    3.34190 (18) obj. 25087.1 iterations 66
Cbc0038I Pass  23: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  24: suminf.    1.46382 (12) obj. 25087.1 iterations 10
Cbc0038I Pass  25: suminf.    3.94859 (17) obj. 25087.1 iterations 68
Cbc0038I Pass  26: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  27: suminf.    1.62685 (11) obj. 25087.1 iterations 16
Cbc0038I Pass  28: suminf.    3.34190 (18) obj. 25087.1 iterations 60
Cbc0038I Pass  29: suminf.    1.35082 (6) obj. 25087.1 iterations 29
Cbc0038I Pass  30: suminf.    1.46382 (12) obj. 25087.1 iterations 20
Cbc0038I Pass  31: suminf.    3.94859 (17) obj. 25087.1 iterations 67
Cbc0038I Pass  32: suminf.    1.35082 (6) obj. 25087.1 iterations 31
Cbc0038I Pass  33: suminf.    1.62685 (11) obj. 25087.1 iterations 16
Cbc0038I Pass  34: suminf.    3.34190 (18) obj. 25087.1 iterations 50
Cbc0038I Pass  35: suminf.    1.35082 (6) obj. 25087.1 iterations 29
Cbc0038I Pass  36: suminf.    1.46382 (12) obj. 25087.1 iterations 24
Cbc0038I Pass  37: suminf.    3.94859 (17) obj. 25087.1 iterations 64
Cbc0038I Pass  38: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  39: suminf.    1.62685 (11) obj. 25087.1 iterations 22
Cbc0038I Pass  40: suminf.    3.34190 (18) obj. 25087.1 iterations 50
Cbc0038I Pass  41: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  42: suminf.    1.46382 (12) obj. 25087.1 iterations 11
Cbc0038I Pass  43: suminf.    3.94859 (17) obj. 25087.1 iterations 42
Cbc0038I Pass  44: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  45: suminf.    1.62685 (11) obj. 25087.1 iterations 16
Cbc0038I Pass  46: suminf.    3.34190 (18) obj. 25087.1 iterations 47
Cbc0038I Pass  47: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  48: suminf.    1.46382 (12) obj. 25087.1 iterations 17
Cbc0038I Pass  49: suminf.    3.94859 (17) obj. 25087.1 iterations 63
Cbc0038I Pass  50: suminf.    1.35082 (6) obj. 25087.1 iterations 23
Cbc0038I Pass  51: suminf.    1.62685 (11) obj. 25087.1 iterations 21
Cbc0038I Pass  52: suminf.    3.34190 (18) obj. 25087.1 iterations 50
Cbc0038I Pass  53: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  54: suminf.    1.46382 (12) obj. 25087.1 iterations 35
Cbc0038I Pass  55: suminf.    3.94859 (17) obj. 25087.1 iterations 59
Cbc0038I Pass  56: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  57: suminf.    1.62685 (11) obj. 25087.1 iterations 32
Cbc0038I Pass  58: suminf.    3.34190 (18) obj. 25087.1 iterations 39
Cbc0038I Pass  59: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  60: suminf.    1.46382 (12) obj. 25087.1 iterations 19
Cbc0038I Pass  61: suminf.    3.94859 (17) obj. 25087.1 iterations 53
Cbc0038I Pass  62: suminf.    1.35082 (6) obj. 25087.1 iterations 34
Cbc0038I Pass  63: suminf.    1.62685 (11) obj. 25087.1 iterations 21
Cbc0038I Pass  64: suminf.    3.34190 (18) obj. 25087.1 iterations 70
Cbc0038I Pass  65: suminf.    1.35082 (6) obj. 25087.1 iterations 25
Cbc0038I Pass  66: suminf.    1.46382 (12) obj. 25087.1 iterations 16
Cbc0038I Pass  67: suminf.    3.94859 (17) obj. 25087.1 iterations 55
Cbc0038I Pass  68: suminf.    1.35082 (6) obj. 25087.1 iterations 32
Cbc0038I Pass  69: suminf.    1.62685 (11) obj. 25087.1 iterations 19
Cbc0038I Pass  70: suminf.    3.34190 (18) obj. 25087.1 iterations 42
Cbc0038I Pass  71: suminf.    1.35082 (6) obj. 25087.1 iterations 18
Cbc0038I Pass  72: suminf.    1.46382 (12) obj. 25087.1 iterations 22
Cbc0038I Pass  73: suminf.    3.94859 (17) obj. 25087.1 iterations 60
Cbc0038I Pass  74: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  75: suminf.    1.62685 (11) obj. 25087.1 iterations 27
Cbc0038I Pass  76: suminf.    3.34190 (18) obj. 25087.1 iterations 41
Cbc0038I Pass  77: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  78: suminf.    1.46382 (12) obj. 25087.1 iterations 21
Cbc0038I Pass  79: suminf.    3.94859 (17) obj. 25087.1 iterations 53
Cbc0038I Pass  80: suminf.    1.35082 (6) obj. 25087.1 iterations 16
Cbc0038I Pass  81: suminf.    1.62685 (11) obj. 25087.1 iterations 21
Cbc0038I Pass  82: suminf.    3.34190 (18) obj. 25087.1 iterations 48
Cbc0038I Pass  83: suminf.    1.35082 (6) obj. 25087.1 iterations 25
Cbc0038I Pass  84: suminf.    1.46382 (12) obj. 25087.1 iterations 11
Cbc0038I Pass  85: suminf.    3.94859 (17) obj. 25087.1 iterations 49
Cbc0038I Pass  86: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  87: suminf.    1.62685 (11) obj. 25087.1 iterations 14
Cbc0038I Pass  88: suminf.    3.34190 (18) obj. 25087.1 iterations 59
Cbc0038I Pass  89: suminf.    1.35082 (6) obj. 25087.1 iterations 18
Cbc0038I Pass  90: suminf.    1.46382 (12) obj. 25087.1 iterations 14
Cbc0038I Pass  91: suminf.    3.94859 (17) obj. 25087.1 iterations 55
Cbc0038I Pass  92: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  93: suminf.    1.62685 (11) obj. 25087.1 iterations 32
Cbc0038I Pass  94: suminf.    3.34190 (18) obj. 25087.1 iterations 72
Cbc0038I Pass  95: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  96: suminf.    1.46382 (12) obj. 25087.1 iterations 19
Cbc0038I Pass  97: suminf.    3.94859 (17) obj. 25087.1 iterations 55
Cbc0038I Pass  98: suminf.    1.35082 (6) obj. 25087.1 iterations 50
Cbc0038I Pass  99: suminf.    1.62685 (11) obj. 25087.1 iterations 13
Cbc0038I Pass 100: suminf.    3.34190 (18) obj. 25087.1 iterations 39
Cbc0038I Pass 101: suminf.    1.35082 (6) obj. 25087.1 iterations 25
Cbc0038I Pass 102: suminf.   15.93587 (83) obj. 25087.1 iterations 183
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 568 rows 207 columns, reduced to 462 rows 154 columns - 23 fixed gives 288, 86 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of 25600 - took 0.24 seconds
Cbc0012I Integer solution of 25600 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0031I 25 added rows had average density of 34.24
Cbc0013I At root node, 25 cuts changed objective from 20480 to 20480 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 211 row cuts average 4.5 elements, 3 column cuts (3 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 2238 row cuts average 185.6 elements, 0 column cuts (0 active)  in 0.281 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 231 row cuts average 113.5 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 25600 best solution, best possible 20480 (2.79 seconds)
Cbc0010I After 1000 nodes, 81 on tree, 25600 best solution, best possible 20580 (19.05 seconds)
Cbc0010I After 2000 nodes, 82 on tree, 25600 best solution, best possible 20580 (30.14 seconds)
Cbc0010I After 3000 nodes, 81 on tree, 25600 best solution, best possible 20580 (39.30 seconds)
Cbc0010I After 4000 nodes, 84 on tree, 25600 best solution, best possible 20580 (47.97 seconds)
Cbc0010I After 5000 nodes, 82 on tree, 25600 best solution, best possible 20580 (56.17 seconds)
Cbc0010I After 6000 nodes, 80 on tree, 25600 best solution, best possible 20580 (64.83 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 146 rows 48 columns
Cbc0010I After 7000 nodes, 82 on tree, 25600 best solution, best possible 20580 (72.77 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 146 rows 48 columns
Cbc0038I Full problem 568 rows 207 columns, reduced to 182 rows 61 columns
Cbc0010I After 8000 nodes, 81 on tree, 25600 best solution, best possible 20580 (81.78 seconds)
Cbc0010I After 9000 nodes, 80 on tree, 25600 best solution, best possible 20580 (90.47 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 219 rows 72 columns
Cbc0010I After 10000 nodes, 81 on tree, 25600 best solution, best possible 20580 (98.26 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 226 rows 75 columns
Cbc0010I After 11000 nodes, 81 on tree, 25600 best solution, best possible 20580 (105.91 seconds)
Cbc0010I After 12000 nodes, 4 on tree, 25600 best solution, best possible 22574 (113.27 seconds)
Cbc0010I After 13000 nodes, 3 on tree, 25600 best solution, best possible 22619 (118.41 seconds)
Cbc0010I After 14000 nodes, 2 on tree, 25600 best solution, best possible 22665 (123.67 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 158 rows 52 columns
Cbc0010I After 15000 nodes, 3 on tree, 25600 best solution, best possible 22705 (128.94 seconds)
Cbc0010I After 16000 nodes, 5 on tree, 25600 best solution, best possible 22748 (134.15 seconds)
Cbc0010I After 17000 nodes, 2 on tree, 25600 best solution, best possible 22791 (139.28 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 241 rows 78 columns
Cbc0010I After 18000 nodes, 3 on tree, 25600 best solution, best possible 22828 (144.29 seconds)
Cbc0010I After 19000 nodes, 4 on tree, 25600 best solution, best possible 22865 (149.12 seconds)
Cbc0010I After 20000 nodes, 4 on tree, 25600 best solution, best possible 22901 (154.13 seconds)
Cbc0010I After 21000 nodes, 3 on tree, 25600 best solution, best possible 22935 (159.01 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 152 rows 50 columns
Cbc0010I After 22000 nodes, 6 on tree, 25600 best solution, best possible 22968 (163.82 seconds)
Cbc0010I After 23000 nodes, 3 on tree, 25600 best solution, best possible 23005 (168.96 seconds)
Cbc0010I After 24000 nodes, 3 on tree, 25600 best solution, best possible 23038 (174.06 seconds)
Cbc0010I After 25000 nodes, 5 on tree, 25600 best solution, best possible 23069 (178.88 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 200 rows 66 columns
Cbc0010I After 26000 nodes, 6 on tree, 25600 best solution, best possible 23101 (183.41 seconds)
Cbc0010I After 27000 nodes, 6 on tree, 25600 best solution, best possible 23131 (187.67 seconds)
Cbc0010I After 28000 nodes, 8 on tree, 25600 best solution, best possible 23164 (192.11 seconds)
Cbc0010I After 29000 nodes, 1 on tree, 25600 best solution, best possible 23199 (196.70 seconds)
Cbc0010I After 30000 nodes, 3 on tree, 25600 best solution, best possible 23230 (201.31 seconds)
Cbc0010I After 31000 nodes, 3 on tree, 25600 best solution, best possible 23271 (206.65 seconds)
Cbc0010I After 32000 nodes, 3 on tree, 25600 best solution, best possible 23306 (211.61 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 244 rows 81 columns
Cbc0010I After 33000 nodes, 4 on tree, 25600 best solution, best possible 23340 (216.24 seconds)
Cbc0010I After 34000 nodes, 5 on tree, 25600 best solution, best possible 23370 (220.72 seconds)
Cbc0010I After 35000 nodes, 3 on tree, 25600 best solution, best possible 23404 (225.35 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 150 rows 53 columns
Cbc0010I After 36000 nodes, 5 on tree, 25600 best solution, best possible 23434 (229.73 seconds)
Cbc0010I After 37000 nodes, 3 on tree, 25600 best solution, best possible 23467 (234.31 seconds)
Cbc0010I After 38000 nodes, 6 on tree, 25600 best solution, best possible 23499 (239.15 seconds)
Cbc0010I After 39000 nodes, 3 on tree, 25600 best solution, best possible 23530 (244.00 seconds)
Cbc0010I After 40000 nodes, 3 on tree, 25600 best solution, best possible 23561 (249.85 seconds)
Cbc0010I After 41000 nodes, 3 on tree, 25600 best solution, best possible 23583 (255.42 seconds)
Cbc0010I After 42000 nodes, 8 on tree, 25600 best solution, best possible 23605 (260.47 seconds)
Cbc0010I After 43000 nodes, 1 on tree, 25600 best solution, best possible 23624 (265.31 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 148 rows 51 columns
Cbc0010I After 44000 nodes, 5 on tree, 25600 best solution, best possible 23641 (269.69 seconds)
Cbc0010I After 45000 nodes, 6 on tree, 25600 best solution, best possible 23662 (274.43 seconds)
Cbc0010I After 46000 nodes, 3 on tree, 25600 best solution, best possible 23685 (279.34 seconds)
Cbc0010I After 47000 nodes, 3 on tree, 25600 best solution, best possible 23706 (284.20 seconds)
Cbc0010I After 48000 nodes, 4 on tree, 25600 best solution, best possible 23727 (289.15 seconds)
Cbc0010I After 49000 nodes, 4 on tree, 25600 best solution, best possible 23750 (294.41 seconds)
Cbc0010I After 50000 nodes, 3 on tree, 25600 best solution, best possible 23772 (299.45 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 204 rows 67 columns
Cbc0010I After 51000 nodes, 4 on tree, 25600 best solution, best possible 23797 (305.17 seconds)
Cbc0010I After 52000 nodes, 3 on tree, 25600 best solution, best possible 23817 (310.34 seconds)
Cbc0010I After 53000 nodes, 5 on tree, 25600 best solution, best possible 23840 (316.02 seconds)
Cbc0010I After 54000 nodes, 6 on tree, 25600 best solution, best possible 23859 (321.33 seconds)
Cbc0010I After 55000 nodes, 3 on tree, 25600 best solution, best possible 23880 (327.15 seconds)
Cbc0010I After 56000 nodes, 4 on tree, 25600 best solution, best possible 23903 (333.26 seconds)
Cbc0010I After 57000 nodes, 7 on tree, 25600 best solution, best possible 23924 (338.90 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 182 rows 60 columns
Cbc0010I After 58000 nodes, 3 on tree, 25600 best solution, best possible 23945 (344.25 seconds)
Cbc0010I After 59000 nodes, 3 on tree, 25600 best solution, best possible 23966 (349.97 seconds)
Cbc0010I After 60000 nodes, 5 on tree, 25600 best solution, best possible 23987 (355.49 seconds)
Cbc0010I After 61000 nodes, 4 on tree, 25600 best solution, best possible 24006 (361.20 seconds)
Cbc0010I After 62000 nodes, 10 on tree, 25600 best solution, best possible 24023 (366.40 seconds)
Cbc0010I After 63000 nodes, 4 on tree, 25600 best solution, best possible 24042 (371.84 seconds)
Cbc0010I After 64000 nodes, 3 on tree, 25600 best solution, best possible 24061 (377.29 seconds)
Cbc0010I After 65000 nodes, 5 on tree, 25600 best solution, best possible 24079 (382.63 seconds)
Cbc0010I After 66000 nodes, 1 on tree, 25600 best solution, best possible 24099 (387.99 seconds)
Cbc0010I After 67000 nodes, 4 on tree, 25600 best solution, best possible 24121 (393.40 seconds)
Cbc0010I After 68000 nodes, 5 on tree, 25600 best solution, best possible 24141 (398.49 seconds)
Cbc0010I After 69000 nodes, 7 on tree, 25600 best solution, best possible 24161 (403.62 seconds)
Cbc0010I After 70000 nodes, 5 on tree, 25600 best solution, best possible 24183 (408.93 seconds)
Cbc0010I After 71000 nodes, 2 on tree, 25600 best solution, best possible 24203 (414.15 seconds)
Cbc0010I After 72000 nodes, 3 on tree, 25600 best solution, best possible 24226 (419.75 seconds)
Cbc0010I After 73000 nodes, 3 on tree, 25600 best solution, best possible 24246 (425.07 seconds)
Cbc0010I After 74000 nodes, 3 on tree, 25600 best solution, best possible 24265 (430.36 seconds)
Cbc0010I After 75000 nodes, 4 on tree, 25600 best solution, best possible 24285 (435.55 seconds)
Cbc0010I After 76000 nodes, 4 on tree, 25600 best solution, best possible 24303 (440.49 seconds)
Cbc0010I After 77000 nodes, 5 on tree, 25600 best solution, best possible 24321 (445.30 seconds)
Cbc0010I After 78000 nodes, 6 on tree, 25600 best solution, best possible 24337 (450.07 seconds)
Cbc0010I After 79000 nodes, 4 on tree, 25600 best solution, best possible 24357 (454.90 seconds)
Cbc0010I After 80000 nodes, 3 on tree, 25600 best solution, best possible 24378 (460.20 seconds)
Cbc0010I After 81000 nodes, 5 on tree, 25600 best solution, best possible 24396 (465.35 seconds)
Cbc0010I After 82000 nodes, 7 on tree, 25600 best solution, best possible 24418 (470.72 seconds)
Cbc0010I After 83000 nodes, 4 on tree, 25600 best solution, best possible 24439 (476.00 seconds)
Cbc0010I After 84000 nodes, 6 on tree, 25600 best solution, best possible 24459 (481.12 seconds)
Cbc0010I After 85000 nodes, 4 on tree, 25600 best solution, best possible 24479 (486.10 seconds)
Cbc0010I After 86000 nodes, 5 on tree, 25600 best solution, best possible 24496 (490.83 seconds)
Cbc0010I After 87000 nodes, 5 on tree, 25600 best solution, best possible 24516 (495.99 seconds)
Cbc0010I After 88000 nodes, 2 on tree, 25600 best solution, best possible 24533 (500.82 seconds)
Cbc0010I After 89000 nodes, 4 on tree, 25600 best solution, best possible 24554 (505.97 seconds)
Cbc0010I After 90000 nodes, 7 on tree, 25600 best solution, best possible 24574 (510.93 seconds)
Cbc0004I Integer solution of 24576 found after 6132995 iterations and 90114 nodes (511.42 seconds)
Cbc0001I Search completed - best objective 24576, took 6132995 iterations and 90114 nodes (511.43 seconds)
Cbc0032I Strong branching done 159946 times (3561583 iterations), fathomed 13394 nodes and fixed 26246 variables
Cbc0035I Maximum depth 4106, 5 variables fixed on reduced cost
Cuts at root node changed objective from 20480 to 20480
Probing was tried 100 times and created 214 cuts of which 0 were active after adding rounds of cuts (0.174 seconds)
Gomory was tried 100 times and created 2238 cuts of which 0 were active after adding rounds of cuts (0.281 seconds)
Knapsack was tried 100 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
FlowCover was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
TwoMirCuts was tried 100 times and created 231 cuts of which 0 were active after adding rounds of cuts (0.098 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ImplicationCuts was tried 87 times and created 142 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               90114
Total iterations:               6132995
Time (CPU seconds):             511.46
Time (Wallclock seconds):       538.63

Total time (CPU seconds):       511.46   (Wallclock seconds):       538.63

