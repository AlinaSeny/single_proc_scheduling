Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump20_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump20_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 19456 - 0.02 seconds
Cgl0002I 46 variables fixed
Cgl0003I 0 fixed, 4 tightened bounds, 177 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 64 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 991 rows, 340 columns (340 integer (319 of which binary)) and 3380 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 340 objects (340 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 197 integers unsatisfied sum - 62.3702
Cbc0038I Pass   1: suminf.   14.76947 (71) obj. 24646.8 iterations 309
Cbc0038I Pass   2: suminf.    9.61730 (63) obj. 24610 iterations 83
Cbc0038I Pass   3: suminf.    1.29580 (23) obj. 24671.8 iterations 121
Cbc0038I Pass   4: suminf.    1.28738 (15) obj. 24671.7 iterations 45
Cbc0038I Pass   5: suminf.    2.00000 (4) obj. 27648 iterations 32
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 27648 iterations 31
Cbc0038I Solution found of 27648
Cbc0038I Cleaned solution of 27648
Cbc0038I Before mini branch and bound, 121 integers at bound fixed and 0 continuous
Cbc0038I Full problem 991 rows 340 columns, reduced to 737 rows 219 columns - 20 fixed gives 592, 183 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of 26827.9
Cbc0038I Pass   7: suminf.   14.76947 (71) obj. 24646.8 iterations 0
Cbc0038I Pass   8: suminf.    9.61730 (63) obj. 24610 iterations 92
Cbc0038I Pass   9: suminf.    1.66711 (12) obj. 24576 iterations 163
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 24576 iterations 61
Cbc0038I Solution found of 24576
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 121 integers at bound fixed and 0 continuous
Cbc0038I Full problem 991 rows 340 columns, reduced to 737 rows 219 columns - 65 fixed gives 457, 129 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I Round again with cutoff of 23551.2
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  11: suminf.   14.90902 (71) obj. 23551 iterations 80
Cbc0038I Pass  12: suminf.   11.08554 (65) obj. 23551.2 iterations 136
Cbc0038I Pass  13: suminf.    5.49410 (38) obj. 23551.2 iterations 227
Cbc0038I Pass  14: suminf.    4.30036 (39) obj. 23551.2 iterations 53
Cbc0038I Pass  15: suminf.    5.81129 (35) obj. 23551.2 iterations 160
Cbc0038I Pass  16: suminf.    3.73097 (39) obj. 23551.2 iterations 53
Cbc0038I Pass  17: suminf.    3.80402 (36) obj. 23551.2 iterations 66
Cbc0038I Pass  18: suminf.    4.16341 (35) obj. 23551.2 iterations 174
Cbc0038I Pass  19: suminf.    2.87182 (33) obj. 23551.2 iterations 63
Cbc0038I Pass  20: suminf.    4.78232 (32) obj. 23551.2 iterations 134
Cbc0038I Pass  21: suminf.    4.19378 (32) obj. 23551.2 iterations 28
Cbc0038I Pass  22: suminf.    4.96939 (34) obj. 23551.2 iterations 88
Cbc0038I Pass  23: suminf.    4.80035 (34) obj. 23551.2 iterations 18
Cbc0038I Pass  24: suminf.    3.28248 (76) obj. 23551.2 iterations 137
Cbc0038I Pass  25: suminf.    3.28340 (75) obj. 23551.2 iterations 24
Cbc0038I Pass  26: suminf.   17.00099 (71) obj. 23551.2 iterations 108
Cbc0038I Pass  27: suminf.    8.36168 (62) obj. 23551.2 iterations 112
Cbc0038I Pass  28: suminf.    5.47860 (49) obj. 23551.2 iterations 105
Cbc0038I Pass  29: suminf.    5.23587 (36) obj. 23551.2 iterations 125
Cbc0038I Pass  30: suminf.    4.14674 (38) obj. 23551.2 iterations 55
Cbc0038I Pass  31: suminf.    2.63161 (28) obj. 23551.2 iterations 133
Cbc0038I Pass  32: suminf.    2.54216 (28) obj. 23551.2 iterations 43
Cbc0038I Pass  33: suminf.    2.50239 (34) obj. 23551.2 iterations 179
Cbc0038I Pass  34: suminf.    2.34571 (27) obj. 23551.2 iterations 22
Cbc0038I Pass  35: suminf.    3.40067 (42) obj. 23551.2 iterations 140
Cbc0038I Pass  36: suminf.   10.40227 (58) obj. 23551.2 iterations 169
Cbc0038I Pass  37: suminf.    9.23415 (61) obj. 23551.2 iterations 38
Cbc0038I Pass  38: suminf.    1.63026 (16) obj. 23551.2 iterations 212
Cbc0038I Pass  39: suminf.    1.63026 (16) obj. 23551.2 iterations 6
Cbc0038I Pass  40: suminf.    3.74486 (18) obj. 23551.2 iterations 75
Cbc0038I Pass  41: suminf.    2.36844 (14) obj. 23551.2 iterations 38
Cbc0038I Pass  42: suminf.    4.57939 (16) obj. 23551.2 iterations 128
Cbc0038I Pass  43: suminf.    3.20242 (17) obj. 23551.2 iterations 118
Cbc0038I Pass  44: suminf.    2.71009 (18) obj. 23551.2 iterations 15
Cbc0038I Pass  45: suminf.    4.57939 (15) obj. 23551.2 iterations 166
Cbc0038I Pass  46: suminf.    4.57939 (15) obj. 23551.2 iterations 5
Cbc0038I Pass  47: suminf.    3.20242 (17) obj. 23551.2 iterations 102
Cbc0038I Pass  48: suminf.    2.70691 (18) obj. 23551.2 iterations 9
Cbc0038I Pass  49: suminf.    4.57939 (16) obj. 23551.2 iterations 130
Cbc0038I Pass  50: suminf.    4.57939 (16) obj. 23551.2 iterations 18
Cbc0038I Pass  51: suminf.    3.20242 (17) obj. 23551.2 iterations 116
Cbc0038I Pass  52: suminf.    2.71009 (18) obj. 23551.2 iterations 18
Cbc0038I Pass  53: suminf.    4.57939 (15) obj. 23551.2 iterations 113
Cbc0038I Pass  54: suminf.    4.57939 (15) obj. 23551.2 iterations 10
Cbc0038I Pass  55: suminf.    3.20242 (17) obj. 23551.2 iterations 98
Cbc0038I Pass  56: suminf.    2.70691 (18) obj. 23551.2 iterations 16
Cbc0038I Pass  57: suminf.    4.57939 (16) obj. 23551.2 iterations 145
Cbc0038I Pass  58: suminf.    4.57939 (16) obj. 23551.2 iterations 4
Cbc0038I Pass  59: suminf.    3.20242 (17) obj. 23551.2 iterations 134
Cbc0038I Pass  60: suminf.    2.71009 (18) obj. 23551.2 iterations 74
Cbc0038I Pass  61: suminf.    4.57939 (15) obj. 23551.2 iterations 231
Cbc0038I Pass  62: suminf.    4.57939 (15) obj. 23551.2 iterations 7
Cbc0038I Pass  63: suminf.    3.20242 (17) obj. 23551.2 iterations 116
Cbc0038I Pass  64: suminf.    2.70691 (18) obj. 23551.2 iterations 24
Cbc0038I Pass  65: suminf.    4.57939 (16) obj. 23551.2 iterations 113
Cbc0038I Pass  66: suminf.    4.57939 (16) obj. 23551.2 iterations 14
Cbc0038I Pass  67: suminf.    3.20242 (17) obj. 23551.2 iterations 131
Cbc0038I Pass  68: suminf.    2.71009 (18) obj. 23551.2 iterations 17
Cbc0038I Pass  69: suminf.    4.57939 (15) obj. 23551.2 iterations 119
Cbc0038I Pass  70: suminf.    4.57939 (15) obj. 23551.2 iterations 17
Cbc0038I Pass  71: suminf.    3.20242 (17) obj. 23551.2 iterations 118
Cbc0038I Pass  72: suminf.    2.70691 (18) obj. 23551.2 iterations 7
Cbc0038I Pass  73: suminf.    4.57939 (16) obj. 23551.2 iterations 192
Cbc0038I Pass  74: suminf.    4.57939 (16) obj. 23551.2 iterations 10
Cbc0038I Pass  75: suminf.    3.20242 (17) obj. 23551.2 iterations 129
Cbc0038I Pass  76: suminf.    2.71009 (18) obj. 23551.2 iterations 66
Cbc0038I Pass  77: suminf.    4.57939 (15) obj. 23551.2 iterations 169
Cbc0038I Pass  78: suminf.    4.57939 (15) obj. 23551.2 iterations 17
Cbc0038I Pass  79: suminf.    3.20242 (17) obj. 23551.2 iterations 92
Cbc0038I Pass  80: suminf.    2.70691 (18) obj. 23551.2 iterations 26
Cbc0038I Pass  81: suminf.    4.57939 (16) obj. 23551.2 iterations 137
Cbc0038I Pass  82: suminf.    4.57939 (16) obj. 23551.2 iterations 11
Cbc0038I Pass  83: suminf.    3.20242 (17) obj. 23551.2 iterations 124
Cbc0038I Pass  84: suminf.    2.71009 (18) obj. 23551.2 iterations 11
Cbc0038I Pass  85: suminf.    4.57939 (15) obj. 23551.2 iterations 200
Cbc0038I Pass  86: suminf.    4.57939 (15) obj. 23551.2 iterations 9
Cbc0038I Pass  87: suminf.    3.20242 (17) obj. 23551.2 iterations 147
Cbc0038I Pass  88: suminf.    2.70691 (18) obj. 23551.2 iterations 13
Cbc0038I Pass  89: suminf.    4.57939 (16) obj. 23551.2 iterations 122
Cbc0038I Pass  90: suminf.    4.57939 (16) obj. 23551.2 iterations 2
Cbc0038I Pass  91: suminf.    3.20242 (17) obj. 23551.2 iterations 141
Cbc0038I Pass  92: suminf.    2.71009 (18) obj. 23551.2 iterations 15
Cbc0038I Pass  93: suminf.    4.57939 (15) obj. 23551.2 iterations 178
Cbc0038I Pass  94: suminf.    4.57939 (15) obj. 23551.2 iterations 5
Cbc0038I Pass  95: suminf.    3.20242 (17) obj. 23551.2 iterations 120
Cbc0038I Pass  96: suminf.    2.70691 (18) obj. 23551.2 iterations 19
Cbc0038I Pass  97: suminf.    4.57939 (16) obj. 23551.2 iterations 143
Cbc0038I Pass  98: suminf.    4.57939 (16) obj. 23551.2 iterations 5
Cbc0038I Pass  99: suminf.    3.20242 (17) obj. 23551.2 iterations 112
Cbc0038I Pass 100: suminf.    2.71009 (18) obj. 23551.2 iterations 62
Cbc0038I Pass 101: suminf.    4.57939 (15) obj. 23551.2 iterations 175
Cbc0038I Pass 102: suminf.    4.57939 (15) obj. 23551.2 iterations 17
Cbc0038I Pass 103: suminf.    3.20242 (17) obj. 23551.2 iterations 115
Cbc0038I Pass 104: suminf.    2.70691 (18) obj. 23551.2 iterations 15
Cbc0038I Pass 105: suminf.    4.57939 (16) obj. 23551.2 iterations 125
Cbc0038I Pass 106: suminf.    4.57939 (16) obj. 23551.2 iterations 22
Cbc0038I Pass 107: suminf.    3.20242 (17) obj. 23551.2 iterations 162
Cbc0038I Pass 108: suminf.    2.71009 (18) obj. 23551.2 iterations 20
Cbc0038I Pass 109: suminf.    4.57939 (15) obj. 23551.2 iterations 154
Cbc0038I Pass 110: suminf.   23.42890 (120) obj. 23551.2 iterations 269
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 991 rows 340 columns, reduced to 858 rows 276 columns - 66 fixed gives 524, 161 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.73 seconds)
Cbc0038I After 0.73 seconds - Feasibility pump exiting with objective of 24576 - took 0.67 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.73 seconds)
Cbc0038I Full problem 991 rows 340 columns, reduced to 702 rows 204 columns - 61 fixed gives 446, 124 - ok now
Cbc0031I 28 added rows had average density of 4.0714286
Cbc0013I At root node, 73 cuts changed objective from 19456 to 22528 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 72 row cuts average 2.3 elements, 12 column cuts (12 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 327 row cuts average 277.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 253 row cuts average 231.5 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is -100
Cbc0001I Search completed - best objective 24576, took 7237 iterations and 0 nodes (2.27 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Cuts at root node changed objective from 19456 to 22528
Probing was tried 12 times and created 84 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Gomory was tried 12 times and created 327 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
Knapsack was tried 12 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 12 times and created 253 cuts of which 0 were active after adding rounds of cuts (0.191 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               0
Total iterations:               7237
Time (CPU seconds):             2.30
Time (Wallclock seconds):       2.34

Total time (CPU seconds):       2.30   (Wallclock seconds):       2.35

