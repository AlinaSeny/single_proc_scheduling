Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_45_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_45_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32588.6 - 7.18 seconds
Cgl0002I 164 variables fixed
Cgl0003I 0 fixed, 31 tightened bounds, 1233 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 360 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 131 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 6991 rows, 2165 columns (2165 integer (2119 of which binary)) and 23922 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2165 objects (2165 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1175 integers unsatisfied sum - 351.933
Cbc0038I Pass   1: (23.54 seconds) suminf.  152.97128 (897) obj. 60109.9 iterations 4526
Cbc0038I Pass   2: (24.22 seconds) suminf.  120.67246 (833) obj. 65839.6 iterations 2051
Cbc0038I Pass   3: (24.63 seconds) suminf.  113.69927 (860) obj. 66328.1 iterations 1195
Cbc0038I Pass   4: (24.72 seconds) suminf.  110.68315 (851) obj. 66157.3 iterations 206
Cbc0038I Pass   5: (24.85 seconds) suminf.  110.73417 (910) obj. 66343.4 iterations 273
Cbc0038I Pass   6: (24.99 seconds) suminf.  107.34646 (883) obj. 66418.3 iterations 298
Cbc0038I Pass   7: (25.20 seconds) suminf.  102.46765 (855) obj. 66720.5 iterations 552
Cbc0038I Pass   8: (25.30 seconds) suminf.  101.86465 (881) obj. 66799.1 iterations 214
Cbc0038I Pass   9: (25.32 seconds) suminf.  103.03966 (884) obj. 66783.1 iterations 33
Cbc0038I Pass  10: (25.34 seconds) suminf.  103.43644 (884) obj. 66789.2 iterations 19
Cbc0038I Pass  11: (25.68 seconds) suminf.   97.60491 (857) obj. 67146.6 iterations 907
Cbc0038I Pass  12: (25.85 seconds) suminf.   94.48594 (830) obj. 66784.8 iterations 424
Cbc0038I Pass  13: (25.91 seconds) suminf.   93.93011 (838) obj. 66789.4 iterations 162
Cbc0038I Pass  14: (26.08 seconds) suminf.   98.34759 (841) obj. 67192.9 iterations 439
Cbc0038I Pass  15: (26.22 seconds) suminf.   93.74795 (803) obj. 67297.4 iterations 325
Cbc0038I Pass  16: (26.30 seconds) suminf.   92.32066 (830) obj. 67275.9 iterations 194
Cbc0038I Pass  17: (26.53 seconds) suminf.   83.16469 (846) obj. 67331.9 iterations 616
Cbc0038I Pass  18: (26.60 seconds) suminf.   84.72101 (825) obj. 67319.4 iterations 161
Cbc0038I Pass  19: (26.73 seconds) suminf.   83.62110 (803) obj. 67124.2 iterations 346
Cbc0038I Pass  20: (26.83 seconds) suminf.   84.79235 (824) obj. 67287.3 iterations 211
Cbc0038I Pass  21: (26.98 seconds) suminf.   83.61467 (801) obj. 67121.5 iterations 347
Cbc0038I Pass  22: (27.05 seconds) suminf.   85.12625 (842) obj. 67163.2 iterations 150
Cbc0038I Pass  23: (27.27 seconds) suminf.   83.96222 (779) obj. 67076.7 iterations 616
Cbc0038I Pass  24: (27.36 seconds) suminf.   83.62370 (775) obj. 67077.8 iterations 193
Cbc0038I Pass  25: (27.41 seconds) suminf.   84.14910 (778) obj. 67101.5 iterations 118
Cbc0038I Pass  26: (27.58 seconds) suminf.   86.18206 (783) obj. 66968.6 iterations 427
Cbc0038I Pass  27: (27.66 seconds) suminf.   84.74505 (793) obj. 67029.3 iterations 160
Cbc0038I Pass  28: (27.68 seconds) suminf.   86.13714 (796) obj. 67156.2 iterations 30
Cbc0038I Pass  29: (27.85 seconds) suminf.   83.58196 (848) obj. 67251.6 iterations 446
Cbc0038I Pass  30: (27.90 seconds) suminf.   81.67145 (813) obj. 67311.3 iterations 110
Cbc0038I Pass  31: (28.15 seconds) suminf.   83.03790 (792) obj. 67573.5 iterations 677
Cbc0038I Pass  32: (28.25 seconds) suminf.   81.83235 (814) obj. 67586.7 iterations 229
Cbc0038I Pass  33: (28.27 seconds) suminf.   82.01411 (809) obj. 67577.1 iterations 32
Cbc0038I Pass  34: (28.47 seconds) suminf.   80.02507 (852) obj. 67842.8 iterations 530
Cbc0038I Pass  35: (28.56 seconds) suminf.   79.31908 (845) obj. 67778.3 iterations 170
Cbc0038I Pass  36: (28.61 seconds) suminf.   76.74729 (842) obj. 67796.4 iterations 121
Cbc0038I Pass  37: (28.74 seconds) suminf.   75.50278 (826) obj. 67527.1 iterations 243
Cbc0038I Pass  38: (28.95 seconds) suminf.   73.65614 (841) obj. 68138.1 iterations 571
Cbc0038I Pass  39: (28.96 seconds) suminf.   73.46491 (841) obj. 68083 iterations 18
Cbc0038I Pass  40: (29.25 seconds) suminf.   71.37035 (733) obj. 68573.7 iterations 789
Cbc0038I Pass  41: (29.41 seconds) suminf.   71.71287 (773) obj. 68765.8 iterations 421
Cbc0038I Pass  42: (29.60 seconds) suminf.   65.94857 (755) obj. 69053.8 iterations 566
Cbc0038I Pass  43: (29.67 seconds) suminf.   66.27718 (786) obj. 68810.4 iterations 150
Cbc0038I Pass  44: (30.02 seconds) suminf.   65.12503 (818) obj. 68100.5 iterations 1087
Cbc0038I Pass  45: (30.21 seconds) suminf.   63.91138 (820) obj. 68332.5 iterations 534
Cbc0038I Pass  46: (30.48 seconds) suminf.   65.42635 (822) obj. 68230.3 iterations 711
Cbc0038I Pass  47: (30.61 seconds) suminf.   62.85042 (788) obj. 68007.7 iterations 331
Cbc0038I Pass  48: (30.79 seconds) suminf.   64.42681 (757) obj. 68368 iterations 517
Cbc0038I Pass  49: (30.82 seconds) suminf.   64.34982 (768) obj. 68327.4 iterations 70
Cbc0038I Pass  50: (31.07 seconds) suminf.   63.73844 (791) obj. 68372.7 iterations 718
Cbc0038I Pass  51: (31.19 seconds) suminf.   62.26934 (770) obj. 68422.8 iterations 325
Cbc0038I Pass  52: (31.26 seconds) suminf.   61.46473 (746) obj. 68411.7 iterations 148
Cbc0038I Pass  53: (31.52 seconds) suminf.   56.93966 (817) obj. 68511.6 iterations 782
Cbc0038I Pass  54: (31.54 seconds) suminf.   57.00188 (821) obj. 68511.5 iterations 32
Cbc0038I Pass  55: (31.77 seconds) suminf.   59.85786 (781) obj. 68621.1 iterations 682
Cbc0038I Pass  56: (31.86 seconds) suminf.   59.73386 (795) obj. 68571.6 iterations 212
Cbc0038I Pass  57: (31.89 seconds) suminf.   59.66431 (796) obj. 68572.2 iterations 30
Cbc0038I Pass  58: (32.18 seconds) suminf.   53.44554 (808) obj. 67617 iterations 870
Cbc0038I Pass  59: (32.28 seconds) suminf.   52.31596 (807) obj. 68517.6 iterations 211
Cbc0038I Pass  60: (32.43 seconds) suminf.   50.66751 (787) obj. 68594.1 iterations 366
Cbc0038I Pass  61: (32.50 seconds) suminf.   51.99852 (787) obj. 68524.3 iterations 179
Cbc0038I Pass  62: (32.63 seconds) suminf.   53.28443 (780) obj. 68406.7 iterations 292
Cbc0038I Pass  63: (32.71 seconds) suminf.   53.34281 (784) obj. 68510.1 iterations 198
Cbc0038I Pass  64: (33.04 seconds) suminf.   49.15005 (761) obj. 68453.6 iterations 1022
Cbc0038I Pass  65: (33.20 seconds) suminf.   47.97181 (803) obj. 68436.1 iterations 424
Cbc0038I Pass  66: (33.60 seconds) suminf.   50.56673 (726) obj. 67630.6 iterations 1303
Cbc0038I Pass  67: (33.73 seconds) suminf.   50.72271 (730) obj. 67684.3 iterations 372
Cbc0038I Pass  68: (33.95 seconds) suminf.   48.78997 (686) obj. 67681.7 iterations 736
Cbc0038I Pass  69: (34.07 seconds) suminf.   46.60951 (700) obj. 67736.4 iterations 426
Cbc0038I Pass  70: (34.14 seconds) suminf.   47.03442 (723) obj. 68439.5 iterations 188
Cbc0038I Pass  71: (34.34 seconds) suminf.   50.26672 (671) obj. 67507.3 iterations 812
Cbc0038I Pass  72: (34.50 seconds) suminf.   47.20454 (711) obj. 67637.5 iterations 618
Cbc0038I Pass  73: (34.83 seconds) suminf.   50.86514 (683) obj. 67692.5 iterations 1280
Cbc0038I Pass  74: (35.01 seconds) suminf.   49.35257 (699) obj. 68182.6 iterations 668
Cbc0038I Pass  75: (35.31 seconds) suminf.   52.80484 (652) obj. 69746.4 iterations 1177
Cbc0038I Pass  76: (35.54 seconds) suminf.   52.01818 (668) obj. 69669.4 iterations 770
Cbc0038I Pass  77: (35.65 seconds) suminf.   51.15270 (676) obj. 69291 iterations 273
Cbc0038I Pass  78: (35.69 seconds) suminf.   50.99270 (659) obj. 67258.1 iterations 128
Cbc0038I Pass  79: (35.75 seconds) suminf.   50.12087 (679) obj. 67232.3 iterations 146
Cbc0038I Pass  80: (36.03 seconds) suminf.   53.46548 (685) obj. 67186.2 iterations 923
Cbc0038I Pass  81: (36.29 seconds) suminf.   49.18380 (693) obj. 67682.6 iterations 841
Cbc0038I Pass  82: (36.60 seconds) suminf.   48.29663 (650) obj. 67365.7 iterations 1030
Cbc0038I Pass  83: (36.94 seconds) suminf.   47.48077 (659) obj. 67718 iterations 1124
Cbc0038I Pass  84: (37.19 seconds) suminf.   50.49491 (650) obj. 67824.6 iterations 937
Cbc0038I Pass  85: (37.35 seconds) suminf.   49.89229 (665) obj. 67292.3 iterations 524
Cbc0038I Pass  86: (37.46 seconds) suminf.   49.78987 (647) obj. 67364.6 iterations 303
Cbc0038I Pass  87: (37.75 seconds) suminf.   50.95172 (641) obj. 67734.7 iterations 1121
Cbc0038I Pass  88: (37.95 seconds) suminf.   49.88297 (696) obj. 67789.2 iterations 675
Cbc0038I Pass  89: (38.27 seconds) suminf.   49.80416 (653) obj. 68014.4 iterations 1088
Cbc0038I Pass  90: (38.42 seconds) suminf.   50.16034 (665) obj. 67799.8 iterations 476
Cbc0038I Pass  91: (38.65 seconds) suminf.   50.00823 (651) obj. 68125.2 iterations 836
Cbc0038I Pass  92: (38.81 seconds) suminf.   52.55555 (659) obj. 67402.2 iterations 622
Cbc0038I Pass  93: (39.07 seconds) suminf.   50.56008 (680) obj. 67789.2 iterations 1063
Cbc0038I Pass  94: (39.21 seconds) suminf.   50.45762 (673) obj. 67869.4 iterations 558
Cbc0038I Pass  95: (39.26 seconds) suminf.   50.34159 (667) obj. 67746.8 iterations 165
Cbc0038I Pass  96: (39.67 seconds) suminf.   52.39210 (626) obj. 71367.6 iterations 1587
Cbc0038I Pass  97: (39.89 seconds) suminf.   49.81717 (635) obj. 70454.6 iterations 793
Cbc0038I Pass  98: (40.05 seconds) suminf.   48.83236 (664) obj. 70258.5 iterations 540
Cbc0038I Pass  99: (40.32 seconds) suminf.   49.63567 (638) obj. 75264.1 iterations 1084
Cbc0038I Pass 100: (40.88 seconds) suminf.   75.31878 (691) obj. 74764.7 iterations 2196
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 322 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6991 rows 2165 columns, reduced to 6260 rows 1829 columns - too large
Cbc0038I Mini branch and bound did not improve solution (44.11 seconds)
Cbc0038I After 44.11 seconds - Feasibility pump exiting - took 22.37 seconds
Cbc0031I 33 added rows had average density of 320.81818
Cbc0013I At root node, 33 cuts changed objective from 32815.628 to 40960 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 60 row cuts average 602.6 elements, 0 column cuts (0 active)  in 1.328 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 56 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.607 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 40960 (56.79 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 40960 (301.63 seconds)
Cbc0010I After 200 nodes, 6 on tree, 1e+50 best solution, best possible 40962 (532.97 seconds)
Cbc0010I After 300 nodes, 19 on tree, 1e+50 best solution, best possible 40962 (716.88 seconds)
Cbc0010I After 400 nodes, 8 on tree, 1e+50 best solution, best possible 40962 (1054.72 seconds)
Cbc0010I After 500 nodes, 27 on tree, 1e+50 best solution, best possible 40962 (1452.24 seconds)
Cbc0010I After 600 nodes, 66 on tree, 1e+50 best solution, best possible 40962 (1733.82 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 40962), took 2390613 iterations and 623 nodes (1785.48 seconds)
Cbc0032I Strong branching done 7468 times (624221 iterations), fathomed 64 nodes and fixed 1248 variables
Cbc0035I Maximum depth 104, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32815.6 to 40960
Probing was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.174 seconds)
Gomory was tried 493 times and created 878 cuts of which 0 were active after adding rounds of cuts (11.245 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 493 times and created 4023 cuts of which 0 were active after adding rounds of cuts (3.866 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.124 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    40962.000
Enumerated nodes:               623
Total iterations:               2390613
Time (CPU seconds):             1785.48
Time (Wallclock seconds):       1786.06

Total time (CPU seconds):       1785.51   (Wallclock seconds):       1786.09

