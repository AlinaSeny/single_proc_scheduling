Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag2_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/dag2_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 787342 - 0.84 seconds
Cgl0002I 152 variables fixed
Cgl0003I 0 fixed, 22 tightened bounds, 1315 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 426 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 132 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0004I processed model has 6511 rows, 2202 columns (2202 integer (2160 of which binary)) and 21497 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2202 objects (2202 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1042 integers unsatisfied sum - 301.441
Cbc0038I Pass   1: (2.35 seconds) suminf.  126.43207 (1081) obj. 1.00686e+06 iterations 2827
Cbc0038I Pass   2: (2.71 seconds) suminf.   98.01525 (1136) obj. 1.08503e+06 iterations 1626
Cbc0038I Pass   3: (2.86 seconds) suminf.   93.33768 (1136) obj. 1.14974e+06 iterations 633
Cbc0038I Pass   4: (3.05 seconds) suminf.   92.33133 (1091) obj. 1.12171e+06 iterations 818
Cbc0038I Pass   5: (3.11 seconds) suminf.   91.35457 (1093) obj. 1.11775e+06 iterations 205
Cbc0038I Pass   6: (3.29 seconds) suminf.   88.22541 (1115) obj. 1.1318e+06 iterations 835
Cbc0038I Pass   7: (3.44 seconds) suminf.   85.35775 (1109) obj. 1.1215e+06 iterations 581
Cbc0038I Pass   8: (3.45 seconds) suminf.   85.38957 (1108) obj. 1.12134e+06 iterations 38
Cbc0038I Pass   9: (3.62 seconds) suminf.   87.73604 (1117) obj. 1.1129e+06 iterations 694
Cbc0038I Pass  10: (3.77 seconds) suminf.   85.46489 (1112) obj. 1.11947e+06 iterations 558
Cbc0038I Pass  11: (3.85 seconds) suminf.   84.51587 (1123) obj. 1.12166e+06 iterations 217
Cbc0038I Pass  12: (4.00 seconds) suminf.   86.40209 (1120) obj. 1.12537e+06 iterations 602
Cbc0038I Pass  13: (4.09 seconds) suminf.   85.57204 (1112) obj. 1.13535e+06 iterations 347
Cbc0038I Pass  14: (4.20 seconds) suminf.   83.91965 (1130) obj. 1.13234e+06 iterations 425
Cbc0038I Pass  15: (4.32 seconds) suminf.   85.40097 (1129) obj. 1.12334e+06 iterations 486
Cbc0038I Pass  16: (4.41 seconds) suminf.   84.24344 (1123) obj. 1.13258e+06 iterations 296
Cbc0038I Pass  17: (4.53 seconds) suminf.   85.18851 (1128) obj. 1.13471e+06 iterations 467
Cbc0038I Pass  18: (4.60 seconds) suminf.   84.43431 (1128) obj. 1.13102e+06 iterations 245
Cbc0038I Pass  19: (4.67 seconds) suminf.   85.26614 (1131) obj. 1.13542e+06 iterations 251
Cbc0038I Pass  20: (4.71 seconds) suminf.   84.57983 (1128) obj. 1.13689e+06 iterations 146
Cbc0038I Pass  21: (4.83 seconds) suminf.   87.44779 (1124) obj. 1.12632e+06 iterations 466
Cbc0038I Pass  22: (4.97 seconds) suminf.   84.49330 (1130) obj. 1.13629e+06 iterations 557
Cbc0038I Pass  23: (5.02 seconds) suminf.   84.34906 (1135) obj. 1.13197e+06 iterations 135
Cbc0038I Pass  24: (5.13 seconds) suminf.   85.40902 (1132) obj. 1.13406e+06 iterations 390
Cbc0038I Pass  25: (5.21 seconds) suminf.   84.72044 (1117) obj. 1.13772e+06 iterations 354
Cbc0038I Pass  26: (5.24 seconds) suminf.   84.53835 (1128) obj. 1.13341e+06 iterations 92
Cbc0038I Pass  27: (5.38 seconds) suminf.   84.58482 (1135) obj. 1.13131e+06 iterations 637
Cbc0038I Pass  28: (5.47 seconds) suminf.   84.17417 (1129) obj. 1.13761e+06 iterations 397
Cbc0038I Pass  29: (5.61 seconds) suminf.   85.35533 (1147) obj. 1.12359e+06 iterations 579
Cbc0038I Pass  30: (5.68 seconds) suminf.   84.72856 (1129) obj. 1.13651e+06 iterations 240
Cbc0038I Pass  31: (5.74 seconds) suminf.   86.20341 (1121) obj. 1.13116e+06 iterations 244
Cbc0038I Pass  32: (5.85 seconds) suminf.   86.71700 (1144) obj. 1.13604e+06 iterations 476
Cbc0038I Pass  33: (5.93 seconds) suminf.   86.64153 (1143) obj. 1.13104e+06 iterations 287
Cbc0038I Pass  34: (5.97 seconds) suminf.   86.52602 (1130) obj. 1.13466e+06 iterations 156
Cbc0038I Pass  35: (6.02 seconds) suminf.   86.45398 (1136) obj. 1.13613e+06 iterations 188
Cbc0038I Pass  36: (6.12 seconds) suminf.   84.93882 (1125) obj. 1.13093e+06 iterations 437
Cbc0038I Pass  37: (6.22 seconds) suminf.   84.53142 (1145) obj. 1.13643e+06 iterations 398
Cbc0038I Pass  38: (6.26 seconds) suminf.   84.08939 (1152) obj. 1.13626e+06 iterations 150
Cbc0038I Pass  39: (6.33 seconds) suminf.   85.35407 (1140) obj. 1.13104e+06 iterations 272
Cbc0038I Pass  40: (6.42 seconds) suminf.   84.43585 (1157) obj. 1.13628e+06 iterations 309
Cbc0038I Pass  41: (6.44 seconds) suminf.   84.44433 (1155) obj. 1.13628e+06 iterations 72
Cbc0038I Pass  42: (6.53 seconds) suminf.   84.26435 (1167) obj. 1.13308e+06 iterations 331
Cbc0038I Pass  43: (6.61 seconds) suminf.   84.08939 (1152) obj. 1.13626e+06 iterations 272
Cbc0038I Pass  44: (6.68 seconds) suminf.   84.85537 (1146) obj. 1.13117e+06 iterations 273
Cbc0038I Pass  45: (7.06 seconds) suminf.  123.47999 (1126) obj. 1.6084e+06 iterations 1741
Cbc0038I Pass  46: (7.41 seconds) suminf.   90.77242 (1177) obj. 1.71945e+06 iterations 1518
Cbc0038I Pass  47: (7.50 seconds) suminf.   90.38394 (1184) obj. 1.73705e+06 iterations 270
Cbc0038I Pass  48: (7.70 seconds) suminf.   86.84341 (1203) obj. 1.77062e+06 iterations 737
Cbc0038I Pass  49: (7.73 seconds) suminf.   87.28166 (1185) obj. 1.77113e+06 iterations 87
Cbc0038I Pass  50: (7.84 seconds) suminf.   88.17720 (1195) obj. 1.77047e+06 iterations 409
Cbc0038I Pass  51: (7.94 seconds) suminf.   88.09094 (1182) obj. 1.76898e+06 iterations 317
Cbc0038I Pass  52: (8.00 seconds) suminf.   87.73738 (1197) obj. 1.76945e+06 iterations 155
Cbc0038I Pass  53: (8.14 seconds) suminf.   88.98103 (1177) obj. 1.76818e+06 iterations 541
Cbc0038I Pass  54: (8.25 seconds) suminf.   86.43983 (1153) obj. 1.76349e+06 iterations 405
Cbc0038I Pass  55: (8.31 seconds) suminf.   86.16922 (1156) obj. 1.75755e+06 iterations 177
Cbc0038I Pass  56: (8.45 seconds) suminf.   86.63968 (1169) obj. 1.76626e+06 iterations 488
Cbc0038I Pass  57: (8.57 seconds) suminf.   86.29198 (1178) obj. 1.76335e+06 iterations 418
Cbc0038I Pass  58: (8.71 seconds) suminf.   88.22068 (1177) obj. 1.76254e+06 iterations 545
Cbc0038I Pass  59: (8.82 seconds) suminf.   87.21158 (1183) obj. 1.76391e+06 iterations 346
Cbc0038I Pass  60: (8.88 seconds) suminf.   87.00633 (1203) obj. 1.76492e+06 iterations 166
Cbc0038I Pass  61: (8.98 seconds) suminf.   87.39492 (1157) obj. 1.77025e+06 iterations 351
Cbc0038I Pass  62: (9.06 seconds) suminf.   87.11933 (1177) obj. 1.769e+06 iterations 319
Cbc0038I Pass  63: (9.21 seconds) suminf.   90.28919 (1185) obj. 1.76303e+06 iterations 581
Cbc0038I Pass  64: (9.30 seconds) suminf.   88.46521 (1203) obj. 1.7627e+06 iterations 341
Cbc0038I Pass  65: (9.36 seconds) suminf.   87.30148 (1203) obj. 1.76168e+06 iterations 156
Cbc0038I Pass  66: (9.37 seconds) suminf.   87.02125 (1198) obj. 1.76216e+06 iterations 31
Cbc0038I Pass  67: (9.43 seconds) suminf.   86.81235 (1205) obj. 1.76559e+06 iterations 166
Cbc0038I Pass  68: (9.57 seconds) suminf.   87.67603 (1222) obj. 1.75993e+06 iterations 473
Cbc0038I Pass  69: (9.68 seconds) suminf.   86.88468 (1228) obj. 1.75516e+06 iterations 385
Cbc0038I Pass  70: (9.86 seconds) suminf.   87.33455 (1166) obj. 1.73623e+06 iterations 697
Cbc0038I Pass  71: (10.00 seconds) suminf.   84.46911 (1196) obj. 1.73324e+06 iterations 463
Cbc0038I Pass  72: (10.22 seconds) suminf.   88.13569 (1214) obj. 1.75938e+06 iterations 821
Cbc0038I Pass  73: (10.56 seconds) suminf.  131.22739 (1161) obj. 1.7743e+06 iterations 1592
Cbc0038I Pass  74: (10.96 seconds) suminf.   96.56932 (1166) obj. 1.71036e+06 iterations 1639
Cbc0038I Pass  75: (11.08 seconds) suminf.   93.09975 (1173) obj. 1.70666e+06 iterations 429
Cbc0038I Pass  76: (11.14 seconds) suminf.   92.64880 (1156) obj. 1.70833e+06 iterations 225
Cbc0038I Pass  77: (11.37 seconds) suminf.   90.75478 (1144) obj. 1.70901e+06 iterations 964
Cbc0038I Pass  78: (11.46 seconds) suminf.   90.39587 (1127) obj. 1.71075e+06 iterations 342
Cbc0038I Pass  79: (11.51 seconds) suminf.   89.97611 (1135) obj. 1.71022e+06 iterations 128
Cbc0038I Pass  80: (11.61 seconds) suminf.   90.84518 (1118) obj. 1.70598e+06 iterations 409
Cbc0038I Pass  81: (11.68 seconds) suminf.   89.79168 (1129) obj. 1.70462e+06 iterations 223
Cbc0038I Pass  82: (11.80 seconds) suminf.   92.02371 (1124) obj. 1.70379e+06 iterations 503
Cbc0038I Pass  83: (11.86 seconds) suminf.   90.67716 (1130) obj. 1.70341e+06 iterations 255
Cbc0038I Pass  84: (11.96 seconds) suminf.   89.49635 (1154) obj. 1.70424e+06 iterations 352
Cbc0038I Pass  85: (11.98 seconds) suminf.   89.72558 (1154) obj. 1.70402e+06 iterations 46
Cbc0038I Pass  86: (12.09 seconds) suminf.   90.51607 (1131) obj. 1.70492e+06 iterations 401
Cbc0038I Pass  87: (12.13 seconds) suminf.   90.26716 (1141) obj. 1.70479e+06 iterations 143
Cbc0038I Pass  88: (12.24 seconds) suminf.   88.24994 (1130) obj. 1.71039e+06 iterations 365
Cbc0038I Pass  89: (12.31 seconds) suminf.   89.42974 (1159) obj. 1.70581e+06 iterations 207
Cbc0038I Pass  90: (12.42 seconds) suminf.   90.95396 (1134) obj. 1.6992e+06 iterations 413
Cbc0038I Pass  91: (12.48 seconds) suminf.   90.44684 (1145) obj. 1.6998e+06 iterations 196
Cbc0038I Pass  92: (12.59 seconds) suminf.   89.54471 (1167) obj. 1.7024e+06 iterations 402
Cbc0038I Pass  93: (12.63 seconds) suminf.   89.44959 (1178) obj. 1.70559e+06 iterations 112
Cbc0038I Pass  94: (12.73 seconds) suminf.   89.14322 (1141) obj. 1.70411e+06 iterations 358
Cbc0038I Pass  95: (12.76 seconds) suminf.   89.91288 (1150) obj. 1.70478e+06 iterations 80
Cbc0038I Pass  96: (12.86 seconds) suminf.   88.98097 (1133) obj. 1.71e+06 iterations 367
Cbc0038I Pass  97: (12.94 seconds) suminf.   89.02483 (1159) obj. 1.70609e+06 iterations 208
Cbc0038I Pass  98: (13.01 seconds) suminf.   89.13878 (1145) obj. 1.70687e+06 iterations 230
Cbc0038I Pass  99: (13.07 seconds) suminf.   89.42974 (1159) obj. 1.70581e+06 iterations 176
Cbc0038I Pass 100: (13.35 seconds) suminf.  117.78943 (1104) obj. 1.70646e+06 iterations 1353
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6511 rows 2202 columns, reduced to 6024 rows 1976 columns - too large
Cbc0038I Mini branch and bound did not improve solution (13.85 seconds)
Cbc0038I After 13.85 seconds - Feasibility pump exiting - took 12.16 seconds
Cbc0031I 47 added rows had average density of 11.87234
Cbc0013I At root node, 47 cuts changed objective from 788417.94 to 802816 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 68 row cuts average 139.8 elements, 0 column cuts (0 active)  in 0.827 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 124 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.404 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 802816 (26.30 seconds)
Cbc0010I After 100 nodes, 2 on tree, 1e+50 best solution, best possible 802817 (129.48 seconds)
Cbc0010I After 200 nodes, 17 on tree, 1e+50 best solution, best possible 802822 (250.22 seconds)
Cbc0010I After 300 nodes, 37 on tree, 1e+50 best solution, best possible 802822 (348.57 seconds)
Cbc0010I After 400 nodes, 42 on tree, 1e+50 best solution, best possible 802822 (448.70 seconds)
Cbc0010I After 500 nodes, 27 on tree, 1e+50 best solution, best possible 802822 (538.37 seconds)
Cbc0010I After 600 nodes, 31 on tree, 1e+50 best solution, best possible 802822 (642.83 seconds)
Cbc0010I After 700 nodes, 36 on tree, 1e+50 best solution, best possible 802822 (740.22 seconds)
Cbc0010I After 800 nodes, 43 on tree, 1e+50 best solution, best possible 802822 (840.69 seconds)
Cbc0010I After 900 nodes, 48 on tree, 1e+50 best solution, best possible 802822 (946.06 seconds)
Cbc0010I After 1000 nodes, 57 on tree, 1e+50 best solution, best possible 802822 (1034.82 seconds)
Cbc0010I After 1100 nodes, 58 on tree, 1e+50 best solution, best possible 802827 (1127.64 seconds)
Cbc0010I After 1200 nodes, 61 on tree, 1e+50 best solution, best possible 802827 (1208.07 seconds)
Cbc0010I After 1300 nodes, 70 on tree, 1e+50 best solution, best possible 802827 (1295.51 seconds)
Cbc0010I After 1400 nodes, 75 on tree, 1e+50 best solution, best possible 802827 (1384.67 seconds)
Cbc0010I After 1500 nodes, 81 on tree, 1e+50 best solution, best possible 802827 (1469.51 seconds)
Cbc0010I After 1600 nodes, 99 on tree, 1e+50 best solution, best possible 802827 (1547.01 seconds)
Cbc0010I After 1700 nodes, 106 on tree, 1e+50 best solution, best possible 802827 (1643.30 seconds)
Cbc0010I After 1800 nodes, 114 on tree, 1e+50 best solution, best possible 802827 (1730.79 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 802827), took 4765741 iterations and 1866 nodes (1799.65 seconds)
Cbc0032I Strong branching done 7442 times (602420 iterations), fathomed 687 nodes and fixed 822 variables
Cbc0035I Maximum depth 789, 0 variables fixed on reduced cost
Cuts at root node changed objective from 788418 to 802816
Probing was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.157 seconds)
Gomory was tried 423 times and created 1141 cuts of which 0 were active after adding rounds of cuts (6.669 seconds)
Knapsack was tried 423 times and created 1547 cuts of which 0 were active after adding rounds of cuts (0.683 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 423 times and created 5924 cuts of which 0 were active after adding rounds of cuts (2.230 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.083 seconds)
ImplicationCuts was tried 93 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    802827.000
Enumerated nodes:               1866
Total iterations:               4765741
Time (CPU seconds):             1799.65
Time (Wallclock seconds):       1806.55

Total time (CPU seconds):       1799.67   (Wallclock seconds):       1806.57

