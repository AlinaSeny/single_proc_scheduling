Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_2_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_2_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 290.555 - 0.44 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 18 tightened bounds, 911 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 740 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 404 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 284 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 235 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 110 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16003 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 766 integers unsatisfied sum - 230.184
Cbc0038I Pass   1: (1.77 seconds) suminf.  101.51260 (615) obj. 466.564 iterations 2006
Cbc0038I Pass   2: (1.94 seconds) suminf.   78.34371 (646) obj. 448.95 iterations 815
Cbc0038I Pass   3: (2.04 seconds) suminf.   73.33889 (640) obj. 453.241 iterations 411
Cbc0038I Pass   4: (2.09 seconds) suminf.   70.54463 (618) obj. 454.198 iterations 158
Cbc0038I Pass   5: (2.11 seconds) suminf.   69.13699 (620) obj. 453.76 iterations 61
Cbc0038I Pass   6: (2.20 seconds) suminf.   64.87431 (642) obj. 442.582 iterations 415
Cbc0038I Pass   7: (2.26 seconds) suminf.   65.08544 (690) obj. 440.241 iterations 216
Cbc0038I Pass   8: (2.32 seconds) suminf.   64.17656 (708) obj. 440.559 iterations 205
Cbc0038I Pass   9: (2.36 seconds) suminf.   65.16432 (717) obj. 441.121 iterations 121
Cbc0038I Pass  10: (2.41 seconds) suminf.   64.18253 (715) obj. 442.986 iterations 147
Cbc0038I Pass  11: (2.50 seconds) suminf.   61.07043 (667) obj. 450.055 iterations 386
Cbc0038I Pass  12: (2.56 seconds) suminf.   63.58566 (697) obj. 447.441 iterations 192
Cbc0038I Pass  13: (2.60 seconds) suminf.   62.37686 (685) obj. 450.032 iterations 122
Cbc0038I Pass  14: (2.72 seconds) suminf.   62.80787 (633) obj. 453.905 iterations 556
Cbc0038I Pass  15: (2.78 seconds) suminf.   62.31538 (665) obj. 453.963 iterations 235
Cbc0038I Pass  16: (2.90 seconds) suminf.   60.30863 (673) obj. 452.94 iterations 506
Cbc0038I Pass  17: (2.94 seconds) suminf.   63.33227 (709) obj. 453.168 iterations 97
Cbc0038I Pass  18: (3.07 seconds) suminf.   60.36576 (649) obj. 455.026 iterations 602
Cbc0038I Pass  19: (3.14 seconds) suminf.   61.40019 (649) obj. 453.076 iterations 246
Cbc0038I Pass  20: (3.17 seconds) suminf.   61.00916 (670) obj. 452.821 iterations 83
Cbc0038I Pass  21: (3.25 seconds) suminf.   62.21240 (648) obj. 453.41 iterations 314
Cbc0038I Pass  22: (3.33 seconds) suminf.   62.18133 (665) obj. 453.007 iterations 265
Cbc0038I Pass  23: (3.38 seconds) suminf.   64.66739 (630) obj. 453.505 iterations 187
Cbc0038I Pass  24: (3.43 seconds) suminf.   63.54583 (665) obj. 453.24 iterations 166
Cbc0038I Pass  25: (3.47 seconds) suminf.   62.42754 (659) obj. 452.985 iterations 89
Cbc0038I Pass  26: (3.54 seconds) suminf.   64.33860 (642) obj. 452.537 iterations 284
Cbc0038I Pass  27: (3.61 seconds) suminf.   64.15303 (665) obj. 453.083 iterations 246
Cbc0038I Pass  28: (3.67 seconds) suminf.   63.75750 (645) obj. 453.144 iterations 207
Cbc0038I Pass  29: (3.99 seconds) suminf.  102.52273 (696) obj. 579.452 iterations 1518
Cbc0038I Pass  30: (4.22 seconds) suminf.   70.51201 (685) obj. 584.623 iterations 1064
Cbc0038I Pass  31: (4.29 seconds) suminf.   66.28708 (691) obj. 584.326 iterations 230
Cbc0038I Pass  32: (4.34 seconds) suminf.   67.86124 (704) obj. 586.782 iterations 143
Cbc0038I Pass  33: (4.45 seconds) suminf.   65.85510 (736) obj. 588.264 iterations 440
Cbc0038I Pass  34: (4.49 seconds) suminf.   64.64727 (745) obj. 590.154 iterations 140
Cbc0038I Pass  35: (4.58 seconds) suminf.   69.23300 (725) obj. 582.892 iterations 337
Cbc0038I Pass  36: (4.67 seconds) suminf.   64.36301 (753) obj. 593.023 iterations 312
Cbc0038I Pass  37: (4.69 seconds) suminf.   63.35155 (757) obj. 591.476 iterations 69
Cbc0038I Pass  38: (4.71 seconds) suminf.   62.27306 (756) obj. 591.707 iterations 49
Cbc0038I Pass  39: (4.72 seconds) suminf.   61.75367 (758) obj. 591.83 iterations 23
Cbc0038I Pass  40: (4.80 seconds) suminf.   66.38685 (690) obj. 585.578 iterations 290
Cbc0038I Pass  41: (4.87 seconds) suminf.   62.81144 (722) obj. 589.056 iterations 276
Cbc0038I Pass  42: (4.89 seconds) suminf.   61.87854 (733) obj. 590.891 iterations 30
Cbc0038I Pass  43: (5.00 seconds) suminf.   64.72634 (724) obj. 596.463 iterations 448
Cbc0038I Pass  44: (5.07 seconds) suminf.   62.68312 (726) obj. 587.24 iterations 254
Cbc0038I Pass  45: (5.10 seconds) suminf.   61.37510 (735) obj. 587.42 iterations 104
Cbc0038I Pass  46: (5.19 seconds) suminf.   63.68681 (742) obj. 579.632 iterations 327
Cbc0038I Pass  47: (5.24 seconds) suminf.   61.19226 (742) obj. 593.082 iterations 190
Cbc0038I Pass  48: (5.27 seconds) suminf.   60.63908 (733) obj. 593.213 iterations 86
Cbc0038I Pass  49: (5.31 seconds) suminf.   60.72354 (721) obj. 590.126 iterations 120
Cbc0038I Pass  50: (5.35 seconds) suminf.   61.19558 (724) obj. 585.319 iterations 114
Cbc0038I Pass  51: (5.38 seconds) suminf.   61.56276 (737) obj. 589.41 iterations 106
Cbc0038I Pass  52: (5.45 seconds) suminf.   67.57132 (711) obj. 590.67 iterations 231
Cbc0038I Pass  53: (5.51 seconds) suminf.   61.75211 (727) obj. 590.929 iterations 190
Cbc0038I Pass  54: (5.54 seconds) suminf.   61.36347 (736) obj. 589.781 iterations 103
Cbc0038I Pass  55: (5.83 seconds) suminf.   82.82904 (774) obj. 636.781 iterations 1332
Cbc0038I Pass  56: (6.05 seconds) suminf.   59.62183 (760) obj. 611.989 iterations 1028
Cbc0038I Pass  57: (6.13 seconds) suminf.   54.57196 (768) obj. 610.264 iterations 311
Cbc0038I Pass  58: (6.16 seconds) suminf.   54.33632 (762) obj. 609.896 iterations 103
Cbc0038I Pass  59: (6.33 seconds) suminf.   53.63273 (819) obj. 627.271 iterations 680
Cbc0038I Pass  60: (6.39 seconds) suminf.   52.58051 (841) obj. 629.377 iterations 239
Cbc0038I Pass  61: (6.45 seconds) suminf.   51.83712 (839) obj. 634.711 iterations 177
Cbc0038I Pass  62: (6.49 seconds) suminf.   52.14037 (831) obj. 632.488 iterations 115
Cbc0038I Pass  63: (6.66 seconds) suminf.   58.46627 (850) obj. 673.995 iterations 692
Cbc0038I Pass  64: (6.76 seconds) suminf.   54.62306 (869) obj. 677.287 iterations 374
Cbc0038I Pass  65: (6.92 seconds) suminf.   56.68134 (809) obj. 658.215 iterations 649
Cbc0038I Pass  66: (7.04 seconds) suminf.   50.72059 (849) obj. 688.068 iterations 477
Cbc0038I Pass  67: (7.11 seconds) suminf.   51.18676 (848) obj. 686.716 iterations 245
Cbc0038I Pass  68: (7.28 seconds) suminf.   48.99717 (829) obj. 685.135 iterations 605
Cbc0038I Pass  69: (7.38 seconds) suminf.   48.02398 (851) obj. 686.4 iterations 388
Cbc0038I Pass  70: (7.54 seconds) suminf.   49.30369 (843) obj. 640.831 iterations 589
Cbc0038I Pass  71: (7.61 seconds) suminf.   48.33286 (874) obj. 642.037 iterations 248
Cbc0038I Pass  72: (7.78 seconds) suminf.   49.87454 (850) obj. 621.635 iterations 617
Cbc0038I Pass  73: (7.85 seconds) suminf.   51.04576 (853) obj. 611.703 iterations 241
Cbc0038I Pass  74: (7.91 seconds) suminf.   50.35134 (849) obj. 610.494 iterations 195
Cbc0038I Pass  75: (8.03 seconds) suminf.   53.54419 (811) obj. 620.365 iterations 443
Cbc0038I Pass  76: (8.13 seconds) suminf.   50.37758 (829) obj. 615.514 iterations 347
Cbc0038I Pass  77: (8.24 seconds) suminf.   49.64303 (843) obj. 610.331 iterations 410
Cbc0038I Pass  78: (8.30 seconds) suminf.   48.68012 (843) obj. 610.34 iterations 199
Cbc0038I Pass  79: (8.35 seconds) suminf.   46.81662 (847) obj. 610.298 iterations 149
Cbc0038I Pass  80: (8.47 seconds) suminf.   50.14593 (808) obj. 610.452 iterations 413
Cbc0038I Pass  81: (8.56 seconds) suminf.   47.73531 (817) obj. 610.42 iterations 366
Cbc0038I Pass  82: (8.68 seconds) suminf.   49.89957 (859) obj. 610.304 iterations 439
Cbc0038I Pass  83: (8.80 seconds) suminf.   47.98103 (868) obj. 610.175 iterations 418
Cbc0038I Pass  84: (8.92 seconds) suminf.   50.65707 (868) obj. 610.867 iterations 433
Cbc0038I Pass  85: (9.01 seconds) suminf.   47.52490 (855) obj. 610.684 iterations 341
Cbc0038I Pass  86: (9.05 seconds) suminf.   47.69853 (862) obj. 610.465 iterations 128
Cbc0038I Pass  87: (9.20 seconds) suminf.   50.38607 (823) obj. 610.798 iterations 528
Cbc0038I Pass  88: (9.31 seconds) suminf.   49.10245 (855) obj. 610.58 iterations 448
Cbc0038I Pass  89: (9.43 seconds) suminf.   51.59017 (822) obj. 610.894 iterations 458
Cbc0038I Pass  90: (9.53 seconds) suminf.   48.71356 (846) obj. 609.902 iterations 341
Cbc0038I Pass  91: (9.56 seconds) suminf.   48.25434 (862) obj. 610.042 iterations 108
Cbc0038I Pass  92: (9.71 seconds) suminf.   48.94182 (844) obj. 610.928 iterations 546
Cbc0038I Pass  93: (9.80 seconds) suminf.   49.21497 (840) obj. 611.562 iterations 296
Cbc0038I Pass  94: (9.91 seconds) suminf.   51.59543 (832) obj. 612.282 iterations 407
Cbc0038I Pass  95: (10.02 seconds) suminf.   50.10380 (876) obj. 612.141 iterations 437
Cbc0038I Pass  96: (10.06 seconds) suminf.   49.79462 (880) obj. 612.152 iterations 112
Cbc0038I Pass  97: (10.19 seconds) suminf.   49.43128 (847) obj. 610.928 iterations 483
Cbc0038I Pass  98: (10.29 seconds) suminf.   49.60307 (838) obj. 610.095 iterations 343
Cbc0038I Pass  99: (10.33 seconds) suminf.   49.30920 (847) obj. 610.026 iterations 114
Cbc0038I Pass 100: (10.53 seconds) suminf.   84.73025 (861) obj. 613.066 iterations 1175
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 130 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4448 rows 1489 columns - too large
Cbc0038I Mini branch and bound did not improve solution (11.71 seconds)
Cbc0038I After 11.71 seconds - Feasibility pump exiting - took 10.37 seconds
Cbc0031I 72 added rows had average density of 9.5277778
Cbc0013I At root node, 72 cuts changed objective from 290.60929 to 311 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 153 row cuts average 219.7 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 4 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 245 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.258 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 311 (19.35 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 322 (91.06 seconds)
Cbc0010I After 200 nodes, 4 on tree, 1e+50 best solution, best possible 326 (139.02 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 326 (192.14 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 326 (238.71 seconds)
Cbc0010I After 500 nodes, 7 on tree, 1e+50 best solution, best possible 326 (290.18 seconds)
Cbc0010I After 600 nodes, 5 on tree, 1e+50 best solution, best possible 326 (334.14 seconds)
Cbc0010I After 700 nodes, 19 on tree, 1e+50 best solution, best possible 326 (394.74 seconds)
Cbc0010I After 800 nodes, 12 on tree, 1e+50 best solution, best possible 326 (438.41 seconds)
Cbc0010I After 900 nodes, 14 on tree, 1e+50 best solution, best possible 326 (485.65 seconds)
Cbc0010I After 1000 nodes, 31 on tree, 1e+50 best solution, best possible 326 (533.72 seconds)
Cbc0010I After 1100 nodes, 27 on tree, 1e+50 best solution, best possible 326 (587.51 seconds)
Cbc0010I After 1200 nodes, 10 on tree, 1e+50 best solution, best possible 329 (633.97 seconds)
Cbc0010I After 1300 nodes, 1 on tree, 1e+50 best solution, best possible 332 (674.38 seconds)
Cbc0010I After 1400 nodes, 15 on tree, 1e+50 best solution, best possible 332 (722.29 seconds)
Cbc0010I After 1500 nodes, 8 on tree, 1e+50 best solution, best possible 332 (768.66 seconds)
Cbc0010I After 1600 nodes, 7 on tree, 1e+50 best solution, best possible 332 (820.32 seconds)
Cbc0010I After 1700 nodes, 4 on tree, 1e+50 best solution, best possible 332 (872.91 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 1e+50 best solution, best possible 332 (921.41 seconds)
Cbc0010I After 1900 nodes, 16 on tree, 1e+50 best solution, best possible 332 (973.64 seconds)
Cbc0010I After 2000 nodes, 7 on tree, 1e+50 best solution, best possible 332 (1025.35 seconds)
Cbc0010I After 2100 nodes, 8 on tree, 1e+50 best solution, best possible 332 (1066.40 seconds)
Cbc0010I After 2200 nodes, 7 on tree, 1e+50 best solution, best possible 333 (1107.53 seconds)
Cbc0010I After 2300 nodes, 17 on tree, 1e+50 best solution, best possible 333 (1145.24 seconds)
Cbc0010I After 2400 nodes, 7 on tree, 1e+50 best solution, best possible 333 (1181.73 seconds)
Cbc0010I After 2500 nodes, 7 on tree, 1e+50 best solution, best possible 336 (1228.32 seconds)
Cbc0010I After 2600 nodes, 5 on tree, 1e+50 best solution, best possible 339 (1265.89 seconds)
Cbc0010I After 2700 nodes, 4 on tree, 1e+50 best solution, best possible 341 (1300.53 seconds)
Cbc0010I After 2800 nodes, 3 on tree, 1e+50 best solution, best possible 345 (1341.72 seconds)
Cbc0010I After 2900 nodes, 2 on tree, 1e+50 best solution, best possible 347 (1368.51 seconds)
Cbc0010I After 3000 nodes, 14 on tree, 1e+50 best solution, best possible 348 (1396.90 seconds)
Cbc0010I After 3100 nodes, 4 on tree, 1e+50 best solution, best possible 348 (1439.29 seconds)
Cbc0010I After 3200 nodes, 3 on tree, 1e+50 best solution, best possible 350 (1471.02 seconds)
Cbc0010I After 3300 nodes, 10 on tree, 1e+50 best solution, best possible 351 (1504.52 seconds)
Cbc0010I After 3400 nodes, 2 on tree, 1e+50 best solution, best possible 351 (1536.59 seconds)
Cbc0010I After 3500 nodes, 12 on tree, 1e+50 best solution, best possible 351 (1568.94 seconds)
Cbc0010I After 3600 nodes, 18 on tree, 1e+50 best solution, best possible 351 (1599.28 seconds)
Cbc0010I After 3700 nodes, 29 on tree, 1e+50 best solution, best possible 351 (1629.34 seconds)
Cbc0010I After 3800 nodes, 20 on tree, 1e+50 best solution, best possible 351 (1657.30 seconds)
Cbc0010I After 3900 nodes, 27 on tree, 1e+50 best solution, best possible 351 (1694.78 seconds)
Cbc0010I After 4000 nodes, 20 on tree, 1e+50 best solution, best possible 351 (1722.75 seconds)
Cbc0010I After 4100 nodes, 20 on tree, 1e+50 best solution, best possible 351 (1766.64 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 351), took 3802999 iterations and 4154 nodes (1799.17 seconds)
Cbc0032I Strong branching done 29942 times (2409891 iterations), fathomed 377 nodes and fixed 2789 variables
Cbc0035I Maximum depth 80, 0 variables fixed on reduced cost
Cuts at root node changed objective from 290.609 to 311
Probing was tried 896 times and created 81915 cuts of which 0 were active after adding rounds of cuts (6.609 seconds)
Gomory was tried 611 times and created 846 cuts of which 0 were active after adding rounds of cuts (4.798 seconds)
Knapsack was tried 611 times and created 3176 cuts of which 0 were active after adding rounds of cuts (0.968 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
MixedIntegerRounding2 was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 611 times and created 13434 cuts of which 0 were active after adding rounds of cuts (1.624 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
ImplicationCuts was tried 48 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    351.000
Enumerated nodes:               4154
Total iterations:               3802999
Time (CPU seconds):             1799.17
Time (Wallclock seconds):       1808.47

Total time (CPU seconds):       1799.19   (Wallclock seconds):       1808.49

