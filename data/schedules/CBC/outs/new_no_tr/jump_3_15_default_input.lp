Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_15_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_15_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20480 - 0.01 seconds
Cgl0002I 30 variables fixed
Cgl0003I 0 fixed, 2 tightened bounds, 112 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 568 rows, 207 columns (207 integer (191 of which binary)) and 1872 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 207 objects (207 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 109 integers unsatisfied sum - 38.3282
Cbc0038I Pass   1: suminf.   14.63222 (67) obj. 24576 iterations 174
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 25600 iterations 248
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 25087.1
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.   14.63222 (67) obj. 24576 iterations 0
Cbc0038I Pass   4: suminf.    0.45607 (16) obj. 25087.1 iterations 219
Cbc0038I Pass   5: suminf.    3.14327 (18) obj. 25087.1 iterations 48
Cbc0038I Pass   6: suminf.    1.46382 (12) obj. 25087.1 iterations 18
Cbc0038I Pass   7: suminf.    3.94859 (17) obj. 25087.1 iterations 72
Cbc0038I Pass   8: suminf.    1.35082 (6) obj. 25087.1 iterations 37
Cbc0038I Pass   9: suminf.    1.62685 (11) obj. 25087.1 iterations 23
Cbc0038I Pass  10: suminf.    3.34190 (18) obj. 25087.1 iterations 79
Cbc0038I Pass  11: suminf.    1.35082 (6) obj. 25087.1 iterations 23
Cbc0038I Pass  12: suminf.    1.46382 (12) obj. 25087.1 iterations 28
Cbc0038I Pass  13: suminf.    3.94859 (17) obj. 25087.1 iterations 76
Cbc0038I Pass  14: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  15: suminf.    1.62685 (11) obj. 25087.1 iterations 20
Cbc0038I Pass  16: suminf.    3.34190 (18) obj. 25087.1 iterations 49
Cbc0038I Pass  17: suminf.    1.35082 (6) obj. 25087.1 iterations 28
Cbc0038I Pass  18: suminf.    1.46382 (12) obj. 25087.1 iterations 28
Cbc0038I Pass  19: suminf.    3.94859 (17) obj. 25087.1 iterations 52
Cbc0038I Pass  20: suminf.    1.35082 (6) obj. 25087.1 iterations 30
Cbc0038I Pass  21: suminf.    1.62685 (11) obj. 25087.1 iterations 26
Cbc0038I Pass  22: suminf.    3.34190 (18) obj. 25087.1 iterations 51
Cbc0038I Pass  23: suminf.    1.35082 (6) obj. 25087.1 iterations 28
Cbc0038I Pass  24: suminf.    1.46382 (12) obj. 25087.1 iterations 24
Cbc0038I Pass  25: suminf.    3.94859 (17) obj. 25087.1 iterations 65
Cbc0038I Pass  26: suminf.    1.35082 (6) obj. 25087.1 iterations 37
Cbc0038I Pass  27: suminf.    1.62685 (11) obj. 25087.1 iterations 32
Cbc0038I Pass  28: suminf.    3.34190 (18) obj. 25087.1 iterations 69
Cbc0038I Pass  29: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  30: suminf.    1.46382 (12) obj. 25087.1 iterations 22
Cbc0038I Pass  31: suminf.    3.94859 (17) obj. 25087.1 iterations 60
Cbc0038I Pass  32: suminf.    1.35082 (6) obj. 25087.1 iterations 20
Cbc0038I Pass  33: suminf.    1.62685 (11) obj. 25087.1 iterations 23
Cbc0038I Pass  34: suminf.    3.34190 (18) obj. 25087.1 iterations 78
Cbc0038I Pass  35: suminf.    1.35082 (6) obj. 25087.1 iterations 15
Cbc0038I Pass  36: suminf.    1.46382 (12) obj. 25087.1 iterations 15
Cbc0038I Pass  37: suminf.    3.94859 (17) obj. 25087.1 iterations 62
Cbc0038I Pass  38: suminf.    1.35082 (6) obj. 25087.1 iterations 23
Cbc0038I Pass  39: suminf.    1.62685 (11) obj. 25087.1 iterations 13
Cbc0038I Pass  40: suminf.    3.34190 (18) obj. 25087.1 iterations 47
Cbc0038I Pass  41: suminf.    1.35082 (6) obj. 25087.1 iterations 19
Cbc0038I Pass  42: suminf.    1.46382 (12) obj. 25087.1 iterations 22
Cbc0038I Pass  43: suminf.    3.94859 (17) obj. 25087.1 iterations 56
Cbc0038I Pass  44: suminf.    1.35082 (6) obj. 25087.1 iterations 31
Cbc0038I Pass  45: suminf.    1.62685 (11) obj. 25087.1 iterations 30
Cbc0038I Pass  46: suminf.    3.34190 (18) obj. 25087.1 iterations 46
Cbc0038I Pass  47: suminf.    1.35082 (6) obj. 25087.1 iterations 20
Cbc0038I Pass  48: suminf.    1.46382 (12) obj. 25087.1 iterations 25
Cbc0038I Pass  49: suminf.    3.94859 (17) obj. 25087.1 iterations 61
Cbc0038I Pass  50: suminf.    1.35082 (6) obj. 25087.1 iterations 32
Cbc0038I Pass  51: suminf.    1.62685 (11) obj. 25087.1 iterations 22
Cbc0038I Pass  52: suminf.    3.34190 (18) obj. 25087.1 iterations 45
Cbc0038I Pass  53: suminf.    1.35082 (6) obj. 25087.1 iterations 18
Cbc0038I Pass  54: suminf.    1.46382 (12) obj. 25087.1 iterations 17
Cbc0038I Pass  55: suminf.    3.94859 (17) obj. 25087.1 iterations 56
Cbc0038I Pass  56: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  57: suminf.    1.62685 (11) obj. 25087.1 iterations 26
Cbc0038I Pass  58: suminf.    3.34190 (18) obj. 25087.1 iterations 57
Cbc0038I Pass  59: suminf.    1.35082 (6) obj. 25087.1 iterations 35
Cbc0038I Pass  60: suminf.    1.46382 (12) obj. 25087.1 iterations 17
Cbc0038I Pass  61: suminf.    3.94859 (17) obj. 25087.1 iterations 54
Cbc0038I Pass  62: suminf.    1.35082 (6) obj. 25087.1 iterations 23
Cbc0038I Pass  63: suminf.    1.62685 (11) obj. 25087.1 iterations 22
Cbc0038I Pass  64: suminf.    3.34190 (18) obj. 25087.1 iterations 72
Cbc0038I Pass  65: suminf.    1.35082 (6) obj. 25087.1 iterations 23
Cbc0038I Pass  66: suminf.    1.46382 (12) obj. 25087.1 iterations 16
Cbc0038I Pass  67: suminf.    3.94859 (17) obj. 25087.1 iterations 74
Cbc0038I Pass  68: suminf.    1.35082 (6) obj. 25087.1 iterations 33
Cbc0038I Pass  69: suminf.    1.62685 (11) obj. 25087.1 iterations 16
Cbc0038I Pass  70: suminf.    3.34190 (18) obj. 25087.1 iterations 56
Cbc0038I Pass  71: suminf.    1.35082 (6) obj. 25087.1 iterations 19
Cbc0038I Pass  72: suminf.    1.46382 (12) obj. 25087.1 iterations 42
Cbc0038I Pass  73: suminf.    3.94859 (17) obj. 25087.1 iterations 67
Cbc0038I Pass  74: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  75: suminf.    1.62685 (11) obj. 25087.1 iterations 13
Cbc0038I Pass  76: suminf.    3.34190 (18) obj. 25087.1 iterations 47
Cbc0038I Pass  77: suminf.    1.35082 (6) obj. 25087.1 iterations 18
Cbc0038I Pass  78: suminf.    1.46382 (12) obj. 25087.1 iterations 13
Cbc0038I Pass  79: suminf.    3.94859 (17) obj. 25087.1 iterations 54
Cbc0038I Pass  80: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  81: suminf.    1.62685 (11) obj. 25087.1 iterations 15
Cbc0038I Pass  82: suminf.    3.34190 (18) obj. 25087.1 iterations 58
Cbc0038I Pass  83: suminf.    1.35082 (6) obj. 25087.1 iterations 25
Cbc0038I Pass  84: suminf.    1.46382 (12) obj. 25087.1 iterations 17
Cbc0038I Pass  85: suminf.    3.94859 (17) obj. 25087.1 iterations 52
Cbc0038I Pass  86: suminf.    1.35082 (6) obj. 25087.1 iterations 27
Cbc0038I Pass  87: suminf.    1.62685 (11) obj. 25087.1 iterations 20
Cbc0038I Pass  88: suminf.    3.34190 (18) obj. 25087.1 iterations 59
Cbc0038I Pass  89: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  90: suminf.    1.46382 (12) obj. 25087.1 iterations 20
Cbc0038I Pass  91: suminf.    3.94859 (17) obj. 25087.1 iterations 46
Cbc0038I Pass  92: suminf.    1.35082 (6) obj. 25087.1 iterations 24
Cbc0038I Pass  93: suminf.    1.62685 (11) obj. 25087.1 iterations 17
Cbc0038I Pass  94: suminf.    3.34190 (18) obj. 25087.1 iterations 49
Cbc0038I Pass  95: suminf.    1.35082 (6) obj. 25087.1 iterations 22
Cbc0038I Pass  96: suminf.    1.46382 (12) obj. 25087.1 iterations 16
Cbc0038I Pass  97: suminf.    3.94859 (17) obj. 25087.1 iterations 57
Cbc0038I Pass  98: suminf.    1.35082 (6) obj. 25087.1 iterations 26
Cbc0038I Pass  99: suminf.    1.62685 (11) obj. 25087.1 iterations 27
Cbc0038I Pass 100: suminf.    3.34190 (18) obj. 25087.1 iterations 50
Cbc0038I Pass 101: suminf.    1.35082 (6) obj. 25087.1 iterations 44
Cbc0038I Pass 102: suminf.   16.34567 (57) obj. 25087.1 iterations 123
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 568 rows 207 columns, reduced to 441 rows 144 columns - 23 fixed gives 293, 91 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of 25600 - took 0.25 seconds
Cbc0012I Integer solution of 25600 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0031I 14 added rows had average density of 26.785714
Cbc0013I At root node, 14 cuts changed objective from 20480 to 20480 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 45 row cuts average 2.6 elements, 3 column cuts (3 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 185.4 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 179 row cuts average 142.3 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 25600 best solution, best possible 20480 (0.93 seconds)
Cbc0010I After 1000 nodes, 37 on tree, 25600 best solution, best possible 20500 (17.31 seconds)
Cbc0010I After 2000 nodes, 34 on tree, 25600 best solution, best possible 20540 (29.41 seconds)
Cbc0010I After 3000 nodes, 34 on tree, 25600 best solution, best possible 20540 (40.44 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 206 rows 69 columns
Cbc0010I After 4000 nodes, 34 on tree, 25600 best solution, best possible 20540 (50.41 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 204 rows 68 columns
Cbc0010I After 5000 nodes, 37 on tree, 25600 best solution, best possible 20540 (57.15 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 200 rows 66 columns
Cbc0010I After 6000 nodes, 34 on tree, 25600 best solution, best possible 20540 (63.22 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 168 rows 56 columns
Cbc0010I After 7000 nodes, 37 on tree, 25600 best solution, best possible 20540 (68.69 seconds)
Cbc0010I After 8000 nodes, 37 on tree, 25600 best solution, best possible 20540 (74.46 seconds)
Cbc0010I After 9000 nodes, 36 on tree, 25600 best solution, best possible 20540 (81.11 seconds)
Cbc0010I After 10000 nodes, 34 on tree, 25600 best solution, best possible 20540 (87.54 seconds)
Cbc0010I After 11000 nodes, 35 on tree, 25600 best solution, best possible 20540 (94.07 seconds)
Cbc0010I After 12000 nodes, 1 on tree, 25600 best solution, best possible 22310 (100.53 seconds)
Cbc0010I After 13000 nodes, 3 on tree, 25600 best solution, best possible 22413 (107.25 seconds)
Cbc0010I After 14000 nodes, 4 on tree, 25600 best solution, best possible 22512 (113.76 seconds)
Cbc0010I After 15000 nodes, 3 on tree, 25600 best solution, best possible 22574 (119.36 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 199 rows 66 columns
Cbc0010I After 16000 nodes, 3 on tree, 25600 best solution, best possible 22636 (124.96 seconds)
Cbc0010I After 17000 nodes, 5 on tree, 25600 best solution, best possible 22708 (131.21 seconds)
Cbc0010I After 18000 nodes, 1 on tree, 25600 best solution, best possible 22757 (136.24 seconds)
Cbc0010I After 19000 nodes, 3 on tree, 25600 best solution, best possible 22802 (140.83 seconds)
Cbc0010I After 20000 nodes, 4 on tree, 25600 best solution, best possible 22843 (144.96 seconds)
Cbc0010I After 21000 nodes, 5 on tree, 25600 best solution, best possible 22880 (148.64 seconds)
Cbc0010I After 22000 nodes, 3 on tree, 25600 best solution, best possible 22920 (152.85 seconds)
Cbc0010I After 23000 nodes, 4 on tree, 25600 best solution, best possible 22959 (157.00 seconds)
Cbc0010I After 24000 nodes, 6 on tree, 25600 best solution, best possible 22995 (160.94 seconds)
Cbc0010I After 25000 nodes, 2 on tree, 25600 best solution, best possible 23036 (165.07 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 144 rows 51 columns
Cbc0010I After 26000 nodes, 3 on tree, 25600 best solution, best possible 23076 (168.99 seconds)
Cbc0010I After 27000 nodes, 5 on tree, 25600 best solution, best possible 23112 (172.78 seconds)
Cbc0010I After 28000 nodes, 4 on tree, 25600 best solution, best possible 23152 (176.98 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 199 rows 68 columns
Cbc0010I After 29000 nodes, 6 on tree, 25600 best solution, best possible 23194 (181.14 seconds)
Cbc0010I After 30000 nodes, 5 on tree, 25600 best solution, best possible 23231 (185.16 seconds)
Cbc0010I After 31000 nodes, 3 on tree, 25600 best solution, best possible 23276 (189.64 seconds)
Cbc0010I After 32000 nodes, 3 on tree, 25600 best solution, best possible 23321 (194.07 seconds)
Cbc0010I After 33000 nodes, 6 on tree, 25600 best solution, best possible 23366 (198.64 seconds)
Cbc0010I After 34000 nodes, 5 on tree, 25600 best solution, best possible 23406 (202.96 seconds)
Cbc0010I After 35000 nodes, 5 on tree, 25600 best solution, best possible 23449 (207.42 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 193 rows 63 columns
Cbc0010I After 36000 nodes, 6 on tree, 25600 best solution, best possible 23493 (211.96 seconds)
Cbc0010I After 37000 nodes, 5 on tree, 25600 best solution, best possible 23538 (216.50 seconds)
Cbc0010I After 38000 nodes, 7 on tree, 25600 best solution, best possible 23563 (221.03 seconds)
Cbc0010I After 39000 nodes, 3 on tree, 25600 best solution, best possible 23586 (226.24 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 147 rows 48 columns
Cbc0010I After 40000 nodes, 3 on tree, 25600 best solution, best possible 23614 (231.89 seconds)
Cbc0010I After 41000 nodes, 6 on tree, 25600 best solution, best possible 23644 (237.44 seconds)
Cbc0010I After 42000 nodes, 2 on tree, 25600 best solution, best possible 23670 (242.93 seconds)
Cbc0010I After 43000 nodes, 3 on tree, 25600 best solution, best possible 23700 (248.16 seconds)
Cbc0010I After 44000 nodes, 3 on tree, 25600 best solution, best possible 23727 (253.59 seconds)
Cbc0010I After 45000 nodes, 7 on tree, 25600 best solution, best possible 23751 (258.58 seconds)
Cbc0010I After 46000 nodes, 7 on tree, 25600 best solution, best possible 23775 (263.42 seconds)
Cbc0010I After 47000 nodes, 4 on tree, 25600 best solution, best possible 23795 (267.82 seconds)
Cbc0010I After 48000 nodes, 3 on tree, 25600 best solution, best possible 23822 (272.69 seconds)
Cbc0010I After 49000 nodes, 2 on tree, 25600 best solution, best possible 23849 (277.82 seconds)
Cbc0010I After 50000 nodes, 3 on tree, 25600 best solution, best possible 23867 (282.48 seconds)
Cbc0010I After 51000 nodes, 5 on tree, 25600 best solution, best possible 23893 (287.23 seconds)
Cbc0010I After 52000 nodes, 7 on tree, 25600 best solution, best possible 23918 (292.26 seconds)
Cbc0010I After 53000 nodes, 3 on tree, 25600 best solution, best possible 23941 (297.40 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 48 rows 19 columns
Cbc0010I After 54000 nodes, 9 on tree, 25600 best solution, best possible 23959 (302.23 seconds)
Cbc0010I After 55000 nodes, 5 on tree, 25600 best solution, best possible 23976 (306.72 seconds)
Cbc0010I After 56000 nodes, 5 on tree, 25600 best solution, best possible 24003 (311.60 seconds)
Cbc0010I After 57000 nodes, 5 on tree, 25600 best solution, best possible 24028 (316.05 seconds)
Cbc0010I After 58000 nodes, 6 on tree, 25600 best solution, best possible 24045 (320.08 seconds)
Cbc0010I After 59000 nodes, 6 on tree, 25600 best solution, best possible 24064 (324.36 seconds)
Cbc0010I After 60000 nodes, 5 on tree, 25600 best solution, best possible 24083 (328.69 seconds)
Cbc0010I After 61000 nodes, 7 on tree, 25600 best solution, best possible 24102 (332.85 seconds)
Cbc0038I Full problem 568 rows 207 columns, reduced to 191 rows 65 columns
Cbc0010I After 62000 nodes, 3 on tree, 25600 best solution, best possible 24124 (337.20 seconds)
Cbc0010I After 63000 nodes, 4 on tree, 25600 best solution, best possible 24142 (341.31 seconds)
Cbc0010I After 64000 nodes, 5 on tree, 25600 best solution, best possible 24161 (345.44 seconds)
Cbc0010I After 65000 nodes, 5 on tree, 25600 best solution, best possible 24183 (349.72 seconds)
Cbc0010I After 66000 nodes, 6 on tree, 25600 best solution, best possible 24210 (354.38 seconds)
Cbc0010I After 67000 nodes, 6 on tree, 25600 best solution, best possible 24236 (358.85 seconds)
Cbc0010I After 68000 nodes, 3 on tree, 25600 best solution, best possible 24259 (363.32 seconds)
Cbc0010I After 69000 nodes, 4 on tree, 25600 best solution, best possible 24283 (367.93 seconds)
Cbc0010I After 70000 nodes, 3 on tree, 25600 best solution, best possible 24306 (372.34 seconds)
Cbc0010I After 71000 nodes, 4 on tree, 25600 best solution, best possible 24330 (376.98 seconds)
Cbc0010I After 72000 nodes, 4 on tree, 25600 best solution, best possible 24358 (381.75 seconds)
Cbc0010I After 73000 nodes, 4 on tree, 25600 best solution, best possible 24386 (386.26 seconds)
Cbc0010I After 74000 nodes, 6 on tree, 25600 best solution, best possible 24409 (390.67 seconds)
Cbc0010I After 75000 nodes, 6 on tree, 25600 best solution, best possible 24433 (395.19 seconds)
Cbc0010I After 76000 nodes, 3 on tree, 25600 best solution, best possible 24461 (400.13 seconds)
Cbc0010I After 77000 nodes, 9 on tree, 25600 best solution, best possible 24485 (404.97 seconds)
Cbc0010I After 78000 nodes, 1 on tree, 25600 best solution, best possible 24510 (409.59 seconds)
Cbc0010I After 79000 nodes, 5 on tree, 25600 best solution, best possible 24533 (414.16 seconds)
Cbc0010I After 80000 nodes, 5 on tree, 25600 best solution, best possible 24556 (418.73 seconds)
Cbc0016I Integer solution of 24576 found by strong branching after 5223494 iterations and 80583 nodes (421.61 seconds)
Cbc0001I Search completed - best objective 24576, took 5223494 iterations and 80583 nodes (421.61 seconds)
Cbc0032I Strong branching done 140150 times (3095658 iterations), fathomed 11776 nodes and fixed 25712 variables
Cbc0035I Maximum depth 4102, 5 variables fixed on reduced cost
Cuts at root node changed objective from 20480 to 20480
Probing was tried 31 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Gomory was tried 31 times and created 523 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
Knapsack was tried 31 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 31 times and created 179 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ImplicationCuts was tried 79 times and created 109 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               80583
Total iterations:               5223494
Time (CPU seconds):             421.62
Time (Wallclock seconds):       435.16

Total time (CPU seconds):       421.63   (Wallclock seconds):       435.17

