Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default25_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/default25_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 27648 - 0.08 seconds
Cgl0002I 70 variables fixed
Cgl0003I 0 fixed, 15 tightened bounds, 366 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 93 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 1897 rows, 651 columns (651 integer (625 of which binary)) and 6350 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 651 objects (651 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 355 integers unsatisfied sum - 110.685
Cbc0038I Pass   1: suminf.   20.49401 (127) obj. 35538.8 iterations 869
Cbc0038I Pass   2: suminf.   17.13434 (132) obj. 35775.9 iterations 263
Cbc0038I Pass   3: suminf.   16.70583 (130) obj. 35775.2 iterations 73
Cbc0038I Pass   4: suminf.    5.31757 (33) obj. 35840 iterations 633
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 35840 iterations 259
Cbc0038I Solution found of 35840
Cbc0038I Cleaned solution of 35840
Cbc0038I Before mini branch and bound, 250 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I Round again with cutoff of 35019.9
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   6: suminf.   21.58828 (130) obj. 35019 iterations 24
Cbc0038I Pass   7: suminf.   17.35145 (172) obj. 35019.9 iterations 169
Cbc0038I Pass   8: suminf.   16.91461 (171) obj. 35019.9 iterations 44
Cbc0038I Pass   9: suminf.    8.32971 (76) obj. 35019.9 iterations 194
Cbc0038I Pass  10: suminf.    8.32971 (76) obj. 35019.9 iterations 13
Cbc0038I Pass  11: suminf.    5.40333 (31) obj. 35019.9 iterations 249
Cbc0038I Pass  12: suminf.    5.27085 (29) obj. 35019.9 iterations 25
Cbc0038I Pass  13: suminf.    3.48418 (23) obj. 35019.9 iterations 359
Cbc0038I Pass  14: suminf.    3.04045 (19) obj. 35019.9 iterations 16
Cbc0038I Pass  15: suminf.    4.24291 (24) obj. 35019.9 iterations 251
Cbc0038I Pass  16: suminf.    4.24291 (24) obj. 35019.9 iterations 15
Cbc0038I Pass  17: suminf.   37.93357 (187) obj. 35019.9 iterations 775
Cbc0038I Pass  18: suminf.   14.12969 (86) obj. 35019.9 iterations 345
Cbc0038I Pass  19: suminf.   10.78488 (87) obj. 35019.9 iterations 87
Cbc0038I Pass  20: suminf.   11.29507 (76) obj. 35019.9 iterations 30
Cbc0038I Pass  21: suminf.    0.86458 (24) obj. 35019.9 iterations 153
Cbc0038I Pass  22: suminf.    0.86458 (24) obj. 35019.9 iterations 7
Cbc0038I Pass  23: suminf.    1.43030 (21) obj. 35019.9 iterations 73
Cbc0038I Pass  24: suminf.    3.64961 (36) obj. 35019.9 iterations 134
Cbc0038I Pass  25: suminf.    7.53129 (45) obj. 35019.9 iterations 133
Cbc0038I Pass  26: suminf.    5.99678 (46) obj. 35019.9 iterations 67
Cbc0038I Pass  27: suminf.    5.99678 (46) obj. 35019.9 iterations 34
Cbc0038I Pass  28: suminf.    8.41378 (39) obj. 35019.9 iterations 375
Cbc0038I Pass  29: suminf.    7.10138 (40) obj. 35019.9 iterations 86
Cbc0038I Pass  30: suminf.    5.24799 (35) obj. 35019.9 iterations 65
Cbc0038I Pass  31: suminf.    5.07126 (33) obj. 35019.9 iterations 90
Cbc0038I Pass  32: suminf.    1.43455 (18) obj. 35019.9 iterations 25
Cbc0038I Pass  33: suminf.    2.04989 (22) obj. 35019.9 iterations 85
Cbc0038I Pass  34: suminf.    1.92164 (21) obj. 35019.9 iterations 15
Cbc0038I Pass  35: suminf.    3.93712 (21) obj. 35019.9 iterations 83
Cbc0038I Pass  36: suminf.    2.81878 (23) obj. 35019.9 iterations 61
Cbc0038I Pass  37: suminf.    2.03661 (22) obj. 35019.9 iterations 32
Cbc0038I Pass  38: suminf.    0.75833 (14) obj. 35019.9 iterations 120
Cbc0038I Pass  39: suminf.    0.74623 (20) obj. 35019.9 iterations 13
Cbc0038I Pass  40: suminf.    3.13059 (21) obj. 35019.9 iterations 88
Cbc0038I Pass  41: suminf.    3.13059 (21) obj. 35019.9 iterations 0
Cbc0038I Pass  42: suminf.    1.10628 (15) obj. 35019.9 iterations 127
Cbc0038I Pass  43: suminf.    0.92780 (12) obj. 35019.9 iterations 24
Cbc0038I Pass  44: suminf.    0.58044 (4) obj. 35019.9 iterations 37
Cbc0038I Pass  45: suminf.    0.58044 (4) obj. 35019.9 iterations 6
Cbc0038I Pass  46: suminf.    0.36687 (4) obj. 35019.9 iterations 74
Cbc0038I Pass  47: suminf.   40.66515 (205) obj. 35019.9 iterations 676
Cbc0038I Pass  48: suminf.   14.04319 (109) obj. 35019.9 iterations 429
Cbc0038I Pass  49: suminf.   11.77691 (99) obj. 35019.9 iterations 262
Cbc0038I Pass  50: suminf.   10.22875 (101) obj. 35019.9 iterations 42
Cbc0038I Pass  51: suminf.    9.05166 (60) obj. 35019.9 iterations 191
Cbc0038I Pass  52: suminf.    8.76423 (58) obj. 35019.9 iterations 149
Cbc0038I Pass  53: suminf.    7.67106 (72) obj. 35019.9 iterations 96
Cbc0038I Pass  54: suminf.    2.70074 (16) obj. 35019.9 iterations 191
Cbc0038I Pass  55: suminf.    0.36687 (4) obj. 35019.9 iterations 147
Cbc0038I Pass  56: suminf.    0.58044 (4) obj. 35019.9 iterations 33
Cbc0038I Pass  57: suminf.   55.53926 (253) obj. 35019.9 iterations 660
Cbc0038I Pass  58: suminf.   22.17645 (114) obj. 35019.9 iterations 478
Cbc0038I Pass  59: suminf.   17.27911 (109) obj. 35019.9 iterations 171
Cbc0038I Pass  60: suminf.   13.78823 (98) obj. 35019.9 iterations 104
Cbc0038I Pass  61: suminf.   13.55605 (100) obj. 35019.9 iterations 47
Cbc0038I Pass  62: suminf.    2.18456 (21) obj. 35019.9 iterations 237
Cbc0038I Pass  63: suminf.    1.84552 (24) obj. 35019.9 iterations 58
Cbc0038I Pass  64: suminf.    1.65902 (21) obj. 35019.9 iterations 63
Cbc0038I Pass  65: suminf.    1.65902 (21) obj. 35019.9 iterations 4
Cbc0038I Pass  66: suminf.    1.38039 (22) obj. 35019.9 iterations 107
Cbc0038I Pass  67: suminf.    1.36005 (21) obj. 35019.9 iterations 4
Cbc0038I Pass  68: suminf.    0.95896 (14) obj. 35019.9 iterations 63
Cbc0038I Pass  69: suminf.    0.95896 (14) obj. 35019.9 iterations 0
Cbc0038I Pass  70: suminf.    0.36687 (4) obj. 35019.9 iterations 78
Cbc0038I Pass  71: suminf.    0.58044 (4) obj. 35019.9 iterations 22
Cbc0038I Pass  72: suminf.   41.04505 (193) obj. 35019.9 iterations 612
Cbc0038I Pass  73: suminf.   14.66792 (82) obj. 35019.9 iterations 443
Cbc0038I Pass  74: suminf.   12.46789 (76) obj. 35019.9 iterations 84
Cbc0038I Pass  75: suminf.   11.29903 (71) obj. 35019.9 iterations 36
Cbc0038I Pass  76: suminf.    5.65227 (48) obj. 35019.9 iterations 66
Cbc0038I Pass  77: suminf.    5.65227 (48) obj. 35019.9 iterations 4
Cbc0038I Pass  78: suminf.    2.97034 (17) obj. 35019.9 iterations 167
Cbc0038I Pass  79: suminf.    0.36687 (4) obj. 35019.9 iterations 13
Cbc0038I Pass  80: suminf.    0.58044 (4) obj. 35019.9 iterations 20
Cbc0038I Pass  81: suminf.   29.11516 (146) obj. 35019.9 iterations 478
Cbc0038I Pass  82: suminf.   12.75905 (71) obj. 35019.9 iterations 330
Cbc0038I Pass  83: suminf.    8.41395 (53) obj. 35019.9 iterations 119
Cbc0038I Pass  84: suminf.    8.05834 (47) obj. 35019.9 iterations 48
Cbc0038I Pass  85: suminf.    3.60200 (28) obj. 35019.9 iterations 324
Cbc0038I Pass  86: suminf.    3.60200 (28) obj. 35019.9 iterations 5
Cbc0038I Pass  87: suminf.    4.23701 (25) obj. 35019.9 iterations 66
Cbc0038I Pass  88: suminf.    1.28385 (14) obj. 35019.9 iterations 64
Cbc0038I Pass  89: suminf.    0.36687 (4) obj. 35019.9 iterations 72
Cbc0038I Pass  90: suminf.    0.36687 (4) obj. 35019.9 iterations 6
Cbc0038I Pass  91: suminf.    0.58044 (4) obj. 35019.9 iterations 25
Cbc0038I Pass  92: suminf.   39.91852 (172) obj. 35019.9 iterations 677
Cbc0038I Pass  93: suminf.   23.38731 (109) obj. 35019.9 iterations 333
Cbc0038I Pass  94: suminf.   21.13609 (90) obj. 35019.9 iterations 65
Cbc0038I Pass  95: suminf.   20.46758 (88) obj. 35019.9 iterations 9
Cbc0038I Pass  96: suminf.   18.05622 (80) obj. 35019.9 iterations 16
Cbc0038I Pass  97: suminf.   11.38742 (52) obj. 35019.9 iterations 138
Cbc0038I Pass  98: suminf.    9.47137 (64) obj. 35019.9 iterations 72
Cbc0038I Pass  99: suminf.    3.87142 (22) obj. 35019.9 iterations 272
Cbc0038I Pass 100: suminf.    0.36687 (4) obj. 35019.9 iterations 111
Cbc0038I Pass 101: suminf.    0.58044 (4) obj. 35019.9 iterations 33
Cbc0038I Pass 102: suminf.   45.33305 (257) obj. 35019.9 iterations 669
Cbc0038I Pass 103: suminf.   20.52228 (104) obj. 35019.9 iterations 550
Cbc0038I Pass 104: suminf.   19.12527 (102) obj. 35019.9 iterations 166
Cbc0038I Pass 105: suminf.   65.25271 (294) obj. 35019.9 iterations 639
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.80 seconds)
Cbc0038I After 1.80 seconds - Feasibility pump exiting with objective of 35840 - took 1.55 seconds
Cbc0012I Integer solution of 35840 found by feasibility pump after 0 iterations and 0 nodes (1.80 seconds)
Cbc0031I 47 added rows had average density of 11.085106
Cbc0013I At root node, 47 cuts changed objective from 27648 to 27648 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 2.6 elements, 2 column cuts (2 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 190 row cuts average 505.8 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 75 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 35840 best solution, best possible 27648 (4.61 seconds)
Cbc0010I After 100 nodes, 13 on tree, 35840 best solution, best possible 27654 (23.92 seconds)
Cbc0010I After 200 nodes, 18 on tree, 35840 best solution, best possible 27654 (34.12 seconds)
Cbc0010I After 300 nodes, 15 on tree, 35840 best solution, best possible 27656 (44.13 seconds)
Cbc0010I After 400 nodes, 19 on tree, 35840 best solution, best possible 27656 (54.84 seconds)
Cbc0010I After 500 nodes, 31 on tree, 35840 best solution, best possible 27656 (70.16 seconds)
Cbc0010I After 600 nodes, 37 on tree, 35840 best solution, best possible 27656 (84.60 seconds)
Cbc0010I After 700 nodes, 49 on tree, 35840 best solution, best possible 27656 (100.67 seconds)
Cbc0010I After 800 nodes, 58 on tree, 35840 best solution, best possible 27656 (113.55 seconds)
Cbc0010I After 900 nodes, 66 on tree, 35840 best solution, best possible 27656 (125.74 seconds)
Cbc0010I After 1000 nodes, 79 on tree, 35840 best solution, best possible 27656 (136.92 seconds)
Cbc0010I After 1100 nodes, 78 on tree, 35840 best solution, best possible 27656 (146.08 seconds)
Cbc0010I After 1200 nodes, 78 on tree, 35840 best solution, best possible 27656 (155.03 seconds)
Cbc0010I After 1300 nodes, 78 on tree, 35840 best solution, best possible 27656 (164.33 seconds)
Cbc0010I After 1400 nodes, 78 on tree, 35840 best solution, best possible 27656 (173.17 seconds)
Cbc0010I After 1500 nodes, 78 on tree, 35840 best solution, best possible 27656 (182.22 seconds)
Cbc0010I After 1600 nodes, 78 on tree, 35840 best solution, best possible 27656 (192.24 seconds)
Cbc0010I After 1700 nodes, 78 on tree, 35840 best solution, best possible 27656 (201.02 seconds)
Cbc0010I After 1800 nodes, 78 on tree, 35840 best solution, best possible 27656 (209.60 seconds)
Cbc0010I After 1900 nodes, 78 on tree, 35840 best solution, best possible 27656 (218.15 seconds)
Cbc0010I After 2000 nodes, 78 on tree, 35840 best solution, best possible 27656 (228.01 seconds)
Cbc0010I After 2100 nodes, 80 on tree, 35840 best solution, best possible 27656 (236.99 seconds)
Cbc0010I After 2200 nodes, 78 on tree, 35840 best solution, best possible 27656 (246.12 seconds)
Cbc0010I After 2300 nodes, 78 on tree, 35840 best solution, best possible 27656 (255.41 seconds)
Cbc0010I After 2400 nodes, 78 on tree, 35840 best solution, best possible 27656 (264.29 seconds)
Cbc0010I After 2500 nodes, 79 on tree, 35840 best solution, best possible 27656 (272.05 seconds)
Cbc0010I After 2600 nodes, 79 on tree, 35840 best solution, best possible 27656 (283.48 seconds)
Cbc0010I After 2700 nodes, 79 on tree, 35840 best solution, best possible 27656 (293.77 seconds)
Cbc0010I After 2800 nodes, 78 on tree, 35840 best solution, best possible 27656 (308.33 seconds)
Cbc0010I After 2900 nodes, 78 on tree, 35840 best solution, best possible 27656 (321.39 seconds)
Cbc0010I After 3000 nodes, 78 on tree, 35840 best solution, best possible 27656 (335.09 seconds)
Cbc0010I After 3100 nodes, 78 on tree, 35840 best solution, best possible 27656 (351.02 seconds)
Cbc0010I After 3200 nodes, 79 on tree, 35840 best solution, best possible 27656 (367.11 seconds)
Cbc0010I After 3300 nodes, 78 on tree, 35840 best solution, best possible 27656 (383.18 seconds)
Cbc0010I After 3400 nodes, 79 on tree, 35840 best solution, best possible 27656 (398.89 seconds)
Cbc0010I After 3500 nodes, 78 on tree, 35840 best solution, best possible 27656 (416.14 seconds)
Cbc0010I After 3600 nodes, 79 on tree, 35840 best solution, best possible 27656 (434.31 seconds)
Cbc0010I After 3700 nodes, 78 on tree, 35840 best solution, best possible 27656 (450.29 seconds)
Cbc0010I After 3800 nodes, 78 on tree, 35840 best solution, best possible 27656 (467.33 seconds)
Cbc0010I After 3900 nodes, 78 on tree, 35840 best solution, best possible 27656 (484.23 seconds)
Cbc0010I After 4000 nodes, 78 on tree, 35840 best solution, best possible 27656 (501.56 seconds)
Cbc0010I After 4100 nodes, 79 on tree, 35840 best solution, best possible 27656 (517.05 seconds)
Cbc0010I After 4200 nodes, 79 on tree, 35840 best solution, best possible 27656 (532.51 seconds)
Cbc0010I After 4300 nodes, 79 on tree, 35840 best solution, best possible 27656 (548.50 seconds)
Cbc0010I After 4400 nodes, 78 on tree, 35840 best solution, best possible 27656 (563.68 seconds)
Cbc0010I After 4500 nodes, 78 on tree, 35840 best solution, best possible 27656 (579.54 seconds)
Cbc0010I After 4600 nodes, 78 on tree, 35840 best solution, best possible 27656 (595.05 seconds)
Cbc0010I After 4700 nodes, 78 on tree, 35840 best solution, best possible 27656 (612.46 seconds)
Cbc0010I After 4800 nodes, 78 on tree, 35840 best solution, best possible 27656 (630.18 seconds)
Cbc0010I After 4900 nodes, 79 on tree, 35840 best solution, best possible 27656 (647.17 seconds)
Cbc0010I After 5000 nodes, 78 on tree, 35840 best solution, best possible 27656 (662.84 seconds)
Cbc0010I After 5100 nodes, 77 on tree, 35840 best solution, best possible 27657 (679.27 seconds)
Cbc0010I After 5200 nodes, 77 on tree, 35840 best solution, best possible 27657 (695.49 seconds)
Cbc0010I After 5300 nodes, 78 on tree, 35840 best solution, best possible 27657 (721.34 seconds)
Cbc0010I After 5400 nodes, 77 on tree, 35840 best solution, best possible 27657 (745.62 seconds)
Cbc0010I After 5500 nodes, 77 on tree, 35840 best solution, best possible 27657 (768.95 seconds)
Cbc0010I After 5600 nodes, 77 on tree, 35840 best solution, best possible 27657 (789.36 seconds)
Cbc0010I After 5700 nodes, 78 on tree, 35840 best solution, best possible 27657 (809.88 seconds)
Cbc0010I After 5800 nodes, 77 on tree, 35840 best solution, best possible 27657 (829.42 seconds)
Cbc0010I After 5900 nodes, 78 on tree, 35840 best solution, best possible 27657 (849.83 seconds)
Cbc0010I After 6000 nodes, 77 on tree, 35840 best solution, best possible 27657 (870.58 seconds)
Cbc0010I After 6100 nodes, 77 on tree, 35840 best solution, best possible 27657 (891.93 seconds)
Cbc0010I After 6200 nodes, 78 on tree, 35840 best solution, best possible 27657 (915.34 seconds)
Cbc0010I After 6300 nodes, 77 on tree, 35840 best solution, best possible 27657 (934.94 seconds)
Cbc0010I After 6400 nodes, 77 on tree, 35840 best solution, best possible 27657 (955.58 seconds)
Cbc0010I After 6500 nodes, 77 on tree, 35840 best solution, best possible 27657 (976.83 seconds)
Cbc0010I After 6600 nodes, 78 on tree, 35840 best solution, best possible 27657 (998.05 seconds)
Cbc0010I After 6700 nodes, 77 on tree, 35840 best solution, best possible 27657 (1018.98 seconds)
Cbc0010I After 6800 nodes, 77 on tree, 35840 best solution, best possible 27657 (1041.40 seconds)
Cbc0010I After 6900 nodes, 77 on tree, 35840 best solution, best possible 27657 (1063.20 seconds)
Cbc0010I After 7000 nodes, 77 on tree, 35840 best solution, best possible 27657 (1085.66 seconds)
Cbc0010I After 7100 nodes, 78 on tree, 35840 best solution, best possible 27657 (1109.73 seconds)
Cbc0010I After 7200 nodes, 77 on tree, 35840 best solution, best possible 27657 (1131.30 seconds)
Cbc0010I After 7300 nodes, 77 on tree, 35840 best solution, best possible 27657 (1152.16 seconds)
Cbc0010I After 7400 nodes, 77 on tree, 35840 best solution, best possible 27657 (1173.13 seconds)
Cbc0010I After 7500 nodes, 77 on tree, 35840 best solution, best possible 27657 (1192.60 seconds)
Cbc0010I After 7600 nodes, 78 on tree, 35840 best solution, best possible 27657 (1213.59 seconds)
Cbc0010I After 7700 nodes, 77 on tree, 35840 best solution, best possible 27657 (1233.62 seconds)
Cbc0010I After 7800 nodes, 77 on tree, 35840 best solution, best possible 27657 (1254.34 seconds)
Cbc0010I After 7900 nodes, 77 on tree, 35840 best solution, best possible 27657 (1275.25 seconds)
Cbc0010I After 8000 nodes, 77 on tree, 35840 best solution, best possible 27657 (1296.50 seconds)
Cbc0010I After 8100 nodes, 77 on tree, 35840 best solution, best possible 27657 (1318.85 seconds)
Cbc0010I After 8200 nodes, 77 on tree, 35840 best solution, best possible 27657 (1340.87 seconds)
Cbc0010I After 8300 nodes, 77 on tree, 35840 best solution, best possible 27657 (1360.91 seconds)
Cbc0010I After 8400 nodes, 77 on tree, 35840 best solution, best possible 27657 (1382.11 seconds)
Cbc0010I After 8500 nodes, 77 on tree, 35840 best solution, best possible 27657 (1405.04 seconds)
Cbc0010I After 8600 nodes, 77 on tree, 35840 best solution, best possible 27657 (1426.28 seconds)
Cbc0010I After 8700 nodes, 77 on tree, 35840 best solution, best possible 27657 (1445.21 seconds)
Cbc0010I After 8800 nodes, 77 on tree, 35840 best solution, best possible 27657 (1465.24 seconds)
Cbc0010I After 8900 nodes, 77 on tree, 35840 best solution, best possible 27657 (1484.83 seconds)
Cbc0010I After 9000 nodes, 77 on tree, 35840 best solution, best possible 27657 (1503.97 seconds)
Cbc0010I After 9100 nodes, 76 on tree, 35840 best solution, best possible 27657 (1523.13 seconds)
Cbc0010I After 9200 nodes, 76 on tree, 35840 best solution, best possible 27657 (1543.42 seconds)
Cbc0010I After 9300 nodes, 76 on tree, 35840 best solution, best possible 27657 (1564.13 seconds)
Cbc0010I After 9400 nodes, 76 on tree, 35840 best solution, best possible 27657 (1584.69 seconds)
Cbc0010I After 9500 nodes, 76 on tree, 35840 best solution, best possible 27657 (1605.26 seconds)
Cbc0010I After 9600 nodes, 76 on tree, 35840 best solution, best possible 27657 (1625.41 seconds)
Cbc0010I After 9700 nodes, 76 on tree, 35840 best solution, best possible 27657 (1646.15 seconds)
Cbc0010I After 9800 nodes, 76 on tree, 35840 best solution, best possible 27657 (1668.92 seconds)
Cbc0010I After 9900 nodes, 76 on tree, 35840 best solution, best possible 27657 (1689.37 seconds)
Cbc0010I After 10000 nodes, 77 on tree, 35840 best solution, best possible 27657 (1710.44 seconds)
Cbc0010I After 10100 nodes, 77 on tree, 35840 best solution, best possible 27657 (1731.45 seconds)
Cbc0010I After 10200 nodes, 76 on tree, 35840 best solution, best possible 27657 (1752.24 seconds)
Cbc0010I After 10300 nodes, 76 on tree, 35840 best solution, best possible 27657 (1772.63 seconds)
Cbc0010I After 10400 nodes, 76 on tree, 35840 best solution, best possible 27657 (1793.00 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 35840 (best possible 27657), took 10755538 iterations and 10433 nodes (1799.90 seconds)
Cbc0032I Strong branching done 52036 times (3541509 iterations), fathomed 3818 nodes and fixed 4759 variables
Cbc0035I Maximum depth 4231, 7 variables fixed on reduced cost
Cuts at root node changed objective from 27648 to 27648
Probing was tried 1925 times and created 81359 cuts of which 0 were active after adding rounds of cuts (5.395 seconds)
Gomory was tried 1776 times and created 3682 cuts of which 0 were active after adding rounds of cuts (4.287 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 10 times and created 75 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ImplicationCuts was tried 44 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

Objective value:                35840.00000000
Lower bound:                    27657.000
Gap:                            0.30
Enumerated nodes:               10433
Total iterations:               10755538
Time (CPU seconds):             1799.95
Time (Wallclock seconds):       1820.97

Total time (CPU seconds):       1799.95   (Wallclock seconds):       1820.98

