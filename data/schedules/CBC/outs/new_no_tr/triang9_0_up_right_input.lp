Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_0_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_0_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 244.261 - 2.78 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 28 tightened bounds, 1602 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 24 tightened bounds, 1071 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 23 tightened bounds, 742 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 458 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 380 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 261 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 154 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 189 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 115 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26224 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1255 integers unsatisfied sum - 372.401
Cbc0038I Pass   1: (11.47 seconds) suminf.  103.29646 (692) obj. 444.418 iterations 4919
Cbc0038I Pass   2: (12.00 seconds) suminf.   71.52533 (683) obj. 452.249 iterations 1417
Cbc0038I Pass   3: (12.31 seconds) suminf.   63.59010 (658) obj. 451.783 iterations 801
Cbc0038I Pass   4: (12.33 seconds) suminf.   63.54384 (666) obj. 451.809 iterations 18
Cbc0038I Pass   5: (12.49 seconds) suminf.   68.01678 (651) obj. 461.244 iterations 318
Cbc0038I Pass   6: (12.55 seconds) suminf.   64.57777 (645) obj. 460.064 iterations 114
Cbc0038I Pass   7: (12.62 seconds) suminf.   64.39246 (658) obj. 459.763 iterations 124
Cbc0038I Pass   8: (12.74 seconds) suminf.   64.91507 (681) obj. 455.417 iterations 231
Cbc0038I Pass   9: (12.78 seconds) suminf.   64.41708 (686) obj. 456.273 iterations 59
Cbc0038I Pass  10: (13.05 seconds) suminf.   63.17653 (634) obj. 468.69 iterations 705
Cbc0038I Pass  11: (13.21 seconds) suminf.   61.53476 (640) obj. 472.418 iterations 401
Cbc0038I Pass  12: (13.45 seconds) suminf.   61.28260 (636) obj. 473.086 iterations 634
Cbc0038I Pass  13: (13.53 seconds) suminf.   61.17899 (639) obj. 473.097 iterations 164
Cbc0038I Pass  14: (13.72 seconds) suminf.   61.43420 (644) obj. 472.063 iterations 430
Cbc0038I Pass  15: (13.77 seconds) suminf.   60.96740 (661) obj. 472.99 iterations 92
Cbc0038I Pass  16: (13.87 seconds) suminf.   60.52524 (661) obj. 476.012 iterations 218
Cbc0038I Pass  17: (14.03 seconds) suminf.   60.46527 (638) obj. 473.14 iterations 354
Cbc0038I Pass  18: (14.14 seconds) suminf.   59.41708 (662) obj. 472.7 iterations 217
Cbc0038I Pass  19: (14.26 seconds) suminf.   61.19873 (640) obj. 474.075 iterations 229
Cbc0038I Pass  20: (14.39 seconds) suminf.   59.86624 (664) obj. 471.324 iterations 278
Cbc0038I Pass  21: (14.42 seconds) suminf.   59.43379 (672) obj. 471.354 iterations 50
Cbc0038I Pass  22: (14.55 seconds) suminf.   62.73582 (642) obj. 473.686 iterations 379
Cbc0038I Pass  23: (14.67 seconds) suminf.   60.24435 (668) obj. 474.429 iterations 340
Cbc0038I Pass  24: (14.83 seconds) suminf.   61.32470 (635) obj. 471.16 iterations 456
Cbc0038I Pass  25: (14.92 seconds) suminf.   59.17396 (661) obj. 474.473 iterations 231
Cbc0038I Pass  26: (15.12 seconds) suminf.   60.15390 (638) obj. 468.905 iterations 656
Cbc0038I Pass  27: (15.21 seconds) suminf.   58.35761 (617) obj. 469.829 iterations 217
Cbc0038I Pass  28: (15.33 seconds) suminf.   56.96502 (621) obj. 476.381 iterations 396
Cbc0038I Pass  29: (15.38 seconds) suminf.   56.58969 (615) obj. 476.609 iterations 135
Cbc0038I Pass  30: (15.49 seconds) suminf.   57.13473 (618) obj. 469.881 iterations 333
Cbc0038I Pass  31: (15.59 seconds) suminf.   56.29876 (616) obj. 470.02 iterations 294
Cbc0038I Pass  32: (15.65 seconds) suminf.   56.63709 (620) obj. 472.394 iterations 167
Cbc0038I Pass  33: (15.78 seconds) suminf.   57.87835 (622) obj. 469.168 iterations 400
Cbc0038I Pass  34: (15.89 seconds) suminf.   56.88972 (628) obj. 469.833 iterations 341
Cbc0038I Pass  35: (16.01 seconds) suminf.   57.29045 (628) obj. 469.819 iterations 315
Cbc0038I Pass  36: (16.11 seconds) suminf.   56.91066 (628) obj. 469.833 iterations 284
Cbc0038I Pass  37: (16.24 seconds) suminf.   57.50636 (623) obj. 469.917 iterations 353
Cbc0038I Pass  38: (16.31 seconds) suminf.   56.81412 (627) obj. 469.563 iterations 177
Cbc0038I Pass  39: (16.45 seconds) suminf.   58.47035 (617) obj. 469.962 iterations 435
Cbc0038I Pass  40: (16.51 seconds) suminf.   56.74120 (647) obj. 468.541 iterations 155
Cbc0038I Pass  41: (16.56 seconds) suminf.   55.69258 (645) obj. 466.131 iterations 142
Cbc0038I Pass  42: (16.67 seconds) suminf.   55.72119 (637) obj. 470.724 iterations 321
Cbc0038I Pass  43: (16.77 seconds) suminf.   53.29673 (653) obj. 469.963 iterations 270
Cbc0038I Pass  44: (16.82 seconds) suminf.   53.36984 (655) obj. 470.74 iterations 176
Cbc0038I Pass  45: (16.96 seconds) suminf.   59.31126 (613) obj. 471.274 iterations 426
Cbc0038I Pass  46: (17.04 seconds) suminf.   56.19384 (622) obj. 468.382 iterations 218
Cbc0038I Pass  47: (17.09 seconds) suminf.   54.86334 (625) obj. 469.617 iterations 137
Cbc0038I Pass  48: (17.16 seconds) suminf.   54.74645 (633) obj. 469.962 iterations 195
Cbc0038I Pass  49: (17.21 seconds) suminf.   53.57340 (643) obj. 468.684 iterations 134
Cbc0038I Pass  50: (17.33 seconds) suminf.   57.08855 (611) obj. 470.728 iterations 348
Cbc0038I Pass  51: (17.37 seconds) suminf.   54.53820 (617) obj. 467.747 iterations 144
Cbc0038I Pass  52: (17.40 seconds) suminf.   53.08899 (616) obj. 471.099 iterations 66
Cbc0038I Pass  53: (17.51 seconds) suminf.   55.42046 (617) obj. 471.099 iterations 369
Cbc0038I Pass  54: (17.55 seconds) suminf.   54.41400 (622) obj. 470.92 iterations 82
Cbc0038I Pass  55: (17.66 seconds) suminf.   55.65234 (627) obj. 470.718 iterations 295
Cbc0038I Pass  56: (17.69 seconds) suminf.   53.59433 (637) obj. 471.09 iterations 73
Cbc0038I Pass  57: (17.79 seconds) suminf.   54.08882 (603) obj. 471.1 iterations 272
Cbc0038I Pass  58: (17.82 seconds) suminf.   53.85001 (608) obj. 471.1 iterations 83
Cbc0038I Pass  59: (17.97 seconds) suminf.   53.51596 (592) obj. 468.49 iterations 527
Cbc0038I Pass  60: (18.02 seconds) suminf.   51.39812 (605) obj. 471.115 iterations 143
Cbc0038I Pass  61: (18.15 seconds) suminf.   51.84946 (608) obj. 471.102 iterations 445
Cbc0038I Pass  62: (18.20 seconds) suminf.   50.22307 (601) obj. 471.103 iterations 154
Cbc0038I Pass  63: (18.25 seconds) suminf.   49.25382 (623) obj. 471.112 iterations 119
Cbc0038I Pass  64: (18.40 seconds) suminf.   51.72692 (616) obj. 470.414 iterations 449
Cbc0038I Pass  65: (18.52 seconds) suminf.   49.36280 (623) obj. 470.929 iterations 404
Cbc0038I Pass  66: (18.73 seconds) suminf.   51.00426 (608) obj. 471.368 iterations 717
Cbc0038I Pass  67: (18.76 seconds) suminf.   50.70807 (604) obj. 471.189 iterations 55
Cbc0038I Pass  68: (18.78 seconds) suminf.   50.05193 (606) obj. 473.837 iterations 68
Cbc0038I Pass  69: (18.82 seconds) suminf.   49.35827 (608) obj. 473.993 iterations 120
Cbc0038I Pass  70: (18.87 seconds) suminf.   49.04479 (623) obj. 473.077 iterations 107
Cbc0038I Pass  71: (19.01 seconds) suminf.   51.91260 (604) obj. 471.327 iterations 512
Cbc0038I Pass  72: (19.08 seconds) suminf.   51.14021 (591) obj. 471.403 iterations 188
Cbc0038I Pass  73: (19.12 seconds) suminf.   50.52491 (597) obj. 472.033 iterations 104
Cbc0038I Pass  74: (19.33 seconds) suminf.   54.56440 (567) obj. 468.726 iterations 804
Cbc0038I Pass  75: (19.50 seconds) suminf.   51.46688 (628) obj. 468.53 iterations 598
Cbc0038I Pass  76: (19.76 seconds) suminf.   49.36364 (563) obj. 471.819 iterations 928
Cbc0038I Pass  77: (19.94 seconds) suminf.   47.81664 (569) obj. 470.424 iterations 637
Cbc0038I Pass  78: (20.28 seconds) suminf.   49.34185 (540) obj. 469.893 iterations 1107
Cbc0038I Pass  79: (20.40 seconds) suminf.   46.96238 (554) obj. 470.006 iterations 360
Cbc0038I Pass  80: (20.53 seconds) suminf.   48.74685 (557) obj. 470.579 iterations 369
Cbc0038I Pass  81: (20.59 seconds) suminf.   47.41474 (538) obj. 470.183 iterations 172
Cbc0038I Pass  82: (20.69 seconds) suminf.   46.93057 (566) obj. 470.139 iterations 301
Cbc0038I Pass  83: (21.19 seconds) suminf.   74.11078 (585) obj. 516.863 iterations 1845
Cbc0038I Pass  84: (21.58 seconds) suminf.   55.02251 (561) obj. 512.849 iterations 1387
Cbc0038I Pass  85: (21.64 seconds) suminf.   54.63141 (576) obj. 513.264 iterations 182
Cbc0038I Pass  86: (21.88 seconds) suminf.   52.18722 (524) obj. 514.485 iterations 773
Cbc0038I Pass  87: (21.93 seconds) suminf.   52.14044 (516) obj. 514.476 iterations 148
Cbc0038I Pass  88: (22.06 seconds) suminf.   52.31461 (518) obj. 515.368 iterations 321
Cbc0038I Pass  89: (22.17 seconds) suminf.   50.18201 (519) obj. 516.445 iterations 364
Cbc0038I Pass  90: (22.28 seconds) suminf.   53.33316 (515) obj. 523.353 iterations 312
Cbc0038I Pass  91: (22.37 seconds) suminf.   51.59859 (515) obj. 523.924 iterations 232
Cbc0038I Pass  92: (22.54 seconds) suminf.   52.53246 (521) obj. 534.556 iterations 561
Cbc0038I Pass  93: (22.60 seconds) suminf.   50.98832 (518) obj. 533.672 iterations 149
Cbc0038I Pass  94: (22.79 seconds) suminf.   51.30111 (510) obj. 533.011 iterations 582
Cbc0038I Pass  95: (22.90 seconds) suminf.   49.31791 (509) obj. 532.863 iterations 287
Cbc0038I Pass  96: (23.09 seconds) suminf.   51.86932 (513) obj. 533.405 iterations 594
Cbc0038I Pass  97: (23.21 seconds) suminf.   51.00873 (520) obj. 533.431 iterations 373
Cbc0038I Pass  98: (23.25 seconds) suminf.   50.65953 (515) obj. 533.429 iterations 103
Cbc0038I Pass  99: (23.47 seconds) suminf.   51.74379 (526) obj. 534.763 iterations 714
Cbc0038I Pass 100: (24.00 seconds) suminf.   85.21575 (576) obj. 547.048 iterations 1814
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 768 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5927 rows 1806 columns - too large
Cbc0038I Mini branch and bound did not improve solution (24.43 seconds)
Cbc0038I After 24.43 seconds - Feasibility pump exiting - took 15.15 seconds
Cbc0031I 42 added rows had average density of 5.1428571
Cbc0013I At root node, 42 cuts changed objective from 244.74309 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 4.2 elements, 2 column cuts (2 active)  in 0.250 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 71 row cuts average 10.9 elements, 0 column cuts (0 active)  in 1.143 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 211 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.662 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (64.95 seconds)
Cbc0010I After 100 nodes, 1 on tree, 1e+50 best solution, best possible 302 (442.73 seconds)
Cbc0010I After 200 nodes, 17 on tree, 1e+50 best solution, best possible 303 (689.18 seconds)
Cbc0010I After 300 nodes, 1 on tree, 1e+50 best solution, best possible 307 (983.30 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 315 (1223.22 seconds)
Cbc0010I After 500 nodes, 40 on tree, 1e+50 best solution, best possible 315 (1406.66 seconds)
Cbc0010I After 600 nodes, 53 on tree, 1e+50 best solution, best possible 315 (1604.06 seconds)
Cbc0010I After 700 nodes, 70 on tree, 1e+50 best solution, best possible 315 (1790.95 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 315), took 1824323 iterations and 702 nodes (1799.16 seconds)
Cbc0032I Strong branching done 8400 times (760068 iterations), fathomed 35 nodes and fixed 365 variables
Cbc0035I Maximum depth 58, 0 variables fixed on reduced cost
Cuts at root node changed objective from 244.743 to 300
Probing was tried 539 times and created 11245 cuts of which 0 were active after adding rounds of cuts (7.973 seconds)
Gomory was tried 522 times and created 301 cuts of which 0 were active after adding rounds of cuts (10.464 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 522 times and created 7318 cuts of which 0 were active after adding rounds of cuts (3.186 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.142 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    315.000
Enumerated nodes:               702
Total iterations:               1824323
Time (CPU seconds):             1799.17
Time (Wallclock seconds):       1800.47

Total time (CPU seconds):       1799.19   (Wallclock seconds):       1800.50

