Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_25_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_25_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 21504 - 0.06 seconds
Cgl0002I 67 variables fixed
Cgl0003I 0 fixed, 14 tightened bounds, 434 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 206 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 175 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 1 tightened bounds, 97 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1851 rows, 631 columns (631 integer (605 of which binary)) and 6227 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 631 objects (631 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 319 integers unsatisfied sum - 88.1206
Cbc0038I Pass   1: suminf.   21.24046 (128) obj. 28767.5 iterations 763
Cbc0038I Pass   2: suminf.   18.06245 (136) obj. 29095.4 iterations 94
Cbc0038I Pass   3: suminf.   17.74326 (135) obj. 29087 iterations 6
Cbc0038I Pass   4: suminf.   10.53725 (87) obj. 29947.8 iterations 282
Cbc0038I Pass   5: suminf.   10.34334 (81) obj. 29895.2 iterations 18
Cbc0038I Pass   6: suminf.    1.42414 (18) obj. 28858.1 iterations 219
Cbc0038I Pass   7: suminf.    1.42414 (18) obj. 28858.1 iterations 32
Cbc0038I Pass   8: suminf.    0.00000 (0) obj. 35840 iterations 69
Cbc0038I Solution found of 35840
Cbc0038I Cleaned solution of 35840
Cbc0038I Before mini branch and bound, 261 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1317 rows 370 columns - 22 fixed gives 1097, 302 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.55 seconds)
Cbc0038I Round again with cutoff of 34405.5
Cbc0038I Pass   9: suminf.   21.24046 (128) obj. 28767.5 iterations 0
Cbc0038I Pass  10: suminf.   18.06245 (136) obj. 29095.4 iterations 109
Cbc0038I Pass  11: suminf.   17.74326 (135) obj. 29087 iterations 9
Cbc0038I Pass  12: suminf.    6.92899 (51) obj. 28858.1 iterations 213
Cbc0038I Pass  13: suminf.    5.89743 (42) obj. 30901.1 iterations 141
Cbc0038I Pass  14: suminf.    4.57197 (40) obj. 34405.5 iterations 238
Cbc0038I Pass  15: suminf.    1.48825 (14) obj. 34405.5 iterations 227
Cbc0038I Pass  16: suminf.    3.05495 (29) obj. 34405.5 iterations 951
Cbc0038I Pass  17: suminf.    2.98952 (17) obj. 34405.5 iterations 18
Cbc0038I Pass  18: suminf.    2.60776 (17) obj. 34405.5 iterations 62
Cbc0038I Pass  19: suminf.    1.48825 (14) obj. 34405.5 iterations 26
Cbc0038I Pass  20: suminf.    2.61227 (26) obj. 34405.5 iterations 302
Cbc0038I Pass  21: suminf.    2.52513 (14) obj. 34405.5 iterations 16
Cbc0038I Pass  22: suminf.    1.55827 (27) obj. 34405.5 iterations 58
Cbc0038I Pass  23: suminf.   39.54069 (189) obj. 34405.5 iterations 523
Cbc0038I Pass  24: suminf.   20.81474 (117) obj. 34405.5 iterations 403
Cbc0038I Pass  25: suminf.   20.77090 (118) obj. 34405.5 iterations 9
Cbc0038I Pass  26: suminf.   13.42680 (97) obj. 34405.5 iterations 202
Cbc0038I Pass  27: suminf.   12.71510 (94) obj. 34405.5 iterations 9
Cbc0038I Pass  28: suminf.    9.21688 (40) obj. 34405.5 iterations 189
Cbc0038I Pass  29: suminf.    6.91741 (36) obj. 34405.5 iterations 76
Cbc0038I Pass  30: suminf.    6.42218 (44) obj. 34405.5 iterations 135
Cbc0038I Pass  31: suminf.    3.45822 (33) obj. 34405.5 iterations 13
Cbc0038I Pass  32: suminf.    5.42712 (40) obj. 34405.5 iterations 88
Cbc0038I Pass  33: suminf.    5.42864 (43) obj. 34405.5 iterations 23
Cbc0038I Pass  34: suminf.    4.11802 (43) obj. 34405.5 iterations 130
Cbc0038I Pass  35: suminf.    3.06069 (38) obj. 34405.5 iterations 53
Cbc0038I Pass  36: suminf.    3.05744 (30) obj. 34405.5 iterations 116
Cbc0038I Pass  37: suminf.    3.07719 (26) obj. 34405.5 iterations 40
Cbc0038I Pass  38: suminf.    3.28956 (27) obj. 34405.5 iterations 92
Cbc0038I Pass  39: suminf.    2.87621 (32) obj. 34405.5 iterations 40
Cbc0038I Pass  40: suminf.    1.69935 (17) obj. 34405.5 iterations 150
Cbc0038I Pass  41: suminf.    1.20513 (11) obj. 34405.5 iterations 55
Cbc0038I Pass  42: suminf.    0.49991 (1) obj. 34405.5 iterations 22
Cbc0038I Solution found of 34405.5
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1852 rows 631 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 33792
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1430 rows 427 columns - 51 fixed gives 1131, 327 - still too large
Cbc0038I Full problem 1851 rows 631 columns, reduced to 303 rows 80 columns
Cbc0038I Mini branch and bound improved solution from 33792 to 28672 (1.10 seconds)
Cbc0038I Round again with cutoff of 27237.6
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 3
Cbc0038I Pass  43: suminf.   20.40183 (139) obj. 27237 iterations 85
Cbc0038I Pass  44: suminf.   17.72330 (134) obj. 27237.6 iterations 138
Cbc0038I Pass  45: suminf.   17.71596 (136) obj. 27237.6 iterations 11
Cbc0038I Pass  46: suminf.   14.04722 (78) obj. 27237.6 iterations 417
Cbc0038I Pass  47: suminf.   10.01505 (63) obj. 27237.6 iterations 265
Cbc0038I Pass  48: suminf.    9.08439 (63) obj. 27237.6 iterations 92
Cbc0038I Pass  49: suminf.    5.04197 (45) obj. 27237.6 iterations 268
Cbc0038I Pass  50: suminf.    3.62454 (47) obj. 27237.6 iterations 105
Cbc0038I Pass  51: suminf.   10.00275 (66) obj. 27237.6 iterations 457
Cbc0038I Pass  52: suminf.    9.81286 (56) obj. 27237.6 iterations 58
Cbc0038I Pass  53: suminf.    7.40569 (108) obj. 27237.6 iterations 331
Cbc0038I Pass  54: suminf.    5.30668 (53) obj. 27237.6 iterations 151
Cbc0038I Pass  55: suminf.    4.79232 (58) obj. 27237.6 iterations 152
Cbc0038I Pass  56: suminf.   11.46163 (50) obj. 27237.6 iterations 327
Cbc0038I Pass  57: suminf.   10.72817 (55) obj. 27237.6 iterations 83
Cbc0038I Pass  58: suminf.    7.63942 (46) obj. 27237.6 iterations 125
Cbc0038I Pass  59: suminf.    7.51136 (43) obj. 27237.6 iterations 49
Cbc0038I Pass  60: suminf.    8.14229 (102) obj. 27237.6 iterations 209
Cbc0038I Pass  61: suminf.    7.71153 (38) obj. 27237.6 iterations 327
Cbc0038I Pass  62: suminf.    7.63775 (41) obj. 27237.6 iterations 95
Cbc0038I Pass  63: suminf.    5.78314 (64) obj. 27237.6 iterations 666
Cbc0038I Pass  64: suminf.    5.82898 (38) obj. 27237.6 iterations 73
Cbc0038I Pass  65: suminf.   15.94337 (87) obj. 27237.6 iterations 413
Cbc0038I Pass  66: suminf.   15.51708 (87) obj. 27237.6 iterations 79
Cbc0038I Pass  67: suminf.    6.41773 (42) obj. 27237.6 iterations 210
Cbc0038I Pass  68: suminf.    6.48572 (46) obj. 27237.6 iterations 47
Cbc0038I Pass  69: suminf.    9.76250 (60) obj. 27237.6 iterations 677
Cbc0038I Pass  70: suminf.    9.72176 (61) obj. 27237.6 iterations 40
Cbc0038I Pass  71: suminf.    8.02106 (58) obj. 27237.6 iterations 407
Cbc0038I Pass  72: suminf.    6.46946 (68) obj. 27237.6 iterations 160
Cbc0038I Pass  73: suminf.    8.33053 (46) obj. 27237.6 iterations 535
Cbc0038I Pass  74: suminf.    6.85765 (38) obj. 27237.6 iterations 105
Cbc0038I Pass  75: suminf.    5.82898 (38) obj. 27237.6 iterations 228
Cbc0038I Pass  76: suminf.    4.32925 (43) obj. 27237.6 iterations 598
Cbc0038I Pass  77: suminf.    4.32925 (43) obj. 27237.6 iterations 13
Cbc0038I Pass  78: suminf.    7.80087 (50) obj. 27237.6 iterations 239
Cbc0038I Pass  79: suminf.    7.11731 (46) obj. 27237.6 iterations 84
Cbc0038I Pass  80: suminf.    5.20315 (52) obj. 27237.6 iterations 170
Cbc0038I Pass  81: suminf.    4.24750 (44) obj. 27237.6 iterations 24
Cbc0038I Pass  82: suminf.    5.76308 (37) obj. 27237.6 iterations 368
Cbc0038I Pass  83: suminf.    4.32925 (43) obj. 27237.6 iterations 217
Cbc0038I Pass  84: suminf.    8.23969 (49) obj. 27237.6 iterations 444
Cbc0038I Pass  85: suminf.    7.11731 (46) obj. 27237.6 iterations 143
Cbc0038I Pass  86: suminf.    8.20295 (60) obj. 27237.6 iterations 630
Cbc0038I Pass  87: suminf.    8.19847 (63) obj. 27237.6 iterations 26
Cbc0038I Pass  88: suminf.    9.58254 (58) obj. 27237.6 iterations 247
Cbc0038I Pass  89: suminf.    4.24750 (44) obj. 27237.6 iterations 250
Cbc0038I Pass  90: suminf.    5.40061 (35) obj. 27237.6 iterations 427
Cbc0038I Pass  91: suminf.    4.32925 (43) obj. 27237.6 iterations 176
Cbc0038I Pass  92: suminf.   10.91815 (46) obj. 27237.6 iterations 288
Cbc0038I Pass  93: suminf.    7.94058 (48) obj. 27237.6 iterations 151
Cbc0038I Pass  94: suminf.    6.80199 (71) obj. 27237.6 iterations 159
Cbc0038I Pass  95: suminf.    5.65099 (35) obj. 27237.6 iterations 212
Cbc0038I Pass  96: suminf.    4.09292 (38) obj. 27237.6 iterations 150
Cbc0038I Pass  97: suminf.    6.14896 (46) obj. 27237.6 iterations 454
Cbc0038I Pass  98: suminf.    3.83436 (41) obj. 27237.6 iterations 100
Cbc0038I Pass  99: suminf.    8.14233 (44) obj. 27237.6 iterations 114
Cbc0038I Pass 100: suminf.    5.19880 (39) obj. 27237.6 iterations 164
Cbc0038I Pass 101: suminf.    6.78935 (46) obj. 27237.6 iterations 305
Cbc0038I Pass 102: suminf.    6.13029 (49) obj. 27237.6 iterations 125
Cbc0038I Pass 103: suminf.    6.26973 (40) obj. 27237.6 iterations 208
Cbc0038I Pass 104: suminf.    6.00334 (43) obj. 27237.6 iterations 112
Cbc0038I Pass 105: suminf.    8.65444 (50) obj. 27237.6 iterations 326
Cbc0038I Pass 106: suminf.    6.98409 (76) obj. 27237.6 iterations 248
Cbc0038I Pass 107: suminf.    9.30020 (51) obj. 27237.6 iterations 173
Cbc0038I Pass 108: suminf.    6.92206 (46) obj. 27237.6 iterations 71
Cbc0038I Pass 109: suminf.    8.82591 (51) obj. 27237.6 iterations 344
Cbc0038I Pass 110: suminf.    8.22042 (66) obj. 27237.6 iterations 88
Cbc0038I Pass 111: suminf.    7.46432 (79) obj. 27237.6 iterations 222
Cbc0038I Pass 112: suminf.    7.12780 (78) obj. 27237.6 iterations 42
Cbc0038I Pass 113: suminf.   10.44309 (62) obj. 27237.6 iterations 388
Cbc0038I Pass 114: suminf.    8.05782 (61) obj. 27237.6 iterations 94
Cbc0038I Pass 115: suminf.    9.15834 (64) obj. 27237.6 iterations 282
Cbc0038I Pass 116: suminf.    5.26726 (52) obj. 27237.6 iterations 129
Cbc0038I Pass 117: suminf.    5.18858 (56) obj. 27237.6 iterations 74
Cbc0038I Pass 118: suminf.   10.99895 (51) obj. 27237.6 iterations 178
Cbc0038I Pass 119: suminf.   10.10138 (50) obj. 27237.6 iterations 83
Cbc0038I Pass 120: suminf.   10.08081 (51) obj. 27237.6 iterations 18
Cbc0038I Pass 121: suminf.    7.24117 (48) obj. 27237.6 iterations 148
Cbc0038I Pass 122: suminf.    3.83576 (78) obj. 27237.6 iterations 307
Cbc0038I Pass 123: suminf.    3.84280 (92) obj. 27237.6 iterations 50
Cbc0038I Pass 124: suminf.    9.88537 (43) obj. 27237.6 iterations 392
Cbc0038I Pass 125: suminf.    9.88537 (43) obj. 27237.6 iterations 28
Cbc0038I Pass 126: suminf.    4.29311 (60) obj. 27237.6 iterations 366
Cbc0038I Pass 127: suminf.    3.92965 (93) obj. 27237.6 iterations 113
Cbc0038I Pass 128: suminf.    6.87207 (43) obj. 27237.6 iterations 537
Cbc0038I Pass 129: suminf.    6.45169 (43) obj. 27237.6 iterations 99
Cbc0038I Pass 130: suminf.    5.88925 (37) obj. 27237.6 iterations 232
Cbc0038I Pass 131: suminf.    4.84437 (37) obj. 27237.6 iterations 162
Cbc0038I Pass 132: suminf.    5.41026 (42) obj. 27237.6 iterations 119
Cbc0038I Pass 133: suminf.    5.22601 (41) obj. 27237.6 iterations 84
Cbc0038I Pass 134: suminf.    8.23048 (50) obj. 27237.6 iterations 236
Cbc0038I Pass 135: suminf.    7.46682 (55) obj. 27237.6 iterations 116
Cbc0038I Pass 136: suminf.    9.04421 (46) obj. 27237.6 iterations 105
Cbc0038I Pass 137: suminf.    5.14144 (43) obj. 27237.6 iterations 187
Cbc0038I No solution found this major pass
Cbc0038I After 2.53 seconds - Feasibility pump exiting with objective of 28672 - took 2.25 seconds
Cbc0012I Integer solution of 28672 found by feasibility pump after 0 iterations and 0 nodes (2.53 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1237 rows 333 columns - 50 fixed gives 978, 254 - still too large
Cbc0031I 68 added rows had average density of 7.4411765
Cbc0013I At root node, 68 cuts changed objective from 21504 to 21985.733 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 381 row cuts average 3.7 elements, 11 column cuts (11 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 35 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.195 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 171 row cuts average 88.9 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 28672 best solution, best possible 21986 (4.14 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1358 rows 400 columns - 52 fixed gives 1088, 310 - still too large
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1354 rows 399 columns - 51 fixed gives 1090, 311 - still too large
Cbc0010I After 100 nodes, 5 on tree, 28672 best solution, best possible 22249.047 (14.35 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1318 rows 382 columns - 52 fixed gives 1063, 298 - still too large
Cbc0010I After 200 nodes, 5 on tree, 28672 best solution, best possible 22249.047 (21.38 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1374 rows 407 columns - 52 fixed gives 1108, 320 - still too large
Cbc0010I After 300 nodes, 5 on tree, 28672 best solution, best possible 22249.047 (29.47 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1246 rows 347 columns - 50 fixed gives 1001, 268 - still too large
Cbc0010I After 400 nodes, 5 on tree, 28672 best solution, best possible 22249.047 (38.15 seconds)
Cbc0010I After 500 nodes, 4 on tree, 28672 best solution, best possible 22249.047 (44.25 seconds)
Cbc0010I After 600 nodes, 9 on tree, 28672 best solution, best possible 22249.047 (53.19 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1155 rows 323 columns - 50 fixed gives 907, 237 - ok now
Cbc0010I After 700 nodes, 10 on tree, 28672 best solution, best possible 22249.047 (64.57 seconds)
Cbc0010I After 800 nodes, 6 on tree, 28672 best solution, best possible 22249.047 (77.10 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1347 rows 390 columns - 51 fixed gives 1090, 308 - still too large
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1177 rows 336 columns - 51 fixed gives 934, 255 - ok now
Cbc0010I After 900 nodes, 7 on tree, 28672 best solution, best possible 22249.047 (88.57 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1158 rows 332 columns - 48 fixed gives 928, 258 - ok now
Cbc0010I After 1000 nodes, 7 on tree, 28672 best solution, best possible 22249.047 (99.30 seconds)
Cbc0010I After 1100 nodes, 10 on tree, 28672 best solution, best possible 22249.047 (109.10 seconds)
Cbc0010I After 1200 nodes, 18 on tree, 28672 best solution, best possible 22249.047 (119.75 seconds)
Cbc0010I After 1300 nodes, 23 on tree, 28672 best solution, best possible 22249.047 (129.72 seconds)
Cbc0010I After 1400 nodes, 30 on tree, 28672 best solution, best possible 22249.047 (139.83 seconds)
Cbc0010I After 1500 nodes, 37 on tree, 28672 best solution, best possible 22249.047 (152.92 seconds)
Cbc0010I After 1600 nodes, 41 on tree, 28672 best solution, best possible 22249.047 (163.71 seconds)
Cbc0010I After 1700 nodes, 50 on tree, 28672 best solution, best possible 22249.047 (176.80 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1341 rows 387 columns - 52 fixed gives 1081, 304 - still too large
Cbc0010I After 1800 nodes, 59 on tree, 28672 best solution, best possible 22249.047 (188.39 seconds)
Cbc0010I After 1900 nodes, 64 on tree, 28672 best solution, best possible 22249.047 (199.55 seconds)
Cbc0010I After 2000 nodes, 66 on tree, 28672 best solution, best possible 22249.047 (209.45 seconds)
Cbc0010I After 2100 nodes, 71 on tree, 28672 best solution, best possible 22249.047 (218.92 seconds)
Cbc0010I After 2200 nodes, 77 on tree, 28672 best solution, best possible 22249.047 (228.99 seconds)
Cbc0010I After 2300 nodes, 82 on tree, 28672 best solution, best possible 22249.047 (239.31 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1029 rows 286 columns - 48 fixed gives 802, 209 - ok now
Cbc0010I After 2400 nodes, 83 on tree, 28672 best solution, best possible 22249.047 (250.27 seconds)
Cbc0010I After 2500 nodes, 87 on tree, 28672 best solution, best possible 22249.047 (259.73 seconds)
Cbc0010I After 2600 nodes, 87 on tree, 28672 best solution, best possible 22249.047 (270.88 seconds)
Cbc0010I After 2700 nodes, 93 on tree, 28672 best solution, best possible 22249.047 (282.42 seconds)
Cbc0010I After 2800 nodes, 98 on tree, 28672 best solution, best possible 22249.047 (294.13 seconds)
Cbc0010I After 2900 nodes, 103 on tree, 28672 best solution, best possible 22249.047 (304.92 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1241 rows 342 columns - 47 fixed gives 1011, 270 - still too large
Cbc0010I After 3000 nodes, 107 on tree, 28672 best solution, best possible 22249.047 (315.78 seconds)
Cbc0010I After 3100 nodes, 117 on tree, 28672 best solution, best possible 22249.047 (325.86 seconds)
Cbc0010I After 3200 nodes, 128 on tree, 28672 best solution, best possible 22249.047 (336.30 seconds)
Cbc0010I After 3300 nodes, 134 on tree, 28672 best solution, best possible 22249.047 (345.78 seconds)
Cbc0010I After 3400 nodes, 141 on tree, 28672 best solution, best possible 22249.047 (356.22 seconds)
Cbc0010I After 3500 nodes, 146 on tree, 28672 best solution, best possible 22249.047 (366.71 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1272 rows 360 columns - 49 fixed gives 1043, 288 - still too large
Cbc0010I After 3600 nodes, 149 on tree, 28672 best solution, best possible 22249.047 (377.65 seconds)
Cbc0010I After 3700 nodes, 155 on tree, 28672 best solution, best possible 22249.047 (387.93 seconds)
Cbc0010I After 3800 nodes, 162 on tree, 28672 best solution, best possible 22249.047 (398.68 seconds)
Cbc0010I After 3900 nodes, 169 on tree, 28672 best solution, best possible 22249.047 (409.36 seconds)
Cbc0010I After 4000 nodes, 178 on tree, 28672 best solution, best possible 22249.047 (419.85 seconds)
Cbc0010I After 4100 nodes, 187 on tree, 28672 best solution, best possible 22249.047 (430.08 seconds)
Cbc0010I After 4200 nodes, 192 on tree, 28672 best solution, best possible 22249.047 (441.04 seconds)
Cbc0010I After 4300 nodes, 207 on tree, 28672 best solution, best possible 22249.047 (450.14 seconds)
Cbc0010I After 4400 nodes, 220 on tree, 28672 best solution, best possible 22249.047 (459.37 seconds)
Cbc0010I After 4500 nodes, 225 on tree, 28672 best solution, best possible 22249.047 (469.09 seconds)
Cbc0010I After 4600 nodes, 231 on tree, 28672 best solution, best possible 22249.047 (479.51 seconds)
Cbc0010I After 4700 nodes, 237 on tree, 28672 best solution, best possible 22249.047 (488.29 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1275 rows 361 columns - 49 fixed gives 1046, 289 - still too large
Cbc0010I After 4800 nodes, 241 on tree, 28672 best solution, best possible 22249.047 (496.91 seconds)
Cbc0010I After 4900 nodes, 248 on tree, 28672 best solution, best possible 22249.047 (504.98 seconds)
Cbc0010I After 5000 nodes, 259 on tree, 28672 best solution, best possible 22249.047 (513.22 seconds)
Cbc0010I After 5100 nodes, 264 on tree, 28672 best solution, best possible 22249.047 (522.13 seconds)
Cbc0010I After 5200 nodes, 270 on tree, 28672 best solution, best possible 22249.047 (530.04 seconds)
Cbc0010I After 5300 nodes, 279 on tree, 28672 best solution, best possible 22249.047 (538.32 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1263 rows 355 columns - 48 fixed gives 1034, 284 - still too large
Cbc0010I After 5400 nodes, 287 on tree, 28672 best solution, best possible 22249.047 (547.29 seconds)
Cbc0010I After 5500 nodes, 292 on tree, 28672 best solution, best possible 22249.047 (555.89 seconds)
Cbc0010I After 5600 nodes, 302 on tree, 28672 best solution, best possible 22249.047 (564.61 seconds)
Cbc0010I After 5700 nodes, 311 on tree, 28672 best solution, best possible 22249.047 (572.70 seconds)
Cbc0010I After 5800 nodes, 316 on tree, 28672 best solution, best possible 22249.047 (582.01 seconds)
Cbc0010I After 5900 nodes, 331 on tree, 28672 best solution, best possible 22249.047 (589.92 seconds)
Cbc0010I After 6000 nodes, 342 on tree, 28672 best solution, best possible 22249.047 (598.55 seconds)
Cbc0010I After 6100 nodes, 348 on tree, 28672 best solution, best possible 22249.047 (607.36 seconds)
Cbc0010I After 6200 nodes, 356 on tree, 28672 best solution, best possible 22249.047 (615.87 seconds)
Cbc0010I After 6300 nodes, 361 on tree, 28672 best solution, best possible 22249.047 (624.26 seconds)
Cbc0010I After 6400 nodes, 366 on tree, 28672 best solution, best possible 22249.047 (632.82 seconds)
Cbc0010I After 6500 nodes, 378 on tree, 28672 best solution, best possible 22249.047 (641.52 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1243 rows 348 columns - 47 fixed gives 1020, 280 - still too large
Cbc0010I After 6600 nodes, 387 on tree, 28672 best solution, best possible 22249.047 (650.32 seconds)
Cbc0010I After 6700 nodes, 406 on tree, 28672 best solution, best possible 22249.047 (657.77 seconds)
Cbc0010I After 6800 nodes, 420 on tree, 28672 best solution, best possible 22249.047 (665.91 seconds)
Cbc0010I After 6900 nodes, 431 on tree, 28672 best solution, best possible 22249.047 (673.73 seconds)
Cbc0010I After 7000 nodes, 437 on tree, 28672 best solution, best possible 22249.047 (682.24 seconds)
Cbc0010I After 7100 nodes, 455 on tree, 28672 best solution, best possible 22249.047 (689.39 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1197 rows 330 columns - 47 fixed gives 973, 262 - still too large
Cbc0010I After 7200 nodes, 465 on tree, 28672 best solution, best possible 22249.047 (698.10 seconds)
Cbc0010I After 7300 nodes, 470 on tree, 28672 best solution, best possible 22249.047 (707.22 seconds)
Cbc0010I After 7400 nodes, 474 on tree, 28672 best solution, best possible 22249.047 (715.64 seconds)
Cbc0010I After 7500 nodes, 483 on tree, 28672 best solution, best possible 22249.047 (723.39 seconds)
Cbc0010I After 7600 nodes, 488 on tree, 28672 best solution, best possible 22249.047 (731.66 seconds)
Cbc0010I After 7700 nodes, 495 on tree, 28672 best solution, best possible 22249.047 (740.76 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1237 rows 345 columns - 47 fixed gives 1012, 276 - still too large
Cbc0010I After 7800 nodes, 499 on tree, 28672 best solution, best possible 22249.047 (749.95 seconds)
Cbc0010I After 7900 nodes, 504 on tree, 28672 best solution, best possible 22249.047 (759.84 seconds)
Cbc0010I After 8000 nodes, 510 on tree, 28672 best solution, best possible 22249.047 (769.63 seconds)
Cbc0010I After 8100 nodes, 520 on tree, 28672 best solution, best possible 22249.047 (779.88 seconds)
Cbc0010I After 8200 nodes, 527 on tree, 28672 best solution, best possible 22249.047 (790.49 seconds)
Cbc0010I After 8300 nodes, 530 on tree, 28672 best solution, best possible 22249.047 (800.46 seconds)
Cbc0038I Full problem 1851 rows 631 columns, reduced to 1220 rows 341 columns - 47 fixed gives 998, 272 - still too large
Cbc0010I After 8400 nodes, 543 on tree, 28672 best solution, best possible 22249.047 (808.14 seconds)
Cbc0010I After 8500 nodes, 547 on tree, 28672 best solution, best possible 22249.047 (819.06 seconds)
Cbc0010I After 8600 nodes, 552 on tree, 28672 best solution, best possible 22249.047 (829.25 seconds)
Cbc0010I After 8700 nodes, 560 on tree, 28672 best solution, best possible 22249.047 (838.28 seconds)
Cbc0010I After 8800 nodes, 574 on tree, 28672 best solution, best possible 22249.047 (847.73 seconds)
Cbc0010I After 8900 nodes, 581 on tree, 28672 best solution, best possible 22249.047 (856.81 seconds)
Cbc0010I After 9000 nodes, 588 on tree, 28672 best solution, best possible 22249.047 (865.51 seconds)
Cbc0010I After 9100 nodes, 591 on tree, 28672 best solution, best possible 22249.047 (873.92 seconds)
Cbc0010I After 9200 nodes, 602 on tree, 28672 best solution, best possible 22249.047 (882.06 seconds)
Cbc0010I After 9300 nodes, 607 on tree, 28672 best solution, best possible 22249.047 (890.49 seconds)
Cbc0010I After 9400 nodes, 614 on tree, 28672 best solution, best possible 22249.047 (898.08 seconds)
Cbc0010I After 9500 nodes, 627 on tree, 28672 best solution, best possible 22249.047 (905.67 seconds)
Cbc0010I After 9600 nodes, 641 on tree, 28672 best solution, best possible 22249.047 (913.85 seconds)
Cbc0010I After 9700 nodes, 652 on tree, 28672 best solution, best possible 22249.047 (922.44 seconds)
Cbc0010I After 9800 nodes, 657 on tree, 28672 best solution, best possible 22249.047 (931.19 seconds)
Cbc0010I After 9900 nodes, 666 on tree, 28672 best solution, best possible 22249.047 (939.04 seconds)
Cbc0010I After 10000 nodes, 678 on tree, 28672 best solution, best possible 22249.047 (946.09 seconds)
Cbc0010I After 10100 nodes, 685 on tree, 28672 best solution, best possible 22249.047 (954.46 seconds)
Cbc0004I Integer solution of 27648 found after 6080614 iterations and 10115 nodes (955.32 seconds)
Cbc0010I After 10200 nodes, 599 on tree, 27648 best solution, best possible 22249.047 (975.49 seconds)
Cbc0010I After 10300 nodes, 507 on tree, 27648 best solution, best possible 22249.047 (998.79 seconds)
Cbc0010I After 10400 nodes, 425 on tree, 27648 best solution, best possible 22249.047 (1018.53 seconds)
Cbc0010I After 10500 nodes, 337 on tree, 27648 best solution, best possible 22249.047 (1037.64 seconds)
Cbc0010I After 10600 nodes, 257 on tree, 27648 best solution, best possible 22249.047 (1055.64 seconds)
Cbc0010I After 10700 nodes, 175 on tree, 27648 best solution, best possible 22249.047 (1071.62 seconds)
Cbc0010I After 10800 nodes, 119 on tree, 27648 best solution, best possible 22249.047 (1085.62 seconds)
Cbc0010I After 10900 nodes, 52 on tree, 27648 best solution, best possible 22249.047 (1100.03 seconds)
Cbc0001I Search completed - best objective 27648, took 7201322 iterations and 10971 nodes (1109.20 seconds)
Cbc0032I Strong branching done 25992 times (1928707 iterations), fathomed 3605 nodes and fixed 1259 variables
Cbc0035I Maximum depth 4495, 7 variables fixed on reduced cost
Cuts at root node changed objective from 21504 to 21986
Probing was tried 1999 times and created 370944 cuts of which 0 were active after adding rounds of cuts (7.016 seconds)
Gomory was tried 1855 times and created 2358 cuts of which 0 were active after adding rounds of cuts (3.778 seconds)
Knapsack was tried 1855 times and created 5957 cuts of which 0 were active after adding rounds of cuts (1.291 seconds)
Clique was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
MixedIntegerRounding2 was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 1855 times and created 15520 cuts of which 0 were active after adding rounds of cuts (1.646 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ImplicationCuts was tried 59 times and created 125 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                27648.00000000
Enumerated nodes:               10971
Total iterations:               7201322
Time (CPU seconds):             1109.24
Time (Wallclock seconds):       1116.55

Total time (CPU seconds):       1109.25   (Wallclock seconds):       1116.56

