Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/dag2_default_input.lp sec 1800 solve solu no_transitive/dag2_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 787342 - 0.86 seconds
Cgl0002I 152 variables fixed
Cgl0003I 0 fixed, 22 tightened bounds, 1314 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 432 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 138 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0004I processed model has 6511 rows, 2202 columns (2202 integer (2160 of which binary)) and 21500 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2202 objects (2202 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1100 integers unsatisfied sum - 295.279
Cbc0038I Pass   1: (2.76 seconds) suminf.  136.64308 (992) obj. 1.00633e+06 iterations 2738
Cbc0038I Pass   2: (3.03 seconds) suminf.  121.64157 (1044) obj. 1.11194e+06 iterations 1346
Cbc0038I Pass   3: (3.19 seconds) suminf.  120.20865 (1058) obj. 1.07783e+06 iterations 712
Cbc0038I Pass   4: (3.24 seconds) suminf.  119.07777 (1070) obj. 1.07897e+06 iterations 190
Cbc0038I Pass   5: (3.34 seconds) suminf.  118.41769 (1088) obj. 1.07792e+06 iterations 421
Cbc0038I Pass   6: (3.46 seconds) suminf.  109.03748 (1112) obj. 1.07689e+06 iterations 522
Cbc0038I Pass   7: (3.50 seconds) suminf.  107.24991 (1146) obj. 1.08533e+06 iterations 195
Cbc0038I Pass   8: (3.52 seconds) suminf.  107.51370 (1144) obj. 1.09405e+06 iterations 53
Cbc0038I Pass   9: (3.73 seconds) suminf.   98.31856 (1091) obj. 1.09445e+06 iterations 856
Cbc0038I Pass  10: (3.88 seconds) suminf.   91.98279 (1097) obj. 1.09426e+06 iterations 609
Cbc0038I Pass  11: (4.03 seconds) suminf.   86.79797 (1107) obj. 1.09419e+06 iterations 648
Cbc0038I Pass  12: (4.09 seconds) suminf.   84.77480 (1131) obj. 1.09433e+06 iterations 233
Cbc0038I Pass  13: (4.23 seconds) suminf.   90.04289 (1156) obj. 1.09557e+06 iterations 519
Cbc0038I Pass  14: (4.26 seconds) suminf.   88.39283 (1154) obj. 1.09541e+06 iterations 93
Cbc0038I Pass  15: (4.36 seconds) suminf.   85.62280 (1178) obj. 1.09608e+06 iterations 375
Cbc0038I Pass  16: (4.39 seconds) suminf.   87.14922 (1158) obj. 1.09769e+06 iterations 94
Cbc0038I Pass  17: (4.87 seconds) suminf.  124.21868 (1126) obj. 1.50746e+06 iterations 2232
Cbc0038I Pass  18: (5.31 seconds) suminf.   91.08005 (1162) obj. 1.56622e+06 iterations 1929
Cbc0038I Pass  19: (5.40 seconds) suminf.   89.74431 (1135) obj. 1.57073e+06 iterations 298
Cbc0038I Pass  20: (5.60 seconds) suminf.   86.54880 (1105) obj. 1.50486e+06 iterations 850
Cbc0038I Pass  21: (5.72 seconds) suminf.   83.02878 (1119) obj. 1.50609e+06 iterations 467
Cbc0038I Pass  22: (5.74 seconds) suminf.   83.11978 (1114) obj. 1.50597e+06 iterations 38
Cbc0038I Pass  23: (5.92 seconds) suminf.   83.00038 (1121) obj. 1.50942e+06 iterations 763
Cbc0038I Pass  24: (6.04 seconds) suminf.   82.08117 (1124) obj. 1.59673e+06 iterations 452
Cbc0038I Pass  25: (6.17 seconds) suminf.   81.98149 (1138) obj. 1.58878e+06 iterations 508
Cbc0038I Pass  26: (6.24 seconds) suminf.   82.00109 (1122) obj. 1.59766e+06 iterations 258
Cbc0038I Pass  27: (6.37 seconds) suminf.   82.28209 (1130) obj. 1.58926e+06 iterations 514
Cbc0038I Pass  28: (6.45 seconds) suminf.   81.59996 (1114) obj. 1.59995e+06 iterations 343
Cbc0038I Pass  29: (6.62 seconds) suminf.   81.00916 (1140) obj. 1.58928e+06 iterations 729
Cbc0038I Pass  30: (6.75 seconds) suminf.   80.90240 (1102) obj. 1.59678e+06 iterations 573
Cbc0038I Pass  31: (6.91 seconds) suminf.   82.09633 (1139) obj. 1.591e+06 iterations 679
Cbc0038I Pass  32: (7.20 seconds) suminf.  121.66102 (1114) obj. 1.69934e+06 iterations 1491
Cbc0038I Pass  33: (7.52 seconds) suminf.   88.31106 (1126) obj. 1.67984e+06 iterations 1686
Cbc0038I Pass  34: (7.61 seconds) suminf.   87.43314 (1137) obj. 1.67933e+06 iterations 339
Cbc0038I Pass  35: (7.79 seconds) suminf.   85.08745 (1146) obj. 1.68577e+06 iterations 752
Cbc0038I Pass  36: (7.88 seconds) suminf.   83.44688 (1148) obj. 1.68438e+06 iterations 331
Cbc0038I Pass  37: (8.07 seconds) suminf.   84.60296 (1165) obj. 1.66101e+06 iterations 781
Cbc0038I Pass  38: (8.14 seconds) suminf.   83.55545 (1170) obj. 1.67217e+06 iterations 216
Cbc0038I Pass  39: (8.21 seconds) suminf.   83.25645 (1179) obj. 1.67823e+06 iterations 238
Cbc0038I Pass  40: (8.26 seconds) suminf.   82.68747 (1179) obj. 1.67848e+06 iterations 157
Cbc0038I Pass  41: (8.40 seconds) suminf.   82.98319 (1161) obj. 1.67427e+06 iterations 624
Cbc0038I Pass  42: (8.50 seconds) suminf.   81.43194 (1147) obj. 1.68396e+06 iterations 407
Cbc0038I Pass  43: (8.61 seconds) suminf.   83.12979 (1172) obj. 1.65949e+06 iterations 423
Cbc0038I Pass  44: (8.65 seconds) suminf.   82.85989 (1162) obj. 1.66314e+06 iterations 180
Cbc0038I Pass  45: (8.75 seconds) suminf.   81.62276 (1154) obj. 1.68317e+06 iterations 455
Cbc0038I Pass  46: (9.11 seconds) suminf.  133.83243 (1116) obj. 1.62995e+06 iterations 1739
Cbc0038I Pass  47: (9.42 seconds) suminf.   93.79013 (1118) obj. 1.69929e+06 iterations 1448
Cbc0038I Pass  48: (9.54 seconds) suminf.   85.02484 (1147) obj. 1.68897e+06 iterations 445
Cbc0038I Pass  49: (9.61 seconds) suminf.   82.81907 (1168) obj. 1.6993e+06 iterations 250
Cbc0038I Pass  50: (9.76 seconds) suminf.   84.53465 (1199) obj. 1.66657e+06 iterations 578
Cbc0038I Pass  51: (9.93 seconds) suminf.   82.28757 (1225) obj. 1.68676e+06 iterations 617
Cbc0038I Pass  52: (10.06 seconds) suminf.   83.83183 (1215) obj. 1.70862e+06 iterations 551
Cbc0038I Pass  53: (10.13 seconds) suminf.   83.18843 (1206) obj. 1.7038e+06 iterations 234
Cbc0038I Pass  54: (10.26 seconds) suminf.   82.98908 (1202) obj. 1.71333e+06 iterations 511
Cbc0038I Pass  55: (10.33 seconds) suminf.   82.25943 (1207) obj. 1.71169e+06 iterations 226
Cbc0038I Pass  56: (10.52 seconds) suminf.   87.68466 (1200) obj. 1.70508e+06 iterations 741
Cbc0038I Pass  57: (10.62 seconds) suminf.   84.39525 (1186) obj. 1.71361e+06 iterations 389
Cbc0038I Pass  58: (10.79 seconds) suminf.   82.94439 (1194) obj. 1.71738e+06 iterations 677
Cbc0038I Pass  59: (10.92 seconds) suminf.   80.10161 (1180) obj. 1.7154e+06 iterations 478
Cbc0038I Pass  60: (10.95 seconds) suminf.   80.01379 (1186) obj. 1.71549e+06 iterations 78
Cbc0038I Pass  61: (11.07 seconds) suminf.   82.06793 (1199) obj. 1.69992e+06 iterations 452
Cbc0038I Pass  62: (11.15 seconds) suminf.   80.60042 (1171) obj. 1.69615e+06 iterations 279
Cbc0038I Pass  63: (11.21 seconds) suminf.   79.44924 (1168) obj. 1.70334e+06 iterations 167
Cbc0038I Pass  64: (11.35 seconds) suminf.   82.31536 (1189) obj. 1.70962e+06 iterations 510
Cbc0038I Pass  65: (11.44 seconds) suminf.   79.36250 (1193) obj. 1.71488e+06 iterations 282
Cbc0038I Pass  66: (11.46 seconds) suminf.   79.35397 (1211) obj. 1.71526e+06 iterations 58
Cbc0038I Pass  67: (11.53 seconds) suminf.   81.83669 (1203) obj. 1.71499e+06 iterations 211
Cbc0038I Pass  68: (11.63 seconds) suminf.   79.44897 (1208) obj. 1.71162e+06 iterations 302
Cbc0038I Pass  69: (11.65 seconds) suminf.   79.56645 (1227) obj. 1.70932e+06 iterations 53
Cbc0038I Pass  70: (11.77 seconds) suminf.   81.47421 (1173) obj. 1.70242e+06 iterations 482
Cbc0038I Pass  71: (11.86 seconds) suminf.   79.74822 (1176) obj. 1.69801e+06 iterations 283
Cbc0038I Pass  72: (11.90 seconds) suminf.   79.44924 (1168) obj. 1.70334e+06 iterations 113
Cbc0038I Pass  73: (12.05 seconds) suminf.   83.81796 (1220) obj. 1.68983e+06 iterations 549
Cbc0038I Pass  74: (12.16 seconds) suminf.   80.83805 (1181) obj. 1.69191e+06 iterations 350
Cbc0038I Pass  75: (12.18 seconds) suminf.   80.66481 (1183) obj. 1.68997e+06 iterations 55
Cbc0038I Pass  76: (12.29 seconds) suminf.   81.55030 (1194) obj. 1.70928e+06 iterations 373
Cbc0038I Pass  77: (12.38 seconds) suminf.   79.19142 (1173) obj. 1.71183e+06 iterations 329
Cbc0038I Pass  78: (12.49 seconds) suminf.   81.04645 (1179) obj. 1.70612e+06 iterations 409
Cbc0038I Pass  79: (12.59 seconds) suminf.   79.93002 (1188) obj. 1.70659e+06 iterations 315
Cbc0038I Pass  80: (12.61 seconds) suminf.   79.63953 (1187) obj. 1.705e+06 iterations 65
Cbc0038I Pass  81: (12.72 seconds) suminf.   82.79135 (1193) obj. 1.71289e+06 iterations 381
Cbc0038I Pass  82: (12.84 seconds) suminf.   79.27432 (1204) obj. 1.71144e+06 iterations 420
Cbc0038I Pass  83: (12.87 seconds) suminf.   79.30239 (1202) obj. 1.71054e+06 iterations 49
Cbc0038I Pass  84: (12.99 seconds) suminf.   80.66032 (1188) obj. 1.70709e+06 iterations 454
Cbc0038I Pass  85: (13.05 seconds) suminf.   79.98377 (1193) obj. 1.70619e+06 iterations 184
Cbc0038I Pass  86: (13.08 seconds) suminf.   79.97784 (1182) obj. 1.70707e+06 iterations 55
Cbc0038I Pass  87: (13.18 seconds) suminf.   82.24086 (1192) obj. 1.7133e+06 iterations 376
Cbc0038I Pass  88: (13.31 seconds) suminf.   79.19619 (1211) obj. 1.70926e+06 iterations 329
Cbc0038I Pass  89: (13.35 seconds) suminf.   79.30239 (1202) obj. 1.71054e+06 iterations 95
Cbc0038I Pass  90: (13.49 seconds) suminf.   80.67205 (1191) obj. 1.70687e+06 iterations 410
Cbc0038I Pass  91: (13.63 seconds) suminf.   79.98377 (1193) obj. 1.70619e+06 iterations 187
Cbc0038I Pass  92: (13.68 seconds) suminf.   79.97784 (1182) obj. 1.70707e+06 iterations 57
Cbc0038I Pass  93: (13.86 seconds) suminf.   82.54293 (1189) obj. 1.71433e+06 iterations 395
Cbc0038I Pass  94: (13.95 seconds) suminf.   79.19619 (1211) obj. 1.70926e+06 iterations 331
Cbc0038I Pass  95: (13.99 seconds) suminf.   79.30239 (1202) obj. 1.71054e+06 iterations 89
Cbc0038I Pass  96: (14.12 seconds) suminf.   80.67205 (1191) obj. 1.70687e+06 iterations 425
Cbc0038I Pass  97: (14.21 seconds) suminf.   79.98377 (1193) obj. 1.70619e+06 iterations 168
Cbc0038I Pass  98: (14.25 seconds) suminf.   79.97784 (1182) obj. 1.70707e+06 iterations 55
Cbc0038I Pass  99: (14.41 seconds) suminf.   82.76627 (1190) obj. 1.71446e+06 iterations 425
Cbc0038I Pass 100: (14.75 seconds) suminf.  119.79951 (1163) obj. 1.83413e+06 iterations 1473
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 229 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6511 rows 2202 columns, reduced to 6001 rows 1959 columns - too large
Cbc0038I Mini branch and bound did not improve solution (15.44 seconds)
Cbc0038I After 15.44 seconds - Feasibility pump exiting - took 13.31 seconds
Cbc0031I 41 added rows had average density of 9.6341463
Cbc0013I At root node, 41 cuts changed objective from 788417.94 to 802816 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 53 row cuts average 149.7 elements, 0 column cuts (0 active)  in 0.877 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 89 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.420 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 802816 (26.50 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 802816 (120.53 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 802818 (231.20 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 802822 (370.06 seconds)
Cbc0010I After 400 nodes, 42 on tree, 1e+50 best solution, best possible 802822 (506.45 seconds)
Cbc0010I After 500 nodes, 84 on tree, 1e+50 best solution, best possible 802822 (633.92 seconds)
Cbc0010I After 600 nodes, 123 on tree, 1e+50 best solution, best possible 802822 (748.27 seconds)
Cbc0010I After 700 nodes, 174 on tree, 1e+50 best solution, best possible 802822 (847.67 seconds)
Cbc0010I After 800 nodes, 222 on tree, 1e+50 best solution, best possible 802822 (946.97 seconds)
Cbc0010I After 900 nodes, 268 on tree, 1e+50 best solution, best possible 802822 (1056.54 seconds)
Cbc0010I After 1000 nodes, 317 on tree, 1e+50 best solution, best possible 802822 (1154.58 seconds)
Cbc0010I After 1100 nodes, 344 on tree, 1e+50 best solution, best possible 802822 (1221.02 seconds)
Cbc0010I After 1200 nodes, 335 on tree, 1e+50 best solution, best possible 802822 (1277.55 seconds)
Cbc0010I After 1300 nodes, 333 on tree, 1e+50 best solution, best possible 802822 (1341.44 seconds)
Cbc0010I After 1400 nodes, 339 on tree, 1e+50 best solution, best possible 802822 (1414.66 seconds)
Cbc0010I After 1500 nodes, 348 on tree, 1e+50 best solution, best possible 802822 (1495.77 seconds)
Cbc0010I After 1600 nodes, 346 on tree, 1e+50 best solution, best possible 802822 (1587.20 seconds)
Cbc0010I After 1700 nodes, 350 on tree, 1e+50 best solution, best possible 802822 (1664.78 seconds)
Cbc0010I After 1800 nodes, 351 on tree, 1e+50 best solution, best possible 802822 (1787.80 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 802822), took 3528595 iterations and 1807 nodes (1800.17 seconds)
Cbc0032I Strong branching done 19214 times (1642375 iterations), fathomed 261 nodes and fixed 2088 variables
Cbc0035I Maximum depth 367, 0 variables fixed on reduced cost
Cuts at root node changed objective from 788418 to 802816
Probing was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.150 seconds)
Gomory was tried 380 times and created 717 cuts of which 0 were active after adding rounds of cuts (6.186 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 380 times and created 5949 cuts of which 0 were active after adding rounds of cuts (2.052 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
ImplicationCuts was tried 88 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    802822.000
Enumerated nodes:               1807
Total iterations:               3528595
Time (CPU seconds):             1800.17
Time (Wallclock seconds):       1805.75

Total time (CPU seconds):       1800.19   (Wallclock seconds):       1805.77

