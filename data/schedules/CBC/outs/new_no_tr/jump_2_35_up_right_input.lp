Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_35_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_35_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 35840 - 0.25 seconds
Cgl0002I 97 variables fixed
Cgl0003I 0 fixed, 14 tightened bounds, 757 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 211 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 3731 rows, 1224 columns (1224 integer (1188 of which binary)) and 12654 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1224 objects (1224 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 685 integers unsatisfied sum - 161
Cbc0038I Pass   1: (0.89 seconds) suminf.   66.60283 (390) obj. 52151 iterations 1562
Cbc0038I Pass   2: (1.00 seconds) suminf.   58.93499 (388) obj. 53310 iterations 582
Cbc0038I Pass   3: (1.01 seconds) suminf.   58.49616 (385) obj. 53310.8 iterations 61
Cbc0038I Pass   4: (1.04 seconds) suminf.   55.81483 (378) obj. 53234 iterations 92
Cbc0038I Pass   5: (1.14 seconds) suminf.   50.28042 (323) obj. 53429.4 iterations 605
Cbc0038I Pass   6: (1.19 seconds) suminf.   46.45320 (318) obj. 53416.3 iterations 280
Cbc0038I Pass   7: (1.24 seconds) suminf.   46.57889 (335) obj. 53513.6 iterations 255
Cbc0038I Pass   8: (1.25 seconds) suminf.   46.19098 (333) obj. 53537.1 iterations 24
Cbc0038I Pass   9: (1.34 seconds) suminf.   42.03747 (297) obj. 53413.7 iterations 552
Cbc0038I Pass  10: (1.35 seconds) suminf.   43.95717 (315) obj. 53411.5 iterations 71
Cbc0038I Pass  11: (1.42 seconds) suminf.   39.95477 (293) obj. 55260.9 iterations 429
Cbc0038I Pass  12: (1.46 seconds) suminf.   37.66201 (281) obj. 55440.3 iterations 159
Cbc0038I Pass  13: (1.46 seconds) suminf.   35.80758 (282) obj. 55440 iterations 26
Cbc0038I Pass  14: (1.48 seconds) suminf.   36.42670 (281) obj. 55438.5 iterations 35
Cbc0038I Pass  15: (1.54 seconds) suminf.   33.68698 (241) obj. 55597.5 iterations 435
Cbc0038I Pass  16: (1.57 seconds) suminf.   30.97425 (242) obj. 55699.1 iterations 158
Cbc0038I Pass  17: (1.58 seconds) suminf.   31.34309 (242) obj. 55699.6 iterations 17
Cbc0038I Pass  18: (1.61 seconds) suminf.   28.95771 (227) obj. 55715.1 iterations 124
Cbc0038I Pass  19: (1.62 seconds) suminf.   28.42690 (225) obj. 55715.8 iterations 27
Cbc0038I Pass  20: (1.70 seconds) suminf.   21.89271 (197) obj. 55727.8 iterations 589
Cbc0038I Pass  21: (1.71 seconds) suminf.   21.52216 (188) obj. 57780.4 iterations 94
Cbc0038I Pass  22: (1.79 seconds) suminf.   19.87287 (202) obj. 55888.1 iterations 567
Cbc0038I Pass  23: (1.84 seconds) suminf.   18.32398 (205) obj. 55828.5 iterations 224
Cbc0038I Pass  24: (1.88 seconds) suminf.   18.29995 (178) obj. 54398.5 iterations 291
Cbc0038I Pass  25: (1.91 seconds) suminf.   19.28146 (194) obj. 54277.4 iterations 163
Cbc0038I Pass  26: (1.98 seconds) suminf.   12.12341 (156) obj. 54078.8 iterations 531
Cbc0038I Pass  27: (2.00 seconds) suminf.   10.99417 (157) obj. 54737.6 iterations 154
Cbc0038I Pass  28: (2.04 seconds) suminf.   12.34736 (147) obj. 56368.6 iterations 226
Cbc0038I Pass  29: (2.07 seconds) suminf.   10.36360 (166) obj. 56416 iterations 226
Cbc0038I Pass  30: (2.12 seconds) suminf.    8.70338 (158) obj. 56429.5 iterations 346
Cbc0038I Pass  31: (2.13 seconds) suminf.    8.12474 (158) obj. 56429.4 iterations 39
Cbc0038I Pass  32: (2.19 seconds) suminf.    3.22611 (76) obj. 60087.1 iterations 504
Cbc0038I Pass  33: (2.20 seconds) suminf.    3.19048 (78) obj. 60087.1 iterations 56
Cbc0038I Pass  34: (2.22 seconds) suminf.    1.18022 (48) obj. 57344 iterations 127
Cbc0038I Pass  35: (2.23 seconds) suminf.    1.18022 (48) obj. 57344 iterations 16
Cbc0038I Pass  36: (2.28 seconds) suminf.    0.44914 (25) obj. 57344 iterations 273
Cbc0038I Pass  37: (2.29 seconds) suminf.    0.44866 (33) obj. 57344 iterations 5
Cbc0038I Pass  38: (2.30 seconds) suminf.    0.65627 (30) obj. 57344 iterations 53
Cbc0038I Pass  39: (2.38 seconds) suminf.    4.25760 (61) obj. 57344 iterations 497
Cbc0038I Pass  40: (2.39 seconds) suminf.    4.25760 (61) obj. 57344 iterations 7
Cbc0038I Pass  41: (2.45 seconds) suminf.   10.48718 (74) obj. 57344 iterations 394
Cbc0038I Pass  42: (2.46 seconds) suminf.   10.60462 (76) obj. 57344 iterations 53
Cbc0038I Pass  43: (2.53 seconds) suminf.    1.81469 (36) obj. 57344 iterations 435
Cbc0038I Pass  44: (2.53 seconds) suminf.    1.81469 (36) obj. 57344 iterations 5
Cbc0038I Pass  45: (2.55 seconds) suminf.    4.92500 (18) obj. 57344 iterations 113
Cbc0038I Pass  46: (2.57 seconds) suminf.    0.50249 (18) obj. 57344 iterations 72
Cbc0038I Pass  47: (2.59 seconds) suminf.    0.21350 (13) obj. 57344 iterations 85
Cbc0038I Pass  48: (2.60 seconds) suminf.    0.14754 (8) obj. 57344 iterations 11
Cbc0038I Pass  49: (2.61 seconds) suminf.    0.33758 (12) obj. 57344 iterations 30
Cbc0038I Pass  50: (2.62 seconds) suminf.    0.29248 (10) obj. 57344 iterations 6
Cbc0038I Pass  51: (2.63 seconds) suminf.    0.21350 (13) obj. 57344 iterations 26
Cbc0038I Pass  52: (2.86 seconds) suminf.   58.19037 (294) obj. 84887 iterations 1748
Cbc0038I Pass  53: (2.99 seconds) suminf.   33.65532 (242) obj. 85059 iterations 851
Cbc0038I Pass  54: (3.00 seconds) suminf.   33.85603 (242) obj. 85060.9 iterations 48
Cbc0038I Pass  55: (3.06 seconds) suminf.   29.06865 (234) obj. 85027.2 iterations 320
Cbc0038I Pass  56: (3.08 seconds) suminf.   29.33234 (241) obj. 85004.3 iterations 45
Cbc0038I Pass  57: (3.13 seconds) suminf.   25.49427 (222) obj. 84667.3 iterations 318
Cbc0038I Pass  58: (3.16 seconds) suminf.   24.75662 (214) obj. 84655.1 iterations 174
Cbc0038I Pass  59: (3.21 seconds) suminf.   16.48464 (169) obj. 84371.1 iterations 319
Cbc0038I Pass  60: (3.23 seconds) suminf.   15.91851 (172) obj. 84300.9 iterations 100
Cbc0038I Pass  61: (3.28 seconds) suminf.   15.52829 (161) obj. 70584.6 iterations 329
Cbc0038I Pass  62: (3.28 seconds) suminf.   15.65009 (164) obj. 70584.5 iterations 20
Cbc0038I Pass  63: (3.31 seconds) suminf.   13.96784 (178) obj. 70322.3 iterations 185
Cbc0038I Pass  64: (3.32 seconds) suminf.   14.15754 (179) obj. 70319.5 iterations 10
Cbc0038I Pass  65: (3.35 seconds) suminf.   13.80596 (166) obj. 70611 iterations 170
Cbc0038I Pass  66: (3.36 seconds) suminf.   13.80596 (166) obj. 70611 iterations 5
Cbc0038I Pass  67: (3.40 seconds) suminf.   11.07774 (134) obj. 57153.6 iterations 245
Cbc0038I Pass  68: (3.41 seconds) suminf.   10.98928 (132) obj. 56996.7 iterations 9
Cbc0038I Pass  69: (3.47 seconds) suminf.   10.27499 (126) obj. 56998.8 iterations 406
Cbc0038I Pass  70: (3.48 seconds) suminf.   10.33974 (126) obj. 56998.8 iterations 32
Cbc0038I Pass  71: (3.52 seconds) suminf.    8.94477 (116) obj. 56998.6 iterations 336
Cbc0038I Pass  72: (3.53 seconds) suminf.    8.93809 (118) obj. 56998.6 iterations 9
Cbc0038I Pass  73: (3.55 seconds) suminf.    8.74531 (119) obj. 56998.6 iterations 161
Cbc0038I Pass  74: (3.56 seconds) suminf.    7.94309 (121) obj. 56998.6 iterations 31
Cbc0038I Pass  75: (3.65 seconds) suminf.    3.55521 (48) obj. 57115.7 iterations 629
Cbc0038I Pass  76: (3.66 seconds) suminf.    3.55521 (48) obj. 57115.7 iterations 16
Cbc0038I Pass  77: (3.70 seconds) suminf.    3.12616 (40) obj. 61440 iterations 195
Cbc0038I Pass  78: (3.70 seconds) suminf.    3.12616 (40) obj. 61440 iterations 8
Cbc0038I Pass  79: (3.75 seconds) suminf.    3.77173 (86) obj. 61440 iterations 351
Cbc0038I Pass  80: (3.80 seconds) suminf.   12.31870 (97) obj. 62385.2 iterations 492
Cbc0038I Pass  81: (3.81 seconds) suminf.   10.38630 (99) obj. 62265.9 iterations 23
Cbc0038I Pass  82: (3.88 seconds) suminf.    6.97645 (77) obj. 65536 iterations 499
Cbc0038I Pass  83: (3.91 seconds) suminf.    5.06911 (62) obj. 65536 iterations 196
Cbc0038I Pass  84: (3.98 seconds) suminf.    2.31445 (61) obj. 65398.3 iterations 555
Cbc0038I Pass  85: (4.21 seconds) suminf.    1.52207 (36) obj. 61440 iterations 1831
Cbc0038I Pass  86: (4.23 seconds) suminf.    0.98806 (30) obj. 61440 iterations 117
Cbc0038I Pass  87: (4.23 seconds) suminf.    0.98916 (30) obj. 61440 iterations 7
Cbc0038I Pass  88: (4.27 seconds) suminf.    1.95611 (61) obj. 61440 iterations 205
Cbc0038I Pass  89: (4.27 seconds) suminf.    1.50217 (62) obj. 61440 iterations 21
Cbc0038I Pass  90: (4.30 seconds) suminf.    7.64300 (55) obj. 61440 iterations 161
Cbc0038I Pass  91: (4.31 seconds) suminf.    6.94448 (52) obj. 61440 iterations 72
Cbc0038I Pass  92: (4.34 seconds) suminf.    0.00000 (0) obj. 61440 iterations 183
Cbc0038I Solution found of 61440
Cbc0038I Cleaned solution of 61440
Cbc0038I Rounding solution of 57344 is better than previous of 61440

Cbc0038I Before mini branch and bound, 218 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 3249 rows 1006 columns - 57 fixed gives 2832, 872 - still too large
Cbc0038I Mini branch and bound did not improve solution (4.39 seconds)
Cbc0038I Round again with cutoff of 55192.7
Cbc0038I Pass  93: (4.39 seconds) suminf.   66.60283 (390) obj. 52151 iterations 0
Cbc0038I Pass  94: (4.49 seconds) suminf.   58.93499 (388) obj. 53310 iterations 573
Cbc0038I Pass  95: (4.50 seconds) suminf.   58.49616 (385) obj. 53310.8 iterations 56
Cbc0038I Pass  96: (4.52 seconds) suminf.   55.81483 (378) obj. 53234 iterations 75
Cbc0038I Pass  97: (4.62 seconds) suminf.   51.86907 (334) obj. 53410.8 iterations 625
Cbc0038I Pass  98: (4.66 seconds) suminf.   51.64197 (334) obj. 53234.9 iterations 166
Cbc0038I Pass  99: (4.73 seconds) suminf.   44.12113 (304) obj. 53405.9 iterations 448
Cbc0038I Pass 100: (4.78 seconds) suminf.   41.89693 (312) obj. 53506.5 iterations 275
Cbc0038I Pass 101: (4.80 seconds) suminf.   41.78435 (319) obj. 53596.5 iterations 64
Cbc0038I Pass 102: (4.88 seconds) suminf.   39.00029 (273) obj. 53395.4 iterations 464
Cbc0038I Pass 103: (4.94 seconds) suminf.   33.73986 (268) obj. 53408 iterations 346
Cbc0038I Pass 104: (4.95 seconds) suminf.   33.16641 (264) obj. 53407.7 iterations 39
Cbc0038I Pass 105: (5.01 seconds) suminf.   30.09583 (252) obj. 53907.7 iterations 403
Cbc0038I Pass 106: (5.02 seconds) suminf.   30.07054 (248) obj. 53911.6 iterations 23
Cbc0038I Pass 107: (5.09 seconds) suminf.   28.03772 (204) obj. 55192.7 iterations 451
Cbc0038I Pass 108: (5.11 seconds) suminf.   27.08932 (197) obj. 55192.7 iterations 122
Cbc0038I Pass 109: (5.13 seconds) suminf.   26.37031 (206) obj. 55192.7 iterations 149
Cbc0038I Pass 110: (5.21 seconds) suminf.   20.85906 (200) obj. 55192.7 iterations 515
Cbc0038I Pass 111: (5.22 seconds) suminf.   20.73068 (202) obj. 55192.7 iterations 17
Cbc0038I Pass 112: (5.27 seconds) suminf.   16.16721 (165) obj. 55192.7 iterations 428
Cbc0038I Pass 113: (5.30 seconds) suminf.   13.24522 (152) obj. 55192.7 iterations 184
Cbc0038I Pass 114: (5.31 seconds) suminf.   12.90350 (150) obj. 55192.7 iterations 15
Cbc0038I Pass 115: (5.33 seconds) suminf.    9.27507 (145) obj. 55192.7 iterations 144
Cbc0038I Pass 116: (5.34 seconds) suminf.    8.93509 (143) obj. 55192.7 iterations 2
Cbc0038I Pass 117: (5.37 seconds) suminf.   11.44837 (117) obj. 55192.7 iterations 203
Cbc0038I Pass 118: (5.40 seconds) suminf.    6.63271 (102) obj. 55192.7 iterations 183
Cbc0038I Pass 119: (5.40 seconds) suminf.    6.29868 (100) obj. 55192.7 iterations 1
Cbc0038I Pass 120: (5.42 seconds) suminf.    4.61740 (69) obj. 55192.7 iterations 151
Cbc0038I Pass 121: (5.43 seconds) suminf.    4.61740 (69) obj. 55192.7 iterations 21
Cbc0038I Pass 122: (5.46 seconds) suminf.    1.54026 (5) obj. 55192.7 iterations 212
Cbc0038I Pass 123: (5.47 seconds) suminf.    1.54026 (5) obj. 55192.7 iterations 25
Cbc0038I Pass 124: (5.48 seconds) suminf.    0.29991 (1) obj. 55192.7 iterations 30
Cbc0038I Solution found of 55192.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3732 rows 1224 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 54272
Cbc0038I Before mini branch and bound, 340 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2962 rows 884 columns - 121 fixed gives 2184, 628 - still too large
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 321 rows 91 columns
Cbc0038I Mini branch and bound did not improve solution (5.96 seconds)
Cbc0038I Round again with cutoff of 50584.8
Cbc0038I Pass 125: (5.98 seconds) suminf.   68.27005 (386) obj. 50584 iterations 91
Cbc0038I Pass 126: (6.12 seconds) suminf.   56.23603 (368) obj. 50584.8 iterations 840
Cbc0038I Pass 127: (6.18 seconds) suminf.   53.43139 (375) obj. 50584.8 iterations 260
Cbc0038I Pass 128: (6.30 seconds) suminf.   51.50375 (300) obj. 50584.8 iterations 742
Cbc0038I Pass 129: (6.35 seconds) suminf.   45.27195 (318) obj. 50584.8 iterations 268
Cbc0038I Pass 130: (6.37 seconds) suminf.   44.63331 (307) obj. 50584.8 iterations 98
Cbc0038I Pass 131: (6.39 seconds) suminf.   42.32492 (309) obj. 50584.8 iterations 77
Cbc0038I Pass 132: (6.39 seconds) suminf.   42.32492 (309) obj. 50584.8 iterations 8
Cbc0038I Pass 133: (6.46 seconds) suminf.   44.93360 (298) obj. 50584.8 iterations 439
Cbc0038I Pass 134: (6.49 seconds) suminf.   42.13547 (292) obj. 50584.8 iterations 140
Cbc0038I Pass 135: (6.53 seconds) suminf.   39.23785 (287) obj. 50584.8 iterations 176
Cbc0038I Pass 136: (6.56 seconds) suminf.   37.62085 (269) obj. 50584.8 iterations 153
Cbc0038I Pass 137: (6.62 seconds) suminf.   30.20563 (232) obj. 50584.8 iterations 378
Cbc0038I Pass 138: (6.65 seconds) suminf.   30.35652 (232) obj. 50584.8 iterations 178
Cbc0038I Pass 139: (6.71 seconds) suminf.   25.25863 (215) obj. 50584.8 iterations 356
Cbc0038I Pass 140: (6.75 seconds) suminf.   23.62264 (242) obj. 50584.8 iterations 276
Cbc0038I Pass 141: (6.82 seconds) suminf.   13.58951 (156) obj. 50584.8 iterations 534
Cbc0038I Pass 142: (6.83 seconds) suminf.   13.64500 (158) obj. 50584.8 iterations 11
Cbc0038I Pass 143: (6.90 seconds) suminf.    9.24670 (138) obj. 50584.8 iterations 532
Cbc0038I Pass 144: (6.90 seconds) suminf.    9.23340 (137) obj. 50584.8 iterations 16
Cbc0038I Pass 145: (6.93 seconds) suminf.    9.12742 (122) obj. 50584.8 iterations 177
Cbc0038I Pass 146: (6.96 seconds) suminf.    7.42460 (120) obj. 50584.8 iterations 247
Cbc0038I Pass 147: (6.99 seconds) suminf.    7.26901 (119) obj. 50584.8 iterations 179
Cbc0038I Pass 148: (7.00 seconds) suminf.    7.21519 (120) obj. 50584.8 iterations 109
Cbc0038I Pass 149: (7.04 seconds) suminf.    8.72672 (89) obj. 50584.8 iterations 295
Cbc0038I Pass 150: (7.05 seconds) suminf.    7.51180 (102) obj. 50584.8 iterations 97
Cbc0038I Pass 151: (7.13 seconds) suminf.    7.19706 (55) obj. 50584.8 iterations 662
Cbc0038I Pass 152: (7.16 seconds) suminf.    7.60481 (56) obj. 50584.8 iterations 159
Cbc0038I Pass 153: (7.25 seconds) suminf.    7.48991 (69) obj. 50584.8 iterations 673
Cbc0038I Pass 154: (7.27 seconds) suminf.    6.24434 (64) obj. 50584.8 iterations 104
Cbc0038I Pass 155: (7.31 seconds) suminf.    5.31203 (52) obj. 50584.8 iterations 304
Cbc0038I Pass 156: (7.31 seconds) suminf.    5.31203 (52) obj. 50584.8 iterations 21
Cbc0038I Pass 157: (7.36 seconds) suminf.    7.21354 (63) obj. 50584.8 iterations 400
Cbc0038I Pass 158: (7.38 seconds) suminf.    5.94806 (59) obj. 50584.8 iterations 100
Cbc0038I Pass 159: (7.44 seconds) suminf.   11.56040 (57) obj. 50584.8 iterations 455
Cbc0038I Pass 160: (7.46 seconds) suminf.    9.64407 (58) obj. 50584.8 iterations 137
Cbc0038I Pass 161: (7.47 seconds) suminf.    4.59871 (44) obj. 50584.8 iterations 34
Cbc0038I Pass 162: (7.50 seconds) suminf.    7.02459 (43) obj. 50584.8 iterations 228
Cbc0038I Pass 163: (7.51 seconds) suminf.    6.23047 (43) obj. 50584.8 iterations 108
Cbc0038I Pass 164: (7.55 seconds) suminf.    9.63908 (55) obj. 50584.8 iterations 318
Cbc0038I Pass 165: (7.57 seconds) suminf.    5.39402 (45) obj. 50584.8 iterations 150
Cbc0038I Pass 166: (7.59 seconds) suminf.    5.61016 (40) obj. 50584.8 iterations 183
Cbc0038I Pass 167: (7.60 seconds) suminf.    5.45857 (40) obj. 50584.8 iterations 25
Cbc0038I Pass 168: (7.65 seconds) suminf.   10.93326 (64) obj. 50584.8 iterations 364
Cbc0038I Pass 169: (7.66 seconds) suminf.   10.93326 (64) obj. 50584.8 iterations 12
Cbc0038I Pass 170: (7.70 seconds) suminf.    6.90581 (60) obj. 50584.8 iterations 356
Cbc0038I Pass 171: (7.71 seconds) suminf.    6.63492 (63) obj. 50584.8 iterations 32
Cbc0038I Pass 172: (7.78 seconds) suminf.   10.09719 (53) obj. 50584.8 iterations 580
Cbc0038I Pass 173: (7.82 seconds) suminf.    4.68713 (48) obj. 50584.8 iterations 278
Cbc0038I Pass 174: (7.85 seconds) suminf.    7.77091 (47) obj. 50584.8 iterations 309
Cbc0038I Pass 175: (7.87 seconds) suminf.    7.59194 (73) obj. 50584.8 iterations 117
Cbc0038I Pass 176: (7.91 seconds) suminf.    9.94639 (37) obj. 50584.8 iterations 266
Cbc0038I Pass 177: (7.92 seconds) suminf.    6.11176 (34) obj. 50584.8 iterations 57
Cbc0038I Pass 178: (7.93 seconds) suminf.    4.70312 (44) obj. 50584.8 iterations 99
Cbc0038I Pass 179: (7.96 seconds) suminf.    8.81226 (48) obj. 50584.8 iterations 210
Cbc0038I Pass 180: (7.98 seconds) suminf.    5.89925 (49) obj. 50584.8 iterations 166
Cbc0038I Pass 181: (8.03 seconds) suminf.    6.84386 (37) obj. 50584.8 iterations 481
Cbc0038I Pass 182: (8.05 seconds) suminf.    4.89431 (32) obj. 50584.8 iterations 95
Cbc0038I Pass 183: (8.07 seconds) suminf.    5.32676 (34) obj. 50584.8 iterations 136
Cbc0038I Pass 184: (8.08 seconds) suminf.    5.17840 (33) obj. 50584.8 iterations 65
Cbc0038I Pass 185: (8.10 seconds) suminf.    7.48021 (46) obj. 50584.8 iterations 123
Cbc0038I Pass 186: (8.10 seconds) suminf.    6.67734 (46) obj. 50584.8 iterations 34
Cbc0038I Pass 187: (8.15 seconds) suminf.    9.93604 (53) obj. 50584.8 iterations 399
Cbc0038I Pass 188: (8.17 seconds) suminf.    8.68084 (53) obj. 50584.8 iterations 101
Cbc0038I Pass 189: (8.20 seconds) suminf.    5.12815 (46) obj. 50584.8 iterations 310
Cbc0038I Pass 190: (8.21 seconds) suminf.    5.12815 (46) obj. 50584.8 iterations 60
Cbc0038I Pass 191: (8.24 seconds) suminf.    6.72375 (52) obj. 50584.8 iterations 260
Cbc0038I Pass 192: (8.26 seconds) suminf.    6.68510 (46) obj. 50584.8 iterations 81
Cbc0038I Pass 193: (8.39 seconds) suminf.   11.81596 (57) obj. 50584.8 iterations 1054
Cbc0038I Pass 194: (8.42 seconds) suminf.   10.87728 (61) obj. 50584.8 iterations 276
Cbc0038I Pass 195: (8.47 seconds) suminf.    8.50998 (67) obj. 50584.8 iterations 435
Cbc0038I Pass 196: (8.48 seconds) suminf.    8.34311 (51) obj. 50584.8 iterations 107
Cbc0038I Pass 197: (8.53 seconds) suminf.    7.69870 (55) obj. 50584.8 iterations 333
Cbc0038I Pass 198: (8.58 seconds) suminf.    7.97686 (83) obj. 50584.8 iterations 410
Cbc0038I Pass 199: (8.60 seconds) suminf.    7.42110 (76) obj. 50584.8 iterations 210
Cbc0038I Pass 200: (8.64 seconds) suminf.    5.82816 (87) obj. 50584.8 iterations 231
Cbc0038I Pass 201: (8.68 seconds) suminf.    7.34877 (37) obj. 50584.8 iterations 340
Cbc0038I Pass 202: (8.68 seconds) suminf.    6.40348 (37) obj. 50584.8 iterations 26
Cbc0038I Pass 203: (8.71 seconds) suminf.    8.15199 (43) obj. 50584.8 iterations 177
Cbc0038I Pass 204: (8.72 seconds) suminf.    7.97655 (43) obj. 50584.8 iterations 52
Cbc0038I Pass 205: (8.74 seconds) suminf.    6.47608 (40) obj. 50584.8 iterations 233
Cbc0038I Pass 206: (8.75 seconds) suminf.    6.47608 (40) obj. 50584.8 iterations 0
Cbc0038I Pass 207: (8.78 seconds) suminf.    8.91789 (46) obj. 50584.8 iterations 297
Cbc0038I Pass 208: (8.81 seconds) suminf.    7.64614 (45) obj. 50584.8 iterations 201
Cbc0038I Pass 209: (8.82 seconds) suminf.    5.65858 (39) obj. 50584.8 iterations 76
Cbc0038I Pass 210: (8.86 seconds) suminf.    7.56504 (38) obj. 50584.8 iterations 306
Cbc0038I Pass 211: (8.87 seconds) suminf.    4.93739 (29) obj. 50584.8 iterations 63
Cbc0038I Pass 212: (8.90 seconds) suminf.    9.10647 (49) obj. 50584.8 iterations 240
Cbc0038I Pass 213: (8.96 seconds) suminf.    6.56397 (43) obj. 50584.8 iterations 398
Cbc0038I Pass 214: (8.98 seconds) suminf.    5.72368 (43) obj. 50584.8 iterations 173
Cbc0038I Pass 215: (9.00 seconds) suminf.    8.20825 (39) obj. 50584.8 iterations 146
Cbc0038I Pass 216: (9.02 seconds) suminf.    7.36251 (52) obj. 50584.8 iterations 118
Cbc0038I Pass 217: (9.07 seconds) suminf.    9.42979 (65) obj. 50584.8 iterations 404
Cbc0038I Pass 218: (9.09 seconds) suminf.    8.25896 (87) obj. 50584.8 iterations 129
Cbc0038I Pass 219: (9.11 seconds) suminf.    6.70274 (69) obj. 50584.8 iterations 141
Cbc0038I Pass 220: (9.13 seconds) suminf.    6.88839 (48) obj. 50584.8 iterations 162
Cbc0038I Pass 221: (9.14 seconds) suminf.    7.25335 (49) obj. 50584.8 iterations 110
Cbc0038I Pass 222: (9.17 seconds) suminf.    7.59419 (50) obj. 50584.8 iterations 200
Cbc0038I Pass 223: (9.19 seconds) suminf.    6.76324 (52) obj. 50584.8 iterations 151
Cbc0038I Pass 224: (9.40 seconds) suminf.   69.53758 (381) obj. 50584.8 iterations 1583
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 269 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 3129 rows 955 columns - 121 fixed gives 2356, 702 - still too large
Cbc0038I Mini branch and bound did not improve solution (9.68 seconds)
Cbc0038I After 9.68 seconds - Feasibility pump exiting with objective of 54272 - took 9.06 seconds
Cbc0012I Integer solution of 54272 found by feasibility pump after 0 iterations and 0 nodes (9.68 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2612 rows 725 columns - 116 fixed gives 1942, 515 - still too large
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 63 rows 25 columns
Cbc0031I 68 added rows had average density of 10.441176
Cbc0013I At root node, 68 cuts changed objective from 35840 to 41984 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 53 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 172 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.494 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 515 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 54272 best solution, best possible 41984 (20.23 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 976 rows 288 columns
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 1206 rows 347 columns
Cbc0010I After 100 nodes, 9 on tree, 54272 best solution, best possible 41984 (60.26 seconds)
Cbc0010I After 200 nodes, 2 on tree, 54272 best solution, best possible 41985 (108.18 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2117 rows 606 columns - 117 fixed gives 1568, 410 - ok now
Cbc0010I After 300 nodes, 10 on tree, 54272 best solution, best possible 41990 (161.06 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 1008 rows 300 columns
Cbc0010I After 400 nodes, 5 on tree, 54272 best solution, best possible 41990 (197.68 seconds)
Cbc0010I After 500 nodes, 18 on tree, 54272 best solution, best possible 41993 (234.24 seconds)
Cbc0010I After 600 nodes, 19 on tree, 54272 best solution, best possible 41993 (258.51 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 897 rows 270 columns
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 934 rows 271 columns
Cbc0010I After 700 nodes, 28 on tree, 54272 best solution, best possible 41993 (284.72 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 1092 rows 304 columns
Cbc0010I After 800 nodes, 35 on tree, 54272 best solution, best possible 41993 (310.03 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 808 rows 234 columns
Cbc0010I After 900 nodes, 68 on tree, 54272 best solution, best possible 41993 (330.90 seconds)
Cbc0010I After 1000 nodes, 89 on tree, 54272 best solution, best possible 41993 (350.19 seconds)
Cbc0010I After 1100 nodes, 75 on tree, 54272 best solution, best possible 41993 (370.87 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 979 rows 289 columns
Cbc0010I After 1200 nodes, 64 on tree, 54272 best solution, best possible 41993 (388.09 seconds)
Cbc0010I After 1300 nodes, 33 on tree, 54272 best solution, best possible 41993 (404.06 seconds)
Cbc0010I After 1400 nodes, 5 on tree, 54272 best solution, best possible 41993 (424.35 seconds)
Cbc0010I After 1500 nodes, 5 on tree, 54272 best solution, best possible 41997 (453.23 seconds)
Cbc0010I After 1600 nodes, 7 on tree, 54272 best solution, best possible 41997 (474.49 seconds)
Cbc0010I After 1700 nodes, 15 on tree, 54272 best solution, best possible 41998 (496.88 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 54272 best solution, best possible 41998 (523.81 seconds)
Cbc0010I After 1900 nodes, 5 on tree, 54272 best solution, best possible 42000 (545.61 seconds)
Cbc0010I After 2000 nodes, 8 on tree, 54272 best solution, best possible 42000 (565.66 seconds)
Cbc0010I After 2100 nodes, 7 on tree, 54272 best solution, best possible 42002 (588.10 seconds)
Cbc0010I After 2200 nodes, 9 on tree, 54272 best solution, best possible 42004 (611.68 seconds)
Cbc0010I After 2300 nodes, 5 on tree, 54272 best solution, best possible 42005 (631.45 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2153 rows 609 columns - 118 fixed gives 1546, 400 - ok now
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 748 rows 230 columns
Cbc0010I After 2400 nodes, 5 on tree, 54272 best solution, best possible 42010 (660.27 seconds)
Cbc0010I After 2500 nodes, 2 on tree, 54272 best solution, best possible 42015 (685.00 seconds)
Cbc0010I After 2600 nodes, 3 on tree, 54272 best solution, best possible 42023 (715.11 seconds)
Cbc0010I After 2700 nodes, 12 on tree, 54272 best solution, best possible 42027 (734.51 seconds)
Cbc0010I After 2800 nodes, 5 on tree, 54272 best solution, best possible 42032 (754.82 seconds)
Cbc0010I After 2900 nodes, 4 on tree, 54272 best solution, best possible 42038 (783.09 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 764 rows 235 columns
Cbc0010I After 3000 nodes, 3 on tree, 54272 best solution, best possible 42044 (809.89 seconds)
Cbc0010I After 3100 nodes, 4 on tree, 54272 best solution, best possible 42051 (836.57 seconds)
Cbc0010I After 3200 nodes, 7 on tree, 54272 best solution, best possible 42058 (862.47 seconds)
Cbc0010I After 3300 nodes, 12 on tree, 54272 best solution, best possible 42065 (885.14 seconds)
Cbc0010I After 3400 nodes, 13 on tree, 54272 best solution, best possible 42071 (907.04 seconds)
Cbc0010I After 3500 nodes, 2 on tree, 54272 best solution, best possible 42075 (927.64 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 801 rows 240 columns
Cbc0010I After 3600 nodes, 13 on tree, 54272 best solution, best possible 42081 (952.65 seconds)
Cbc0010I After 3700 nodes, 7 on tree, 54272 best solution, best possible 42083 (971.17 seconds)
Cbc0010I After 3800 nodes, 9 on tree, 54272 best solution, best possible 42088 (990.50 seconds)
Cbc0010I After 3900 nodes, 7 on tree, 54272 best solution, best possible 42089 (1007.19 seconds)
Cbc0010I After 4000 nodes, 5 on tree, 54272 best solution, best possible 42093 (1031.02 seconds)
Cbc0010I After 4100 nodes, 4 on tree, 54272 best solution, best possible 42098 (1051.51 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2653 rows 742 columns - 115 fixed gives 2001, 541 - still too large
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 154 rows 47 columns
Cbc0010I After 4200 nodes, 1 on tree, 54272 best solution, best possible 42103 (1075.32 seconds)
Cbc0010I After 4300 nodes, 3 on tree, 54272 best solution, best possible 42105 (1096.75 seconds)
Cbc0010I After 4400 nodes, 3 on tree, 54272 best solution, best possible 42110 (1121.80 seconds)
Cbc0010I After 4500 nodes, 2 on tree, 54272 best solution, best possible 42115 (1141.69 seconds)
Cbc0010I After 4600 nodes, 1 on tree, 54272 best solution, best possible 42122 (1164.30 seconds)
Cbc0010I After 4700 nodes, 3 on tree, 54272 best solution, best possible 42129 (1188.73 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 772 rows 234 columns
Cbc0010I After 4800 nodes, 11 on tree, 54272 best solution, best possible 42133 (1208.48 seconds)
Cbc0010I After 4900 nodes, 3 on tree, 54272 best solution, best possible 42138 (1230.00 seconds)
Cbc0010I After 5000 nodes, 2 on tree, 54272 best solution, best possible 42142 (1250.37 seconds)
Cbc0010I After 5100 nodes, 4 on tree, 54272 best solution, best possible 42148 (1274.38 seconds)
Cbc0010I After 5200 nodes, 6 on tree, 54272 best solution, best possible 42156 (1302.62 seconds)
Cbc0010I After 5300 nodes, 6 on tree, 54272 best solution, best possible 42162 (1324.05 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2633 rows 740 columns - 112 fixed gives 2022, 546 - still too large
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 157 rows 49 columns
Cbc0010I After 5400 nodes, 1 on tree, 54272 best solution, best possible 42169 (1345.34 seconds)
Cbc0010I After 5500 nodes, 4 on tree, 54272 best solution, best possible 42174 (1370.93 seconds)
Cbc0010I After 5600 nodes, 5 on tree, 54272 best solution, best possible 42180 (1395.38 seconds)
Cbc0010I After 5700 nodes, 5 on tree, 54272 best solution, best possible 42187 (1419.22 seconds)
Cbc0010I After 5800 nodes, 3 on tree, 54272 best solution, best possible 42194 (1443.82 seconds)
Cbc0010I After 5900 nodes, 6 on tree, 54272 best solution, best possible 42200 (1471.61 seconds)
Cbc0010I After 6000 nodes, 6 on tree, 54272 best solution, best possible 42207 (1495.19 seconds)
Cbc0010I After 6100 nodes, 1 on tree, 54272 best solution, best possible 42214 (1518.76 seconds)
Cbc0010I After 6200 nodes, 8 on tree, 54272 best solution, best possible 42220 (1541.90 seconds)
Cbc0010I After 6300 nodes, 1 on tree, 54272 best solution, best possible 42227 (1563.33 seconds)
Cbc0010I After 6400 nodes, 2 on tree, 54272 best solution, best possible 42233 (1587.26 seconds)
Cbc0010I After 6500 nodes, 1 on tree, 54272 best solution, best possible 42240 (1607.56 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 2658 rows 742 columns - 112 fixed gives 2019, 544 - still too large
Cbc0010I After 6600 nodes, 1 on tree, 54272 best solution, best possible 42246 (1629.98 seconds)
Cbc0010I After 6700 nodes, 10 on tree, 54272 best solution, best possible 42252 (1654.30 seconds)
Cbc0010I After 6800 nodes, 4 on tree, 54272 best solution, best possible 42258 (1675.25 seconds)
Cbc0010I After 6900 nodes, 7 on tree, 54272 best solution, best possible 42265 (1697.26 seconds)
Cbc0010I After 7000 nodes, 6 on tree, 54272 best solution, best possible 42271 (1720.48 seconds)
Cbc0010I After 7100 nodes, 6 on tree, 54272 best solution, best possible 42279 (1743.60 seconds)
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 765 rows 235 columns
Cbc0010I After 7200 nodes, 5 on tree, 54272 best solution, best possible 42285 (1768.24 seconds)
Cbc0010I After 7300 nodes, 5 on tree, 54272 best solution, best possible 42291 (1788.73 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 54272 (best possible 42291), took 4907005 iterations and 7348 nodes (1799.70 seconds)
Cbc0032I Strong branching done 37194 times (2418812 iterations), fathomed 445 nodes and fixed 7087 variables
Cbc0035I Maximum depth 316, 0 variables fixed on reduced cost
Cuts at root node changed objective from 35840 to 41984
Probing was tried 4854 times and created 173391 cuts of which 0 were active after adding rounds of cuts (20.205 seconds)
Gomory was tried 4407 times and created 3828 cuts of which 0 were active after adding rounds of cuts (17.856 seconds)
Knapsack was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
MixedIntegerRounding2 was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 4407 times and created 62572 cuts of which 0 were active after adding rounds of cuts (6.483 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
ImplicationCuts was tried 142 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

Objective value:                54272.00000000
Lower bound:                    42291.000
Gap:                            0.28
Enumerated nodes:               7348
Total iterations:               4907005
Time (CPU seconds):             1799.86
Time (Wallclock seconds):       1800.10

Total time (CPU seconds):       1799.88   (Wallclock seconds):       1800.13

