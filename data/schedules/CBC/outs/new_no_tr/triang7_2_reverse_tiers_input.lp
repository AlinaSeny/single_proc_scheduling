Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang7_2_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang7_2_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 227.878 - 0.17 seconds
Cgl0002I 115 variables fixed
Cgl0003I 0 fixed, 17 tightened bounds, 591 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 349 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 247 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 166 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 2708 rows, 939 columns (939 integer (910 of which binary)) and 9016 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 939 objects (939 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 455 integers unsatisfied sum - 133.573
Cbc0038I Pass   1: suminf.   57.59727 (459) obj. 354.379 iterations 1161
Cbc0038I Pass   2: suminf.   54.91894 (465) obj. 363.781 iterations 296
Cbc0038I Pass   3: suminf.   54.79105 (473) obj. 361.061 iterations 59
Cbc0038I Pass   4: suminf.   43.64738 (513) obj. 346.131 iterations 435
Cbc0038I Pass   5: suminf.   44.32754 (515) obj. 347.29 iterations 160
Cbc0038I Pass   6: suminf.   44.34602 (515) obj. 347.659 iterations 30
Cbc0038I Pass   7: suminf.   43.51475 (502) obj. 398.599 iterations 418
Cbc0038I Pass   8: suminf.   40.48075 (519) obj. 387.734 iterations 156
Cbc0038I Pass   9: suminf.   41.07742 (524) obj. 416.63 iterations 233
Cbc0038I Pass  10: suminf.   45.71761 (488) obj. 448.512 iterations 499
Cbc0038I Pass  11: suminf.   38.76183 (490) obj. 447.129 iterations 228
Cbc0038I Pass  12: suminf.   41.22346 (501) obj. 449.764 iterations 136
Cbc0038I Pass  13: suminf.   41.75413 (513) obj. 450.414 iterations 126
Cbc0038I Pass  14: suminf.   43.54082 (493) obj. 451.54 iterations 309
Cbc0038I Pass  15: suminf.   42.97107 (510) obj. 450.78 iterations 208
Cbc0038I Pass  16: suminf.   42.54251 (496) obj. 442.828 iterations 370
Cbc0038I Pass  17: suminf.   43.06963 (516) obj. 442.402 iterations 152
Cbc0038I Pass  18: suminf.   42.50460 (527) obj. 442.283 iterations 74
Cbc0038I Pass  19: suminf.   44.07839 (495) obj. 437.882 iterations 277
Cbc0038I Pass  20: suminf.   44.98062 (500) obj. 443.77 iterations 219
Cbc0038I Pass  21: suminf.   44.11087 (506) obj. 445.36 iterations 200
Cbc0038I Pass  22: suminf.   45.35224 (491) obj. 444.878 iterations 130
Cbc0038I Pass  23: suminf.   46.22384 (487) obj. 442.189 iterations 245
Cbc0038I Pass  24: suminf.   43.45369 (501) obj. 455.608 iterations 236
Cbc0038I Pass  25: suminf.   43.87926 (510) obj. 456.053 iterations 101
Cbc0038I Pass  26: suminf.   43.56682 (496) obj. 467.363 iterations 334
Cbc0038I Pass  27: suminf.   44.56226 (504) obj. 464.758 iterations 313
Cbc0038I Pass  28: suminf.   44.15865 (497) obj. 448.595 iterations 112
Cbc0038I Pass  29: suminf.   40.04934 (509) obj. 452.216 iterations 272
Cbc0038I Pass  30: suminf.   44.15399 (528) obj. 455.575 iterations 235
Cbc0038I Pass  31: suminf.   43.84293 (507) obj. 452.148 iterations 72
Cbc0038I Pass  32: suminf.   44.12269 (502) obj. 450.391 iterations 72
Cbc0038I Pass  33: suminf.   46.94096 (496) obj. 453.745 iterations 249
Cbc0038I Pass  34: suminf.   44.15865 (497) obj. 448.595 iterations 244
Cbc0038I Pass  35: suminf.   40.04934 (509) obj. 452.216 iterations 237
Cbc0038I Pass  36: suminf.   44.15399 (528) obj. 455.575 iterations 202
Cbc0038I Pass  37: suminf.   43.84293 (507) obj. 452.148 iterations 77
Cbc0038I Pass  38: suminf.   44.12269 (502) obj. 450.391 iterations 72
Cbc0038I Pass  39: suminf.   46.22958 (484) obj. 453.783 iterations 268
Cbc0038I Pass  40: suminf.   44.15865 (497) obj. 448.595 iterations 294
Cbc0038I Pass  41: suminf.   40.56970 (510) obj. 452.482 iterations 295
Cbc0038I Pass  42: suminf.   44.15399 (528) obj. 455.575 iterations 215
Cbc0038I Pass  43: suminf.   43.84293 (507) obj. 452.148 iterations 68
Cbc0038I Pass  44: suminf.   44.12269 (502) obj. 450.391 iterations 71
Cbc0038I Pass  45: suminf.   45.12380 (487) obj. 452.093 iterations 220
Cbc0038I Pass  46: suminf.   44.32481 (504) obj. 448.595 iterations 247
Cbc0038I Pass  47: suminf.   40.75640 (498) obj. 454.087 iterations 301
Cbc0038I Pass  48: suminf.   44.28893 (521) obj. 460.328 iterations 240
Cbc0038I Pass  49: suminf.   44.12269 (502) obj. 450.391 iterations 62
Cbc0038I Pass  50: suminf.   45.42120 (492) obj. 452.27 iterations 246
Cbc0038I Pass  51: suminf.   44.15865 (497) obj. 448.595 iterations 287
Cbc0038I Pass  52: suminf.   38.88626 (506) obj. 450.206 iterations 227
Cbc0038I Pass  53: suminf.   44.15399 (528) obj. 455.575 iterations 122
Cbc0038I Pass  54: suminf.   43.84293 (507) obj. 452.148 iterations 69
Cbc0038I Pass  55: suminf.   44.12269 (502) obj. 450.391 iterations 77
Cbc0038I Pass  56: suminf.   46.94096 (496) obj. 453.745 iterations 239
Cbc0038I Pass  57: suminf.   44.15865 (497) obj. 448.595 iterations 235
Cbc0038I Pass  58: suminf.   42.51449 (507) obj. 453.973 iterations 240
Cbc0038I Pass  59: suminf.   44.15399 (528) obj. 455.575 iterations 240
Cbc0038I Pass  60: suminf.   43.84293 (507) obj. 452.148 iterations 62
Cbc0038I Pass  61: suminf.   44.12269 (502) obj. 450.391 iterations 67
Cbc0038I Pass  62: suminf.   42.99709 (501) obj. 451.11 iterations 215
Cbc0038I Pass  63: suminf.   44.32481 (504) obj. 448.595 iterations 218
Cbc0038I Pass  64: suminf.   42.24763 (497) obj. 455.509 iterations 325
Cbc0038I Pass  65: suminf.   44.28893 (521) obj. 460.328 iterations 255
Cbc0038I Pass  66: suminf.   44.12269 (502) obj. 450.391 iterations 84
Cbc0038I Pass  67: suminf.   46.23497 (492) obj. 453.767 iterations 258
Cbc0038I Pass  68: suminf.   44.15865 (497) obj. 448.595 iterations 277
Cbc0038I Pass  69: suminf.   40.35358 (511) obj. 452.274 iterations 310
Cbc0038I Pass  70: suminf.   44.15399 (528) obj. 455.575 iterations 238
Cbc0038I Pass  71: suminf.   43.84293 (507) obj. 452.148 iterations 67
Cbc0038I Pass  72: suminf.   44.12269 (502) obj. 450.391 iterations 64
Cbc0038I Pass  73: suminf.   46.76709 (497) obj. 453.74 iterations 243
Cbc0038I Pass  74: suminf.   44.15865 (497) obj. 448.595 iterations 223
Cbc0038I Pass  75: suminf.   42.72111 (505) obj. 454.101 iterations 292
Cbc0038I Pass  76: suminf.   44.28893 (521) obj. 460.328 iterations 223
Cbc0038I Pass  77: suminf.   44.12269 (502) obj. 450.391 iterations 70
Cbc0038I Pass  78: suminf.   46.57047 (487) obj. 453.777 iterations 237
Cbc0038I Pass  79: suminf.   44.15865 (497) obj. 448.595 iterations 230
Cbc0038I Pass  80: suminf.   43.07652 (512) obj. 454.182 iterations 254
Cbc0038I Pass  81: suminf.   44.28893 (521) obj. 460.328 iterations 198
Cbc0038I Pass  82: suminf.   44.12269 (502) obj. 450.391 iterations 77
Cbc0038I Pass  83: suminf.   45.42120 (492) obj. 452.27 iterations 267
Cbc0038I Pass  84: suminf.   44.15865 (497) obj. 448.595 iterations 299
Cbc0038I Pass  85: suminf.   40.28167 (512) obj. 452.347 iterations 352
Cbc0038I Pass  86: suminf.   44.15399 (528) obj. 455.575 iterations 217
Cbc0038I Pass  87: suminf.   43.84293 (507) obj. 452.148 iterations 70
Cbc0038I Pass  88: suminf.   44.12269 (502) obj. 450.391 iterations 65
Cbc0038I Pass  89: suminf.   43.36780 (501) obj. 452.565 iterations 192
Cbc0038I Pass  90: suminf.   44.32481 (504) obj. 448.595 iterations 155
Cbc0038I Pass  91: suminf.   44.33988 (499) obj. 452.849 iterations 179
Cbc0038I Pass  92: suminf.   44.15865 (497) obj. 448.595 iterations 189
Cbc0038I Pass  93: suminf.   41.98646 (499) obj. 453.373 iterations 158
Cbc0038I Pass  94: suminf.   63.05850 (513) obj. 478.111 iterations 922
Cbc0038I Pass  95: suminf.   44.43530 (476) obj. 482.328 iterations 535
Cbc0038I Pass  96: suminf.   42.47380 (473) obj. 485.086 iterations 136
Cbc0038I Pass  97: suminf.   42.20445 (469) obj. 513.942 iterations 64
Cbc0038I Pass  98: suminf.   45.56479 (442) obj. 519.361 iterations 280
Cbc0038I Pass  99: suminf.   43.93832 (452) obj. 520.125 iterations 133
Cbc0038I Pass 100: suminf.   70.52148 (528) obj. 613.778 iterations 833
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2708 rows 939 columns, reduced to 2502 rows 840 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.68 seconds)
Cbc0038I After 3.68 seconds - Feasibility pump exiting - took 3.18 seconds
Cbc0031I 57 added rows had average density of 119.80702
Cbc0013I At root node, 57 cuts changed objective from 227.87755 to 258 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 164 row cuts average 595.5 elements, 0 column cuts (0 active)  in 0.280 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 149 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 29 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 258 (7.59 seconds)
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 270 (46.25 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 270 (69.28 seconds)
Cbc0010I After 300 nodes, 9 on tree, 1e+50 best solution, best possible 272 (95.48 seconds)
Cbc0010I After 400 nodes, 16 on tree, 1e+50 best solution, best possible 272 (118.21 seconds)
Cbc0010I After 500 nodes, 27 on tree, 1e+50 best solution, best possible 272 (132.91 seconds)
Cbc0010I After 600 nodes, 26 on tree, 1e+50 best solution, best possible 272 (157.34 seconds)
Cbc0010I After 700 nodes, 19 on tree, 1e+50 best solution, best possible 272 (179.40 seconds)
Cbc0010I After 800 nodes, 5 on tree, 1e+50 best solution, best possible 273 (205.55 seconds)
Cbc0010I After 900 nodes, 6 on tree, 1e+50 best solution, best possible 273 (231.15 seconds)
Cbc0010I After 1000 nodes, 6 on tree, 1e+50 best solution, best possible 273 (255.98 seconds)
Cbc0010I After 1100 nodes, 8 on tree, 1e+50 best solution, best possible 274 (278.25 seconds)
Cbc0010I After 1200 nodes, 20 on tree, 1e+50 best solution, best possible 274 (296.93 seconds)
Cbc0010I After 1300 nodes, 22 on tree, 1e+50 best solution, best possible 274 (313.30 seconds)
Cbc0010I After 1400 nodes, 12 on tree, 1e+50 best solution, best possible 274 (332.41 seconds)
Cbc0010I After 1500 nodes, 13 on tree, 1e+50 best solution, best possible 274 (347.33 seconds)
Cbc0010I After 1600 nodes, 11 on tree, 1e+50 best solution, best possible 274 (363.53 seconds)
Cbc0010I After 1700 nodes, 2 on tree, 1e+50 best solution, best possible 274 (377.80 seconds)
Cbc0010I After 1800 nodes, 15 on tree, 1e+50 best solution, best possible 275 (390.66 seconds)
Cbc0010I After 1900 nodes, 11 on tree, 1e+50 best solution, best possible 276 (405.88 seconds)
Cbc0010I After 2000 nodes, 12 on tree, 1e+50 best solution, best possible 276 (419.23 seconds)
Cbc0010I After 2100 nodes, 6 on tree, 1e+50 best solution, best possible 277 (431.05 seconds)
Cbc0010I After 2200 nodes, 19 on tree, 1e+50 best solution, best possible 279 (442.00 seconds)
Cbc0010I After 2300 nodes, 15 on tree, 1e+50 best solution, best possible 279 (454.32 seconds)
Cbc0010I After 2400 nodes, 11 on tree, 1e+50 best solution, best possible 279 (470.66 seconds)
Cbc0010I After 2500 nodes, 4 on tree, 1e+50 best solution, best possible 279 (485.41 seconds)
Cbc0010I After 2600 nodes, 12 on tree, 1e+50 best solution, best possible 280 (499.72 seconds)
Cbc0010I After 2700 nodes, 14 on tree, 1e+50 best solution, best possible 281 (509.90 seconds)
Cbc0010I After 2800 nodes, 12 on tree, 1e+50 best solution, best possible 282 (520.76 seconds)
Cbc0010I After 2900 nodes, 5 on tree, 1e+50 best solution, best possible 282 (533.54 seconds)
Cbc0010I After 3000 nodes, 8 on tree, 1e+50 best solution, best possible 282 (545.15 seconds)
Cbc0010I After 3100 nodes, 4 on tree, 1e+50 best solution, best possible 283 (561.60 seconds)
Cbc0010I After 3200 nodes, 23 on tree, 1e+50 best solution, best possible 284 (571.58 seconds)
Cbc0010I After 3300 nodes, 27 on tree, 1e+50 best solution, best possible 284 (582.95 seconds)
Cbc0010I After 3400 nodes, 22 on tree, 1e+50 best solution, best possible 284 (598.10 seconds)
Cbc0010I After 3500 nodes, 19 on tree, 1e+50 best solution, best possible 284 (609.58 seconds)
Cbc0010I After 3600 nodes, 11 on tree, 1e+50 best solution, best possible 284 (627.46 seconds)
Cbc0010I After 3700 nodes, 17 on tree, 1e+50 best solution, best possible 285 (642.81 seconds)
Cbc0010I After 3800 nodes, 6 on tree, 1e+50 best solution, best possible 286 (659.56 seconds)
Cbc0010I After 3900 nodes, 4 on tree, 1e+50 best solution, best possible 287 (675.37 seconds)
Cbc0010I After 4000 nodes, 7 on tree, 1e+50 best solution, best possible 289 (686.66 seconds)
Cbc0010I After 4100 nodes, 10 on tree, 1e+50 best solution, best possible 289 (698.44 seconds)
Cbc0010I After 4200 nodes, 6 on tree, 1e+50 best solution, best possible 289 (711.36 seconds)
Cbc0010I After 4300 nodes, 6 on tree, 1e+50 best solution, best possible 289 (725.13 seconds)
Cbc0010I After 4400 nodes, 18 on tree, 1e+50 best solution, best possible 290 (735.51 seconds)
Cbc0010I After 4500 nodes, 18 on tree, 1e+50 best solution, best possible 290 (746.22 seconds)
Cbc0010I After 4600 nodes, 17 on tree, 1e+50 best solution, best possible 290 (757.85 seconds)
Cbc0010I After 4700 nodes, 14 on tree, 1e+50 best solution, best possible 290 (772.95 seconds)
Cbc0010I After 4800 nodes, 19 on tree, 1e+50 best solution, best possible 290 (784.94 seconds)
Cbc0010I After 4900 nodes, 6 on tree, 1e+50 best solution, best possible 290 (796.77 seconds)
Cbc0010I After 5000 nodes, 24 on tree, 1e+50 best solution, best possible 291 (806.39 seconds)
Cbc0010I After 5100 nodes, 19 on tree, 1e+50 best solution, best possible 291 (817.04 seconds)
Cbc0010I After 5200 nodes, 19 on tree, 1e+50 best solution, best possible 291 (828.70 seconds)
Cbc0010I After 5300 nodes, 18 on tree, 1e+50 best solution, best possible 291 (842.37 seconds)
Cbc0010I After 5400 nodes, 16 on tree, 1e+50 best solution, best possible 291 (857.40 seconds)
Cbc0010I After 5500 nodes, 11 on tree, 1e+50 best solution, best possible 291 (870.43 seconds)
Cbc0010I After 5600 nodes, 27 on tree, 1e+50 best solution, best possible 291 (883.91 seconds)
Cbc0010I After 5700 nodes, 3 on tree, 1e+50 best solution, best possible 292 (897.72 seconds)
Cbc0010I After 5800 nodes, 20 on tree, 1e+50 best solution, best possible 292 (907.14 seconds)
Cbc0010I After 5900 nodes, 18 on tree, 1e+50 best solution, best possible 292 (919.51 seconds)
Cbc0010I After 6000 nodes, 30 on tree, 1e+50 best solution, best possible 292 (927.57 seconds)
Cbc0010I After 6100 nodes, 29 on tree, 1e+50 best solution, best possible 292 (937.25 seconds)
Cbc0010I After 6200 nodes, 12 on tree, 1e+50 best solution, best possible 292 (947.06 seconds)
Cbc0010I After 6300 nodes, 4 on tree, 1e+50 best solution, best possible 292 (957.86 seconds)
Cbc0010I After 6400 nodes, 19 on tree, 1e+50 best solution, best possible 293 (968.94 seconds)
Cbc0010I After 6500 nodes, 30 on tree, 1e+50 best solution, best possible 293 (975.63 seconds)
Cbc0010I After 6600 nodes, 28 on tree, 1e+50 best solution, best possible 293 (986.92 seconds)
Cbc0010I After 6700 nodes, 21 on tree, 1e+50 best solution, best possible 293 (1000.35 seconds)
Cbc0010I After 6800 nodes, 17 on tree, 1e+50 best solution, best possible 293 (1014.66 seconds)
Cbc0010I After 6900 nodes, 15 on tree, 1e+50 best solution, best possible 293 (1027.22 seconds)
Cbc0010I After 7000 nodes, 8 on tree, 1e+50 best solution, best possible 293 (1038.38 seconds)
Cbc0010I After 7100 nodes, 7 on tree, 1e+50 best solution, best possible 294 (1053.59 seconds)
Cbc0010I After 7200 nodes, 20 on tree, 1e+50 best solution, best possible 294 (1064.86 seconds)
Cbc0010I After 7300 nodes, 16 on tree, 1e+50 best solution, best possible 294 (1076.12 seconds)
Cbc0010I After 7400 nodes, 15 on tree, 1e+50 best solution, best possible 295 (1087.29 seconds)
Cbc0010I After 7500 nodes, 3 on tree, 1e+50 best solution, best possible 295 (1099.84 seconds)
Cbc0010I After 7600 nodes, 2 on tree, 1e+50 best solution, best possible 295 (1110.49 seconds)
Cbc0010I After 7700 nodes, 6 on tree, 1e+50 best solution, best possible 297 (1123.31 seconds)
Cbc0010I After 7800 nodes, 2 on tree, 1e+50 best solution, best possible 297 (1134.13 seconds)
Cbc0010I After 7900 nodes, 13 on tree, 1e+50 best solution, best possible 298 (1143.01 seconds)
Cbc0010I After 8000 nodes, 10 on tree, 1e+50 best solution, best possible 299 (1154.68 seconds)
Cbc0010I After 8100 nodes, 13 on tree, 1e+50 best solution, best possible 299 (1164.89 seconds)
Cbc0010I After 8200 nodes, 5 on tree, 1e+50 best solution, best possible 299 (1175.42 seconds)
Cbc0010I After 8300 nodes, 14 on tree, 1e+50 best solution, best possible 300 (1185.38 seconds)
Cbc0010I After 8400 nodes, 7 on tree, 1e+50 best solution, best possible 300 (1194.19 seconds)
Cbc0010I After 8500 nodes, 4 on tree, 1e+50 best solution, best possible 300 (1204.90 seconds)
Cbc0010I After 8600 nodes, 30 on tree, 1e+50 best solution, best possible 301 (1213.95 seconds)
Cbc0010I After 8700 nodes, 11 on tree, 1e+50 best solution, best possible 301 (1226.05 seconds)
Cbc0010I After 8800 nodes, 9 on tree, 1e+50 best solution, best possible 302 (1236.54 seconds)
Cbc0010I After 8900 nodes, 17 on tree, 1e+50 best solution, best possible 302 (1246.93 seconds)
Cbc0010I After 9000 nodes, 7 on tree, 1e+50 best solution, best possible 302 (1255.61 seconds)
Cbc0010I After 9100 nodes, 17 on tree, 1e+50 best solution, best possible 302 (1264.03 seconds)
Cbc0010I After 9200 nodes, 18 on tree, 1e+50 best solution, best possible 303 (1271.29 seconds)
Cbc0010I After 9300 nodes, 22 on tree, 1e+50 best solution, best possible 303 (1280.01 seconds)
Cbc0010I After 9400 nodes, 28 on tree, 1e+50 best solution, best possible 303 (1289.74 seconds)
Cbc0010I After 9500 nodes, 27 on tree, 1e+50 best solution, best possible 303 (1298.87 seconds)
Cbc0010I After 9600 nodes, 22 on tree, 1e+50 best solution, best possible 303 (1308.32 seconds)
Cbc0010I After 9700 nodes, 31 on tree, 1e+50 best solution, best possible 303 (1316.78 seconds)
Cbc0010I After 9800 nodes, 24 on tree, 1e+50 best solution, best possible 303 (1326.47 seconds)
Cbc0010I After 9900 nodes, 25 on tree, 1e+50 best solution, best possible 303 (1337.54 seconds)
Cbc0010I After 10000 nodes, 28 on tree, 1e+50 best solution, best possible 303 (1345.24 seconds)
Cbc0010I After 10100 nodes, 27 on tree, 1e+50 best solution, best possible 303 (1355.82 seconds)
Cbc0010I After 10200 nodes, 19 on tree, 1e+50 best solution, best possible 303 (1366.77 seconds)
Cbc0010I After 10300 nodes, 18 on tree, 1e+50 best solution, best possible 303 (1378.73 seconds)
Cbc0010I After 10400 nodes, 24 on tree, 1e+50 best solution, best possible 303 (1389.95 seconds)
Cbc0010I After 10500 nodes, 14 on tree, 1e+50 best solution, best possible 303 (1400.54 seconds)
Cbc0010I After 10600 nodes, 16 on tree, 1e+50 best solution, best possible 303 (1412.32 seconds)
Cbc0010I After 10700 nodes, 18 on tree, 1e+50 best solution, best possible 303 (1421.05 seconds)
Cbc0010I After 10800 nodes, 8 on tree, 1e+50 best solution, best possible 303 (1429.65 seconds)
Cbc0010I After 10900 nodes, 5 on tree, 1e+50 best solution, best possible 304 (1438.29 seconds)
Cbc0010I After 11000 nodes, 30 on tree, 1e+50 best solution, best possible 304 (1448.07 seconds)
Cbc0010I After 11100 nodes, 50 on tree, 1e+50 best solution, best possible 304 (1458.00 seconds)
Cbc0010I After 11200 nodes, 62 on tree, 1e+50 best solution, best possible 304 (1469.01 seconds)
Cbc0010I After 11300 nodes, 64 on tree, 1e+50 best solution, best possible 304 (1480.47 seconds)
Cbc0010I After 11400 nodes, 68 on tree, 1e+50 best solution, best possible 304 (1491.12 seconds)
Cbc0010I After 11500 nodes, 60 on tree, 1e+50 best solution, best possible 304 (1500.26 seconds)
Cbc0010I After 11600 nodes, 67 on tree, 1e+50 best solution, best possible 304 (1507.98 seconds)
Cbc0010I After 11700 nodes, 68 on tree, 1e+50 best solution, best possible 304 (1516.89 seconds)
Cbc0010I After 11800 nodes, 82 on tree, 1e+50 best solution, best possible 304 (1523.91 seconds)
Cbc0010I After 11900 nodes, 102 on tree, 1e+50 best solution, best possible 304 (1532.63 seconds)
Cbc0010I After 12000 nodes, 102 on tree, 1e+50 best solution, best possible 304 (1542.62 seconds)
Cbc0010I After 12100 nodes, 93 on tree, 1e+50 best solution, best possible 304 (1554.18 seconds)
Cbc0010I After 12200 nodes, 73 on tree, 1e+50 best solution, best possible 304 (1566.98 seconds)
Cbc0010I After 12300 nodes, 55 on tree, 1e+50 best solution, best possible 304 (1579.34 seconds)
Cbc0010I After 12400 nodes, 43 on tree, 1e+50 best solution, best possible 304 (1591.90 seconds)
Cbc0010I After 12500 nodes, 24 on tree, 1e+50 best solution, best possible 304 (1604.30 seconds)
Cbc0010I After 12600 nodes, 16 on tree, 1e+50 best solution, best possible 305 (1617.21 seconds)
Cbc0004I Integer solution of 305 found after 6718690 iterations and 12612 nodes (1617.71 seconds)
Cbc0001I Search completed - best objective 305, took 6718690 iterations and 12612 nodes (1617.71 seconds)
Cbc0032I Strong branching done 40056 times (2719001 iterations), fathomed 988 nodes and fixed 5676 variables
Cbc0035I Maximum depth 89, 0 variables fixed on reduced cost
Cuts at root node changed objective from 227.878 to 258
Probing was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
Gomory was tried 8277 times and created 5024 cuts of which 0 were active after adding rounds of cuts (18.319 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 8277 times and created 79342 cuts of which 0 were active after adding rounds of cuts (7.764 seconds)
ZeroHalf was tried 8279 times and created 10947 cuts of which 0 were active after adding rounds of cuts (79.193 seconds)

Result - Optimal solution found

Objective value:                305.00000000
Enumerated nodes:               12612
Total iterations:               6718690
Time (CPU seconds):             1617.79
Time (Wallclock seconds):       1624.48

Total time (CPU seconds):       1617.81   (Wallclock seconds):       1624.49

