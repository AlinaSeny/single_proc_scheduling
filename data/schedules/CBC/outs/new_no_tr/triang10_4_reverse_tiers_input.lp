Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang10_4_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang10_4_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 291.006 - 20.97 seconds
Cgl0002I 253 variables fixed
Cgl0003I 0 fixed, 30 tightened bounds, 2403 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 34 tightened bounds, 1755 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 29 tightened bounds, 1054 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 28 tightened bounds, 925 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 568 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 21 tightened bounds, 613 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 388 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 233 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 171 strengthened rows, 0 substitutions
Cgl0004I processed model has 12052 rows, 4026 columns (4026 integer (3970 of which binary)) and 40747 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 4026 objects (4026 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 2043 integers unsatisfied sum - 610.867
Cbc0038I Pass   1: (38.62 seconds) suminf.  117.68397 (647) obj. 592.169 iterations 9561
Cbc0038I Pass   2: (39.45 seconds) suminf.   58.53883 (614) obj. 597.637 iterations 1607
Cbc0038I Pass   3: (39.66 seconds) suminf.   55.38612 (578) obj. 600.767 iterations 274
Cbc0038I Pass   4: (40.00 seconds) suminf.   53.59235 (565) obj. 699.711 iterations 538
Cbc0038I Pass   5: (40.13 seconds) suminf.   51.37570 (560) obj. 711.192 iterations 179
Cbc0038I Pass   6: (40.17 seconds) suminf.   51.67916 (558) obj. 711.222 iterations 54
Cbc0038I Pass   7: (40.40 seconds) suminf.   51.66465 (551) obj. 702.389 iterations 334
Cbc0038I Pass   8: (40.60 seconds) suminf.   50.48002 (554) obj. 711.177 iterations 296
Cbc0038I Pass   9: (40.63 seconds) suminf.   50.34176 (546) obj. 711.209 iterations 29
Cbc0038I Pass  10: (40.72 seconds) suminf.   51.33533 (549) obj. 702.407 iterations 137
Cbc0038I Pass  11: (41.84 seconds) suminf.   78.22069 (662) obj. 706.587 iterations 2312
Cbc0038I Pass  12: (42.57 seconds) suminf.   67.38992 (689) obj. 670.713 iterations 1462
Cbc0038I Pass  13: (42.59 seconds) suminf.   67.41133 (690) obj. 670.724 iterations 15
Cbc0038I Pass  14: (43.13 seconds) suminf.   58.63257 (624) obj. 646.844 iterations 875
Cbc0038I Pass  15: (43.43 seconds) suminf.   57.25724 (616) obj. 644.188 iterations 420
Cbc0038I Pass  16: (44.04 seconds) suminf.   53.46279 (612) obj. 597.862 iterations 1066
Cbc0038I Pass  17: (44.20 seconds) suminf.   51.97548 (633) obj. 599.193 iterations 212
Cbc0038I Pass  18: (44.28 seconds) suminf.   51.37789 (617) obj. 599.192 iterations 95
Cbc0038I Pass  19: (44.74 seconds) suminf.   48.86774 (574) obj. 597.95 iterations 766
Cbc0038I Pass  20: (44.89 seconds) suminf.   46.71195 (582) obj. 598.398 iterations 210
Cbc0038I Pass  21: (45.11 seconds) suminf.   47.60776 (569) obj. 597.955 iterations 313
Cbc0038I Pass  22: (45.28 seconds) suminf.   46.50374 (583) obj. 598.401 iterations 222
Cbc0038I Pass  23: (45.46 seconds) suminf.   48.78066 (600) obj. 599.36 iterations 221
Cbc0038I Pass  24: (45.66 seconds) suminf.   46.35271 (572) obj. 599.371 iterations 248
Cbc0038I Pass  25: (46.12 seconds) suminf.   40.81466 (548) obj. 627.737 iterations 802
Cbc0038I Pass  26: (46.30 seconds) suminf.   39.41678 (519) obj. 627.822 iterations 252
Cbc0038I Pass  27: (46.43 seconds) suminf.   38.19678 (517) obj. 610.824 iterations 202
Cbc0038I Pass  28: (46.50 seconds) suminf.   38.37525 (521) obj. 610.419 iterations 95
Cbc0038I Pass  29: (46.87 seconds) suminf.   36.23280 (525) obj. 603.481 iterations 673
Cbc0038I Pass  30: (46.90 seconds) suminf.   36.23280 (525) obj. 603.481 iterations 18
Cbc0038I Pass  31: (47.20 seconds) suminf.   36.76833 (517) obj. 628.423 iterations 479
Cbc0038I Pass  32: (47.22 seconds) suminf.   36.76833 (517) obj. 628.423 iterations 20
Cbc0038I Pass  33: (47.52 seconds) suminf.   32.23202 (495) obj. 594.587 iterations 460
Cbc0038I Pass  34: (47.62 seconds) suminf.   31.59434 (492) obj. 594.544 iterations 149
Cbc0038I Pass  35: (47.82 seconds) suminf.   28.96217 (466) obj. 592.87 iterations 271
Cbc0038I Pass  36: (47.85 seconds) suminf.   28.59880 (469) obj. 592.823 iterations 28
Cbc0038I Pass  37: (47.99 seconds) suminf.   28.09028 (457) obj. 592.869 iterations 222
Cbc0038I Pass  38: (48.01 seconds) suminf.   27.70952 (454) obj. 592.822 iterations 18
Cbc0038I Pass  39: (48.28 seconds) suminf.   25.69067 (442) obj. 600.852 iterations 411
Cbc0038I Pass  40: (48.44 seconds) suminf.   24.20610 (457) obj. 601.82 iterations 238
Cbc0038I Pass  41: (48.73 seconds) suminf.   20.56163 (418) obj. 605.944 iterations 541
Cbc0038I Pass  42: (48.78 seconds) suminf.   19.48856 (427) obj. 605.944 iterations 58
Cbc0038I Pass  43: (49.16 seconds) suminf.   17.38625 (386) obj. 601.861 iterations 667
Cbc0038I Pass  44: (49.32 seconds) suminf.   17.55863 (388) obj. 601.864 iterations 255
Cbc0038I Pass  45: (49.59 seconds) suminf.   17.06538 (366) obj. 595.767 iterations 558
Cbc0038I Pass  46: (49.82 seconds) suminf.   15.53086 (371) obj. 601.862 iterations 466
Cbc0038I Pass  47: (50.17 seconds) suminf.   22.65883 (372) obj. 598.333 iterations 703
Cbc0038I Pass  48: (50.40 seconds) suminf.   16.67164 (386) obj. 604.007 iterations 391
Cbc0038I Pass  49: (50.56 seconds) suminf.   15.28690 (384) obj. 604.765 iterations 256
Cbc0038I Pass  50: (50.84 seconds) suminf.   14.87409 (332) obj. 599.179 iterations 497
Cbc0038I Pass  51: (50.98 seconds) suminf.   15.19407 (332) obj. 599.177 iterations 255
Cbc0038I Pass  52: (51.17 seconds) suminf.   12.42515 (323) obj. 599.179 iterations 320
Cbc0038I Pass  53: (51.64 seconds) suminf.   11.30486 (298) obj. 596.697 iterations 1009
Cbc0038I Pass  54: (51.77 seconds) suminf.   11.00029 (292) obj. 596.696 iterations 218
Cbc0038I Pass  55: (51.88 seconds) suminf.    9.23107 (262) obj. 597.22 iterations 179
Cbc0038I Pass  56: (51.90 seconds) suminf.    9.16101 (261) obj. 597.22 iterations 18
Cbc0038I Pass  57: (52.17 seconds) suminf.   10.22686 (270) obj. 595.402 iterations 697
Cbc0038I Pass  58: (52.26 seconds) suminf.    9.53977 (280) obj. 600.101 iterations 192
Cbc0038I Pass  59: (52.37 seconds) suminf.   10.31181 (265) obj. 599.867 iterations 272
Cbc0038I Pass  60: (52.42 seconds) suminf.   10.21392 (281) obj. 599.86 iterations 126
Cbc0038I Pass  61: (52.90 seconds) suminf.   13.37404 (240) obj. 600.292 iterations 1074
Cbc0038I Pass  62: (53.13 seconds) suminf.   11.66051 (265) obj. 600.177 iterations 480
Cbc0038I Pass  63: (53.40 seconds) suminf.   10.22738 (231) obj. 599.996 iterations 685
Cbc0038I Pass  64: (53.49 seconds) suminf.    9.41581 (248) obj. 599.994 iterations 236
Cbc0038I Pass  65: (54.35 seconds) suminf.   10.48146 (214) obj. 599.974 iterations 1835
Cbc0038I Pass  66: (54.62 seconds) suminf.    9.84002 (242) obj. 599.978 iterations 586
Cbc0038I Pass  67: (55.00 seconds) suminf.   12.54366 (253) obj. 599.983 iterations 737
Cbc0038I Pass  68: (55.09 seconds) suminf.    9.76248 (274) obj. 600.174 iterations 201
Cbc0038I Pass  69: (55.42 seconds) suminf.   11.53108 (217) obj. 599.967 iterations 821
Cbc0038I Pass  70: (56.35 seconds) suminf.   10.47699 (231) obj. 604.071 iterations 1699
Cbc0038I Pass  71: (57.55 seconds) suminf.   14.20009 (211) obj. 603.766 iterations 2663
Cbc0038I Pass  72: (57.92 seconds) suminf.   10.08776 (197) obj. 636.669 iterations 854
Cbc0038I Pass  73: (58.19 seconds) suminf.    7.33102 (182) obj. 636.853 iterations 528
Cbc0038I Pass  74: (58.42 seconds) suminf.   10.44433 (193) obj. 598.889 iterations 563
Cbc0038I Pass  75: (59.16 seconds) suminf.    8.07347 (194) obj. 598.708 iterations 1424
Cbc0038I Pass  76: (59.71 seconds) suminf.    8.36369 (186) obj. 635.78 iterations 1125
Cbc0038I Pass  77: (59.88 seconds) suminf.    6.02210 (176) obj. 636.605 iterations 317
Cbc0038I Pass  78: (60.10 seconds) suminf.    5.06199 (181) obj. 629.029 iterations 549
Cbc0038I Pass  79: (60.34 seconds) suminf.    6.54258 (114) obj. 584.741 iterations 554
Cbc0038I Pass  80: (60.41 seconds) suminf.    6.54258 (114) obj. 584.741 iterations 160
Cbc0038I Pass  81: (60.70 seconds) suminf.    6.48621 (115) obj. 529.478 iterations 661
Cbc0038I Pass  82: (60.77 seconds) suminf.    4.62339 (114) obj. 584.741 iterations 138
Cbc0038I Pass  83: (60.79 seconds) suminf.    4.62339 (114) obj. 584.741 iterations 13
Cbc0038I Pass  84: (60.93 seconds) suminf.    4.66131 (111) obj. 582.893 iterations 418
Cbc0038I Pass  85: (61.14 seconds) suminf.    4.33637 (117) obj. 584.732 iterations 367
Cbc0038I Pass  86: (62.24 seconds) suminf.    4.14671 (90) obj. 521.374 iterations 2824
Cbc0038I Pass  87: (62.27 seconds) suminf.    4.14671 (90) obj. 521.374 iterations 17
Cbc0038I Pass  88: (62.52 seconds) suminf.    9.83038 (88) obj. 521.364 iterations 457
Cbc0038I Pass  89: (63.11 seconds) suminf.    4.47981 (65) obj. 521.369 iterations 953
Cbc0038I Pass  90: (63.19 seconds) suminf.    4.67843 (64) obj. 521.369 iterations 123
Cbc0038I Pass  91: (63.63 seconds) suminf.    4.20386 (60) obj. 557.497 iterations 774
Cbc0038I Pass  92: (65.25 seconds) suminf.    4.48977 (99) obj. 568.636 iterations 3354
Cbc0038I Pass  93: (65.45 seconds) suminf.    0.73337 (40) obj. 568.636 iterations 254
Cbc0038I Pass  94: (65.47 seconds) suminf.    0.73337 (40) obj. 568.636 iterations 16
Cbc0038I Pass  95: (66.70 seconds) suminf.    2.05472 (32) obj. 558 iterations 2001
Cbc0038I Pass  96: (66.72 seconds) suminf.    2.05472 (32) obj. 558 iterations 6
Cbc0038I Pass  97: (68.18 seconds) suminf.    0.35949 (53) obj. 567.994 iterations 2070
Cbc0038I Pass  98: (68.19 seconds) suminf.    0.57379 (52) obj. 568.77 iterations 2
Cbc0038I Pass  99: (71.42 seconds) suminf.    0.93450 (20) obj. 613.323 iterations 4313
Cbc0038I Pass 100: (72.65 seconds) suminf.   27.42998 (248) obj. 641.058 iterations 2774
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 12052 rows 4026 columns, reduced to 9086 rows 2628 columns - too large
Cbc0038I Mini branch and bound did not improve solution (73.65 seconds)
Cbc0038I After 73.65 seconds - Feasibility pump exiting - took 41.50 seconds
Cbc0031I 80 added rows had average density of 4.45
Cbc0013I At root node, 80 cuts changed objective from 292.40806 to 387 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 4.3 elements, 3 column cuts (3 active)  in 0.525 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 122 row cuts average 8.0 elements, 0 column cuts (0 active)  in 3.558 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 305 row cuts average 4.8 elements, 0 column cuts (0 active)  in 1.746 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 87.0 elements, 0 column cuts (0 active)  in 0.374 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 387 (202.36 seconds)
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 387 (521.20 seconds)
Cbc0010I After 200 nodes, 75 on tree, 1e+50 best solution, best possible 387 (781.48 seconds)
Cbc0010I After 300 nodes, 91 on tree, 1e+50 best solution, best possible 387 (1003.60 seconds)
Cbc0010I After 400 nodes, 126 on tree, 1e+50 best solution, best possible 387 (1274.51 seconds)
Cbc0010I After 500 nodes, 154 on tree, 1e+50 best solution, best possible 387 (1599.50 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 387), took 1090496 iterations and 564 nodes (1789.39 seconds)
Cbc0032I Strong branching done 8430 times (767313 iterations), fathomed 16 nodes and fixed 262 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 292.408 to 387
Probing was tried 496 times and created 13575 cuts of which 0 were active after adding rounds of cuts (3.102 seconds)
Gomory was tried 486 times and created 171 cuts of which 0 were active after adding rounds of cuts (7.741 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.039 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.161 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
TwoMirCuts was tried 486 times and created 2687 cuts of which 0 were active after adding rounds of cuts (3.271 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.374 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    387.000
Enumerated nodes:               564
Total iterations:               1090496
Time (CPU seconds):             1789.39
Time (Wallclock seconds):       1790.04

Total time (CPU seconds):       1789.43   (Wallclock seconds):       1790.09

