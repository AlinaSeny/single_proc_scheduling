Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump45_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump45_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 34133.3 - 2.55 seconds
Cgl0002I 167 variables fixed
Cgl0003I 0 fixed, 14 tightened bounds, 977 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 111 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 7057 rows, 2103 columns (2103 integer (2057 of which binary)) and 24237 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2103 objects (2103 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1251 integers unsatisfied sum - 441.717
Cbc0038I Pass   1: (4.82 seconds) suminf.  226.64307 (1197) obj. 64510.3 iterations 4938
Cbc0038I Pass   2: (6.06 seconds) suminf.  129.87314 (951) obj. 73803.4 iterations 3412
Cbc0038I Pass   3: (6.55 seconds) suminf.  111.67990 (876) obj. 80419.1 iterations 1463
Cbc0038I Pass   4: (6.77 seconds) suminf.  102.59573 (878) obj. 81310.8 iterations 581
Cbc0038I Pass   5: (7.05 seconds) suminf.   98.22990 (913) obj. 80740.7 iterations 812
Cbc0038I Pass   6: (7.09 seconds) suminf.   97.74531 (906) obj. 80821 iterations 66
Cbc0038I Pass   7: (7.22 seconds) suminf.   96.91286 (887) obj. 80841.7 iterations 307
Cbc0038I Pass   8: (7.45 seconds) suminf.   85.67044 (875) obj. 81185.8 iterations 676
Cbc0038I Pass   9: (7.60 seconds) suminf.   85.13827 (887) obj. 81118.5 iterations 427
Cbc0038I Pass  10: (7.90 seconds) suminf.   85.23467 (893) obj. 81048.5 iterations 824
Cbc0038I Pass  11: (8.02 seconds) suminf.   81.29041 (899) obj. 80521.7 iterations 286
Cbc0038I Pass  12: (8.10 seconds) suminf.   81.46724 (881) obj. 80910.8 iterations 192
Cbc0038I Pass  13: (8.40 seconds) suminf.   74.67347 (826) obj. 80819.1 iterations 901
Cbc0038I Pass  14: (8.52 seconds) suminf.   75.48361 (804) obj. 81089.7 iterations 298
Cbc0038I Pass  15: (8.74 seconds) suminf.   73.30628 (805) obj. 80198.8 iterations 656
Cbc0038I Pass  16: (8.86 seconds) suminf.   73.84979 (796) obj. 79748 iterations 312
Cbc0038I Pass  17: (8.95 seconds) suminf.   74.83655 (871) obj. 79777 iterations 218
Cbc0038I Pass  18: (9.32 seconds) suminf.   67.12376 (764) obj. 80442.9 iterations 1211
Cbc0038I Pass  19: (9.60 seconds) suminf.   62.24490 (739) obj. 79981.3 iterations 862
Cbc0038I Pass  20: (9.77 seconds) suminf.   60.95987 (748) obj. 78779.9 iterations 496
Cbc0038I Pass  21: (10.22 seconds) suminf.   61.52491 (757) obj. 79439.1 iterations 1431
Cbc0038I Pass  22: (10.38 seconds) suminf.   59.91037 (728) obj. 79060 iterations 472
Cbc0038I Pass  23: (10.70 seconds) suminf.   62.44064 (721) obj. 80209.9 iterations 968
Cbc0038I Pass  24: (10.81 seconds) suminf.   62.33000 (730) obj. 80203.2 iterations 287
Cbc0038I Pass  25: (11.00 seconds) suminf.   59.83840 (731) obj. 80065.1 iterations 588
Cbc0038I Pass  26: (11.06 seconds) suminf.   59.39182 (751) obj. 80017 iterations 138
Cbc0038I Pass  27: (11.40 seconds) suminf.   61.67852 (683) obj. 80727.9 iterations 1105
Cbc0038I Pass  28: (11.54 seconds) suminf.   59.25583 (711) obj. 79545.2 iterations 421
Cbc0038I Pass  29: (11.95 seconds) suminf.   54.98332 (748) obj. 79942.1 iterations 1291
Cbc0038I Pass  30: (12.03 seconds) suminf.   54.44421 (749) obj. 79652.1 iterations 207
Cbc0038I Pass  31: (12.30 seconds) suminf.   53.06292 (699) obj. 79942.8 iterations 870
Cbc0038I Pass  32: (12.47 seconds) suminf.   52.00927 (694) obj. 79675.9 iterations 537
Cbc0038I Pass  33: (12.58 seconds) suminf.   52.70266 (699) obj. 79440.9 iterations 328
Cbc0038I Pass  34: (12.91 seconds) suminf.   50.72618 (723) obj. 80001.8 iterations 1043
Cbc0038I Pass  35: (13.04 seconds) suminf.   49.04650 (698) obj. 79782.5 iterations 408
Cbc0038I Pass  36: (13.34 seconds) suminf.   49.29061 (670) obj. 80068.7 iterations 951
Cbc0038I Pass  37: (13.48 seconds) suminf.   47.37292 (659) obj. 79983.9 iterations 417
Cbc0038I Pass  38: (13.75 seconds) suminf.   51.52585 (693) obj. 80187.8 iterations 827
Cbc0038I Pass  39: (13.90 seconds) suminf.   45.90438 (685) obj. 80200.5 iterations 455
Cbc0038I Pass  40: (14.23 seconds) suminf.   50.54618 (675) obj. 80793.2 iterations 1077
Cbc0038I Pass  41: (14.45 seconds) suminf.   47.45376 (647) obj. 80636.5 iterations 694
Cbc0038I Pass  42: (14.87 seconds) suminf.   49.36140 (672) obj. 80271.2 iterations 1363
Cbc0038I Pass  43: (15.03 seconds) suminf.   49.19649 (657) obj. 80374.8 iterations 447
Cbc0038I Pass  44: (15.28 seconds) suminf.   49.33637 (653) obj. 79983.4 iterations 830
Cbc0038I Pass  45: (15.51 seconds) suminf.   47.26701 (633) obj. 79947.3 iterations 720
Cbc0038I Pass  46: (15.75 seconds) suminf.   49.76702 (694) obj. 80127.3 iterations 769
Cbc0038I Pass  47: (15.91 seconds) suminf.   47.47013 (669) obj. 80046.1 iterations 480
Cbc0038I Pass  48: (16.17 seconds) suminf.   49.19399 (671) obj. 80208.8 iterations 831
Cbc0038I Pass  49: (16.36 seconds) suminf.   46.31461 (653) obj. 79926.6 iterations 588
Cbc0038I Pass  50: (16.54 seconds) suminf.   48.03681 (684) obj. 80003.3 iterations 558
Cbc0038I Pass  51: (16.66 seconds) suminf.   46.42188 (667) obj. 79935.6 iterations 297
Cbc0038I Pass  52: (17.07 seconds) suminf.   47.45938 (653) obj. 79133.8 iterations 1383
Cbc0038I Pass  53: (17.25 seconds) suminf.   47.12347 (685) obj. 79732.7 iterations 565
Cbc0038I Pass  54: (17.43 seconds) suminf.   48.71413 (675) obj. 79808.5 iterations 614
Cbc0038I Pass  55: (17.56 seconds) suminf.   47.32283 (683) obj. 79959.4 iterations 345
Cbc0038I Pass  56: (17.78 seconds) suminf.   48.42261 (661) obj. 79885.6 iterations 671
Cbc0038I Pass  57: (17.92 seconds) suminf.   47.24700 (671) obj. 80023.4 iterations 390
Cbc0038I Pass  58: (18.17 seconds) suminf.   51.07380 (656) obj. 80007.7 iterations 822
Cbc0038I Pass  59: (18.42 seconds) suminf.   46.29594 (672) obj. 80150.1 iterations 792
Cbc0038I Pass  60: (18.53 seconds) suminf.   47.06945 (656) obj. 80732.3 iterations 283
Cbc0038I Pass  61: (18.77 seconds) suminf.   49.22697 (655) obj. 79836.9 iterations 824
Cbc0038I Pass  62: (19.63 seconds) suminf.  116.15686 (930) obj. 88311.1 iterations 2739
Cbc0038I Pass  63: (20.28 seconds) suminf.   77.12195 (733) obj. 90608.4 iterations 1984
Cbc0038I Pass  64: (20.53 seconds) suminf.   69.64209 (733) obj. 91060.7 iterations 718
Cbc0038I Pass  65: (20.68 seconds) suminf.   67.18576 (702) obj. 91199.9 iterations 415
Cbc0038I Pass  66: (20.83 seconds) suminf.   65.22372 (704) obj. 91119.2 iterations 429
Cbc0038I Pass  67: (20.84 seconds) suminf.   65.22372 (704) obj. 91119.2 iterations 7
Cbc0038I Pass  68: (21.13 seconds) suminf.   63.79450 (700) obj. 90856.2 iterations 850
Cbc0038I Pass  69: (21.24 seconds) suminf.   64.54734 (704) obj. 90338.7 iterations 254
Cbc0038I Pass  70: (21.60 seconds) suminf.   60.87161 (687) obj. 86382.4 iterations 1153
Cbc0038I Pass  71: (21.70 seconds) suminf.   60.24506 (678) obj. 87019 iterations 263
Cbc0038I Pass  72: (21.92 seconds) suminf.   57.22461 (656) obj. 87488.3 iterations 686
Cbc0038I Pass  73: (22.02 seconds) suminf.   56.23757 (638) obj. 86757.7 iterations 248
Cbc0038I Pass  74: (22.33 seconds) suminf.   49.15497 (656) obj. 86692.7 iterations 971
Cbc0038I Pass  75: (22.51 seconds) suminf.   48.68289 (636) obj. 87828.7 iterations 515
Cbc0038I Pass  76: (22.77 seconds) suminf.   52.66362 (664) obj. 86640.4 iterations 825
Cbc0038I Pass  77: (22.94 seconds) suminf.   47.06339 (647) obj. 86326.2 iterations 553
Cbc0038I Pass  78: (23.04 seconds) suminf.   46.41281 (658) obj. 86329.2 iterations 253
Cbc0038I Pass  79: (23.18 seconds) suminf.   47.44167 (637) obj. 86342.7 iterations 375
Cbc0038I Pass  80: (23.29 seconds) suminf.   46.55384 (627) obj. 86662.8 iterations 270
Cbc0038I Pass  81: (23.50 seconds) suminf.   44.83796 (632) obj. 86860.3 iterations 660
Cbc0038I Pass  82: (23.58 seconds) suminf.   43.66480 (629) obj. 87078 iterations 202
Cbc0038I Pass  83: (23.61 seconds) suminf.   43.41840 (628) obj. 87087.7 iterations 87
Cbc0038I Pass  84: (23.85 seconds) suminf.   46.90594 (608) obj. 87652.8 iterations 780
Cbc0038I Pass  85: (23.96 seconds) suminf.   46.09072 (612) obj. 86849.8 iterations 245
Cbc0038I Pass  86: (24.20 seconds) suminf.   45.15200 (604) obj. 87474.3 iterations 746
Cbc0038I Pass  87: (24.32 seconds) suminf.   45.54905 (629) obj. 86622.9 iterations 332
Cbc0038I Pass  88: (24.48 seconds) suminf.   47.98321 (598) obj. 87614 iterations 442
Cbc0038I Pass  89: (24.57 seconds) suminf.   47.45499 (604) obj. 87612.7 iterations 228
Cbc0038I Pass  90: (24.85 seconds) suminf.   47.95792 (583) obj. 93062.4 iterations 930
Cbc0038I Pass  91: (24.95 seconds) suminf.   47.54102 (573) obj. 93127.7 iterations 213
Cbc0038I Pass  92: (25.09 seconds) suminf.   47.28404 (548) obj. 93428.6 iterations 402
Cbc0038I Pass  93: (25.11 seconds) suminf.   46.38829 (553) obj. 93350.3 iterations 54
Cbc0038I Pass  94: (25.30 seconds) suminf.   44.41647 (535) obj. 93367.2 iterations 545
Cbc0038I Pass  95: (25.41 seconds) suminf.   43.33162 (540) obj. 93137.7 iterations 243
Cbc0038I Pass  96: (25.73 seconds) suminf.   43.26543 (519) obj. 93839.9 iterations 1082
Cbc0038I Pass  97: (25.80 seconds) suminf.   41.11661 (527) obj. 97113.7 iterations 207
Cbc0038I Pass  98: (25.82 seconds) suminf.   41.11661 (527) obj. 97113.7 iterations 10
Cbc0038I Pass  99: (26.15 seconds) suminf.   40.00390 (536) obj. 94106.4 iterations 1166
Cbc0038I Pass 100: (26.99 seconds) suminf.  113.53324 (820) obj. 102587 iterations 2852
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 178 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7057 rows 2103 columns, reduced to 6676 rows 1922 columns - too large
Cbc0038I Mini branch and bound did not improve solution (31.07 seconds)
Cbc0038I After 31.07 seconds - Feasibility pump exiting - took 28.12 seconds
Cbc0031I 42 added rows had average density of 6.5
Cbc0013I At root node, 42 cuts changed objective from 34466.341 to 46080 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 3.1 elements, 8 column cuts (8 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 129 row cuts average 149.1 elements, 0 column cuts (0 active)  in 1.287 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 134 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 46080 (66.61 seconds)
Cbc0010I After 100 nodes, 11 on tree, 1e+50 best solution, best possible 46080 (330.52 seconds)
Cbc0010I After 200 nodes, 9 on tree, 1e+50 best solution, best possible 46080 (588.65 seconds)
Cbc0010I After 300 nodes, 17 on tree, 1e+50 best solution, best possible 46080 (854.21 seconds)
Cbc0010I After 400 nodes, 3 on tree, 1e+50 best solution, best possible 46080 (1084.33 seconds)
Cbc0010I After 500 nodes, 3 on tree, 1e+50 best solution, best possible 46083 (1389.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 46083), took 2579064 iterations and 569 nodes (1801.09 seconds)
Cbc0032I Strong branching done 6204 times (551855 iterations), fathomed 23 nodes and fixed 583 variables
Cbc0035I Maximum depth 32, 0 variables fixed on reduced cost
Cuts at root node changed objective from 34466.3 to 46080
Probing was tried 416 times and created 4021 cuts of which 0 were active after adding rounds of cuts (4.104 seconds)
Gomory was tried 414 times and created 639 cuts of which 0 were active after adding rounds of cuts (9.987 seconds)
Knapsack was tried 414 times and created 671 cuts of which 0 were active after adding rounds of cuts (0.866 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 414 times and created 3566 cuts of which 0 were active after adding rounds of cuts (3.298 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.138 seconds)
ImplicationCuts was tried 142 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    46083.000
Enumerated nodes:               569
Total iterations:               2579064
Time (CPU seconds):             1801.09
Time (Wallclock seconds):       1802.58

Total time (CPU seconds):       1801.12   (Wallclock seconds):       1802.62

