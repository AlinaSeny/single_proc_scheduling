Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag412_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/dag412_down_left_input.lp (default strategy 1)
### CoinLpIO::is_invalid_name(): Name 6384 should not start with a number
### CoinLpIO::are_invalid_names(): Invalid name: vnames[4486]: 6384
### CoinLpIO::readLp(): Invalid column names
Now using default column names.
seconds was changed from 1e+100 to 1800
Continuous objective value is 687620 - 51.60 seconds
Cgl0002I 256 variables fixed
Cgl0003I 0 fixed, 33 tightened bounds, 3597 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 30 tightened bounds, 1687 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 612 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 17966 rows, 5988 columns (5988 integer (5921 of which binary)) and 59909 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 5988 objects (5988 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 2858 integers unsatisfied sum - 948.652
Cbc0038I Pass   1: (115.57 seconds) suminf.  330.45191 (3144) obj. 1.33601e+06 iterations 15210
Cbc0038I Pass   2: (123.09 seconds) suminf.  216.56412 (3329) obj. 1.35811e+06 iterations 6093
Cbc0038I Pass   3: (128.16 seconds) suminf.  199.53403 (3302) obj. 1.39689e+06 iterations 4204
Cbc0038I Pass   4: (131.12 seconds) suminf.  191.12139 (3361) obj. 1.38616e+06 iterations 2370
Cbc0038I Pass   5: (132.53 seconds) suminf.  189.59951 (3408) obj. 1.37598e+06 iterations 1012
Cbc0038I Pass   6: (132.96 seconds) suminf.  189.76441 (3436) obj. 1.3729e+06 iterations 245
Cbc0038I Pass   7: (137.21 seconds) suminf.  187.77284 (3365) obj. 1.34769e+06 iterations 3333
Cbc0038I Pass   8: (138.83 seconds) suminf.  185.70376 (3356) obj. 1.35152e+06 iterations 1157
Cbc0038I Pass   9: (140.53 seconds) suminf.  186.94789 (3347) obj. 1.35331e+06 iterations 1333
Cbc0038I Pass  10: (143.84 seconds) suminf.  182.89053 (3320) obj. 1.38478e+06 iterations 2841
Cbc0038I Pass  11: (145.92 seconds) suminf.  180.50541 (3354) obj. 1.36573e+06 iterations 1673
Cbc0038I Pass  12: (146.35 seconds) suminf.  180.13471 (3357) obj. 1.36206e+06 iterations 240
Cbc0038I Pass  13: (150.77 seconds) suminf.  183.09081 (3386) obj. 1.42571e+06 iterations 3386
Cbc0038I Pass  14: (154.45 seconds) suminf.  177.80440 (3399) obj. 1.38177e+06 iterations 2918
Cbc0038I Pass  15: (155.16 seconds) suminf.  177.19293 (3400) obj. 1.37563e+06 iterations 415
Cbc0038I Pass  16: (157.66 seconds) suminf.  175.90113 (3375) obj. 1.37983e+06 iterations 1748
Cbc0038I Pass  17: (158.54 seconds) suminf.  175.76759 (3394) obj. 1.37911e+06 iterations 541
Cbc0038I Pass  18: (159.55 seconds) suminf.  174.79993 (3315) obj. 1.37605e+06 iterations 647
Cbc0038I Pass  19: (162.43 seconds) suminf.  178.26354 (3412) obj. 1.38475e+06 iterations 2212
Cbc0038I Pass  20: (163.31 seconds) suminf.  177.19293 (3400) obj. 1.37563e+06 iterations 553
Cbc0038I Pass  21: (165.45 seconds) suminf.  178.68917 (3361) obj. 1.37562e+06 iterations 1660
Cbc0038I Pass  22: (167.19 seconds) suminf.  176.83232 (3343) obj. 1.36789e+06 iterations 1360
Cbc0038I Pass  23: (168.79 seconds) suminf.  178.33289 (3395) obj. 1.40687e+06 iterations 1199
Cbc0038I Pass  24: (173.29 seconds) suminf.  183.78149 (3263) obj. 1.51628e+06 iterations 3548
Cbc0038I Pass  25: (177.44 seconds) suminf.  169.97421 (3368) obj. 1.45915e+06 iterations 3375
Cbc0038I Pass  26: (179.64 seconds) suminf.  169.19996 (3323) obj. 1.47971e+06 iterations 1764
Cbc0038I Pass  27: (184.07 seconds) suminf.  166.78866 (3315) obj. 1.49542e+06 iterations 3585
Cbc0038I Pass  28: (185.91 seconds) suminf.  164.34684 (3252) obj. 1.48906e+06 iterations 1437
Cbc0038I Pass  29: (188.12 seconds) suminf.  165.77029 (3248) obj. 1.4929e+06 iterations 1859
Cbc0038I Pass  30: (189.68 seconds) suminf.  165.06718 (3387) obj. 1.49343e+06 iterations 1330
Cbc0038I Pass  31: (191.62 seconds) suminf.  166.86372 (3273) obj. 1.48967e+06 iterations 1438
Cbc0038I Pass  32: (193.69 seconds) suminf.  165.61353 (3349) obj. 1.49808e+06 iterations 1643
Cbc0038I Pass  33: (195.80 seconds) suminf.  166.90590 (3271) obj. 1.4811e+06 iterations 1652
Cbc0038I Pass  34: (202.81 seconds) suminf.  187.87664 (3125) obj. 1.54276e+06 iterations 6265
Cbc0038I Pass  35: (207.74 seconds) suminf.  167.64355 (3154) obj. 1.68973e+06 iterations 4355
Cbc0038I Pass  36: (209.63 seconds) suminf.  165.75453 (3148) obj. 1.705e+06 iterations 1807
Cbc0038I Pass  37: (210.47 seconds) suminf.  164.64165 (3147) obj. 1.70776e+06 iterations 691
Cbc0038I Pass  38: (213.54 seconds) suminf.  163.24400 (3129) obj. 1.69243e+06 iterations 2831
Cbc0038I Pass  39: (214.80 seconds) suminf.  162.00688 (3149) obj. 1.70096e+06 iterations 1096
Cbc0038I Pass  40: (217.69 seconds) suminf.  163.40846 (3193) obj. 1.70403e+06 iterations 2696
Cbc0038I Pass  41: (218.37 seconds) suminf.  162.68312 (3193) obj. 1.70367e+06 iterations 465
Cbc0038I Pass  42: (221.42 seconds) suminf.  163.06843 (3134) obj. 1.69682e+06 iterations 2562
Cbc0038I Pass  43: (223.05 seconds) suminf.  161.93251 (3187) obj. 1.69451e+06 iterations 1457
Cbc0038I Pass  44: (225.59 seconds) suminf.  163.07152 (3164) obj. 1.69241e+06 iterations 2284
Cbc0038I Pass  45: (226.68 seconds) suminf.  162.19611 (3131) obj. 1.69473e+06 iterations 916
Cbc0038I Pass  46: (229.66 seconds) suminf.  160.43344 (3178) obj. 1.69113e+06 iterations 2675
Cbc0038I Pass  47: (230.55 seconds) suminf.  159.89644 (3197) obj. 1.69519e+06 iterations 622
Cbc0038I Pass  48: (232.58 seconds) suminf.  161.64891 (3107) obj. 1.69934e+06 iterations 1639
Cbc0038I Pass  49: (235.00 seconds) suminf.  160.04936 (3172) obj. 1.6974e+06 iterations 2132
Cbc0038I Pass  50: (237.50 seconds) suminf.  161.04322 (3169) obj. 1.69443e+06 iterations 2071
Cbc0038I Pass  51: (238.92 seconds) suminf.  160.65178 (3152) obj. 1.69881e+06 iterations 1114
Cbc0038I Pass  52: (241.68 seconds) suminf.  160.68614 (3127) obj. 1.6993e+06 iterations 2318
Cbc0038I Pass  53: (242.75 seconds) suminf.  160.16340 (3180) obj. 1.69653e+06 iterations 849
Cbc0038I Pass  54: (245.24 seconds) suminf.  160.96859 (3146) obj. 1.69438e+06 iterations 2094
Cbc0038I Pass  55: (246.75 seconds) suminf.  160.40725 (3171) obj. 1.69723e+06 iterations 1189
Cbc0038I Pass  56: (249.83 seconds) suminf.  160.45145 (3130) obj. 1.69984e+06 iterations 2703
Cbc0038I Pass  57: (254.48 seconds) suminf.  184.45866 (3184) obj. 1.65318e+06 iterations 3949
Cbc0038I Pass  58: (258.19 seconds) suminf.  165.58958 (3085) obj. 1.65869e+06 iterations 3000
Cbc0038I Pass  59: (259.36 seconds) suminf.  162.60105 (3145) obj. 1.65057e+06 iterations 960
Cbc0038I Pass  60: (260.01 seconds) suminf.  161.47053 (3156) obj. 1.6519e+06 iterations 464
Cbc0038I Pass  61: (262.89 seconds) suminf.  159.12853 (3102) obj. 1.66409e+06 iterations 2594
Cbc0038I Pass  62: (264.11 seconds) suminf.  157.79130 (3087) obj. 1.70349e+06 iterations 1067
Cbc0038I Pass  63: (267.39 seconds) suminf.  160.20547 (3115) obj. 1.70453e+06 iterations 2834
Cbc0038I Pass  64: (268.98 seconds) suminf.  157.03226 (3123) obj. 1.70404e+06 iterations 1232
Cbc0038I Pass  65: (269.70 seconds) suminf.  156.62389 (3133) obj. 1.7045e+06 iterations 512
Cbc0038I Pass  66: (272.31 seconds) suminf.  157.05768 (3139) obj. 1.69603e+06 iterations 2194
Cbc0038I Pass  67: (273.36 seconds) suminf.  156.30234 (3134) obj. 1.69338e+06 iterations 890
Cbc0038I Pass  68: (277.28 seconds) suminf.  158.27699 (3152) obj. 1.69744e+06 iterations 3304
Cbc0038I Pass  69: (278.43 seconds) suminf.  157.03312 (3138) obj. 1.6985e+06 iterations 854
Cbc0038I Pass  70: (279.83 seconds) suminf.  156.50843 (3163) obj. 1.69121e+06 iterations 1059
Cbc0038I Pass  71: (282.70 seconds) suminf.  157.21437 (3188) obj. 1.69415e+06 iterations 2391
Cbc0038I Pass  72: (284.33 seconds) suminf.  155.15941 (3181) obj. 1.69355e+06 iterations 1271
Cbc0038I Pass  73: (286.44 seconds) suminf.  157.66383 (3145) obj. 1.6928e+06 iterations 1641
Cbc0038I Pass  74: (290.69 seconds) suminf.  174.95357 (3104) obj. 1.71072e+06 iterations 3807
Cbc0038I Pass  75: (295.52 seconds) suminf.  157.24699 (3127) obj. 1.75252e+06 iterations 4277
Cbc0038I Pass  76: (296.68 seconds) suminf.  156.22078 (3139) obj. 1.74762e+06 iterations 841
Cbc0038I Pass  77: (299.59 seconds) suminf.  158.77830 (3091) obj. 1.72699e+06 iterations 2517
Cbc0038I Pass  78: (301.63 seconds) suminf.  156.46171 (3071) obj. 1.74276e+06 iterations 1751
Cbc0038I Pass  79: (303.78 seconds) suminf.  157.77452 (3056) obj. 1.73676e+06 iterations 1788
Cbc0038I Pass  80: (304.77 seconds) suminf.  155.70588 (3007) obj. 1.74079e+06 iterations 826
Cbc0038I Pass  81: (305.25 seconds) suminf.  155.52440 (2991) obj. 1.74068e+06 iterations 327
Cbc0038I Pass  82: (307.19 seconds) suminf.  158.38534 (3089) obj. 1.73122e+06 iterations 1655
Cbc0038I Pass  83: (308.49 seconds) suminf.  156.77589 (3038) obj. 1.72904e+06 iterations 1045
Cbc0038I Pass  84: (309.22 seconds) suminf.  155.85889 (3042) obj. 1.73801e+06 iterations 568
Cbc0038I Pass  85: (310.92 seconds) suminf.  158.08094 (3061) obj. 1.7324e+06 iterations 1442
Cbc0038I Pass  86: (312.32 seconds) suminf.  155.52440 (2991) obj. 1.74068e+06 iterations 1144
Cbc0038I Pass  87: (314.34 seconds) suminf.  158.38534 (3089) obj. 1.73122e+06 iterations 1722
Cbc0038I Pass  88: (315.80 seconds) suminf.  156.77589 (3038) obj. 1.72904e+06 iterations 1220
Cbc0038I Pass  89: (316.61 seconds) suminf.  155.85889 (3042) obj. 1.73801e+06 iterations 602
Cbc0038I Pass  90: (318.13 seconds) suminf.  157.51349 (3035) obj. 1.7344e+06 iterations 1265
Cbc0038I Pass  91: (319.27 seconds) suminf.  155.52440 (2991) obj. 1.74068e+06 iterations 954
Cbc0038I Pass  92: (321.06 seconds) suminf.  158.62347 (3075) obj. 1.73001e+06 iterations 1568
Cbc0038I Pass  93: (322.24 seconds) suminf.  156.77589 (3038) obj. 1.72904e+06 iterations 963
Cbc0038I Pass  94: (323.05 seconds) suminf.  155.85889 (3042) obj. 1.73801e+06 iterations 587
Cbc0038I Pass  95: (324.36 seconds) suminf.  155.78411 (3017) obj. 1.74022e+06 iterations 1052
Cbc0038I Pass  96: (324.85 seconds) suminf.  155.70643 (3005) obj. 1.74034e+06 iterations 342
Cbc0038I Pass  97: (326.54 seconds) suminf.  157.95861 (3077) obj. 1.72911e+06 iterations 1489
Cbc0038I Pass  98: (327.65 seconds) suminf.  156.77589 (3038) obj. 1.72904e+06 iterations 963
Cbc0038I Pass  99: (328.56 seconds) suminf.  155.85889 (3042) obj. 1.73801e+06 iterations 714
Cbc0038I Pass 100: (333.04 seconds) suminf.  174.60656 (3156) obj. 1.88278e+06 iterations 4006
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 881 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17966 rows 5988 columns, reduced to 15771 rows 5004 columns - too large
Cbc0038I Mini branch and bound did not improve solution (346.60 seconds)
Cbc0038I After 346.60 seconds - Feasibility pump exiting - took 251.62 seconds
Cbc0031I 113 added rows had average density of 17.20354
Cbc0013I At root node, 113 cuts changed objective from 691007.43 to 818646.5 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 3.9 elements, 4 column cuts (4 active)  in 1.252 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 186 row cuts average 9.6 elements, 0 column cuts (0 active)  in 14.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.602 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 257 row cuts average 20.3 elements, 0 column cuts (0 active)  in 4.898 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 89 row cuts average 41.8 elements, 0 column cuts (0 active)  in 12.485 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 818646.5 (1720.75 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 818646.5), took 864232 iterations and 1 nodes (1931.04 seconds)
Cbc0032I Strong branching done 2 times (1 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 691007 to 818647
Probing was tried 15 times and created 32 cuts of which 0 were active after adding rounds of cuts (1.259 seconds)
Gomory was tried 15 times and created 187 cuts of which 0 were active after adding rounds of cuts (14.178 seconds)
Knapsack was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.055 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.602 seconds)
MixedIntegerRounding2 was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
TwoMirCuts was tried 15 times and created 304 cuts of which 0 were active after adding rounds of cuts (5.720 seconds)
ZeroHalf was tried 15 times and created 144 cuts of which 0 were active after adding rounds of cuts (13.416 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    818646.501
Enumerated nodes:               1
Total iterations:               864232
Time (CPU seconds):             1931.04
Time (Wallclock seconds):       1932.10

Total time (CPU seconds):       1931.11   (Wallclock seconds):       1932.18

