Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_0_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_0_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 244.261 - 5.91 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1715 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 27 tightened bounds, 836 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 388 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 177 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 95 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26826 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1377 integers unsatisfied sum - 399.89
Cbc0038I Pass   1: (10.16 seconds) suminf.  119.67247 (731) obj. 385.427 iterations 4572
Cbc0038I Pass   2: (10.81 seconds) suminf.   72.54250 (575) obj. 408.731 iterations 1977
Cbc0038I Pass   3: (11.10 seconds) suminf.   62.06464 (557) obj. 408.681 iterations 757
Cbc0038I Pass   4: (11.25 seconds) suminf.   59.62065 (566) obj. 408.826 iterations 342
Cbc0038I Pass   5: (11.48 seconds) suminf.   60.01062 (560) obj. 408.962 iterations 658
Cbc0038I Pass   6: (11.54 seconds) suminf.   58.87572 (558) obj. 409.141 iterations 126
Cbc0038I Pass   7: (11.90 seconds) suminf.   54.89791 (546) obj. 427.716 iterations 987
Cbc0038I Pass   8: (11.99 seconds) suminf.   54.72342 (537) obj. 433.404 iterations 208
Cbc0038I Pass   9: (12.11 seconds) suminf.   54.71071 (534) obj. 433.693 iterations 253
Cbc0038I Pass  10: (12.20 seconds) suminf.   54.76588 (547) obj. 433.681 iterations 188
Cbc0038I Pass  11: (12.46 seconds) suminf.   48.13711 (526) obj. 448.401 iterations 763
Cbc0038I Pass  12: (12.79 seconds) suminf.   46.71284 (532) obj. 449.209 iterations 959
Cbc0038I Pass  13: (13.21 seconds) suminf.   45.53564 (557) obj. 456.725 iterations 1211
Cbc0038I Pass  14: (13.30 seconds) suminf.   45.65100 (561) obj. 456.594 iterations 211
Cbc0038I Pass  15: (13.43 seconds) suminf.   43.33274 (563) obj. 457.063 iterations 263
Cbc0038I Pass  16: (13.53 seconds) suminf.   42.40987 (556) obj. 456.941 iterations 216
Cbc0038I Pass  17: (14.02 seconds) suminf.   41.30696 (527) obj. 455.383 iterations 1492
Cbc0038I Pass  18: (14.57 seconds) suminf.   38.38760 (538) obj. 459.029 iterations 1667
Cbc0038I Pass  19: (14.74 seconds) suminf.   39.38483 (539) obj. 452.546 iterations 322
Cbc0038I Pass  20: (15.36 seconds) suminf.   41.41325 (511) obj. 477.675 iterations 1893
Cbc0038I Pass  21: (15.83 seconds) suminf.   39.44494 (503) obj. 478.605 iterations 1244
Cbc0038I Pass  22: (15.87 seconds) suminf.   39.34972 (503) obj. 506.999 iterations 73
Cbc0038I Pass  23: (15.92 seconds) suminf.   39.28729 (502) obj. 522.96 iterations 102
Cbc0038I Pass  24: (16.93 seconds) suminf.   39.86006 (513) obj. 449 iterations 3077
Cbc0038I Pass  25: (17.08 seconds) suminf.   39.04531 (514) obj. 449 iterations 367
Cbc0038I Pass  26: (17.42 seconds) suminf.   38.83736 (531) obj. 449 iterations 971
Cbc0038I Pass  27: (17.70 seconds) suminf.   36.60932 (550) obj. 449.398 iterations 720
Cbc0038I Pass  28: (18.07 seconds) suminf.   38.93152 (508) obj. 449 iterations 1070
Cbc0038I Pass  29: (18.26 seconds) suminf.   39.24942 (489) obj. 449 iterations 494
Cbc0038I Pass  30: (18.48 seconds) suminf.   38.54158 (511) obj. 449 iterations 585
Cbc0038I Pass  31: (18.69 seconds) suminf.   37.43895 (492) obj. 449 iterations 567
Cbc0038I Pass  32: (18.72 seconds) suminf.   37.09255 (495) obj. 449.398 iterations 51
Cbc0038I Pass  33: (19.01 seconds) suminf.   35.81798 (513) obj. 449 iterations 827
Cbc0038I Pass  34: (19.23 seconds) suminf.   36.91962 (505) obj. 449.398 iterations 548
Cbc0038I Pass  35: (19.49 seconds) suminf.   39.45341 (532) obj. 449 iterations 694
Cbc0038I Pass  36: (19.63 seconds) suminf.   42.03336 (531) obj. 449.398 iterations 294
Cbc0038I Pass  37: (19.97 seconds) suminf.   38.80117 (508) obj. 449 iterations 923
Cbc0038I Pass  38: (20.14 seconds) suminf.   36.16767 (504) obj. 449 iterations 399
Cbc0038I Pass  39: (20.45 seconds) suminf.   38.00568 (470) obj. 449 iterations 900
Cbc0038I Pass  40: (20.74 seconds) suminf.   35.73432 (511) obj. 449.398 iterations 843
Cbc0038I Pass  41: (20.93 seconds) suminf.   33.11552 (519) obj. 449.398 iterations 503
Cbc0038I Pass  42: (21.23 seconds) suminf.   33.85878 (503) obj. 449.398 iterations 913
Cbc0038I Pass  43: (21.32 seconds) suminf.   34.56045 (520) obj. 449.398 iterations 227
Cbc0038I Pass  44: (21.62 seconds) suminf.   38.22143 (523) obj. 449 iterations 939
Cbc0038I Pass  45: (21.81 seconds) suminf.   36.83771 (524) obj. 449 iterations 503
Cbc0038I Pass  46: (21.98 seconds) suminf.   36.90694 (531) obj. 449 iterations 460
Cbc0038I Pass  47: (22.22 seconds) suminf.   36.72387 (531) obj. 449.398 iterations 613
Cbc0038I Pass  48: (22.39 seconds) suminf.   36.42538 (510) obj. 449 iterations 483
Cbc0038I Pass  49: (22.55 seconds) suminf.   36.83204 (504) obj. 449 iterations 357
Cbc0038I Pass  50: (22.93 seconds) suminf.   41.74235 (502) obj. 449 iterations 1130
Cbc0038I Pass  51: (23.10 seconds) suminf.   37.94469 (494) obj. 452.872 iterations 463
Cbc0038I Pass  52: (23.17 seconds) suminf.   37.66078 (497) obj. 452.261 iterations 160
Cbc0038I Pass  53: (23.50 seconds) suminf.   36.90729 (519) obj. 466.345 iterations 1000
Cbc0038I Pass  54: (23.63 seconds) suminf.   36.93625 (533) obj. 462.459 iterations 264
Cbc0038I Pass  55: (23.77 seconds) suminf.   38.03658 (505) obj. 460.773 iterations 286
Cbc0038I Pass  56: (24.18 seconds) suminf.   41.11491 (489) obj. 464.3 iterations 1145
Cbc0038I Pass  57: (24.55 seconds) suminf.   38.62129 (496) obj. 449 iterations 1161
Cbc0038I Pass  58: (25.12 seconds) suminf.   38.19544 (501) obj. 480.802 iterations 1605
Cbc0038I Pass  59: (25.32 seconds) suminf.   37.30180 (522) obj. 496.736 iterations 492
Cbc0038I Pass  60: (25.77 seconds) suminf.   36.82961 (509) obj. 498.132 iterations 1311
Cbc0038I Pass  61: (25.89 seconds) suminf.   36.09276 (513) obj. 498.348 iterations 252
Cbc0038I Pass  62: (26.43 seconds) suminf.   37.59335 (495) obj. 466.548 iterations 1649
Cbc0038I Pass  63: (26.65 seconds) suminf.   36.45373 (505) obj. 465.421 iterations 557
Cbc0038I Pass  64: (27.14 seconds) suminf.   37.09663 (506) obj. 466.138 iterations 1572
Cbc0038I Pass  65: (27.32 seconds) suminf.   37.38157 (493) obj. 464.044 iterations 485
Cbc0038I Pass  66: (27.64 seconds) suminf.   39.50098 (469) obj. 480.096 iterations 1025
Cbc0038I Pass  67: (27.84 seconds) suminf.   36.54101 (478) obj. 467.804 iterations 590
Cbc0038I Pass  68: (28.49 seconds) suminf.   35.60211 (479) obj. 481.083 iterations 2172
Cbc0038I Pass  69: (28.59 seconds) suminf.   35.82089 (469) obj. 479.52 iterations 237
Cbc0038I Pass  70: (29.24 seconds) suminf.   39.26599 (471) obj. 449.233 iterations 2186
Cbc0038I Pass  71: (29.51 seconds) suminf.   35.76005 (490) obj. 452.158 iterations 714
Cbc0038I Pass  72: (29.80 seconds) suminf.   32.50334 (481) obj. 449.398 iterations 815
Cbc0038I Pass  73: (29.88 seconds) suminf.   31.88992 (454) obj. 449.398 iterations 209
Cbc0038I Pass  74: (30.31 seconds) suminf.   37.58208 (456) obj. 449.844 iterations 1363
Cbc0038I Pass  75: (30.54 seconds) suminf.   34.34226 (472) obj. 450.188 iterations 625
Cbc0038I Pass  76: (30.93 seconds) suminf.   39.22803 (469) obj. 483.316 iterations 1148
Cbc0038I Pass  77: (31.12 seconds) suminf.   36.74326 (489) obj. 481.201 iterations 453
Cbc0038I Pass  78: (31.25 seconds) suminf.   36.23223 (492) obj. 481.867 iterations 307
Cbc0038I Pass  79: (31.66 seconds) suminf.   40.48396 (470) obj. 471.416 iterations 1203
Cbc0038I Pass  80: (31.83 seconds) suminf.   36.78937 (471) obj. 465.898 iterations 468
Cbc0038I Pass  81: (31.86 seconds) suminf.   36.95682 (472) obj. 465.144 iterations 53
Cbc0038I Pass  82: (32.30 seconds) suminf.   35.90422 (470) obj. 478.189 iterations 1467
Cbc0038I Pass  83: (32.43 seconds) suminf.   36.30930 (469) obj. 474.738 iterations 278
Cbc0038I Pass  84: (32.97 seconds) suminf.   36.86073 (471) obj. 453.653 iterations 1610
Cbc0038I Pass  85: (33.30 seconds) suminf.   35.76818 (454) obj. 477.278 iterations 786
Cbc0038I Pass  86: (33.44 seconds) suminf.   35.18342 (444) obj. 478.525 iterations 357
Cbc0038I Pass  87: (33.78 seconds) suminf.   38.66716 (464) obj. 490.179 iterations 1083
Cbc0038I Pass  88: (33.99 seconds) suminf.   36.08747 (478) obj. 483.374 iterations 639
Cbc0038I Pass  89: (34.55 seconds) suminf.   34.69496 (466) obj. 527.553 iterations 1731
Cbc0038I Pass  90: (34.68 seconds) suminf.   34.08074 (475) obj. 505.269 iterations 264
Cbc0038I Pass  91: (34.78 seconds) suminf.   34.35998 (461) obj. 503.571 iterations 223
Cbc0038I Pass  92: (35.07 seconds) suminf.   31.91301 (447) obj. 499.527 iterations 890
Cbc0038I Pass  93: (35.25 seconds) suminf.   30.31972 (426) obj. 497.087 iterations 460
Cbc0038I Pass  94: (35.63 seconds) suminf.   32.88623 (447) obj. 509.567 iterations 1042
Cbc0038I Pass  95: (35.78 seconds) suminf.   29.71914 (455) obj. 504.659 iterations 413
Cbc0038I Pass  96: (35.88 seconds) suminf.   28.77976 (456) obj. 504.918 iterations 233
Cbc0038I Pass  97: (36.16 seconds) suminf.   31.75843 (470) obj. 507.065 iterations 794
Cbc0038I Pass  98: (36.31 seconds) suminf.   31.10228 (458) obj. 506.728 iterations 370
Cbc0038I Pass  99: (36.83 seconds) suminf.   32.54990 (456) obj. 507.835 iterations 1460
Cbc0038I Pass 100: (37.61 seconds) suminf.   65.14372 (528) obj. 525.429 iterations 2467
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 703 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 6111 rows 1865 columns - too large
Cbc0038I Mini branch and bound did not improve solution (41.48 seconds)
Cbc0038I After 41.48 seconds - Feasibility pump exiting - took 33.37 seconds
Cbc0031I 41 added rows had average density of 15.95122
Cbc0013I At root node, 41 cuts changed objective from 244.74309 to 274 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 4.2 elements, 2 column cuts (2 active)  in 0.243 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 58 row cuts average 105.8 elements, 0 column cuts (0 active)  in 1.501 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 204 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.729 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 77.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 274 (77.98 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 275 (495.04 seconds)
Cbc0010I After 200 nodes, 19 on tree, 1e+50 best solution, best possible 280 (849.89 seconds)
Cbc0010I After 300 nodes, 69 on tree, 1e+50 best solution, best possible 280 (1145.17 seconds)
Cbc0010I After 400 nodes, 119 on tree, 1e+50 best solution, best possible 280 (1425.24 seconds)
Cbc0010I After 500 nodes, 169 on tree, 1e+50 best solution, best possible 280 (1701.33 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 280), took 2410882 iterations and 535 nodes (1798.14 seconds)
Cbc0032I Strong branching done 5824 times (526205 iterations), fathomed 20 nodes and fixed 513 variables
Cbc0035I Maximum depth 191, 0 variables fixed on reduced cost
Cuts at root node changed objective from 244.743 to 274
Probing was tried 532 times and created 3910 cuts of which 0 were active after adding rounds of cuts (6.188 seconds)
Gomory was tried 526 times and created 2790 cuts of which 0 were active after adding rounds of cuts (12.696 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 526 times and created 2815 cuts of which 0 were active after adding rounds of cuts (4.630 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    280.000
Enumerated nodes:               535
Total iterations:               2410882
Time (CPU seconds):             1798.14
Time (Wallclock seconds):       1798.70

Total time (CPU seconds):       1798.16   (Wallclock seconds):       1798.73

