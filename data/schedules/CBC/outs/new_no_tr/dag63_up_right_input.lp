Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag63_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/dag63_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 823311 - 1.04 seconds
Cgl0002I 137 variables fixed
Cgl0003I 0 fixed, 27 tightened bounds, 1067 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 354 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 4919 rows, 1657 columns (1657 integer (1620 of which binary)) and 16302 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1657 objects (1657 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 894 integers unsatisfied sum - 219.882
Cbc0038I Pass   1: (2.35 seconds) suminf.  115.48795 (828) obj. 1.15927e+06 iterations 2260
Cbc0038I Pass   2: (2.58 seconds) suminf.   99.46096 (838) obj. 1.22122e+06 iterations 894
Cbc0038I Pass   3: (2.68 seconds) suminf.   96.87513 (848) obj. 1.23901e+06 iterations 294
Cbc0038I Pass   4: (2.70 seconds) suminf.   96.27694 (843) obj. 1.23913e+06 iterations 34
Cbc0038I Pass   5: (2.87 seconds) suminf.   92.85783 (837) obj. 1.20822e+06 iterations 570
Cbc0038I Pass   6: (3.00 seconds) suminf.   97.12530 (848) obj. 1.20926e+06 iterations 385
Cbc0038I Pass   7: (3.12 seconds) suminf.   92.75670 (792) obj. 1.23962e+06 iterations 414
Cbc0038I Pass   8: (3.25 seconds) suminf.   95.72094 (856) obj. 1.21173e+06 iterations 385
Cbc0038I Pass   9: (3.77 seconds) suminf.  121.37393 (735) obj. 1.65973e+06 iterations 2006
Cbc0038I Pass  10: (4.11 seconds) suminf.   97.62908 (832) obj. 1.64003e+06 iterations 1294
Cbc0038I Pass  11: (4.19 seconds) suminf.   91.47270 (858) obj. 1.65137e+06 iterations 227
Cbc0038I Pass  12: (4.26 seconds) suminf.   90.91003 (839) obj. 1.65925e+06 iterations 152
Cbc0038I Pass  13: (4.33 seconds) suminf.   89.47836 (840) obj. 1.66268e+06 iterations 172
Cbc0038I Pass  14: (4.42 seconds) suminf.   89.10859 (848) obj. 1.66282e+06 iterations 264
Cbc0038I Pass  15: (4.52 seconds) suminf.   86.34754 (822) obj. 1.66587e+06 iterations 355
Cbc0038I Pass  16: (4.60 seconds) suminf.   84.34355 (860) obj. 1.67412e+06 iterations 186
Cbc0038I Pass  17: (4.71 seconds) suminf.   87.43855 (828) obj. 1.6632e+06 iterations 347
Cbc0038I Pass  18: (4.81 seconds) suminf.   84.61684 (853) obj. 1.67567e+06 iterations 287
Cbc0038I Pass  19: (4.86 seconds) suminf.   82.06352 (852) obj. 1.67881e+06 iterations 139
Cbc0038I Pass  20: (4.99 seconds) suminf.   89.90870 (822) obj. 1.65696e+06 iterations 438
Cbc0038I Pass  21: (5.10 seconds) suminf.   85.78951 (854) obj. 1.67463e+06 iterations 331
Cbc0038I Pass  22: (5.18 seconds) suminf.   84.79260 (834) obj. 1.66729e+06 iterations 217
Cbc0038I Pass  23: (5.60 seconds) suminf.  116.14962 (814) obj. 1.69973e+06 iterations 1637
Cbc0038I Pass  24: (5.91 seconds) suminf.   94.11902 (846) obj. 1.69929e+06 iterations 1226
Cbc0038I Pass  25: (5.99 seconds) suminf.   91.38337 (858) obj. 1.7051e+06 iterations 249
Cbc0038I Pass  26: (6.07 seconds) suminf.   89.49845 (838) obj. 1.71701e+06 iterations 257
Cbc0038I Pass  27: (6.15 seconds) suminf.   87.96781 (829) obj. 1.70636e+06 iterations 306
Cbc0038I Pass  28: (6.23 seconds) suminf.   86.80345 (837) obj. 1.72005e+06 iterations 307
Cbc0038I Pass  29: (6.36 seconds) suminf.   86.71282 (830) obj. 1.7162e+06 iterations 525
Cbc0038I Pass  30: (6.44 seconds) suminf.   84.07783 (851) obj. 1.71323e+06 iterations 244
Cbc0038I Pass  31: (6.51 seconds) suminf.   81.97151 (849) obj. 1.7226e+06 iterations 194
Cbc0038I Pass  32: (6.52 seconds) suminf.   81.60214 (848) obj. 1.71808e+06 iterations 33
Cbc0038I Pass  33: (6.56 seconds) suminf.   81.24306 (849) obj. 1.72223e+06 iterations 130
Cbc0038I Pass  34: (6.65 seconds) suminf.   81.81179 (870) obj. 1.72351e+06 iterations 277
Cbc0038I Pass  35: (6.68 seconds) suminf.   81.77733 (853) obj. 1.72359e+06 iterations 106
Cbc0038I Pass  36: (6.79 seconds) suminf.   83.31770 (850) obj. 1.70773e+06 iterations 379
Cbc0038I Pass  37: (6.87 seconds) suminf.   81.54663 (850) obj. 1.71037e+06 iterations 299
Cbc0038I Pass  38: (6.89 seconds) suminf.   81.64037 (851) obj. 1.71258e+06 iterations 34
Cbc0038I Pass  39: (7.01 seconds) suminf.   81.88532 (859) obj. 1.70514e+06 iterations 457
Cbc0038I Pass  40: (7.09 seconds) suminf.   81.13894 (828) obj. 1.69102e+06 iterations 279
Cbc0038I Pass  41: (7.22 seconds) suminf.   81.33656 (863) obj. 1.6954e+06 iterations 479
Cbc0038I Pass  42: (7.33 seconds) suminf.   81.47533 (854) obj. 1.70145e+06 iterations 359
Cbc0038I Pass  43: (7.45 seconds) suminf.   82.30285 (872) obj. 1.71181e+06 iterations 449
Cbc0038I Pass  44: (7.50 seconds) suminf.   81.20303 (871) obj. 1.71092e+06 iterations 163
Cbc0038I Pass  45: (7.63 seconds) suminf.   82.40667 (849) obj. 1.70184e+06 iterations 442
Cbc0038I Pass  46: (7.72 seconds) suminf.   81.17902 (866) obj. 1.70077e+06 iterations 306
Cbc0038I Pass  47: (7.84 seconds) suminf.   82.01377 (863) obj. 1.70957e+06 iterations 409
Cbc0038I Pass  48: (8.23 seconds) suminf.  115.30833 (727) obj. 1.78101e+06 iterations 1799
Cbc0038I Pass  49: (8.52 seconds) suminf.   93.16343 (813) obj. 1.91653e+06 iterations 1276
Cbc0038I Pass  50: (8.64 seconds) suminf.   88.37745 (842) obj. 1.9122e+06 iterations 472
Cbc0038I Pass  51: (8.76 seconds) suminf.   84.31636 (861) obj. 1.91977e+06 iterations 445
Cbc0038I Pass  52: (8.81 seconds) suminf.   82.31786 (866) obj. 1.92445e+06 iterations 148
Cbc0038I Pass  53: (8.93 seconds) suminf.   77.45800 (859) obj. 1.95196e+06 iterations 432
Cbc0038I Pass  54: (8.94 seconds) suminf.   77.62114 (853) obj. 1.95022e+06 iterations 33
Cbc0038I Pass  55: (9.04 seconds) suminf.   76.96791 (864) obj. 1.94219e+06 iterations 317
Cbc0038I Pass  56: (9.06 seconds) suminf.   76.38266 (864) obj. 1.94033e+06 iterations 75
Cbc0038I Pass  57: (9.18 seconds) suminf.   78.87696 (844) obj. 1.94985e+06 iterations 405
Cbc0038I Pass  58: (9.24 seconds) suminf.   77.62636 (859) obj. 1.95041e+06 iterations 190
Cbc0038I Pass  59: (9.27 seconds) suminf.   77.57872 (858) obj. 1.94212e+06 iterations 75
Cbc0038I Pass  60: (9.38 seconds) suminf.   77.13824 (851) obj. 1.94848e+06 iterations 398
Cbc0038I Pass  61: (9.44 seconds) suminf.   75.68858 (867) obj. 1.94969e+06 iterations 178
Cbc0038I Pass  62: (9.57 seconds) suminf.   78.36337 (836) obj. 1.94173e+06 iterations 467
Cbc0038I Pass  63: (9.67 seconds) suminf.   75.12062 (805) obj. 1.94935e+06 iterations 333
Cbc0038I Pass  64: (9.80 seconds) suminf.   80.14503 (849) obj. 1.9501e+06 iterations 449
Cbc0038I Pass  65: (9.89 seconds) suminf.   77.48380 (846) obj. 1.94965e+06 iterations 321
Cbc0038I Pass  66: (9.90 seconds) suminf.   77.48380 (846) obj. 1.94965e+06 iterations 3
Cbc0038I Pass  67: (10.01 seconds) suminf.   77.60632 (831) obj. 1.94832e+06 iterations 382
Cbc0038I Pass  68: (10.09 seconds) suminf.   75.66764 (806) obj. 1.94981e+06 iterations 268
Cbc0038I Pass  69: (10.21 seconds) suminf.   77.89098 (826) obj. 1.94722e+06 iterations 446
Cbc0038I Pass  70: (10.30 seconds) suminf.   76.03902 (832) obj. 1.94794e+06 iterations 268
Cbc0038I Pass  71: (10.42 seconds) suminf.   77.27747 (829) obj. 1.94945e+06 iterations 447
Cbc0038I Pass  72: (10.74 seconds) suminf.  117.16862 (813) obj. 1.78852e+06 iterations 1353
Cbc0038I Pass  73: (10.97 seconds) suminf.   88.48126 (847) obj. 1.81186e+06 iterations 1004
Cbc0038I Pass  74: (11.04 seconds) suminf.   87.24460 (856) obj. 1.83947e+06 iterations 213
Cbc0038I Pass  75: (11.21 seconds) suminf.   85.38244 (844) obj. 1.98692e+06 iterations 703
Cbc0038I Pass  76: (11.30 seconds) suminf.   83.52852 (856) obj. 1.98189e+06 iterations 336
Cbc0038I Pass  77: (11.35 seconds) suminf.   83.19340 (864) obj. 1.97486e+06 iterations 149
Cbc0038I Pass  78: (11.53 seconds) suminf.   83.98380 (863) obj. 1.93843e+06 iterations 649
Cbc0038I Pass  79: (11.62 seconds) suminf.   82.77708 (856) obj. 1.93663e+06 iterations 274
Cbc0038I Pass  80: (11.66 seconds) suminf.   82.09945 (851) obj. 1.9268e+06 iterations 109
Cbc0038I Pass  81: (11.75 seconds) suminf.   83.96251 (849) obj. 1.94159e+06 iterations 296
Cbc0038I Pass  82: (11.84 seconds) suminf.   83.17968 (844) obj. 1.92656e+06 iterations 288
Cbc0038I Pass  83: (11.87 seconds) suminf.   82.35638 (871) obj. 1.92676e+06 iterations 89
Cbc0038I Pass  84: (11.99 seconds) suminf.   84.91144 (876) obj. 1.93224e+06 iterations 378
Cbc0038I Pass  85: (12.10 seconds) suminf.   82.77708 (856) obj. 1.93663e+06 iterations 364
Cbc0038I Pass  86: (12.13 seconds) suminf.   82.09945 (851) obj. 1.9268e+06 iterations 112
Cbc0038I Pass  87: (12.22 seconds) suminf.   85.03457 (873) obj. 1.94237e+06 iterations 281
Cbc0038I Pass  88: (12.32 seconds) suminf.   83.17968 (844) obj. 1.92656e+06 iterations 305
Cbc0038I Pass  89: (12.35 seconds) suminf.   82.35638 (871) obj. 1.92676e+06 iterations 92
Cbc0038I Pass  90: (12.45 seconds) suminf.   84.30534 (869) obj. 1.93915e+06 iterations 332
Cbc0038I Pass  91: (12.54 seconds) suminf.   82.77708 (856) obj. 1.93663e+06 iterations 289
Cbc0038I Pass  92: (12.58 seconds) suminf.   82.09945 (851) obj. 1.9268e+06 iterations 116
Cbc0038I Pass  93: (12.65 seconds) suminf.   83.20259 (851) obj. 1.93632e+06 iterations 220
Cbc0038I Pass  94: (12.71 seconds) suminf.   83.17968 (844) obj. 1.92656e+06 iterations 187
Cbc0038I Pass  95: (12.74 seconds) suminf.   82.35638 (871) obj. 1.92676e+06 iterations 81
Cbc0038I Pass  96: (12.82 seconds) suminf.   83.37480 (843) obj. 1.93558e+06 iterations 254
Cbc0038I Pass  97: (12.84 seconds) suminf.   82.90382 (841) obj. 1.93676e+06 iterations 50
Cbc0038I Pass  98: (12.93 seconds) suminf.   81.63682 (856) obj. 1.92957e+06 iterations 267
Cbc0038I Pass  99: (13.25 seconds) suminf.  108.34392 (794) obj. 1.9605e+06 iterations 1389
Cbc0038I Pass 100: (13.68 seconds) suminf.  115.20769 (800) obj. 1.8543e+06 iterations 1781
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4919 rows 1657 columns, reduced to 4635 rows 1528 columns - too large
Cbc0038I Mini branch and bound did not improve solution (13.78 seconds)
Cbc0038I After 13.78 seconds - Feasibility pump exiting - took 12.07 seconds
Cbc0031I 25 added rows had average density of 5.44
Cbc0013I At root node, 25 cuts changed objective from 841098.24 to 1130496 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 87 row cuts average 2.8 elements, 1 column cuts (1 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 63 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.491 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 97 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1130496 (23.45 seconds)
Cbc0010I After 100 nodes, 30 on tree, 1e+50 best solution, best possible 1130496 (120.14 seconds)
Cbc0010I After 200 nodes, 37 on tree, 1e+50 best solution, best possible 1130496 (221.28 seconds)
Cbc0010I After 300 nodes, 53 on tree, 1e+50 best solution, best possible 1130496 (307.79 seconds)
Cbc0010I After 400 nodes, 40 on tree, 1e+50 best solution, best possible 1130496 (446.08 seconds)
Cbc0010I After 500 nodes, 46 on tree, 1e+50 best solution, best possible 1130496 (530.62 seconds)
Cbc0010I After 600 nodes, 33 on tree, 1e+50 best solution, best possible 1130496 (647.05 seconds)
Cbc0010I After 700 nodes, 37 on tree, 1e+50 best solution, best possible 1130496 (748.60 seconds)
Cbc0010I After 800 nodes, 28 on tree, 1e+50 best solution, best possible 1130496 (861.67 seconds)
Cbc0010I After 900 nodes, 30 on tree, 1e+50 best solution, best possible 1130496 (978.98 seconds)
Cbc0010I After 1000 nodes, 13 on tree, 1e+50 best solution, best possible 1130496 (1130.06 seconds)
Cbc0010I After 1100 nodes, 13 on tree, 1e+50 best solution, best possible 1130496 (1281.09 seconds)
Cbc0010I After 1200 nodes, 18 on tree, 1e+50 best solution, best possible 1130496 (1434.29 seconds)
Cbc0010I After 1300 nodes, 33 on tree, 1e+50 best solution, best possible 1130496 (1563.06 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 1e+50 best solution, best possible 1130496 (1662.70 seconds)
Cbc0010I After 1500 nodes, 27 on tree, 1e+50 best solution, best possible 1130496 (1752.65 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1130496), took 4531240 iterations and 1525 nodes (1800.45 seconds)
Cbc0032I Strong branching done 14404 times (1146000 iterations), fathomed 63 nodes and fixed 2022 variables
Cbc0035I Maximum depth 49, 0 variables fixed on reduced cost
Cuts at root node changed objective from 841098 to 1.1305e+06
Probing was tried 1069 times and created 31458 cuts of which 0 were active after adding rounds of cuts (6.394 seconds)
Gomory was tried 989 times and created 969 cuts of which 0 were active after adding rounds of cuts (7.161 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 989 times and created 8770 cuts of which 0 were active after adding rounds of cuts (2.546 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.069 seconds)
ImplicationCuts was tried 74 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1130496.000
Enumerated nodes:               1525
Total iterations:               4531240
Time (CPU seconds):             1800.45
Time (Wallclock seconds):       1805.41

Total time (CPU seconds):       1800.46   (Wallclock seconds):       1805.43

