Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_35_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_35_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 35840 - 0.38 seconds
Cgl0002I 97 variables fixed
Cgl0003I 0 fixed, 18 tightened bounds, 611 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 97 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 3731 rows, 1224 columns (1224 integer (1188 of which binary)) and 12651 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1224 objects (1224 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 704 integers unsatisfied sum - 215.536
Cbc0038I Pass   1: (0.85 seconds) suminf.  107.51464 (664) obj. 48099.1 iterations 1399
Cbc0038I Pass   2: (1.00 seconds) suminf.   89.44485 (657) obj. 57249 iterations 703
Cbc0038I Pass   3: (1.04 seconds) suminf.   84.00506 (668) obj. 59109.2 iterations 181
Cbc0038I Pass   4: (1.09 seconds) suminf.   83.18427 (662) obj. 59738.9 iterations 212
Cbc0038I Pass   5: (1.12 seconds) suminf.   81.90992 (645) obj. 59701.7 iterations 126
Cbc0038I Pass   6: (1.20 seconds) suminf.   76.41416 (666) obj. 62661.1 iterations 432
Cbc0038I Pass   7: (1.24 seconds) suminf.   77.14133 (674) obj. 61473.9 iterations 142
Cbc0038I Pass   8: (1.29 seconds) suminf.   78.31758 (683) obj. 60295.5 iterations 205
Cbc0038I Pass   9: (1.34 seconds) suminf.   77.31890 (686) obj. 60346 iterations 196
Cbc0038I Pass  10: (1.36 seconds) suminf.   76.82636 (681) obj. 60292.8 iterations 25
Cbc0038I Pass  11: (1.43 seconds) suminf.   84.23210 (675) obj. 63394.1 iterations 366
Cbc0038I Pass  12: (1.49 seconds) suminf.   79.96122 (647) obj. 64357.7 iterations 231
Cbc0038I Pass  13: (1.52 seconds) suminf.   80.16133 (643) obj. 64735.1 iterations 83
Cbc0038I Pass  14: (1.54 seconds) suminf.   80.41652 (652) obj. 64910 iterations 67
Cbc0038I Pass  15: (1.59 seconds) suminf.   84.23740 (597) obj. 63896.6 iterations 254
Cbc0038I Pass  16: (1.63 seconds) suminf.   82.90259 (614) obj. 64804.9 iterations 166
Cbc0038I Pass  17: (1.65 seconds) suminf.   82.59530 (604) obj. 64977.3 iterations 38
Cbc0038I Pass  18: (1.69 seconds) suminf.   83.16828 (612) obj. 64242.6 iterations 190
Cbc0038I Pass  19: (1.73 seconds) suminf.   80.65092 (623) obj. 64943.2 iterations 145
Cbc0038I Pass  20: (1.74 seconds) suminf.   80.65145 (623) obj. 64817.5 iterations 54
Cbc0038I Pass  21: (1.77 seconds) suminf.   80.19362 (626) obj. 64887.2 iterations 97
Cbc0038I Pass  22: (1.84 seconds) suminf.   76.72579 (600) obj. 64854.5 iterations 336
Cbc0038I Pass  23: (1.88 seconds) suminf.   75.71502 (616) obj. 65108.8 iterations 161
Cbc0038I Pass  24: (1.90 seconds) suminf.   74.87918 (631) obj. 65156.9 iterations 79
Cbc0038I Pass  25: (1.96 seconds) suminf.   72.49996 (617) obj. 63456.1 iterations 234
Cbc0038I Pass  26: (1.99 seconds) suminf.   72.13643 (628) obj. 64086.4 iterations 162
Cbc0038I Pass  27: (2.00 seconds) suminf.   72.60673 (640) obj. 63887.4 iterations 23
Cbc0038I Pass  28: (2.08 seconds) suminf.   68.64428 (587) obj. 62609.2 iterations 366
Cbc0038I Pass  29: (2.12 seconds) suminf.   65.79235 (586) obj. 65506.2 iterations 168
Cbc0038I Pass  30: (2.13 seconds) suminf.   66.09316 (581) obj. 65513.6 iterations 23
Cbc0038I Pass  31: (2.16 seconds) suminf.   66.06963 (578) obj. 65470.7 iterations 135
Cbc0038I Pass  32: (2.20 seconds) suminf.   63.99950 (581) obj. 65529.8 iterations 143
Cbc0038I Pass  33: (2.22 seconds) suminf.   64.86393 (581) obj. 65502.7 iterations 79
Cbc0038I Pass  34: (2.44 seconds) suminf.  111.26784 (656) obj. 79837.7 iterations 1223
Cbc0038I Pass  35: (2.59 seconds) suminf.   75.57566 (608) obj. 80990.1 iterations 779
Cbc0038I Pass  36: (2.64 seconds) suminf.   73.74877 (622) obj. 80968.2 iterations 161
Cbc0038I Pass  37: (2.67 seconds) suminf.   71.30278 (628) obj. 80831.9 iterations 98
Cbc0038I Pass  38: (2.74 seconds) suminf.   72.55557 (647) obj. 80165.4 iterations 256
Cbc0038I Pass  39: (2.75 seconds) suminf.   73.06692 (649) obj. 80584.8 iterations 43
Cbc0038I Pass  40: (2.82 seconds) suminf.   76.23226 (621) obj. 80691.4 iterations 287
Cbc0038I Pass  41: (2.85 seconds) suminf.   74.01524 (628) obj. 80802.2 iterations 94
Cbc0038I Pass  42: (2.93 seconds) suminf.   67.19095 (618) obj. 80724.8 iterations 360
Cbc0038I Pass  43: (2.96 seconds) suminf.   66.00015 (593) obj. 80326.8 iterations 95
Cbc0038I Pass  44: (2.99 seconds) suminf.   64.48191 (614) obj. 80372.3 iterations 102
Cbc0038I Pass  45: (3.07 seconds) suminf.   60.87126 (585) obj. 74037.2 iterations 326
Cbc0038I Pass  46: (3.08 seconds) suminf.   62.27463 (557) obj. 74024.8 iterations 54
Cbc0038I Pass  47: (3.11 seconds) suminf.   61.47282 (555) obj. 74070 iterations 75
Cbc0038I Pass  48: (3.14 seconds) suminf.   62.97539 (555) obj. 74415.3 iterations 153
Cbc0038I Pass  49: (3.17 seconds) suminf.   63.10305 (549) obj. 74097.3 iterations 109
Cbc0038I Pass  50: (3.22 seconds) suminf.   59.00674 (536) obj. 74361.2 iterations 256
Cbc0038I Pass  51: (3.25 seconds) suminf.   58.55802 (540) obj. 74351.3 iterations 156
Cbc0038I Pass  52: (3.32 seconds) suminf.   52.51796 (566) obj. 74333.8 iterations 352
Cbc0038I Pass  53: (3.36 seconds) suminf.   51.43800 (515) obj. 74133 iterations 148
Cbc0038I Pass  54: (3.38 seconds) suminf.   51.02347 (536) obj. 74347.2 iterations 62
Cbc0038I Pass  55: (3.44 seconds) suminf.   53.22592 (576) obj. 74395.7 iterations 271
Cbc0038I Pass  56: (3.48 seconds) suminf.   51.68079 (544) obj. 74316.7 iterations 174
Cbc0038I Pass  57: (3.49 seconds) suminf.   51.55521 (546) obj. 74323.7 iterations 26
Cbc0038I Pass  58: (3.55 seconds) suminf.   55.46958 (542) obj. 74141.9 iterations 308
Cbc0038I Pass  59: (3.60 seconds) suminf.   53.31403 (534) obj. 74232.5 iterations 164
Cbc0038I Pass  60: (3.62 seconds) suminf.   51.65212 (530) obj. 74429.5 iterations 60
Cbc0038I Pass  61: (3.69 seconds) suminf.   50.88278 (563) obj. 74029.6 iterations 308
Cbc0038I Pass  62: (3.74 seconds) suminf.   48.84933 (574) obj. 74065 iterations 240
Cbc0038I Pass  63: (3.78 seconds) suminf.   49.01533 (534) obj. 74010.5 iterations 142
Cbc0038I Pass  64: (3.85 seconds) suminf.   47.76842 (551) obj. 74032.9 iterations 393
Cbc0038I Pass  65: (3.89 seconds) suminf.   46.51489 (581) obj. 74174.2 iterations 144
Cbc0038I Pass  66: (3.93 seconds) suminf.   46.07281 (574) obj. 74175.5 iterations 130
Cbc0038I Pass  67: (3.93 seconds) suminf.   45.90994 (573) obj. 74175.7 iterations 4
Cbc0038I Pass  68: (4.03 seconds) suminf.   45.39569 (562) obj. 74077.8 iterations 440
Cbc0038I Pass  69: (4.06 seconds) suminf.   47.47107 (566) obj. 74102.3 iterations 138
Cbc0038I Pass  70: (4.09 seconds) suminf.   47.65779 (555) obj. 74102.3 iterations 77
Cbc0038I Pass  71: (4.12 seconds) suminf.   46.97184 (544) obj. 73885.1 iterations 111
Cbc0038I Pass  72: (4.17 seconds) suminf.   46.49790 (548) obj. 74011.7 iterations 232
Cbc0038I Pass  73: (4.19 seconds) suminf.   45.96172 (544) obj. 73999.9 iterations 64
Cbc0038I Pass  74: (4.20 seconds) suminf.   45.80167 (548) obj. 73992.8 iterations 15
Cbc0038I Pass  75: (4.28 seconds) suminf.   48.46921 (561) obj. 74288.9 iterations 367
Cbc0038I Pass  76: (4.30 seconds) suminf.   47.81985 (547) obj. 74293.9 iterations 104
Cbc0038I Pass  77: (4.38 seconds) suminf.   48.94481 (557) obj. 74047.9 iterations 369
Cbc0038I Pass  78: (4.41 seconds) suminf.   47.88282 (548) obj. 74283.6 iterations 103
Cbc0038I Pass  79: (4.48 seconds) suminf.   49.50579 (540) obj. 74250.8 iterations 304
Cbc0038I Pass  80: (4.52 seconds) suminf.   47.20304 (539) obj. 74282.6 iterations 211
Cbc0038I Pass  81: (4.59 seconds) suminf.   41.88595 (538) obj. 74120.1 iterations 333
Cbc0038I Pass  82: (4.61 seconds) suminf.   41.74152 (529) obj. 74125.2 iterations 39
Cbc0038I Pass  83: (4.66 seconds) suminf.   42.73220 (545) obj. 74091.7 iterations 239
Cbc0038I Pass  84: (4.69 seconds) suminf.   40.53488 (538) obj. 74061 iterations 122
Cbc0038I Pass  85: (4.75 seconds) suminf.   42.79342 (523) obj. 73987.5 iterations 254
Cbc0038I Pass  86: (4.78 seconds) suminf.   43.05388 (529) obj. 74188.3 iterations 145
Cbc0038I Pass  87: (4.85 seconds) suminf.   41.72238 (527) obj. 74123.4 iterations 286
Cbc0038I Pass  88: (4.87 seconds) suminf.   40.81298 (517) obj. 74113.1 iterations 94
Cbc0038I Pass  89: (4.94 seconds) suminf.   44.86689 (527) obj. 74102.6 iterations 324
Cbc0038I Pass  90: (4.99 seconds) suminf.   45.94233 (536) obj. 74099.1 iterations 196
Cbc0038I Pass  91: (5.01 seconds) suminf.   45.76591 (536) obj. 74110.6 iterations 73
Cbc0038I Pass  92: (5.08 seconds) suminf.   44.08342 (550) obj. 73733.1 iterations 336
Cbc0038I Pass  93: (5.10 seconds) suminf.   44.62399 (541) obj. 73712.1 iterations 79
Cbc0038I Pass  94: (5.19 seconds) suminf.   45.46278 (541) obj. 74049 iterations 442
Cbc0038I Pass  95: (5.23 seconds) suminf.   45.83265 (537) obj. 74052.1 iterations 152
Cbc0038I Pass  96: (5.30 seconds) suminf.   43.28578 (509) obj. 73382.2 iterations 365
Cbc0038I Pass  97: (5.36 seconds) suminf.   43.40237 (530) obj. 73279.2 iterations 265
Cbc0038I Pass  98: (5.42 seconds) suminf.   46.26901 (540) obj. 73872.7 iterations 271
Cbc0038I Pass  99: (5.46 seconds) suminf.   43.66419 (519) obj. 73928 iterations 172
Cbc0038I Pass 100: (5.67 seconds) suminf.   87.70468 (600) obj. 79670.8 iterations 1220
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 96 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 3499 rows 1120 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.70 seconds)
Cbc0038I After 5.70 seconds - Feasibility pump exiting - took 5.12 seconds
Cbc0031I 39 added rows had average density of 11.179487
Cbc0013I At root node, 39 cuts changed objective from 35840 to 38353.412 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.377 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 90 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.173 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 38353.412 (10.03 seconds)
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 38912 (54.40 seconds)
Cbc0010I After 200 nodes, 23 on tree, 1e+50 best solution, best possible 38912 (94.86 seconds)
Cbc0010I After 300 nodes, 33 on tree, 1e+50 best solution, best possible 38912 (138.67 seconds)
Cbc0010I After 400 nodes, 46 on tree, 1e+50 best solution, best possible 38912 (183.92 seconds)
Cbc0010I After 500 nodes, 65 on tree, 1e+50 best solution, best possible 38912 (231.62 seconds)
Cbc0010I After 600 nodes, 78 on tree, 1e+50 best solution, best possible 38912 (281.63 seconds)
Cbc0010I After 700 nodes, 109 on tree, 1e+50 best solution, best possible 38912 (342.70 seconds)
Cbc0010I After 800 nodes, 160 on tree, 1e+50 best solution, best possible 38912 (399.96 seconds)
Cbc0010I After 900 nodes, 213 on tree, 1e+50 best solution, best possible 38912 (453.89 seconds)
Cbc0010I After 1000 nodes, 264 on tree, 1e+50 best solution, best possible 38912 (518.85 seconds)
Cbc0010I After 1100 nodes, 266 on tree, 1e+50 best solution, best possible 38915 (580.37 seconds)
Cbc0010I After 1200 nodes, 278 on tree, 1e+50 best solution, best possible 38915 (610.58 seconds)
Cbc0010I After 1300 nodes, 275 on tree, 1e+50 best solution, best possible 38915 (631.03 seconds)
Cbc0010I After 1400 nodes, 279 on tree, 1e+50 best solution, best possible 38915 (655.84 seconds)
Cbc0010I After 1500 nodes, 283 on tree, 1e+50 best solution, best possible 38915 (675.09 seconds)
Cbc0010I After 1600 nodes, 293 on tree, 1e+50 best solution, best possible 38915 (692.29 seconds)
Cbc0010I After 1700 nodes, 292 on tree, 1e+50 best solution, best possible 38915 (713.78 seconds)
Cbc0010I After 1800 nodes, 288 on tree, 1e+50 best solution, best possible 38915 (735.95 seconds)
Cbc0010I After 1900 nodes, 285 on tree, 1e+50 best solution, best possible 38915 (752.40 seconds)
Cbc0010I After 2000 nodes, 274 on tree, 1e+50 best solution, best possible 38915 (772.09 seconds)
Cbc0010I After 2100 nodes, 278 on tree, 1e+50 best solution, best possible 38915 (788.84 seconds)
Cbc0010I After 2200 nodes, 272 on tree, 1e+50 best solution, best possible 38915 (814.46 seconds)
Cbc0010I After 2300 nodes, 269 on tree, 1e+50 best solution, best possible 38915 (834.19 seconds)
Cbc0010I After 2400 nodes, 281 on tree, 1e+50 best solution, best possible 38915 (857.50 seconds)
Cbc0010I After 2500 nodes, 274 on tree, 1e+50 best solution, best possible 38915 (873.58 seconds)
Cbc0010I After 2600 nodes, 275 on tree, 1e+50 best solution, best possible 38915 (887.87 seconds)
Cbc0010I After 2700 nodes, 274 on tree, 1e+50 best solution, best possible 38915 (900.52 seconds)
Cbc0010I After 2800 nodes, 271 on tree, 1e+50 best solution, best possible 38915 (909.52 seconds)
Cbc0010I After 2900 nodes, 273 on tree, 1e+50 best solution, best possible 38915 (963.00 seconds)
Cbc0010I After 3000 nodes, 275 on tree, 1e+50 best solution, best possible 38915 (997.23 seconds)
Cbc0010I After 3100 nodes, 265 on tree, 1e+50 best solution, best possible 38915 (1023.12 seconds)
Cbc0010I After 3200 nodes, 268 on tree, 1e+50 best solution, best possible 38915 (1047.55 seconds)
Cbc0010I After 3300 nodes, 278 on tree, 1e+50 best solution, best possible 38915 (1070.83 seconds)
Cbc0010I After 3400 nodes, 277 on tree, 1e+50 best solution, best possible 38915 (1089.69 seconds)
Cbc0010I After 3500 nodes, 269 on tree, 1e+50 best solution, best possible 38915 (1110.45 seconds)
Cbc0010I After 3600 nodes, 267 on tree, 1e+50 best solution, best possible 38915 (1142.26 seconds)
Cbc0010I After 3700 nodes, 279 on tree, 1e+50 best solution, best possible 38915 (1159.85 seconds)
Cbc0010I After 3800 nodes, 276 on tree, 1e+50 best solution, best possible 38915 (1180.59 seconds)
Cbc0010I After 3900 nodes, 271 on tree, 1e+50 best solution, best possible 38915 (1209.47 seconds)
Cbc0010I After 4000 nodes, 277 on tree, 1e+50 best solution, best possible 38915 (1239.71 seconds)
Cbc0010I After 4100 nodes, 280 on tree, 1e+50 best solution, best possible 38915 (1274.00 seconds)
Cbc0010I After 4200 nodes, 272 on tree, 1e+50 best solution, best possible 38915 (1290.19 seconds)
Cbc0010I After 4300 nodes, 275 on tree, 1e+50 best solution, best possible 38915 (1304.68 seconds)
Cbc0010I After 4400 nodes, 268 on tree, 1e+50 best solution, best possible 38915 (1319.48 seconds)
Cbc0010I After 4500 nodes, 273 on tree, 1e+50 best solution, best possible 38915 (1339.35 seconds)
Cbc0010I After 4600 nodes, 273 on tree, 1e+50 best solution, best possible 38915 (1366.72 seconds)
Cbc0010I After 4700 nodes, 267 on tree, 1e+50 best solution, best possible 38915 (1385.52 seconds)
Cbc0010I After 4800 nodes, 269 on tree, 1e+50 best solution, best possible 38915 (1410.59 seconds)
Cbc0010I After 4900 nodes, 269 on tree, 1e+50 best solution, best possible 38915 (1438.58 seconds)
Cbc0010I After 5000 nodes, 272 on tree, 1e+50 best solution, best possible 38915 (1465.72 seconds)
Cbc0010I After 5100 nodes, 277 on tree, 1e+50 best solution, best possible 39030.61 (1489.74 seconds)
Cbc0010I After 5200 nodes, 268 on tree, 1e+50 best solution, best possible 39030.61 (1511.77 seconds)
Cbc0010I After 5300 nodes, 274 on tree, 1e+50 best solution, best possible 39030.61 (1532.38 seconds)
Cbc0010I After 5400 nodes, 274 on tree, 1e+50 best solution, best possible 39030.61 (1552.02 seconds)
Cbc0010I After 5500 nodes, 265 on tree, 1e+50 best solution, best possible 39030.61 (1573.80 seconds)
Cbc0010I After 5600 nodes, 276 on tree, 1e+50 best solution, best possible 39030.61 (1594.35 seconds)
Cbc0010I After 5700 nodes, 273 on tree, 1e+50 best solution, best possible 39030.61 (1615.41 seconds)
Cbc0010I After 5800 nodes, 269 on tree, 1e+50 best solution, best possible 39030.61 (1638.31 seconds)
Cbc0010I After 5900 nodes, 277 on tree, 1e+50 best solution, best possible 39030.61 (1656.52 seconds)
Cbc0010I After 6000 nodes, 269 on tree, 1e+50 best solution, best possible 39030.61 (1669.21 seconds)
Cbc0010I After 6100 nodes, 265 on tree, 1e+50 best solution, best possible 39030.61 (1688.90 seconds)
Cbc0010I After 6200 nodes, 274 on tree, 1e+50 best solution, best possible 39030.61 (1710.25 seconds)
Cbc0010I After 6300 nodes, 273 on tree, 1e+50 best solution, best possible 39030.61 (1724.39 seconds)
Cbc0010I After 6400 nodes, 273 on tree, 1e+50 best solution, best possible 39030.61 (1744.03 seconds)
Cbc0010I After 6500 nodes, 265 on tree, 1e+50 best solution, best possible 39030.61 (1768.25 seconds)
Cbc0010I After 6600 nodes, 271 on tree, 1e+50 best solution, best possible 39030.61 (1789.18 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 39030.61), took 5672273 iterations and 6681 nodes (1800.41 seconds)
Cbc0032I Strong branching done 29052 times (2016266 iterations), fathomed 828 nodes and fixed 4532 variables
Cbc0035I Maximum depth 585, 0 variables fixed on reduced cost
Cuts at root node changed objective from 35840 to 38353.4
Probing was tried 1270 times and created 1767 cuts of which 0 were active after adding rounds of cuts (0.657 seconds)
Gomory was tried 1221 times and created 7622 cuts of which 0 were active after adding rounds of cuts (7.099 seconds)
Knapsack was tried 1221 times and created 8262 cuts of which 0 were active after adding rounds of cuts (1.524 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 1221 times and created 26373 cuts of which 0 were active after adding rounds of cuts (2.651 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    39030.610
Enumerated nodes:               6681
Total iterations:               5672273
Time (CPU seconds):             1800.41
Time (Wallclock seconds):       1816.35

Total time (CPU seconds):       1800.42   (Wallclock seconds):       1816.37

