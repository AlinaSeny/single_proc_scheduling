Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/order/dag225_reverse_tiers_input.lp sec 1800 solve solu no_transitive/dag225_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 696866 - 0.64 seconds
Cgl0002I 134 variables fixed
Cgl0003I 0 fixed, 12 tightened bounds, 858 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 307 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0004I processed model has 4689 rows, 1556 columns (1556 integer (1520 of which binary)) and 15426 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1556 objects (1556 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 822 integers unsatisfied sum - 256.547
Cbc0038I Pass   1: (2.70 seconds) suminf.  122.30067 (821) obj. 1.21908e+06 iterations 2538
Cbc0038I Pass   2: (3.02 seconds) suminf.   87.92233 (765) obj. 1.33736e+06 iterations 1357
Cbc0038I Pass   3: (3.12 seconds) suminf.   85.06662 (777) obj. 1.33965e+06 iterations 364
Cbc0038I Pass   4: (3.15 seconds) suminf.   83.87951 (761) obj. 1.33766e+06 iterations 82
Cbc0038I Pass   5: (3.25 seconds) suminf.   85.78033 (779) obj. 1.34831e+06 iterations 428
Cbc0038I Pass   6: (3.34 seconds) suminf.   85.51618 (726) obj. 1.3509e+06 iterations 319
Cbc0038I Pass   7: (3.42 seconds) suminf.   83.01428 (774) obj. 1.34173e+06 iterations 237
Cbc0038I Pass   8: (3.54 seconds) suminf.   80.39473 (813) obj. 1.3997e+06 iterations 478
Cbc0038I Pass   9: (3.58 seconds) suminf.   78.56474 (785) obj. 1.40001e+06 iterations 138
Cbc0038I Pass  10: (3.61 seconds) suminf.   78.60494 (786) obj. 1.40487e+06 iterations 75
Cbc0038I Pass  11: (3.84 seconds) suminf.   74.47232 (781) obj. 1.44235e+06 iterations 998
Cbc0038I Pass  12: (3.95 seconds) suminf.   70.59378 (843) obj. 1.44367e+06 iterations 456
Cbc0038I Pass  13: (3.97 seconds) suminf.   70.87018 (843) obj. 1.44498e+06 iterations 34
Cbc0038I Pass  14: (4.01 seconds) suminf.   71.61058 (837) obj. 1.44923e+06 iterations 135
Cbc0038I Pass  15: (4.05 seconds) suminf.   70.47802 (835) obj. 1.46803e+06 iterations 110
Cbc0038I Pass  16: (4.13 seconds) suminf.   69.06443 (846) obj. 1.50383e+06 iterations 322
Cbc0038I Pass  17: (4.20 seconds) suminf.   68.40326 (842) obj. 1.58553e+06 iterations 250
Cbc0038I Pass  18: (4.40 seconds) suminf.   64.20276 (856) obj. 1.56229e+06 iterations 848
Cbc0038I Pass  19: (4.53 seconds) suminf.   58.90368 (853) obj. 1.54518e+06 iterations 490
Cbc0038I Pass  20: (4.70 seconds) suminf.   61.89961 (864) obj. 1.55228e+06 iterations 746
Cbc0038I Pass  21: (4.82 seconds) suminf.   60.53512 (854) obj. 1.54617e+06 iterations 507
Cbc0038I Pass  22: (4.95 seconds) suminf.   55.89360 (857) obj. 1.5482e+06 iterations 542
Cbc0038I Pass  23: (5.03 seconds) suminf.   58.45629 (858) obj. 1.5449e+06 iterations 271
Cbc0038I Pass  24: (5.19 seconds) suminf.   61.07393 (873) obj. 1.54091e+06 iterations 711
Cbc0038I Pass  25: (5.29 seconds) suminf.   60.78811 (879) obj. 1.54246e+06 iterations 356
Cbc0038I Pass  26: (5.47 seconds) suminf.   60.68012 (855) obj. 1.562e+06 iterations 751
Cbc0038I Pass  27: (5.58 seconds) suminf.   58.99727 (876) obj. 1.56209e+06 iterations 441
Cbc0038I Pass  28: (5.65 seconds) suminf.   56.06442 (870) obj. 1.56048e+06 iterations 237
Cbc0038I Pass  29: (5.71 seconds) suminf.   57.66872 (868) obj. 1.5633e+06 iterations 195
Cbc0038I Pass  30: (5.83 seconds) suminf.   57.49371 (877) obj. 1.55575e+06 iterations 479
Cbc0038I Pass  31: (5.92 seconds) suminf.   55.05798 (864) obj. 1.55533e+06 iterations 331
Cbc0038I Pass  32: (6.05 seconds) suminf.   60.93902 (858) obj. 1.55536e+06 iterations 496
Cbc0038I Pass  33: (6.11 seconds) suminf.   59.89088 (863) obj. 1.54752e+06 iterations 157
Cbc0038I Pass  34: (6.15 seconds) suminf.   59.25869 (861) obj. 1.55861e+06 iterations 117
Cbc0038I Pass  35: (6.31 seconds) suminf.   63.05289 (848) obj. 1.55112e+06 iterations 648
Cbc0038I Pass  36: (6.40 seconds) suminf.   60.88996 (850) obj. 1.55849e+06 iterations 339
Cbc0038I Pass  37: (6.55 seconds) suminf.   62.32460 (858) obj. 1.55392e+06 iterations 606
Cbc0038I Pass  38: (6.63 seconds) suminf.   59.74225 (875) obj. 1.54071e+06 iterations 309
Cbc0038I Pass  39: (6.68 seconds) suminf.   59.04033 (877) obj. 1.54736e+06 iterations 167
Cbc0038I Pass  40: (6.83 seconds) suminf.   60.51897 (855) obj. 1.54808e+06 iterations 600
Cbc0038I Pass  41: (6.92 seconds) suminf.   59.36495 (858) obj. 1.55859e+06 iterations 319
Cbc0038I Pass  42: (7.01 seconds) suminf.   61.41021 (858) obj. 1.54961e+06 iterations 361
Cbc0038I Pass  43: (7.10 seconds) suminf.   58.39954 (868) obj. 1.54427e+06 iterations 329
Cbc0038I Pass  44: (7.14 seconds) suminf.   57.99062 (878) obj. 1.55194e+06 iterations 125
Cbc0038I Pass  45: (7.29 seconds) suminf.   59.89705 (841) obj. 1.54712e+06 iterations 623
Cbc0038I Pass  46: (7.40 seconds) suminf.   58.99681 (857) obj. 1.56074e+06 iterations 401
Cbc0038I Pass  47: (7.50 seconds) suminf.   59.57058 (866) obj. 1.5634e+06 iterations 432
Cbc0038I Pass  48: (7.56 seconds) suminf.   56.98057 (864) obj. 1.55571e+06 iterations 170
Cbc0038I Pass  49: (7.59 seconds) suminf.   57.05804 (873) obj. 1.55475e+06 iterations 92
Cbc0038I Pass  50: (7.72 seconds) suminf.   60.66381 (829) obj. 1.54273e+06 iterations 515
Cbc0038I Pass  51: (7.81 seconds) suminf.   60.04785 (859) obj. 1.55233e+06 iterations 377
Cbc0038I Pass  52: (7.93 seconds) suminf.   59.69280 (848) obj. 1.55609e+06 iterations 452
Cbc0038I Pass  53: (7.98 seconds) suminf.   58.30933 (857) obj. 1.54866e+06 iterations 159
Cbc0038I Pass  54: (8.01 seconds) suminf.   58.24924 (865) obj. 1.55635e+06 iterations 86
Cbc0038I Pass  55: (8.13 seconds) suminf.   57.84866 (832) obj. 1.55553e+06 iterations 482
Cbc0038I Pass  56: (8.25 seconds) suminf.   59.02882 (846) obj. 1.55656e+06 iterations 463
Cbc0038I Pass  57: (8.38 seconds) suminf.   59.67935 (840) obj. 1.5646e+06 iterations 530
Cbc0038I Pass  58: (8.46 seconds) suminf.   57.08421 (849) obj. 1.55872e+06 iterations 285
Cbc0038I Pass  59: (8.50 seconds) suminf.   57.35404 (858) obj. 1.55544e+06 iterations 123
Cbc0038I Pass  60: (8.62 seconds) suminf.   61.07450 (851) obj. 1.54741e+06 iterations 462
Cbc0038I Pass  61: (8.72 seconds) suminf.   61.32508 (868) obj. 1.56091e+06 iterations 417
Cbc0038I Pass  62: (8.74 seconds) suminf.   60.94289 (865) obj. 1.56188e+06 iterations 26
Cbc0038I Pass  63: (8.87 seconds) suminf.   63.80628 (857) obj. 1.5668e+06 iterations 523
Cbc0038I Pass  64: (8.97 seconds) suminf.   58.50498 (857) obj. 1.55636e+06 iterations 372
Cbc0038I Pass  65: (9.02 seconds) suminf.   57.89533 (865) obj. 1.55682e+06 iterations 160
Cbc0038I Pass  66: (9.14 seconds) suminf.   60.69133 (856) obj. 1.54709e+06 iterations 450
Cbc0038I Pass  67: (9.25 seconds) suminf.   59.50382 (854) obj. 1.55844e+06 iterations 455
Cbc0038I Pass  68: (9.31 seconds) suminf.   58.65656 (856) obj. 1.56048e+06 iterations 170
Cbc0038I Pass  69: (9.44 seconds) suminf.   59.99110 (852) obj. 1.57361e+06 iterations 534
Cbc0038I Pass  70: (9.52 seconds) suminf.   57.08421 (849) obj. 1.55872e+06 iterations 288
Cbc0038I Pass  71: (9.55 seconds) suminf.   57.35404 (858) obj. 1.55544e+06 iterations 96
Cbc0038I Pass  72: (9.68 seconds) suminf.   62.42401 (855) obj. 1.54967e+06 iterations 498
Cbc0038I Pass  73: (9.80 seconds) suminf.   60.46215 (856) obj. 1.56255e+06 iterations 474
Cbc0038I Pass  74: (9.94 seconds) suminf.   60.20698 (856) obj. 1.56202e+06 iterations 548
Cbc0038I Pass  75: (10.01 seconds) suminf.   57.08421 (849) obj. 1.55872e+06 iterations 277
Cbc0038I Pass  76: (10.05 seconds) suminf.   57.35404 (858) obj. 1.55544e+06 iterations 106
Cbc0038I Pass  77: (10.18 seconds) suminf.   61.07450 (851) obj. 1.54741e+06 iterations 490
Cbc0038I Pass  78: (10.30 seconds) suminf.   61.32508 (868) obj. 1.56091e+06 iterations 486
Cbc0038I Pass  79: (10.31 seconds) suminf.   60.94289 (865) obj. 1.56188e+06 iterations 21
Cbc0038I Pass  80: (10.43 seconds) suminf.   62.36266 (847) obj. 1.56212e+06 iterations 464
Cbc0038I Pass  81: (10.47 seconds) suminf.   61.01648 (860) obj. 1.55684e+06 iterations 133
Cbc0038I Pass  82: (10.50 seconds) suminf.   60.00430 (855) obj. 1.55496e+06 iterations 91
Cbc0038I Pass  83: (10.65 seconds) suminf.   62.34217 (852) obj. 1.56615e+06 iterations 615
Cbc0038I Pass  84: (10.75 seconds) suminf.   60.67875 (867) obj. 1.56153e+06 iterations 381
Cbc0038I Pass  85: (10.95 seconds) suminf.   61.40597 (854) obj. 1.5763e+06 iterations 809
Cbc0038I Pass  86: (11.03 seconds) suminf.   60.14948 (841) obj. 1.56071e+06 iterations 317
Cbc0038I Pass  87: (11.17 seconds) suminf.   57.39771 (851) obj. 1.56293e+06 iterations 551
Cbc0038I Pass  88: (11.24 seconds) suminf.   58.23870 (852) obj. 1.56169e+06 iterations 261
Cbc0038I Pass  89: (11.40 seconds) suminf.   60.51539 (827) obj. 1.56212e+06 iterations 651
Cbc0038I Pass  90: (11.50 seconds) suminf.   58.64725 (842) obj. 1.54879e+06 iterations 420
Cbc0038I Pass  91: (11.56 seconds) suminf.   58.41489 (852) obj. 1.55818e+06 iterations 186
Cbc0038I Pass  92: (11.67 seconds) suminf.   57.58610 (813) obj. 1.55752e+06 iterations 447
Cbc0038I Pass  93: (11.80 seconds) suminf.   57.33207 (825) obj. 1.55498e+06 iterations 535
Cbc0038I Pass  94: (11.93 seconds) suminf.   60.46099 (828) obj. 1.56873e+06 iterations 597
Cbc0038I Pass  95: (12.05 seconds) suminf.   58.85799 (882) obj. 1.55229e+06 iterations 487
Cbc0038I Pass  96: (12.16 seconds) suminf.   56.63395 (831) obj. 1.55746e+06 iterations 446
Cbc0038I Pass  97: (12.23 seconds) suminf.   57.38915 (803) obj. 1.55607e+06 iterations 250
Cbc0038I Pass  98: (12.37 seconds) suminf.   61.05980 (843) obj. 1.56063e+06 iterations 617
Cbc0038I Pass  99: (12.49 seconds) suminf.   57.79385 (849) obj. 1.55778e+06 iterations 525
Cbc0038I Pass 100: (12.89 seconds) suminf.  103.02078 (869) obj. 1.86141e+06 iterations 2001
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 158 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4689 rows 1556 columns, reduced to 4349 rows 1393 columns - too large
Cbc0038I Mini branch and bound did not improve solution (12.92 seconds)
Cbc0038I After 12.92 seconds - Feasibility pump exiting - took 10.84 seconds
Cbc0031I 35 added rows had average density of 12.057143
Cbc0013I At root node, 35 cuts changed objective from 697377.03 to 884736 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 3.6 elements, 4 column cuts (4 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 33 row cuts average 53.6 elements, 0 column cuts (0 active)  in 0.517 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 151 row cuts average 23.5 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 28 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 884736 (20.63 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 884737 (142.82 seconds)
Cbc0010I After 200 nodes, 2 on tree, 1e+50 best solution, best possible 884740 (247.25 seconds)
Cbc0010I After 300 nodes, 20 on tree, 1e+50 best solution, best possible 884741 (367.59 seconds)
Cbc0010I After 400 nodes, 33 on tree, 1e+50 best solution, best possible 884741 (474.45 seconds)
Cbc0010I After 500 nodes, 46 on tree, 1e+50 best solution, best possible 884741 (556.42 seconds)
Cbc0010I After 600 nodes, 55 on tree, 1e+50 best solution, best possible 884741 (632.47 seconds)
Cbc0010I After 700 nodes, 62 on tree, 1e+50 best solution, best possible 884741 (732.87 seconds)
Cbc0010I After 800 nodes, 89 on tree, 1e+50 best solution, best possible 884741 (799.77 seconds)
Cbc0010I After 900 nodes, 112 on tree, 1e+50 best solution, best possible 884741 (875.61 seconds)
Cbc0010I After 1000 nodes, 140 on tree, 1e+50 best solution, best possible 884741 (950.46 seconds)
Cbc0010I After 1100 nodes, 134 on tree, 1e+50 best solution, best possible 884742 (1033.41 seconds)
Cbc0010I After 1200 nodes, 132 on tree, 1e+50 best solution, best possible 884742 (1114.55 seconds)
Cbc0010I After 1300 nodes, 125 on tree, 1e+50 best solution, best possible 884742 (1204.99 seconds)
Cbc0010I After 1400 nodes, 127 on tree, 1e+50 best solution, best possible 884742 (1296.52 seconds)
Cbc0010I After 1500 nodes, 121 on tree, 1e+50 best solution, best possible 884742 (1395.14 seconds)
Cbc0010I After 1600 nodes, 112 on tree, 1e+50 best solution, best possible 884742 (1470.53 seconds)
Cbc0010I After 1700 nodes, 100 on tree, 1e+50 best solution, best possible 884742 (1564.30 seconds)
Cbc0010I After 1800 nodes, 110 on tree, 1e+50 best solution, best possible 884742 (1652.15 seconds)
Cbc0010I After 1900 nodes, 107 on tree, 1e+50 best solution, best possible 884742 (1773.60 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 884742), took 4648768 iterations and 1939 nodes (1798.63 seconds)
Cbc0032I Strong branching done 19570 times (1750801 iterations), fathomed 70 nodes and fixed 1312 variables
Cbc0035I Maximum depth 88, 0 variables fixed on reduced cost
Cuts at root node changed objective from 697377 to 884736
Probing was tried 1470 times and created 52532 cuts of which 0 were active after adding rounds of cuts (11.903 seconds)
Gomory was tried 1346 times and created 539 cuts of which 0 were active after adding rounds of cuts (10.106 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 1346 times and created 10891 cuts of which 0 were active after adding rounds of cuts (3.002 seconds)
ZeroHalf was tried 1346 times and created 994 cuts of which 0 were active after adding rounds of cuts (52.669 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    884742.000
Enumerated nodes:               1939
Total iterations:               4648768
Time (CPU seconds):             1798.63
Time (Wallclock seconds):       1804.40

Total time (CPU seconds):       1798.65   (Wallclock seconds):       1804.42

