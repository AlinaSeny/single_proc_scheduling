Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag63_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/dag63_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 823311 - 0.95 seconds
Cgl0002I 137 variables fixed
Cgl0003I 0 fixed, 27 tightened bounds, 1065 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 432 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 4919 rows, 1657 columns (1657 integer (1620 of which binary)) and 16339 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1657 objects (1657 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 842 integers unsatisfied sum - 223.455
Cbc0038I Pass   1: (3.79 seconds) suminf.  112.19065 (887) obj. 1.03701e+06 iterations 2745
Cbc0038I Pass   2: (4.13 seconds) suminf.   91.57949 (893) obj. 1.20441e+06 iterations 1083
Cbc0038I Pass   3: (4.31 seconds) suminf.   89.41558 (914) obj. 1.33312e+06 iterations 567
Cbc0038I Pass   4: (4.37 seconds) suminf.   89.33214 (927) obj. 1.32684e+06 iterations 135
Cbc0038I Pass   5: (4.53 seconds) suminf.   84.15802 (896) obj. 1.34076e+06 iterations 576
Cbc0038I Pass   6: (4.66 seconds) suminf.   81.84518 (888) obj. 1.34015e+06 iterations 392
Cbc0038I Pass   7: (4.89 seconds) suminf.   80.07092 (884) obj. 1.33216e+06 iterations 791
Cbc0038I Pass   8: (4.99 seconds) suminf.   77.77353 (902) obj. 1.33413e+06 iterations 258
Cbc0038I Pass   9: (5.17 seconds) suminf.   77.64261 (927) obj. 1.34351e+06 iterations 589
Cbc0038I Pass  10: (5.21 seconds) suminf.   77.27896 (929) obj. 1.34556e+06 iterations 111
Cbc0038I Pass  11: (5.34 seconds) suminf.   78.56782 (928) obj. 1.3426e+06 iterations 361
Cbc0038I Pass  12: (5.43 seconds) suminf.   77.34150 (922) obj. 1.3489e+06 iterations 186
Cbc0038I Pass  13: (5.59 seconds) suminf.   82.18949 (888) obj. 1.33592e+06 iterations 483
Cbc0038I Pass  14: (5.72 seconds) suminf.   79.31879 (891) obj. 1.33773e+06 iterations 350
Cbc0038I Pass  15: (5.80 seconds) suminf.   77.77978 (913) obj. 1.33915e+06 iterations 185
Cbc0038I Pass  16: (5.84 seconds) suminf.   76.30273 (914) obj. 1.33878e+06 iterations 90
Cbc0038I Pass  17: (5.86 seconds) suminf.   75.69570 (916) obj. 1.33942e+06 iterations 25
Cbc0038I Pass  18: (6.04 seconds) suminf.   81.62202 (888) obj. 1.33636e+06 iterations 578
Cbc0038I Pass  19: (6.17 seconds) suminf.   77.64228 (918) obj. 1.34761e+06 iterations 337
Cbc0038I Pass  20: (6.26 seconds) suminf.   75.72985 (914) obj. 1.34775e+06 iterations 223
Cbc0038I Pass  21: (6.28 seconds) suminf.   75.69207 (916) obj. 1.34959e+06 iterations 17
Cbc0038I Pass  22: (6.45 seconds) suminf.   82.45226 (869) obj. 1.33477e+06 iterations 556
Cbc0038I Pass  23: (6.59 seconds) suminf.   78.04179 (917) obj. 1.33724e+06 iterations 402
Cbc0038I Pass  24: (6.72 seconds) suminf.   76.14334 (920) obj. 1.35365e+06 iterations 398
Cbc0038I Pass  25: (6.90 seconds) suminf.   77.39475 (908) obj. 1.3338e+06 iterations 513
Cbc0038I Pass  26: (7.01 seconds) suminf.   74.74428 (932) obj. 1.34708e+06 iterations 300
Cbc0038I Pass  27: (7.13 seconds) suminf.   76.74976 (916) obj. 1.33501e+06 iterations 296
Cbc0038I Pass  28: (7.24 seconds) suminf.   75.93292 (938) obj. 1.35256e+06 iterations 291
Cbc0038I Pass  29: (7.36 seconds) suminf.   77.68663 (930) obj. 1.33982e+06 iterations 350
Cbc0038I Pass  30: (7.93 seconds) suminf.  124.80603 (899) obj. 1.78224e+06 iterations 2113
Cbc0038I Pass  31: (8.30 seconds) suminf.   82.63157 (898) obj. 1.83925e+06 iterations 1307
Cbc0038I Pass  32: (8.45 seconds) suminf.   80.98170 (890) obj. 1.95694e+06 iterations 430
Cbc0038I Pass  33: (8.56 seconds) suminf.   77.14471 (896) obj. 1.9576e+06 iterations 291
Cbc0038I Pass  34: (8.73 seconds) suminf.   77.88254 (928) obj. 1.96226e+06 iterations 514
Cbc0038I Pass  35: (8.86 seconds) suminf.   78.36617 (906) obj. 1.95567e+06 iterations 327
Cbc0038I Pass  36: (8.89 seconds) suminf.   77.16040 (927) obj. 1.95554e+06 iterations 63
Cbc0038I Pass  37: (9.01 seconds) suminf.   74.60585 (907) obj. 1.94537e+06 iterations 340
Cbc0038I Pass  38: (9.10 seconds) suminf.   77.02771 (924) obj. 1.94282e+06 iterations 209
Cbc0038I Pass  39: (9.27 seconds) suminf.   76.60159 (891) obj. 1.95948e+06 iterations 537
Cbc0038I Pass  40: (9.32 seconds) suminf.   77.01387 (900) obj. 1.96258e+06 iterations 113
Cbc0038I Pass  41: (9.44 seconds) suminf.   76.04315 (872) obj. 1.94671e+06 iterations 338
Cbc0038I Pass  42: (9.47 seconds) suminf.   75.97553 (871) obj. 1.94698e+06 iterations 57
Cbc0038I Pass  43: (9.60 seconds) suminf.   77.47649 (889) obj. 1.96171e+06 iterations 398
Cbc0038I Pass  44: (10.06 seconds) suminf.  116.28854 (903) obj. 1.94161e+06 iterations 1722
Cbc0038I Pass  45: (10.36 seconds) suminf.   75.14291 (873) obj. 1.94499e+06 iterations 1055
Cbc0038I Pass  46: (10.45 seconds) suminf.   73.20278 (903) obj. 1.94478e+06 iterations 255
Cbc0038I Pass  47: (10.54 seconds) suminf.   72.35219 (892) obj. 1.96904e+06 iterations 208
Cbc0038I Pass  48: (10.67 seconds) suminf.   75.77269 (874) obj. 1.96649e+06 iterations 412
Cbc0038I Pass  49: (10.79 seconds) suminf.   72.98551 (870) obj. 1.95846e+06 iterations 354
Cbc0038I Pass  50: (10.84 seconds) suminf.   71.87601 (889) obj. 1.97369e+06 iterations 107
Cbc0038I Pass  51: (10.97 seconds) suminf.   72.55093 (907) obj. 1.96891e+06 iterations 409
Cbc0038I Pass  52: (11.07 seconds) suminf.   72.63932 (864) obj. 1.97341e+06 iterations 242
Cbc0038I Pass  53: (11.21 seconds) suminf.   75.24274 (901) obj. 1.95115e+06 iterations 465
Cbc0038I Pass  54: (11.32 seconds) suminf.   72.00944 (882) obj. 1.95172e+06 iterations 308
Cbc0038I Pass  55: (11.35 seconds) suminf.   71.50613 (874) obj. 1.95179e+06 iterations 69
Cbc0038I Pass  56: (11.39 seconds) suminf.   70.72376 (870) obj. 1.95282e+06 iterations 91
Cbc0038I Pass  57: (11.52 seconds) suminf.   75.99461 (907) obj. 1.94966e+06 iterations 358
Cbc0038I Pass  58: (11.60 seconds) suminf.   74.61841 (895) obj. 1.95002e+06 iterations 181
Cbc0038I Pass  59: (11.65 seconds) suminf.   74.13699 (920) obj. 1.94924e+06 iterations 113
Cbc0038I Pass  60: (11.78 seconds) suminf.   75.30334 (905) obj. 1.94096e+06 iterations 421
Cbc0038I Pass  61: (11.83 seconds) suminf.   75.06921 (903) obj. 1.94469e+06 iterations 128
Cbc0038I Pass  62: (11.96 seconds) suminf.   77.24847 (880) obj. 1.97427e+06 iterations 361
Cbc0038I Pass  63: (12.05 seconds) suminf.   74.86630 (900) obj. 1.97212e+06 iterations 243
Cbc0038I Pass  64: (12.19 seconds) suminf.   75.47176 (907) obj. 1.94676e+06 iterations 388
Cbc0038I Pass  65: (12.22 seconds) suminf.   75.40239 (916) obj. 1.94643e+06 iterations 64
Cbc0038I Pass  66: (12.32 seconds) suminf.   74.67467 (904) obj. 1.95087e+06 iterations 299
Cbc0038I Pass  67: (12.41 seconds) suminf.   72.68170 (901) obj. 1.95121e+06 iterations 219
Cbc0038I Pass  68: (12.54 seconds) suminf.   72.20516 (901) obj. 1.94547e+06 iterations 359
Cbc0038I Pass  69: (12.61 seconds) suminf.   70.46564 (910) obj. 1.9458e+06 iterations 184
Cbc0038I Pass  70: (12.72 seconds) suminf.   72.17827 (922) obj. 1.94731e+06 iterations 284
Cbc0038I Pass  71: (12.80 seconds) suminf.   72.12885 (899) obj. 1.94708e+06 iterations 159
Cbc0038I Pass  72: (12.81 seconds) suminf.   72.09251 (907) obj. 1.94675e+06 iterations 28
Cbc0038I Pass  73: (12.91 seconds) suminf.   71.16328 (947) obj. 1.94471e+06 iterations 253
Cbc0038I Pass  74: (12.96 seconds) suminf.   70.48225 (922) obj. 1.94723e+06 iterations 120
Cbc0038I Pass  75: (13.05 seconds) suminf.   69.93801 (900) obj. 1.95138e+06 iterations 196
Cbc0038I Pass  76: (13.22 seconds) suminf.   73.83356 (908) obj. 1.9507e+06 iterations 538
Cbc0038I Pass  77: (13.32 seconds) suminf.   73.46406 (878) obj. 1.95366e+06 iterations 273
Cbc0038I Pass  78: (13.45 seconds) suminf.   71.58812 (922) obj. 1.96881e+06 iterations 377
Cbc0038I Pass  79: (13.54 seconds) suminf.   71.30831 (891) obj. 1.97361e+06 iterations 216
Cbc0038I Pass  80: (13.69 seconds) suminf.   75.90444 (893) obj. 1.94801e+06 iterations 444
Cbc0038I Pass  81: (13.78 seconds) suminf.   73.42186 (871) obj. 1.94832e+06 iterations 228
Cbc0038I Pass  82: (13.82 seconds) suminf.   73.32517 (884) obj. 1.94834e+06 iterations 94
Cbc0038I Pass  83: (13.95 seconds) suminf.   73.56257 (906) obj. 1.95579e+06 iterations 388
Cbc0038I Pass  84: (14.01 seconds) suminf.   71.66609 (913) obj. 1.97355e+06 iterations 146
Cbc0038I Pass  85: (14.11 seconds) suminf.   73.46897 (901) obj. 1.95087e+06 iterations 281
Cbc0038I Pass  86: (14.18 seconds) suminf.   72.61216 (915) obj. 1.95128e+06 iterations 146
Cbc0038I Pass  87: (14.31 seconds) suminf.   74.36495 (896) obj. 1.98193e+06 iterations 429
Cbc0038I Pass  88: (14.38 seconds) suminf.   73.91263 (892) obj. 1.98165e+06 iterations 182
Cbc0038I Pass  89: (14.43 seconds) suminf.   73.25547 (894) obj. 1.98881e+06 iterations 130
Cbc0038I Pass  90: (14.49 seconds) suminf.   73.14090 (898) obj. 1.98456e+06 iterations 135
Cbc0038I Pass  91: (14.52 seconds) suminf.   72.36299 (896) obj. 1.9897e+06 iterations 70
Cbc0038I Pass  92: (14.64 seconds) suminf.   74.50338 (884) obj. 1.94859e+06 iterations 408
Cbc0038I Pass  93: (14.70 seconds) suminf.   73.98549 (889) obj. 1.94783e+06 iterations 157
Cbc0038I Pass  94: (14.85 seconds) suminf.   71.99450 (886) obj. 1.95283e+06 iterations 468
Cbc0038I Pass  95: (14.95 seconds) suminf.   71.60028 (887) obj. 1.99361e+06 iterations 310
Cbc0038I Pass  96: (15.02 seconds) suminf.   73.14090 (898) obj. 1.98456e+06 iterations 182
Cbc0038I Pass  97: (15.05 seconds) suminf.   72.36299 (896) obj. 1.9897e+06 iterations 69
Cbc0038I Pass  98: (15.18 seconds) suminf.   76.65599 (881) obj. 1.94625e+06 iterations 408
Cbc0038I Pass  99: (15.26 seconds) suminf.   74.90893 (886) obj. 1.9551e+06 iterations 219
Cbc0038I Pass 100: (15.64 seconds) suminf.  103.07277 (895) obj. 1.9345e+06 iterations 1417
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4919 rows 1657 columns, reduced to 4711 rows 1556 columns - too large
Cbc0038I Mini branch and bound did not improve solution (16.50 seconds)
Cbc0038I After 16.50 seconds - Feasibility pump exiting - took 13.56 seconds
Cbc0031I 38 added rows had average density of 12.236842
Cbc0013I At root node, 38 cuts changed objective from 835012.46 to 1130496 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 97 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 62 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.433 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 117 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.408 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1130496 (25.07 seconds)
Cbc0010I After 100 nodes, 22 on tree, 1e+50 best solution, best possible 1130496 (108.62 seconds)
Cbc0010I After 200 nodes, 24 on tree, 1e+50 best solution, best possible 1130496 (188.81 seconds)
Cbc0010I After 300 nodes, 20 on tree, 1e+50 best solution, best possible 1130496 (276.60 seconds)
Cbc0010I After 400 nodes, 15 on tree, 1e+50 best solution, best possible 1130496 (362.66 seconds)
Cbc0010I After 500 nodes, 15 on tree, 1e+50 best solution, best possible 1130496 (498.87 seconds)
Cbc0010I After 600 nodes, 19 on tree, 1e+50 best solution, best possible 1130496 (623.16 seconds)
Cbc0010I After 700 nodes, 11 on tree, 1e+50 best solution, best possible 1130496 (732.63 seconds)
Cbc0010I After 800 nodes, 31 on tree, 1e+50 best solution, best possible 1130496 (838.50 seconds)
Cbc0010I After 900 nodes, 27 on tree, 1e+50 best solution, best possible 1130496 (964.25 seconds)
Cbc0010I After 1000 nodes, 29 on tree, 1e+50 best solution, best possible 1130496 (1067.28 seconds)
Cbc0010I After 1100 nodes, 38 on tree, 1e+50 best solution, best possible 1130496 (1131.01 seconds)
Cbc0010I After 1200 nodes, 51 on tree, 1e+50 best solution, best possible 1130496 (1220.06 seconds)
Cbc0010I After 1300 nodes, 50 on tree, 1e+50 best solution, best possible 1130496 (1301.42 seconds)
Cbc0010I After 1400 nodes, 52 on tree, 1e+50 best solution, best possible 1130496 (1417.21 seconds)
Cbc0010I After 1500 nodes, 50 on tree, 1e+50 best solution, best possible 1130496 (1522.32 seconds)
Cbc0010I After 1600 nodes, 45 on tree, 1e+50 best solution, best possible 1130496 (1610.30 seconds)
Cbc0010I After 1700 nodes, 53 on tree, 1e+50 best solution, best possible 1130496 (1709.24 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1130496), took 4317946 iterations and 1787 nodes (1798.23 seconds)
Cbc0032I Strong branching done 18472 times (1493070 iterations), fathomed 102 nodes and fixed 2173 variables
Cbc0035I Maximum depth 37, 0 variables fixed on reduced cost
Cuts at root node changed objective from 835012 to 1.1305e+06
Probing was tried 1366 times and created 75436 cuts of which 0 were active after adding rounds of cuts (13.079 seconds)
Gomory was tried 1215 times and created 1128 cuts of which 0 were active after adding rounds of cuts (9.558 seconds)
Knapsack was tried 1215 times and created 1952 cuts of which 0 were active after adding rounds of cuts (2.078 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 1215 times and created 11525 cuts of which 0 were active after adding rounds of cuts (3.154 seconds)
ZeroHalf was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.408 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1130496.000
Enumerated nodes:               1787
Total iterations:               4317946
Time (CPU seconds):             1798.23
Time (Wallclock seconds):       1800.18

Total time (CPU seconds):       1798.24   (Wallclock seconds):       1800.20

