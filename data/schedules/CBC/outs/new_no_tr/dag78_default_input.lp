Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag78_default_input.lp sec 1800 solve solu solutions/new_no_tr/dag78_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 609512 - 4.66 seconds
Cgl0002I 150 variables fixed
Cgl0003I 0 fixed, 7 tightened bounds, 1240 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 267 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 6445 rows, 2206 columns (2206 integer (2164 of which binary)) and 21234 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2206 objects (2206 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1080 integers unsatisfied sum - 286.5
Cbc0038I Pass   1: (8.16 seconds) suminf.  168.38177 (983) obj. 926409 iterations 2877
Cbc0038I Pass   2: (8.64 seconds) suminf.  130.86610 (1019) obj. 1.09553e+06 iterations 1296
Cbc0038I Pass   3: (8.96 seconds) suminf.  120.37605 (1053) obj. 1.13013e+06 iterations 855
Cbc0038I Pass   4: (9.26 seconds) suminf.  112.90857 (1076) obj. 1.12275e+06 iterations 752
Cbc0038I Pass   5: (9.44 seconds) suminf.  110.04186 (1058) obj. 1.1204e+06 iterations 394
Cbc0038I Pass   6: (9.52 seconds) suminf.  108.34786 (1064) obj. 1.12165e+06 iterations 168
Cbc0038I Pass   7: (9.66 seconds) suminf.  108.27055 (1074) obj. 1.12233e+06 iterations 290
Cbc0038I Pass   8: (9.72 seconds) suminf.  108.62303 (1082) obj. 1.12574e+06 iterations 123
Cbc0038I Pass   9: (9.87 seconds) suminf.  109.33511 (1055) obj. 1.12148e+06 iterations 323
Cbc0038I Pass  10: (9.99 seconds) suminf.  108.07651 (1063) obj. 1.11751e+06 iterations 240
Cbc0038I Pass  11: (10.01 seconds) suminf.  108.18397 (1062) obj. 1.11875e+06 iterations 27
Cbc0038I Pass  12: (10.17 seconds) suminf.  106.79122 (1069) obj. 1.12179e+06 iterations 356
Cbc0038I Pass  13: (10.22 seconds) suminf.  107.73976 (1060) obj. 1.12235e+06 iterations 101
Cbc0038I Pass  14: (10.41 seconds) suminf.  106.63949 (1022) obj. 1.13052e+06 iterations 419
Cbc0038I Pass  15: (10.52 seconds) suminf.  109.65350 (1054) obj. 1.11576e+06 iterations 230
Cbc0038I Pass  16: (10.69 seconds) suminf.  106.73331 (1067) obj. 1.12301e+06 iterations 346
Cbc0038I Pass  17: (10.91 seconds) suminf.  109.18743 (1049) obj. 1.12773e+06 iterations 515
Cbc0038I Pass  18: (11.14 seconds) suminf.  102.56579 (1076) obj. 1.0973e+06 iterations 591
Cbc0038I Pass  19: (11.27 seconds) suminf.  102.43748 (1081) obj. 1.10521e+06 iterations 264
Cbc0038I Pass  20: (11.54 seconds) suminf.  101.34545 (1064) obj. 1.13785e+06 iterations 664
Cbc0038I Pass  21: (11.68 seconds) suminf.   98.22452 (1074) obj. 1.21361e+06 iterations 306
Cbc0038I Pass  22: (11.73 seconds) suminf.   98.74829 (1067) obj. 1.21374e+06 iterations 98
Cbc0038I Pass  23: (11.76 seconds) suminf.   98.18197 (1069) obj. 1.21366e+06 iterations 39
Cbc0038I Pass  24: (11.79 seconds) suminf.   97.97991 (1071) obj. 1.21367e+06 iterations 59
Cbc0038I Pass  25: (12.02 seconds) suminf.  100.69120 (1032) obj. 1.22253e+06 iterations 576
Cbc0038I Pass  26: (12.24 seconds) suminf.   97.15423 (1062) obj. 1.21913e+06 iterations 506
Cbc0038I Pass  27: (12.29 seconds) suminf.   96.73542 (1080) obj. 1.21696e+06 iterations 101
Cbc0038I Pass  28: (12.45 seconds) suminf.   97.27010 (1055) obj. 1.21925e+06 iterations 368
Cbc0038I Pass  29: (12.59 seconds) suminf.   96.33036 (1092) obj. 1.2209e+06 iterations 313
Cbc0038I Pass  30: (12.81 seconds) suminf.   97.39730 (1087) obj. 1.2308e+06 iterations 485
Cbc0038I Pass  31: (12.95 seconds) suminf.   96.47933 (1092) obj. 1.22057e+06 iterations 284
Cbc0038I Pass  32: (12.98 seconds) suminf.   96.51557 (1090) obj. 1.22055e+06 iterations 42
Cbc0038I Pass  33: (13.16 seconds) suminf.   96.39698 (1083) obj. 1.20942e+06 iterations 402
Cbc0038I Pass  34: (13.26 seconds) suminf.   96.64503 (1062) obj. 1.21143e+06 iterations 192
Cbc0038I Pass  35: (13.31 seconds) suminf.   95.96618 (1059) obj. 1.21134e+06 iterations 109
Cbc0038I Pass  36: (13.50 seconds) suminf.   97.48773 (1077) obj. 1.23297e+06 iterations 434
Cbc0038I Pass  37: (13.63 seconds) suminf.   96.69585 (1077) obj. 1.21967e+06 iterations 272
Cbc0038I Pass  38: (13.73 seconds) suminf.   96.70611 (1091) obj. 1.22057e+06 iterations 182
Cbc0038I Pass  39: (13.76 seconds) suminf.   96.51557 (1090) obj. 1.22055e+06 iterations 69
Cbc0038I Pass  40: (13.97 seconds) suminf.   96.57790 (1072) obj. 1.22559e+06 iterations 493
Cbc0038I Pass  41: (14.13 seconds) suminf.   96.64503 (1062) obj. 1.21143e+06 iterations 328
Cbc0038I Pass  42: (14.18 seconds) suminf.   95.96618 (1059) obj. 1.21134e+06 iterations 108
Cbc0038I Pass  43: (14.32 seconds) suminf.   97.17984 (1090) obj. 1.22216e+06 iterations 322
Cbc0038I Pass  44: (14.40 seconds) suminf.   96.51557 (1090) obj. 1.22055e+06 iterations 140
Cbc0038I Pass  45: (14.59 seconds) suminf.   96.69629 (1073) obj. 1.22028e+06 iterations 460
Cbc0038I Pass  46: (14.71 seconds) suminf.   96.64503 (1062) obj. 1.21143e+06 iterations 232
Cbc0038I Pass  47: (14.79 seconds) suminf.   95.96618 (1059) obj. 1.21134e+06 iterations 180
Cbc0038I Pass  48: (14.93 seconds) suminf.   96.67899 (1094) obj. 1.22136e+06 iterations 313
Cbc0038I Pass  49: (14.98 seconds) suminf.   96.51557 (1090) obj. 1.22055e+06 iterations 98
Cbc0038I Pass  50: (15.22 seconds) suminf.   96.83711 (1078) obj. 1.22107e+06 iterations 568
Cbc0038I Pass  51: (15.37 seconds) suminf.   96.79758 (1064) obj. 1.20782e+06 iterations 331
Cbc0038I Pass  52: (15.58 seconds) suminf.   97.10734 (1087) obj. 1.22196e+06 iterations 479
Cbc0038I Pass  53: (16.36 seconds) suminf.  143.95439 (971) obj. 1.49739e+06 iterations 2198
Cbc0038I Pass  54: (17.09 seconds) suminf.  102.24330 (1055) obj. 1.43359e+06 iterations 2081
Cbc0038I Pass  55: (17.19 seconds) suminf.  104.12350 (1050) obj. 1.44149e+06 iterations 183
Cbc0038I Pass  56: (17.36 seconds) suminf.  102.55094 (1089) obj. 1.44056e+06 iterations 378
Cbc0038I Pass  57: (17.49 seconds) suminf.  101.25168 (1065) obj. 1.44198e+06 iterations 253
Cbc0038I Pass  58: (17.66 seconds) suminf.   99.90227 (1040) obj. 1.44171e+06 iterations 412
Cbc0038I Pass  59: (17.70 seconds) suminf.   99.56315 (1017) obj. 1.44205e+06 iterations 80
Cbc0038I Pass  60: (17.90 seconds) suminf.   99.44297 (1046) obj. 1.44135e+06 iterations 488
Cbc0038I Pass  61: (18.04 seconds) suminf.   98.79004 (1075) obj. 1.43812e+06 iterations 286
Cbc0038I Pass  62: (18.22 seconds) suminf.  102.07349 (1015) obj. 1.44779e+06 iterations 428
Cbc0038I Pass  63: (18.42 seconds) suminf.   98.70054 (1056) obj. 1.44137e+06 iterations 508
Cbc0038I Pass  64: (18.47 seconds) suminf.   98.41306 (1051) obj. 1.4408e+06 iterations 102
Cbc0038I Pass  65: (18.67 seconds) suminf.   99.87616 (989) obj. 1.45256e+06 iterations 530
Cbc0038I Pass  66: (18.85 seconds) suminf.   99.54500 (1068) obj. 1.44025e+06 iterations 457
Cbc0038I Pass  67: (18.94 seconds) suminf.   98.26820 (1077) obj. 1.44495e+06 iterations 183
Cbc0038I Pass  68: (19.01 seconds) suminf.   97.79130 (1095) obj. 1.44279e+06 iterations 138
Cbc0038I Pass  69: (19.11 seconds) suminf.   98.52772 (1093) obj. 1.44274e+06 iterations 186
Cbc0038I Pass  70: (19.18 seconds) suminf.   98.24977 (1102) obj. 1.44072e+06 iterations 117
Cbc0038I Pass  71: (19.30 seconds) suminf.   98.55101 (1066) obj. 1.44433e+06 iterations 242
Cbc0038I Pass  72: (19.90 seconds) suminf.  139.51967 (1017) obj. 1.68945e+06 iterations 1764
Cbc0038I Pass  73: (20.46 seconds) suminf.   94.17554 (1068) obj. 1.70219e+06 iterations 1580
Cbc0038I Pass  74: (20.61 seconds) suminf.   92.98733 (1066) obj. 1.70696e+06 iterations 307
Cbc0038I Pass  75: (20.90 seconds) suminf.   91.69404 (1099) obj. 1.67378e+06 iterations 773
Cbc0038I Pass  76: (21.07 seconds) suminf.   91.99526 (1113) obj. 1.65102e+06 iterations 343
Cbc0038I Pass  77: (21.11 seconds) suminf.   91.61350 (1071) obj. 1.65096e+06 iterations 86
Cbc0038I Pass  78: (21.42 seconds) suminf.   94.08157 (1055) obj. 1.62491e+06 iterations 771
Cbc0038I Pass  79: (21.57 seconds) suminf.   93.42168 (1106) obj. 1.6288e+06 iterations 332
Cbc0038I Pass  80: (21.72 seconds) suminf.   88.57718 (1077) obj. 1.62767e+06 iterations 361
Cbc0038I Pass  81: (21.89 seconds) suminf.   85.58271 (1129) obj. 1.62027e+06 iterations 382
Cbc0038I Pass  82: (22.06 seconds) suminf.   87.52705 (1095) obj. 1.64795e+06 iterations 373
Cbc0038I Pass  83: (22.13 seconds) suminf.   90.24991 (1096) obj. 1.64313e+06 iterations 140
Cbc0038I Pass  84: (22.32 seconds) suminf.   88.22675 (1100) obj. 1.64997e+06 iterations 413
Cbc0038I Pass  85: (22.40 seconds) suminf.   88.21627 (1128) obj. 1.65038e+06 iterations 155
Cbc0038I Pass  86: (22.58 seconds) suminf.   87.26282 (1094) obj. 1.64795e+06 iterations 377
Cbc0038I Pass  87: (23.09 seconds) suminf.  116.47905 (1034) obj. 1.64919e+06 iterations 1498
Cbc0038I Pass  88: (23.50 seconds) suminf.   91.42953 (1055) obj. 1.63647e+06 iterations 1183
Cbc0038I Pass  89: (23.63 seconds) suminf.   90.94836 (1057) obj. 1.64818e+06 iterations 327
Cbc0038I Pass  90: (23.72 seconds) suminf.   90.42479 (1105) obj. 1.64762e+06 iterations 163
Cbc0038I Pass  91: (23.80 seconds) suminf.   90.31016 (1096) obj. 1.6459e+06 iterations 175
Cbc0038I Pass  92: (23.97 seconds) suminf.   89.16896 (1046) obj. 1.64535e+06 iterations 451
Cbc0038I Pass  93: (24.04 seconds) suminf.   87.17681 (1073) obj. 1.65017e+06 iterations 159
Cbc0038I Pass  94: (24.08 seconds) suminf.   86.52682 (1089) obj. 1.64984e+06 iterations 88
Cbc0038I Pass  95: (24.27 seconds) suminf.   89.63056 (1053) obj. 1.63882e+06 iterations 461
Cbc0038I Pass  96: (24.42 seconds) suminf.   86.59016 (1091) obj. 1.64729e+06 iterations 375
Cbc0038I Pass  97: (24.49 seconds) suminf.   85.74007 (1048) obj. 1.64496e+06 iterations 145
Cbc0038I Pass  98: (24.67 seconds) suminf.   87.54079 (1055) obj. 1.63664e+06 iterations 465
Cbc0038I Pass  99: (24.76 seconds) suminf.   85.10973 (1064) obj. 1.63954e+06 iterations 170
Cbc0038I Pass 100: (25.33 seconds) suminf.  124.46838 (1053) obj. 1.54183e+06 iterations 1857
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 216 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6445 rows 2206 columns, reduced to 5863 rows 1959 columns - too large
Cbc0038I Mini branch and bound did not improve solution (25.49 seconds)
Cbc0038I After 25.49 seconds - Feasibility pump exiting - took 18.39 seconds
Cbc0031I 44 added rows had average density of 5.2954545
Cbc0013I At root node, 44 cuts changed objective from 615289.21 to 720896 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 3.5 elements, 7 column cuts (7 active)  in 0.263 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 70 row cuts average 16.6 elements, 0 column cuts (0 active)  in 1.226 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 201 row cuts average 40.9 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 720896 (39.12 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 720897 (353.63 seconds)
Cbc0010I After 200 nodes, 31 on tree, 1e+50 best solution, best possible 720900 (661.84 seconds)
Cbc0010I After 300 nodes, 78 on tree, 1e+50 best solution, best possible 720900 (921.46 seconds)
Cbc0010I After 400 nodes, 114 on tree, 1e+50 best solution, best possible 720900 (1293.93 seconds)
Cbc0010I After 500 nodes, 149 on tree, 1e+50 best solution, best possible 720900 (1590.95 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 720900), took 2934426 iterations and 580 nodes (1799.02 seconds)
Cbc0032I Strong branching done 5972 times (484995 iterations), fathomed 57 nodes and fixed 1040 variables
Cbc0035I Maximum depth 232, 0 variables fixed on reduced cost
Cuts at root node changed objective from 615289 to 720896
Probing was tried 562 times and created 4698 cuts of which 0 were active after adding rounds of cuts (8.056 seconds)
Gomory was tried 560 times and created 794 cuts of which 0 were active after adding rounds of cuts (9.729 seconds)
Knapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 560 times and created 6488 cuts of which 0 were active after adding rounds of cuts (3.007 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.106 seconds)
ImplicationCuts was tried 59 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    720900.000
Enumerated nodes:               580
Total iterations:               2934426
Time (CPU seconds):             1799.02
Time (Wallclock seconds):       1800.25

Total time (CPU seconds):       1799.04   (Wallclock seconds):       1800.27

