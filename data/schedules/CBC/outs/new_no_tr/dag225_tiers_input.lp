Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/order/dag225_tiers_input.lp sec 1800 solve solu no_transitive/dag225_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 696866 - 0.69 seconds
Cgl0002I 134 variables fixed
Cgl0003I 0 fixed, 13 tightened bounds, 852 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 162 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 4689 rows, 1556 columns (1556 integer (1520 of which binary)) and 15505 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1556 objects (1556 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 825 integers unsatisfied sum - 238.036
Cbc0038I Pass   1: (2.04 seconds) suminf.  120.66576 (913) obj. 912555 iterations 2577
Cbc0038I Pass   2: (2.22 seconds) suminf.   92.66959 (912) obj. 1.05781e+06 iterations 1031
Cbc0038I Pass   3: (2.29 seconds) suminf.   88.12124 (919) obj. 1.123e+06 iterations 350
Cbc0038I Pass   4: (2.37 seconds) suminf.   84.52728 (954) obj. 1.10521e+06 iterations 412
Cbc0038I Pass   5: (2.42 seconds) suminf.   83.78778 (931) obj. 1.10029e+06 iterations 192
Cbc0038I Pass   6: (2.44 seconds) suminf.   83.04288 (933) obj. 1.10085e+06 iterations 67
Cbc0038I Pass   7: (2.46 seconds) suminf.   82.93747 (929) obj. 1.10243e+06 iterations 72
Cbc0038I Pass   8: (2.58 seconds) suminf.   78.28336 (928) obj. 1.13287e+06 iterations 608
Cbc0038I Pass   9: (2.61 seconds) suminf.   78.31422 (927) obj. 1.13757e+06 iterations 95
Cbc0038I Pass  10: (2.71 seconds) suminf.   75.70122 (952) obj. 1.2538e+06 iterations 572
Cbc0038I Pass  11: (2.80 seconds) suminf.   72.30528 (994) obj. 1.32067e+06 iterations 502
Cbc0038I Pass  12: (2.87 seconds) suminf.   71.24532 (976) obj. 1.34373e+06 iterations 302
Cbc0038I Pass  13: (2.96 seconds) suminf.   70.93928 (923) obj. 1.37418e+06 iterations 490
Cbc0038I Pass  14: (3.02 seconds) suminf.   68.77776 (953) obj. 1.38382e+06 iterations 317
Cbc0038I Pass  15: (3.09 seconds) suminf.   69.18129 (963) obj. 1.31825e+06 iterations 355
Cbc0038I Pass  16: (3.15 seconds) suminf.   68.59880 (959) obj. 1.35007e+06 iterations 285
Cbc0038I Pass  17: (3.24 seconds) suminf.   71.53860 (977) obj. 1.3523e+06 iterations 425
Cbc0038I Pass  18: (3.52 seconds) suminf.  139.55998 (917) obj. 1.85769e+06 iterations 1663
Cbc0038I Pass  19: (3.73 seconds) suminf.   85.47420 (863) obj. 1.72303e+06 iterations 1309
Cbc0038I Pass  20: (3.79 seconds) suminf.   79.26949 (863) obj. 1.73224e+06 iterations 376
Cbc0038I Pass  21: (3.81 seconds) suminf.   77.86542 (885) obj. 1.73052e+06 iterations 125
Cbc0038I Pass  22: (3.89 seconds) suminf.   71.99480 (905) obj. 1.74771e+06 iterations 535
Cbc0038I Pass  23: (3.93 seconds) suminf.   70.92548 (925) obj. 1.74516e+06 iterations 235
Cbc0038I Pass  24: (3.97 seconds) suminf.   70.10240 (926) obj. 1.74469e+06 iterations 134
Cbc0038I Pass  25: (4.03 seconds) suminf.   71.36627 (925) obj. 1.74241e+06 iterations 288
Cbc0038I Pass  26: (4.07 seconds) suminf.   70.21100 (923) obj. 1.7477e+06 iterations 187
Cbc0038I Pass  27: (4.14 seconds) suminf.   71.04879 (942) obj. 1.74354e+06 iterations 345
Cbc0038I Pass  28: (4.17 seconds) suminf.   70.61030 (933) obj. 1.74138e+06 iterations 158
Cbc0038I Pass  29: (4.21 seconds) suminf.   71.23542 (926) obj. 1.74435e+06 iterations 203
Cbc0038I Pass  30: (4.50 seconds) suminf.  119.93954 (922) obj. 1.73899e+06 iterations 1663
Cbc0038I Pass  31: (4.68 seconds) suminf.   81.28819 (924) obj. 1.70198e+06 iterations 1041
Cbc0038I Pass  32: (4.74 seconds) suminf.   77.50169 (914) obj. 1.70457e+06 iterations 300
Cbc0038I Pass  33: (4.82 seconds) suminf.   76.15578 (902) obj. 1.70418e+06 iterations 463
Cbc0038I Pass  34: (4.86 seconds) suminf.   74.98387 (905) obj. 1.70503e+06 iterations 206
Cbc0038I Pass  35: (4.97 seconds) suminf.   76.23200 (904) obj. 1.72858e+06 iterations 565
Cbc0038I Pass  36: (5.02 seconds) suminf.   74.75379 (907) obj. 1.71342e+06 iterations 287
Cbc0038I Pass  37: (5.04 seconds) suminf.   74.26354 (913) obj. 1.71156e+06 iterations 73
Cbc0038I Pass  38: (5.10 seconds) suminf.   75.09037 (897) obj. 1.72206e+06 iterations 325
Cbc0038I Pass  39: (5.14 seconds) suminf.   73.37983 (909) obj. 1.72409e+06 iterations 145
Cbc0038I Pass  40: (5.18 seconds) suminf.   72.89306 (914) obj. 1.72073e+06 iterations 169
Cbc0038I Pass  41: (5.24 seconds) suminf.   75.95266 (915) obj. 1.73148e+06 iterations 330
Cbc0038I Pass  42: (5.29 seconds) suminf.   73.53933 (907) obj. 1.72425e+06 iterations 210
Cbc0038I Pass  43: (5.36 seconds) suminf.   74.67021 (929) obj. 1.72384e+06 iterations 360
Cbc0038I Pass  44: (5.39 seconds) suminf.   74.04465 (917) obj. 1.72173e+06 iterations 133
Cbc0038I Pass  45: (5.45 seconds) suminf.   73.32584 (915) obj. 1.72849e+06 iterations 305
Cbc0038I Pass  46: (5.47 seconds) suminf.   73.11433 (905) obj. 1.72656e+06 iterations 96
Cbc0038I Pass  47: (5.50 seconds) suminf.   72.89306 (914) obj. 1.72073e+06 iterations 111
Cbc0038I Pass  48: (5.54 seconds) suminf.   73.86660 (921) obj. 1.72883e+06 iterations 207
Cbc0038I Pass  49: (5.57 seconds) suminf.   73.17486 (912) obj. 1.72408e+06 iterations 99
Cbc0038I Pass  50: (5.62 seconds) suminf.   74.86327 (920) obj. 1.72104e+06 iterations 258
Cbc0038I Pass  51: (5.66 seconds) suminf.   72.87571 (913) obj. 1.722e+06 iterations 159
Cbc0038I Pass  52: (5.71 seconds) suminf.   74.48609 (912) obj. 1.72737e+06 iterations 220
Cbc0038I Pass  53: (5.75 seconds) suminf.   73.37983 (909) obj. 1.72409e+06 iterations 215
Cbc0038I Pass  54: (5.80 seconds) suminf.   72.89306 (914) obj. 1.72073e+06 iterations 176
Cbc0038I Pass  55: (5.86 seconds) suminf.   75.35131 (923) obj. 1.7285e+06 iterations 316
Cbc0038I Pass  56: (5.90 seconds) suminf.   73.53933 (907) obj. 1.72425e+06 iterations 156
Cbc0038I Pass  57: (5.96 seconds) suminf.   74.56207 (922) obj. 1.72325e+06 iterations 305
Cbc0038I Pass  58: (5.99 seconds) suminf.   73.37983 (909) obj. 1.72409e+06 iterations 167
Cbc0038I Pass  59: (6.03 seconds) suminf.   72.89306 (914) obj. 1.72073e+06 iterations 168
Cbc0038I Pass  60: (6.09 seconds) suminf.   75.89176 (918) obj. 1.73144e+06 iterations 277
Cbc0038I Pass  61: (6.13 seconds) suminf.   73.53933 (907) obj. 1.72425e+06 iterations 185
Cbc0038I Pass  62: (6.19 seconds) suminf.   74.67021 (929) obj. 1.72384e+06 iterations 281
Cbc0038I Pass  63: (6.21 seconds) suminf.   74.04465 (917) obj. 1.72173e+06 iterations 109
Cbc0038I Pass  64: (6.27 seconds) suminf.   74.45184 (901) obj. 1.72624e+06 iterations 295
Cbc0038I Pass  65: (6.32 seconds) suminf.   73.10022 (909) obj. 1.72242e+06 iterations 206
Cbc0038I Pass  66: (6.38 seconds) suminf.   75.24170 (923) obj. 1.72875e+06 iterations 276
Cbc0038I Pass  67: (6.42 seconds) suminf.   73.92971 (912) obj. 1.72939e+06 iterations 199
Cbc0038I Pass  68: (6.46 seconds) suminf.   73.53933 (907) obj. 1.72425e+06 iterations 137
Cbc0038I Pass  69: (6.52 seconds) suminf.   74.56207 (922) obj. 1.72325e+06 iterations 340
Cbc0038I Pass  70: (6.56 seconds) suminf.   73.37983 (909) obj. 1.72409e+06 iterations 151
Cbc0038I Pass  71: (6.59 seconds) suminf.   72.89306 (914) obj. 1.72073e+06 iterations 145
Cbc0038I Pass  72: (6.64 seconds) suminf.   73.66435 (918) obj. 1.72624e+06 iterations 227
Cbc0038I Pass  73: (6.65 seconds) suminf.   73.17486 (912) obj. 1.72408e+06 iterations 73
Cbc0038I Pass  74: (6.71 seconds) suminf.   76.22865 (925) obj. 1.72109e+06 iterations 264
Cbc0038I Pass  75: (6.76 seconds) suminf.   73.05686 (908) obj. 1.72257e+06 iterations 235
Cbc0038I Pass  76: (6.77 seconds) suminf.   72.87571 (913) obj. 1.722e+06 iterations 41
Cbc0038I Pass  77: (6.83 seconds) suminf.   74.79422 (912) obj. 1.72757e+06 iterations 271
Cbc0038I Pass  78: (6.88 seconds) suminf.   73.69284 (913) obj. 1.72497e+06 iterations 232
Cbc0038I Pass  79: (6.90 seconds) suminf.   73.29809 (911) obj. 1.72075e+06 iterations 124
Cbc0038I Pass  80: (7.09 seconds) suminf.  109.72010 (851) obj. 1.82415e+06 iterations 1066
Cbc0038I Pass  81: (7.22 seconds) suminf.   80.89967 (879) obj. 1.82791e+06 iterations 784
Cbc0038I Pass  82: (7.27 seconds) suminf.   77.79729 (902) obj. 1.83121e+06 iterations 276
Cbc0038I Pass  83: (7.36 seconds) suminf.   74.97854 (905) obj. 1.83066e+06 iterations 495
Cbc0038I Pass  84: (7.40 seconds) suminf.   73.17241 (900) obj. 1.83163e+06 iterations 158
Cbc0038I Pass  85: (7.47 seconds) suminf.   73.87061 (911) obj. 1.83004e+06 iterations 317
Cbc0038I Pass  86: (7.53 seconds) suminf.   73.64417 (925) obj. 1.83008e+06 iterations 227
Cbc0038I Pass  87: (7.58 seconds) suminf.   73.91480 (907) obj. 1.831e+06 iterations 268
Cbc0038I Pass  88: (7.59 seconds) suminf.   73.81778 (905) obj. 1.83106e+06 iterations 22
Cbc0038I Pass  89: (7.65 seconds) suminf.   73.01098 (915) obj. 1.83107e+06 iterations 281
Cbc0038I Pass  90: (7.69 seconds) suminf.   72.39687 (916) obj. 1.83268e+06 iterations 164
Cbc0038I Pass  91: (7.74 seconds) suminf.   74.93829 (898) obj. 1.82972e+06 iterations 193
Cbc0038I Pass  92: (7.76 seconds) suminf.   74.68962 (908) obj. 1.82929e+06 iterations 108
Cbc0038I Pass  93: (7.81 seconds) suminf.   73.34446 (925) obj. 1.83125e+06 iterations 238
Cbc0038I Pass  94: (8.04 seconds) suminf.  116.91006 (888) obj. 1.82587e+06 iterations 1438
Cbc0038I Pass  95: (8.23 seconds) suminf.   77.44669 (908) obj. 1.85264e+06 iterations 1086
Cbc0038I Pass  96: (8.27 seconds) suminf.   75.37862 (928) obj. 1.87407e+06 iterations 186
Cbc0038I Pass  97: (8.30 seconds) suminf.   75.04836 (911) obj. 1.87952e+06 iterations 195
Cbc0038I Pass  98: (8.37 seconds) suminf.   75.50490 (921) obj. 1.8693e+06 iterations 342
Cbc0038I Pass  99: (8.41 seconds) suminf.   73.39033 (942) obj. 1.89297e+06 iterations 203
Cbc0038I Pass 100: (8.64 seconds) suminf.  130.29345 (889) obj. 1.95319e+06 iterations 1301
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4689 rows 1556 columns, reduced to 4579 rows 1504 columns - too large
Cbc0038I Mini branch and bound did not improve solution (8.66 seconds)
Cbc0038I After 8.66 seconds - Feasibility pump exiting - took 7.17 seconds
Cbc0031I 28 added rows had average density of 9.7142857
Cbc0013I At root node, 28 cuts changed objective from 697377.03 to 884736 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 53 row cuts average 180.4 elements, 0 column cuts (0 active)  in 0.495 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 149 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.219 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 884736 (19.59 seconds)
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 884736 (125.27 seconds)
Cbc0010I After 200 nodes, 71 on tree, 1e+50 best solution, best possible 884736 (229.30 seconds)
Cbc0010I After 300 nodes, 104 on tree, 1e+50 best solution, best possible 884736 (471.64 seconds)
Cbc0010I After 400 nodes, 153 on tree, 1e+50 best solution, best possible 884736 (554.08 seconds)
Cbc0010I After 500 nodes, 203 on tree, 1e+50 best solution, best possible 884736 (622.62 seconds)
Cbc0010I After 600 nodes, 253 on tree, 1e+50 best solution, best possible 884736 (693.49 seconds)
Cbc0010I After 700 nodes, 303 on tree, 1e+50 best solution, best possible 884736 (762.49 seconds)
Cbc0010I After 800 nodes, 353 on tree, 1e+50 best solution, best possible 884736 (830.80 seconds)
Cbc0010I After 900 nodes, 403 on tree, 1e+50 best solution, best possible 884736 (897.87 seconds)
Cbc0010I After 1000 nodes, 453 on tree, 1e+50 best solution, best possible 884736 (972.00 seconds)
Cbc0010I After 1100 nodes, 459 on tree, 1e+50 best solution, best possible 884741 (1087.84 seconds)
Cbc0010I After 1200 nodes, 458 on tree, 1e+50 best solution, best possible 884741 (1201.05 seconds)
Cbc0010I After 1300 nodes, 466 on tree, 1e+50 best solution, best possible 884741 (1271.12 seconds)
Cbc0010I After 1400 nodes, 453 on tree, 1e+50 best solution, best possible 884741 (1364.43 seconds)
Cbc0010I After 1500 nodes, 463 on tree, 1e+50 best solution, best possible 884741 (1479.59 seconds)
Cbc0010I After 1600 nodes, 465 on tree, 1e+50 best solution, best possible 884741 (1605.31 seconds)
Cbc0010I After 1700 nodes, 451 on tree, 1e+50 best solution, best possible 884741 (1780.04 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 884741), took 5884060 iterations and 1709 nodes (1800.65 seconds)
Cbc0032I Strong branching done 16060 times (1378178 iterations), fathomed 60 nodes and fixed 2041 variables
Cbc0035I Maximum depth 508, 0 variables fixed on reduced cost
Cuts at root node changed objective from 697377 to 884736
Probing was tried 1500 times and created 769 cuts of which 0 were active after adding rounds of cuts (0.664 seconds)
Gomory was tried 1500 times and created 1106 cuts of which 0 were active after adding rounds of cuts (11.652 seconds)
Knapsack was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 1500 times and created 11980 cuts of which 0 were active after adding rounds of cuts (3.998 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    884741.000
Enumerated nodes:               1709
Total iterations:               5884060
Time (CPU seconds):             1800.65
Time (Wallclock seconds):       1816.68

Total time (CPU seconds):       1800.67   (Wallclock seconds):       1816.70

