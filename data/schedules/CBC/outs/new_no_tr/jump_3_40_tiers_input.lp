Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_40_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_40_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 30997.7 - 4.11 seconds
Cgl0002I 151 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 851 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 86 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0004I processed model has 5456 rows, 1649 columns (1649 integer (1608 of which binary)) and 18678 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1649 objects (1649 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 901 integers unsatisfied sum - 320.992
Cbc0038I Pass   1: (8.57 seconds) suminf.  166.17720 (916) obj. 58674.2 iterations 3540
Cbc0038I Pass   2: (9.12 seconds) suminf.  112.22938 (1003) obj. 69203.5 iterations 1762
Cbc0038I Pass   3: (9.45 seconds) suminf.   84.25113 (1043) obj. 73765.4 iterations 997
Cbc0038I Pass   4: (9.58 seconds) suminf.   85.59083 (1059) obj. 73018.5 iterations 377
Cbc0038I Pass   5: (9.67 seconds) suminf.   84.49720 (1061) obj. 72697.3 iterations 200
Cbc0038I Pass   6: (9.71 seconds) suminf.   83.13301 (1046) obj. 72791.7 iterations 85
Cbc0038I Pass   7: (9.86 seconds) suminf.   84.92785 (974) obj. 73597.3 iterations 542
Cbc0038I Pass   8: (9.88 seconds) suminf.   84.74726 (982) obj. 73606.6 iterations 34
Cbc0038I Pass   9: (10.04 seconds) suminf.   79.96360 (994) obj. 72853.8 iterations 539
Cbc0038I Pass  10: (10.10 seconds) suminf.   79.23488 (1003) obj. 72833.3 iterations 148
Cbc0038I Pass  11: (10.13 seconds) suminf.   79.09131 (1006) obj. 72822.6 iterations 102
Cbc0038I Pass  12: (10.17 seconds) suminf.   78.56291 (1010) obj. 72656.4 iterations 116
Cbc0038I Pass  13: (10.46 seconds) suminf.   76.68874 (1018) obj. 72729.4 iterations 935
Cbc0038I Pass  14: (10.58 seconds) suminf.   74.49226 (1023) obj. 71713 iterations 345
Cbc0038I Pass  15: (10.82 seconds) suminf.   70.21322 (1066) obj. 72673.4 iterations 679
Cbc0038I Pass  16: (10.94 seconds) suminf.   68.55089 (1089) obj. 72907 iterations 294
Cbc0038I Pass  17: (10.99 seconds) suminf.   67.89038 (1085) obj. 72903.2 iterations 125
Cbc0038I Pass  18: (11.27 seconds) suminf.   66.57753 (1074) obj. 73318.9 iterations 813
Cbc0038I Pass  19: (11.36 seconds) suminf.   67.95421 (1066) obj. 73253.6 iterations 204
Cbc0038I Pass  20: (11.66 seconds) suminf.   70.38985 (1060) obj. 72190.9 iterations 867
Cbc0038I Pass  21: (11.77 seconds) suminf.   62.48392 (1022) obj. 72021.3 iterations 325
Cbc0038I Pass  22: (11.81 seconds) suminf.   60.44615 (1048) obj. 71851.7 iterations 93
Cbc0038I Pass  23: (11.91 seconds) suminf.   58.92931 (1037) obj. 71946.1 iterations 209
Cbc0038I Pass  24: (12.12 seconds) suminf.   62.07976 (1069) obj. 72569.6 iterations 647
Cbc0038I Pass  25: (12.27 seconds) suminf.   61.51226 (1048) obj. 72644 iterations 433
Cbc0038I Pass  26: (12.49 seconds) suminf.   66.81866 (1027) obj. 72825.3 iterations 658
Cbc0038I Pass  27: (12.62 seconds) suminf.   64.08442 (1025) obj. 72456.1 iterations 328
Cbc0038I Pass  28: (12.83 seconds) suminf.   65.35277 (1074) obj. 72843.2 iterations 659
Cbc0038I Pass  29: (12.93 seconds) suminf.   63.94426 (1057) obj. 72509 iterations 281
Cbc0038I Pass  30: (13.18 seconds) suminf.   65.35548 (1017) obj. 72392.5 iterations 757
Cbc0038I Pass  31: (13.30 seconds) suminf.   63.15865 (1030) obj. 72507 iterations 343
Cbc0038I Pass  32: (13.50 seconds) suminf.   64.51525 (1059) obj. 72841.7 iterations 644
Cbc0038I Pass  33: (13.64 seconds) suminf.   63.31629 (1040) obj. 71829.3 iterations 402
Cbc0038I Pass  34: (13.81 seconds) suminf.   65.11622 (1041) obj. 72828.5 iterations 491
Cbc0038I Pass  35: (13.95 seconds) suminf.   62.47224 (1019) obj. 71993.4 iterations 383
Cbc0038I Pass  36: (14.10 seconds) suminf.   64.58981 (1062) obj. 72857.8 iterations 432
Cbc0038I Pass  37: (14.57 seconds) suminf.  106.19072 (1025) obj. 85802.4 iterations 1740
Cbc0038I Pass  38: (14.91 seconds) suminf.   76.04412 (1060) obj. 86640.7 iterations 1155
Cbc0038I Pass  39: (15.04 seconds) suminf.   69.50731 (1080) obj. 86627.6 iterations 303
Cbc0038I Pass  40: (15.14 seconds) suminf.   68.81523 (1059) obj. 86491 iterations 239
Cbc0038I Pass  41: (15.41 seconds) suminf.   69.62890 (1048) obj. 86967.4 iterations 781
Cbc0038I Pass  42: (15.47 seconds) suminf.   68.42817 (1053) obj. 86974.9 iterations 139
Cbc0038I Pass  43: (15.77 seconds) suminf.   67.02678 (1058) obj. 87347.8 iterations 840
Cbc0038I Pass  44: (15.89 seconds) suminf.   65.50794 (1076) obj. 87374.7 iterations 270
Cbc0038I Pass  45: (16.11 seconds) suminf.   64.85495 (1076) obj. 87094.8 iterations 630
Cbc0038I Pass  46: (16.19 seconds) suminf.   65.60699 (1071) obj. 87127.8 iterations 163
Cbc0038I Pass  47: (16.25 seconds) suminf.   65.72864 (1099) obj. 87203.4 iterations 129
Cbc0038I Pass  48: (16.45 seconds) suminf.   62.82186 (1068) obj. 87288.8 iterations 576
Cbc0038I Pass  49: (16.51 seconds) suminf.   63.10537 (1078) obj. 87299 iterations 147
Cbc0038I Pass  50: (16.58 seconds) suminf.   63.36735 (1082) obj. 87435.5 iterations 144
Cbc0038I Pass  51: (16.77 seconds) suminf.   65.56301 (1070) obj. 87252.8 iterations 597
Cbc0038I Pass  52: (16.91 seconds) suminf.   64.24964 (1040) obj. 87476.1 iterations 407
Cbc0038I Pass  53: (16.97 seconds) suminf.   64.28567 (1035) obj. 87385.8 iterations 146
Cbc0038I Pass  54: (17.17 seconds) suminf.   65.76930 (1064) obj. 87157.9 iterations 568
Cbc0038I Pass  55: (17.36 seconds) suminf.   64.66788 (1068) obj. 87203.7 iterations 563
Cbc0038I Pass  56: (17.45 seconds) suminf.   64.00620 (1054) obj. 87147.2 iterations 203
Cbc0038I Pass  57: (17.61 seconds) suminf.   64.42442 (1075) obj. 87378.7 iterations 453
Cbc0038I Pass  58: (17.73 seconds) suminf.   64.83985 (1060) obj. 87390.9 iterations 299
Cbc0038I Pass  59: (17.77 seconds) suminf.   64.56300 (1056) obj. 87361.1 iterations 93
Cbc0038I Pass  60: (17.87 seconds) suminf.   64.25002 (1040) obj. 87431.4 iterations 243
Cbc0038I Pass  61: (17.99 seconds) suminf.   64.09909 (1013) obj. 87240.1 iterations 329
Cbc0038I Pass  62: (18.09 seconds) suminf.   63.84618 (1027) obj. 87320.6 iterations 267
Cbc0038I Pass  63: (18.20 seconds) suminf.   63.48788 (1040) obj. 87232 iterations 307
Cbc0038I Pass  64: (18.30 seconds) suminf.   64.36424 (1039) obj. 87417.1 iterations 238
Cbc0038I Pass  65: (18.35 seconds) suminf.   63.06653 (1034) obj. 87197.3 iterations 120
Cbc0038I Pass  66: (18.55 seconds) suminf.   66.71719 (1062) obj. 87168.3 iterations 554
Cbc0038I Pass  67: (18.73 seconds) suminf.   63.42543 (1029) obj. 87109.3 iterations 532
Cbc0038I Pass  68: (18.75 seconds) suminf.   63.38014 (1029) obj. 87118.4 iterations 38
Cbc0038I Pass  69: (18.97 seconds) suminf.   65.32652 (1046) obj. 87314.3 iterations 676
Cbc0038I Pass  70: (19.06 seconds) suminf.   63.76791 (1016) obj. 87478 iterations 232
Cbc0038I Pass  71: (19.13 seconds) suminf.   64.01137 (1017) obj. 87261.5 iterations 183
Cbc0038I Pass  72: (19.35 seconds) suminf.   66.27429 (1070) obj. 86725.9 iterations 592
Cbc0038I Pass  73: (19.47 seconds) suminf.   63.36178 (1065) obj. 87185.3 iterations 339
Cbc0038I Pass  74: (19.55 seconds) suminf.   62.82995 (1068) obj. 87356.7 iterations 178
Cbc0038I Pass  75: (19.59 seconds) suminf.   62.67279 (1063) obj. 87363.7 iterations 103
Cbc0038I Pass  76: (19.75 seconds) suminf.   63.31933 (1081) obj. 87402.7 iterations 476
Cbc0038I Pass  77: (19.86 seconds) suminf.   63.16533 (1061) obj. 87358.8 iterations 273
Cbc0038I Pass  78: (20.05 seconds) suminf.   63.49625 (1042) obj. 87568.4 iterations 525
Cbc0038I Pass  79: (20.18 seconds) suminf.   63.52317 (1068) obj. 87475.7 iterations 331
Cbc0038I Pass  80: (20.35 seconds) suminf.   62.73598 (1088) obj. 87282.8 iterations 500
Cbc0038I Pass  81: (20.42 seconds) suminf.   63.28881 (1029) obj. 87471.3 iterations 146
Cbc0038I Pass  82: (20.48 seconds) suminf.   63.07026 (1020) obj. 87265.5 iterations 165
Cbc0038I Pass  83: (20.63 seconds) suminf.   64.75667 (1002) obj. 87510.9 iterations 504
Cbc0038I Pass  84: (20.73 seconds) suminf.   64.28032 (999) obj. 87586.3 iterations 292
Cbc0038I Pass  85: (20.78 seconds) suminf.   64.10788 (1000) obj. 87585.1 iterations 134
Cbc0038I Pass  86: (20.97 seconds) suminf.   67.49480 (1011) obj. 87322.5 iterations 656
Cbc0038I Pass  87: (21.14 seconds) suminf.   63.95163 (1007) obj. 87387 iterations 570
Cbc0038I Pass  88: (21.34 seconds) suminf.   63.55376 (1066) obj. 87518.5 iterations 621
Cbc0038I Pass  89: (21.43 seconds) suminf.   62.81350 (1063) obj. 87568.8 iterations 228
Cbc0038I Pass  90: (21.59 seconds) suminf.   64.87555 (988) obj. 87598.9 iterations 566
Cbc0038I Pass  91: (22.05 seconds) suminf.   92.57258 (1063) obj. 97962.9 iterations 1600
Cbc0038I Pass  92: (22.37 seconds) suminf.   67.65525 (1028) obj. 101084 iterations 1004
Cbc0038I Pass  93: (22.47 seconds) suminf.   64.90509 (1043) obj. 100918 iterations 224
Cbc0038I Pass  94: (22.55 seconds) suminf.   61.64340 (1030) obj. 101201 iterations 162
Cbc0038I Pass  95: (22.62 seconds) suminf.   60.72186 (1032) obj. 100690 iterations 152
Cbc0038I Pass  96: (22.80 seconds) suminf.   59.86097 (1029) obj. 100729 iterations 486
Cbc0038I Pass  97: (22.90 seconds) suminf.   60.25331 (1016) obj. 101006 iterations 212
Cbc0038I Pass  98: (23.10 seconds) suminf.   64.52878 (1069) obj. 101134 iterations 606
Cbc0038I Pass  99: (23.25 seconds) suminf.   59.88299 (1065) obj. 101281 iterations 369
Cbc0038I Pass 100: (23.66 seconds) suminf.   82.96761 (1039) obj. 100435 iterations 1301
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5456 rows 1649 columns, reduced to 5367 rows 1607 columns - too large
Cbc0038I Mini branch and bound did not improve solution (23.69 seconds)
Cbc0038I After 23.70 seconds - Feasibility pump exiting - took 16.19 seconds
Cbc0031I 84 added rows had average density of 12.72619
Cbc0013I At root node, 84 cuts changed objective from 31103.912 to 40641.147 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 49 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 173 row cuts average 30.3 elements, 0 column cuts (0 active)  in 1.181 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 286 row cuts average 41.3 elements, 0 column cuts (0 active)  in 0.409 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 466 row cuts average 28.2 elements, 0 column cuts (0 active)  in 1.526 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 40641.147 (62.18 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 41003.802 (359.67 seconds)
Cbc0010I After 200 nodes, 27 on tree, 1e+50 best solution, best possible 41003.802 (587.90 seconds)
Cbc0010I After 300 nodes, 54 on tree, 1e+50 best solution, best possible 41003.802 (803.31 seconds)
Cbc0010I After 400 nodes, 83 on tree, 1e+50 best solution, best possible 41003.802 (1026.61 seconds)
Cbc0010I After 500 nodes, 83 on tree, 1e+50 best solution, best possible 41003.802 (1182.32 seconds)
Cbc0010I After 600 nodes, 125 on tree, 1e+50 best solution, best possible 41003.802 (1436.24 seconds)
Cbc0010I After 700 nodes, 166 on tree, 1e+50 best solution, best possible 41003.802 (1690.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 41003.802), took 3659376 iterations and 754 nodes (1797.43 seconds)
Cbc0032I Strong branching done 4208 times (354845 iterations), fathomed 0 nodes and fixed 646 variables
Cbc0035I Maximum depth 384, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31103.9 to 40641.1
Probing was tried 775 times and created 15835 cuts of which 0 were active after adding rounds of cuts (6.915 seconds)
Gomory was tried 686 times and created 2897 cuts of which 0 were active after adding rounds of cuts (10.552 seconds)
Knapsack was tried 686 times and created 1323 cuts of which 0 were active after adding rounds of cuts (1.123 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
MixedIntegerRounding2 was tried 15 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
FlowCover was tried 15 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
TwoMirCuts was tried 686 times and created 9169 cuts of which 0 were active after adding rounds of cuts (3.270 seconds)
ZeroHalf was tried 686 times and created 3068 cuts of which 0 were active after adding rounds of cuts (55.507 seconds)
ImplicationCuts was tried 22 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    41003.802
Enumerated nodes:               754
Total iterations:               3659376
Time (CPU seconds):             1797.43
Time (Wallclock seconds):       1801.68

Total time (CPU seconds):       1797.45   (Wallclock seconds):       1801.71

