Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_35_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_35_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 35840 - 0.38 seconds
Cgl0002I 97 variables fixed
Cgl0003I 0 fixed, 14 tightened bounds, 601 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 97 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 3731 rows, 1224 columns (1224 integer (1188 of which binary)) and 12651 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1224 objects (1224 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 708 integers unsatisfied sum - 214.072
Cbc0038I Pass   1: (0.87 seconds) suminf.   98.90524 (733) obj. 46582.5 iterations 1466
Cbc0038I Pass   2: (1.03 seconds) suminf.   79.43001 (717) obj. 51272.7 iterations 805
Cbc0038I Pass   3: (1.08 seconds) suminf.   74.56222 (691) obj. 50608.2 iterations 197
Cbc0038I Pass   4: (1.18 seconds) suminf.   69.04229 (715) obj. 50022.3 iterations 441
Cbc0038I Pass   5: (1.20 seconds) suminf.   66.61496 (716) obj. 50009.3 iterations 75
Cbc0038I Pass   6: (1.22 seconds) suminf.   65.70271 (728) obj. 49998.4 iterations 58
Cbc0038I Pass   7: (1.25 seconds) suminf.   65.50110 (735) obj. 50511.4 iterations 153
Cbc0038I Pass   8: (1.28 seconds) suminf.   62.97290 (747) obj. 50087.7 iterations 124
Cbc0038I Pass   9: (1.30 seconds) suminf.   61.87916 (749) obj. 50587 iterations 32
Cbc0038I Pass  10: (1.39 seconds) suminf.   67.88074 (703) obj. 52150.6 iterations 477
Cbc0038I Pass  11: (1.45 seconds) suminf.   67.06511 (659) obj. 51446.1 iterations 285
Cbc0038I Pass  12: (1.51 seconds) suminf.   64.80100 (643) obj. 51314.9 iterations 316
Cbc0038I Pass  13: (1.53 seconds) suminf.   65.39135 (629) obj. 51807.4 iterations 98
Cbc0038I Pass  14: (1.57 seconds) suminf.   61.79993 (624) obj. 51943.7 iterations 170
Cbc0038I Pass  15: (1.60 seconds) suminf.   61.27015 (634) obj. 52027.2 iterations 120
Cbc0038I Pass  16: (1.72 seconds) suminf.   60.19015 (662) obj. 59270.6 iterations 704
Cbc0038I Pass  17: (1.78 seconds) suminf.   57.57800 (634) obj. 59458.3 iterations 284
Cbc0038I Pass  18: (1.78 seconds) suminf.   57.40770 (625) obj. 59520.6 iterations 25
Cbc0038I Pass  19: (1.83 seconds) suminf.   56.27899 (631) obj. 59319.7 iterations 232
Cbc0038I Pass  20: (1.93 seconds) suminf.   56.72685 (697) obj. 64437 iterations 548
Cbc0038I Pass  21: (1.99 seconds) suminf.   53.54235 (677) obj. 64992.8 iterations 269
Cbc0038I Pass  22: (2.04 seconds) suminf.   54.39668 (676) obj. 64437.4 iterations 166
Cbc0038I Pass  23: (2.09 seconds) suminf.   53.80488 (676) obj. 64831.5 iterations 151
Cbc0038I Pass  24: (2.14 seconds) suminf.   51.67402 (684) obj. 64479.2 iterations 209
Cbc0038I Pass  25: (2.23 seconds) suminf.   53.06842 (667) obj. 63369.4 iterations 479
Cbc0038I Pass  26: (2.25 seconds) suminf.   52.55973 (660) obj. 62969.9 iterations 98
Cbc0038I Pass  27: (2.31 seconds) suminf.   54.12086 (670) obj. 63905.5 iterations 331
Cbc0038I Pass  28: (2.38 seconds) suminf.   51.76209 (674) obj. 63915.2 iterations 321
Cbc0038I Pass  29: (2.41 seconds) suminf.   51.39221 (673) obj. 63150.4 iterations 131
Cbc0038I Pass  30: (2.51 seconds) suminf.   53.67091 (662) obj. 64446.5 iterations 507
Cbc0038I Pass  31: (2.56 seconds) suminf.   52.45882 (674) obj. 64672.4 iterations 220
Cbc0038I Pass  32: (2.62 seconds) suminf.   51.87454 (673) obj. 64439.7 iterations 231
Cbc0038I Pass  33: (2.70 seconds) suminf.   52.07798 (659) obj. 63775 iterations 398
Cbc0038I Pass  34: (2.75 seconds) suminf.   51.65811 (678) obj. 63782 iterations 192
Cbc0038I Pass  35: (2.83 seconds) suminf.   53.51860 (648) obj. 63859.1 iterations 499
Cbc0038I Pass  36: (2.88 seconds) suminf.   53.07590 (655) obj. 64345.7 iterations 218
Cbc0038I Pass  37: (2.96 seconds) suminf.   54.29579 (654) obj. 63216.6 iterations 443
Cbc0038I Pass  38: (3.00 seconds) suminf.   52.45050 (672) obj. 63033.2 iterations 204
Cbc0038I Pass  39: (3.03 seconds) suminf.   51.54685 (658) obj. 63041.1 iterations 99
Cbc0038I Pass  40: (3.11 seconds) suminf.   54.08557 (666) obj. 64453.6 iterations 494
Cbc0038I Pass  41: (3.15 seconds) suminf.   52.56591 (659) obj. 64453.6 iterations 195
Cbc0038I Pass  42: (3.24 seconds) suminf.   54.89164 (643) obj. 62797.6 iterations 439
Cbc0038I Pass  43: (3.30 seconds) suminf.   51.99542 (640) obj. 63796.7 iterations 335
Cbc0038I Pass  44: (3.32 seconds) suminf.   51.94879 (655) obj. 63611.4 iterations 90
Cbc0038I Pass  45: (3.40 seconds) suminf.   55.86417 (682) obj. 64470.1 iterations 458
Cbc0038I Pass  46: (3.49 seconds) suminf.   51.81093 (688) obj. 64558.8 iterations 484
Cbc0038I Pass  47: (3.59 seconds) suminf.   54.84352 (649) obj. 62735.3 iterations 451
Cbc0038I Pass  48: (3.65 seconds) suminf.   53.06935 (652) obj. 63918.8 iterations 289
Cbc0038I Pass  49: (3.67 seconds) suminf.   52.54871 (651) obj. 63870.9 iterations 60
Cbc0038I Pass  50: (3.76 seconds) suminf.   53.24809 (655) obj. 64176.9 iterations 573
Cbc0038I Pass  51: (3.84 seconds) suminf.   52.89929 (678) obj. 64228.3 iterations 377
Cbc0038I Pass  52: (3.87 seconds) suminf.   51.22382 (653) obj. 64142.1 iterations 100
Cbc0038I Pass  53: (3.95 seconds) suminf.   53.43978 (649) obj. 62645.4 iterations 443
Cbc0038I Pass  54: (4.00 seconds) suminf.   52.47964 (653) obj. 63289.4 iterations 237
Cbc0038I Pass  55: (4.08 seconds) suminf.   54.61064 (651) obj. 63603 iterations 470
Cbc0038I Pass  56: (4.15 seconds) suminf.   52.84182 (651) obj. 63626 iterations 390
Cbc0038I Pass  57: (4.17 seconds) suminf.   52.56138 (644) obj. 63268.9 iterations 97
Cbc0038I Pass  58: (4.25 seconds) suminf.   55.40402 (680) obj. 63687.2 iterations 464
Cbc0038I Pass  59: (4.31 seconds) suminf.   52.42754 (664) obj. 64263.3 iterations 334
Cbc0038I Pass  60: (4.41 seconds) suminf.   51.44754 (644) obj. 64640.7 iterations 538
Cbc0038I Pass  61: (4.46 seconds) suminf.   49.33012 (657) obj. 65087.5 iterations 250
Cbc0038I Pass  62: (4.48 seconds) suminf.   48.98361 (665) obj. 65178.2 iterations 103
Cbc0038I Pass  63: (4.51 seconds) suminf.   49.46912 (667) obj. 65420.5 iterations 88
Cbc0038I Pass  64: (4.61 seconds) suminf.   48.60605 (638) obj. 65690.6 iterations 545
Cbc0038I Pass  65: (4.68 seconds) suminf.   44.45880 (617) obj. 65852.8 iterations 323
Cbc0038I Pass  66: (4.76 seconds) suminf.   50.48948 (642) obj. 65080.3 iterations 397
Cbc0038I Pass  67: (4.83 seconds) suminf.   45.85565 (608) obj. 65952.6 iterations 381
Cbc0038I Pass  68: (4.85 seconds) suminf.   44.43531 (608) obj. 66346.8 iterations 103
Cbc0038I Pass  69: (4.92 seconds) suminf.   44.18977 (637) obj. 65656.1 iterations 353
Cbc0038I Pass  70: (4.97 seconds) suminf.   43.24508 (635) obj. 65952.4 iterations 229
Cbc0038I Pass  71: (5.06 seconds) suminf.   44.66199 (633) obj. 65532.8 iterations 466
Cbc0038I Pass  72: (5.11 seconds) suminf.   44.21752 (623) obj. 65714.5 iterations 248
Cbc0038I Pass  73: (5.19 seconds) suminf.   43.27333 (619) obj. 65452.8 iterations 418
Cbc0038I Pass  74: (5.22 seconds) suminf.   43.48093 (619) obj. 65553.5 iterations 126
Cbc0038I Pass  75: (5.27 seconds) suminf.   42.12746 (609) obj. 65988.3 iterations 223
Cbc0038I Pass  76: (5.29 seconds) suminf.   41.78156 (601) obj. 65976.6 iterations 85
Cbc0038I Pass  77: (5.38 seconds) suminf.   45.22151 (646) obj. 69538.3 iterations 535
Cbc0038I Pass  78: (5.41 seconds) suminf.   43.69864 (619) obj. 69541.1 iterations 155
Cbc0038I Pass  79: (5.48 seconds) suminf.   43.18663 (620) obj. 69387.9 iterations 371
Cbc0038I Pass  80: (5.53 seconds) suminf.   41.77003 (643) obj. 68755.4 iterations 275
Cbc0038I Pass  81: (5.61 seconds) suminf.   42.77495 (616) obj. 67689.6 iterations 416
Cbc0038I Pass  82: (5.66 seconds) suminf.   40.74151 (595) obj. 68161 iterations 295
Cbc0038I Pass  83: (5.68 seconds) suminf.   41.30327 (597) obj. 68148.3 iterations 92
Cbc0038I Pass  84: (5.76 seconds) suminf.   42.27947 (639) obj. 67646.8 iterations 490
Cbc0038I Pass  85: (5.80 seconds) suminf.   41.86172 (649) obj. 67622.1 iterations 209
Cbc0038I Pass  86: (5.83 seconds) suminf.   42.41872 (639) obj. 67467.3 iterations 133
Cbc0038I Pass  87: (5.93 seconds) suminf.   42.89709 (628) obj. 68546.7 iterations 538
Cbc0038I Pass  88: (5.95 seconds) suminf.   42.42389 (625) obj. 68589.3 iterations 70
Cbc0038I Pass  89: (5.97 seconds) suminf.   41.54844 (614) obj. 68469.5 iterations 112
Cbc0038I Pass  90: (6.05 seconds) suminf.   40.99061 (636) obj. 68414.1 iterations 482
Cbc0038I Pass  91: (6.13 seconds) suminf.   38.60344 (667) obj. 68886.9 iterations 444
Cbc0038I Pass  92: (6.24 seconds) suminf.   42.51998 (622) obj. 67979.9 iterations 577
Cbc0038I Pass  93: (6.28 seconds) suminf.   40.44368 (609) obj. 69474 iterations 154
Cbc0038I Pass  94: (6.36 seconds) suminf.   42.63602 (637) obj. 69551.9 iterations 444
Cbc0038I Pass  95: (6.45 seconds) suminf.   40.79821 (668) obj. 68809.9 iterations 415
Cbc0038I Pass  96: (6.55 seconds) suminf.   41.79071 (632) obj. 67782.3 iterations 489
Cbc0038I Pass  97: (6.59 seconds) suminf.   40.64413 (626) obj. 67822.4 iterations 221
Cbc0038I Pass  98: (6.65 seconds) suminf.   41.30753 (612) obj. 68392 iterations 310
Cbc0038I Pass  99: (6.71 seconds) suminf.   41.99679 (645) obj. 67520.6 iterations 347
Cbc0038I Pass 100: (6.92 seconds) suminf.   88.17099 (680) obj. 69901.8 iterations 1140
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3731 rows 1224 columns, reduced to 3496 rows 1113 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.11 seconds)
Cbc0038I After 7.11 seconds - Feasibility pump exiting - took 6.53 seconds
Cbc0031I 36 added rows had average density of 11.416667
Cbc0013I At root node, 36 cuts changed objective from 35840 to 41731.723 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 3.5 elements, 3 column cuts (3 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 156 row cuts average 83.5 elements, 0 column cuts (0 active)  in 0.515 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 241 row cuts average 43.7 elements, 0 column cuts (0 active)  in 0.206 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41732 (23.77 seconds)
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 41736.3 (63.82 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 41736.3 (96.14 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1e+50 best solution, best possible 41736.3 (130.08 seconds)
Cbc0010I After 400 nodes, 22 on tree, 1e+50 best solution, best possible 41736.3 (159.67 seconds)
Cbc0010I After 500 nodes, 22 on tree, 1e+50 best solution, best possible 41736.3 (181.21 seconds)
Cbc0010I After 600 nodes, 34 on tree, 1e+50 best solution, best possible 41736.3 (207.54 seconds)
Cbc0010I After 700 nodes, 36 on tree, 1e+50 best solution, best possible 41736.3 (231.97 seconds)
Cbc0010I After 800 nodes, 45 on tree, 1e+50 best solution, best possible 41736.3 (253.81 seconds)
Cbc0010I After 900 nodes, 55 on tree, 1e+50 best solution, best possible 41736.3 (274.41 seconds)
Cbc0010I After 1000 nodes, 45 on tree, 1e+50 best solution, best possible 41736.3 (294.96 seconds)
Cbc0010I After 1100 nodes, 27 on tree, 1e+50 best solution, best possible 41915 (315.87 seconds)
Cbc0010I After 1200 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (339.64 seconds)
Cbc0010I After 1300 nodes, 5 on tree, 1e+50 best solution, best possible 41915 (361.99 seconds)
Cbc0010I After 1400 nodes, 8 on tree, 1e+50 best solution, best possible 41915 (388.78 seconds)
Cbc0010I After 1500 nodes, 9 on tree, 1e+50 best solution, best possible 41915 (416.91 seconds)
Cbc0010I After 1600 nodes, 12 on tree, 1e+50 best solution, best possible 41915 (448.01 seconds)
Cbc0010I After 1700 nodes, 14 on tree, 1e+50 best solution, best possible 41915 (468.76 seconds)
Cbc0010I After 1800 nodes, 14 on tree, 1e+50 best solution, best possible 41915 (486.03 seconds)
Cbc0010I After 1900 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (501.19 seconds)
Cbc0010I After 2000 nodes, 14 on tree, 1e+50 best solution, best possible 41915 (513.81 seconds)
Cbc0010I After 2100 nodes, 12 on tree, 1e+50 best solution, best possible 41915 (534.72 seconds)
Cbc0010I After 2200 nodes, 19 on tree, 1e+50 best solution, best possible 41915 (550.21 seconds)
Cbc0010I After 2300 nodes, 13 on tree, 1e+50 best solution, best possible 41915 (560.93 seconds)
Cbc0010I After 2400 nodes, 8 on tree, 1e+50 best solution, best possible 41915 (586.93 seconds)
Cbc0010I After 2500 nodes, 12 on tree, 1e+50 best solution, best possible 41915 (607.57 seconds)
Cbc0010I After 2600 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (634.80 seconds)
Cbc0010I After 2700 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (651.49 seconds)
Cbc0010I After 2800 nodes, 9 on tree, 1e+50 best solution, best possible 41915 (676.59 seconds)
Cbc0010I After 2900 nodes, 12 on tree, 1e+50 best solution, best possible 41915 (698.66 seconds)
Cbc0010I After 3000 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (717.58 seconds)
Cbc0010I After 3100 nodes, 10 on tree, 1e+50 best solution, best possible 41915 (738.12 seconds)
Cbc0010I After 3200 nodes, 17 on tree, 1e+50 best solution, best possible 41915 (762.19 seconds)
Cbc0010I After 3300 nodes, 11 on tree, 1e+50 best solution, best possible 41915 (782.93 seconds)
Cbc0010I After 3400 nodes, 17 on tree, 1e+50 best solution, best possible 41915 (806.96 seconds)
Cbc0010I After 3500 nodes, 19 on tree, 1e+50 best solution, best possible 41915 (822.47 seconds)
Cbc0010I After 3600 nodes, 19 on tree, 1e+50 best solution, best possible 41915 (838.88 seconds)
Cbc0010I After 3700 nodes, 16 on tree, 1e+50 best solution, best possible 41915 (854.31 seconds)
Cbc0010I After 3800 nodes, 13 on tree, 1e+50 best solution, best possible 41915 (871.28 seconds)
Cbc0010I After 3900 nodes, 12 on tree, 1e+50 best solution, best possible 41915 (887.81 seconds)
Cbc0010I After 4000 nodes, 15 on tree, 1e+50 best solution, best possible 41915 (911.31 seconds)
Cbc0010I After 4100 nodes, 18 on tree, 1e+50 best solution, best possible 41915 (935.86 seconds)
Cbc0010I After 4200 nodes, 17 on tree, 1e+50 best solution, best possible 41915 (957.62 seconds)
Cbc0010I After 4300 nodes, 26 on tree, 1e+50 best solution, best possible 41915 (980.33 seconds)
Cbc0010I After 4400 nodes, 18 on tree, 1e+50 best solution, best possible 41915 (998.28 seconds)
Cbc0010I After 4500 nodes, 19 on tree, 1e+50 best solution, best possible 41915 (1018.27 seconds)
Cbc0010I After 4600 nodes, 17 on tree, 1e+50 best solution, best possible 41915 (1045.16 seconds)
Cbc0010I After 4700 nodes, 19 on tree, 1e+50 best solution, best possible 41915 (1078.66 seconds)
Cbc0010I After 4800 nodes, 22 on tree, 1e+50 best solution, best possible 41915 (1103.21 seconds)
Cbc0010I After 4900 nodes, 27 on tree, 1e+50 best solution, best possible 41915 (1124.87 seconds)
Cbc0010I After 5000 nodes, 22 on tree, 1e+50 best solution, best possible 41915 (1151.06 seconds)
Cbc0010I After 5100 nodes, 24 on tree, 1e+50 best solution, best possible 41985 (1177.80 seconds)
Cbc0010I After 5200 nodes, 24 on tree, 1e+50 best solution, best possible 41985 (1206.18 seconds)
Cbc0010I After 5300 nodes, 27 on tree, 1e+50 best solution, best possible 41985 (1234.83 seconds)
Cbc0010I After 5400 nodes, 26 on tree, 1e+50 best solution, best possible 41985 (1263.57 seconds)
Cbc0010I After 5500 nodes, 32 on tree, 1e+50 best solution, best possible 41985 (1290.38 seconds)
Cbc0010I After 5600 nodes, 34 on tree, 1e+50 best solution, best possible 41985 (1316.86 seconds)
Cbc0010I After 5700 nodes, 33 on tree, 1e+50 best solution, best possible 41985 (1344.27 seconds)
Cbc0010I After 5800 nodes, 44 on tree, 1e+50 best solution, best possible 41985 (1370.56 seconds)
Cbc0010I After 5900 nodes, 40 on tree, 1e+50 best solution, best possible 41985 (1399.77 seconds)
Cbc0010I After 6000 nodes, 44 on tree, 1e+50 best solution, best possible 41985 (1420.87 seconds)
Cbc0010I After 6100 nodes, 42 on tree, 1e+50 best solution, best possible 41985 (1446.43 seconds)
Cbc0010I After 6200 nodes, 45 on tree, 1e+50 best solution, best possible 41985 (1477.70 seconds)
Cbc0010I After 6300 nodes, 48 on tree, 1e+50 best solution, best possible 41985 (1498.67 seconds)
Cbc0010I After 6400 nodes, 48 on tree, 1e+50 best solution, best possible 41985 (1519.89 seconds)
Cbc0010I After 6500 nodes, 50 on tree, 1e+50 best solution, best possible 41985 (1546.50 seconds)
Cbc0010I After 6600 nodes, 46 on tree, 1e+50 best solution, best possible 41985 (1579.07 seconds)
Cbc0010I After 6700 nodes, 49 on tree, 1e+50 best solution, best possible 41985 (1600.01 seconds)
Cbc0010I After 6800 nodes, 55 on tree, 1e+50 best solution, best possible 41985 (1623.25 seconds)
Cbc0010I After 6900 nodes, 63 on tree, 1e+50 best solution, best possible 41985 (1646.93 seconds)
Cbc0010I After 7000 nodes, 63 on tree, 1e+50 best solution, best possible 41985 (1667.33 seconds)
Cbc0010I After 7100 nodes, 69 on tree, 1e+50 best solution, best possible 41985 (1693.67 seconds)
Cbc0010I After 7200 nodes, 71 on tree, 1e+50 best solution, best possible 41985 (1718.30 seconds)
Cbc0010I After 7300 nodes, 73 on tree, 1e+50 best solution, best possible 41985 (1746.86 seconds)
Cbc0010I After 7400 nodes, 75 on tree, 1e+50 best solution, best possible 41985 (1773.60 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 41985), took 6333900 iterations and 7493 nodes (1799.89 seconds)
Cbc0032I Strong branching done 24592 times (1540496 iterations), fathomed 289 nodes and fixed 5465 variables
Cbc0035I Maximum depth 577, 0 variables fixed on reduced cost
Cuts at root node changed objective from 35840 to 41732
Probing was tried 5987 times and created 345443 cuts of which 0 were active after adding rounds of cuts (28.838 seconds)
Gomory was tried 4980 times and created 27357 cuts of which 0 were active after adding rounds of cuts (25.183 seconds)
Knapsack was tried 4980 times and created 17507 cuts of which 0 were active after adding rounds of cuts (6.283 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 4980 times and created 61736 cuts of which 0 were active after adding rounds of cuts (9.043 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
ImplicationCuts was tried 28 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    41985.000
Enumerated nodes:               7493
Total iterations:               6333900
Time (CPU seconds):             1799.89
Time (Wallclock seconds):       1805.62

Total time (CPU seconds):       1799.91   (Wallclock seconds):       1805.64

