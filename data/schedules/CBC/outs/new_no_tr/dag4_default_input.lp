Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/dag4_default_input.lp sec 1800 solve solu no_transitive/dag4_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 790132 - 0.47 seconds
Cgl0002I 137 variables fixed
Cgl0003I 0 fixed, 5 tightened bounds, 930 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 184 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 4894 rows, 1656 columns (1656 integer (1619 of which binary)) and 16162 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1656 objects (1656 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 853 integers unsatisfied sum - 226.271
Cbc0038I Pass   1: (1.21 seconds) suminf.  165.94504 (851) obj. 872081 iterations 1413
Cbc0038I Pass   2: (1.30 seconds) suminf.  153.91378 (847) obj. 916077 iterations 496
Cbc0038I Pass   3: (1.54 seconds) suminf.  112.67546 (918) obj. 1.07828e+06 iterations 1145
Cbc0038I Pass   4: (1.67 seconds) suminf.  100.19538 (909) obj. 1.09757e+06 iterations 578
Cbc0038I Pass   5: (1.73 seconds) suminf.   98.48325 (925) obj. 1.09784e+06 iterations 221
Cbc0038I Pass   6: (1.87 seconds) suminf.   92.98249 (920) obj. 1.08225e+06 iterations 391
Cbc0038I Pass   7: (1.95 seconds) suminf.   91.91688 (910) obj. 1.0542e+06 iterations 201
Cbc0038I Pass   8: (2.09 seconds) suminf.   91.78760 (905) obj. 1.0562e+06 iterations 570
Cbc0038I Pass   9: (2.19 seconds) suminf.   90.99434 (912) obj. 1.06289e+06 iterations 232
Cbc0038I Pass  10: (2.32 seconds) suminf.   90.44438 (931) obj. 1.07252e+06 iterations 540
Cbc0038I Pass  11: (2.41 seconds) suminf.   89.57588 (941) obj. 1.06518e+06 iterations 307
Cbc0038I Pass  12: (2.45 seconds) suminf.   89.27308 (939) obj. 1.06514e+06 iterations 136
Cbc0038I Pass  13: (2.48 seconds) suminf.   88.01243 (943) obj. 1.06489e+06 iterations 68
Cbc0038I Pass  14: (2.50 seconds) suminf.   87.92438 (945) obj. 1.06552e+06 iterations 52
Cbc0038I Pass  15: (2.57 seconds) suminf.   89.42391 (947) obj. 1.06103e+06 iterations 251
Cbc0038I Pass  16: (2.64 seconds) suminf.   88.35645 (942) obj. 1.0606e+06 iterations 227
Cbc0038I Pass  17: (2.74 seconds) suminf.   86.89067 (930) obj. 1.04954e+06 iterations 449
Cbc0038I Pass  18: (2.81 seconds) suminf.   88.16524 (935) obj. 1.05535e+06 iterations 243
Cbc0038I Pass  19: (2.94 seconds) suminf.   88.56465 (946) obj. 1.07366e+06 iterations 514
Cbc0038I Pass  20: (3.02 seconds) suminf.   86.31638 (940) obj. 1.06907e+06 iterations 317
Cbc0038I Pass  21: (3.07 seconds) suminf.   85.35616 (938) obj. 1.06392e+06 iterations 173
Cbc0038I Pass  22: (3.15 seconds) suminf.   86.56459 (944) obj. 1.07728e+06 iterations 354
Cbc0038I Pass  23: (3.19 seconds) suminf.   86.63827 (940) obj. 1.07991e+06 iterations 148
Cbc0038I Pass  24: (3.24 seconds) suminf.   86.17274 (946) obj. 1.05604e+06 iterations 177
Cbc0038I Pass  25: (3.29 seconds) suminf.   86.57448 (931) obj. 1.07689e+06 iterations 152
Cbc0038I Pass  26: (3.58 seconds) suminf.  111.94124 (862) obj. 1.33821e+06 iterations 1458
Cbc0038I Pass  27: (3.80 seconds) suminf.   87.27512 (881) obj. 1.35271e+06 iterations 1078
Cbc0038I Pass  28: (3.87 seconds) suminf.   85.25146 (911) obj. 1.37811e+06 iterations 283
Cbc0038I Pass  29: (3.93 seconds) suminf.   86.99790 (930) obj. 1.37352e+06 iterations 202
Cbc0038I Pass  30: (3.94 seconds) suminf.   86.31424 (922) obj. 1.37491e+06 iterations 44
Cbc0038I Pass  31: (3.99 seconds) suminf.   86.74180 (920) obj. 1.36911e+06 iterations 154
Cbc0038I Pass  32: (4.08 seconds) suminf.   87.29455 (932) obj. 1.37274e+06 iterations 420
Cbc0038I Pass  33: (4.17 seconds) suminf.   85.86969 (933) obj. 1.3676e+06 iterations 359
Cbc0038I Pass  34: (4.25 seconds) suminf.   85.98085 (914) obj. 1.371e+06 iterations 346
Cbc0038I Pass  35: (4.32 seconds) suminf.   82.44559 (925) obj. 1.37108e+06 iterations 261
Cbc0038I Pass  36: (4.34 seconds) suminf.   82.31132 (923) obj. 1.37185e+06 iterations 69
Cbc0038I Pass  37: (4.40 seconds) suminf.   85.91976 (924) obj. 1.36644e+06 iterations 233
Cbc0038I Pass  38: (4.43 seconds) suminf.   85.66160 (930) obj. 1.38041e+06 iterations 72
Cbc0038I Pass  39: (4.50 seconds) suminf.   84.73151 (924) obj. 1.37511e+06 iterations 267
Cbc0038I Pass  40: (4.56 seconds) suminf.   84.13153 (946) obj. 1.37393e+06 iterations 216
Cbc0038I Pass  41: (4.64 seconds) suminf.   82.79914 (913) obj. 1.37045e+06 iterations 363
Cbc0038I Pass  42: (4.70 seconds) suminf.   82.28523 (924) obj. 1.37048e+06 iterations 189
Cbc0038I Pass  43: (4.75 seconds) suminf.   84.17592 (921) obj. 1.36915e+06 iterations 162
Cbc0038I Pass  44: (4.78 seconds) suminf.   82.85462 (929) obj. 1.37006e+06 iterations 121
Cbc0038I Pass  45: (4.84 seconds) suminf.   84.02886 (920) obj. 1.37006e+06 iterations 201
Cbc0038I Pass  46: (5.13 seconds) suminf.  124.00833 (881) obj. 1.60207e+06 iterations 1531
Cbc0038I Pass  47: (5.35 seconds) suminf.   85.46984 (890) obj. 1.66169e+06 iterations 1238
Cbc0038I Pass  48: (5.41 seconds) suminf.   85.52435 (889) obj. 1.67184e+06 iterations 238
Cbc0038I Pass  49: (5.48 seconds) suminf.   84.86963 (867) obj. 1.69779e+06 iterations 297
Cbc0038I Pass  50: (5.54 seconds) suminf.   83.57407 (883) obj. 1.69451e+06 iterations 243
Cbc0038I Pass  51: (5.66 seconds) suminf.   85.22383 (887) obj. 1.66939e+06 iterations 524
Cbc0038I Pass  52: (5.71 seconds) suminf.   83.94307 (903) obj. 1.67275e+06 iterations 189
Cbc0038I Pass  53: (5.78 seconds) suminf.   84.99405 (882) obj. 1.66697e+06 iterations 301
Cbc0038I Pass  54: (5.81 seconds) suminf.   85.20617 (884) obj. 1.67011e+06 iterations 106
Cbc0038I Pass  55: (5.89 seconds) suminf.   83.97182 (883) obj. 1.6704e+06 iterations 362
Cbc0038I Pass  56: (6.13 seconds) suminf.  119.51443 (857) obj. 1.73427e+06 iterations 1228
Cbc0038I Pass  57: (6.32 seconds) suminf.   95.34119 (889) obj. 1.65584e+06 iterations 974
Cbc0038I Pass  58: (6.41 seconds) suminf.   90.30387 (903) obj. 1.65542e+06 iterations 392
Cbc0038I Pass  59: (6.46 seconds) suminf.   86.47710 (899) obj. 1.65665e+06 iterations 230
Cbc0038I Pass  60: (6.56 seconds) suminf.   88.95751 (907) obj. 1.63688e+06 iterations 397
Cbc0038I Pass  61: (6.62 seconds) suminf.   87.95448 (900) obj. 1.65436e+06 iterations 250
Cbc0038I Pass  62: (6.72 seconds) suminf.   86.32669 (883) obj. 1.66105e+06 iterations 512
Cbc0038I Pass  63: (6.78 seconds) suminf.   86.61210 (911) obj. 1.66868e+06 iterations 202
Cbc0038I Pass  64: (6.81 seconds) suminf.   85.68639 (907) obj. 1.66911e+06 iterations 119
Cbc0038I Pass  65: (6.88 seconds) suminf.   87.76781 (878) obj. 1.67844e+06 iterations 368
Cbc0038I Pass  66: (6.93 seconds) suminf.   86.32621 (866) obj. 1.67436e+06 iterations 218
Cbc0038I Pass  67: (6.98 seconds) suminf.   86.00710 (881) obj. 1.66128e+06 iterations 251
Cbc0038I Pass  68: (7.01 seconds) suminf.   86.17188 (883) obj. 1.66499e+06 iterations 148
Cbc0038I Pass  69: (7.07 seconds) suminf.   87.18207 (885) obj. 1.67199e+06 iterations 280
Cbc0038I Pass  70: (7.13 seconds) suminf.   86.22512 (868) obj. 1.6754e+06 iterations 272
Cbc0038I Pass  71: (7.14 seconds) suminf.   86.32621 (866) obj. 1.67436e+06 iterations 62
Cbc0038I Pass  72: (7.19 seconds) suminf.   86.09175 (883) obj. 1.65898e+06 iterations 226
Cbc0038I Pass  73: (7.23 seconds) suminf.   86.17188 (883) obj. 1.66499e+06 iterations 167
Cbc0038I Pass  74: (7.29 seconds) suminf.   88.14405 (901) obj. 1.67832e+06 iterations 319
Cbc0038I Pass  75: (7.35 seconds) suminf.   86.82437 (871) obj. 1.67719e+06 iterations 263
Cbc0038I Pass  76: (7.36 seconds) suminf.   85.96996 (875) obj. 1.68517e+06 iterations 87
Cbc0038I Pass  77: (7.43 seconds) suminf.   87.00160 (874) obj. 1.69331e+06 iterations 375
Cbc0038I Pass  78: (7.48 seconds) suminf.   86.06693 (875) obj. 1.68661e+06 iterations 255
Cbc0038I Pass  79: (7.54 seconds) suminf.   87.02119 (890) obj. 1.67003e+06 iterations 286
Cbc0038I Pass  80: (7.59 seconds) suminf.   86.17427 (878) obj. 1.67893e+06 iterations 199
Cbc0038I Pass  81: (7.64 seconds) suminf.   85.85797 (872) obj. 1.66537e+06 iterations 240
Cbc0038I Pass  82: (7.69 seconds) suminf.   85.06896 (895) obj. 1.68042e+06 iterations 219
Cbc0038I Pass  83: (7.72 seconds) suminf.   85.10630 (888) obj. 1.68543e+06 iterations 111
Cbc0038I Pass  84: (7.78 seconds) suminf.   85.52513 (896) obj. 1.67968e+06 iterations 194
Cbc0038I Pass  85: (7.80 seconds) suminf.   85.10100 (875) obj. 1.67839e+06 iterations 97
Cbc0038I Pass  86: (7.82 seconds) suminf.   85.10959 (880) obj. 1.6791e+06 iterations 46
Cbc0038I Pass  87: (7.87 seconds) suminf.   86.60557 (886) obj. 1.67729e+06 iterations 219
Cbc0038I Pass  88: (7.90 seconds) suminf.   86.87939 (887) obj. 1.67897e+06 iterations 80
Cbc0038I Pass  89: (7.97 seconds) suminf.   85.82416 (881) obj. 1.65846e+06 iterations 328
Cbc0038I Pass  90: (8.03 seconds) suminf.   84.01013 (873) obj. 1.67879e+06 iterations 201
Cbc0038I Pass  91: (8.06 seconds) suminf.   83.43163 (873) obj. 1.68224e+06 iterations 104
Cbc0038I Pass  92: (8.12 seconds) suminf.   85.50868 (879) obj. 1.67874e+06 iterations 202
Cbc0038I Pass  93: (8.18 seconds) suminf.   83.33963 (865) obj. 1.68603e+06 iterations 219
Cbc0038I Pass  94: (8.45 seconds) suminf.  116.01860 (852) obj. 1.99469e+06 iterations 1252
Cbc0038I Pass  95: (8.67 seconds) suminf.   84.19019 (909) obj. 2.07824e+06 iterations 1024
Cbc0038I Pass  96: (8.73 seconds) suminf.   80.22537 (892) obj. 2.08416e+06 iterations 220
Cbc0038I Pass  97: (8.85 seconds) suminf.   79.21456 (903) obj. 2.08397e+06 iterations 514
Cbc0038I Pass  98: (8.90 seconds) suminf.   76.64399 (931) obj. 2.08488e+06 iterations 149
Cbc0038I Pass  99: (8.99 seconds) suminf.   82.57724 (918) obj. 2.08607e+06 iterations 357
Cbc0038I Pass 100: (9.22 seconds) suminf.  114.48922 (882) obj. 1.9929e+06 iterations 1142
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4894 rows 1656 columns, reduced to 4645 rows 1539 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.71 seconds)
Cbc0038I After 9.71 seconds - Feasibility pump exiting - took 8.79 seconds
Cbc0031I 38 added rows had average density of 10.289474
Cbc0013I At root node, 38 cuts changed objective from 794049.92 to 917504 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.6 elements, 4 column cuts (4 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 104 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.504 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 155 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 13 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.488 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 917504 (18.49 seconds)
Cbc0010I After 100 nodes, 25 on tree, 1e+50 best solution, best possible 917504 (75.80 seconds)
Cbc0010I After 200 nodes, 40 on tree, 1e+50 best solution, best possible 917504 (89.56 seconds)
Cbc0010I After 300 nodes, 54 on tree, 1e+50 best solution, best possible 917504 (103.49 seconds)
Cbc0010I After 400 nodes, 51 on tree, 1e+50 best solution, best possible 917504 (115.58 seconds)
Cbc0010I After 500 nodes, 56 on tree, 1e+50 best solution, best possible 917504 (134.06 seconds)
Cbc0010I After 600 nodes, 52 on tree, 1e+50 best solution, best possible 917504 (146.62 seconds)
Cbc0010I After 700 nodes, 45 on tree, 1e+50 best solution, best possible 917504 (160.70 seconds)
Cbc0010I After 800 nodes, 52 on tree, 1e+50 best solution, best possible 917504 (173.82 seconds)
Cbc0010I After 900 nodes, 53 on tree, 1e+50 best solution, best possible 917504 (186.71 seconds)
Cbc0010I After 1000 nodes, 53 on tree, 1e+50 best solution, best possible 917504 (200.26 seconds)
Cbc0010I After 1100 nodes, 57 on tree, 1e+50 best solution, best possible 917504 (211.31 seconds)
Cbc0010I After 1200 nodes, 53 on tree, 1e+50 best solution, best possible 917504 (222.58 seconds)
Cbc0010I After 1300 nodes, 48 on tree, 1e+50 best solution, best possible 917504 (232.85 seconds)
Cbc0010I After 1400 nodes, 45 on tree, 1e+50 best solution, best possible 917504 (252.83 seconds)
Cbc0010I After 1500 nodes, 40 on tree, 1e+50 best solution, best possible 917504 (268.74 seconds)
Cbc0010I After 1600 nodes, 31 on tree, 1e+50 best solution, best possible 917504 (286.54 seconds)
Cbc0010I After 1700 nodes, 23 on tree, 1e+50 best solution, best possible 917504 (307.08 seconds)
Cbc0010I After 1800 nodes, 20 on tree, 1e+50 best solution, best possible 917504 (324.91 seconds)
Cbc0010I After 1900 nodes, 26 on tree, 1e+50 best solution, best possible 917504 (345.13 seconds)
Cbc0010I After 2000 nodes, 21 on tree, 1e+50 best solution, best possible 917504 (362.15 seconds)
Cbc0010I After 2100 nodes, 27 on tree, 1e+50 best solution, best possible 917504 (376.11 seconds)
Cbc0010I After 2200 nodes, 13 on tree, 1e+50 best solution, best possible 917504 (399.10 seconds)
Cbc0004I Integer solution of 917504 found after 1112340 iterations and 2295 nodes (426.94 seconds)
Cbc0001I Search completed - best objective 917504, took 1112340 iterations and 2295 nodes (426.94 seconds)
Cbc0032I Strong branching done 18696 times (962873 iterations), fathomed 204 nodes and fixed 2021 variables
Cbc0035I Maximum depth 63, 0 variables fixed on reduced cost
Cuts at root node changed objective from 794050 to 917504
Probing was tried 1833 times and created 116135 cuts of which 0 were active after adding rounds of cuts (5.974 seconds)
Gomory was tried 1465 times and created 475 cuts of which 0 were active after adding rounds of cuts (4.205 seconds)
Knapsack was tried 1465 times and created 1569 cuts of which 0 were active after adding rounds of cuts (1.994 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 1465 times and created 6450 cuts of which 0 were active after adding rounds of cuts (1.902 seconds)
ZeroHalf was tried 10 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.488 seconds)

Result - Optimal solution found

Objective value:                917504.00000000
Enumerated nodes:               2295
Total iterations:               1112340
Time (CPU seconds):             427.17
Time (Wallclock seconds):       427.38

Total time (CPU seconds):       427.18   (Wallclock seconds):       427.40

