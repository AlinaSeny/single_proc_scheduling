Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/order/dag12_tiers_input.lp sec 1800 solve solu no_transitive/dag12_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 591084 - 0.28 seconds
Cgl0002I 121 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 703 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 171 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 3501 rows, 1192 columns (1192 integer (1160 of which binary)) and 11617 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1192 objects (1192 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 609 integers unsatisfied sum - 201.769
Cbc0038I Pass   1: (1.04 seconds) suminf.  106.60322 (595) obj. 799350 iterations 1198
Cbc0038I Pass   2: (1.16 seconds) suminf.   83.49703 (626) obj. 892580 iterations 760
Cbc0038I Pass   3: (1.20 seconds) suminf.   81.71991 (633) obj. 895682 iterations 229
Cbc0038I Pass   4: (1.21 seconds) suminf.   81.83158 (633) obj. 895714 iterations 63
Cbc0038I Pass   5: (1.27 seconds) suminf.   75.65296 (658) obj. 899620 iterations 340
Cbc0038I Pass   6: (1.31 seconds) suminf.   73.71102 (665) obj. 907566 iterations 177
Cbc0038I Pass   7: (1.35 seconds) suminf.   73.74687 (677) obj. 920711 iterations 241
Cbc0038I Pass   8: (1.39 seconds) suminf.   74.08990 (683) obj. 920497 iterations 224
Cbc0038I Pass   9: (1.44 seconds) suminf.   73.70812 (687) obj. 931008 iterations 254
Cbc0038I Pass  10: (1.44 seconds) suminf.   73.61559 (685) obj. 930811 iterations 18
Cbc0038I Pass  11: (1.50 seconds) suminf.   74.60844 (670) obj. 988934 iterations 326
Cbc0038I Pass  12: (1.55 seconds) suminf.   73.59734 (669) obj. 964533 iterations 274
Cbc0038I Pass  13: (1.58 seconds) suminf.   72.16949 (669) obj. 926690 iterations 148
Cbc0038I Pass  14: (1.64 seconds) suminf.   73.75488 (685) obj. 987536 iterations 379
Cbc0038I Pass  15: (1.68 seconds) suminf.   74.92932 (683) obj. 974272 iterations 160
Cbc0038I Pass  16: (1.70 seconds) suminf.   75.42594 (687) obj. 971476 iterations 73
Cbc0038I Pass  17: (1.77 seconds) suminf.   75.80870 (688) obj. 910582 iterations 456
Cbc0038I Pass  18: (1.81 seconds) suminf.   74.17685 (691) obj. 917457 iterations 159
Cbc0038I Pass  19: (1.84 seconds) suminf.   72.70273 (690) obj. 919091 iterations 151
Cbc0038I Pass  20: (1.86 seconds) suminf.   72.30186 (684) obj. 917807 iterations 91
Cbc0038I Pass  21: (1.90 seconds) suminf.   72.95569 (705) obj. 920497 iterations 225
Cbc0038I Pass  22: (1.94 seconds) suminf.   71.57827 (702) obj. 916777 iterations 204
Cbc0038I Pass  23: (2.01 seconds) suminf.   73.74875 (689) obj. 944470 iterations 410
Cbc0038I Pass  24: (2.08 seconds) suminf.   72.48711 (680) obj. 914081 iterations 393
Cbc0038I Pass  25: (2.12 seconds) suminf.   73.37347 (677) obj. 921781 iterations 218
Cbc0038I Pass  26: (2.16 seconds) suminf.   72.49656 (676) obj. 922825 iterations 203
Cbc0038I Pass  27: (2.22 seconds) suminf.   74.66260 (697) obj. 996807 iterations 332
Cbc0038I Pass  28: (2.29 seconds) suminf.   74.28924 (701) obj. 905077 iterations 402
Cbc0038I Pass  29: (2.31 seconds) suminf.   73.43266 (700) obj. 918674 iterations 91
Cbc0038I Pass  30: (2.32 seconds) suminf.   73.52931 (699) obj. 918867 iterations 17
Cbc0038I Pass  31: (2.36 seconds) suminf.   74.17366 (701) obj. 919169 iterations 193
Cbc0038I Pass  32: (2.38 seconds) suminf.   73.52561 (699) obj. 919382 iterations 84
Cbc0038I Pass  33: (2.41 seconds) suminf.   73.44912 (707) obj. 916021 iterations 130
Cbc0038I Pass  34: (2.46 seconds) suminf.   75.52908 (701) obj. 916757 iterations 295
Cbc0038I Pass  35: (2.50 seconds) suminf.   74.31344 (695) obj. 917142 iterations 242
Cbc0038I Pass  36: (2.52 seconds) suminf.   74.11394 (699) obj. 918727 iterations 43
Cbc0038I Pass  37: (2.57 seconds) suminf.   75.08354 (710) obj. 904261 iterations 320
Cbc0038I Pass  38: (2.61 seconds) suminf.   73.96908 (701) obj. 903680 iterations 190
Cbc0038I Pass  39: (2.65 seconds) suminf.   73.44912 (707) obj. 916021 iterations 188
Cbc0038I Pass  40: (2.69 seconds) suminf.   74.23472 (706) obj. 919013 iterations 156
Cbc0038I Pass  41: (2.72 seconds) suminf.   73.52931 (699) obj. 918867 iterations 149
Cbc0038I Pass  42: (2.77 seconds) suminf.   75.36806 (707) obj. 916830 iterations 319
Cbc0038I Pass  43: (2.81 seconds) suminf.   74.02227 (699) obj. 909803 iterations 232
Cbc0038I Pass  44: (2.83 seconds) suminf.   73.88796 (701) obj. 912514 iterations 41
Cbc0038I Pass  45: (2.87 seconds) suminf.   73.69531 (695) obj. 918903 iterations 252
Cbc0038I Pass  46: (2.88 seconds) suminf.   73.84098 (695) obj. 918315 iterations 67
Cbc0038I Pass  47: (2.93 seconds) suminf.   75.71324 (700) obj. 914309 iterations 231
Cbc0038I Pass  48: (2.98 seconds) suminf.   73.43266 (700) obj. 918674 iterations 272
Cbc0038I Pass  49: (2.98 seconds) suminf.   73.52931 (699) obj. 918867 iterations 20
Cbc0038I Pass  50: (3.02 seconds) suminf.   73.66193 (703) obj. 918930 iterations 177
Cbc0038I Pass  51: (3.06 seconds) suminf.   73.44912 (707) obj. 916021 iterations 216
Cbc0038I Pass  52: (3.12 seconds) suminf.   75.52908 (701) obj. 916757 iterations 331
Cbc0038I Pass  53: (3.16 seconds) suminf.   74.31344 (695) obj. 917142 iterations 235
Cbc0038I Pass  54: (3.18 seconds) suminf.   74.11394 (699) obj. 918727 iterations 44
Cbc0038I Pass  55: (3.22 seconds) suminf.   73.72291 (699) obj. 917353 iterations 257
Cbc0038I Pass  56: (3.25 seconds) suminf.   73.84098 (695) obj. 918315 iterations 102
Cbc0038I Pass  57: (3.29 seconds) suminf.   73.81330 (704) obj. 939323 iterations 238
Cbc0038I Pass  58: (3.32 seconds) suminf.   73.52931 (699) obj. 918867 iterations 133
Cbc0038I Pass  59: (3.36 seconds) suminf.   74.07642 (703) obj. 911399 iterations 169
Cbc0038I Pass  60: (3.39 seconds) suminf.   73.44912 (707) obj. 916021 iterations 183
Cbc0038I Pass  61: (3.45 seconds) suminf.   75.54346 (698) obj. 916506 iterations 335
Cbc0038I Pass  62: (3.49 seconds) suminf.   74.31344 (695) obj. 917142 iterations 234
Cbc0038I Pass  63: (3.50 seconds) suminf.   74.11394 (699) obj. 918727 iterations 36
Cbc0038I Pass  64: (3.56 seconds) suminf.   75.20645 (709) obj. 901208 iterations 329
Cbc0038I Pass  65: (3.60 seconds) suminf.   73.52561 (699) obj. 919382 iterations 163
Cbc0038I Pass  66: (3.63 seconds) suminf.   73.44912 (707) obj. 916021 iterations 141
Cbc0038I Pass  67: (3.66 seconds) suminf.   74.23472 (706) obj. 919013 iterations 173
Cbc0038I Pass  68: (3.69 seconds) suminf.   73.52931 (699) obj. 918867 iterations 142
Cbc0038I Pass  69: (3.75 seconds) suminf.   75.36806 (707) obj. 916830 iterations 321
Cbc0038I Pass  70: (3.79 seconds) suminf.   74.02227 (699) obj. 909803 iterations 213
Cbc0038I Pass  71: (3.80 seconds) suminf.   73.88796 (701) obj. 912514 iterations 45
Cbc0038I Pass  72: (3.84 seconds) suminf.   73.69531 (695) obj. 918903 iterations 267
Cbc0038I Pass  73: (3.86 seconds) suminf.   73.84098 (695) obj. 918315 iterations 60
Cbc0038I Pass  74: (3.90 seconds) suminf.   75.22924 (706) obj. 912873 iterations 276
Cbc0038I Pass  75: (3.95 seconds) suminf.   73.52931 (699) obj. 918867 iterations 285
Cbc0038I Pass  76: (3.99 seconds) suminf.   74.17681 (704) obj. 919527 iterations 171
Cbc0038I Pass  77: (4.03 seconds) suminf.   73.44912 (707) obj. 916021 iterations 184
Cbc0038I Pass  78: (4.08 seconds) suminf.   75.52908 (701) obj. 916757 iterations 305
Cbc0038I Pass  79: (4.13 seconds) suminf.   74.31344 (695) obj. 917142 iterations 305
Cbc0038I Pass  80: (4.14 seconds) suminf.   74.11394 (699) obj. 918727 iterations 40
Cbc0038I Pass  81: (4.18 seconds) suminf.   73.72291 (699) obj. 917353 iterations 227
Cbc0038I Pass  82: (4.20 seconds) suminf.   73.84098 (695) obj. 918315 iterations 96
Cbc0038I Pass  83: (4.26 seconds) suminf.   75.22924 (706) obj. 912873 iterations 318
Cbc0038I Pass  84: (4.30 seconds) suminf.   73.52931 (699) obj. 918867 iterations 280
Cbc0038I Pass  85: (4.34 seconds) suminf.   74.07642 (703) obj. 911399 iterations 159
Cbc0038I Pass  86: (4.37 seconds) suminf.   73.44912 (707) obj. 916021 iterations 168
Cbc0038I Pass  87: (4.42 seconds) suminf.   75.08106 (697) obj. 916726 iterations 272
Cbc0038I Pass  88: (4.45 seconds) suminf.   74.69606 (695) obj. 904936 iterations 165
Cbc0038I Pass  89: (4.46 seconds) suminf.   74.48347 (693) obj. 919630 iterations 49
Cbc0038I Pass  90: (4.53 seconds) suminf.   75.90534 (704) obj. 926408 iterations 407
Cbc0038I Pass  91: (4.59 seconds) suminf.   73.43266 (700) obj. 918674 iterations 352
Cbc0038I Pass  92: (4.60 seconds) suminf.   73.52931 (699) obj. 918867 iterations 19
Cbc0038I Pass  93: (4.64 seconds) suminf.   73.66193 (703) obj. 918930 iterations 177
Cbc0038I Pass  94: (4.68 seconds) suminf.   73.44912 (707) obj. 916021 iterations 229
Cbc0038I Pass  95: (4.73 seconds) suminf.   75.47085 (699) obj. 916645 iterations 323
Cbc0038I Pass  96: (4.77 seconds) suminf.   74.69606 (695) obj. 904936 iterations 193
Cbc0038I Pass  97: (4.78 seconds) suminf.   74.48347 (693) obj. 919630 iterations 48
Cbc0038I Pass  98: (4.84 seconds) suminf.   75.09687 (706) obj. 974677 iterations 332
Cbc0038I Pass  99: (4.88 seconds) suminf.   74.27245 (698) obj. 935811 iterations 206
Cbc0038I Pass 100: (5.03 seconds) suminf.  111.91157 (691) obj. 1.18219e+06 iterations 1151
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3501 rows 1192 columns, reduced to 3016 rows 989 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.39 seconds)
Cbc0038I After 5.39 seconds - Feasibility pump exiting - took 4.55 seconds
Cbc0031I 35 added rows had average density of 53.828571
Cbc0013I At root node, 35 cuts changed objective from 592554.67 to 606208 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 77 row cuts average 484.9 elements, 0 column cuts (0 active)  in 0.286 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 63 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 606208 (8.16 seconds)
Cbc0010I After 100 nodes, 1 on tree, 1e+50 best solution, best possible 606220 (62.52 seconds)
Cbc0010I After 200 nodes, 1 on tree, 1e+50 best solution, best possible 606260 (134.94 seconds)
Cbc0010I After 300 nodes, 1 on tree, 1e+50 best solution, best possible 606310 (214.61 seconds)
Cbc0010I After 400 nodes, 1 on tree, 1e+50 best solution, best possible 606359 (283.96 seconds)
Cbc0010I After 500 nodes, 1 on tree, 1e+50 best solution, best possible 606409 (350.82 seconds)
Cbc0010I After 600 nodes, 1 on tree, 1e+50 best solution, best possible 606459 (421.36 seconds)
Cbc0010I After 700 nodes, 1 on tree, 1e+50 best solution, best possible 606509 (489.68 seconds)
Cbc0010I After 800 nodes, 1 on tree, 1e+50 best solution, best possible 606559 (556.23 seconds)
Cbc0010I After 900 nodes, 1 on tree, 1e+50 best solution, best possible 606609 (622.03 seconds)
Cbc0010I After 1000 nodes, 1 on tree, 1e+50 best solution, best possible 606659 (689.38 seconds)
Cbc0010I After 1100 nodes, 1 on tree, 1e+50 best solution, best possible 606709 (758.36 seconds)
Cbc0010I After 1200 nodes, 1 on tree, 1e+50 best solution, best possible 606759 (826.07 seconds)
Cbc0010I After 1300 nodes, 1 on tree, 1e+50 best solution, best possible 606809 (891.87 seconds)
Cbc0010I After 1400 nodes, 1 on tree, 1e+50 best solution, best possible 606859 (957.87 seconds)
Cbc0010I After 1500 nodes, 1 on tree, 1e+50 best solution, best possible 606909 (1021.42 seconds)
Cbc0010I After 1600 nodes, 1 on tree, 1e+50 best solution, best possible 606959 (1093.35 seconds)
Cbc0010I After 1700 nodes, 1 on tree, 1e+50 best solution, best possible 607009 (1158.98 seconds)
Cbc0010I After 1800 nodes, 1 on tree, 1e+50 best solution, best possible 607059 (1223.22 seconds)
Cbc0010I After 1900 nodes, 1 on tree, 1e+50 best solution, best possible 607109 (1285.72 seconds)
Cbc0010I After 2000 nodes, 1 on tree, 1e+50 best solution, best possible 607159 (1352.64 seconds)
Cbc0010I After 2100 nodes, 1 on tree, 1e+50 best solution, best possible 607209 (1419.98 seconds)
Cbc0010I After 2200 nodes, 1 on tree, 1e+50 best solution, best possible 607259 (1486.69 seconds)
Cbc0010I After 2300 nodes, 1 on tree, 1e+50 best solution, best possible 607309 (1550.69 seconds)
Cbc0010I After 2400 nodes, 1 on tree, 1e+50 best solution, best possible 607359 (1621.59 seconds)
Cbc0010I After 2500 nodes, 1 on tree, 1e+50 best solution, best possible 607409 (1698.98 seconds)
Cbc0010I After 2600 nodes, 1 on tree, 1e+50 best solution, best possible 607459 (1772.39 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 607459), took 9033309 iterations and 2635 nodes (1799.91 seconds)
Cbc0032I Strong branching done 3360 times (229909 iterations), fathomed 1017 nodes and fixed 186 variables
Cbc0035I Maximum depth 1269, 0 variables fixed on reduced cost
Cuts at root node changed objective from 592555 to 606208
Probing was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.073 seconds)
Gomory was tried 549 times and created 1462 cuts of which 0 were active after adding rounds of cuts (3.113 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 549 times and created 2825 cuts of which 0 were active after adding rounds of cuts (1.277 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
ImplicationCuts was tried 30 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    607459.000
Enumerated nodes:               2635
Total iterations:               9033309
Time (CPU seconds):             1799.91
Time (Wallclock seconds):       1814.06

Total time (CPU seconds):       1799.92   (Wallclock seconds):       1814.08

