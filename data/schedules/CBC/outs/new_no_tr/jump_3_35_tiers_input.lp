Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_35_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_35_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 26624 - 0.38 seconds
Cgl0002I 102 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 538 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 72 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 3898 rows, 1245 columns (1245 integer (1209 of which binary)) and 13144 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1245 objects (1245 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 712 integers unsatisfied sum - 259.945
Cbc0038I Pass   1: (1.75 seconds) suminf.  119.91374 (734) obj. 54045 iterations 2217
Cbc0038I Pass   2: (1.94 seconds) suminf.   81.06810 (737) obj. 60187.3 iterations 917
Cbc0038I Pass   3: (2.05 seconds) suminf.   75.48751 (766) obj. 60653.4 iterations 479
Cbc0038I Pass   4: (2.11 seconds) suminf.   76.74799 (756) obj. 60673.4 iterations 175
Cbc0038I Pass   5: (2.14 seconds) suminf.   76.25846 (742) obj. 60667.4 iterations 137
Cbc0038I Pass   6: (2.22 seconds) suminf.   68.38208 (750) obj. 60453.3 iterations 259
Cbc0038I Pass   7: (2.25 seconds) suminf.   69.16323 (755) obj. 60747 iterations 108
Cbc0038I Pass   8: (2.29 seconds) suminf.   69.37389 (742) obj. 60784.5 iterations 141
Cbc0038I Pass   9: (2.34 seconds) suminf.   69.25884 (748) obj. 60730.3 iterations 128
Cbc0038I Pass  10: (2.47 seconds) suminf.   68.25435 (740) obj. 61499.9 iterations 569
Cbc0038I Pass  11: (2.51 seconds) suminf.   68.48743 (726) obj. 61034.3 iterations 132
Cbc0038I Pass  12: (2.52 seconds) suminf.   68.46639 (725) obj. 61028.4 iterations 27
Cbc0038I Pass  13: (2.65 seconds) suminf.   61.84269 (757) obj. 60833 iterations 547
Cbc0038I Pass  14: (2.71 seconds) suminf.   58.68085 (739) obj. 61485 iterations 224
Cbc0038I Pass  15: (2.79 seconds) suminf.   56.91597 (757) obj. 61505.5 iterations 295
Cbc0038I Pass  16: (2.82 seconds) suminf.   55.04496 (765) obj. 61673.9 iterations 99
Cbc0038I Pass  17: (2.85 seconds) suminf.   54.95651 (751) obj. 61636.6 iterations 94
Cbc0038I Pass  18: (2.88 seconds) suminf.   54.93689 (749) obj. 61656.8 iterations 77
Cbc0038I Pass  19: (2.99 seconds) suminf.   55.74832 (703) obj. 62297.2 iterations 538
Cbc0038I Pass  20: (3.06 seconds) suminf.   52.81840 (719) obj. 61803.8 iterations 319
Cbc0038I Pass  21: (3.09 seconds) suminf.   52.57685 (717) obj. 61865.8 iterations 87
Cbc0038I Pass  22: (3.19 seconds) suminf.   52.26772 (702) obj. 61822.5 iterations 479
Cbc0038I Pass  23: (3.26 seconds) suminf.   49.37281 (671) obj. 61562.2 iterations 301
Cbc0038I Pass  24: (3.28 seconds) suminf.   49.63795 (662) obj. 61707.6 iterations 93
Cbc0038I Pass  25: (3.37 seconds) suminf.   49.83075 (679) obj. 62113.7 iterations 479
Cbc0038I Pass  26: (3.42 seconds) suminf.   47.51226 (653) obj. 61701 iterations 225
Cbc0038I Pass  27: (3.47 seconds) suminf.   44.37828 (686) obj. 61318.9 iterations 274
Cbc0038I Pass  28: (3.50 seconds) suminf.   44.30688 (674) obj. 61604.4 iterations 98
Cbc0038I Pass  29: (3.61 seconds) suminf.   46.20196 (707) obj. 60619.5 iterations 541
Cbc0038I Pass  30: (3.70 seconds) suminf.   44.50846 (699) obj. 61678.4 iterations 427
Cbc0038I Pass  31: (3.73 seconds) suminf.   44.42351 (690) obj. 61963.8 iterations 143
Cbc0038I Pass  32: (3.81 seconds) suminf.   47.61013 (705) obj. 63120.9 iterations 438
Cbc0038I Pass  33: (3.88 seconds) suminf.   46.11172 (677) obj. 63162.9 iterations 346
Cbc0038I Pass  34: (3.98 seconds) suminf.   52.08595 (725) obj. 65122.6 iterations 496
Cbc0038I Pass  35: (4.09 seconds) suminf.   45.35225 (690) obj. 61905.1 iterations 522
Cbc0038I Pass  36: (4.11 seconds) suminf.   45.10684 (678) obj. 61725.5 iterations 113
Cbc0038I Pass  37: (4.24 seconds) suminf.   44.36035 (732) obj. 67275.5 iterations 628
Cbc0038I Pass  38: (4.32 seconds) suminf.   43.33815 (700) obj. 67206.8 iterations 361
Cbc0038I Pass  39: (4.37 seconds) suminf.   45.67523 (722) obj. 67540.4 iterations 176
Cbc0038I Pass  40: (4.40 seconds) suminf.   45.54859 (716) obj. 66654.5 iterations 159
Cbc0038I Pass  41: (4.51 seconds) suminf.   46.13327 (720) obj. 67442 iterations 575
Cbc0038I Pass  42: (4.56 seconds) suminf.   43.98155 (717) obj. 67397.5 iterations 212
Cbc0038I Pass  43: (4.64 seconds) suminf.   45.16909 (709) obj. 67456.1 iterations 437
Cbc0038I Pass  44: (4.71 seconds) suminf.   45.10887 (707) obj. 66464.9 iterations 354
Cbc0038I Pass  45: (4.74 seconds) suminf.   45.31055 (708) obj. 66371.8 iterations 131
Cbc0038I Pass  46: (4.83 seconds) suminf.   46.94228 (714) obj. 67223.8 iterations 455
Cbc0038I Pass  47: (4.90 seconds) suminf.   44.13802 (686) obj. 67116.8 iterations 399
Cbc0038I Pass  48: (4.97 seconds) suminf.   46.27113 (727) obj. 67746.4 iterations 369
Cbc0038I Pass  49: (5.04 seconds) suminf.   43.25943 (684) obj. 67247.9 iterations 383
Cbc0038I Pass  50: (5.15 seconds) suminf.   44.96101 (715) obj. 67376.4 iterations 540
Cbc0038I Pass  51: (5.23 seconds) suminf.   44.36507 (696) obj. 67313.2 iterations 375
Cbc0038I Pass  52: (5.25 seconds) suminf.   44.04076 (697) obj. 67166.3 iterations 102
Cbc0038I Pass  53: (5.27 seconds) suminf.   44.13802 (686) obj. 67116.8 iterations 79
Cbc0038I Pass  54: (5.37 seconds) suminf.   44.91136 (658) obj. 67862.2 iterations 495
Cbc0038I Pass  55: (5.46 seconds) suminf.   44.78469 (699) obj. 67296.6 iterations 522
Cbc0038I Pass  56: (5.51 seconds) suminf.   43.25943 (684) obj. 67247.9 iterations 183
Cbc0038I Pass  57: (5.59 seconds) suminf.   45.60985 (722) obj. 67314.6 iterations 424
Cbc0038I Pass  58: (5.63 seconds) suminf.   44.87620 (699) obj. 66493.9 iterations 201
Cbc0038I Pass  59: (5.65 seconds) suminf.   44.13802 (686) obj. 67116.8 iterations 97
Cbc0038I Pass  60: (5.73 seconds) suminf.   46.27113 (727) obj. 67746.4 iterations 393
Cbc0038I Pass  61: (5.80 seconds) suminf.   43.25943 (684) obj. 67247.9 iterations 418
Cbc0038I Pass  62: (5.93 seconds) suminf.   47.75390 (668) obj. 65175.3 iterations 675
Cbc0038I Pass  63: (6.04 seconds) suminf.   40.44027 (698) obj. 64687.4 iterations 612
Cbc0038I Pass  64: (6.10 seconds) suminf.   40.43291 (703) obj. 64983.8 iterations 289
Cbc0038I Pass  65: (6.14 seconds) suminf.   41.20005 (684) obj. 64959.3 iterations 139
Cbc0038I Pass  66: (6.24 seconds) suminf.   46.75628 (681) obj. 65365.6 iterations 505
Cbc0038I Pass  67: (6.31 seconds) suminf.   43.51232 (700) obj. 64859.8 iterations 388
Cbc0038I Pass  68: (6.33 seconds) suminf.   43.53611 (691) obj. 64706.4 iterations 94
Cbc0038I Pass  69: (6.47 seconds) suminf.   42.42294 (706) obj. 64691.5 iterations 668
Cbc0038I Pass  70: (6.55 seconds) suminf.   38.66719 (709) obj. 65200.9 iterations 387
Cbc0038I Pass  71: (6.58 seconds) suminf.   39.73572 (704) obj. 65146.2 iterations 131
Cbc0038I Pass  72: (6.68 seconds) suminf.   44.93100 (744) obj. 65184.4 iterations 453
Cbc0038I Pass  73: (6.73 seconds) suminf.   43.95292 (713) obj. 64901.4 iterations 206
Cbc0038I Pass  74: (6.75 seconds) suminf.   43.82388 (705) obj. 64895 iterations 100
Cbc0038I Pass  75: (6.83 seconds) suminf.   42.84832 (712) obj. 65052.1 iterations 409
Cbc0038I Pass  76: (6.90 seconds) suminf.   41.37501 (686) obj. 64899.4 iterations 345
Cbc0038I Pass  77: (7.00 seconds) suminf.   43.82873 (712) obj. 65026.6 iterations 522
Cbc0038I Pass  78: (7.09 seconds) suminf.   41.45250 (716) obj. 64907 iterations 409
Cbc0038I Pass  79: (7.20 seconds) suminf.   41.39106 (729) obj. 65003 iterations 500
Cbc0038I Pass  80: (7.29 seconds) suminf.   44.29164 (718) obj. 65109.6 iterations 426
Cbc0038I Pass  81: (7.34 seconds) suminf.   42.48168 (713) obj. 65044.4 iterations 218
Cbc0038I Pass  82: (7.38 seconds) suminf.   41.37501 (686) obj. 64899.4 iterations 153
Cbc0038I Pass  83: (7.49 seconds) suminf.   43.21308 (707) obj. 65324.3 iterations 536
Cbc0038I Pass  84: (7.57 seconds) suminf.   43.17097 (725) obj. 65041.6 iterations 407
Cbc0038I Pass  85: (7.62 seconds) suminf.   41.45250 (716) obj. 64907 iterations 185
Cbc0038I Pass  86: (7.72 seconds) suminf.   42.64206 (734) obj. 65064.7 iterations 491
Cbc0038I Pass  87: (7.79 seconds) suminf.   41.37501 (686) obj. 64899.4 iterations 330
Cbc0038I Pass  88: (7.87 seconds) suminf.   43.06770 (698) obj. 65079.5 iterations 426
Cbc0038I Pass  89: (7.94 seconds) suminf.   42.40012 (709) obj. 65042.3 iterations 367
Cbc0038I Pass  90: (7.97 seconds) suminf.   41.45250 (716) obj. 64907 iterations 134
Cbc0038I Pass  91: (8.07 seconds) suminf.   44.63828 (732) obj. 64991.7 iterations 441
Cbc0038I Pass  92: (8.16 seconds) suminf.   41.37501 (686) obj. 64899.4 iterations 441
Cbc0038I Pass  93: (8.26 seconds) suminf.   43.25976 (713) obj. 65011 iterations 460
Cbc0038I Pass  94: (8.46 seconds) suminf.   88.24569 (752) obj. 69282.2 iterations 1058
Cbc0038I Pass  95: (8.62 seconds) suminf.   67.70306 (777) obj. 75721.1 iterations 775
Cbc0038I Pass  96: (8.69 seconds) suminf.   63.99539 (770) obj. 75639 iterations 233
Cbc0038I Pass  97: (8.78 seconds) suminf.   60.14969 (758) obj. 75637 iterations 310
Cbc0038I Pass  98: (8.81 seconds) suminf.   58.44465 (751) obj. 75642.3 iterations 84
Cbc0038I Pass  99: (8.83 seconds) suminf.   57.56680 (740) obj. 75607.9 iterations 57
Cbc0038I Pass 100: (9.06 seconds) suminf.   94.26384 (760) obj. 83574 iterations 1079
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 3770 rows 1191 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.08 seconds)
Cbc0038I After 9.08 seconds - Feasibility pump exiting - took 7.82 seconds
Cbc0031I 52 added rows had average density of 12.634615
Cbc0013I At root node, 52 cuts changed objective from 26624 to 33140.998 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 47 row cuts average 3.2 elements, 9 column cuts (9 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 249 row cuts average 153.0 elements, 0 column cuts (0 active)  in 1.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 310 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 33141 (28.77 seconds)
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 33147 (117.72 seconds)
Cbc0010I After 200 nodes, 62 on tree, 1e+50 best solution, best possible 33147 (201.71 seconds)
Cbc0010I After 300 nodes, 81 on tree, 1e+50 best solution, best possible 33147 (269.74 seconds)
Cbc0010I After 400 nodes, 91 on tree, 1e+50 best solution, best possible 33147 (333.00 seconds)
Cbc0010I After 500 nodes, 142 on tree, 1e+50 best solution, best possible 33147 (407.20 seconds)
Cbc0010I After 600 nodes, 194 on tree, 1e+50 best solution, best possible 33147 (471.08 seconds)
Cbc0010I After 700 nodes, 243 on tree, 1e+50 best solution, best possible 33147 (530.90 seconds)
Cbc0010I After 800 nodes, 293 on tree, 1e+50 best solution, best possible 33147 (592.60 seconds)
Cbc0010I After 900 nodes, 338 on tree, 1e+50 best solution, best possible 33147 (658.96 seconds)
Cbc0010I After 1000 nodes, 366 on tree, 1e+50 best solution, best possible 33147 (722.97 seconds)
Cbc0010I After 1100 nodes, 366 on tree, 1e+50 best solution, best possible 33148 (790.07 seconds)
Cbc0010I After 1200 nodes, 368 on tree, 1e+50 best solution, best possible 33148 (845.85 seconds)
Cbc0010I After 1300 nodes, 366 on tree, 1e+50 best solution, best possible 33148 (905.66 seconds)
Cbc0010I After 1400 nodes, 374 on tree, 1e+50 best solution, best possible 33148 (983.70 seconds)
Cbc0010I After 1500 nodes, 373 on tree, 1e+50 best solution, best possible 33148 (1099.89 seconds)
Cbc0010I After 1600 nodes, 371 on tree, 1e+50 best solution, best possible 33148 (1167.00 seconds)
Cbc0010I After 1700 nodes, 370 on tree, 1e+50 best solution, best possible 33148 (1222.72 seconds)
Cbc0010I After 1800 nodes, 375 on tree, 1e+50 best solution, best possible 33148 (1282.82 seconds)
Cbc0010I After 1900 nodes, 381 on tree, 1e+50 best solution, best possible 33148 (1372.50 seconds)
Cbc0010I After 2000 nodes, 374 on tree, 1e+50 best solution, best possible 33148 (1471.78 seconds)
Cbc0010I After 2100 nodes, 376 on tree, 1e+50 best solution, best possible 33148 (1523.34 seconds)
Cbc0010I After 2200 nodes, 377 on tree, 1e+50 best solution, best possible 33148 (1590.33 seconds)
Cbc0010I After 2300 nodes, 373 on tree, 1e+50 best solution, best possible 33148 (1653.21 seconds)
Cbc0010I After 2400 nodes, 378 on tree, 1e+50 best solution, best possible 33148 (1725.24 seconds)
Cbc0010I After 2500 nodes, 378 on tree, 1e+50 best solution, best possible 33148 (1793.59 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 33148), took 4757373 iterations and 2507 nodes (1799.20 seconds)
Cbc0032I Strong branching done 16860 times (1529136 iterations), fathomed 107 nodes and fixed 903 variables
Cbc0035I Maximum depth 651, 0 variables fixed on reduced cost
Cuts at root node changed objective from 26624 to 33141
Probing was tried 2351 times and created 29041 cuts of which 0 were active after adding rounds of cuts (3.716 seconds)
Gomory was tried 2300 times and created 11692 cuts of which 0 were active after adding rounds of cuts (19.265 seconds)
Knapsack was tried 2300 times and created 7515 cuts of which 0 were active after adding rounds of cuts (2.776 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
MixedIntegerRounding2 was tried 24 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
FlowCover was tried 24 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
TwoMirCuts was tried 2300 times and created 20875 cuts of which 0 were active after adding rounds of cuts (6.212 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
ImplicationCuts was tried 67 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    33148.000
Enumerated nodes:               2507
Total iterations:               4757373
Time (CPU seconds):             1799.21
Time (Wallclock seconds):       1808.76

Total time (CPU seconds):       1799.22   (Wallclock seconds):       1808.78

