Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_40_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_40_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 30997.7 - 2.99 seconds
Cgl0002I 151 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1096 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 192 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 5456 rows, 1649 columns (1649 integer (1608 of which binary)) and 18701 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1649 objects (1649 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 957 integers unsatisfied sum - 321.443
Cbc0038I Pass   1: (5.63 seconds) suminf.  173.64590 (880) obj. 58596.4 iterations 3253
Cbc0038I Pass   2: (6.01 seconds) suminf.  124.72739 (802) obj. 70604 iterations 1305
Cbc0038I Pass   3: (6.28 seconds) suminf.  105.40229 (867) obj. 77082.1 iterations 885
Cbc0038I Pass   4: (6.56 seconds) suminf.   88.78477 (912) obj. 77717.3 iterations 868
Cbc0038I Pass   5: (6.68 seconds) suminf.   88.11848 (894) obj. 77231.5 iterations 313
Cbc0038I Pass   6: (6.74 seconds) suminf.   85.97412 (909) obj. 77076.2 iterations 137
Cbc0038I Pass   7: (6.76 seconds) suminf.   86.13913 (911) obj. 77278.7 iterations 63
Cbc0038I Pass   8: (6.98 seconds) suminf.   83.06813 (891) obj. 76509.7 iterations 710
Cbc0038I Pass   9: (7.10 seconds) suminf.   83.45644 (910) obj. 77073 iterations 313
Cbc0038I Pass  10: (7.18 seconds) suminf.   84.19034 (911) obj. 77217.4 iterations 185
Cbc0038I Pass  11: (7.23 seconds) suminf.   82.40633 (904) obj. 77553.5 iterations 141
Cbc0038I Pass  12: (7.28 seconds) suminf.   81.67625 (912) obj. 78043.7 iterations 134
Cbc0038I Pass  13: (7.49 seconds) suminf.   80.76577 (901) obj. 81817.6 iterations 684
Cbc0038I Pass  14: (7.57 seconds) suminf.   79.11931 (935) obj. 81799.4 iterations 185
Cbc0038I Pass  15: (7.62 seconds) suminf.   76.16738 (936) obj. 81762.4 iterations 119
Cbc0038I Pass  16: (7.82 seconds) suminf.   74.52170 (924) obj. 81109.7 iterations 568
Cbc0038I Pass  17: (7.96 seconds) suminf.   69.57327 (922) obj. 81260.4 iterations 367
Cbc0038I Pass  18: (7.97 seconds) suminf.   69.26627 (921) obj. 81269.1 iterations 14
Cbc0038I Pass  19: (8.12 seconds) suminf.   68.66490 (915) obj. 81418.3 iterations 384
Cbc0038I Pass  20: (8.22 seconds) suminf.   66.38177 (915) obj. 81381 iterations 235
Cbc0038I Pass  21: (8.37 seconds) suminf.   69.32084 (902) obj. 81898.3 iterations 377
Cbc0038I Pass  22: (8.51 seconds) suminf.   67.20393 (906) obj. 81628.2 iterations 385
Cbc0038I Pass  23: (8.65 seconds) suminf.   65.90586 (908) obj. 81712.3 iterations 415
Cbc0038I Pass  24: (8.82 seconds) suminf.   67.21431 (922) obj. 81870.1 iterations 475
Cbc0038I Pass  25: (9.01 seconds) suminf.   67.26181 (919) obj. 81182 iterations 536
Cbc0038I Pass  26: (9.11 seconds) suminf.   68.36220 (909) obj. 81299.7 iterations 215
Cbc0038I Pass  27: (9.29 seconds) suminf.   66.88281 (916) obj. 81209.8 iterations 485
Cbc0038I Pass  28: (9.35 seconds) suminf.   67.55000 (918) obj. 81449.5 iterations 118
Cbc0038I Pass  29: (9.54 seconds) suminf.   67.19945 (900) obj. 81120.5 iterations 533
Cbc0038I Pass  30: (9.60 seconds) suminf.   66.77959 (902) obj. 81424.8 iterations 146
Cbc0038I Pass  31: (9.76 seconds) suminf.   67.35399 (911) obj. 80907.7 iterations 478
Cbc0038I Pass  32: (9.86 seconds) suminf.   67.34954 (906) obj. 80953.8 iterations 223
Cbc0038I Pass  33: (10.07 seconds) suminf.   72.02494 (916) obj. 81057.1 iterations 602
Cbc0038I Pass  34: (10.19 seconds) suminf.   69.22545 (920) obj. 81425.5 iterations 310
Cbc0038I Pass  35: (10.35 seconds) suminf.   70.96408 (928) obj. 81571.9 iterations 476
Cbc0038I Pass  36: (10.44 seconds) suminf.   69.22976 (932) obj. 81434.4 iterations 213
Cbc0038I Pass  37: (10.54 seconds) suminf.   69.17393 (926) obj. 81063.6 iterations 243
Cbc0038I Pass  38: (10.74 seconds) suminf.   69.83420 (910) obj. 81437.2 iterations 600
Cbc0038I Pass  39: (10.88 seconds) suminf.   68.44443 (915) obj. 81120.1 iterations 338
Cbc0038I Pass  40: (11.05 seconds) suminf.   68.36994 (912) obj. 81651.4 iterations 510
Cbc0038I Pass  41: (11.12 seconds) suminf.   67.28064 (912) obj. 81457.7 iterations 180
Cbc0038I Pass  42: (11.36 seconds) suminf.   70.41973 (918) obj. 81380.9 iterations 697
Cbc0038I Pass  43: (11.49 seconds) suminf.   68.09871 (901) obj. 81134.9 iterations 373
Cbc0038I Pass  44: (11.63 seconds) suminf.   64.78089 (923) obj. 81589.4 iterations 416
Cbc0038I Pass  45: (11.70 seconds) suminf.   64.23197 (924) obj. 81525.5 iterations 148
Cbc0038I Pass  46: (11.86 seconds) suminf.   64.61005 (923) obj. 81879 iterations 487
Cbc0038I Pass  47: (11.98 seconds) suminf.   66.54948 (900) obj. 81507.1 iterations 346
Cbc0038I Pass  48: (12.19 seconds) suminf.   67.23180 (923) obj. 81145.9 iterations 664
Cbc0038I Pass  49: (12.31 seconds) suminf.   66.46803 (914) obj. 81524.9 iterations 307
Cbc0038I Pass  50: (12.50 seconds) suminf.   67.61670 (925) obj. 81800.3 iterations 517
Cbc0038I Pass  51: (13.25 seconds) suminf.  107.20948 (951) obj. 97700.1 iterations 2278
Cbc0038I Pass  52: (13.67 seconds) suminf.   60.41019 (922) obj. 99326.6 iterations 1284
Cbc0038I Pass  53: (13.79 seconds) suminf.   60.57590 (914) obj. 99020.1 iterations 275
Cbc0038I Pass  54: (13.90 seconds) suminf.   57.92424 (919) obj. 99212.8 iterations 245
Cbc0038I Pass  55: (13.94 seconds) suminf.   57.37902 (914) obj. 99306.7 iterations 86
Cbc0038I Pass  56: (14.15 seconds) suminf.   55.11827 (932) obj. 99462.6 iterations 545
Cbc0038I Pass  57: (14.20 seconds) suminf.   55.31750 (929) obj. 99568.3 iterations 113
Cbc0038I Pass  58: (14.25 seconds) suminf.   56.77032 (926) obj. 99532.9 iterations 100
Cbc0038I Pass  59: (14.30 seconds) suminf.   56.40264 (925) obj. 99779.5 iterations 117
Cbc0038I Pass  60: (14.34 seconds) suminf.   54.97001 (935) obj. 99619.9 iterations 69
Cbc0038I Pass  61: (14.53 seconds) suminf.   56.10664 (929) obj. 99810 iterations 525
Cbc0038I Pass  62: (14.62 seconds) suminf.   53.04342 (931) obj. 99757 iterations 180
Cbc0038I Pass  63: (14.78 seconds) suminf.   54.05821 (913) obj. 99528.9 iterations 393
Cbc0038I Pass  64: (14.85 seconds) suminf.   53.06573 (919) obj. 99544.8 iterations 141
Cbc0038I Pass  65: (15.01 seconds) suminf.   52.21594 (967) obj. 99773.1 iterations 384
Cbc0038I Pass  66: (15.17 seconds) suminf.   52.32555 (930) obj. 100015 iterations 395
Cbc0038I Pass  67: (15.49 seconds) suminf.   54.32535 (967) obj. 99224.7 iterations 882
Cbc0038I Pass  68: (15.65 seconds) suminf.   52.00032 (972) obj. 99571.5 iterations 363
Cbc0038I Pass  69: (15.88 seconds) suminf.   53.08490 (951) obj. 99724.4 iterations 583
Cbc0038I Pass  70: (15.98 seconds) suminf.   54.16610 (939) obj. 99543.2 iterations 229
Cbc0038I Pass  71: (16.12 seconds) suminf.   53.46735 (960) obj. 100034 iterations 351
Cbc0038I Pass  72: (16.17 seconds) suminf.   52.31295 (965) obj. 99502.1 iterations 109
Cbc0038I Pass  73: (16.38 seconds) suminf.   53.66267 (954) obj. 99706.9 iterations 541
Cbc0038I Pass  74: (16.49 seconds) suminf.   53.46681 (963) obj. 99704.9 iterations 264
Cbc0038I Pass  75: (16.54 seconds) suminf.   53.87638 (964) obj. 99773.9 iterations 96
Cbc0038I Pass  76: (16.77 seconds) suminf.   52.22373 (960) obj. 99173.4 iterations 603
Cbc0038I Pass  77: (16.86 seconds) suminf.   52.25572 (960) obj. 99186.8 iterations 162
Cbc0038I Pass  78: (17.04 seconds) suminf.   53.68196 (957) obj. 99700.7 iterations 452
Cbc0038I Pass  79: (17.17 seconds) suminf.   52.52633 (952) obj. 99472.9 iterations 292
Cbc0038I Pass  80: (17.36 seconds) suminf.   52.27851 (988) obj. 99688.5 iterations 478
Cbc0038I Pass  81: (17.40 seconds) suminf.   52.05944 (985) obj. 99691 iterations 78
Cbc0038I Pass  82: (17.60 seconds) suminf.   53.64163 (950) obj. 100276 iterations 485
Cbc0038I Pass  83: (17.73 seconds) suminf.   52.93011 (949) obj. 100041 iterations 279
Cbc0038I Pass  84: (17.98 seconds) suminf.   53.76026 (974) obj. 99343.2 iterations 642
Cbc0038I Pass  85: (18.12 seconds) suminf.   52.16437 (989) obj. 99538.9 iterations 311
Cbc0038I Pass  86: (18.13 seconds) suminf.   52.32826 (992) obj. 99541.4 iterations 12
Cbc0038I Pass  87: (18.20 seconds) suminf.   52.14260 (970) obj. 99482.7 iterations 124
Cbc0038I Pass  88: (18.38 seconds) suminf.   52.53413 (952) obj. 100182 iterations 457
Cbc0038I Pass  89: (18.49 seconds) suminf.   51.54182 (942) obj. 99679 iterations 247
Cbc0038I Pass  90: (18.50 seconds) suminf.   51.51240 (946) obj. 99678.8 iterations 12
Cbc0038I Pass  91: (18.71 seconds) suminf.   55.29599 (970) obj. 99922.7 iterations 569
Cbc0038I Pass  92: (18.86 seconds) suminf.   52.74215 (957) obj. 100077 iterations 370
Cbc0038I Pass  93: (18.88 seconds) suminf.   52.77892 (960) obj. 100214 iterations 41
Cbc0038I Pass  94: (19.10 seconds) suminf.   54.17941 (951) obj. 99351.5 iterations 544
Cbc0038I Pass  95: (19.24 seconds) suminf.   52.31450 (942) obj. 99772.7 iterations 356
Cbc0038I Pass  96: (19.31 seconds) suminf.   51.47926 (965) obj. 99324.6 iterations 142
Cbc0038I Pass  97: (19.51 seconds) suminf.   54.37065 (950) obj. 100286 iterations 515
Cbc0038I Pass  98: (19.62 seconds) suminf.   53.16755 (963) obj. 100120 iterations 229
Cbc0038I Pass  99: (19.70 seconds) suminf.   52.61550 (957) obj. 100091 iterations 154
Cbc0038I Pass 100: (20.26 seconds) suminf.   84.07552 (981) obj. 94225.6 iterations 1779
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5456 rows 1649 columns, reduced to 5290 rows 1567 columns - too large
Cbc0038I Mini branch and bound did not improve solution (20.29 seconds)
Cbc0038I After 20.29 seconds - Feasibility pump exiting - took 15.66 seconds
Cbc0031I 19 added rows had average density of 35.684211
Cbc0013I At root node, 19 cuts changed objective from 31098.822 to 34281.991 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 145 row cuts average 59.2 elements, 0 column cuts (0 active)  in 0.772 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 300 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.411 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 34282 (62.29 seconds)
Cbc0010I After 100 nodes, 45 on tree, 1e+50 best solution, best possible 37390.397 (323.88 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 37390.397 (497.33 seconds)
Cbc0010I After 300 nodes, 134 on tree, 1e+50 best solution, best possible 37390.397 (723.20 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 37390.397 (906.06 seconds)
Cbc0010I After 500 nodes, 230 on tree, 1e+50 best solution, best possible 37390.397 (1042.85 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 37390.397 (1196.95 seconds)
Cbc0010I After 700 nodes, 330 on tree, 1e+50 best solution, best possible 37390.397 (1349.01 seconds)
Cbc0010I After 800 nodes, 380 on tree, 1e+50 best solution, best possible 37390.397 (1503.57 seconds)
Cbc0010I After 900 nodes, 430 on tree, 1e+50 best solution, best possible 37390.397 (1642.27 seconds)
Cbc0010I After 1000 nodes, 480 on tree, 1e+50 best solution, best possible 37390.397 (1787.05 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 37390.397), took 3370372 iterations and 1004 nodes (1800.51 seconds)
Cbc0032I Strong branching done 8806 times (801285 iterations), fathomed 14 nodes and fixed 427 variables
Cbc0035I Maximum depth 506, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31098.8 to 34282
Probing was tried 10 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Gomory was tried 1039 times and created 490 cuts of which 0 were active after adding rounds of cuts (14.988 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 1039 times and created 17720 cuts of which 0 were active after adding rounds of cuts (4.675 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    37390.397
Enumerated nodes:               1004
Total iterations:               3370372
Time (CPU seconds):             1800.51
Time (Wallclock seconds):       1803.62

Total time (CPU seconds):       1800.54   (Wallclock seconds):       1803.66

