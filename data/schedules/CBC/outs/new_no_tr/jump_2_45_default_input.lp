Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_45_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_45_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32588.6 - 7.31 seconds
Cgl0002I 164 variables fixed
Cgl0003I 0 fixed, 30 tightened bounds, 1161 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 351 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 164 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 79 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 6991 rows, 2165 columns (2165 integer (2119 of which binary)) and 23908 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2165 objects (2165 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1269 integers unsatisfied sum - 348.872
Cbc0038I Pass   1: (9.79 seconds) suminf.  138.42438 (1009) obj. 53723.6 iterations 4176
Cbc0038I Pass   2: (10.28 seconds) suminf.  106.13489 (1022) obj. 56141.9 iterations 1449
Cbc0038I Pass   3: (10.52 seconds) suminf.   99.93404 (1001) obj. 57895.7 iterations 719
Cbc0038I Pass   4: (10.60 seconds) suminf.   97.33902 (1009) obj. 57926.4 iterations 235
Cbc0038I Pass   5: (10.64 seconds) suminf.   94.84317 (1000) obj. 58224.7 iterations 117
Cbc0038I Pass   6: (10.97 seconds) suminf.   78.84484 (980) obj. 59472.8 iterations 1084
Cbc0038I Pass   7: (11.10 seconds) suminf.   75.72619 (976) obj. 59353.4 iterations 378
Cbc0038I Pass   8: (11.22 seconds) suminf.   72.34715 (975) obj. 60098.1 iterations 293
Cbc0038I Pass   9: (11.30 seconds) suminf.   71.72232 (979) obj. 60052.7 iterations 215
Cbc0038I Pass  10: (11.84 seconds) suminf.   69.87962 (1001) obj. 66519.1 iterations 1820
Cbc0038I Pass  11: (11.99 seconds) suminf.   67.46943 (1012) obj. 66515.6 iterations 463
Cbc0038I Pass  12: (12.01 seconds) suminf.   67.24118 (1002) obj. 66515.6 iterations 69
Cbc0038I Pass  13: (12.30 seconds) suminf.   64.24664 (1027) obj. 66954.1 iterations 869
Cbc0038I Pass  14: (12.42 seconds) suminf.   64.45407 (1026) obj. 67300.4 iterations 328
Cbc0038I Pass  15: (12.73 seconds) suminf.   64.63699 (984) obj. 66280.6 iterations 978
Cbc0038I Pass  16: (12.93 seconds) suminf.   62.49632 (1027) obj. 66713.1 iterations 584
Cbc0038I Pass  17: (13.05 seconds) suminf.   61.76969 (1020) obj. 66713.2 iterations 290
Cbc0038I Pass  18: (13.31 seconds) suminf.   63.11842 (994) obj. 66627.9 iterations 834
Cbc0038I Pass  19: (13.49 seconds) suminf.   61.39215 (1001) obj. 66653.3 iterations 522
Cbc0038I Pass  20: (13.67 seconds) suminf.   63.61903 (989) obj. 66401.2 iterations 550
Cbc0038I Pass  21: (13.87 seconds) suminf.   61.36213 (983) obj. 66600.5 iterations 586
Cbc0038I Pass  22: (13.95 seconds) suminf.   60.24035 (973) obj. 66617.9 iterations 212
Cbc0038I Pass  23: (14.24 seconds) suminf.   65.65121 (997) obj. 66606.6 iterations 865
Cbc0038I Pass  24: (14.42 seconds) suminf.   62.91634 (1001) obj. 66838.8 iterations 501
Cbc0038I Pass  25: (14.75 seconds) suminf.   65.83033 (996) obj. 65874.1 iterations 984
Cbc0038I Pass  26: (14.94 seconds) suminf.   63.81136 (977) obj. 66323.4 iterations 499
Cbc0038I Pass  27: (14.97 seconds) suminf.   62.80675 (982) obj. 66323.1 iterations 64
Cbc0038I Pass  28: (15.32 seconds) suminf.   66.14588 (989) obj. 66847 iterations 1120
Cbc0038I Pass  29: (15.45 seconds) suminf.   63.44891 (944) obj. 66826 iterations 366
Cbc0038I Pass  30: (15.52 seconds) suminf.   62.43604 (952) obj. 66939.5 iterations 173
Cbc0038I Pass  31: (15.82 seconds) suminf.   70.20972 (960) obj. 66679.6 iterations 955
Cbc0038I Pass  32: (16.00 seconds) suminf.   66.48959 (951) obj. 66702.8 iterations 509
Cbc0038I Pass  33: (16.09 seconds) suminf.   65.13021 (978) obj. 66735.9 iterations 213
Cbc0038I Pass  34: (16.42 seconds) suminf.   66.19837 (933) obj. 66738.1 iterations 1055
Cbc0038I Pass  35: (16.53 seconds) suminf.   64.57667 (944) obj. 66703.7 iterations 285
Cbc0038I Pass  36: (16.60 seconds) suminf.   63.29835 (933) obj. 66782.2 iterations 170
Cbc0038I Pass  37: (16.81 seconds) suminf.   66.41440 (936) obj. 66254.7 iterations 702
Cbc0038I Pass  38: (16.99 seconds) suminf.   63.89378 (955) obj. 66102.2 iterations 536
Cbc0038I Pass  39: (17.05 seconds) suminf.   63.28024 (951) obj. 66065.2 iterations 149
Cbc0038I Pass  40: (17.31 seconds) suminf.   67.46809 (946) obj. 66541.5 iterations 778
Cbc0038I Pass  41: (17.43 seconds) suminf.   67.71508 (936) obj. 66453.4 iterations 292
Cbc0038I Pass  42: (17.55 seconds) suminf.   65.48531 (935) obj. 66254.3 iterations 262
Cbc0038I Pass  43: (17.80 seconds) suminf.   68.80483 (915) obj. 66322.3 iterations 752
Cbc0038I Pass  44: (18.00 seconds) suminf.   64.16629 (934) obj. 66275 iterations 563
Cbc0038I Pass  45: (18.25 seconds) suminf.   66.98267 (930) obj. 66952.2 iterations 838
Cbc0038I Pass  46: (18.34 seconds) suminf.   66.75960 (939) obj. 66928.6 iterations 199
Cbc0038I Pass  47: (18.56 seconds) suminf.   66.70335 (932) obj. 66832.2 iterations 745
Cbc0038I Pass  48: (18.74 seconds) suminf.   65.41473 (926) obj. 66252 iterations 507
Cbc0038I Pass  49: (19.04 seconds) suminf.   67.50282 (951) obj. 66762.5 iterations 942
Cbc0038I Pass  50: (19.16 seconds) suminf.   64.64230 (968) obj. 66748.4 iterations 286
Cbc0038I Pass  51: (19.45 seconds) suminf.   66.16023 (936) obj. 66506.2 iterations 877
Cbc0038I Pass  52: (19.58 seconds) suminf.   65.07427 (916) obj. 66382.6 iterations 338
Cbc0038I Pass  53: (19.83 seconds) suminf.   65.64132 (948) obj. 66545.8 iterations 715
Cbc0038I Pass  54: (19.96 seconds) suminf.   63.07718 (943) obj. 66527.3 iterations 360
Cbc0038I Pass  55: (20.09 seconds) suminf.   61.42924 (928) obj. 66422.9 iterations 301
Cbc0038I Pass  56: (20.33 seconds) suminf.   65.54976 (931) obj. 66615.4 iterations 629
Cbc0038I Pass  57: (20.46 seconds) suminf.   64.12732 (933) obj. 66712.9 iterations 298
Cbc0038I Pass  58: (20.64 seconds) suminf.   61.13826 (939) obj. 66470.5 iterations 486
Cbc0038I Pass  59: (20.88 seconds) suminf.   64.26528 (936) obj. 66534.1 iterations 640
Cbc0038I Pass  60: (21.02 seconds) suminf.   62.88954 (936) obj. 66482.2 iterations 316
Cbc0038I Pass  61: (21.28 seconds) suminf.   63.17466 (948) obj. 66622.4 iterations 727
Cbc0038I Pass  62: (21.48 seconds) suminf.   64.36173 (953) obj. 66468.8 iterations 502
Cbc0038I Pass  63: (21.67 seconds) suminf.   60.49077 (963) obj. 66490.9 iterations 502
Cbc0038I Pass  64: (21.78 seconds) suminf.   60.73472 (936) obj. 66505.6 iterations 216
Cbc0038I Pass  65: (22.00 seconds) suminf.   66.47200 (920) obj. 66355 iterations 645
Cbc0038I Pass  66: (22.15 seconds) suminf.   66.00644 (942) obj. 66453.7 iterations 364
Cbc0038I Pass  67: (22.45 seconds) suminf.   65.81340 (949) obj. 66379.2 iterations 852
Cbc0038I Pass  68: (22.60 seconds) suminf.   63.85433 (954) obj. 66473.6 iterations 376
Cbc0038I Pass  69: (22.67 seconds) suminf.   62.79290 (951) obj. 66511.3 iterations 139
Cbc0038I Pass  70: (22.90 seconds) suminf.   66.39950 (949) obj. 66712 iterations 656
Cbc0038I Pass  71: (23.02 seconds) suminf.   65.82457 (945) obj. 66783.9 iterations 272
Cbc0038I Pass  72: (23.24 seconds) suminf.   64.60781 (926) obj. 66670.1 iterations 645
Cbc0038I Pass  73: (23.35 seconds) suminf.   64.39810 (953) obj. 66540 iterations 211
Cbc0038I Pass  74: (23.55 seconds) suminf.   62.36557 (935) obj. 66356.6 iterations 557
Cbc0038I Pass  75: (23.74 seconds) suminf.   63.59890 (936) obj. 66490.2 iterations 486
Cbc0038I Pass  76: (23.87 seconds) suminf.   63.18664 (935) obj. 66380.5 iterations 290
Cbc0038I Pass  77: (24.16 seconds) suminf.   67.48392 (889) obj. 66336.6 iterations 891
Cbc0038I Pass  78: (24.32 seconds) suminf.   63.46712 (916) obj. 66582.3 iterations 395
Cbc0038I Pass  79: (24.45 seconds) suminf.   63.31675 (937) obj. 66633.6 iterations 262
Cbc0038I Pass  80: (24.78 seconds) suminf.   68.30710 (909) obj. 66508.7 iterations 990
Cbc0038I Pass  81: (24.92 seconds) suminf.   65.09250 (931) obj. 66537.9 iterations 361
Cbc0038I Pass  82: (25.19 seconds) suminf.   65.63457 (924) obj. 66517.1 iterations 788
Cbc0038I Pass  83: (25.34 seconds) suminf.   64.93726 (948) obj. 66266.9 iterations 419
Cbc0038I Pass  84: (25.55 seconds) suminf.   66.20316 (912) obj. 66724.4 iterations 598
Cbc0038I Pass  85: (25.68 seconds) suminf.   65.09710 (918) obj. 66478.5 iterations 311
Cbc0038I Pass  86: (25.98 seconds) suminf.   64.51790 (936) obj. 66560.1 iterations 921
Cbc0038I Pass  87: (26.11 seconds) suminf.   63.32153 (927) obj. 66622.9 iterations 316
Cbc0038I Pass  88: (26.23 seconds) suminf.   63.07595 (939) obj. 66531.8 iterations 267
Cbc0038I Pass  89: (26.48 seconds) suminf.   65.62032 (942) obj. 66267.7 iterations 695
Cbc0038I Pass  90: (26.59 seconds) suminf.   65.07074 (923) obj. 66171.7 iterations 243
Cbc0038I Pass  91: (26.92 seconds) suminf.   65.38787 (934) obj. 66239.8 iterations 955
Cbc0038I Pass  92: (27.00 seconds) suminf.   65.40214 (914) obj. 66259.3 iterations 166
Cbc0038I Pass  93: (27.29 seconds) suminf.   66.36581 (949) obj. 66296.4 iterations 780
Cbc0038I Pass  94: (27.53 seconds) suminf.   63.29207 (945) obj. 66750.8 iterations 622
Cbc0038I Pass  95: (27.82 seconds) suminf.   67.27098 (942) obj. 66580 iterations 860
Cbc0038I Pass  96: (28.06 seconds) suminf.   62.95163 (921) obj. 66487.3 iterations 746
Cbc0038I Pass  97: (28.17 seconds) suminf.   62.58217 (939) obj. 66521.4 iterations 269
Cbc0038I Pass  98: (28.44 seconds) suminf.   66.94867 (920) obj. 66658.4 iterations 866
Cbc0038I Pass  99: (28.67 seconds) suminf.   64.65186 (925) obj. 65976.2 iterations 651
Cbc0038I Pass 100: (29.21 seconds) suminf.  118.99529 (924) obj. 82637.8 iterations 1884
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 300 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6991 rows 2165 columns, reduced to 6172 rows 1834 columns - too large
Cbc0038I Mini branch and bound did not improve solution (33.07 seconds)
Cbc0038I After 33.07 seconds - Feasibility pump exiting - took 24.94 seconds
Cbc0031I 49 added rows had average density of 275.40816
Cbc0013I At root node, 49 cuts changed objective from 32815.628 to 45056 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 74 row cuts average 349.5 elements, 0 column cuts (0 active)  in 1.369 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 84 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.560 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 45056 (47.22 seconds)
Cbc0010I After 100 nodes, 11 on tree, 1e+50 best solution, best possible 45056 (290.82 seconds)
Cbc0010I After 200 nodes, 20 on tree, 1e+50 best solution, best possible 45056 (494.62 seconds)
Cbc0010I After 300 nodes, 11 on tree, 1e+50 best solution, best possible 45056 (703.38 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 45056 (940.06 seconds)
Cbc0010I After 500 nodes, 22 on tree, 1e+50 best solution, best possible 45056 (1157.08 seconds)
Cbc0010I After 600 nodes, 16 on tree, 1e+50 best solution, best possible 45056 (1383.59 seconds)
Cbc0010I After 700 nodes, 12 on tree, 1e+50 best solution, best possible 45056 (1584.60 seconds)
Cbc0010I After 800 nodes, 7 on tree, 1e+50 best solution, best possible 45058 (1788.01 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 45058), took 2318847 iterations and 807 nodes (1800.02 seconds)
Cbc0032I Strong branching done 9582 times (789392 iterations), fathomed 62 nodes and fixed 1804 variables
Cbc0035I Maximum depth 46, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32815.6 to 45056
Probing was tried 565 times and created 32967 cuts of which 0 were active after adding rounds of cuts (7.759 seconds)
Gomory was tried 544 times and created 1128 cuts of which 0 were active after adding rounds of cuts (11.232 seconds)
Knapsack was tried 544 times and created 748 cuts of which 0 were active after adding rounds of cuts (1.140 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
TwoMirCuts was tried 544 times and created 4895 cuts of which 0 were active after adding rounds of cuts (3.816 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.141 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    45058.000
Enumerated nodes:               807
Total iterations:               2318847
Time (CPU seconds):             1800.02
Time (Wallclock seconds):       1800.18

Total time (CPU seconds):       1800.05   (Wallclock seconds):       1800.21

