Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_40_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_40_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 30997.7 - 2.37 seconds
Cgl0002I 151 variables fixed
Cgl0003I 0 fixed, 23 tightened bounds, 859 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 89 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 5456 rows, 1649 columns (1649 integer (1608 of which binary)) and 18663 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1649 objects (1649 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 918 integers unsatisfied sum - 316.247
Cbc0038I Pass   1: (8.42 seconds) suminf.  172.90744 (958) obj. 63274.7 iterations 3878
Cbc0038I Pass   2: (8.86 seconds) suminf.  116.06960 (896) obj. 68573.4 iterations 1437
Cbc0038I Pass   3: (9.21 seconds) suminf.   91.88134 (785) obj. 71097.1 iterations 1177
Cbc0038I Pass   4: (9.46 seconds) suminf.   79.56293 (833) obj. 70856.1 iterations 848
Cbc0038I Pass   5: (9.69 seconds) suminf.   73.10536 (816) obj. 72475 iterations 794
Cbc0038I Pass   6: (9.78 seconds) suminf.   73.69765 (786) obj. 71849.1 iterations 249
Cbc0038I Pass   7: (9.79 seconds) suminf.   74.11864 (798) obj. 71886.4 iterations 20
Cbc0038I Pass   8: (10.08 seconds) suminf.   62.80717 (774) obj. 78276.9 iterations 1013
Cbc0038I Pass   9: (10.18 seconds) suminf.   61.66716 (743) obj. 79629.6 iterations 289
Cbc0038I Pass  10: (10.26 seconds) suminf.   58.54829 (756) obj. 79735.2 iterations 215
Cbc0038I Pass  11: (10.44 seconds) suminf.   62.12683 (758) obj. 78947.7 iterations 623
Cbc0038I Pass  12: (10.53 seconds) suminf.   56.61876 (709) obj. 79101.7 iterations 276
Cbc0038I Pass  13: (10.63 seconds) suminf.   57.08416 (704) obj. 78442.6 iterations 298
Cbc0038I Pass  14: (10.91 seconds) suminf.   51.91662 (677) obj. 71612.4 iterations 1212
Cbc0038I Pass  15: (11.00 seconds) suminf.   50.09503 (665) obj. 71606.1 iterations 318
Cbc0038I Pass  16: (11.30 seconds) suminf.   49.82336 (663) obj. 71908.9 iterations 1193
Cbc0038I Pass  17: (11.45 seconds) suminf.   52.44906 (655) obj. 71621.5 iterations 534
Cbc0038I Pass  18: (11.50 seconds) suminf.   50.72112 (647) obj. 71820.2 iterations 176
Cbc0038I Pass  19: (11.59 seconds) suminf.   51.11398 (649) obj. 71740.6 iterations 273
Cbc0038I Pass  20: (11.84 seconds) suminf.   51.51517 (683) obj. 71816.1 iterations 988
Cbc0038I Pass  21: (12.03 seconds) suminf.   46.45288 (699) obj. 71286.4 iterations 704
Cbc0038I Pass  22: (12.13 seconds) suminf.   45.66447 (703) obj. 71170.9 iterations 268
Cbc0038I Pass  23: (12.37 seconds) suminf.   50.24226 (697) obj. 72014.1 iterations 886
Cbc0038I Pass  24: (12.47 seconds) suminf.   48.65982 (687) obj. 71680.6 iterations 303
Cbc0038I Pass  25: (12.58 seconds) suminf.   49.22063 (686) obj. 71774.9 iterations 296
Cbc0038I Pass  26: (12.60 seconds) suminf.   49.88483 (684) obj. 71794.8 iterations 72
Cbc0038I Pass  27: (12.80 seconds) suminf.   49.35219 (738) obj. 71962.3 iterations 683
Cbc0038I Pass  28: (12.82 seconds) suminf.   49.86195 (731) obj. 72199.8 iterations 50
Cbc0038I Pass  29: (13.01 seconds) suminf.   50.83704 (690) obj. 71646.1 iterations 661
Cbc0038I Pass  30: (13.56 seconds) suminf.   90.70809 (756) obj. 79015.3 iterations 2358
Cbc0038I Pass  31: (13.94 seconds) suminf.   62.77216 (747) obj. 79045.5 iterations 1407
Cbc0038I Pass  32: (13.98 seconds) suminf.   63.09381 (729) obj. 79064.5 iterations 123
Cbc0038I Pass  33: (14.11 seconds) suminf.   60.76735 (720) obj. 79052.6 iterations 369
Cbc0038I Pass  34: (14.18 seconds) suminf.   60.88513 (726) obj. 79102.6 iterations 177
Cbc0038I Pass  35: (14.41 seconds) suminf.   53.95298 (677) obj. 78348.6 iterations 780
Cbc0038I Pass  36: (14.50 seconds) suminf.   52.25087 (654) obj. 78239.3 iterations 228
Cbc0038I Pass  37: (14.77 seconds) suminf.   54.15982 (616) obj. 79120.8 iterations 1075
Cbc0038I Pass  38: (15.00 seconds) suminf.   51.44466 (642) obj. 76147.1 iterations 904
Cbc0038I Pass  39: (15.11 seconds) suminf.   48.67313 (628) obj. 75790.7 iterations 441
Cbc0038I Pass  40: (15.12 seconds) suminf.   48.54660 (628) obj. 75834.7 iterations 15
Cbc0038I Pass  41: (15.37 seconds) suminf.   47.42869 (615) obj. 81724.9 iterations 1038
Cbc0038I Pass  42: (15.43 seconds) suminf.   45.55483 (630) obj. 81669.9 iterations 157
Cbc0038I Pass  43: (15.49 seconds) suminf.   44.48137 (616) obj. 81712.1 iterations 176
Cbc0038I Pass  44: (15.67 seconds) suminf.   43.29710 (624) obj. 81568.9 iterations 709
Cbc0038I Pass  45: (15.77 seconds) suminf.   41.01764 (615) obj. 81574 iterations 324
Cbc0038I Pass  46: (15.81 seconds) suminf.   40.97694 (610) obj. 81592.5 iterations 105
Cbc0038I Pass  47: (15.85 seconds) suminf.   40.28271 (612) obj. 81610.8 iterations 119
Cbc0038I Pass  48: (16.01 seconds) suminf.   42.28896 (600) obj. 81607.4 iterations 594
Cbc0038I Pass  49: (16.10 seconds) suminf.   41.79411 (605) obj. 81501.7 iterations 301
Cbc0038I Pass  50: (16.25 seconds) suminf.   44.82331 (598) obj. 82031.3 iterations 592
Cbc0038I Pass  51: (16.37 seconds) suminf.   42.23556 (613) obj. 81772.7 iterations 388
Cbc0038I Pass  52: (16.59 seconds) suminf.   39.15761 (599) obj. 81836 iterations 883
Cbc0038I Pass  53: (16.70 seconds) suminf.   38.55213 (627) obj. 81817.7 iterations 365
Cbc0038I Pass  54: (17.03 seconds) suminf.   47.41865 (585) obj. 81857.3 iterations 1380
Cbc0038I Pass  55: (17.28 seconds) suminf.   44.13422 (574) obj. 81883.8 iterations 923
Cbc0038I Pass  56: (17.38 seconds) suminf.   40.90633 (596) obj. 81851.1 iterations 239
Cbc0038I Pass  57: (17.59 seconds) suminf.   43.31372 (584) obj. 82007.5 iterations 851
Cbc0038I Pass  58: (17.67 seconds) suminf.   42.12526 (591) obj. 81967.6 iterations 288
Cbc0038I Pass  59: (17.76 seconds) suminf.   41.71666 (584) obj. 81870.6 iterations 335
Cbc0038I Pass  60: (17.84 seconds) suminf.   40.44313 (583) obj. 81708.3 iterations 255
Cbc0038I Pass  61: (18.02 seconds) suminf.   42.40615 (603) obj. 81814.6 iterations 701
Cbc0038I Pass  62: (18.19 seconds) suminf.   41.82815 (597) obj. 81820.6 iterations 697
Cbc0038I Pass  63: (18.37 seconds) suminf.   38.66132 (594) obj. 81553.1 iterations 690
Cbc0038I Pass  64: (18.44 seconds) suminf.   39.48079 (592) obj. 81525.9 iterations 239
Cbc0038I Pass  65: (18.68 seconds) suminf.   40.08418 (597) obj. 81159 iterations 882
Cbc0038I Pass  66: (18.74 seconds) suminf.   40.52975 (602) obj. 81715.8 iterations 202
Cbc0038I Pass  67: (18.97 seconds) suminf.   40.06689 (581) obj. 81044 iterations 958
Cbc0038I Pass  68: (19.03 seconds) suminf.   40.57712 (568) obj. 81262 iterations 174
Cbc0038I Pass  69: (19.30 seconds) suminf.   41.28912 (582) obj. 81719.3 iterations 1132
Cbc0038I Pass  70: (19.39 seconds) suminf.   40.20062 (569) obj. 81604.2 iterations 343
Cbc0038I Pass  71: (19.59 seconds) suminf.   41.92934 (577) obj. 81558.3 iterations 903
Cbc0038I Pass  72: (19.68 seconds) suminf.   39.78334 (577) obj. 81397.4 iterations 332
Cbc0038I Pass  73: (19.86 seconds) suminf.   39.72991 (587) obj. 82164 iterations 744
Cbc0038I Pass  74: (20.05 seconds) suminf.   38.13016 (575) obj. 81684.1 iterations 758
Cbc0038I Pass  75: (20.31 seconds) suminf.   42.66810 (587) obj. 82450.8 iterations 1015
Cbc0038I Pass  76: (20.39 seconds) suminf.   41.48153 (589) obj. 81840.5 iterations 237
Cbc0038I Pass  77: (20.40 seconds) suminf.   41.02982 (593) obj. 81830.9 iterations 16
Cbc0038I Pass  78: (20.48 seconds) suminf.   41.54415 (596) obj. 81847.5 iterations 214
Cbc0038I Pass  79: (20.62 seconds) suminf.   39.74841 (582) obj. 81816.9 iterations 495
Cbc0038I Pass  80: (20.70 seconds) suminf.   39.26421 (604) obj. 81796.4 iterations 270
Cbc0038I Pass  81: (20.85 seconds) suminf.   40.30867 (589) obj. 81890.9 iterations 585
Cbc0038I Pass  82: (20.95 seconds) suminf.   40.05849 (577) obj. 81917 iterations 308
Cbc0038I Pass  83: (20.99 seconds) suminf.   39.92681 (601) obj. 81933.9 iterations 98
Cbc0038I Pass  84: (21.15 seconds) suminf.   44.89544 (565) obj. 81686 iterations 652
Cbc0038I Pass  85: (21.30 seconds) suminf.   39.39444 (591) obj. 81532.8 iterations 573
Cbc0038I Pass  86: (21.32 seconds) suminf.   39.49008 (596) obj. 81631.6 iterations 44
Cbc0038I Pass  87: (21.46 seconds) suminf.   40.70873 (593) obj. 81664.7 iterations 507
Cbc0038I Pass  88: (21.58 seconds) suminf.   37.67422 (591) obj. 81788.7 iterations 458
Cbc0038I Pass  89: (21.70 seconds) suminf.   40.92059 (575) obj. 81620.6 iterations 444
Cbc0038I Pass  90: (21.84 seconds) suminf.   39.83972 (576) obj. 81916.3 iterations 585
Cbc0038I Pass  91: (22.01 seconds) suminf.   44.03621 (580) obj. 81846.4 iterations 677
Cbc0038I Pass  92: (22.21 seconds) suminf.   39.78041 (590) obj. 81656.6 iterations 824
Cbc0038I Pass  93: (22.28 seconds) suminf.   39.40141 (581) obj. 81683.8 iterations 199
Cbc0038I Pass  94: (22.39 seconds) suminf.   42.14647 (575) obj. 81891.9 iterations 426
Cbc0038I Pass  95: (22.51 seconds) suminf.   38.93235 (585) obj. 81773.8 iterations 446
Cbc0038I Pass  96: (22.62 seconds) suminf.   40.68141 (575) obj. 81954.4 iterations 394
Cbc0038I Pass  97: (22.70 seconds) suminf.   39.14086 (583) obj. 81827.2 iterations 226
Cbc0038I Pass  98: (22.76 seconds) suminf.   38.51609 (576) obj. 81896.9 iterations 174
Cbc0038I Pass  99: (22.88 seconds) suminf.   41.68923 (582) obj. 81867.6 iterations 407
Cbc0038I Pass 100: (23.23 seconds) suminf.   80.74608 (712) obj. 89339.9 iterations 1475
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 118 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5456 rows 1649 columns, reduced to 5184 rows 1525 columns - too large
Cbc0038I Mini branch and bound did not improve solution (23.26 seconds)
Cbc0038I After 23.26 seconds - Feasibility pump exiting - took 16.09 seconds
Cbc0031I 33 added rows had average density of 11.272727
Cbc0013I At root node, 33 cuts changed objective from 31103.912 to 38093.48 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 3.1 elements, 8 column cuts (8 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 146 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.958 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 426 row cuts average 60.7 elements, 0 column cuts (0 active)  in 0.440 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 23 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.959 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 38093.48 (52.20 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 38118.243 (264.93 seconds)
Cbc0010I After 200 nodes, 20 on tree, 1e+50 best solution, best possible 38118.243 (546.28 seconds)
Cbc0010I After 300 nodes, 58 on tree, 1e+50 best solution, best possible 38118.243 (751.72 seconds)
Cbc0010I After 400 nodes, 108 on tree, 1e+50 best solution, best possible 38118.243 (959.49 seconds)
Cbc0010I After 500 nodes, 158 on tree, 1e+50 best solution, best possible 38118.243 (1220.73 seconds)
Cbc0010I After 600 nodes, 208 on tree, 1e+50 best solution, best possible 38118.243 (1387.47 seconds)
Cbc0010I After 700 nodes, 258 on tree, 1e+50 best solution, best possible 38118.243 (1554.04 seconds)
Cbc0010I After 800 nodes, 309 on tree, 1e+50 best solution, best possible 38118.243 (1721.85 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 38118.243), took 3878182 iterations and 844 nodes (1795.56 seconds)
Cbc0032I Strong branching done 7024 times (580203 iterations), fathomed 6 nodes and fixed 1021 variables
Cbc0035I Maximum depth 431, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31103.9 to 38093.5
Probing was tried 860 times and created 7586 cuts of which 0 were active after adding rounds of cuts (6.901 seconds)
Gomory was tried 830 times and created 2787 cuts of which 0 were active after adding rounds of cuts (10.924 seconds)
Knapsack was tried 11 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 830 times and created 8299 cuts of which 0 were active after adding rounds of cuts (3.698 seconds)
ZeroHalf was tried 11 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.959 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    38118.243
Enumerated nodes:               844
Total iterations:               3878182
Time (CPU seconds):             1795.56
Time (Wallclock seconds):       1797.83

Total time (CPU seconds):       1795.59   (Wallclock seconds):       1797.86

