Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs/order/dag265_reverse_tiers_input.lp sec 1800 solve solu no_transitive/dag265_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 591360 - 1.27 seconds
Cgl0002I 173 variables fixed
Cgl0003I 0 fixed, 30 tightened bounds, 1669 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 24 tightened bounds, 973 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 445 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 7915 rows, 2679 columns (2679 integer (2633 of which binary)) and 26147 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2679 objects (2679 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1340 integers unsatisfied sum - 398.562
Cbc0038I Pass   1: (4.46 seconds) suminf.  149.26214 (1278) obj. 805937 iterations 5334
Cbc0038I Pass   2: (4.94 seconds) suminf.  121.25576 (1225) obj. 835224 iterations 1497
Cbc0038I Pass   3: (5.23 seconds) suminf.  112.67300 (1259) obj. 855973 iterations 874
Cbc0038I Pass   4: (5.36 seconds) suminf.  111.64550 (1278) obj. 923832 iterations 339
Cbc0038I Pass   5: (5.66 seconds) suminf.  113.01153 (1230) obj. 928357 iterations 873
Cbc0038I Pass   6: (5.79 seconds) suminf.  111.45172 (1275) obj. 928883 iterations 313
Cbc0038I Pass   7: (5.94 seconds) suminf.  109.50840 (1268) obj. 934458 iterations 394
Cbc0038I Pass   8: (6.12 seconds) suminf.  110.12905 (1279) obj. 936847 iterations 515
Cbc0038I Pass   9: (6.38 seconds) suminf.  107.33861 (1213) obj. 938235 iterations 718
Cbc0038I Pass  10: (6.53 seconds) suminf.  113.32952 (1252) obj. 938335 iterations 395
Cbc0038I Pass  11: (6.60 seconds) suminf.  112.41015 (1283) obj. 939264 iterations 163
Cbc0038I Pass  12: (6.82 seconds) suminf.  111.14873 (1263) obj. 996817 iterations 589
Cbc0038I Pass  13: (7.10 seconds) suminf.  104.43252 (1280) obj. 1.04691e+06 iterations 828
Cbc0038I Pass  14: (7.12 seconds) suminf.  104.44695 (1276) obj. 1.04868e+06 iterations 31
Cbc0038I Pass  15: (7.41 seconds) suminf.  113.06158 (1187) obj. 1.04848e+06 iterations 848
Cbc0038I Pass  16: (7.68 seconds) suminf.  105.82916 (1252) obj. 1.07826e+06 iterations 831
Cbc0038I Pass  17: (7.82 seconds) suminf.  101.22355 (1280) obj. 1.09931e+06 iterations 388
Cbc0038I Pass  18: (8.12 seconds) suminf.  103.07717 (1265) obj. 1.09858e+06 iterations 871
Cbc0038I Pass  19: (8.19 seconds) suminf.   98.30530 (1290) obj. 1.10153e+06 iterations 171
Cbc0038I Pass  20: (8.42 seconds) suminf.  101.41401 (1223) obj. 1.10975e+06 iterations 654
Cbc0038I Pass  21: (8.64 seconds) suminf.   96.98627 (1260) obj. 1.11973e+06 iterations 652
Cbc0038I Pass  22: (8.79 seconds) suminf.   94.70701 (1272) obj. 1.11312e+06 iterations 432
Cbc0038I Pass  23: (8.92 seconds) suminf.   93.71468 (1271) obj. 1.10847e+06 iterations 337
Cbc0038I Pass  24: (9.14 seconds) suminf.   97.37028 (1197) obj. 1.09906e+06 iterations 648
Cbc0038I Pass  25: (9.31 seconds) suminf.   93.51586 (1255) obj. 1.10554e+06 iterations 462
Cbc0038I Pass  26: (9.36 seconds) suminf.   93.08250 (1254) obj. 1.10831e+06 iterations 113
Cbc0038I Pass  27: (9.46 seconds) suminf.   94.86380 (1249) obj. 1.11403e+06 iterations 224
Cbc0038I Pass  28: (10.12 seconds) suminf.  136.52731 (1251) obj. 1.20554e+06 iterations 2218
Cbc0038I Pass  29: (10.79 seconds) suminf.   95.99689 (1268) obj. 1.23235e+06 iterations 2307
Cbc0038I Pass  30: (10.89 seconds) suminf.   95.54784 (1261) obj. 1.22868e+06 iterations 249
Cbc0038I Pass  31: (11.10 seconds) suminf.   93.63165 (1270) obj. 1.23154e+06 iterations 598
Cbc0038I Pass  32: (11.32 seconds) suminf.   93.75895 (1262) obj. 1.23419e+06 iterations 650
Cbc0038I Pass  33: (11.63 seconds) suminf.   92.48747 (1269) obj. 1.23175e+06 iterations 928
Cbc0038I Pass  34: (11.74 seconds) suminf.   93.49347 (1255) obj. 1.23561e+06 iterations 289
Cbc0038I Pass  35: (11.79 seconds) suminf.   92.85314 (1258) obj. 1.23564e+06 iterations 129
Cbc0038I Pass  36: (11.95 seconds) suminf.   92.94861 (1248) obj. 1.23576e+06 iterations 416
Cbc0038I Pass  37: (12.08 seconds) suminf.   92.09488 (1266) obj. 1.23685e+06 iterations 326
Cbc0038I Pass  38: (12.19 seconds) suminf.   92.77288 (1242) obj. 1.23511e+06 iterations 256
Cbc0038I Pass  39: (12.24 seconds) suminf.   92.72824 (1260) obj. 1.23578e+06 iterations 118
Cbc0038I Pass  40: (12.32 seconds) suminf.   93.33174 (1251) obj. 1.23541e+06 iterations 188
Cbc0038I Pass  41: (13.18 seconds) suminf.  136.73666 (1229) obj. 1.41065e+06 iterations 2887
Cbc0038I Pass  42: (13.82 seconds) suminf.  100.11214 (1282) obj. 1.30642e+06 iterations 2166
Cbc0038I Pass  43: (13.94 seconds) suminf.   96.83757 (1276) obj. 1.30249e+06 iterations 321
Cbc0038I Pass  44: (13.99 seconds) suminf.   96.16598 (1290) obj. 1.30224e+06 iterations 108
Cbc0038I Pass  45: (14.33 seconds) suminf.   98.68339 (1324) obj. 1.30092e+06 iterations 983
Cbc0038I Pass  46: (14.52 seconds) suminf.   98.11207 (1339) obj. 1.30225e+06 iterations 496
Cbc0038I Pass  47: (14.64 seconds) suminf.   96.84078 (1314) obj. 1.30123e+06 iterations 243
Cbc0038I Pass  48: (14.87 seconds) suminf.   97.11767 (1289) obj. 1.30604e+06 iterations 637
Cbc0038I Pass  49: (14.99 seconds) suminf.   95.84967 (1288) obj. 1.30389e+06 iterations 288
Cbc0038I Pass  50: (15.03 seconds) suminf.   95.19417 (1287) obj. 1.30431e+06 iterations 76
Cbc0038I Pass  51: (15.23 seconds) suminf.   99.48175 (1271) obj. 1.3015e+06 iterations 539
Cbc0038I Pass  52: (15.40 seconds) suminf.   97.04252 (1304) obj. 1.30031e+06 iterations 447
Cbc0038I Pass  53: (15.49 seconds) suminf.   96.48790 (1326) obj. 1.29658e+06 iterations 186
Cbc0038I Pass  54: (15.70 seconds) suminf.   97.62853 (1292) obj. 1.31198e+06 iterations 575
Cbc0038I Pass  55: (15.82 seconds) suminf.   96.87105 (1295) obj. 1.3015e+06 iterations 278
Cbc0038I Pass  56: (15.93 seconds) suminf.   95.73999 (1290) obj. 1.30521e+06 iterations 290
Cbc0038I Pass  57: (16.01 seconds) suminf.   94.87188 (1305) obj. 1.30527e+06 iterations 172
Cbc0038I Pass  58: (16.25 seconds) suminf.   97.90068 (1262) obj. 1.29368e+06 iterations 662
Cbc0038I Pass  59: (16.38 seconds) suminf.   96.01643 (1260) obj. 1.29588e+06 iterations 333
Cbc0038I Pass  60: (16.61 seconds) suminf.   97.58531 (1309) obj. 1.30424e+06 iterations 607
Cbc0038I Pass  61: (16.83 seconds) suminf.   93.56433 (1275) obj. 1.30362e+06 iterations 630
Cbc0038I Pass  62: (16.90 seconds) suminf.   93.32448 (1280) obj. 1.30267e+06 iterations 148
Cbc0038I Pass  63: (17.16 seconds) suminf.   93.94130 (1287) obj. 1.30029e+06 iterations 779
Cbc0038I Pass  64: (17.34 seconds) suminf.   93.08720 (1274) obj. 1.30113e+06 iterations 516
Cbc0038I Pass  65: (17.67 seconds) suminf.   94.95778 (1277) obj. 1.30998e+06 iterations 1005
Cbc0038I Pass  66: (17.97 seconds) suminf.   93.05500 (1329) obj. 1.30131e+06 iterations 869
Cbc0038I Pass  67: (18.37 seconds) suminf.   96.79213 (1265) obj. 1.30136e+06 iterations 1190
Cbc0038I Pass  68: (18.62 seconds) suminf.   94.58301 (1286) obj. 1.301e+06 iterations 740
Cbc0038I Pass  69: (18.78 seconds) suminf.   94.28696 (1268) obj. 1.30021e+06 iterations 395
Cbc0038I Pass  70: (19.11 seconds) suminf.   94.69440 (1303) obj. 1.30035e+06 iterations 986
Cbc0038I Pass  71: (19.28 seconds) suminf.   94.60892 (1292) obj. 1.3018e+06 iterations 436
Cbc0038I Pass  72: (19.53 seconds) suminf.   93.94275 (1267) obj. 1.29904e+06 iterations 712
Cbc0038I Pass  73: (20.24 seconds) suminf.  129.12745 (1310) obj. 1.48792e+06 iterations 2378
Cbc0038I Pass  74: (20.80 seconds) suminf.   98.28771 (1309) obj. 1.50414e+06 iterations 1871
Cbc0038I Pass  75: (21.07 seconds) suminf.   94.55585 (1343) obj. 1.49783e+06 iterations 797
Cbc0038I Pass  76: (21.16 seconds) suminf.   93.22790 (1331) obj. 1.50521e+06 iterations 184
Cbc0038I Pass  77: (21.40 seconds) suminf.   93.11107 (1304) obj. 1.50128e+06 iterations 648
Cbc0038I Pass  78: (21.54 seconds) suminf.   93.97405 (1311) obj. 1.50288e+06 iterations 326
Cbc0038I Pass  79: (21.84 seconds) suminf.   90.89187 (1341) obj. 1.49874e+06 iterations 876
Cbc0038I Pass  80: (21.97 seconds) suminf.   89.86304 (1327) obj. 1.5034e+06 iterations 317
Cbc0038I Pass  81: (22.03 seconds) suminf.   89.28125 (1331) obj. 1.50362e+06 iterations 123
Cbc0038I Pass  82: (22.25 seconds) suminf.   90.09617 (1342) obj. 1.4957e+06 iterations 601
Cbc0038I Pass  83: (22.37 seconds) suminf.   90.83288 (1334) obj. 1.49737e+06 iterations 276
Cbc0038I Pass  84: (22.48 seconds) suminf.   90.07635 (1360) obj. 1.50049e+06 iterations 216
Cbc0038I Pass  85: (22.66 seconds) suminf.   91.59735 (1316) obj. 1.49719e+06 iterations 453
Cbc0038I Pass  86: (22.79 seconds) suminf.   90.62868 (1335) obj. 1.49972e+06 iterations 305
Cbc0038I Pass  87: (23.04 seconds) suminf.   95.85244 (1313) obj. 1.55041e+06 iterations 682
Cbc0038I Pass  88: (23.34 seconds) suminf.   92.49472 (1369) obj. 1.49814e+06 iterations 854
Cbc0038I Pass  89: (23.38 seconds) suminf.   92.24514 (1363) obj. 1.50001e+06 iterations 79
Cbc0038I Pass  90: (23.61 seconds) suminf.   92.83303 (1302) obj. 1.499e+06 iterations 611
Cbc0038I Pass  91: (23.83 seconds) suminf.   91.60364 (1340) obj. 1.49765e+06 iterations 606
Cbc0038I Pass  92: (23.87 seconds) suminf.   90.62868 (1335) obj. 1.49972e+06 iterations 105
Cbc0038I Pass  93: (24.13 seconds) suminf.   95.85244 (1313) obj. 1.55041e+06 iterations 671
Cbc0038I Pass  94: (24.42 seconds) suminf.   92.49472 (1369) obj. 1.49814e+06 iterations 842
Cbc0038I Pass  95: (24.45 seconds) suminf.   92.24514 (1363) obj. 1.50001e+06 iterations 76
Cbc0038I Pass  96: (24.70 seconds) suminf.   91.10482 (1301) obj. 1.49079e+06 iterations 671
Cbc0038I Pass  97: (24.95 seconds) suminf.   91.60364 (1340) obj. 1.49765e+06 iterations 717
Cbc0038I Pass  98: (25.00 seconds) suminf.   90.62868 (1335) obj. 1.49972e+06 iterations 103
Cbc0038I Pass  99: (25.26 seconds) suminf.   94.91878 (1323) obj. 1.54524e+06 iterations 723
Cbc0038I Pass 100: (25.92 seconds) suminf.  135.70601 (1255) obj. 1.49077e+06 iterations 2247
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 300 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7915 rows 2679 columns, reduced to 7203 rows 2353 columns - too large
Cbc0038I Mini branch and bound did not improve solution (27.32 seconds)
Cbc0038I After 27.32 seconds - Feasibility pump exiting - took 24.65 seconds
Cbc0031I 51 added rows had average density of 10.098039
Cbc0013I At root node, 51 cuts changed objective from 592739.45 to 606208 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.252 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 75 row cuts average 11.9 elements, 0 column cuts (0 active)  in 1.527 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 142 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 606208 (41.81 seconds)
Cbc0010I After 100 nodes, 4 on tree, 1e+50 best solution, best possible 606208 (311.38 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 606214 (462.41 seconds)
Cbc0010I After 300 nodes, 18 on tree, 1e+50 best solution, best possible 606214 (592.69 seconds)
Cbc0010I After 400 nodes, 24 on tree, 1e+50 best solution, best possible 606214 (792.64 seconds)
Cbc0010I After 500 nodes, 24 on tree, 1e+50 best solution, best possible 606214 (1054.97 seconds)
Cbc0010I After 600 nodes, 23 on tree, 1e+50 best solution, best possible 606214 (1478.98 seconds)
Cbc0010I After 700 nodes, 23 on tree, 1e+50 best solution, best possible 606214 (1746.98 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 606214), took 3422251 iterations and 722 nodes (1802.65 seconds)
Cbc0032I Strong branching done 3828 times (329660 iterations), fathomed 253 nodes and fixed 161 variables
Cbc0035I Maximum depth 247, 0 variables fixed on reduced cost
Cuts at root node changed objective from 592739 to 606208
Probing was tried 191 times and created 1981 cuts of which 0 were active after adding rounds of cuts (0.918 seconds)
Gomory was tried 189 times and created 111 cuts of which 0 were active after adding rounds of cuts (5.051 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 189 times and created 1736 cuts of which 0 were active after adding rounds of cuts (1.838 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.126 seconds)
ImplicationCuts was tried 100 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    606214.000
Enumerated nodes:               722
Total iterations:               3422251
Time (CPU seconds):             1802.65
Time (Wallclock seconds):       1803.09

Total time (CPU seconds):       1802.68   (Wallclock seconds):       1803.12

