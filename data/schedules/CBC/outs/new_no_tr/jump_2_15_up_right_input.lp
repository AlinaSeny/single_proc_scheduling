Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_15_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_15_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 25600 - 0.01 seconds
Cgl0002I 35 variables fixed
Cgl0003I 0 fixed, 7 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 603 rows, 213 columns (213 integer (197 of which binary)) and 1960 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 213 objects (213 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 119 integers unsatisfied sum - 41.1207
Cbc0038I Pass   1: suminf.   15.00200 (70) obj. 36414.8 iterations 164
Cbc0038I Pass   2: suminf.   13.81084 (75) obj. 36865.5 iterations 55
Cbc0038I Pass   3: suminf.    7.68166 (56) obj. 36201.2 iterations 102
Cbc0038I Pass   4: suminf.    2.11864 (20) obj. 32646.5 iterations 195
Cbc0038I Pass   5: suminf.    2.11864 (20) obj. 32646.5 iterations 5
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 29696 iterations 35
Cbc0038I Solution found of 29696
Cbc0038I Cleaned solution of 29696
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 603 rows 213 columns, reduced to 476 rows 150 columns - 9 fixed gives 415, 131 - still too large
Cbc0038I Full problem 603 rows 213 columns, reduced to 242 rows 75 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 29285.5
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   7: suminf.   14.57942 (80) obj. 29285 iterations 39
Cbc0038I Pass   8: suminf.   11.07813 (75) obj. 29285.5 iterations 69
Cbc0038I Pass   9: suminf.   10.26474 (71) obj. 29285.5 iterations 44
Cbc0038I Pass  10: suminf.    3.94352 (44) obj. 29285.5 iterations 121
Cbc0038I Pass  11: suminf.    3.94352 (44) obj. 29285.5 iterations 16
Cbc0038I Pass  12: suminf.   11.62722 (64) obj. 29285.5 iterations 154
Cbc0038I Pass  13: suminf.   10.28228 (68) obj. 29285.5 iterations 76
Cbc0038I Pass  14: suminf.    9.14231 (64) obj. 29285.5 iterations 34
Cbc0038I Pass  15: suminf.    3.59413 (42) obj. 29285.5 iterations 250
Cbc0038I Pass  16: suminf.    3.62458 (42) obj. 29285.5 iterations 25
Cbc0038I Pass  17: suminf.    9.51296 (50) obj. 29285.5 iterations 186
Cbc0038I Pass  18: suminf.    6.63758 (43) obj. 29285.5 iterations 92
Cbc0038I Pass  19: suminf.    6.36378 (45) obj. 29285.5 iterations 22
Cbc0038I Pass  20: suminf.    6.24599 (42) obj. 29285.5 iterations 201
Cbc0038I Pass  21: suminf.    5.48106 (38) obj. 29285.5 iterations 41
Cbc0038I Pass  22: suminf.    5.22803 (39) obj. 29285.5 iterations 15
Cbc0038I Pass  23: suminf.    2.18239 (33) obj. 29285.5 iterations 95
Cbc0038I Pass  24: suminf.    2.17958 (30) obj. 29285.5 iterations 19
Cbc0038I Pass  25: suminf.    5.45335 (33) obj. 29285.5 iterations 120
Cbc0038I Pass  26: suminf.    2.43849 (30) obj. 29285.5 iterations 37
Cbc0038I Pass  27: suminf.    2.43849 (30) obj. 29285.5 iterations 2
Cbc0038I Pass  28: suminf.    7.18352 (36) obj. 29285.5 iterations 136
Cbc0038I Pass  29: suminf.    5.19312 (31) obj. 29285.5 iterations 77
Cbc0038I Pass  30: suminf.    5.92784 (32) obj. 29285.5 iterations 102
Cbc0038I Pass  31: suminf.    5.65480 (32) obj. 29285.5 iterations 7
Cbc0038I Pass  32: suminf.    6.46772 (51) obj. 29285.5 iterations 139
Cbc0038I Pass  33: suminf.    5.69058 (48) obj. 29285.5 iterations 20
Cbc0038I Pass  34: suminf.    1.26561 (23) obj. 29285.5 iterations 182
Cbc0038I Pass  35: suminf.    1.16524 (28) obj. 29285.5 iterations 21
Cbc0038I Pass  36: suminf.    9.75188 (48) obj. 29285.5 iterations 114
Cbc0038I Pass  37: suminf.    8.47013 (43) obj. 29285.5 iterations 27
Cbc0038I Pass  38: suminf.    8.37312 (46) obj. 29285.5 iterations 13
Cbc0038I Pass  39: suminf.    7.51904 (45) obj. 29285.5 iterations 18
Cbc0038I Pass  40: suminf.    8.09565 (51) obj. 29285.5 iterations 45
Cbc0038I Pass  41: suminf.    7.22968 (47) obj. 29285.5 iterations 174
Cbc0038I Pass  42: suminf.    5.86969 (39) obj. 29285.5 iterations 85
Cbc0038I Pass  43: suminf.    7.22650 (31) obj. 29285.5 iterations 153
Cbc0038I Pass  44: suminf.    5.35314 (33) obj. 29285.5 iterations 53
Cbc0038I Pass  45: suminf.    7.69905 (38) obj. 29285.5 iterations 108
Cbc0038I Pass  46: suminf.    4.05986 (36) obj. 29285.5 iterations 35
Cbc0038I Pass  47: suminf.    6.28388 (30) obj. 29285.5 iterations 102
Cbc0038I Pass  48: suminf.    4.47646 (28) obj. 29285.5 iterations 25
Cbc0038I Pass  49: suminf.    5.03455 (28) obj. 29285.5 iterations 49
Cbc0038I Pass  50: suminf.    3.19118 (29) obj. 29285.5 iterations 15
Cbc0038I Pass  51: suminf.    4.96601 (24) obj. 29285.5 iterations 81
Cbc0038I Pass  52: suminf.    5.26983 (30) obj. 29285.5 iterations 81
Cbc0038I Pass  53: suminf.    5.53755 (43) obj. 29285.5 iterations 89
Cbc0038I Pass  54: suminf.    2.54240 (30) obj. 29285.5 iterations 49
Cbc0038I Pass  55: suminf.    1.21684 (32) obj. 29285.5 iterations 91
Cbc0038I Pass  56: suminf.    1.34225 (58) obj. 29285.5 iterations 30
Cbc0038I Pass  57: suminf.   17.02489 (89) obj. 29285.5 iterations 180
Cbc0038I Pass  58: suminf.    6.14280 (28) obj. 29285.5 iterations 175
Cbc0038I Pass  59: suminf.    5.63575 (34) obj. 29285.5 iterations 21
Cbc0038I Pass  60: suminf.    3.33407 (35) obj. 29285.5 iterations 121
Cbc0038I Pass  61: suminf.    2.73070 (25) obj. 29285.5 iterations 43
Cbc0038I Pass  62: suminf.    7.50195 (32) obj. 29285.5 iterations 97
Cbc0038I Pass  63: suminf.    6.29570 (32) obj. 29285.5 iterations 48
Cbc0038I Pass  64: suminf.    5.97788 (13) obj. 29285.5 iterations 129
Cbc0038I Pass  65: suminf.    3.05459 (35) obj. 29285.5 iterations 64
Cbc0038I Pass  66: suminf.    5.23035 (36) obj. 29285.5 iterations 134
Cbc0038I Pass  67: suminf.    3.81393 (18) obj. 29285.5 iterations 44
Cbc0038I Pass  68: suminf.    1.29536 (26) obj. 29285.5 iterations 90
Cbc0038I Pass  69: suminf.    1.29536 (26) obj. 29285.5 iterations 3
Cbc0038I Pass  70: suminf.    7.11154 (36) obj. 29285.5 iterations 85
Cbc0038I Pass  71: suminf.    5.08804 (35) obj. 29285.5 iterations 69
Cbc0038I Pass  72: suminf.    5.06746 (34) obj. 29285.5 iterations 9
Cbc0038I Pass  73: suminf.    9.05038 (30) obj. 29285.5 iterations 107
Cbc0038I Pass  74: suminf.    1.13269 (25) obj. 29285.5 iterations 107
Cbc0038I Pass  75: suminf.    1.22295 (42) obj. 29285.5 iterations 11
Cbc0038I Pass  76: suminf.   17.93344 (80) obj. 29285.5 iterations 139
Cbc0038I Pass  77: suminf.   14.27134 (87) obj. 29285.5 iterations 110
Cbc0038I Pass  78: suminf.   13.77066 (85) obj. 29285.5 iterations 16
Cbc0038I Pass  79: suminf.    7.90675 (37) obj. 29285.5 iterations 251
Cbc0038I Pass  80: suminf.    6.69292 (38) obj. 29285.5 iterations 19
Cbc0038I Pass  81: suminf.    6.40407 (40) obj. 29285.5 iterations 29
Cbc0038I Pass  82: suminf.    6.29100 (40) obj. 29285.5 iterations 2
Cbc0038I Pass  83: suminf.    5.36387 (31) obj. 29285.5 iterations 111
Cbc0038I Pass  84: suminf.    3.25968 (25) obj. 29285.5 iterations 49
Cbc0038I Pass  85: suminf.    3.25968 (25) obj. 29285.5 iterations 2
Cbc0038I Pass  86: suminf.    4.83195 (32) obj. 29285.5 iterations 95
Cbc0038I Pass  87: suminf.    4.64982 (33) obj. 29285.5 iterations 34
Cbc0038I Pass  88: suminf.    6.90427 (31) obj. 29285.5 iterations 98
Cbc0038I Pass  89: suminf.    6.70195 (28) obj. 29285.5 iterations 44
Cbc0038I Pass  90: suminf.    5.25009 (18) obj. 29285.5 iterations 74
Cbc0038I Pass  91: suminf.    1.25713 (22) obj. 29285.5 iterations 142
Cbc0038I Pass  92: suminf.    1.25713 (22) obj. 29285.5 iterations 0
Cbc0038I Pass  93: suminf.    6.39464 (35) obj. 29285.5 iterations 103
Cbc0038I Pass  94: suminf.    3.88761 (24) obj. 29285.5 iterations 71
Cbc0038I Pass  95: suminf.    7.92176 (28) obj. 29285.5 iterations 119
Cbc0038I Pass  96: suminf.    4.99991 (10) obj. 29285.5 iterations 60
Cbc0038I Pass  97: suminf.    1.27765 (33) obj. 29285.5 iterations 114
Cbc0038I Pass  98: suminf.   10.25979 (46) obj. 29285.5 iterations 224
Cbc0038I Pass  99: suminf.    4.11613 (37) obj. 29285.5 iterations 77
Cbc0038I Pass 100: suminf.    4.11613 (37) obj. 29285.5 iterations 6
Cbc0038I Pass 101: suminf.    1.13955 (31) obj. 29285.5 iterations 151
Cbc0038I Pass 102: suminf.    1.22295 (42) obj. 29285.5 iterations 46
Cbc0038I Pass 103: suminf.    7.49217 (40) obj. 29285.5 iterations 72
Cbc0038I Pass 104: suminf.    6.34704 (32) obj. 29285.5 iterations 34
Cbc0038I Pass 105: suminf.    4.94137 (26) obj. 29285.5 iterations 68
Cbc0038I Pass 106: suminf.   15.66082 (67) obj. 29285.5 iterations 127
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 603 rows 213 columns, reduced to 551 rows 187 columns - 8 fixed gives 504, 170 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of 29696 - took 0.35 seconds
Cbc0012I Integer solution of 29696 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 424 rows 127 columns - 30 fixed gives 270, 78 - ok now
Cbc0031I 27 added rows had average density of 38.37037
Cbc0013I At root node, 27 cuts changed objective from 25600 to 25600 in 24 passes
Cbc0014I Cut generator 0 (Probing) - 51 row cuts average 2.5 elements, 4 column cuts (4 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 163 row cuts average 170.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 182 row cuts average 143.8 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 29696 best solution, best possible 25600 (0.88 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 421 rows 127 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 421 rows 127 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 421 rows 127 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 423 rows 128 columns - 29 fixed gives 272, 77 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 419 rows 126 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 415 rows 125 columns - 29 fixed gives 266, 75 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 419 rows 126 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 413 rows 124 columns - 29 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 413 rows 124 columns - 29 fixed gives 270, 76 - ok now
Cbc0010I After 1000 nodes, 1 on tree, 29696 best solution, best possible 26095 (10.06 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 416 rows 125 columns - 28 fixed gives 270, 76 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 402 rows 119 columns - 27 fixed gives 264, 74 - ok now
Cbc0010I After 2000 nodes, 1 on tree, 29696 best solution, best possible 26595 (17.46 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 400 rows 118 columns - 26 fixed gives 270, 77 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 400 rows 118 columns - 26 fixed gives 270, 77 - ok now
Cbc0010I After 3000 nodes, 1 on tree, 29696 best solution, best possible 27095 (23.71 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 389 rows 114 columns - 26 fixed gives 262, 74 - ok now
Cbc0010I After 4000 nodes, 1 on tree, 29696 best solution, best possible 27595 (30.82 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 389 rows 114 columns - 26 fixed gives 262, 74 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 386 rows 113 columns - 26 fixed gives 258, 72 - ok now
Cbc0010I After 5000 nodes, 1 on tree, 29696 best solution, best possible 28095 (37.75 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 384 rows 112 columns - 26 fixed gives 258, 72 - ok now
Cbc0038I Full problem 603 rows 213 columns, reduced to 384 rows 112 columns - 26 fixed gives 258, 72 - ok now
Cbc0010I After 6000 nodes, 1 on tree, 29696 best solution, best possible 28594 (45.00 seconds)
Cbc0010I After 7000 nodes, 1 on tree, 29696 best solution, best possible 28877 (55.55 seconds)
Cbc0038I Full problem 603 rows 213 columns, reduced to 384 rows 112 columns - 26 fixed gives 258, 72 - ok now
Cbc0010I After 8000 nodes, 2 on tree, 29696 best solution, best possible 29099 (65.70 seconds)
Cbc0010I After 9000 nodes, 2 on tree, 29696 best solution, best possible 29333 (75.34 seconds)
Cbc0010I After 10000 nodes, 2 on tree, 29696 best solution, best possible 29595 (84.33 seconds)
Cbc0001I Search completed - best objective 29696, took 1158429 iterations and 10376 nodes (87.70 seconds)
Cbc0032I Strong branching done 20304 times (519427 iterations), fathomed 4589 nodes and fixed 1791 variables
Cbc0035I Maximum depth 4095, 7 variables fixed on reduced cost
Cuts at root node changed objective from 25600 to 25600
Probing was tried 24 times and created 55 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Gomory was tried 24 times and created 163 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
Knapsack was tried 24 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 24 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 24 times and created 182 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ImplicationCuts was tried 27 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                29696.00000000
Enumerated nodes:               10376
Total iterations:               1158429
Time (CPU seconds):             87.71
Time (Wallclock seconds):       92.01

Total time (CPU seconds):       87.71   (Wallclock seconds):       92.02

