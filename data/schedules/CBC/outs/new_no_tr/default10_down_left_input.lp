Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default10_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/default10_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20419.8 - 0.00 seconds
Cgl0002I 20 variables fixed
Cgl0003I 0 fixed, 3 tightened bounds, 50 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 221 rows, 83 columns (83 integer (72 of which binary)) and 723 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 83 objects (83 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 54 integers unsatisfied sum - 14.5977
Cbc0038I Pass   1: suminf.    6.25000 (28) obj. 22528 iterations 58
Cbc0038I Pass   2: suminf.    4.22642 (28) obj. 24035 iterations 12
Cbc0038I Pass   3: suminf.    0.00000 (0) obj. 26624 iterations 29
Cbc0038I Solution found of 26624
Cbc0038I Cleaned solution of 26624
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 181 rows 61 columns - 11 fixed gives 105, 35 - ok now
Cbc0038I Full problem 221 rows 83 columns, reduced to 4 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 26624 to 26624 (0.02 seconds)
Cbc0038I Round again with cutoff of 26002.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.25000 (28) obj. 22528 iterations 0
Cbc0038I Pass   5: suminf.    4.22642 (28) obj. 24035 iterations 14
Cbc0038I Pass   6: suminf.    0.62682 (11) obj. 26002.7 iterations 27
Cbc0038I Pass   7: suminf.    0.62682 (11) obj. 26002.7 iterations 17
Cbc0038I Pass   8: suminf.    4.32344 (9) obj. 26002.7 iterations 13
Cbc0038I Pass   9: suminf.    2.99011 (9) obj. 26002.7 iterations 8
Cbc0038I Pass  10: suminf.    0.32344 (1) obj. 26002.7 iterations 2
Cbc0038I Solution found of 26002.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 222 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 183 rows 62 columns - 18 fixed gives 71, 23 - ok now
Cbc0038I Full problem 221 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 24563.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  11: suminf.    6.25000 (28) obj. 22528 iterations 0
Cbc0038I Pass  12: suminf.    4.22642 (28) obj. 24035 iterations 14
Cbc0038I Pass  13: suminf.    1.38210 (36) obj. 24563.2 iterations 61
Cbc0038I Pass  14: suminf.    1.34135 (37) obj. 24563.2 iterations 5
Cbc0038I Pass  15: suminf.    7.64938 (36) obj. 24563.2 iterations 44
Cbc0038I Pass  16: suminf.    5.42531 (37) obj. 24563.2 iterations 35
Cbc0038I Pass  17: suminf.    5.37676 (34) obj. 24563.2 iterations 3
Cbc0038I Pass  18: suminf.    9.51985 (45) obj. 24563.2 iterations 58
Cbc0038I Pass  19: suminf.    5.56017 (36) obj. 24563.2 iterations 24
Cbc0038I Pass  20: suminf.    3.63268 (23) obj. 24563.2 iterations 5
Cbc0038I Pass  21: suminf.   10.16553 (35) obj. 24563.2 iterations 29
Cbc0038I Pass  22: suminf.    5.57666 (32) obj. 24563.2 iterations 39
Cbc0038I Pass  23: suminf.    4.25523 (28) obj. 24563.2 iterations 14
Cbc0038I Pass  24: suminf.    4.22211 (26) obj. 24563.2 iterations 6
Cbc0038I Pass  25: suminf.    6.63175 (32) obj. 24563.2 iterations 28
Cbc0038I Pass  26: suminf.    4.54468 (27) obj. 24563.2 iterations 16
Cbc0038I Pass  27: suminf.    4.43467 (27) obj. 24563.2 iterations 8
Cbc0038I Pass  28: suminf.    4.12614 (26) obj. 24563.2 iterations 5
Cbc0038I Pass  29: suminf.    6.89527 (23) obj. 24563.2 iterations 27
Cbc0038I Pass  30: suminf.    8.47029 (41) obj. 24563.2 iterations 38
Cbc0038I Pass  31: suminf.    4.47960 (34) obj. 24563.2 iterations 37
Cbc0038I Pass  32: suminf.    4.18543 (34) obj. 24563.2 iterations 4
Cbc0038I Pass  33: suminf.   10.70739 (43) obj. 24563.2 iterations 52
Cbc0038I Pass  34: suminf.    8.36060 (36) obj. 24563.2 iterations 25
Cbc0038I Pass  35: suminf.    8.26112 (43) obj. 24563.2 iterations 53
Cbc0038I Pass  36: suminf.    7.13616 (37) obj. 24563.2 iterations 23
Cbc0038I Pass  37: suminf.    7.30004 (37) obj. 24563.2 iterations 34
Cbc0038I Pass  38: suminf.    3.34977 (28) obj. 24563.2 iterations 34
Cbc0038I Pass  39: suminf.    2.83827 (39) obj. 24563.2 iterations 10
Cbc0038I Pass  40: suminf.    5.87181 (32) obj. 24563.2 iterations 56
Cbc0038I Pass  41: suminf.    5.70113 (29) obj. 24563.2 iterations 6
Cbc0038I Pass  42: suminf.    7.13872 (43) obj. 24563.2 iterations 59
Cbc0038I Pass  43: suminf.    0.90945 (16) obj. 24563.2 iterations 26
Cbc0038I Pass  44: suminf.    0.55804 (5) obj. 24563.2 iterations 17
Cbc0038I Pass  45: suminf.    0.15302 (1) obj. 24563.2 iterations 8
Cbc0038I Solution found of 24563.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 222 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 22528
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 215 rows 79 columns - 15 fixed gives 162, 56 - still too large
Cbc0038I Full problem 221 rows 83 columns, reduced to 118 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 21894.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  46: suminf.    6.67048 (32) obj. 21894 iterations 6
Cbc0038I Pass  47: suminf.    6.37466 (36) obj. 21894.8 iterations 20
Cbc0038I Pass  48: suminf.   10.52492 (44) obj. 21894.8 iterations 56
Cbc0038I Pass  49: suminf.    8.09631 (42) obj. 21894.8 iterations 20
Cbc0038I Pass  50: suminf.    5.86553 (33) obj. 21894.8 iterations 17
Cbc0038I Pass  51: suminf.    5.82231 (33) obj. 21894.8 iterations 8
Cbc0038I Pass  52: suminf.    6.12571 (26) obj. 21894.8 iterations 36
Cbc0038I Pass  53: suminf.    3.35543 (39) obj. 21894.8 iterations 57
Cbc0038I Pass  54: suminf.    9.16166 (42) obj. 21894.8 iterations 49
Cbc0038I Pass  55: suminf.    7.50191 (44) obj. 21894.8 iterations 19
Cbc0038I Pass  56: suminf.    8.77390 (39) obj. 21894.8 iterations 45
Cbc0038I Pass  57: suminf.    6.05443 (40) obj. 21894.8 iterations 25
Cbc0038I Pass  58: suminf.    6.53774 (41) obj. 21894.8 iterations 10
Cbc0038I Pass  59: suminf.   11.14097 (44) obj. 21894.8 iterations 62
Cbc0038I Pass  60: suminf.    9.83110 (43) obj. 21894.8 iterations 14
Cbc0038I Pass  61: suminf.    7.35519 (40) obj. 21894.8 iterations 36
Cbc0038I Pass  62: suminf.    6.17341 (41) obj. 21894.8 iterations 14
Cbc0038I Pass  63: suminf.   12.21117 (49) obj. 21894.8 iterations 44
Cbc0038I Pass  64: suminf.   11.11998 (50) obj. 21894.8 iterations 8
Cbc0038I Pass  65: suminf.   10.19470 (45) obj. 21894.8 iterations 18
Cbc0038I Pass  66: suminf.   10.13608 (45) obj. 21894.8 iterations 7
Cbc0038I Pass  67: suminf.    7.85990 (31) obj. 21894.8 iterations 21
Cbc0038I Pass  68: suminf.    6.78301 (31) obj. 21894.8 iterations 6
Cbc0038I Pass  69: suminf.    6.93364 (33) obj. 21894.8 iterations 43
Cbc0038I Pass  70: suminf.    6.74083 (34) obj. 21894.8 iterations 9
Cbc0038I Pass  71: suminf.    7.76827 (43) obj. 21894.8 iterations 55
Cbc0038I Pass  72: suminf.    5.87964 (43) obj. 21894.8 iterations 17
Cbc0038I Pass  73: suminf.   11.73522 (47) obj. 21894.8 iterations 38
Cbc0038I Pass  74: suminf.    9.64955 (44) obj. 21894.8 iterations 18
Cbc0038I Pass  75: suminf.   10.11093 (43) obj. 21894.8 iterations 4
Cbc0038I Pass  76: suminf.    8.10645 (44) obj. 21894.8 iterations 35
Cbc0038I Pass  77: suminf.    7.04623 (39) obj. 21894.8 iterations 11
Cbc0038I Pass  78: suminf.    6.49475 (31) obj. 21894.8 iterations 12
Cbc0038I Pass  79: suminf.    5.93744 (32) obj. 21894.8 iterations 5
Cbc0038I Pass  80: suminf.    8.97939 (41) obj. 21894.8 iterations 46
Cbc0038I Pass  81: suminf.    8.54244 (42) obj. 21894.8 iterations 20
Cbc0038I Pass  82: suminf.    4.77330 (26) obj. 21894.8 iterations 53
Cbc0038I Pass  83: suminf.    3.35665 (36) obj. 21894.8 iterations 30
Cbc0038I Pass  84: suminf.    8.79259 (41) obj. 21894.8 iterations 46
Cbc0038I Pass  85: suminf.    7.68582 (37) obj. 21894.8 iterations 17
Cbc0038I Pass  86: suminf.    7.41133 (37) obj. 21894.8 iterations 11
Cbc0038I Pass  87: suminf.    6.33143 (38) obj. 21894.8 iterations 46
Cbc0038I Pass  88: suminf.    5.72785 (44) obj. 21894.8 iterations 7
Cbc0038I Pass  89: suminf.    9.70642 (37) obj. 21894.8 iterations 32
Cbc0038I Pass  90: suminf.    7.57334 (36) obj. 21894.8 iterations 19
Cbc0038I Pass  91: suminf.    5.36093 (42) obj. 21894.8 iterations 10
Cbc0038I Pass  92: suminf.    1.80138 (43) obj. 21894.8 iterations 24
Cbc0038I Pass  93: suminf.    1.74915 (33) obj. 21894.8 iterations 17
Cbc0038I Pass  94: suminf.    9.26247 (49) obj. 21894.8 iterations 43
Cbc0038I Pass  95: suminf.    6.04815 (36) obj. 21894.8 iterations 22
Cbc0038I Pass  96: suminf.    5.29020 (35) obj. 21894.8 iterations 18
Cbc0038I Pass  97: suminf.   11.86142 (50) obj. 21894.8 iterations 35
Cbc0038I Pass  98: suminf.    7.53450 (41) obj. 21894.8 iterations 38
Cbc0038I Pass  99: suminf.    5.91184 (37) obj. 21894.8 iterations 27
Cbc0038I Pass 100: suminf.    6.95076 (34) obj. 21894.8 iterations 55
Cbc0038I Pass 101: suminf.    4.32411 (43) obj. 21894.8 iterations 25
Cbc0038I Pass 102: suminf.    4.44903 (33) obj. 21894.8 iterations 23
Cbc0038I Pass 103: suminf.    7.67722 (48) obj. 21894.8 iterations 52
Cbc0038I Pass 104: suminf.    6.95378 (47) obj. 21894.8 iterations 24
Cbc0038I Pass 105: suminf.   11.24273 (37) obj. 21894.8 iterations 27
Cbc0038I Pass 106: suminf.    8.17084 (38) obj. 21894.8 iterations 21
Cbc0038I Pass 107: suminf.    7.79558 (44) obj. 21894.8 iterations 13
Cbc0038I Pass 108: suminf.   10.48499 (45) obj. 21894.8 iterations 40
Cbc0038I Pass 109: suminf.    9.88040 (43) obj. 21894.8 iterations 20
Cbc0038I Pass 110: suminf.    6.51095 (40) obj. 21894.8 iterations 21
Cbc0038I Pass 111: suminf.    6.14635 (40) obj. 21894.8 iterations 4
Cbc0038I Pass 112: suminf.   10.34764 (40) obj. 21894.8 iterations 39
Cbc0038I Pass 113: suminf.    6.06898 (39) obj. 21894.8 iterations 12
Cbc0038I Pass 114: suminf.    6.31391 (43) obj. 21894.8 iterations 14
Cbc0038I Pass 115: suminf.    8.15667 (44) obj. 21894.8 iterations 41
Cbc0038I Pass 116: suminf.    6.25226 (43) obj. 21894.8 iterations 12
Cbc0038I Pass 117: suminf.   10.66272 (41) obj. 21894.8 iterations 45
Cbc0038I Pass 118: suminf.    6.39824 (42) obj. 21894.8 iterations 18
Cbc0038I Pass 119: suminf.    6.15156 (42) obj. 21894.8 iterations 11
Cbc0038I Pass 120: suminf.   11.25164 (45) obj. 21894.8 iterations 64
Cbc0038I Pass 121: suminf.    4.89673 (33) obj. 21894.8 iterations 37
Cbc0038I Pass 122: suminf.    4.50816 (46) obj. 21894.8 iterations 14
Cbc0038I Pass 123: suminf.   13.57114 (49) obj. 21894.8 iterations 62
Cbc0038I Pass 124: suminf.   11.17236 (44) obj. 21894.8 iterations 22
Cbc0038I Pass 125: suminf.    9.25685 (38) obj. 21894.8 iterations 19
Cbc0038I Pass 126: suminf.    6.84719 (42) obj. 21894.8 iterations 11
Cbc0038I Pass 127: suminf.    6.69596 (35) obj. 21894.8 iterations 52
Cbc0038I Pass 128: suminf.    6.07517 (42) obj. 21894.8 iterations 14
Cbc0038I Pass 129: suminf.   12.83417 (49) obj. 21894.8 iterations 72
Cbc0038I Pass 130: suminf.   10.41551 (43) obj. 21894.8 iterations 41
Cbc0038I Pass 131: suminf.    6.23202 (37) obj. 21894.8 iterations 20
Cbc0038I Pass 132: suminf.    6.26639 (30) obj. 21894.8 iterations 3
Cbc0038I Pass 133: suminf.   10.95647 (40) obj. 21894.8 iterations 36
Cbc0038I Pass 134: suminf.    7.60621 (46) obj. 21894.8 iterations 29
Cbc0038I Pass 135: suminf.    7.59940 (39) obj. 21894.8 iterations 46
Cbc0038I Pass 136: suminf.    6.80479 (39) obj. 21894.8 iterations 15
Cbc0038I Pass 137: suminf.   10.34366 (38) obj. 21894.8 iterations 43
Cbc0038I Pass 138: suminf.    4.68656 (32) obj. 21894.8 iterations 27
Cbc0038I Pass 139: suminf.    4.63668 (34) obj. 21894.8 iterations 12
Cbc0038I Pass 140: suminf.   10.03011 (43) obj. 21894.8 iterations 45
Cbc0038I Pass 141: suminf.    6.79865 (37) obj. 21894.8 iterations 22
Cbc0038I Pass 142: suminf.    6.79865 (37) obj. 21894.8 iterations 3
Cbc0038I Pass 143: suminf.    8.61701 (36) obj. 21894.8 iterations 42
Cbc0038I Pass 144: suminf.    6.28191 (33) obj. 21894.8 iterations 20
Cbc0038I Pass 145: suminf.    8.08452 (41) obj. 21894.8 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 212 rows 78 columns - 16 fixed gives 109, 43 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of 22528 - took 0.12 seconds
Cbc0012I Integer solution of 22528 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 221 rows 83 columns, reduced to 184 rows 62 columns - 10 fixed gives 130, 43 - still too large
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 20419.765 to 20419.765 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 22528, took 0 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Cuts at root node changed objective from 20419.8 to 20419.8
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                22528.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.14
Time (Wallclock seconds):       0.14

Total time (CPU seconds):       0.14   (Wallclock seconds):       0.14

