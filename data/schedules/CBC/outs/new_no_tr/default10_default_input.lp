Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default10_default_input.lp sec 1800 solve solu solutions/new_no_tr/default10_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20419.8 - 0.00 seconds
Cgl0002I 20 variables fixed
Cgl0003I 0 fixed, 4 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 221 rows, 83 columns (83 integer (72 of which binary)) and 723 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 83 objects (83 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 55 integers unsatisfied sum - 12.0194
Cbc0038I Pass   1: suminf.    8.90893 (42) obj. 22504 iterations 38
Cbc0038I Pass   2: suminf.    4.98864 (30) obj. 23168 iterations 21
Cbc0038I Pass   3: suminf.    4.22642 (28) obj. 24035 iterations 7
Cbc0038I Pass   4: suminf.    3.45833 (13) obj. 25600 iterations 29
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 25600 iterations 8
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 179 rows 61 columns - 12 fixed gives 90, 31 - ok now
Cbc0038I Full problem 221 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 25600 to 25600 (0.02 seconds)
Cbc0038I Round again with cutoff of 25081.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   6: suminf.    8.90893 (42) obj. 22504 iterations 0
Cbc0038I Pass   7: suminf.    4.98864 (30) obj. 23168 iterations 31
Cbc0038I Pass   8: suminf.    4.22642 (28) obj. 24035 iterations 7
Cbc0038I Pass   9: suminf.    0.62804 (23) obj. 25081.1 iterations 40
Cbc0038I Pass  10: suminf.    0.59833 (32) obj. 25081.1 iterations 15
Cbc0038I Pass  11: suminf.    4.69466 (25) obj. 25081.1 iterations 52
Cbc0038I Pass  12: suminf.    2.54023 (18) obj. 25081.1 iterations 24
Cbc0038I Pass  13: suminf.    0.07656 (1) obj. 25081.1 iterations 16
Cbc0038I Solution found of 25081.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 222 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 196 rows 69 columns - 23 fixed gives 80, 30 - ok now
Cbc0038I Full problem 221 rows 83 columns, reduced to 67 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 23744
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  14: suminf.    8.90893 (42) obj. 22504 iterations 0
Cbc0038I Pass  15: suminf.    4.98864 (30) obj. 23168 iterations 31
Cbc0038I Pass  16: suminf.    4.62507 (28) obj. 23744 iterations 7
Cbc0038I Pass  17: suminf.    7.92849 (32) obj. 23744 iterations 47
Cbc0038I Pass  18: suminf.    3.76903 (39) obj. 23744 iterations 53
Cbc0038I Pass  19: suminf.   10.05053 (43) obj. 23744 iterations 46
Cbc0038I Pass  20: suminf.    6.69963 (40) obj. 23744 iterations 17
Cbc0038I Pass  21: suminf.    4.39677 (33) obj. 23744 iterations 23
Cbc0038I Pass  22: suminf.    9.02476 (45) obj. 23744 iterations 59
Cbc0038I Pass  23: suminf.    6.67584 (42) obj. 23744 iterations 27
Cbc0038I Pass  24: suminf.    4.67596 (37) obj. 23744 iterations 14
Cbc0038I Pass  25: suminf.    4.92917 (42) obj. 23744 iterations 14
Cbc0038I Pass  26: suminf.    2.95957 (34) obj. 23744 iterations 26
Cbc0038I Pass  27: suminf.    1.47687 (30) obj. 23744 iterations 17
Cbc0038I Pass  28: suminf.    9.79764 (45) obj. 23744 iterations 27
Cbc0038I Pass  29: suminf.    7.56480 (36) obj. 23744 iterations 9
Cbc0038I Pass  30: suminf.    2.52196 (16) obj. 23744 iterations 19
Cbc0038I Pass  31: suminf.    1.48921 (29) obj. 23744 iterations 17
Cbc0038I Pass  32: suminf.    9.71075 (44) obj. 23744 iterations 38
Cbc0038I Pass  33: suminf.    6.33915 (44) obj. 23744 iterations 21
Cbc0038I Pass  34: suminf.    3.40926 (20) obj. 23744 iterations 15
Cbc0038I Pass  35: suminf.    2.31465 (15) obj. 23744 iterations 24
Cbc0038I Pass  36: suminf.    1.93039 (13) obj. 23744 iterations 9
Cbc0038I Pass  37: suminf.    2.75112 (14) obj. 23744 iterations 21
Cbc0038I Pass  38: suminf.    1.72717 (11) obj. 23744 iterations 22
Cbc0038I Pass  39: suminf.    0.04698 (1) obj. 23744 iterations 17
Cbc0038I Solution found of 23744
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 222 rows 83 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 22528
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 221 rows 83 columns, reduced to 211 rows 77 columns - 22 fixed gives 120, 42 - ok now
Cbc0038I Full problem 221 rows 83 columns, reduced to 99 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 21894.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  40: suminf.    8.54832 (41) obj. 21894 iterations 11
Cbc0038I Pass  41: suminf.    6.37466 (36) obj. 21894.8 iterations 36
Cbc0038I Pass  42: suminf.   10.02994 (45) obj. 21894.8 iterations 39
Cbc0038I Pass  43: suminf.    8.02352 (43) obj. 21894.8 iterations 13
Cbc0038I Pass  44: suminf.    8.63049 (43) obj. 21894.8 iterations 28
Cbc0038I Pass  45: suminf.    6.63574 (39) obj. 21894.8 iterations 24
Cbc0038I Pass  46: suminf.    5.79167 (40) obj. 21894.8 iterations 13
Cbc0038I Pass  47: suminf.    5.39644 (42) obj. 21894.8 iterations 10
Cbc0038I Pass  48: suminf.   14.27653 (47) obj. 21894.8 iterations 37
Cbc0038I Pass  49: suminf.   11.43756 (44) obj. 21894.8 iterations 17
Cbc0038I Pass  50: suminf.   13.03669 (47) obj. 21894.8 iterations 9
Cbc0038I Pass  51: suminf.   11.44133 (50) obj. 21894.8 iterations 20
Cbc0038I Pass  52: suminf.    8.04681 (47) obj. 21894.8 iterations 52
Cbc0038I Pass  53: suminf.    5.29720 (37) obj. 21894.8 iterations 20
Cbc0038I Pass  54: suminf.    5.08119 (37) obj. 21894.8 iterations 6
Cbc0038I Pass  55: suminf.   10.27358 (41) obj. 21894.8 iterations 46
Cbc0038I Pass  56: suminf.    2.36201 (30) obj. 21894.8 iterations 38
Cbc0038I Pass  57: suminf.    1.74915 (33) obj. 21894.8 iterations 32
Cbc0038I Pass  58: suminf.   10.34317 (44) obj. 21894.8 iterations 42
Cbc0038I Pass  59: suminf.    8.38111 (38) obj. 21894.8 iterations 24
Cbc0038I Pass  60: suminf.    6.01438 (37) obj. 21894.8 iterations 14
Cbc0038I Pass  61: suminf.    4.93891 (33) obj. 21894.8 iterations 16
Cbc0038I Pass  62: suminf.   10.35794 (39) obj. 21894.8 iterations 28
Cbc0038I Pass  63: suminf.    5.95442 (34) obj. 21894.8 iterations 20
Cbc0038I Pass  64: suminf.    5.73464 (30) obj. 21894.8 iterations 5
Cbc0038I Pass  65: suminf.    9.61773 (39) obj. 21894.8 iterations 41
Cbc0038I Pass  66: suminf.    7.00686 (35) obj. 21894.8 iterations 28
Cbc0038I Pass  67: suminf.    6.28191 (33) obj. 21894.8 iterations 3
Cbc0038I Pass  68: suminf.    4.32547 (29) obj. 21894.8 iterations 30
Cbc0038I Pass  69: suminf.   10.08624 (36) obj. 21894.8 iterations 40
Cbc0038I Pass  70: suminf.    8.99850 (38) obj. 21894.8 iterations 14
Cbc0038I Pass  71: suminf.    6.56661 (34) obj. 21894.8 iterations 20
Cbc0038I Pass  72: suminf.    6.22027 (28) obj. 21894.8 iterations 5
Cbc0038I Pass  73: suminf.   10.41299 (44) obj. 21894.8 iterations 38
Cbc0038I Pass  74: suminf.    8.14953 (40) obj. 21894.8 iterations 19
Cbc0038I Pass  75: suminf.   11.66723 (39) obj. 21894.8 iterations 43
Cbc0038I Pass  76: suminf.    6.34675 (31) obj. 21894.8 iterations 38
Cbc0038I Pass  77: suminf.    4.29444 (41) obj. 21894.8 iterations 19
Cbc0038I Pass  78: suminf.   10.57657 (50) obj. 21894.8 iterations 50
Cbc0038I Pass  79: suminf.    9.55552 (47) obj. 21894.8 iterations 29
Cbc0038I Pass  80: suminf.   11.38606 (48) obj. 21894.8 iterations 42
Cbc0038I Pass  81: suminf.   10.08518 (42) obj. 21894.8 iterations 12
Cbc0038I Pass  82: suminf.    9.35161 (49) obj. 21894.8 iterations 35
Cbc0038I Pass  83: suminf.    6.83793 (36) obj. 21894.8 iterations 32
Cbc0038I Pass  84: suminf.    6.81962 (39) obj. 21894.8 iterations 9
Cbc0038I Pass  85: suminf.    7.31964 (30) obj. 21894.8 iterations 39
Cbc0038I Pass  86: suminf.    1.74915 (33) obj. 21894.8 iterations 48
Cbc0038I Pass  87: suminf.    9.19004 (50) obj. 21894.8 iterations 46
Cbc0038I Pass  88: suminf.    6.04815 (36) obj. 21894.8 iterations 20
Cbc0038I Pass  89: suminf.    5.29020 (35) obj. 21894.8 iterations 6
Cbc0038I Pass  90: suminf.   10.33582 (40) obj. 21894.8 iterations 42
Cbc0038I Pass  91: suminf.    6.17948 (36) obj. 21894.8 iterations 25
Cbc0038I Pass  92: suminf.    6.17712 (33) obj. 21894.8 iterations 5
Cbc0038I Pass  93: suminf.    5.35671 (36) obj. 21894.8 iterations 15
Cbc0038I Pass  94: suminf.   13.09941 (48) obj. 21894.8 iterations 54
Cbc0038I Pass  95: suminf.    7.67873 (40) obj. 21894.8 iterations 22
Cbc0038I Pass  96: suminf.    6.62092 (38) obj. 21894.8 iterations 19
Cbc0038I Pass  97: suminf.    6.42491 (32) obj. 21894.8 iterations 26
Cbc0038I Pass  98: suminf.    6.22253 (31) obj. 21894.8 iterations 7
Cbc0038I Pass  99: suminf.    8.93831 (36) obj. 21894.8 iterations 37
Cbc0038I Pass 100: suminf.    8.52180 (41) obj. 21894.8 iterations 15
Cbc0038I Pass 101: suminf.    5.57121 (35) obj. 21894.8 iterations 36
Cbc0038I Pass 102: suminf.    1.79468 (34) obj. 21894.8 iterations 40
Cbc0038I Pass 103: suminf.    1.74898 (34) obj. 21894.8 iterations 4
Cbc0038I Pass 104: suminf.   10.90271 (48) obj. 21894.8 iterations 55
Cbc0038I Pass 105: suminf.    8.75747 (43) obj. 21894.8 iterations 17
Cbc0038I Pass 106: suminf.    7.89610 (44) obj. 21894.8 iterations 12
Cbc0038I Pass 107: suminf.   14.33180 (49) obj. 21894.8 iterations 53
Cbc0038I Pass 108: suminf.    9.70529 (44) obj. 21894.8 iterations 30
Cbc0038I Pass 109: suminf.    5.24419 (38) obj. 21894.8 iterations 32
Cbc0038I Pass 110: suminf.    7.63098 (42) obj. 21894.8 iterations 14
Cbc0038I Pass 111: suminf.    5.44102 (40) obj. 21894.8 iterations 9
Cbc0038I Pass 112: suminf.    4.84124 (44) obj. 21894.8 iterations 6
Cbc0038I Pass 113: suminf.   15.21204 (48) obj. 21894.8 iterations 29
Cbc0038I Pass 114: suminf.   10.96968 (47) obj. 21894.8 iterations 22
Cbc0038I Pass 115: suminf.    9.96724 (44) obj. 21894.8 iterations 15
Cbc0038I Pass 116: suminf.    9.04130 (35) obj. 21894.8 iterations 51
Cbc0038I Pass 117: suminf.    5.24419 (38) obj. 21894.8 iterations 39
Cbc0038I Pass 118: suminf.   13.78917 (45) obj. 21894.8 iterations 39
Cbc0038I Pass 119: suminf.    6.82314 (41) obj. 21894.8 iterations 25
Cbc0038I Pass 120: suminf.    5.73752 (42) obj. 21894.8 iterations 21
Cbc0038I Pass 121: suminf.    6.42728 (44) obj. 21894.8 iterations 27
Cbc0038I Pass 122: suminf.    2.89666 (37) obj. 21894.8 iterations 14
Cbc0038I Pass 123: suminf.   10.12642 (50) obj. 21894.8 iterations 46
Cbc0038I Pass 124: suminf.   10.79857 (41) obj. 21894.8 iterations 19
Cbc0038I Pass 125: suminf.   10.43960 (37) obj. 21894.8 iterations 12
Cbc0038I Pass 126: suminf.   10.48324 (36) obj. 21894.8 iterations 2
Cbc0038I Pass 127: suminf.    6.30370 (33) obj. 21894.8 iterations 48
Cbc0038I Pass 128: suminf.    6.20181 (22) obj. 21894.8 iterations 9
Cbc0038I Pass 129: suminf.    6.17644 (27) obj. 21894.8 iterations 43
Cbc0038I Pass 130: suminf.    3.13409 (31) obj. 21894.8 iterations 24
Cbc0038I Pass 131: suminf.    2.13151 (35) obj. 21894.8 iterations 19
Cbc0038I Pass 132: suminf.   10.25067 (49) obj. 21894.8 iterations 50
Cbc0038I Pass 133: suminf.    8.85066 (50) obj. 21894.8 iterations 17
Cbc0038I Pass 134: suminf.    8.11241 (39) obj. 21894.8 iterations 13
Cbc0038I Pass 135: suminf.    6.54565 (34) obj. 21894.8 iterations 19
Cbc0038I Pass 136: suminf.   11.43952 (39) obj. 21894.8 iterations 44
Cbc0038I Pass 137: suminf.   10.16850 (40) obj. 21894.8 iterations 18
Cbc0038I Pass 138: suminf.    7.68607 (46) obj. 21894.8 iterations 12
Cbc0038I Pass 139: suminf.   16.02303 (57) obj. 21894.8 iterations 67
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of 22528 - took 0.12 seconds
Cbc0012I Integer solution of 22528 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 221 rows 83 columns, reduced to 180 rows 61 columns - 15 fixed gives 109, 37 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 20419.765 to 20419.765 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 22528, took 0 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Cuts at root node changed objective from 20419.8 to 20419.8
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                22528.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.13
Time (Wallclock seconds):       0.14

Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

