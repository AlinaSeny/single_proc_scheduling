Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang7_1_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang7_1_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 255.934 - 0.54 seconds
Cgl0002I 115 variables fixed
Cgl0003I 0 fixed, 11 tightened bounds, 600 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 244 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 0 strengthened rows, 0 substitutions
Cgl0004I processed model has 2708 rows, 939 columns (939 integer (910 of which binary)) and 9166 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 939 objects (939 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 473 integers unsatisfied sum - 133.652
Cbc0038I Pass   1: suminf.   70.92430 (396) obj. 394.36 iterations 934
Cbc0038I Pass   2: suminf.   50.07003 (346) obj. 432.813 iterations 495
Cbc0038I Pass   3: suminf.   39.36714 (332) obj. 431.494 iterations 224
Cbc0038I Pass   4: suminf.   31.43061 (289) obj. 433 iterations 208
Cbc0038I Pass   5: suminf.   32.00335 (293) obj. 433 iterations 54
Cbc0038I Pass   6: suminf.   37.08783 (312) obj. 451.389 iterations 364
Cbc0038I Pass   7: suminf.   34.12425 (303) obj. 442.893 iterations 199
Cbc0038I Pass   8: suminf.   32.30471 (339) obj. 439.782 iterations 344
Cbc0038I Pass   9: suminf.   34.07667 (330) obj. 438.235 iterations 162
Cbc0038I Pass  10: suminf.   30.65017 (253) obj. 460.604 iterations 741
Cbc0038I Pass  11: suminf.   31.55335 (267) obj. 459.835 iterations 58
Cbc0038I Pass  12: suminf.   28.65227 (210) obj. 450 iterations 268
Cbc0038I Pass  13: suminf.   26.90826 (238) obj. 450 iterations 292
Cbc0038I Pass  14: suminf.   26.84958 (241) obj. 450 iterations 7
Cbc0038I Pass  15: suminf.   27.20844 (191) obj. 450 iterations 256
Cbc0038I Pass  16: suminf.   26.87598 (197) obj. 450 iterations 61
Cbc0038I Pass  17: suminf.   26.86755 (203) obj. 450 iterations 57
Cbc0038I Pass  18: suminf.   22.36473 (138) obj. 450 iterations 351
Cbc0038I Pass  19: suminf.   21.87326 (132) obj. 450 iterations 304
Cbc0038I Pass  20: suminf.   13.62956 (118) obj. 450 iterations 296
Cbc0038I Pass  21: suminf.   13.79905 (109) obj. 450 iterations 37
Cbc0038I Pass  22: suminf.    4.05181 (46) obj. 450 iterations 536
Cbc0038I Pass  23: suminf.    4.05181 (46) obj. 450 iterations 15
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 450 iterations 63
Cbc0038I Solution found of 450
Cbc0038I Cleaned solution of 450
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.58 seconds)
Cbc0038I Round again with cutoff of 429.698
Cbc0038I Pass  25: suminf.   70.92430 (396) obj. 394.36 iterations 0
Cbc0038I Pass  26: suminf.   49.97656 (352) obj. 429.698 iterations 499
Cbc0038I Pass  27: suminf.   40.65973 (351) obj. 429.698 iterations 235
Cbc0038I Pass  28: suminf.   32.56706 (321) obj. 429.698 iterations 243
Cbc0038I Pass  29: suminf.   31.85516 (326) obj. 429.698 iterations 151
Cbc0038I Pass  30: suminf.   38.18004 (372) obj. 429.698 iterations 412
Cbc0038I Pass  31: suminf.   36.68419 (326) obj. 429.698 iterations 301
Cbc0038I Pass  32: suminf.   32.25174 (292) obj. 429.698 iterations 674
Cbc0038I Pass  33: suminf.   33.29838 (315) obj. 429.698 iterations 143
Cbc0038I Pass  34: suminf.   30.49655 (295) obj. 429.698 iterations 234
Cbc0038I Pass  35: suminf.   30.16584 (296) obj. 429.698 iterations 177
Cbc0038I Pass  36: suminf.   30.37690 (298) obj. 429.698 iterations 52
Cbc0038I Pass  37: suminf.   29.23154 (267) obj. 429.698 iterations 384
Cbc0038I Pass  38: suminf.   30.21301 (266) obj. 429.698 iterations 237
Cbc0038I Pass  39: suminf.   26.09255 (200) obj. 429.698 iterations 362
Cbc0038I Pass  40: suminf.   25.14894 (203) obj. 429.698 iterations 59
Cbc0038I Pass  41: suminf.   22.80218 (199) obj. 429.698 iterations 449
Cbc0038I Pass  42: suminf.   21.05352 (214) obj. 429.698 iterations 119
Cbc0038I Pass  43: suminf.   19.61814 (170) obj. 429.698 iterations 158
Cbc0038I Pass  44: suminf.   16.48084 (191) obj. 429.698 iterations 340
Cbc0038I Pass  45: suminf.   16.21065 (213) obj. 429.698 iterations 131
Cbc0038I Pass  46: suminf.   11.16443 (138) obj. 429.698 iterations 456
Cbc0038I Pass  47: suminf.   10.74667 (123) obj. 429.698 iterations 71
Cbc0038I Pass  48: suminf.    8.53179 (136) obj. 429.698 iterations 263
Cbc0038I Pass  49: suminf.    6.68013 (96) obj. 429.698 iterations 196
Cbc0038I Pass  50: suminf.   18.86726 (115) obj. 429.698 iterations 359
Cbc0038I Pass  51: suminf.   14.79669 (100) obj. 429.698 iterations 127
Cbc0038I Pass  52: suminf.    8.29264 (89) obj. 429.698 iterations 204
Cbc0038I Pass  53: suminf.    9.21420 (97) obj. 429.698 iterations 366
Cbc0038I Pass  54: suminf.    5.78731 (82) obj. 429.698 iterations 601
Cbc0038I Pass  55: suminf.    4.79457 (62) obj. 429.698 iterations 278
Cbc0038I Pass  56: suminf.   13.43144 (129) obj. 429.698 iterations 505
Cbc0038I Pass  57: suminf.   11.14023 (124) obj. 429.698 iterations 82
Cbc0038I Pass  58: suminf.    7.08471 (76) obj. 429.698 iterations 530
Cbc0038I Pass  59: suminf.    4.58056 (78) obj. 429.698 iterations 163
Cbc0038I Pass  60: suminf.    3.78310 (83) obj. 429.698 iterations 347
Cbc0038I Pass  61: suminf.    3.36329 (83) obj. 429.698 iterations 369
Cbc0038I Pass  62: suminf.   11.69538 (103) obj. 429.698 iterations 536
Cbc0038I Pass  63: suminf.   11.10006 (86) obj. 429.698 iterations 202
Cbc0038I Pass  64: suminf.    9.52969 (80) obj. 429.698 iterations 228
Cbc0038I Pass  65: suminf.    9.72993 (89) obj. 429.698 iterations 111
Cbc0038I Pass  66: suminf.    7.23462 (105) obj. 429.698 iterations 573
Cbc0038I Pass  67: suminf.    5.70220 (107) obj. 429.698 iterations 242
Cbc0038I Pass  68: suminf.    5.83356 (69) obj. 429.698 iterations 651
Cbc0038I Pass  69: suminf.    5.36087 (68) obj. 429.698 iterations 19
Cbc0038I Pass  70: suminf.    5.36087 (68) obj. 429.698 iterations 16
Cbc0038I Pass  71: suminf.   10.69879 (93) obj. 429.698 iterations 373
Cbc0038I Pass  72: suminf.    0.33654 (18) obj. 429.698 iterations 440
Cbc0038I Pass  73: suminf.    0.33654 (18) obj. 429.698 iterations 20
Cbc0038I Pass  74: suminf.    1.51002 (15) obj. 429.698 iterations 438
Cbc0038I Pass  75: suminf.    1.24264 (15) obj. 429.698 iterations 93
Cbc0038I Pass  76: suminf.    0.30247 (1) obj. 429.698 iterations 37
Cbc0038I Solution found of 429.698
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2709 rows 939 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 416
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2708 rows 939 columns, reduced to 2292 rows 755 columns - 283 fixed gives 500, 144 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 111 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (3.36 seconds)
Cbc0038I Round again with cutoff of 383.195
Cbc0038I Pass  77: suminf.   71.50804 (386) obj. 383 iterations 48
Cbc0038I Pass  78: suminf.   54.27094 (387) obj. 383.195 iterations 461
Cbc0038I Pass  79: suminf.   49.08241 (378) obj. 383.195 iterations 235
Cbc0038I Pass  80: suminf.   48.25781 (388) obj. 383.195 iterations 105
Cbc0038I Pass  81: suminf.   45.62567 (446) obj. 383.195 iterations 476
Cbc0038I Pass  82: suminf.   44.93664 (427) obj. 383.195 iterations 274
Cbc0038I Pass  83: suminf.   44.35719 (426) obj. 383.195 iterations 121
Cbc0038I Pass  84: suminf.   47.79982 (390) obj. 383.195 iterations 349
Cbc0038I Pass  85: suminf.   43.42273 (402) obj. 383.195 iterations 131
Cbc0038I Pass  86: suminf.   45.70619 (406) obj. 383.195 iterations 315
Cbc0038I Pass  87: suminf.   44.16808 (393) obj. 383.195 iterations 156
Cbc0038I Pass  88: suminf.   43.82746 (383) obj. 383.195 iterations 28
Cbc0038I Pass  89: suminf.   45.19290 (418) obj. 383.195 iterations 218
Cbc0038I Pass  90: suminf.   44.39171 (378) obj. 383.195 iterations 82
Cbc0038I Pass  91: suminf.   48.96737 (338) obj. 383.195 iterations 387
Cbc0038I Pass  92: suminf.   44.85459 (324) obj. 383.195 iterations 207
Cbc0038I Pass  93: suminf.   45.50317 (339) obj. 383.195 iterations 55
Cbc0038I Pass  94: suminf.   39.13936 (335) obj. 383.195 iterations 254
Cbc0038I Pass  95: suminf.   39.46834 (322) obj. 383.195 iterations 103
Cbc0038I Pass  96: suminf.   39.50263 (323) obj. 383.195 iterations 127
Cbc0038I Pass  97: suminf.   39.49894 (326) obj. 383.195 iterations 12
Cbc0038I Pass  98: suminf.   34.70195 (251) obj. 383.195 iterations 238
Cbc0038I Pass  99: suminf.   35.18783 (233) obj. 383.195 iterations 164
Cbc0038I Pass 100: suminf.   35.31281 (239) obj. 383.195 iterations 19
Cbc0038I Pass 101: suminf.   33.02554 (237) obj. 383.195 iterations 111
Cbc0038I Pass 102: suminf.   33.65061 (234) obj. 383.195 iterations 44
Cbc0038I Pass 103: suminf.   26.57246 (197) obj. 383.195 iterations 331
Cbc0038I Pass 104: suminf.   23.88414 (185) obj. 383.195 iterations 131
Cbc0038I Pass 105: suminf.   23.93585 (206) obj. 383.195 iterations 183
Cbc0038I Pass 106: suminf.   23.59268 (196) obj. 383.195 iterations 41
Cbc0038I Pass 107: suminf.   21.64315 (171) obj. 383.195 iterations 475
Cbc0038I Pass 108: suminf.   16.75048 (168) obj. 383.195 iterations 81
Cbc0038I Pass 109: suminf.   16.79482 (169) obj. 383.195 iterations 5
Cbc0038I Pass 110: suminf.   12.47598 (183) obj. 383.195 iterations 360
Cbc0038I Pass 111: suminf.   12.48684 (185) obj. 383.195 iterations 13
Cbc0038I Pass 112: suminf.   18.12387 (164) obj. 383.195 iterations 342
Cbc0038I Pass 113: suminf.   14.44287 (147) obj. 383.195 iterations 93
Cbc0038I Pass 114: suminf.   13.51339 (107) obj. 383.195 iterations 96
Cbc0038I Pass 115: suminf.   11.03144 (98) obj. 383.195 iterations 74
Cbc0038I Pass 116: suminf.   10.07866 (100) obj. 383.195 iterations 71
Cbc0038I Pass 117: suminf.    7.14918 (115) obj. 383.195 iterations 330
Cbc0038I Pass 118: suminf.    5.86166 (117) obj. 383.195 iterations 159
Cbc0038I Pass 119: suminf.    2.04871 (66) obj. 383.195 iterations 226
Cbc0038I Pass 120: suminf.    2.06211 (99) obj. 383.195 iterations 131
Cbc0038I Pass 121: suminf.   11.98549 (104) obj. 383.195 iterations 315
Cbc0038I Pass 122: suminf.   11.94929 (96) obj. 383.195 iterations 23
Cbc0038I Pass 123: suminf.    2.92114 (88) obj. 383.195 iterations 235
Cbc0038I Pass 124: suminf.    1.58064 (157) obj. 383.195 iterations 201
Cbc0038I Pass 125: suminf.   12.59982 (129) obj. 383.195 iterations 358
Cbc0038I Pass 126: suminf.   12.14045 (104) obj. 383.195 iterations 59
Cbc0038I Pass 127: suminf.   12.00929 (100) obj. 383.195 iterations 57
Cbc0038I Pass 128: suminf.    7.29116 (58) obj. 383.195 iterations 413
Cbc0038I Pass 129: suminf.    1.58064 (157) obj. 383.195 iterations 337
Cbc0038I Pass 130: suminf.   12.91876 (132) obj. 383.195 iterations 190
Cbc0038I Pass 131: suminf.   11.94929 (96) obj. 383.195 iterations 102
Cbc0038I Pass 132: suminf.   11.94929 (96) obj. 383.195 iterations 4
Cbc0038I Pass 133: suminf.    4.10335 (123) obj. 383.195 iterations 218
Cbc0038I Pass 134: suminf.    1.58064 (157) obj. 383.195 iterations 181
Cbc0038I Pass 135: suminf.   11.95532 (87) obj. 383.195 iterations 426
Cbc0038I Pass 136: suminf.   11.08658 (103) obj. 383.195 iterations 252
Cbc0038I Pass 137: suminf.   11.15156 (158) obj. 383.195 iterations 51
Cbc0038I Pass 138: suminf.    7.55451 (50) obj. 383.195 iterations 391
Cbc0038I Pass 139: suminf.    7.10513 (52) obj. 383.195 iterations 60
Cbc0038I Pass 140: suminf.    7.10513 (52) obj. 383.195 iterations 6
Cbc0038I Pass 141: suminf.   13.18806 (116) obj. 383.195 iterations 330
Cbc0038I Pass 142: suminf.   12.25343 (136) obj. 383.195 iterations 39
Cbc0038I Pass 143: suminf.    5.13613 (74) obj. 383.195 iterations 370
Cbc0038I Pass 144: suminf.    1.32276 (112) obj. 383.195 iterations 478
Cbc0038I Pass 145: suminf.   12.63885 (110) obj. 383.195 iterations 502
Cbc0038I Pass 146: suminf.   12.11456 (131) obj. 383.195 iterations 184
Cbc0038I Pass 147: suminf.   11.26230 (94) obj. 383.195 iterations 44
Cbc0038I Pass 148: suminf.   10.68858 (108) obj. 383.195 iterations 63
Cbc0038I Pass 149: suminf.    9.99541 (106) obj. 383.195 iterations 23
Cbc0038I Pass 150: suminf.    7.60068 (80) obj. 383.195 iterations 714
Cbc0038I Pass 151: suminf.    5.63784 (114) obj. 383.195 iterations 229
Cbc0038I Pass 152: suminf.    5.07575 (131) obj. 383.195 iterations 364
Cbc0038I Pass 153: suminf.    1.49784 (102) obj. 383.195 iterations 433
Cbc0038I Pass 154: suminf.   11.35458 (127) obj. 383.195 iterations 398
Cbc0038I Pass 155: suminf.    9.99541 (106) obj. 383.195 iterations 110
Cbc0038I Pass 156: suminf.    4.41288 (51) obj. 383.195 iterations 226
Cbc0038I Pass 157: suminf.   49.04690 (281) obj. 383.195 iterations 658
Cbc0038I Pass 158: suminf.   31.79503 (165) obj. 383.195 iterations 524
Cbc0038I Pass 159: suminf.   29.61671 (160) obj. 383.195 iterations 70
Cbc0038I Pass 160: suminf.   19.20984 (128) obj. 383.195 iterations 401
Cbc0038I Pass 161: suminf.   19.30082 (158) obj. 383.195 iterations 86
Cbc0038I Pass 162: suminf.   14.84033 (121) obj. 383.195 iterations 177
Cbc0038I Pass 163: suminf.   14.66628 (128) obj. 383.195 iterations 16
Cbc0038I Pass 164: suminf.    7.27527 (121) obj. 383.195 iterations 372
Cbc0038I Pass 165: suminf.    7.36251 (121) obj. 383.195 iterations 18
Cbc0038I Pass 166: suminf.    4.09842 (83) obj. 383.195 iterations 312
Cbc0038I Pass 167: suminf.    4.11007 (84) obj. 383.195 iterations 155
Cbc0038I Pass 168: suminf.   11.33880 (105) obj. 383.195 iterations 324
Cbc0038I Pass 169: suminf.   11.33880 (105) obj. 383.195 iterations 2
Cbc0038I Pass 170: suminf.    6.80732 (54) obj. 383.195 iterations 161
Cbc0038I Pass 171: suminf.    6.46669 (121) obj. 383.195 iterations 197
Cbc0038I Pass 172: suminf.   12.66444 (145) obj. 383.195 iterations 497
Cbc0038I Pass 173: suminf.   12.65896 (153) obj. 383.195 iterations 45
Cbc0038I Pass 174: suminf.    2.34230 (107) obj. 383.195 iterations 463
Cbc0038I Pass 175: suminf.    2.34230 (107) obj. 383.195 iterations 12
Cbc0038I Pass 176: suminf.   74.32022 (343) obj. 383.195 iterations 1199
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 99 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2708 rows 939 columns, reduced to 2479 rows 840 columns - 291 fixed gives 500, 144 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 115 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (6.09 seconds)
Cbc0038I After 6.09 seconds - Feasibility pump exiting with objective of 416 - took 5.25 seconds
Cbc0012I Integer solution of 416 found by feasibility pump after 0 iterations and 0 nodes (6.09 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1730 rows 501 columns - 255 fixed gives 40, 15 - ok now
Cbc0031I 65 added rows had average density of 22.230769
Cbc0013I At root node, 65 cuts changed objective from 255.97435 to 294 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 134 row cuts average 4.1 elements, 2 column cuts (2 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 303 row cuts average 387.4 elements, 0 column cuts (0 active)  in 0.285 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 296 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 28 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 416 best solution, best possible 294 (11.06 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1591 rows 468 columns - 221 fixed gives 42, 16 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1459 rows 439 columns - 190 fixed gives 109, 33 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 8 rows 4 columns
Cbc0010I After 100 nodes, 7 on tree, 416 best solution, best possible 303 (55.18 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1481 rows 432 columns - 197 fixed gives 135, 39 - ok now
Cbc0010I After 200 nodes, 3 on tree, 416 best solution, best possible 313 (93.63 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 641 rows 193 columns
Cbc0010I After 300 nodes, 8 on tree, 416 best solution, best possible 322 (126.52 seconds)
Cbc0010I After 400 nodes, 3 on tree, 416 best solution, best possible 323 (147.34 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 921 rows 274 columns
Cbc0010I After 500 nodes, 6 on tree, 416 best solution, best possible 324 (172.61 seconds)
Cbc0010I After 600 nodes, 18 on tree, 416 best solution, best possible 324 (185.13 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 717 rows 215 columns
Cbc0010I After 700 nodes, 14 on tree, 416 best solution, best possible 324 (195.75 seconds)
Cbc0010I After 800 nodes, 18 on tree, 416 best solution, best possible 324 (207.36 seconds)
Cbc0010I After 900 nodes, 2 on tree, 416 best solution, best possible 324 (220.84 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1401 rows 411 columns - 181 fixed gives 47, 17 - ok now
Cbc0038I Full problem 2708 rows 939 columns, reduced to 665 rows 204 columns
Cbc0010I After 1000 nodes, 14 on tree, 416 best solution, best possible 325 (238.20 seconds)
Cbc0010I After 1100 nodes, 22 on tree, 416 best solution, best possible 325 (248.32 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 673 rows 196 columns
Cbc0010I After 1200 nodes, 11 on tree, 416 best solution, best possible 326 (267.45 seconds)
Cbc0010I After 1300 nodes, 35 on tree, 416 best solution, best possible 326 (277.75 seconds)
Cbc0010I After 1400 nodes, 23 on tree, 416 best solution, best possible 326 (286.38 seconds)
Cbc0010I After 1500 nodes, 21 on tree, 416 best solution, best possible 326 (294.72 seconds)
Cbc0010I After 1600 nodes, 23 on tree, 416 best solution, best possible 326 (301.69 seconds)
Cbc0010I After 1700 nodes, 11 on tree, 416 best solution, best possible 327 (318.16 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 1526 rows 455 columns - 202 fixed gives 108, 35 - ok now
Cbc0010I After 1800 nodes, 3 on tree, 416 best solution, best possible 329 (338.47 seconds)
Cbc0010I After 1900 nodes, 17 on tree, 416 best solution, best possible 329 (346.22 seconds)
Cbc0010I After 2000 nodes, 20 on tree, 416 best solution, best possible 329 (351.81 seconds)
Cbc0010I After 2100 nodes, 27 on tree, 416 best solution, best possible 329 (359.15 seconds)
Cbc0010I After 2200 nodes, 11 on tree, 416 best solution, best possible 329 (366.43 seconds)
Cbc0010I After 2300 nodes, 4 on tree, 416 best solution, best possible 329 (374.04 seconds)
Cbc0010I After 2400 nodes, 16 on tree, 416 best solution, best possible 330 (385.93 seconds)
Cbc0010I After 2500 nodes, 12 on tree, 416 best solution, best possible 331 (399.08 seconds)
Cbc0010I After 2600 nodes, 14 on tree, 416 best solution, best possible 331 (408.77 seconds)
Cbc0010I After 2700 nodes, 13 on tree, 416 best solution, best possible 331 (418.77 seconds)
Cbc0010I After 2800 nodes, 8 on tree, 416 best solution, best possible 331 (427.53 seconds)
Cbc0010I After 2900 nodes, 11 on tree, 416 best solution, best possible 332 (438.14 seconds)
Cbc0010I After 3000 nodes, 18 on tree, 416 best solution, best possible 333 (447.66 seconds)
Cbc0038I Full problem 2708 rows 939 columns, reduced to 980 rows 295 columns
Cbc0010I After 3100 nodes, 9 on tree, 416 best solution, best possible 333 (456.09 seconds)
Cbc0010I After 3200 nodes, 14 on tree, 416 best solution, best possible 333 (465.09 seconds)
Cbc0010I After 3300 nodes, 28 on tree, 416 best solution, best possible 334 (475.62 seconds)
Cbc0004I Integer solution of 334 found after 2054175 iterations and 3337 nodes (476.59 seconds)
Cbc0001I Search completed - best objective 334, took 2054175 iterations and 3337 nodes (476.59 seconds)
Cbc0032I Strong branching done 16424 times (1100028 iterations), fathomed 236 nodes and fixed 2303 variables
Cbc0035I Maximum depth 78, 0 variables fixed on reduced cost
Cuts at root node changed objective from 255.974 to 294
Probing was tried 2481 times and created 40682 cuts of which 0 were active after adding rounds of cuts (2.242 seconds)
Gomory was tried 2334 times and created 3130 cuts of which 0 were active after adding rounds of cuts (6.250 seconds)
Knapsack was tried 11 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 2334 times and created 22919 cuts of which 0 were active after adding rounds of cuts (2.906 seconds)
ZeroHalf was tried 11 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.221 seconds)
ImplicationCuts was tried 46 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                334.00000000
Enumerated nodes:               3337
Total iterations:               2054175
Time (CPU seconds):             476.69
Time (Wallclock seconds):       477.58

Total time (CPU seconds):       476.70   (Wallclock seconds):       477.66

