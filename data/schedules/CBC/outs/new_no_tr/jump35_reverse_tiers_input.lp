Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump35_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump35_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 29696 - 0.30 seconds
Cgl0002I 102 variables fixed
Cgl0003I 0 fixed, 12 tightened bounds, 738 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0004I processed model has 3621 rows, 1141 columns (1141 integer (1105 of which binary)) and 12517 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1141 objects (1141 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 661 integers unsatisfied sum - 219.293
Cbc0038I Pass   1: (1.06 seconds) suminf.   83.70128 (579) obj. 63175 iterations 2070
Cbc0038I Pass   2: (1.19 seconds) suminf.   70.65645 (580) obj. 66858.7 iterations 656
Cbc0038I Pass   3: (1.28 seconds) suminf.   64.48998 (548) obj. 66392 iterations 434
Cbc0038I Pass   4: (1.29 seconds) suminf.   64.88287 (544) obj. 66395.7 iterations 24
Cbc0038I Pass   5: (1.34 seconds) suminf.   63.55389 (553) obj. 66505.6 iterations 163
Cbc0038I Pass   6: (1.35 seconds) suminf.   62.60798 (553) obj. 66513 iterations 34
Cbc0038I Pass   7: (1.38 seconds) suminf.   62.80194 (515) obj. 66484.7 iterations 115
Cbc0038I Pass   8: (1.39 seconds) suminf.   62.56600 (521) obj. 66530 iterations 45
Cbc0038I Pass   9: (1.43 seconds) suminf.   61.77736 (540) obj. 66490 iterations 173
Cbc0038I Pass  10: (1.48 seconds) suminf.   67.15266 (511) obj. 66740.5 iterations 227
Cbc0038I Pass  11: (1.52 seconds) suminf.   64.04213 (501) obj. 66257.8 iterations 160
Cbc0038I Pass  12: (1.59 seconds) suminf.   64.64056 (524) obj. 66749.1 iterations 291
Cbc0038I Pass  13: (1.62 seconds) suminf.   62.76100 (524) obj. 66642.8 iterations 144
Cbc0038I Pass  14: (1.67 seconds) suminf.   66.65029 (496) obj. 66378.8 iterations 182
Cbc0038I Pass  15: (1.70 seconds) suminf.   64.70105 (516) obj. 66632.9 iterations 132
Cbc0038I Pass  16: (1.71 seconds) suminf.   64.87284 (520) obj. 66582.3 iterations 21
Cbc0038I Pass  17: (1.77 seconds) suminf.   62.68358 (521) obj. 66886.9 iterations 228
Cbc0038I Pass  18: (1.79 seconds) suminf.   61.56530 (528) obj. 66691.5 iterations 78
Cbc0038I Pass  19: (1.85 seconds) suminf.   67.46979 (502) obj. 66188.9 iterations 297
Cbc0038I Pass  20: (1.90 seconds) suminf.   64.96955 (495) obj. 66292.6 iterations 212
Cbc0038I Pass  21: (1.91 seconds) suminf.   64.66368 (508) obj. 66314.5 iterations 23
Cbc0038I Pass  22: (1.95 seconds) suminf.   66.40234 (469) obj. 66213.9 iterations 161
Cbc0038I Pass  23: (1.99 seconds) suminf.   64.22930 (511) obj. 66306.1 iterations 127
Cbc0038I Pass  24: (2.00 seconds) suminf.   63.70232 (509) obj. 66315.2 iterations 35
Cbc0038I Pass  25: (2.04 seconds) suminf.   66.48957 (486) obj. 66123.2 iterations 146
Cbc0038I Pass  26: (2.06 seconds) suminf.   64.93902 (495) obj. 66209.3 iterations 87
Cbc0038I Pass  27: (2.08 seconds) suminf.   64.66368 (508) obj. 66314.5 iterations 63
Cbc0038I Pass  28: (2.11 seconds) suminf.   66.23545 (482) obj. 66214.1 iterations 145
Cbc0038I Pass  29: (2.15 seconds) suminf.   64.22930 (511) obj. 66306.1 iterations 152
Cbc0038I Pass  30: (2.16 seconds) suminf.   63.70232 (509) obj. 66315.2 iterations 43
Cbc0038I Pass  31: (2.19 seconds) suminf.   65.18176 (493) obj. 66153.8 iterations 92
Cbc0038I Pass  32: (2.21 seconds) suminf.   64.16185 (498) obj. 66302.6 iterations 72
Cbc0038I Pass  33: (2.22 seconds) suminf.   63.46329 (502) obj. 66328.9 iterations 54
Cbc0038I Pass  34: (2.27 seconds) suminf.   67.32304 (486) obj. 66199.6 iterations 165
Cbc0038I Pass  35: (2.29 seconds) suminf.   65.08937 (511) obj. 66277.6 iterations 100
Cbc0038I Pass  36: (2.30 seconds) suminf.   64.67528 (509) obj. 66303.8 iterations 13
Cbc0038I Pass  37: (2.33 seconds) suminf.   65.66879 (482) obj. 66223.9 iterations 114
Cbc0038I Pass  38: (2.36 seconds) suminf.   64.66370 (503) obj. 66266.2 iterations 120
Cbc0038I Pass  39: (2.38 seconds) suminf.   64.66368 (508) obj. 66314.5 iterations 53
Cbc0038I Pass  40: (2.40 seconds) suminf.   66.04172 (494) obj. 66202.6 iterations 92
Cbc0038I Pass  41: (2.44 seconds) suminf.   64.69036 (504) obj. 66312.3 iterations 157
Cbc0038I Pass  42: (2.71 seconds) suminf.   92.16091 (543) obj. 75495.4 iterations 1472
Cbc0038I Pass  43: (2.86 seconds) suminf.   68.47370 (515) obj. 74741.3 iterations 705
Cbc0038I Pass  44: (2.90 seconds) suminf.   67.84370 (508) obj. 74729.9 iterations 167
Cbc0038I Pass  45: (2.97 seconds) suminf.   61.39402 (503) obj. 69782.3 iterations 300
Cbc0038I Pass  46: (2.99 seconds) suminf.   62.03520 (511) obj. 69828.1 iterations 60
Cbc0038I Pass  47: (3.08 seconds) suminf.   60.30584 (522) obj. 70869.1 iterations 392
Cbc0038I Pass  48: (3.10 seconds) suminf.   62.16319 (545) obj. 70997.4 iterations 76
Cbc0038I Pass  49: (3.18 seconds) suminf.   61.90520 (520) obj. 70908.7 iterations 323
Cbc0038I Pass  50: (3.22 seconds) suminf.   59.07637 (508) obj. 70943.2 iterations 150
Cbc0038I Pass  51: (3.23 seconds) suminf.   58.53970 (509) obj. 70940.9 iterations 25
Cbc0038I Pass  52: (3.33 seconds) suminf.   58.78213 (467) obj. 71069.3 iterations 492
Cbc0038I Pass  53: (3.36 seconds) suminf.   58.61198 (476) obj. 71108.2 iterations 95
Cbc0038I Pass  54: (3.43 seconds) suminf.   58.85019 (474) obj. 71096 iterations 325
Cbc0038I Pass  55: (3.45 seconds) suminf.   59.10038 (476) obj. 71068.3 iterations 41
Cbc0038I Pass  56: (3.52 seconds) suminf.   56.86196 (465) obj. 71730.2 iterations 329
Cbc0038I Pass  57: (3.56 seconds) suminf.   53.41201 (465) obj. 71618.2 iterations 132
Cbc0038I Pass  58: (3.57 seconds) suminf.   53.51199 (464) obj. 71892.6 iterations 30
Cbc0038I Pass  59: (3.64 seconds) suminf.   58.68653 (472) obj. 71612 iterations 302
Cbc0038I Pass  60: (3.68 seconds) suminf.   59.37652 (465) obj. 70865.3 iterations 169
Cbc0038I Pass  61: (3.70 seconds) suminf.   58.50037 (466) obj. 70822.2 iterations 61
Cbc0038I Pass  62: (3.75 seconds) suminf.   60.09701 (480) obj. 70964.5 iterations 176
Cbc0038I Pass  63: (3.78 seconds) suminf.   58.30997 (469) obj. 70907.8 iterations 107
Cbc0038I Pass  64: (3.81 seconds) suminf.   58.11894 (478) obj. 70806 iterations 96
Cbc0038I Pass  65: (3.83 seconds) suminf.   57.00614 (471) obj. 70810.6 iterations 50
Cbc0038I Pass  66: (3.88 seconds) suminf.   60.33365 (476) obj. 70822.4 iterations 237
Cbc0038I Pass  67: (3.92 seconds) suminf.   57.76922 (473) obj. 70532.7 iterations 123
Cbc0038I Pass  68: (3.97 seconds) suminf.   58.39124 (456) obj. 71190.4 iterations 214
Cbc0038I Pass  69: (3.99 seconds) suminf.   57.94639 (460) obj. 71166.7 iterations 48
Cbc0038I Pass  70: (4.04 seconds) suminf.   58.21333 (446) obj. 72758.4 iterations 176
Cbc0038I Pass  71: (4.06 seconds) suminf.   57.45272 (447) obj. 72845.1 iterations 99
Cbc0038I Pass  72: (4.11 seconds) suminf.   57.75928 (441) obj. 72427.1 iterations 192
Cbc0038I Pass  73: (4.14 seconds) suminf.   57.72262 (451) obj. 72730.6 iterations 95
Cbc0038I Pass  74: (4.14 seconds) suminf.   57.59239 (447) obj. 72721.1 iterations 9
Cbc0038I Pass  75: (4.19 seconds) suminf.   57.59585 (441) obj. 71803.3 iterations 170
Cbc0038I Pass  76: (4.21 seconds) suminf.   56.83024 (443) obj. 72629.4 iterations 78
Cbc0038I Pass  77: (4.25 seconds) suminf.   58.41254 (458) obj. 72536.2 iterations 141
Cbc0038I Pass  78: (4.28 seconds) suminf.   56.79535 (453) obj. 72792.9 iterations 96
Cbc0038I Pass  79: (4.32 seconds) suminf.   56.35533 (445) obj. 71448 iterations 139
Cbc0038I Pass  80: (4.34 seconds) suminf.   58.68320 (446) obj. 70744.2 iterations 99
Cbc0038I Pass  81: (4.35 seconds) suminf.   58.68320 (446) obj. 70744.2 iterations 1
Cbc0038I Pass  82: (4.40 seconds) suminf.   59.30237 (444) obj. 72757.6 iterations 186
Cbc0038I Pass  83: (4.42 seconds) suminf.   58.81863 (443) obj. 72787.6 iterations 60
Cbc0038I Pass  84: (4.47 seconds) suminf.   57.16242 (450) obj. 72024.5 iterations 211
Cbc0038I Pass  85: (4.49 seconds) suminf.   56.93146 (446) obj. 72917.5 iterations 91
Cbc0038I Pass  86: (4.54 seconds) suminf.   57.81010 (460) obj. 70732.5 iterations 165
Cbc0038I Pass  87: (4.56 seconds) suminf.   57.21897 (454) obj. 70864.3 iterations 93
Cbc0038I Pass  88: (4.57 seconds) suminf.   57.21897 (454) obj. 70864.3 iterations 4
Cbc0038I Pass  89: (4.62 seconds) suminf.   57.83479 (444) obj. 72379.2 iterations 233
Cbc0038I Pass  90: (4.65 seconds) suminf.   55.84411 (440) obj. 72452.1 iterations 111
Cbc0038I Pass  91: (4.72 seconds) suminf.   58.23708 (458) obj. 71896 iterations 327
Cbc0038I Pass  92: (4.76 seconds) suminf.   56.32460 (447) obj. 72498 iterations 142
Cbc0038I Pass  93: (4.78 seconds) suminf.   56.23027 (450) obj. 72470.2 iterations 76
Cbc0038I Pass  94: (4.84 seconds) suminf.   53.24351 (432) obj. 69426.7 iterations 271
Cbc0038I Pass  95: (4.86 seconds) suminf.   52.89030 (425) obj. 68918.5 iterations 87
Cbc0038I Pass  96: (4.90 seconds) suminf.   52.71788 (415) obj. 69799.6 iterations 147
Cbc0038I Pass  97: (4.91 seconds) suminf.   52.81086 (414) obj. 69786.5 iterations 8
Cbc0038I Pass  98: (4.96 seconds) suminf.   52.43330 (435) obj. 73096.6 iterations 235
Cbc0038I Pass  99: (4.98 seconds) suminf.   52.51198 (424) obj. 72380.8 iterations 95
Cbc0038I Pass 100: (5.20 seconds) suminf.   79.06271 (506) obj. 78129 iterations 1181
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3621 rows 1141 columns, reduced to 3411 rows 1038 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.22 seconds)
Cbc0038I After 5.22 seconds - Feasibility pump exiting - took 4.56 seconds
Cbc0031I 134 added rows had average density of 13.447761
Cbc0013I At root node, 134 cuts changed objective from 29696 to 34816 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 220 row cuts average 6.6 elements, 6 column cuts (31 active)  in 0.337 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 855 row cuts average 58.3 elements, 0 column cuts (0 active)  in 1.869 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1555 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 34816 (62.43 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 34818 (148.49 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 34821 (212.46 seconds)
Cbc0010I After 300 nodes, 8 on tree, 1e+50 best solution, best possible 34822 (291.03 seconds)
Cbc0010I After 400 nodes, 18 on tree, 1e+50 best solution, best possible 34822 (352.38 seconds)
Cbc0010I After 500 nodes, 29 on tree, 1e+50 best solution, best possible 34822 (411.43 seconds)
Cbc0010I After 600 nodes, 41 on tree, 1e+50 best solution, best possible 34822 (484.00 seconds)
Cbc0010I After 700 nodes, 50 on tree, 1e+50 best solution, best possible 34822 (547.64 seconds)
Cbc0010I After 800 nodes, 51 on tree, 1e+50 best solution, best possible 34822 (613.00 seconds)
Cbc0010I After 900 nodes, 61 on tree, 1e+50 best solution, best possible 34822 (672.39 seconds)
Cbc0010I After 1000 nodes, 93 on tree, 1e+50 best solution, best possible 34822 (732.66 seconds)
Cbc0010I After 1100 nodes, 86 on tree, 1e+50 best solution, best possible 34824 (790.71 seconds)
Cbc0010I After 1200 nodes, 84 on tree, 1e+50 best solution, best possible 34824 (853.54 seconds)
Cbc0010I After 1300 nodes, 82 on tree, 1e+50 best solution, best possible 34824 (913.22 seconds)
Cbc0010I After 1400 nodes, 75 on tree, 1e+50 best solution, best possible 34824 (968.36 seconds)
Cbc0010I After 1500 nodes, 72 on tree, 1e+50 best solution, best possible 34824 (1019.50 seconds)
Cbc0010I After 1600 nodes, 68 on tree, 1e+50 best solution, best possible 34824 (1068.30 seconds)
Cbc0010I After 1700 nodes, 51 on tree, 1e+50 best solution, best possible 34824 (1122.08 seconds)
Cbc0010I After 1800 nodes, 56 on tree, 1e+50 best solution, best possible 34824 (1165.33 seconds)
Cbc0010I After 1900 nodes, 44 on tree, 1e+50 best solution, best possible 34824 (1214.57 seconds)
Cbc0010I After 2000 nodes, 22 on tree, 1e+50 best solution, best possible 34824 (1274.07 seconds)
Cbc0010I After 2100 nodes, 13 on tree, 1e+50 best solution, best possible 34824 (1309.01 seconds)
Cbc0010I After 2200 nodes, 11 on tree, 1e+50 best solution, best possible 34824 (1348.88 seconds)
Cbc0010I After 2300 nodes, 13 on tree, 1e+50 best solution, best possible 34824 (1385.49 seconds)
Cbc0010I After 2400 nodes, 13 on tree, 1e+50 best solution, best possible 34824 (1422.87 seconds)
Cbc0010I After 2500 nodes, 11 on tree, 1e+50 best solution, best possible 34824 (1462.49 seconds)
Cbc0010I After 2600 nodes, 11 on tree, 1e+50 best solution, best possible 34824 (1502.28 seconds)
Cbc0010I After 2700 nodes, 12 on tree, 1e+50 best solution, best possible 34824 (1548.14 seconds)
Cbc0010I After 2800 nodes, 14 on tree, 1e+50 best solution, best possible 34824 (1594.00 seconds)
Cbc0010I After 2900 nodes, 13 on tree, 1e+50 best solution, best possible 34824 (1638.93 seconds)
Cbc0010I After 3000 nodes, 14 on tree, 1e+50 best solution, best possible 34824 (1684.89 seconds)
Cbc0010I After 3100 nodes, 11 on tree, 1e+50 best solution, best possible 34824 (1726.10 seconds)
Cbc0010I After 3200 nodes, 12 on tree, 1e+50 best solution, best possible 34824 (1769.32 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 34824), took 4736098 iterations and 3271 nodes (1800.23 seconds)
Cbc0032I Strong branching done 22408 times (1958598 iterations), fathomed 193 nodes and fixed 1961 variables
Cbc0035I Maximum depth 201, 0 variables fixed on reduced cost
Cuts at root node changed objective from 29696 to 34816
Probing was tried 2572 times and created 110615 cuts of which 25 were active after adding rounds of cuts (11.334 seconds)
Gomory was tried 2120 times and created 2360 cuts of which 0 were active after adding rounds of cuts (16.472 seconds)
Knapsack was tried 48 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.068 seconds)
Clique was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.093 seconds)
MixedIntegerRounding2 was tried 48 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.083 seconds)
FlowCover was tried 48 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
TwoMirCuts was tried 2120 times and created 31604 cuts of which 0 were active after adding rounds of cuts (5.129 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
ImplicationCuts was tried 96 times and created 188 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    34824.000
Enumerated nodes:               3271
Total iterations:               4736098
Time (CPU seconds):             1800.24
Time (Wallclock seconds):       1823.41

Total time (CPU seconds):       1800.25   (Wallclock seconds):       1823.43

