Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 295.613 - 1.53 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 23 tightened bounds, 948 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 761 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 356 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 315 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 194 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 127 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 104 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 15994 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 831 integers unsatisfied sum - 212.704
Cbc0038I Pass   1: (3.08 seconds) suminf.   80.67571 (595) obj. 467.318 iterations 2444
Cbc0038I Pass   2: (3.27 seconds) suminf.   70.08025 (657) obj. 501.159 iterations 1003
Cbc0038I Pass   3: (3.33 seconds) suminf.   68.09100 (659) obj. 501.016 iterations 209
Cbc0038I Pass   4: (3.34 seconds) suminf.   67.86792 (671) obj. 500.325 iterations 33
Cbc0038I Pass   5: (3.43 seconds) suminf.   68.48216 (629) obj. 497.326 iterations 362
Cbc0038I Pass   6: (3.48 seconds) suminf.   66.50294 (651) obj. 499.222 iterations 164
Cbc0038I Pass   7: (3.55 seconds) suminf.   64.13316 (655) obj. 499.788 iterations 330
Cbc0038I Pass   8: (3.61 seconds) suminf.   64.45131 (681) obj. 503.715 iterations 261
Cbc0038I Pass   9: (3.66 seconds) suminf.   62.16725 (693) obj. 504.522 iterations 166
Cbc0038I Pass  10: (3.73 seconds) suminf.   55.86823 (697) obj. 506.339 iterations 251
Cbc0038I Pass  11: (3.80 seconds) suminf.   51.15583 (715) obj. 511.221 iterations 331
Cbc0038I Pass  12: (3.98 seconds) suminf.   44.05330 (663) obj. 513.55 iterations 964
Cbc0038I Pass  13: (4.08 seconds) suminf.   43.30780 (658) obj. 512.978 iterations 441
Cbc0038I Pass  14: (4.12 seconds) suminf.   43.24478 (647) obj. 513.313 iterations 131
Cbc0038I Pass  15: (4.27 seconds) suminf.   48.80955 (661) obj. 509.851 iterations 741
Cbc0038I Pass  16: (4.36 seconds) suminf.   45.24558 (623) obj. 510.021 iterations 416
Cbc0038I Pass  17: (4.40 seconds) suminf.   45.98358 (643) obj. 509.796 iterations 170
Cbc0038I Pass  18: (4.50 seconds) suminf.   44.18440 (638) obj. 518.024 iterations 445
Cbc0038I Pass  19: (4.58 seconds) suminf.   44.09788 (638) obj. 512.653 iterations 323
Cbc0038I Pass  20: (4.70 seconds) suminf.   42.40564 (624) obj. 510.958 iterations 524
Cbc0038I Pass  21: (4.79 seconds) suminf.   41.72748 (621) obj. 512.848 iterations 363
Cbc0038I Pass  22: (4.87 seconds) suminf.   44.10331 (614) obj. 511.604 iterations 339
Cbc0038I Pass  23: (4.97 seconds) suminf.   42.07892 (629) obj. 513.597 iterations 473
Cbc0038I Pass  24: (5.08 seconds) suminf.   46.58815 (650) obj. 517.521 iterations 539
Cbc0038I Pass  25: (5.20 seconds) suminf.   42.38129 (692) obj. 513.505 iterations 552
Cbc0038I Pass  26: (5.26 seconds) suminf.   41.80755 (671) obj. 513.829 iterations 186
Cbc0038I Pass  27: (5.45 seconds) suminf.   46.73664 (676) obj. 529.948 iterations 971
Cbc0038I Pass  28: (5.52 seconds) suminf.   43.62606 (638) obj. 521.465 iterations 271
Cbc0038I Pass  29: (5.60 seconds) suminf.   42.58482 (639) obj. 520.636 iterations 302
Cbc0038I Pass  30: (5.73 seconds) suminf.   45.88627 (639) obj. 543.139 iterations 601
Cbc0038I Pass  31: (5.87 seconds) suminf.   41.03748 (646) obj. 513.523 iterations 709
Cbc0038I Pass  32: (5.92 seconds) suminf.   40.25463 (662) obj. 513.427 iterations 183
Cbc0038I Pass  33: (6.06 seconds) suminf.   41.62063 (652) obj. 515.411 iterations 700
Cbc0038I Pass  34: (6.20 seconds) suminf.   40.23921 (643) obj. 521.175 iterations 675
Cbc0038I Pass  35: (6.27 seconds) suminf.   40.13356 (631) obj. 513.768 iterations 270
Cbc0038I Pass  36: (6.36 seconds) suminf.   43.13715 (634) obj. 514.427 iterations 391
Cbc0038I Pass  37: (6.47 seconds) suminf.   40.45275 (657) obj. 523.794 iterations 531
Cbc0038I Pass  38: (6.61 seconds) suminf.   40.69472 (645) obj. 530.518 iterations 682
Cbc0038I Pass  39: (6.69 seconds) suminf.   39.14596 (621) obj. 531.95 iterations 324
Cbc0038I Pass  40: (6.72 seconds) suminf.   39.40493 (631) obj. 530.51 iterations 139
Cbc0038I Pass  41: (6.83 seconds) suminf.   41.37179 (659) obj. 538.379 iterations 515
Cbc0038I Pass  42: (6.92 seconds) suminf.   39.47224 (630) obj. 541.067 iterations 434
Cbc0038I Pass  43: (6.96 seconds) suminf.   39.00949 (631) obj. 532.319 iterations 152
Cbc0038I Pass  44: (7.08 seconds) suminf.   43.21593 (634) obj. 534.201 iterations 578
Cbc0038I Pass  45: (7.18 seconds) suminf.   39.41557 (627) obj. 534.447 iterations 518
Cbc0038I Pass  46: (7.24 seconds) suminf.   39.12933 (629) obj. 530.682 iterations 236
Cbc0038I Pass  47: (7.35 seconds) suminf.   40.53575 (634) obj. 537.02 iterations 541
Cbc0038I Pass  48: (7.44 seconds) suminf.   39.09082 (645) obj. 530.116 iterations 444
Cbc0038I Pass  49: (7.49 seconds) suminf.   39.18218 (633) obj. 519.566 iterations 205
Cbc0038I Pass  50: (7.60 seconds) suminf.   41.67759 (645) obj. 513.887 iterations 520
Cbc0038I Pass  51: (7.68 seconds) suminf.   39.30832 (633) obj. 513.611 iterations 361
Cbc0038I Pass  52: (7.84 seconds) suminf.   46.49522 (625) obj. 531.056 iterations 753
Cbc0038I Pass  53: (7.95 seconds) suminf.   44.16127 (646) obj. 532.695 iterations 528
Cbc0038I Pass  54: (8.02 seconds) suminf.   42.82991 (618) obj. 519.602 iterations 289
Cbc0038I Pass  55: (8.15 seconds) suminf.   44.22206 (631) obj. 567.28 iterations 652
Cbc0038I Pass  56: (8.24 seconds) suminf.   40.18680 (618) obj. 581.58 iterations 412
Cbc0038I Pass  57: (8.26 seconds) suminf.   39.27803 (625) obj. 581.032 iterations 63
Cbc0038I Pass  58: (8.38 seconds) suminf.   40.10974 (629) obj. 579.631 iterations 624
Cbc0038I Pass  59: (8.46 seconds) suminf.   38.97009 (624) obj. 579.855 iterations 377
Cbc0038I Pass  60: (8.56 seconds) suminf.   40.20511 (620) obj. 585.723 iterations 438
Cbc0038I Pass  61: (8.66 seconds) suminf.   40.82274 (645) obj. 584.235 iterations 394
Cbc0038I Pass  62: (8.75 seconds) suminf.   40.59098 (634) obj. 577.464 iterations 403
Cbc0038I Pass  63: (8.84 seconds) suminf.   40.67334 (614) obj. 583.057 iterations 409
Cbc0038I Pass  64: (8.96 seconds) suminf.   46.66252 (635) obj. 595.132 iterations 629
Cbc0038I Pass  65: (9.09 seconds) suminf.   43.17208 (616) obj. 589.066 iterations 602
Cbc0038I Pass  66: (9.10 seconds) suminf.   43.21211 (625) obj. 589.136 iterations 42
Cbc0038I Pass  67: (9.23 seconds) suminf.   45.71905 (635) obj. 601.667 iterations 622
Cbc0038I Pass  68: (9.32 seconds) suminf.   44.59329 (647) obj. 604.344 iterations 403
Cbc0038I Pass  69: (9.36 seconds) suminf.   43.78313 (633) obj. 623.72 iterations 132
Cbc0038I Pass  70: (9.43 seconds) suminf.   41.70955 (668) obj. 626.229 iterations 213
Cbc0038I Pass  71: (9.56 seconds) suminf.   44.25536 (615) obj. 634.006 iterations 622
Cbc0038I Pass  72: (9.66 seconds) suminf.   44.04503 (645) obj. 628.343 iterations 407
Cbc0038I Pass  73: (9.72 seconds) suminf.   42.62927 (641) obj. 627.975 iterations 246
Cbc0038I Pass  74: (9.75 seconds) suminf.   42.51240 (640) obj. 631.067 iterations 83
Cbc0038I Pass  75: (9.88 seconds) suminf.   41.58693 (616) obj. 627.055 iterations 585
Cbc0038I Pass  76: (9.90 seconds) suminf.   41.53798 (614) obj. 627.171 iterations 88
Cbc0038I Pass  77: (10.03 seconds) suminf.   43.84062 (600) obj. 632.205 iterations 622
Cbc0038I Pass  78: (10.16 seconds) suminf.   41.08622 (608) obj. 633.495 iterations 622
Cbc0038I Pass  79: (10.18 seconds) suminf.   41.14644 (611) obj. 633.492 iterations 54
Cbc0038I Pass  80: (10.32 seconds) suminf.   42.66672 (611) obj. 629.237 iterations 705
Cbc0038I Pass  81: (10.35 seconds) suminf.   41.90466 (604) obj. 629.19 iterations 110
Cbc0038I Pass  82: (10.53 seconds) suminf.   35.77909 (595) obj. 619.437 iterations 851
Cbc0038I Pass  83: (10.55 seconds) suminf.   35.28372 (603) obj. 620.289 iterations 63
Cbc0038I Pass  84: (10.75 seconds) suminf.   39.54668 (550) obj. 683.973 iterations 1030
Cbc0038I Pass  85: (10.79 seconds) suminf.   38.38365 (548) obj. 684.157 iterations 175
Cbc0038I Pass  86: (10.83 seconds) suminf.   37.48134 (560) obj. 684.785 iterations 139
Cbc0038I Pass  87: (10.98 seconds) suminf.   38.99155 (597) obj. 676.647 iterations 737
Cbc0038I Pass  88: (11.00 seconds) suminf.   38.49155 (585) obj. 676.03 iterations 64
Cbc0038I Pass  89: (11.03 seconds) suminf.   37.56641 (580) obj. 676.326 iterations 93
Cbc0038I Pass  90: (11.20 seconds) suminf.   38.29843 (561) obj. 686.623 iterations 851
Cbc0038I Pass  91: (11.28 seconds) suminf.   39.99740 (572) obj. 687.249 iterations 382
Cbc0038I Pass  92: (11.39 seconds) suminf.   38.55006 (565) obj. 674.372 iterations 486
Cbc0038I Pass  93: (11.51 seconds) suminf.   38.23152 (596) obj. 687.214 iterations 563
Cbc0038I Pass  94: (11.63 seconds) suminf.   38.39284 (587) obj. 677.338 iterations 550
Cbc0038I Pass  95: (11.74 seconds) suminf.   34.47905 (581) obj. 672.696 iterations 499
Cbc0038I Pass  96: (11.88 seconds) suminf.   37.05425 (560) obj. 685.984 iterations 693
Cbc0038I Pass  97: (11.93 seconds) suminf.   38.01614 (555) obj. 684.81 iterations 169
Cbc0038I Pass  98: (12.08 seconds) suminf.   38.19253 (587) obj. 674.775 iterations 738
Cbc0038I Pass  99: (12.13 seconds) suminf.   37.38077 (561) obj. 675.028 iterations 208
Cbc0038I Pass 100: (12.42 seconds) suminf.   86.24836 (728) obj. 668.099 iterations 1523
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4198 rows 1387 columns - too large
Cbc0038I Mini branch and bound did not improve solution (12.46 seconds)
Cbc0038I After 12.46 seconds - Feasibility pump exiting - took 9.87 seconds
Cbc0031I 88 added rows had average density of 15.920455
Cbc0013I At root node, 88 cuts changed objective from 295.88597 to 348 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 116 row cuts average 391.5 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 315 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 348 (22.70 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 373.86632 (120.66 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 373.86632 (160.13 seconds)
Cbc0010I After 300 nodes, 24 on tree, 1e+50 best solution, best possible 373.86632 (230.12 seconds)
Cbc0010I After 400 nodes, 23 on tree, 1e+50 best solution, best possible 373.86632 (329.80 seconds)
Cbc0010I After 500 nodes, 9 on tree, 1e+50 best solution, best possible 373.86632 (440.14 seconds)
Cbc0010I After 600 nodes, 26 on tree, 1e+50 best solution, best possible 373.86632 (503.16 seconds)
Cbc0010I After 700 nodes, 38 on tree, 1e+50 best solution, best possible 373.86632 (548.44 seconds)
Cbc0010I After 800 nodes, 49 on tree, 1e+50 best solution, best possible 373.86632 (598.51 seconds)
Cbc0010I After 900 nodes, 51 on tree, 1e+50 best solution, best possible 373.86632 (664.33 seconds)
Cbc0010I After 1000 nodes, 70 on tree, 1e+50 best solution, best possible 373.86632 (726.37 seconds)
Cbc0010I After 1100 nodes, 62 on tree, 1e+50 best solution, best possible 376 (792.01 seconds)
Cbc0010I After 1200 nodes, 66 on tree, 1e+50 best solution, best possible 376 (864.38 seconds)
Cbc0010I After 1300 nodes, 61 on tree, 1e+50 best solution, best possible 376 (942.13 seconds)
Cbc0010I After 1400 nodes, 50 on tree, 1e+50 best solution, best possible 376 (1029.76 seconds)
Cbc0010I After 1500 nodes, 44 on tree, 1e+50 best solution, best possible 376 (1095.84 seconds)
Cbc0010I After 1600 nodes, 33 on tree, 1e+50 best solution, best possible 376 (1160.02 seconds)
Cbc0010I After 1700 nodes, 27 on tree, 1e+50 best solution, best possible 376 (1220.02 seconds)
Cbc0010I After 1800 nodes, 30 on tree, 1e+50 best solution, best possible 376 (1294.52 seconds)
Cbc0010I After 1900 nodes, 21 on tree, 1e+50 best solution, best possible 376 (1348.66 seconds)
Cbc0010I After 2000 nodes, 18 on tree, 1e+50 best solution, best possible 376 (1434.82 seconds)
Cbc0010I After 2100 nodes, 22 on tree, 1e+50 best solution, best possible 376 (1509.55 seconds)
Cbc0010I After 2200 nodes, 14 on tree, 1e+50 best solution, best possible 376 (1574.32 seconds)
Cbc0010I After 2300 nodes, 19 on tree, 1e+50 best solution, best possible 376 (1635.96 seconds)
Cbc0010I After 2400 nodes, 10 on tree, 1e+50 best solution, best possible 376 (1703.33 seconds)
Cbc0010I After 2500 nodes, 26 on tree, 1e+50 best solution, best possible 376 (1744.99 seconds)
Cbc0010I After 2600 nodes, 19 on tree, 1e+50 best solution, best possible 376 (1778.61 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 376), took 4819109 iterations and 2661 nodes (1799.00 seconds)
Cbc0032I Strong branching done 24962 times (1952546 iterations), fathomed 171 nodes and fixed 2659 variables
Cbc0035I Maximum depth 58, 0 variables fixed on reduced cost
Cuts at root node changed objective from 295.886 to 348
Probing was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.114 seconds)
Gomory was tried 1857 times and created 1742 cuts of which 0 were active after adding rounds of cuts (11.775 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 1857 times and created 19926 cuts of which 0 were active after adding rounds of cuts (3.837 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
ImplicationCuts was tried 57 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    376.000
Enumerated nodes:               2661
Total iterations:               4819109
Time (CPU seconds):             1799.00
Time (Wallclock seconds):       1805.08

Total time (CPU seconds):       1799.02   (Wallclock seconds):       1805.10

