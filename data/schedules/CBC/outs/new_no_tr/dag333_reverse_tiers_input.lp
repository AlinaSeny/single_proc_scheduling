Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag333_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/dag333_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 720896 - 1.00 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 7 tightened bounds, 1253 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 302 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 7104 rows, 2453 columns (2453 integer (2409 of which binary)) and 23188 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2453 objects (2453 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1025 integers unsatisfied sum - 353.504
Cbc0038I Pass   1: (5.14 seconds) suminf.  162.23536 (1119) obj. 1.01233e+06 iterations 3322
Cbc0038I Pass   2: (5.96 seconds) suminf.  105.84144 (1203) obj. 1.11257e+06 iterations 2337
Cbc0038I Pass   3: (6.39 seconds) suminf.   90.64735 (1166) obj. 1.14192e+06 iterations 1089
Cbc0038I Pass   4: (6.56 seconds) suminf.   89.45977 (1160) obj. 1.14395e+06 iterations 382
Cbc0038I Pass   5: (6.80 seconds) suminf.   89.02203 (1157) obj. 1.21351e+06 iterations 640
Cbc0038I Pass   6: (7.04 seconds) suminf.   86.31291 (1168) obj. 1.21667e+06 iterations 551
Cbc0038I Pass   7: (7.15 seconds) suminf.   85.89045 (1217) obj. 1.20249e+06 iterations 196
Cbc0038I Pass   8: (7.40 seconds) suminf.   87.12406 (1193) obj. 1.20005e+06 iterations 615
Cbc0038I Pass   9: (7.48 seconds) suminf.   85.83679 (1184) obj. 1.19985e+06 iterations 136
Cbc0038I Pass  10: (7.64 seconds) suminf.   85.15838 (1181) obj. 1.19208e+06 iterations 335
Cbc0038I Pass  11: (8.10 seconds) suminf.   84.95839 (1188) obj. 1.21218e+06 iterations 1107
Cbc0038I Pass  12: (8.39 seconds) suminf.   81.71846 (1234) obj. 1.22864e+06 iterations 659
Cbc0038I Pass  13: (8.59 seconds) suminf.   80.77727 (1248) obj. 1.22597e+06 iterations 395
Cbc0038I Pass  14: (9.11 seconds) suminf.   80.94951 (1250) obj. 1.34244e+06 iterations 1326
Cbc0038I Pass  15: (9.27 seconds) suminf.   79.45742 (1235) obj. 1.33014e+06 iterations 331
Cbc0038I Pass  16: (9.73 seconds) suminf.   79.27066 (1202) obj. 1.25602e+06 iterations 1097
Cbc0038I Pass  17: (9.94 seconds) suminf.   78.01782 (1203) obj. 1.24425e+06 iterations 444
Cbc0038I Pass  18: (10.54 seconds) suminf.   80.28072 (1267) obj. 1.36186e+06 iterations 1419
Cbc0038I Pass  19: (10.76 seconds) suminf.   79.31692 (1259) obj. 1.35311e+06 iterations 497
Cbc0038I Pass  20: (10.84 seconds) suminf.   78.63357 (1266) obj. 1.36092e+06 iterations 134
Cbc0038I Pass  21: (11.21 seconds) suminf.   78.30170 (1266) obj. 1.39438e+06 iterations 827
Cbc0038I Pass  22: (11.31 seconds) suminf.   77.86591 (1268) obj. 1.39538e+06 iterations 172
Cbc0038I Pass  23: (11.74 seconds) suminf.   78.21357 (1249) obj. 1.37495e+06 iterations 1050
Cbc0038I Pass  24: (11.97 seconds) suminf.   76.28235 (1267) obj. 1.37762e+06 iterations 507
Cbc0038I Pass  25: (12.31 seconds) suminf.   75.99843 (1259) obj. 1.36942e+06 iterations 776
Cbc0038I Pass  26: (12.35 seconds) suminf.   75.51891 (1266) obj. 1.37083e+06 iterations 69
Cbc0038I Pass  27: (12.70 seconds) suminf.   75.05526 (1273) obj. 1.3992e+06 iterations 806
Cbc0038I Pass  28: (12.92 seconds) suminf.   71.60172 (1293) obj. 1.39111e+06 iterations 418
Cbc0038I Pass  29: (13.09 seconds) suminf.   70.14098 (1277) obj. 1.39052e+06 iterations 308
Cbc0038I Pass  30: (13.39 seconds) suminf.   74.69616 (1215) obj. 1.36105e+06 iterations 713
Cbc0038I Pass  31: (13.52 seconds) suminf.   72.72520 (1235) obj. 1.36194e+06 iterations 235
Cbc0038I Pass  32: (13.66 seconds) suminf.   71.44552 (1246) obj. 1.36518e+06 iterations 287
Cbc0038I Pass  33: (14.12 seconds) suminf.   70.21790 (1248) obj. 1.3939e+06 iterations 1122
Cbc0038I Pass  34: (14.34 seconds) suminf.   69.61594 (1237) obj. 1.39261e+06 iterations 447
Cbc0038I Pass  35: (14.57 seconds) suminf.   70.83617 (1200) obj. 1.35964e+06 iterations 567
Cbc0038I Pass  36: (14.71 seconds) suminf.   69.87923 (1212) obj. 1.36709e+06 iterations 256
Cbc0038I Pass  37: (15.03 seconds) suminf.   71.21483 (1258) obj. 1.39436e+06 iterations 751
Cbc0038I Pass  38: (15.19 seconds) suminf.   70.10621 (1281) obj. 1.3953e+06 iterations 320
Cbc0038I Pass  39: (15.51 seconds) suminf.   70.62111 (1202) obj. 1.36725e+06 iterations 776
Cbc0038I Pass  40: (15.65 seconds) suminf.   69.81665 (1200) obj. 1.36731e+06 iterations 268
Cbc0038I Pass  41: (15.94 seconds) suminf.   71.99607 (1240) obj. 1.39465e+06 iterations 686
Cbc0038I Pass  42: (16.12 seconds) suminf.   70.13305 (1290) obj. 1.39308e+06 iterations 317
Cbc0038I Pass  43: (16.41 seconds) suminf.   69.79112 (1213) obj. 1.36702e+06 iterations 698
Cbc0038I Pass  44: (16.44 seconds) suminf.   69.87923 (1212) obj. 1.36709e+06 iterations 57
Cbc0038I Pass  45: (16.69 seconds) suminf.   70.59182 (1273) obj. 1.39389e+06 iterations 636
Cbc0038I Pass  46: (16.80 seconds) suminf.   70.10621 (1281) obj. 1.3953e+06 iterations 189
Cbc0038I Pass  47: (17.14 seconds) suminf.   70.47066 (1204) obj. 1.36732e+06 iterations 772
Cbc0038I Pass  48: (17.28 seconds) suminf.   69.81665 (1200) obj. 1.36731e+06 iterations 267
Cbc0038I Pass  49: (17.54 seconds) suminf.   74.48774 (1264) obj. 1.39198e+06 iterations 624
Cbc0038I Pass  50: (17.71 seconds) suminf.   71.48718 (1249) obj. 1.39202e+06 iterations 338
Cbc0038I Pass  51: (18.03 seconds) suminf.   70.51569 (1213) obj. 1.36993e+06 iterations 814
Cbc0038I Pass  52: (18.10 seconds) suminf.   69.40719 (1227) obj. 1.36541e+06 iterations 133
Cbc0038I Pass  53: (18.43 seconds) suminf.   72.82116 (1236) obj. 1.39637e+06 iterations 769
Cbc0038I Pass  54: (18.63 seconds) suminf.   69.39582 (1274) obj. 1.39406e+06 iterations 487
Cbc0038I Pass  55: (18.84 seconds) suminf.   72.54743 (1257) obj. 1.3634e+06 iterations 504
Cbc0038I Pass  56: (18.93 seconds) suminf.   71.89477 (1261) obj. 1.36338e+06 iterations 155
Cbc0038I Pass  57: (19.14 seconds) suminf.   71.51294 (1271) obj. 1.39538e+06 iterations 477
Cbc0038I Pass  58: (19.26 seconds) suminf.   70.10621 (1281) obj. 1.3953e+06 iterations 181
Cbc0038I Pass  59: (19.49 seconds) suminf.   69.96271 (1201) obj. 1.36742e+06 iterations 520
Cbc0038I Pass  60: (19.53 seconds) suminf.   69.81665 (1200) obj. 1.36731e+06 iterations 86
Cbc0038I Pass  61: (19.76 seconds) suminf.   74.38377 (1264) obj. 1.39203e+06 iterations 574
Cbc0038I Pass  62: (19.93 seconds) suminf.   71.48718 (1249) obj. 1.39202e+06 iterations 365
Cbc0038I Pass  63: (20.22 seconds) suminf.   70.34274 (1216) obj. 1.37022e+06 iterations 691
Cbc0038I Pass  64: (20.31 seconds) suminf.   69.62416 (1260) obj. 1.36906e+06 iterations 162
Cbc0038I Pass  65: (20.58 seconds) suminf.   71.40717 (1263) obj. 1.39326e+06 iterations 616
Cbc0038I Pass  66: (20.74 seconds) suminf.   69.39582 (1274) obj. 1.39406e+06 iterations 295
Cbc0038I Pass  67: (21.01 seconds) suminf.   71.19097 (1193) obj. 1.37069e+06 iterations 676
Cbc0038I Pass  68: (21.16 seconds) suminf.   70.62976 (1206) obj. 1.36623e+06 iterations 291
Cbc0038I Pass  69: (21.49 seconds) suminf.   74.23550 (1185) obj. 1.39173e+06 iterations 757
Cbc0038I Pass  70: (21.60 seconds) suminf.   73.69755 (1215) obj. 1.39339e+06 iterations 182
Cbc0038I Pass  71: (21.81 seconds) suminf.   72.01105 (1187) obj. 1.36854e+06 iterations 472
Cbc0038I Pass  72: (21.83 seconds) suminf.   71.24068 (1203) obj. 1.37009e+06 iterations 39
Cbc0038I Pass  73: (22.17 seconds) suminf.   72.22337 (1188) obj. 1.39318e+06 iterations 817
Cbc0038I Pass  74: (22.33 seconds) suminf.   69.37937 (1222) obj. 1.39578e+06 iterations 340
Cbc0038I Pass  75: (22.43 seconds) suminf.   68.24635 (1235) obj. 1.38846e+06 iterations 195
Cbc0038I Pass  76: (22.67 seconds) suminf.   71.13150 (1206) obj. 1.36411e+06 iterations 514
Cbc0038I Pass  77: (22.80 seconds) suminf.   71.48485 (1208) obj. 1.36049e+06 iterations 260
Cbc0038I Pass  78: (23.08 seconds) suminf.   69.23768 (1205) obj. 1.39699e+06 iterations 666
Cbc0038I Pass  79: (23.24 seconds) suminf.   69.51052 (1216) obj. 1.39605e+06 iterations 279
Cbc0038I Pass  80: (23.36 seconds) suminf.   68.24635 (1235) obj. 1.38846e+06 iterations 200
Cbc0038I Pass  81: (23.57 seconds) suminf.   69.00378 (1203) obj. 1.37306e+06 iterations 502
Cbc0038I Pass  82: (23.71 seconds) suminf.   67.48740 (1196) obj. 1.37074e+06 iterations 298
Cbc0038I Pass  83: (24.05 seconds) suminf.   73.47485 (1221) obj. 1.39477e+06 iterations 812
Cbc0038I Pass  84: (24.17 seconds) suminf.   73.85288 (1212) obj. 1.39508e+06 iterations 191
Cbc0038I Pass  85: (24.31 seconds) suminf.   73.84025 (1242) obj. 1.39472e+06 iterations 289
Cbc0038I Pass  86: (24.65 seconds) suminf.   71.54817 (1200) obj. 1.35458e+06 iterations 826
Cbc0038I Pass  87: (24.80 seconds) suminf.   69.82586 (1179) obj. 1.36243e+06 iterations 291
Cbc0038I Pass  88: (24.84 seconds) suminf.   70.01446 (1179) obj. 1.36188e+06 iterations 53
Cbc0038I Pass  89: (25.11 seconds) suminf.   71.42570 (1214) obj. 1.40221e+06 iterations 636
Cbc0038I Pass  90: (25.26 seconds) suminf.   71.23689 (1233) obj. 1.3956e+06 iterations 311
Cbc0038I Pass  91: (25.54 seconds) suminf.   74.59410 (1195) obj. 1.36894e+06 iterations 620
Cbc0038I Pass  92: (25.64 seconds) suminf.   73.64355 (1210) obj. 1.36956e+06 iterations 169
Cbc0038I Pass  93: (25.92 seconds) suminf.   71.05357 (1201) obj. 1.39686e+06 iterations 649
Cbc0038I Pass  94: (26.06 seconds) suminf.   71.84661 (1219) obj. 1.40316e+06 iterations 228
Cbc0038I Pass  95: (26.36 seconds) suminf.   73.27641 (1203) obj. 1.3585e+06 iterations 767
Cbc0038I Pass  96: (26.53 seconds) suminf.   70.62942 (1197) obj. 1.36509e+06 iterations 400
Cbc0038I Pass  97: (26.79 seconds) suminf.   72.71741 (1223) obj. 1.39457e+06 iterations 564
Cbc0038I Pass  98: (26.94 seconds) suminf.   73.81905 (1231) obj. 1.40141e+06 iterations 246
Cbc0038I Pass  99: (27.22 seconds) suminf.   69.85495 (1166) obj. 1.36494e+06 iterations 675
Cbc0038I Pass 100: (27.80 seconds) suminf.  102.16096 (1195) obj. 1.39162e+06 iterations 1774
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 411 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7104 rows 2453 columns, reduced to 6065 rows 1995 columns - too large
Cbc0038I Mini branch and bound did not improve solution (29.18 seconds)
Cbc0038I After 29.18 seconds - Feasibility pump exiting - took 25.33 seconds
Cbc0031I 38 added rows had average density of 10.157895
Cbc0013I At root node, 38 cuts changed objective from 720896 to 851968 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.212 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 51 row cuts average 10.7 elements, 0 column cuts (0 active)  in 1.103 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 73 row cuts average 12.1 elements, 0 column cuts (0 active)  in 0.556 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 851968 (43.80 seconds)
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 851968 (242.03 seconds)
Cbc0010I After 200 nodes, 18 on tree, 1e+50 best solution, best possible 851968 (420.36 seconds)
Cbc0010I After 300 nodes, 17 on tree, 1e+50 best solution, best possible 851968 (608.45 seconds)
Cbc0010I After 400 nodes, 16 on tree, 1e+50 best solution, best possible 851968 (811.51 seconds)
Cbc0010I After 500 nodes, 30 on tree, 1e+50 best solution, best possible 851968 (1029.31 seconds)
Cbc0010I After 600 nodes, 22 on tree, 1e+50 best solution, best possible 851968 (1326.40 seconds)
Cbc0010I After 700 nodes, 28 on tree, 1e+50 best solution, best possible 851968 (1551.32 seconds)
Cbc0010I After 800 nodes, 42 on tree, 1e+50 best solution, best possible 851968 (1705.67 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 851968), took 2072598 iterations and 849 nodes (1797.25 seconds)
Cbc0032I Strong branching done 10064 times (862227 iterations), fathomed 103 nodes and fixed 1041 variables
Cbc0035I Maximum depth 50, 0 variables fixed on reduced cost
Cuts at root node changed objective from 720896 to 851968
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.212 seconds)
Gomory was tried 643 times and created 1030 cuts of which 0 were active after adding rounds of cuts (11.561 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 643 times and created 7450 cuts of which 0 were active after adding rounds of cuts (3.176 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.101 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    851968.000
Enumerated nodes:               849
Total iterations:               2072598
Time (CPU seconds):             1797.25
Time (Wallclock seconds):       1799.52

Total time (CPU seconds):       1797.28   (Wallclock seconds):       1799.55

