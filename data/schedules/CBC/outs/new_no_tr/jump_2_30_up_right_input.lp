Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_30_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_30_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 25600 - 0.19 seconds
Cgl0002I 101 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 635 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 140 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 3020 rows, 987 columns (987 integer (956 of which binary)) and 10039 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 987 objects (987 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 521 integers unsatisfied sum - 173.613
Cbc0038I Pass   1: (0.99 seconds) suminf.   77.22290 (498) obj. 41618.2 iterations 1553
Cbc0038I Pass   2: (1.07 seconds) suminf.   61.46002 (487) obj. 45741.8 iterations 553
Cbc0038I Pass   3: (1.14 seconds) suminf.   52.88133 (446) obj. 44400.7 iterations 412
Cbc0038I Pass   4: (1.18 seconds) suminf.   48.10800 (453) obj. 44704.1 iterations 255
Cbc0038I Pass   5: (1.21 seconds) suminf.   46.42447 (461) obj. 44709.1 iterations 137
Cbc0038I Pass   6: (1.33 seconds) suminf.   41.94193 (448) obj. 43514.9 iterations 781
Cbc0038I Pass   7: (1.37 seconds) suminf.   42.21479 (463) obj. 43487.5 iterations 238
Cbc0038I Pass   8: (1.44 seconds) suminf.   43.82747 (365) obj. 44337.6 iterations 489
Cbc0038I Pass   9: (1.48 seconds) suminf.   43.50556 (378) obj. 43911.6 iterations 205
Cbc0038I Pass  10: (1.53 seconds) suminf.   44.07014 (363) obj. 43546.2 iterations 335
Cbc0038I Pass  11: (1.56 seconds) suminf.   42.70531 (353) obj. 43550.3 iterations 131
Cbc0038I Pass  12: (1.61 seconds) suminf.   41.30831 (361) obj. 43555 iterations 352
Cbc0038I Pass  13: (1.63 seconds) suminf.   40.82613 (353) obj. 43571.6 iterations 101
Cbc0038I Pass  14: (1.67 seconds) suminf.   40.83240 (350) obj. 43793.6 iterations 192
Cbc0038I Pass  15: (1.68 seconds) suminf.   40.97387 (350) obj. 44211.2 iterations 61
Cbc0038I Pass  16: (1.70 seconds) suminf.   41.22047 (353) obj. 43744.6 iterations 117
Cbc0038I Pass  17: (1.76 seconds) suminf.   37.70028 (284) obj. 44777.7 iterations 434
Cbc0038I Pass  18: (1.80 seconds) suminf.   35.01864 (271) obj. 46214.5 iterations 256
Cbc0038I Pass  19: (1.81 seconds) suminf.   34.84332 (274) obj. 46364.1 iterations 53
Cbc0038I Pass  20: (1.85 seconds) suminf.   27.92565 (219) obj. 50198.3 iterations 324
Cbc0038I Pass  21: (1.88 seconds) suminf.   24.85778 (208) obj. 49969.3 iterations 160
Cbc0038I Pass  22: (1.91 seconds) suminf.   21.40834 (193) obj. 48509.2 iterations 281
Cbc0038I Pass  23: (1.92 seconds) suminf.   20.99564 (194) obj. 48407 iterations 67
Cbc0038I Pass  24: (1.95 seconds) suminf.   22.80117 (199) obj. 51825.2 iterations 205
Cbc0038I Pass  25: (1.96 seconds) suminf.   22.80117 (199) obj. 51825.2 iterations 3
Cbc0038I Pass  26: (1.97 seconds) suminf.   19.24426 (194) obj. 51614.9 iterations 106
Cbc0038I Pass  27: (1.98 seconds) suminf.   19.50461 (195) obj. 51615.4 iterations 16
Cbc0038I Pass  28: (2.00 seconds) suminf.   19.05062 (158) obj. 51831.6 iterations 210
Cbc0038I Pass  29: (2.01 seconds) suminf.   18.84892 (155) obj. 49961.4 iterations 61
Cbc0038I Pass  30: (2.04 seconds) suminf.   12.22535 (139) obj. 50008.1 iterations 222
Cbc0038I Pass  31: (2.05 seconds) suminf.   12.22535 (139) obj. 50008.1 iterations 2
Cbc0038I Pass  32: (2.07 seconds) suminf.   10.50861 (141) obj. 47625.1 iterations 218
Cbc0038I Pass  33: (2.08 seconds) suminf.   10.42947 (143) obj. 47624.9 iterations 51
Cbc0038I Pass  34: (2.11 seconds) suminf.    8.37457 (116) obj. 47674 iterations 248
Cbc0038I Pass  35: (2.12 seconds) suminf.    7.75617 (112) obj. 47720.3 iterations 97
Cbc0038I Pass  36: (2.18 seconds) suminf.    3.96651 (68) obj. 52251.9 iterations 587
Cbc0038I Pass  37: (2.19 seconds) suminf.    3.72137 (61) obj. 52252.1 iterations 95
Cbc0038I Pass  38: (2.22 seconds) suminf.    0.00000 (0) obj. 47104 iterations 226
Cbc0038I Solution found of 47104
Cbc0038I Cleaned solution of 47104
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.24 seconds)
Cbc0038I Round again with cutoff of 44952.7
Cbc0038I Pass  39: (2.24 seconds) suminf.   77.22290 (498) obj. 41618.2 iterations 0
Cbc0038I Pass  40: (2.31 seconds) suminf.   61.31312 (486) obj. 44952.7 iterations 428
Cbc0038I Pass  41: (2.38 seconds) suminf.   52.88133 (446) obj. 44400.7 iterations 429
Cbc0038I Pass  42: (2.42 seconds) suminf.   48.10800 (453) obj. 44704.1 iterations 243
Cbc0038I Pass  43: (2.45 seconds) suminf.   46.42447 (461) obj. 44709.1 iterations 130
Cbc0038I Pass  44: (2.54 seconds) suminf.   42.70659 (439) obj. 43523.1 iterations 556
Cbc0038I Pass  45: (2.57 seconds) suminf.   42.09925 (467) obj. 43753.2 iterations 184
Cbc0038I Pass  46: (2.64 seconds) suminf.   43.34686 (387) obj. 44952.7 iterations 399
Cbc0038I Pass  47: (2.68 seconds) suminf.   42.74545 (447) obj. 44952.7 iterations 250
Cbc0038I Pass  48: (2.70 seconds) suminf.   42.59051 (449) obj. 43721.7 iterations 117
Cbc0038I Pass  49: (2.72 seconds) suminf.   41.59381 (446) obj. 43985.3 iterations 64
Cbc0038I Pass  50: (2.78 seconds) suminf.   43.54180 (393) obj. 43947.4 iterations 417
Cbc0038I Pass  51: (2.81 seconds) suminf.   44.04708 (412) obj. 44057.5 iterations 155
Cbc0038I Pass  52: (2.84 seconds) suminf.   44.23820 (403) obj. 44329.3 iterations 111
Cbc0038I Pass  53: (2.86 seconds) suminf.   44.09874 (390) obj. 44952.7 iterations 127
Cbc0038I Pass  54: (2.89 seconds) suminf.   42.34055 (392) obj. 44952.7 iterations 132
Cbc0038I Pass  55: (2.91 seconds) suminf.   42.23355 (408) obj. 44952.7 iterations 83
Cbc0038I Pass  56: (2.95 seconds) suminf.   42.00859 (383) obj. 44952.7 iterations 249
Cbc0038I Pass  57: (2.97 seconds) suminf.   42.79522 (403) obj. 44952.7 iterations 125
Cbc0038I Pass  58: (3.01 seconds) suminf.   41.39941 (383) obj. 43646.2 iterations 197
Cbc0038I Pass  59: (3.04 seconds) suminf.   42.15258 (396) obj. 43421.9 iterations 164
Cbc0038I Pass  60: (3.07 seconds) suminf.   42.45996 (377) obj. 43499.7 iterations 158
Cbc0038I Pass  61: (3.11 seconds) suminf.   42.92729 (411) obj. 43403.6 iterations 173
Cbc0038I Pass  62: (3.13 seconds) suminf.   41.78197 (393) obj. 43453.4 iterations 93
Cbc0038I Pass  63: (3.20 seconds) suminf.   42.75875 (330) obj. 43529.6 iterations 517
Cbc0038I Pass  64: (3.24 seconds) suminf.   40.82015 (375) obj. 43511.3 iterations 231
Cbc0038I Pass  65: (3.25 seconds) suminf.   40.88210 (378) obj. 43510.4 iterations 29
Cbc0038I Pass  66: (3.28 seconds) suminf.   39.69729 (346) obj. 43525.1 iterations 172
Cbc0038I Pass  67: (3.29 seconds) suminf.   39.29660 (338) obj. 43534.1 iterations 77
Cbc0038I Pass  68: (3.34 seconds) suminf.   38.63265 (296) obj. 43980.7 iterations 327
Cbc0038I Pass  69: (3.36 seconds) suminf.   35.35075 (307) obj. 43970 iterations 112
Cbc0038I Pass  70: (3.37 seconds) suminf.   35.23273 (314) obj. 43964.5 iterations 34
Cbc0038I Pass  71: (3.41 seconds) suminf.   36.15951 (283) obj. 44952.7 iterations 241
Cbc0038I Pass  72: (3.42 seconds) suminf.   32.86958 (291) obj. 44952.7 iterations 98
Cbc0038I Pass  73: (3.47 seconds) suminf.   29.38172 (243) obj. 44952.7 iterations 341
Cbc0038I Pass  74: (3.48 seconds) suminf.   28.96767 (268) obj. 44952.7 iterations 47
Cbc0038I Pass  75: (3.51 seconds) suminf.   31.56849 (231) obj. 44952.7 iterations 214
Cbc0038I Pass  76: (3.54 seconds) suminf.   24.72210 (240) obj. 44952.7 iterations 213
Cbc0038I Pass  77: (3.55 seconds) suminf.   24.43880 (241) obj. 44952.7 iterations 86
Cbc0038I Pass  78: (3.57 seconds) suminf.   24.18842 (224) obj. 44952.7 iterations 81
Cbc0038I Pass  79: (3.57 seconds) suminf.   23.95301 (228) obj. 44952.7 iterations 23
Cbc0038I Pass  80: (3.62 seconds) suminf.   23.00286 (202) obj. 44952.7 iterations 345
Cbc0038I Pass  81: (3.63 seconds) suminf.   22.52945 (212) obj. 44952.7 iterations 52
Cbc0038I Pass  82: (3.64 seconds) suminf.   21.50706 (215) obj. 44952.7 iterations 40
Cbc0038I Pass  83: (3.67 seconds) suminf.   19.84559 (193) obj. 44952.7 iterations 214
Cbc0038I Pass  84: (3.68 seconds) suminf.   18.25144 (189) obj. 44952.7 iterations 57
Cbc0038I Pass  85: (3.69 seconds) suminf.   18.12397 (183) obj. 44952.7 iterations 44
Cbc0038I Pass  86: (3.70 seconds) suminf.   17.60863 (188) obj. 44952.7 iterations 118
Cbc0038I Pass  87: (3.73 seconds) suminf.   16.76758 (194) obj. 44952.7 iterations 174
Cbc0038I Pass  88: (3.82 seconds) suminf.   12.11857 (134) obj. 44952.7 iterations 756
Cbc0038I Pass  89: (3.83 seconds) suminf.   11.19373 (130) obj. 44952.7 iterations 71
Cbc0038I Pass  90: (3.85 seconds) suminf.    8.30903 (109) obj. 44952.7 iterations 173
Cbc0038I Pass  91: (3.86 seconds) suminf.    8.30903 (109) obj. 44952.7 iterations 12
Cbc0038I Pass  92: (3.87 seconds) suminf.    5.26829 (89) obj. 44952.7 iterations 100
Cbc0038I Pass  93: (3.87 seconds) suminf.    4.95640 (95) obj. 44952.7 iterations 9
Cbc0038I Pass  94: (3.90 seconds) suminf.    4.88834 (75) obj. 44952.7 iterations 225
Cbc0038I Pass  95: (3.91 seconds) suminf.    4.64532 (90) obj. 44952.7 iterations 69
Cbc0038I Pass  96: (3.93 seconds) suminf.    3.83794 (93) obj. 44952.7 iterations 158
Cbc0038I Pass  97: (3.93 seconds) suminf.    3.82208 (93) obj. 44952.7 iterations 8
Cbc0038I Pass  98: (3.99 seconds) suminf.    1.64905 (41) obj. 44952.7 iterations 495
Cbc0038I Pass  99: (4.00 seconds) suminf.    1.58347 (58) obj. 44952.7 iterations 79
Cbc0038I Pass 100: (4.04 seconds) suminf.    5.70301 (135) obj. 44952.7 iterations 383
Cbc0038I Pass 101: (4.08 seconds) suminf.    5.30457 (109) obj. 44952.7 iterations 313
Cbc0038I Pass 102: (4.09 seconds) suminf.    4.80291 (105) obj. 44952.7 iterations 91
Cbc0038I Pass 103: (4.10 seconds) suminf.    0.98974 (47) obj. 44952.7 iterations 71
Cbc0038I Pass 104: (4.11 seconds) suminf.    0.98974 (47) obj. 44952.7 iterations 17
Cbc0038I Pass 105: (4.12 seconds) suminf.    3.23240 (51) obj. 44952.7 iterations 87
Cbc0038I Pass 106: (4.13 seconds) suminf.    3.17792 (53) obj. 44952.7 iterations 15
Cbc0038I Pass 107: (4.17 seconds) suminf.    5.80284 (53) obj. 44952.7 iterations 366
Cbc0038I Pass 108: (4.17 seconds) suminf.    6.06245 (54) obj. 44952.7 iterations 42
Cbc0038I Pass 109: (4.19 seconds) suminf.    1.26605 (18) obj. 44952.7 iterations 142
Cbc0038I Pass 110: (4.20 seconds) suminf.    1.22967 (35) obj. 44952.7 iterations 32
Cbc0038I Pass 111: (4.21 seconds) suminf.    0.29991 (1) obj. 44952.7 iterations 55
Cbc0038I Solution found of 44952.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3021 rows 987 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 41984
Cbc0038I Before mini branch and bound, 136 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2731 rows 851 columns - 107 fixed gives 1956, 597 - still too large
Cbc0038I Full problem 3020 rows 987 columns, reduced to 366 rows 116 columns
Cbc0038I Mini branch and bound did not improve solution (4.72 seconds)
Cbc0038I Round again with cutoff of 38706.4
Cbc0038I Pass 112: (4.73 seconds) suminf.   78.33153 (487) obj. 38706 iterations 47
Cbc0038I Pass 113: (4.81 seconds) suminf.   62.61932 (495) obj. 38706.4 iterations 524
Cbc0038I Pass 114: (4.85 seconds) suminf.   62.44549 (493) obj. 38706.4 iterations 159
Cbc0038I Pass 115: (4.87 seconds) suminf.   61.04932 (506) obj. 38706.4 iterations 106
Cbc0038I Pass 116: (4.88 seconds) suminf.   61.46823 (497) obj. 38706.4 iterations 57
Cbc0038I Pass 117: (4.98 seconds) suminf.   52.42112 (482) obj. 38706.4 iterations 551
Cbc0038I Pass 118: (5.03 seconds) suminf.   47.12640 (486) obj. 38706.4 iterations 315
Cbc0038I Pass 119: (5.05 seconds) suminf.   47.01816 (468) obj. 38706.4 iterations 49
Cbc0038I Pass 120: (5.09 seconds) suminf.   46.43660 (484) obj. 38706.4 iterations 232
Cbc0038I Pass 121: (5.11 seconds) suminf.   46.14173 (484) obj. 38706.4 iterations 60
Cbc0038I Pass 122: (5.12 seconds) suminf.   46.90289 (478) obj. 38706.4 iterations 40
Cbc0038I Pass 123: (5.22 seconds) suminf.   49.34900 (410) obj. 38706.4 iterations 633
Cbc0038I Pass 124: (5.25 seconds) suminf.   45.85596 (417) obj. 38706.4 iterations 136
Cbc0038I Pass 125: (5.27 seconds) suminf.   44.32310 (406) obj. 38706.4 iterations 111
Cbc0038I Pass 126: (5.29 seconds) suminf.   42.41968 (405) obj. 38706.4 iterations 87
Cbc0038I Pass 127: (5.33 seconds) suminf.   46.25512 (398) obj. 38706.4 iterations 209
Cbc0038I Pass 128: (5.35 seconds) suminf.   45.56636 (419) obj. 38706.4 iterations 118
Cbc0038I Pass 129: (5.40 seconds) suminf.   44.21269 (404) obj. 38706.4 iterations 234
Cbc0038I Pass 130: (5.42 seconds) suminf.   43.82643 (416) obj. 38706.4 iterations 101
Cbc0038I Pass 131: (5.43 seconds) suminf.   43.44131 (413) obj. 38706.4 iterations 51
Cbc0038I Pass 132: (5.48 seconds) suminf.   46.46162 (400) obj. 38706.4 iterations 312
Cbc0038I Pass 133: (5.52 seconds) suminf.   44.06764 (428) obj. 38706.4 iterations 197
Cbc0038I Pass 134: (5.57 seconds) suminf.   44.22562 (339) obj. 38706.4 iterations 318
Cbc0038I Pass 135: (5.62 seconds) suminf.   43.27506 (329) obj. 38706.4 iterations 325
Cbc0038I Pass 136: (5.63 seconds) suminf.   42.42389 (322) obj. 38706.4 iterations 49
Cbc0038I Pass 137: (5.67 seconds) suminf.   43.86071 (324) obj. 38706.4 iterations 216
Cbc0038I Pass 138: (5.69 seconds) suminf.   41.68555 (317) obj. 38706.4 iterations 134
Cbc0038I Pass 139: (5.73 seconds) suminf.   40.02305 (324) obj. 38706.4 iterations 189
Cbc0038I Pass 140: (5.74 seconds) suminf.   38.80006 (327) obj. 38706.4 iterations 68
Cbc0038I Pass 141: (5.75 seconds) suminf.   38.55790 (324) obj. 38706.4 iterations 52
Cbc0038I Pass 142: (5.78 seconds) suminf.   41.64572 (319) obj. 38706.4 iterations 126
Cbc0038I Pass 143: (5.78 seconds) suminf.   41.78112 (316) obj. 38706.4 iterations 11
Cbc0038I Pass 144: (5.81 seconds) suminf.   38.06960 (298) obj. 38706.4 iterations 169
Cbc0038I Pass 145: (5.83 seconds) suminf.   37.32621 (297) obj. 38706.4 iterations 85
Cbc0038I Pass 146: (5.84 seconds) suminf.   37.72350 (304) obj. 38706.4 iterations 73
Cbc0038I Pass 147: (5.88 seconds) suminf.   38.99917 (262) obj. 38706.4 iterations 219
Cbc0038I Pass 148: (5.91 seconds) suminf.   35.93685 (278) obj. 38706.4 iterations 178
Cbc0038I Pass 149: (5.93 seconds) suminf.   35.42011 (270) obj. 38706.4 iterations 105
Cbc0038I Pass 150: (5.95 seconds) suminf.   33.54298 (268) obj. 38706.4 iterations 144
Cbc0038I Pass 151: (5.96 seconds) suminf.   33.15386 (274) obj. 38706.4 iterations 84
Cbc0038I Pass 152: (5.99 seconds) suminf.   32.86223 (243) obj. 38706.4 iterations 181
Cbc0038I Pass 153: (6.01 seconds) suminf.   33.30288 (264) obj. 38706.4 iterations 129
Cbc0038I Pass 154: (6.09 seconds) suminf.   27.29862 (206) obj. 38706.4 iterations 552
Cbc0038I Pass 155: (6.11 seconds) suminf.   26.21763 (185) obj. 38706.4 iterations 102
Cbc0038I Pass 156: (6.12 seconds) suminf.   25.55607 (192) obj. 38706.4 iterations 51
Cbc0038I Pass 157: (6.15 seconds) suminf.   24.39500 (192) obj. 38706.4 iterations 230
Cbc0038I Pass 158: (6.15 seconds) suminf.   24.29719 (193) obj. 38706.4 iterations 6
Cbc0038I Pass 159: (6.18 seconds) suminf.   25.36485 (218) obj. 38706.4 iterations 210
Cbc0038I Pass 160: (6.20 seconds) suminf.   23.40765 (211) obj. 38706.4 iterations 88
Cbc0038I Pass 161: (6.21 seconds) suminf.   24.04145 (215) obj. 38706.4 iterations 82
Cbc0038I Pass 162: (6.28 seconds) suminf.   23.23806 (168) obj. 38706.4 iterations 526
Cbc0038I Pass 163: (6.31 seconds) suminf.   18.49326 (197) obj. 38706.4 iterations 229
Cbc0038I Pass 164: (6.32 seconds) suminf.   18.92372 (172) obj. 38706.4 iterations 90
Cbc0038I Pass 165: (6.36 seconds) suminf.   18.39415 (149) obj. 38706.4 iterations 273
Cbc0038I Pass 166: (6.37 seconds) suminf.   18.12808 (151) obj. 38706.4 iterations 94
Cbc0038I Pass 167: (6.40 seconds) suminf.   19.41921 (146) obj. 38706.4 iterations 220
Cbc0038I Pass 168: (6.42 seconds) suminf.   17.66186 (134) obj. 38706.4 iterations 151
Cbc0038I Pass 169: (6.44 seconds) suminf.   15.89391 (119) obj. 38706.4 iterations 101
Cbc0038I Pass 170: (6.45 seconds) suminf.   14.88230 (124) obj. 38706.4 iterations 98
Cbc0038I Pass 171: (6.51 seconds) suminf.   11.81006 (142) obj. 38706.4 iterations 485
Cbc0038I Pass 172: (6.53 seconds) suminf.   11.29694 (143) obj. 38706.4 iterations 235
Cbc0038I Pass 173: (6.58 seconds) suminf.   13.97129 (105) obj. 38706.4 iterations 442
Cbc0038I Pass 174: (6.60 seconds) suminf.   10.81752 (112) obj. 38706.4 iterations 153
Cbc0038I Pass 175: (6.62 seconds) suminf.   10.84782 (142) obj. 38706.4 iterations 84
Cbc0038I Pass 176: (6.66 seconds) suminf.    7.91584 (66) obj. 38706.4 iterations 333
Cbc0038I Pass 177: (6.69 seconds) suminf.    6.92391 (105) obj. 38706.4 iterations 268
Cbc0038I Pass 178: (6.76 seconds) suminf.    6.52067 (99) obj. 38706.4 iterations 592
Cbc0038I Pass 179: (6.80 seconds) suminf.    5.39390 (65) obj. 38706.4 iterations 286
Cbc0038I Pass 180: (6.83 seconds) suminf.    8.67299 (105) obj. 38706.4 iterations 297
Cbc0038I Pass 181: (6.85 seconds) suminf.    7.10140 (121) obj. 38706.4 iterations 132
Cbc0038I Pass 182: (7.00 seconds) suminf.    7.44809 (66) obj. 38706.4 iterations 1208
Cbc0038I Pass 183: (7.02 seconds) suminf.    4.92202 (69) obj. 38706.4 iterations 150
Cbc0038I Pass 184: (7.08 seconds) suminf.    4.66051 (64) obj. 38706.4 iterations 639
Cbc0038I Pass 185: (7.12 seconds) suminf.    4.14881 (80) obj. 38706.4 iterations 222
Cbc0038I Pass 186: (7.15 seconds) suminf.    7.76285 (69) obj. 38706.4 iterations 283
Cbc0038I Pass 187: (7.16 seconds) suminf.    7.76285 (69) obj. 38706.4 iterations 46
Cbc0038I Pass 188: (7.20 seconds) suminf.    5.53922 (102) obj. 38706.4 iterations 344
Cbc0038I Pass 189: (7.26 seconds) suminf.    4.09317 (90) obj. 38706.4 iterations 434
Cbc0038I Pass 190: (7.29 seconds) suminf.    3.17790 (53) obj. 38706.4 iterations 273
Cbc0038I Pass 191: (7.32 seconds) suminf.    7.74333 (54) obj. 38706.4 iterations 162
Cbc0038I Pass 192: (7.33 seconds) suminf.    5.71674 (66) obj. 38706.4 iterations 144
Cbc0038I Pass 193: (7.36 seconds) suminf.    2.96252 (69) obj. 38706.4 iterations 242
Cbc0038I Pass 194: (7.37 seconds) suminf.    2.96093 (72) obj. 38706.4 iterations 21
Cbc0038I Pass 195: (7.39 seconds) suminf.    8.38612 (65) obj. 38706.4 iterations 174
Cbc0038I Pass 196: (7.40 seconds) suminf.    7.49861 (62) obj. 38706.4 iterations 118
Cbc0038I Pass 197: (7.46 seconds) suminf.    2.96093 (72) obj. 38706.4 iterations 553
Cbc0038I Pass 198: (7.57 seconds) suminf.   52.83916 (247) obj. 38706.4 iterations 1060
Cbc0038I Pass 199: (7.67 seconds) suminf.   33.45861 (216) obj. 38706.4 iterations 746
Cbc0038I Pass 200: (7.69 seconds) suminf.   30.47058 (230) obj. 38706.4 iterations 166
Cbc0038I Pass 201: (7.72 seconds) suminf.   23.09013 (222) obj. 38706.4 iterations 219
Cbc0038I Pass 202: (7.73 seconds) suminf.   23.01094 (203) obj. 38706.4 iterations 36
Cbc0038I Pass 203: (7.77 seconds) suminf.   17.34641 (198) obj. 38706.4 iterations 276
Cbc0038I Pass 204: (7.78 seconds) suminf.   16.15864 (205) obj. 38706.4 iterations 67
Cbc0038I Pass 205: (7.81 seconds) suminf.    7.78958 (139) obj. 38706.4 iterations 204
Cbc0038I Pass 206: (7.82 seconds) suminf.    7.67348 (143) obj. 38706.4 iterations 57
Cbc0038I Pass 207: (7.88 seconds) suminf.   10.47138 (108) obj. 38706.4 iterations 580
Cbc0038I Pass 208: (7.89 seconds) suminf.   10.07045 (122) obj. 38706.4 iterations 104
Cbc0038I Pass 209: (7.94 seconds) suminf.    6.85227 (67) obj. 38706.4 iterations 370
Cbc0038I Pass 210: (7.96 seconds) suminf.    5.53342 (90) obj. 38706.4 iterations 165
Cbc0038I Pass 211: (8.08 seconds) suminf.   58.84156 (384) obj. 38706.4 iterations 966
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2889 rows 925 columns - 106 fixed gives 2073, 650 - still too large
Cbc0038I Mini branch and bound did not improve solution (8.46 seconds)
Cbc0038I After 8.46 seconds - Feasibility pump exiting with objective of 41984 - took 7.72 seconds
Cbc0012I Integer solution of 41984 found by feasibility pump after 0 iterations and 0 nodes (8.46 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2118 rows 559 columns - 107 fixed gives 1420, 356 - ok now
Cbc0031I 42 added rows had average density of 28
Cbc0013I At root node, 42 cuts changed objective from 25600 to 30720 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.5 elements, 5 column cuts (5 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 276 row cuts average 305.9 elements, 0 column cuts (0 active)  in 0.300 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 3 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 475 row cuts average 55.6 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 41984 best solution, best possible 30720 (18.40 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 1796 rows 500 columns - 95 fixed gives 1161, 293 - ok now
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2059 rows 590 columns - 101 fixed gives 1378, 370 - ok now
Cbc0010I After 100 nodes, 1 on tree, 41984 best solution, best possible 30727 (61.14 seconds)
Cbc0010I After 200 nodes, 6 on tree, 41984 best solution, best possible 30728 (106.36 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2141 rows 600 columns - 101 fixed gives 1478, 393 - ok now
Cbc0010I After 300 nodes, 8 on tree, 41984 best solution, best possible 30728 (151.11 seconds)
Cbc0010I After 400 nodes, 5 on tree, 41984 best solution, best possible 30728 (190.26 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2144 rows 601 columns - 101 fixed gives 1478, 393 - ok now
Cbc0010I After 500 nodes, 4 on tree, 41984 best solution, best possible 30741 (233.53 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2144 rows 601 columns - 101 fixed gives 1478, 393 - ok now
Cbc0010I After 600 nodes, 3 on tree, 41984 best solution, best possible 30741 (278.72 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2139 rows 598 columns - 101 fixed gives 1474, 391 - ok now
Cbc0010I After 700 nodes, 3 on tree, 41984 best solution, best possible 30741 (323.89 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2143 rows 599 columns - 101 fixed gives 1478, 392 - ok now
Cbc0010I After 800 nodes, 3 on tree, 41984 best solution, best possible 30741 (367.57 seconds)
Cbc0010I After 900 nodes, 3 on tree, 41984 best solution, best possible 30741 (414.91 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2135 rows 597 columns - 101 fixed gives 1459, 387 - ok now
Cbc0010I After 1000 nodes, 3 on tree, 41984 best solution, best possible 30741 (457.72 seconds)
Cbc0010I After 1100 nodes, 6 on tree, 41984 best solution, best possible 30741 (502.24 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 1969 rows 542 columns - 101 fixed gives 1266, 322 - ok now
Cbc0010I After 1200 nodes, 13 on tree, 41984 best solution, best possible 30741 (545.26 seconds)
Cbc0010I After 1300 nodes, 22 on tree, 41984 best solution, best possible 30741 (586.02 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 41984 best solution, best possible 30741 (626.15 seconds)
Cbc0010I After 1500 nodes, 32 on tree, 41984 best solution, best possible 30741 (667.47 seconds)
Cbc0010I After 1600 nodes, 36 on tree, 41984 best solution, best possible 30741 (698.57 seconds)
Cbc0010I After 1700 nodes, 40 on tree, 41984 best solution, best possible 30741 (731.54 seconds)
Cbc0010I After 1800 nodes, 46 on tree, 41984 best solution, best possible 30741 (764.70 seconds)
Cbc0010I After 1900 nodes, 52 on tree, 41984 best solution, best possible 30741 (795.23 seconds)
Cbc0010I After 2000 nodes, 55 on tree, 41984 best solution, best possible 30741 (825.98 seconds)
Cbc0010I After 2100 nodes, 61 on tree, 41984 best solution, best possible 30741 (863.63 seconds)
Cbc0010I After 2200 nodes, 66 on tree, 41984 best solution, best possible 30741 (896.25 seconds)
Cbc0010I After 2300 nodes, 70 on tree, 41984 best solution, best possible 30741 (929.62 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2173 rows 616 columns - 101 fixed gives 1494, 406 - ok now
Cbc0010I After 2400 nodes, 73 on tree, 41984 best solution, best possible 30741 (964.35 seconds)
Cbc0010I After 2500 nodes, 77 on tree, 41984 best solution, best possible 30741 (997.42 seconds)
Cbc0010I After 2600 nodes, 82 on tree, 41984 best solution, best possible 30741 (1031.30 seconds)
Cbc0010I After 2700 nodes, 83 on tree, 41984 best solution, best possible 30741 (1066.20 seconds)
Cbc0010I After 2800 nodes, 87 on tree, 41984 best solution, best possible 30741 (1098.90 seconds)
Cbc0010I After 2900 nodes, 92 on tree, 41984 best solution, best possible 30741 (1133.06 seconds)
Cbc0010I After 3000 nodes, 96 on tree, 41984 best solution, best possible 30741 (1163.32 seconds)
Cbc0010I After 3100 nodes, 100 on tree, 41984 best solution, best possible 30741 (1192.89 seconds)
Cbc0010I After 3200 nodes, 114 on tree, 41984 best solution, best possible 30741 (1221.51 seconds)
Cbc0010I After 3300 nodes, 116 on tree, 41984 best solution, best possible 30741 (1253.95 seconds)
Cbc0010I After 3400 nodes, 107 on tree, 41984 best solution, best possible 30741 (1292.40 seconds)
Cbc0010I After 3500 nodes, 108 on tree, 41984 best solution, best possible 30741 (1330.37 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2164 rows 610 columns - 99 fixed gives 1498, 405 - ok now
Cbc0010I After 3600 nodes, 115 on tree, 41984 best solution, best possible 30741 (1370.24 seconds)
Cbc0010I After 3700 nodes, 122 on tree, 41984 best solution, best possible 30741 (1413.44 seconds)
Cbc0010I After 3800 nodes, 132 on tree, 41984 best solution, best possible 30741 (1452.38 seconds)
Cbc0010I After 3900 nodes, 136 on tree, 41984 best solution, best possible 30741 (1492.85 seconds)
Cbc0010I After 4000 nodes, 149 on tree, 41984 best solution, best possible 30741 (1533.92 seconds)
Cbc0010I After 4100 nodes, 157 on tree, 41984 best solution, best possible 30741 (1573.49 seconds)
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2140 rows 602 columns - 102 fixed gives 1486, 402 - ok now
Cbc0010I After 4200 nodes, 167 on tree, 41984 best solution, best possible 30741 (1610.31 seconds)
Cbc0010I After 4300 nodes, 175 on tree, 41984 best solution, best possible 30741 (1644.20 seconds)
Cbc0010I After 4400 nodes, 184 on tree, 41984 best solution, best possible 30741 (1677.65 seconds)
Cbc0010I After 4500 nodes, 194 on tree, 41984 best solution, best possible 30741 (1709.80 seconds)
Cbc0010I After 4600 nodes, 202 on tree, 41984 best solution, best possible 30741 (1742.15 seconds)
Cbc0010I After 4700 nodes, 211 on tree, 41984 best solution, best possible 30741 (1773.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 41984 (best possible 30741), took 7421492 iterations and 4782 nodes (1799.95 seconds)
Cbc0032I Strong branching done 17848 times (1417211 iterations), fathomed 671 nodes and fixed 749 variables
Cbc0035I Maximum depth 1476, 0 variables fixed on reduced cost
Cuts at root node changed objective from 25600 to 30720
Probing was tried 3651 times and created 71439 cuts of which 0 were active after adding rounds of cuts (19.915 seconds)
Gomory was tried 3429 times and created 2200 cuts of which 0 were active after adding rounds of cuts (16.397 seconds)
Knapsack was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 3429 times and created 42106 cuts of which 0 were active after adding rounds of cuts (5.800 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)

Result - Stopped on time limit

Objective value:                41984.00000000
Lower bound:                    30741.000
Gap:                            0.37
Enumerated nodes:               4782
Total iterations:               7421492
Time (CPU seconds):             1800.06
Time (Wallclock seconds):       1803.31

Total time (CPU seconds):       1800.07   (Wallclock seconds):       1803.32

