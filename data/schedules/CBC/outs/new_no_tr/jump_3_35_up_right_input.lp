Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_35_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_35_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 26624 - 0.29 seconds
Cgl0002I 102 variables fixed
Cgl0003I 0 fixed, 11 tightened bounds, 735 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 146 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 75 strengthened rows, 0 substitutions
Cgl0004I processed model has 3898 rows, 1245 columns (1245 integer (1209 of which binary)) and 13220 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1245 objects (1245 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 620 integers unsatisfied sum - 209.171
Cbc0038I Pass   1: (1.55 seconds) suminf.   72.52132 (374) obj. 50344.6 iterations 2251
Cbc0038I Pass   2: (1.69 seconds) suminf.   50.79700 (361) obj. 50687.9 iterations 882
Cbc0038I Pass   3: (1.70 seconds) suminf.   50.87461 (361) obj. 50688.4 iterations 10
Cbc0038I Pass   4: (1.75 seconds) suminf.   46.88956 (329) obj. 50635.8 iterations 244
Cbc0038I Pass   5: (1.84 seconds) suminf.   42.01226 (311) obj. 51549.9 iterations 493
Cbc0038I Pass   6: (1.90 seconds) suminf.   39.74640 (312) obj. 51756.3 iterations 324
Cbc0038I Pass   7: (1.92 seconds) suminf.   38.94238 (309) obj. 51706.8 iterations 74
Cbc0038I Pass   8: (1.94 seconds) suminf.   39.88072 (323) obj. 52065.1 iterations 126
Cbc0038I Pass   9: (1.98 seconds) suminf.   40.50871 (281) obj. 52229.4 iterations 153
Cbc0038I Pass  10: (1.99 seconds) suminf.   40.41746 (281) obj. 52158.6 iterations 53
Cbc0038I Pass  11: (2.06 seconds) suminf.   40.54384 (266) obj. 51253.8 iterations 442
Cbc0038I Pass  12: (2.09 seconds) suminf.   37.21113 (268) obj. 51728.8 iterations 137
Cbc0038I Pass  13: (2.12 seconds) suminf.   37.71378 (274) obj. 50986.5 iterations 152
Cbc0038I Pass  14: (2.15 seconds) suminf.   37.56294 (266) obj. 51308.6 iterations 163
Cbc0038I Pass  15: (2.19 seconds) suminf.   36.51333 (274) obj. 50878.4 iterations 186
Cbc0038I Pass  16: (2.21 seconds) suminf.   36.22999 (275) obj. 50792.9 iterations 118
Cbc0038I Pass  17: (2.26 seconds) suminf.   39.53931 (271) obj. 51317.2 iterations 256
Cbc0038I Pass  18: (2.30 seconds) suminf.   37.19437 (275) obj. 51473.4 iterations 180
Cbc0038I Pass  19: (2.35 seconds) suminf.   35.83263 (276) obj. 51178 iterations 259
Cbc0038I Pass  20: (2.36 seconds) suminf.   35.57364 (281) obj. 51290.2 iterations 79
Cbc0038I Pass  21: (2.42 seconds) suminf.   38.10077 (261) obj. 51996.7 iterations 335
Cbc0038I Pass  22: (2.48 seconds) suminf.   33.73380 (247) obj. 51276.3 iterations 315
Cbc0038I Pass  23: (2.50 seconds) suminf.   33.14623 (281) obj. 51243.7 iterations 64
Cbc0038I Pass  24: (2.57 seconds) suminf.   35.07836 (245) obj. 50926.8 iterations 417
Cbc0038I Pass  25: (2.59 seconds) suminf.   34.15053 (261) obj. 50984.1 iterations 112
Cbc0038I Pass  26: (2.62 seconds) suminf.   32.47972 (250) obj. 51150.9 iterations 152
Cbc0038I Pass  27: (2.63 seconds) suminf.   32.74909 (253) obj. 51141.7 iterations 16
Cbc0038I Pass  28: (2.67 seconds) suminf.   32.61550 (267) obj. 50687.1 iterations 226
Cbc0038I Pass  29: (2.69 seconds) suminf.   32.07916 (266) obj. 51167.6 iterations 81
Cbc0038I Pass  30: (2.75 seconds) suminf.   36.80304 (252) obj. 51045.6 iterations 375
Cbc0038I Pass  31: (2.80 seconds) suminf.   32.98261 (259) obj. 51092.3 iterations 210
Cbc0038I Pass  32: (2.86 seconds) suminf.   27.36427 (265) obj. 52908.3 iterations 390
Cbc0038I Pass  33: (2.87 seconds) suminf.   27.19337 (267) obj. 52961.2 iterations 25
Cbc0038I Pass  34: (2.95 seconds) suminf.   30.67844 (275) obj. 53931 iterations 513
Cbc0038I Pass  35: (2.98 seconds) suminf.   29.20750 (284) obj. 55010.9 iterations 134
Cbc0038I Pass  36: (3.07 seconds) suminf.   29.46341 (238) obj. 51472.3 iterations 656
Cbc0038I Pass  37: (3.11 seconds) suminf.   25.05834 (248) obj. 51287 iterations 169
Cbc0038I Pass  38: (3.12 seconds) suminf.   25.53285 (259) obj. 51278.6 iterations 47
Cbc0038I Pass  39: (3.22 seconds) suminf.   26.98199 (233) obj. 51216.6 iterations 674
Cbc0038I Pass  40: (3.25 seconds) suminf.   27.62207 (255) obj. 51225.5 iterations 174
Cbc0038I Pass  41: (3.32 seconds) suminf.   24.99929 (273) obj. 51239.7 iterations 364
Cbc0038I Pass  42: (3.34 seconds) suminf.   24.12135 (260) obj. 51256 iterations 79
Cbc0038I Pass  43: (3.39 seconds) suminf.   25.20343 (246) obj. 51878.8 iterations 294
Cbc0038I Pass  44: (3.47 seconds) suminf.   17.95972 (187) obj. 50938.8 iterations 537
Cbc0038I Pass  45: (3.60 seconds) suminf.   18.87111 (179) obj. 52841 iterations 985
Cbc0038I Pass  46: (3.63 seconds) suminf.   18.28727 (181) obj. 52115.2 iterations 169
Cbc0038I Pass  47: (3.72 seconds) suminf.   23.45408 (195) obj. 54768.5 iterations 628
Cbc0038I Pass  48: (3.80 seconds) suminf.   19.14017 (194) obj. 51113.4 iterations 546
Cbc0038I Pass  49: (3.90 seconds) suminf.   16.61512 (178) obj. 50780.2 iterations 688
Cbc0038I Pass  50: (3.93 seconds) suminf.   16.77876 (173) obj. 50836.6 iterations 135
Cbc0038I Pass  51: (4.03 seconds) suminf.   15.84249 (159) obj. 48374.2 iterations 833
Cbc0038I Pass  52: (4.09 seconds) suminf.   15.17133 (199) obj. 48072.6 iterations 306
Cbc0038I Pass  53: (4.20 seconds) suminf.   12.30482 (152) obj. 52401.5 iterations 877
Cbc0038I Pass  54: (4.26 seconds) suminf.   11.67696 (147) obj. 52872.1 iterations 493
Cbc0038I Pass  55: (4.32 seconds) suminf.   18.29732 (159) obj. 53815.7 iterations 503
Cbc0038I Pass  56: (4.34 seconds) suminf.   17.13714 (154) obj. 53852.5 iterations 111
Cbc0038I Pass  57: (4.36 seconds) suminf.   16.77131 (170) obj. 53919.5 iterations 122
Cbc0038I Pass  58: (4.41 seconds) suminf.   17.36834 (140) obj. 52185.9 iterations 348
Cbc0038I Pass  59: (4.48 seconds) suminf.    9.52097 (107) obj. 52441.6 iterations 483
Cbc0038I Pass  60: (4.48 seconds) suminf.    9.52097 (107) obj. 52441.6 iterations 7
Cbc0038I Pass  61: (4.52 seconds) suminf.    9.36264 (134) obj. 46469 iterations 305
Cbc0038I Pass  62: (4.55 seconds) suminf.    7.67402 (119) obj. 50522.1 iterations 215
Cbc0038I Pass  63: (4.61 seconds) suminf.   10.61851 (116) obj. 52376.5 iterations 365
Cbc0038I Pass  64: (4.62 seconds) suminf.    9.76894 (115) obj. 52399.4 iterations 57
Cbc0038I Pass  65: (4.67 seconds) suminf.    8.97275 (83) obj. 45994.5 iterations 356
Cbc0038I Pass  66: (4.70 seconds) suminf.    6.97035 (72) obj. 45995.9 iterations 209
Cbc0038I Pass  67: (4.81 seconds) suminf.    3.77922 (35) obj. 49034.6 iterations 854
Cbc0038I Pass  68: (4.82 seconds) suminf.    3.77922 (35) obj. 49034.6 iterations 4
Cbc0038I Pass  69: (4.87 seconds) suminf.    0.25614 (10) obj. 49152 iterations 329
Cbc0038I Pass  70: (4.88 seconds) suminf.    0.25614 (10) obj. 49152 iterations 0
Cbc0038I Pass  71: (4.89 seconds) suminf.    0.24793 (10) obj. 49152 iterations 42
Cbc0038I Pass  72: (5.17 seconds) suminf.   64.89004 (384) obj. 67933.1 iterations 2019
Cbc0038I Pass  73: (5.32 seconds) suminf.   45.56170 (312) obj. 70340.5 iterations 945
Cbc0038I Pass  74: (5.35 seconds) suminf.   45.42652 (311) obj. 70741.2 iterations 153
Cbc0038I Pass  75: (5.42 seconds) suminf.   41.90908 (290) obj. 70855.3 iterations 377
Cbc0038I Pass  76: (5.44 seconds) suminf.   41.99936 (287) obj. 71338.5 iterations 109
Cbc0038I Pass  77: (5.45 seconds) suminf.   41.88874 (289) obj. 71339.3 iterations 58
Cbc0038I Pass  78: (5.52 seconds) suminf.   38.70975 (288) obj. 71356.3 iterations 437
Cbc0038I Pass  79: (5.56 seconds) suminf.   37.11335 (276) obj. 69533.1 iterations 175
Cbc0038I Pass  80: (5.57 seconds) suminf.   37.11335 (276) obj. 69533.1 iterations 2
Cbc0038I Pass  81: (5.62 seconds) suminf.   31.29881 (262) obj. 66510.5 iterations 328
Cbc0038I Pass  82: (5.63 seconds) suminf.   31.15917 (252) obj. 66521.7 iterations 15
Cbc0038I Pass  83: (5.69 seconds) suminf.   27.62605 (222) obj. 66062.8 iterations 357
Cbc0038I Pass  84: (5.70 seconds) suminf.   27.24116 (226) obj. 66064.2 iterations 60
Cbc0038I Pass  85: (5.78 seconds) suminf.   25.39224 (211) obj. 61990.9 iterations 555
Cbc0038I Pass  86: (5.79 seconds) suminf.   25.39224 (211) obj. 61990.9 iterations 14
Cbc0038I Pass  87: (5.85 seconds) suminf.   20.79161 (185) obj. 60491.5 iterations 458
Cbc0038I Pass  88: (5.87 seconds) suminf.   20.61007 (187) obj. 60482.7 iterations 54
Cbc0038I Pass  89: (5.94 seconds) suminf.   16.20572 (170) obj. 59291.3 iterations 551
Cbc0038I Pass  90: (5.96 seconds) suminf.   15.60876 (171) obj. 59303.6 iterations 81
Cbc0038I Pass  91: (6.01 seconds) suminf.   12.40492 (157) obj. 55538 iterations 310
Cbc0038I Pass  92: (6.01 seconds) suminf.   12.40492 (157) obj. 55538 iterations 24
Cbc0038I Pass  93: (6.04 seconds) suminf.   11.00808 (140) obj. 55540.7 iterations 132
Cbc0038I Pass  94: (6.04 seconds) suminf.   11.00808 (140) obj. 55540.7 iterations 1
Cbc0038I Pass  95: (6.11 seconds) suminf.    8.36813 (127) obj. 55586.7 iterations 485
Cbc0038I Pass  96: (6.12 seconds) suminf.    7.84578 (118) obj. 55586.1 iterations 77
Cbc0038I Pass  97: (6.15 seconds) suminf.    8.34489 (143) obj. 55684.6 iterations 179
Cbc0038I Pass  98: (6.16 seconds) suminf.    8.14522 (142) obj. 55684.6 iterations 58
Cbc0038I Pass  99: (6.21 seconds) suminf.    8.06686 (133) obj. 49119.4 iterations 301
Cbc0038I Pass 100: (6.47 seconds) suminf.   71.51956 (397) obj. 69574.5 iterations 1810
Cbc0038I Rounding solution of 49152 is better than previous of 1e+50

Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 3438 rows 1046 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.10 seconds)
Cbc0038I Round again with cutoff of 46898.3
Cbc0038I Pass 100: (7.12 seconds) suminf.   74.00541 (376) obj. 46898 iterations 55
Cbc0038I Pass 101: (7.21 seconds) suminf.   51.79448 (343) obj. 46898.3 iterations 573
Cbc0038I Pass 102: (7.28 seconds) suminf.   45.76615 (363) obj. 46898.3 iterations 351
Cbc0038I Pass 103: (7.29 seconds) suminf.   45.68315 (360) obj. 46898.3 iterations 16
Cbc0038I Pass 104: (7.40 seconds) suminf.   44.38536 (322) obj. 46898.3 iterations 613
Cbc0038I Pass 105: (7.42 seconds) suminf.   44.25051 (353) obj. 46898.3 iterations 83
Cbc0038I Pass 106: (7.48 seconds) suminf.   44.75483 (319) obj. 46898.3 iterations 316
Cbc0038I Pass 107: (7.49 seconds) suminf.   44.64108 (315) obj. 46898.3 iterations 68
Cbc0038I Pass 108: (7.51 seconds) suminf.   44.60158 (316) obj. 46898.3 iterations 35
Cbc0038I Pass 109: (7.52 seconds) suminf.   44.47100 (305) obj. 46898.3 iterations 70
Cbc0038I Pass 110: (7.54 seconds) suminf.   44.04578 (308) obj. 46898.3 iterations 77
Cbc0038I Pass 111: (7.59 seconds) suminf.   43.96022 (309) obj. 46898.3 iterations 305
Cbc0038I Pass 112: (7.63 seconds) suminf.   43.23495 (314) obj. 46898.3 iterations 184
Cbc0038I Pass 113: (7.65 seconds) suminf.   42.26616 (301) obj. 46898.3 iterations 140
Cbc0038I Pass 114: (7.73 seconds) suminf.   39.56914 (289) obj. 46898.3 iterations 430
Cbc0038I Pass 115: (7.77 seconds) suminf.   40.52062 (312) obj. 46898.3 iterations 206
Cbc0038I Pass 116: (7.80 seconds) suminf.   40.36276 (311) obj. 46898.3 iterations 171
Cbc0038I Pass 117: (7.85 seconds) suminf.   40.04599 (301) obj. 46898.3 iterations 297
Cbc0038I Pass 118: (7.88 seconds) suminf.   40.79882 (292) obj. 46898.3 iterations 137
Cbc0038I Pass 119: (7.92 seconds) suminf.   41.11559 (322) obj. 46898.3 iterations 185
Cbc0038I Pass 120: (7.94 seconds) suminf.   41.29414 (314) obj. 46898.3 iterations 85
Cbc0038I Pass 121: (7.95 seconds) suminf.   41.20844 (323) obj. 46898.3 iterations 23
Cbc0038I Pass 122: (7.99 seconds) suminf.   40.24089 (286) obj. 46898.3 iterations 203
Cbc0038I Pass 123: (8.01 seconds) suminf.   39.26473 (287) obj. 46898.3 iterations 105
Cbc0038I Pass 124: (8.03 seconds) suminf.   39.73289 (280) obj. 46898.3 iterations 35
Cbc0038I Pass 125: (8.10 seconds) suminf.   41.50586 (278) obj. 46898.3 iterations 441
Cbc0038I Pass 126: (8.12 seconds) suminf.   42.21432 (288) obj. 46898.3 iterations 113
Cbc0038I Pass 127: (8.22 seconds) suminf.   39.18089 (290) obj. 46898.3 iterations 595
Cbc0038I Pass 128: (8.24 seconds) suminf.   38.90640 (301) obj. 46898.3 iterations 55
Cbc0038I Pass 129: (8.29 seconds) suminf.   42.00076 (296) obj. 46898.3 iterations 300
Cbc0038I Pass 130: (8.32 seconds) suminf.   40.57442 (284) obj. 46898.3 iterations 178
Cbc0038I Pass 131: (8.39 seconds) suminf.   39.38559 (284) obj. 46898.3 iterations 380
Cbc0038I Pass 132: (8.42 seconds) suminf.   38.82660 (284) obj. 46898.3 iterations 140
Cbc0038I Pass 133: (8.48 seconds) suminf.   41.44985 (293) obj. 46898.3 iterations 334
Cbc0038I Pass 134: (8.52 seconds) suminf.   39.47756 (273) obj. 46898.3 iterations 192
Cbc0038I Pass 135: (8.54 seconds) suminf.   40.34683 (289) obj. 46898.3 iterations 132
Cbc0038I Pass 136: (8.61 seconds) suminf.   39.87368 (272) obj. 46898.3 iterations 363
Cbc0038I Pass 137: (8.66 seconds) suminf.   38.74938 (294) obj. 46898.3 iterations 257
Cbc0038I Pass 138: (8.73 seconds) suminf.   42.13119 (284) obj. 46898.3 iterations 474
Cbc0038I Pass 139: (8.80 seconds) suminf.   39.18646 (311) obj. 46898.3 iterations 441
Cbc0038I Pass 140: (8.81 seconds) suminf.   39.03915 (311) obj. 46898.3 iterations 5
Cbc0038I Pass 141: (8.87 seconds) suminf.   39.95368 (266) obj. 46898.3 iterations 306
Cbc0038I Pass 142: (8.89 seconds) suminf.   39.55274 (263) obj. 46898.3 iterations 100
Cbc0038I Pass 143: (8.93 seconds) suminf.   39.54469 (288) obj. 46898.3 iterations 204
Cbc0038I Pass 144: (9.01 seconds) suminf.   38.68859 (306) obj. 46898.3 iterations 459
Cbc0038I Pass 145: (9.05 seconds) suminf.   37.50985 (295) obj. 46898.3 iterations 189
Cbc0038I Pass 146: (9.09 seconds) suminf.   37.42415 (294) obj. 46898.3 iterations 225
Cbc0038I Pass 147: (9.15 seconds) suminf.   35.82445 (278) obj. 46898.3 iterations 350
Cbc0038I Pass 148: (9.16 seconds) suminf.   35.68400 (273) obj. 46898.3 iterations 52
Cbc0038I Pass 149: (9.21 seconds) suminf.   37.90891 (298) obj. 46898.3 iterations 236
Cbc0038I Pass 150: (9.30 seconds) suminf.   37.35244 (308) obj. 46898.3 iterations 537
Cbc0038I Pass 151: (9.37 seconds) suminf.   37.34610 (316) obj. 46898.3 iterations 332
Cbc0038I Pass 152: (9.42 seconds) suminf.   37.20679 (306) obj. 46898.3 iterations 313
Cbc0038I Pass 153: (9.46 seconds) suminf.   37.16201 (322) obj. 46898.3 iterations 185
Cbc0038I Pass 154: (9.52 seconds) suminf.   38.35345 (325) obj. 46898.3 iterations 267
Cbc0038I Pass 155: (9.55 seconds) suminf.   39.07497 (344) obj. 46898.3 iterations 149
Cbc0038I Pass 156: (9.61 seconds) suminf.   36.96894 (297) obj. 46898.3 iterations 333
Cbc0038I Pass 157: (9.67 seconds) suminf.   34.87452 (331) obj. 46898.3 iterations 274
Cbc0038I Pass 158: (9.68 seconds) suminf.   34.54878 (314) obj. 46898.3 iterations 23
Cbc0038I Pass 159: (9.73 seconds) suminf.   37.77567 (332) obj. 46898.3 iterations 289
Cbc0038I Pass 160: (9.76 seconds) suminf.   37.75561 (331) obj. 46898.3 iterations 94
Cbc0038I Pass 161: (9.84 seconds) suminf.   37.84914 (252) obj. 46898.3 iterations 492
Cbc0038I Pass 162: (9.88 seconds) suminf.   37.66843 (265) obj. 46898.3 iterations 232
Cbc0038I Pass 163: (9.91 seconds) suminf.   37.30793 (270) obj. 46898.3 iterations 132
Cbc0038I Pass 164: (9.92 seconds) suminf.   37.62499 (270) obj. 46898.3 iterations 41
Cbc0038I Pass 165: (9.98 seconds) suminf.   36.67081 (315) obj. 46898.3 iterations 340
Cbc0038I Pass 166: (9.99 seconds) suminf.   36.73555 (317) obj. 46898.3 iterations 51
Cbc0038I Pass 167: (10.09 seconds) suminf.   34.91712 (305) obj. 46898.3 iterations 556
Cbc0038I Pass 168: (10.14 seconds) suminf.   34.05129 (307) obj. 46898.3 iterations 271
Cbc0038I Pass 169: (10.21 seconds) suminf.   37.33721 (253) obj. 46898.3 iterations 408
Cbc0038I Pass 170: (10.27 seconds) suminf.   32.29210 (300) obj. 46898.3 iterations 331
Cbc0038I Pass 171: (10.31 seconds) suminf.   30.90869 (282) obj. 46898.3 iterations 243
Cbc0038I Pass 172: (10.33 seconds) suminf.   30.69637 (268) obj. 46898.3 iterations 82
Cbc0038I Pass 173: (10.34 seconds) suminf.   30.67915 (268) obj. 46898.3 iterations 5
Cbc0038I Pass 174: (10.39 seconds) suminf.   32.30606 (271) obj. 46898.3 iterations 274
Cbc0038I Pass 175: (10.41 seconds) suminf.   28.84992 (256) obj. 46898.3 iterations 118
Cbc0038I Pass 176: (10.52 seconds) suminf.   22.99501 (241) obj. 46898.3 iterations 709
Cbc0038I Pass 177: (10.56 seconds) suminf.   21.22552 (189) obj. 46898.3 iterations 225
Cbc0038I Pass 178: (10.58 seconds) suminf.   18.95556 (198) obj. 46898.3 iterations 114
Cbc0038I Pass 179: (10.59 seconds) suminf.   18.69204 (196) obj. 46898.3 iterations 47
Cbc0038I Pass 180: (10.74 seconds) suminf.   16.69692 (180) obj. 46898.3 iterations 1037
Cbc0038I Pass 181: (10.76 seconds) suminf.   16.61974 (160) obj. 46898.3 iterations 105
Cbc0038I Pass 182: (10.82 seconds) suminf.   11.74530 (166) obj. 46898.3 iterations 462
Cbc0038I Pass 183: (10.86 seconds) suminf.   11.59678 (154) obj. 46898.3 iterations 191
Cbc0038I Pass 184: (10.97 seconds) suminf.    9.96273 (179) obj. 46898.3 iterations 861
Cbc0038I Pass 185: (11.04 seconds) suminf.    6.53529 (124) obj. 46898.3 iterations 457
Cbc0038I Pass 186: (11.12 seconds) suminf.    7.21018 (100) obj. 46898.3 iterations 573
Cbc0038I Pass 187: (11.14 seconds) suminf.    6.88609 (114) obj. 46898.3 iterations 166
Cbc0038I Pass 188: (11.24 seconds) suminf.    5.46841 (92) obj. 46898.3 iterations 706
Cbc0038I Pass 189: (11.27 seconds) suminf.    5.33489 (79) obj. 46898.3 iterations 229
Cbc0038I Pass 190: (11.32 seconds) suminf.    5.32063 (78) obj. 46898.3 iterations 358
Cbc0038I Pass 191: (11.34 seconds) suminf.    5.37586 (99) obj. 46898.3 iterations 119
Cbc0038I Pass 192: (11.51 seconds) suminf.    4.78473 (95) obj. 46898.3 iterations 1253
Cbc0038I Pass 193: (11.52 seconds) suminf.    4.82043 (90) obj. 46898.3 iterations 23
Cbc0038I Pass 194: (11.57 seconds) suminf.    4.62823 (60) obj. 46898.3 iterations 375
Cbc0038I Pass 195: (11.58 seconds) suminf.    4.59834 (63) obj. 46898.3 iterations 15
Cbc0038I Pass 196: (11.79 seconds) suminf.    1.50536 (41) obj. 46898.3 iterations 1729
Cbc0038I Pass 197: (11.79 seconds) suminf.    1.50536 (41) obj. 46898.3 iterations 4
Cbc0038I Pass 198: (11.92 seconds) suminf.    2.03746 (32) obj. 46898.3 iterations 846
Cbc0038I Pass 199: (12.24 seconds) suminf.   75.57873 (406) obj. 46898.3 iterations 2022
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 254 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 3249 rows 969 columns - too large
Cbc0038I Mini branch and bound did not improve solution (12.86 seconds)
Cbc0038I After 12.86 seconds - Feasibility pump exiting with objective of 49152 - took 11.71 seconds
Cbc0012I Integer solution of 49152 found by feasibility pump after 0 iterations and 0 nodes (12.86 seconds)
Cbc0031I 57 added rows had average density of 31.473684
Cbc0013I At root node, 57 cuts changed objective from 26624 to 26624 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 31 row cuts average 2.7 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 107 row cuts average 750.6 elements, 0 column cuts (0 active)  in 0.429 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 85 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 49152 best solution, best possible 26624 (21.29 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2819 rows 733 columns - 66 fixed gives 2080, 548 - still too large
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2810 rows 729 columns - 61 fixed gives 2180, 577 - still too large
Cbc0010I After 100 nodes, 5 on tree, 49152 best solution, best possible 26630 (83.03 seconds)
Cbc0010I After 200 nodes, 9 on tree, 49152 best solution, best possible 26630 (133.12 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2794 rows 724 columns - 71 fixed gives 2154, 561 - still too large
Cbc0010I After 300 nodes, 9 on tree, 49152 best solution, best possible 26630 (166.26 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2792 rows 723 columns - 87 fixed gives 1997, 518 - ok now
Cbc0010I After 400 nodes, 13 on tree, 49152 best solution, best possible 26630 (206.34 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2792 rows 723 columns - 69 fixed gives 2150, 564 - still too large
Cbc0010I After 500 nodes, 13 on tree, 49152 best solution, best possible 26630 (257.03 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2790 rows 722 columns - 68 fixed gives 2151, 559 - still too large
Cbc0010I After 600 nodes, 14 on tree, 49152 best solution, best possible 26630 (300.73 seconds)
Cbc0010I After 700 nodes, 15 on tree, 49152 best solution, best possible 26630 (340.59 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2782 rows 719 columns - 83 fixed gives 2087, 542 - still too large
Cbc0010I After 800 nodes, 18 on tree, 49152 best solution, best possible 26630 (377.83 seconds)
Cbc0010I After 900 nodes, 29 on tree, 49152 best solution, best possible 26630 (430.94 seconds)
Cbc0010I After 1000 nodes, 31 on tree, 49152 best solution, best possible 26630 (468.26 seconds)
Cbc0010I After 1100 nodes, 30 on tree, 49152 best solution, best possible 26631 (507.63 seconds)
Cbc0010I After 1200 nodes, 31 on tree, 49152 best solution, best possible 26631 (543.12 seconds)
Cbc0010I After 1300 nodes, 29 on tree, 49152 best solution, best possible 26631 (578.64 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 49152 best solution, best possible 26631 (613.73 seconds)
Cbc0010I After 1500 nodes, 29 on tree, 49152 best solution, best possible 26631 (647.85 seconds)
Cbc0010I After 1600 nodes, 31 on tree, 49152 best solution, best possible 26631 (683.59 seconds)
Cbc0010I After 1700 nodes, 30 on tree, 49152 best solution, best possible 26631 (718.47 seconds)
Cbc0010I After 1800 nodes, 30 on tree, 49152 best solution, best possible 26631 (757.33 seconds)
Cbc0010I After 1900 nodes, 32 on tree, 49152 best solution, best possible 26631 (787.88 seconds)
Cbc0010I After 2000 nodes, 29 on tree, 49152 best solution, best possible 26631 (825.83 seconds)
Cbc0010I After 2100 nodes, 32 on tree, 49152 best solution, best possible 26631 (862.07 seconds)
Cbc0010I After 2200 nodes, 31 on tree, 49152 best solution, best possible 26631 (894.99 seconds)
Cbc0010I After 2300 nodes, 29 on tree, 49152 best solution, best possible 26631 (928.51 seconds)
Cbc0010I After 2400 nodes, 32 on tree, 49152 best solution, best possible 26631 (965.97 seconds)
Cbc0010I After 2500 nodes, 29 on tree, 49152 best solution, best possible 26631 (1002.96 seconds)
Cbc0010I After 2600 nodes, 30 on tree, 49152 best solution, best possible 26631 (1039.50 seconds)
Cbc0010I After 2700 nodes, 29 on tree, 49152 best solution, best possible 26631 (1069.25 seconds)
Cbc0010I After 2800 nodes, 29 on tree, 49152 best solution, best possible 26631 (1099.54 seconds)
Cbc0010I After 2900 nodes, 29 on tree, 49152 best solution, best possible 26631 (1134.38 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2755 rows 707 columns - 73 fixed gives 2079, 541 - still too large
Cbc0010I After 3000 nodes, 29 on tree, 49152 best solution, best possible 26631 (1170.20 seconds)
Cbc0010I After 3100 nodes, 29 on tree, 49152 best solution, best possible 26631 (1203.90 seconds)
Cbc0010I After 3200 nodes, 29 on tree, 49152 best solution, best possible 26631 (1237.32 seconds)
Cbc0010I After 3300 nodes, 29 on tree, 49152 best solution, best possible 26631 (1269.24 seconds)
Cbc0010I After 3400 nodes, 29 on tree, 49152 best solution, best possible 26631 (1300.87 seconds)
Cbc0010I After 3500 nodes, 29 on tree, 49152 best solution, best possible 26631 (1330.40 seconds)
Cbc0010I After 3600 nodes, 31 on tree, 49152 best solution, best possible 26631 (1366.44 seconds)
Cbc0010I After 3700 nodes, 29 on tree, 49152 best solution, best possible 26631 (1402.75 seconds)
Cbc0010I After 3800 nodes, 29 on tree, 49152 best solution, best possible 26631 (1440.89 seconds)
Cbc0010I After 3900 nodes, 29 on tree, 49152 best solution, best possible 26631 (1477.18 seconds)
Cbc0010I After 4000 nodes, 29 on tree, 49152 best solution, best possible 26631 (1511.69 seconds)
Cbc0010I After 4100 nodes, 29 on tree, 49152 best solution, best possible 26631 (1545.03 seconds)
Cbc0010I After 4200 nodes, 29 on tree, 49152 best solution, best possible 26631 (1577.66 seconds)
Cbc0010I After 4300 nodes, 29 on tree, 49152 best solution, best possible 26631 (1610.11 seconds)
Cbc0010I After 4400 nodes, 29 on tree, 49152 best solution, best possible 26631 (1643.15 seconds)
Cbc0010I After 4500 nodes, 29 on tree, 49152 best solution, best possible 26631 (1676.23 seconds)
Cbc0010I After 4600 nodes, 29 on tree, 49152 best solution, best possible 26631 (1709.60 seconds)
Cbc0010I After 4700 nodes, 29 on tree, 49152 best solution, best possible 26631 (1742.38 seconds)
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 2768 rows 712 columns - 76 fixed gives 2031, 526 - still too large
Cbc0010I After 4800 nodes, 29 on tree, 49152 best solution, best possible 26631 (1775.46 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 49152 (best possible 26631), took 5500641 iterations and 4867 nodes (1799.43 seconds)
Cbc0032I Strong branching done 19610 times (1626512 iterations), fathomed 1201 nodes and fixed 848 variables
Cbc0035I Maximum depth 1678, 0 variables fixed on reduced cost
Cuts at root node changed objective from 26624 to 26624
Probing was tried 1198 times and created 100877 cuts of which 0 were active after adding rounds of cuts (7.530 seconds)
Gomory was tried 380 times and created 165 cuts of which 0 were active after adding rounds of cuts (3.027 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 10 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.181 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)

Result - Stopped on time limit

Objective value:                49152.00000000
Lower bound:                    26631.000
Gap:                            0.85
Enumerated nodes:               4867
Total iterations:               5500641
Time (CPU seconds):             1799.60
Time (Wallclock seconds):       1820.41

Total time (CPU seconds):       1799.61   (Wallclock seconds):       1820.43

