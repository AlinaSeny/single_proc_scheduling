Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_20_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_20_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 21504 - 0.02 seconds
Cgl0002I 54 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 244 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 1129 rows, 377 columns (377 integer (356 of which binary)) and 3796 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 377 objects (377 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 199 integers unsatisfied sum - 61.6228
Cbc0038I Pass   1: suminf.   16.79778 (77) obj. 23686.5 iterations 354
Cbc0038I Pass   2: suminf.    9.55821 (48) obj. 24234.7 iterations 99
Cbc0038I Pass   3: suminf.    5.19895 (41) obj. 24929 iterations 66
Cbc0038I Pass   4: suminf.    3.05273 (31) obj. 25600 iterations 69
Cbc0038I Pass   5: suminf.    2.72070 (28) obj. 25600 iterations 57
Cbc0038I Pass   6: suminf.    1.58510 (16) obj. 25600 iterations 80
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 25600 iterations 45
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 156 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1129 rows 377 columns, reduced to 795 rows 221 columns - 26 fixed gives 534, 148 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of 25189.5
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   8: suminf.   16.79778 (77) obj. 23686.5 iterations 0
Cbc0038I Pass   9: suminf.    9.55821 (48) obj. 24234.7 iterations 93
Cbc0038I Pass  10: suminf.    5.19895 (41) obj. 24929 iterations 33
Cbc0038I Pass  11: suminf.    4.74768 (41) obj. 25189.5 iterations 29
Cbc0038I Pass  12: suminf.    3.23779 (42) obj. 25189.5 iterations 116
Cbc0038I Pass  13: suminf.    2.67586 (38) obj. 25189.5 iterations 58
Cbc0038I Pass  14: suminf.    3.30831 (27) obj. 25189.5 iterations 116
Cbc0038I Pass  15: suminf.    1.72663 (30) obj. 25189.5 iterations 84
Cbc0038I Pass  16: suminf.    5.03280 (33) obj. 25189.5 iterations 247
Cbc0038I Pass  17: suminf.    1.79650 (63) obj. 25189.5 iterations 94
Cbc0038I Pass  18: suminf.   23.06379 (103) obj. 25189.5 iterations 347
Cbc0038I Pass  19: suminf.   13.25469 (66) obj. 25189.5 iterations 212
Cbc0038I Pass  20: suminf.   11.87076 (65) obj. 25189.5 iterations 39
Cbc0038I Pass  21: suminf.    5.72612 (38) obj. 25189.5 iterations 120
Cbc0038I Pass  22: suminf.    5.74468 (36) obj. 25189.5 iterations 23
Cbc0038I Pass  23: suminf.    2.67883 (25) obj. 25189.5 iterations 150
Cbc0038I Pass  24: suminf.    2.69012 (25) obj. 25189.5 iterations 51
Cbc0038I Pass  25: suminf.    2.35741 (46) obj. 25189.5 iterations 108
Cbc0038I Pass  26: suminf.    2.13165 (40) obj. 25189.5 iterations 27
Cbc0038I Pass  27: suminf.    4.65483 (43) obj. 25189.5 iterations 144
Cbc0038I Pass  28: suminf.    1.75049 (29) obj. 25189.5 iterations 43
Cbc0038I Pass  29: suminf.    1.72513 (30) obj. 25189.5 iterations 15
Cbc0038I Pass  30: suminf.    4.98030 (48) obj. 25189.5 iterations 253
Cbc0038I Pass  31: suminf.    4.98387 (31) obj. 25189.5 iterations 49
Cbc0038I Pass  32: suminf.    8.50211 (23) obj. 25189.5 iterations 104
Cbc0038I Pass  33: suminf.    6.68808 (24) obj. 25189.5 iterations 58
Cbc0038I Pass  34: suminf.    2.19696 (68) obj. 25189.5 iterations 89
Cbc0038I Pass  35: suminf.    1.72513 (30) obj. 25189.5 iterations 43
Cbc0038I Pass  36: suminf.    9.01248 (59) obj. 25189.5 iterations 127
Cbc0038I Pass  37: suminf.    1.75049 (29) obj. 25189.5 iterations 113
Cbc0038I Pass  38: suminf.   17.57270 (89) obj. 25189.5 iterations 252
Cbc0038I Pass  39: suminf.   10.03235 (50) obj. 25189.5 iterations 226
Cbc0038I Pass  40: suminf.    5.57839 (32) obj. 25189.5 iterations 247
Cbc0038I Pass  41: suminf.    3.27679 (39) obj. 25189.5 iterations 33
Cbc0038I Pass  42: suminf.    8.39561 (56) obj. 25189.5 iterations 202
Cbc0038I Pass  43: suminf.    5.11211 (33) obj. 25189.5 iterations 183
Cbc0038I Pass  44: suminf.    9.26322 (36) obj. 25189.5 iterations 219
Cbc0038I Pass  45: suminf.    1.72663 (30) obj. 25189.5 iterations 99
Cbc0038I Pass  46: suminf.    9.66458 (54) obj. 25189.5 iterations 254
Cbc0038I Pass  47: suminf.    6.73811 (34) obj. 25189.5 iterations 158
Cbc0038I Pass  48: suminf.    2.31639 (13) obj. 25189.5 iterations 143
Cbc0038I Pass  49: suminf.    1.72513 (30) obj. 25189.5 iterations 79
Cbc0038I Pass  50: suminf.   11.02161 (56) obj. 25189.5 iterations 288
Cbc0038I Pass  51: suminf.    6.73811 (34) obj. 25189.5 iterations 161
Cbc0038I Pass  52: suminf.    5.47363 (44) obj. 25189.5 iterations 99
Cbc0038I Pass  53: suminf.    6.07939 (48) obj. 25189.5 iterations 195
Cbc0038I Pass  54: suminf.    4.05305 (41) obj. 25189.5 iterations 77
Cbc0038I Pass  55: suminf.    7.98660 (44) obj. 25189.5 iterations 126
Cbc0038I Pass  56: suminf.    5.84689 (36) obj. 25189.5 iterations 80
Cbc0038I Pass  57: suminf.    7.75268 (26) obj. 25189.5 iterations 154
Cbc0038I Pass  58: suminf.    3.00085 (19) obj. 25189.5 iterations 41
Cbc0038I Pass  59: suminf.    2.69975 (18) obj. 25189.5 iterations 28
Cbc0038I Pass  60: suminf.    2.17024 (29) obj. 25189.5 iterations 93
Cbc0038I Pass  61: suminf.    1.72663 (30) obj. 25189.5 iterations 43
Cbc0038I Pass  62: suminf.    7.70859 (43) obj. 25189.5 iterations 264
Cbc0038I Pass  63: suminf.    1.79650 (63) obj. 25189.5 iterations 192
Cbc0038I Pass  64: suminf.   24.41188 (107) obj. 25189.5 iterations 433
Cbc0038I Pass  65: suminf.   16.88494 (83) obj. 25189.5 iterations 228
Cbc0038I Pass  66: suminf.   16.47510 (90) obj. 25189.5 iterations 65
Cbc0038I Pass  67: suminf.    4.33333 (13) obj. 24234.7 iterations 189
Cbc0038I Pass  68: suminf.    4.33333 (13) obj. 24234.7 iterations 32
Cbc0038I Pass  69: suminf.    1.67944 (26) obj. 25189.5 iterations 125
Cbc0038I Pass  70: suminf.    4.70933 (39) obj. 25189.5 iterations 157
Cbc0038I Pass  71: suminf.    1.76249 (54) obj. 25189.5 iterations 63
Cbc0038I Pass  72: suminf.   25.80360 (133) obj. 25189.5 iterations 392
Cbc0038I Pass  73: suminf.   12.26278 (94) obj. 25189.5 iterations 181
Cbc0038I Pass  74: suminf.   10.47719 (59) obj. 25189.5 iterations 32
Cbc0038I Pass  75: suminf.   10.48231 (60) obj. 25189.5 iterations 31
Cbc0038I Pass  76: suminf.    5.36092 (30) obj. 24309.4 iterations 135
Cbc0038I Pass  77: suminf.    5.30615 (30) obj. 24309.4 iterations 33
Cbc0038I Pass  78: suminf.    7.36575 (75) obj. 25189.5 iterations 142
Cbc0038I Pass  79: suminf.    2.41140 (44) obj. 25189.5 iterations 40
Cbc0038I Pass  80: suminf.    2.35001 (46) obj. 25189.5 iterations 23
Cbc0038I Pass  81: suminf.    4.66028 (51) obj. 25189.5 iterations 60
Cbc0038I Pass  82: suminf.    4.74260 (78) obj. 25189.5 iterations 33
Cbc0038I Pass  83: suminf.    9.81799 (28) obj. 25189.5 iterations 106
Cbc0038I Pass  84: suminf.    5.88489 (29) obj. 25189.5 iterations 53
Cbc0038I Pass  85: suminf.    5.45557 (77) obj. 25189.5 iterations 137
Cbc0038I Pass  86: suminf.    5.45557 (77) obj. 25189.5 iterations 14
Cbc0038I Pass  87: suminf.    8.95462 (31) obj. 25189.5 iterations 156
Cbc0038I Pass  88: suminf.    8.49454 (30) obj. 25189.5 iterations 42
Cbc0038I Pass  89: suminf.    1.72974 (33) obj. 25189.5 iterations 149
Cbc0038I Pass  90: suminf.    1.72974 (33) obj. 25189.5 iterations 4
Cbc0038I Pass  91: suminf.   10.16186 (52) obj. 25189.5 iterations 357
Cbc0038I Pass  92: suminf.    4.04830 (14) obj. 25189.5 iterations 203
Cbc0038I Pass  93: suminf.    3.68831 (43) obj. 25189.5 iterations 124
Cbc0038I Pass  94: suminf.    4.66700 (43) obj. 25189.5 iterations 152
Cbc0038I Pass  95: suminf.    2.57522 (75) obj. 25189.5 iterations 49
Cbc0038I Pass  96: suminf.    4.66667 (14) obj. 24234.7 iterations 78
Cbc0038I Pass  97: suminf.    2.00321 (14) obj. 25189.5 iterations 16
Cbc0038I Pass  98: suminf.    1.96764 (70) obj. 25189.5 iterations 103
Cbc0038I Pass  99: suminf.    1.76362 (63) obj. 25189.5 iterations 13
Cbc0038I Pass 100: suminf.    9.14184 (60) obj. 25189.5 iterations 218
Cbc0038I Pass 101: suminf.    2.41411 (44) obj. 25189.5 iterations 254
Cbc0038I Pass 102: suminf.    6.06446 (35) obj. 25189.5 iterations 330
Cbc0038I Pass 103: suminf.    5.06985 (39) obj. 25189.5 iterations 62
Cbc0038I Pass 104: suminf.    9.78947 (43) obj. 25189.5 iterations 158
Cbc0038I Pass 105: suminf.    7.15531 (24) obj. 25189.5 iterations 64
Cbc0038I Pass 106: suminf.    6.38814 (24) obj. 25189.5 iterations 114
Cbc0038I Pass 107: suminf.   42.66056 (191) obj. 25189.5 iterations 331
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.94 seconds)
Cbc0038I After 0.94 seconds - Feasibility pump exiting with objective of 25600 - took 0.87 seconds
Cbc0012I Integer solution of 25600 found by feasibility pump after 0 iterations and 0 nodes (0.94 seconds)
Cbc0031I 33 added rows had average density of 117.45455
Cbc0013I At root node, 33 cuts changed objective from 21504 to 21504 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 30 row cuts average 2.4 elements, 1 column cuts (1 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 64 row cuts average 294.1 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 212 row cuts average 276.4 elements, 0 column cuts (0 active)  in 0.256 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 25600 best solution, best possible 21504 (1.91 seconds)
Cbc0010I After 1000 nodes, 62 on tree, 25600 best solution, best possible 21660 (25.78 seconds)
Cbc0010I After 2000 nodes, 62 on tree, 25600 best solution, best possible 21668 (47.73 seconds)
Cbc0010I After 3000 nodes, 61 on tree, 25600 best solution, best possible 21668 (65.37 seconds)
Cbc0010I After 4000 nodes, 61 on tree, 25600 best solution, best possible 21668 (89.13 seconds)
Cbc0010I After 5000 nodes, 62 on tree, 25600 best solution, best possible 21668 (115.27 seconds)
Cbc0010I After 6000 nodes, 62 on tree, 25600 best solution, best possible 21672 (137.93 seconds)
Cbc0010I After 7000 nodes, 61 on tree, 25600 best solution, best possible 21672 (161.14 seconds)
Cbc0010I After 8000 nodes, 60 on tree, 25600 best solution, best possible 21672 (186.38 seconds)
Cbc0010I After 9000 nodes, 61 on tree, 25600 best solution, best possible 21672 (206.91 seconds)
Cbc0010I After 10000 nodes, 63 on tree, 25600 best solution, best possible 21680 (222.42 seconds)
Cbc0010I After 11000 nodes, 59 on tree, 25600 best solution, best possible 21680 (237.09 seconds)
Cbc0010I After 12000 nodes, 13 on tree, 25600 best solution, best possible 24576 (252.49 seconds)
Cbc0016I Integer solution of 24576 found by strong branching after 2242956 iterations and 12016 nodes (252.60 seconds)
Cbc0001I Search completed - best objective 24576, took 2242956 iterations and 12016 nodes (252.61 seconds)
Cbc0032I Strong branching done 29124 times (1107020 iterations), fathomed 3816 nodes and fixed 2858 variables
Cbc0035I Maximum depth 3093, 7 variables fixed on reduced cost
Cuts at root node changed objective from 21504 to 21504
Probing was tried 9 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Gomory was tried 9 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
Knapsack was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 9 times and created 212 cuts of which 0 were active after adding rounds of cuts (0.256 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 33 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               12016
Total iterations:               2242956
Time (CPU seconds):             252.63
Time (Wallclock seconds):       254.76

Total time (CPU seconds):       252.63   (Wallclock seconds):       254.77

