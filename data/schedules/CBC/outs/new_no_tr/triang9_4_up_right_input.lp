Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_4_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_4_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 272.1 - 2.10 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 24 tightened bounds, 1523 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 25 tightened bounds, 1186 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 794 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 18 tightened bounds, 541 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 375 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 318 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 213 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 122 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 79 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26261 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1217 integers unsatisfied sum - 242.536
Cbc0038I Pass   1: (6.26 seconds) suminf.  135.12219 (870) obj. 386.422 iterations 3631
Cbc0038I Pass   2: (6.66 seconds) suminf.  106.91205 (768) obj. 410.616 iterations 1517
Cbc0038I Pass   3: (6.88 seconds) suminf.  100.73603 (768) obj. 454.551 iterations 750
Cbc0038I Pass   4: (7.01 seconds) suminf.   96.81771 (769) obj. 457.804 iterations 438
Cbc0038I Pass   5: (7.11 seconds) suminf.   95.71723 (739) obj. 460.768 iterations 302
Cbc0038I Pass   6: (7.18 seconds) suminf.   95.44556 (726) obj. 457.263 iterations 184
Cbc0038I Pass   7: (7.26 seconds) suminf.   94.04658 (720) obj. 455.996 iterations 247
Cbc0038I Pass   8: (7.34 seconds) suminf.   92.16448 (729) obj. 456.405 iterations 225
Cbc0038I Pass   9: (7.51 seconds) suminf.   84.25578 (704) obj. 460.349 iterations 605
Cbc0038I Pass  10: (7.60 seconds) suminf.   79.19038 (708) obj. 459.676 iterations 271
Cbc0038I Pass  11: (7.68 seconds) suminf.   80.55696 (717) obj. 459.563 iterations 250
Cbc0038I Pass  12: (7.85 seconds) suminf.   73.56607 (634) obj. 460.35 iterations 638
Cbc0038I Pass  13: (8.00 seconds) suminf.   71.48707 (670) obj. 489.675 iterations 593
Cbc0038I Pass  14: (8.19 seconds) suminf.   69.22618 (695) obj. 488.659 iterations 752
Cbc0038I Pass  15: (8.38 seconds) suminf.   63.21533 (675) obj. 503.92 iterations 807
Cbc0038I Pass  16: (8.57 seconds) suminf.   59.23772 (659) obj. 503.132 iterations 739
Cbc0038I Pass  17: (8.70 seconds) suminf.   57.09823 (659) obj. 501.395 iterations 465
Cbc0038I Pass  18: (8.71 seconds) suminf.   56.88243 (662) obj. 501.271 iterations 23
Cbc0038I Pass  19: (8.92 seconds) suminf.   53.34954 (619) obj. 507.482 iterations 927
Cbc0038I Pass  20: (9.01 seconds) suminf.   53.03148 (639) obj. 500.02 iterations 284
Cbc0038I Pass  21: (9.10 seconds) suminf.   52.27060 (640) obj. 503.309 iterations 258
Cbc0038I Pass  22: (9.33 seconds) suminf.   48.57659 (581) obj. 477.754 iterations 1000
Cbc0038I Pass  23: (9.36 seconds) suminf.   48.78539 (580) obj. 479.575 iterations 91
Cbc0038I Pass  24: (9.45 seconds) suminf.   47.89587 (571) obj. 472.099 iterations 291
Cbc0038I Pass  25: (9.70 seconds) suminf.   45.46377 (574) obj. 462.98 iterations 1113
Cbc0038I Pass  26: (9.72 seconds) suminf.   44.97945 (574) obj. 462.98 iterations 48
Cbc0038I Pass  27: (9.86 seconds) suminf.   45.04532 (601) obj. 462.017 iterations 559
Cbc0038I Pass  28: (9.98 seconds) suminf.   44.77800 (601) obj. 509.496 iterations 451
Cbc0038I Pass  29: (10.06 seconds) suminf.   42.10175 (620) obj. 545.054 iterations 252
Cbc0038I Pass  30: (10.20 seconds) suminf.   40.94888 (613) obj. 549.929 iterations 575
Cbc0038I Pass  31: (10.27 seconds) suminf.   43.23523 (607) obj. 545.831 iterations 251
Cbc0038I Pass  32: (10.32 seconds) suminf.   45.02437 (580) obj. 539.343 iterations 159
Cbc0038I Pass  33: (10.38 seconds) suminf.   44.75342 (598) obj. 539.575 iterations 190
Cbc0038I Pass  34: (10.56 seconds) suminf.   44.50979 (599) obj. 506.997 iterations 768
Cbc0038I Pass  35: (10.67 seconds) suminf.   45.02993 (580) obj. 525.476 iterations 449
Cbc0038I Pass  36: (10.84 seconds) suminf.   46.65173 (594) obj. 520.365 iterations 750
Cbc0038I Pass  37: (10.94 seconds) suminf.   46.54632 (594) obj. 521.269 iterations 348
Cbc0038I Pass  38: (11.16 seconds) suminf.   41.50944 (592) obj. 508.657 iterations 994
Cbc0038I Pass  39: (11.29 seconds) suminf.   41.47633 (587) obj. 519.932 iterations 525
Cbc0038I Pass  40: (11.44 seconds) suminf.   43.39157 (578) obj. 532.282 iterations 749
Cbc0038I Pass  41: (11.55 seconds) suminf.   42.18036 (573) obj. 531.934 iterations 422
Cbc0038I Pass  42: (11.72 seconds) suminf.   44.07633 (619) obj. 534.31 iterations 729
Cbc0038I Pass  43: (11.76 seconds) suminf.   44.46282 (577) obj. 534.334 iterations 156
Cbc0038I Pass  44: (12.03 seconds) suminf.   45.89732 (583) obj. 548.43 iterations 1205
Cbc0038I Pass  45: (12.12 seconds) suminf.   43.04182 (579) obj. 548.523 iterations 331
Cbc0038I Pass  46: (12.18 seconds) suminf.   42.44338 (583) obj. 547.925 iterations 224
Cbc0038I Pass  47: (12.33 seconds) suminf.   41.48964 (609) obj. 554.357 iterations 626
Cbc0038I Pass  48: (12.44 seconds) suminf.   41.57946 (599) obj. 539.296 iterations 397
Cbc0038I Pass  49: (12.59 seconds) suminf.   42.56311 (609) obj. 527.215 iterations 584
Cbc0038I Pass  50: (12.67 seconds) suminf.   41.82524 (596) obj. 527.712 iterations 296
Cbc0038I Pass  51: (12.83 seconds) suminf.   43.09942 (614) obj. 533.673 iterations 662
Cbc0038I Pass  52: (12.94 seconds) suminf.   42.23652 (627) obj. 534.229 iterations 433
Cbc0038I Pass  53: (13.19 seconds) suminf.   44.42832 (596) obj. 547.323 iterations 1147
Cbc0038I Pass  54: (13.31 seconds) suminf.   40.61534 (603) obj. 547.536 iterations 467
Cbc0038I Pass  55: (13.47 seconds) suminf.   41.94721 (630) obj. 554.401 iterations 696
Cbc0038I Pass  56: (13.58 seconds) suminf.   42.14711 (616) obj. 539.219 iterations 388
Cbc0038I Pass  57: (13.73 seconds) suminf.   43.26000 (612) obj. 534.139 iterations 633
Cbc0038I Pass  58: (13.78 seconds) suminf.   42.99275 (602) obj. 533.961 iterations 167
Cbc0038I Pass  59: (13.95 seconds) suminf.   45.03920 (569) obj. 547.846 iterations 885
Cbc0038I Pass  60: (14.09 seconds) suminf.   43.13631 (580) obj. 539.1 iterations 599
Cbc0038I Pass  61: (14.21 seconds) suminf.   41.70428 (589) obj. 546.786 iterations 545
Cbc0038I Pass  62: (14.40 seconds) suminf.   47.95088 (610) obj. 534.43 iterations 889
Cbc0038I Pass  63: (14.49 seconds) suminf.   47.05822 (596) obj. 534.5 iterations 270
Cbc0038I Pass  64: (14.57 seconds) suminf.   44.26438 (600) obj. 534.29 iterations 283
Cbc0038I Pass  65: (14.70 seconds) suminf.   44.31057 (580) obj. 548.137 iterations 599
Cbc0038I Pass  66: (14.79 seconds) suminf.   42.36085 (601) obj. 548.476 iterations 386
Cbc0038I Pass  67: (14.86 seconds) suminf.   42.05842 (595) obj. 547.597 iterations 258
Cbc0038I Pass  68: (15.00 seconds) suminf.   43.20628 (606) obj. 555.041 iterations 568
Cbc0038I Pass  69: (15.08 seconds) suminf.   42.78383 (604) obj. 554.328 iterations 277
Cbc0038I Pass  70: (15.21 seconds) suminf.   43.55399 (619) obj. 534.186 iterations 583
Cbc0038I Pass  71: (15.31 seconds) suminf.   42.72698 (620) obj. 534.214 iterations 372
Cbc0038I Pass  72: (15.46 seconds) suminf.   42.75337 (583) obj. 548.504 iterations 674
Cbc0038I Pass  73: (15.56 seconds) suminf.   42.01903 (584) obj. 547.616 iterations 388
Cbc0038I Pass  74: (15.71 seconds) suminf.   43.86601 (613) obj. 554.319 iterations 700
Cbc0038I Pass  75: (15.83 seconds) suminf.   42.21699 (611) obj. 554.314 iterations 447
Cbc0038I Pass  76: (16.00 seconds) suminf.   44.44490 (601) obj. 534.611 iterations 769
Cbc0038I Pass  77: (16.10 seconds) suminf.   43.09110 (597) obj. 534.547 iterations 405
Cbc0038I Pass  78: (16.25 seconds) suminf.   44.42081 (589) obj. 547.692 iterations 706
Cbc0038I Pass  79: (16.37 seconds) suminf.   42.93860 (619) obj. 547.863 iterations 496
Cbc0038I Pass  80: (16.51 seconds) suminf.   44.08421 (609) obj. 554.701 iterations 681
Cbc0038I Pass  81: (16.58 seconds) suminf.   43.88585 (602) obj. 554.56 iterations 236
Cbc0038I Pass  82: (16.71 seconds) suminf.   42.80825 (621) obj. 534.556 iterations 579
Cbc0038I Pass  83: (16.77 seconds) suminf.   42.93290 (615) obj. 534.102 iterations 190
Cbc0038I Pass  84: (16.95 seconds) suminf.   44.23469 (581) obj. 547.734 iterations 822
Cbc0038I Pass  85: (17.02 seconds) suminf.   43.58823 (601) obj. 547.852 iterations 235
Cbc0038I Pass  86: (17.17 seconds) suminf.   44.24851 (634) obj. 554.338 iterations 703
Cbc0038I Pass  87: (17.28 seconds) suminf.   43.47823 (619) obj. 556.257 iterations 437
Cbc0038I Pass  88: (17.44 seconds) suminf.   42.45957 (611) obj. 534.421 iterations 690
Cbc0038I Pass  89: (17.48 seconds) suminf.   42.07802 (600) obj. 534.455 iterations 146
Cbc0038I Pass  90: (17.60 seconds) suminf.   44.54837 (591) obj. 548.107 iterations 494
Cbc0038I Pass  91: (17.68 seconds) suminf.   43.39121 (608) obj. 547.738 iterations 265
Cbc0038I Pass  92: (17.72 seconds) suminf.   42.53223 (618) obj. 547.667 iterations 128
Cbc0038I Pass  93: (17.89 seconds) suminf.   43.85255 (606) obj. 555.402 iterations 748
Cbc0038I Pass  94: (17.99 seconds) suminf.   42.45849 (600) obj. 554.803 iterations 374
Cbc0038I Pass  95: (18.11 seconds) suminf.   41.30911 (612) obj. 534.232 iterations 491
Cbc0038I Pass  96: (18.15 seconds) suminf.   42.46204 (594) obj. 534.468 iterations 141
Cbc0038I Pass  97: (18.29 seconds) suminf.   44.05097 (593) obj. 544.538 iterations 625
Cbc0038I Pass  98: (18.39 seconds) suminf.   42.11895 (618) obj. 547.937 iterations 413
Cbc0038I Pass  99: (18.52 seconds) suminf.   44.49696 (601) obj. 555.397 iterations 582
Cbc0038I Pass 100: (18.92 seconds) suminf.   77.92664 (680) obj. 492.758 iterations 2114
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 765 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5498 rows 1731 columns - too large
Cbc0038I Mini branch and bound did not improve solution (19.24 seconds)
Cbc0038I After 19.24 seconds - Feasibility pump exiting - took 14.08 seconds
Cbc0031I 91 added rows had average density of 5.1318681
Cbc0013I At root node, 91 cuts changed objective from 273.90698 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 54 row cuts average 4.0 elements, 6 column cuts (6 active)  in 0.265 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 202 row cuts average 39.8 elements, 0 column cuts (0 active)  in 1.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 415 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.510 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (34.41 seconds)
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 300 (145.95 seconds)
Cbc0010I After 200 nodes, 58 on tree, 1e+50 best solution, best possible 300 (220.70 seconds)
Cbc0010I After 300 nodes, 76 on tree, 1e+50 best solution, best possible 300 (367.71 seconds)
Cbc0010I After 400 nodes, 108 on tree, 1e+50 best solution, best possible 300 (442.05 seconds)
Cbc0010I After 500 nodes, 136 on tree, 1e+50 best solution, best possible 300 (526.02 seconds)
Cbc0010I After 600 nodes, 151 on tree, 1e+50 best solution, best possible 300 (671.89 seconds)
Cbc0010I After 700 nodes, 171 on tree, 1e+50 best solution, best possible 300 (760.88 seconds)
Cbc0010I After 800 nodes, 182 on tree, 1e+50 best solution, best possible 300 (918.67 seconds)
Cbc0010I After 900 nodes, 201 on tree, 1e+50 best solution, best possible 300 (1040.13 seconds)
Cbc0010I After 1000 nodes, 235 on tree, 1e+50 best solution, best possible 300 (1130.44 seconds)
Cbc0010I After 1100 nodes, 251 on tree, 1e+50 best solution, best possible 300 (1266.55 seconds)
Cbc0010I After 1200 nodes, 258 on tree, 1e+50 best solution, best possible 300 (1461.51 seconds)
Cbc0010I After 1300 nodes, 259 on tree, 1e+50 best solution, best possible 300 (1561.94 seconds)
Cbc0010I After 1400 nodes, 250 on tree, 1e+50 best solution, best possible 300 (1675.94 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 300), took 3729584 iterations and 1482 nodes (1825.14 seconds)
Cbc0032I Strong branching done 18894 times (1626351 iterations), fathomed 122 nodes and fixed 1500 variables
Cbc0035I Maximum depth 53, 0 variables fixed on reduced cost
Cuts at root node changed objective from 273.907 to 300
Probing was tried 305 times and created 16257 cuts of which 0 were active after adding rounds of cuts (1.852 seconds)
Gomory was tried 270 times and created 275 cuts of which 0 were active after adding rounds of cuts (2.586 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 270 times and created 3982 cuts of which 0 were active after adding rounds of cuts (1.143 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    300.000
Enumerated nodes:               1482
Total iterations:               3729584
Time (CPU seconds):             1825.14
Time (Wallclock seconds):       1826.20

Total time (CPU seconds):       1825.17   (Wallclock seconds):       1826.23

