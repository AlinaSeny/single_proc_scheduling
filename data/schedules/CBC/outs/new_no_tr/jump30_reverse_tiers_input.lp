Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump30_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump30_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 26624 - 0.11 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 5 tightened bounds, 463 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0004I processed model has 2617 rows, 838 columns (838 integer (807 of which binary)) and 9006 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 838 objects (838 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 390 integers unsatisfied sum - 132.779
Cbc0038I Pass   1: suminf.   33.55733 (234) obj. 40232.7 iterations 1037
Cbc0038I Pass   2: suminf.   31.82378 (237) obj. 40444.5 iterations 271
Cbc0038I Pass   3: suminf.   30.42352 (242) obj. 42089.5 iterations 162
Cbc0038I Pass   4: suminf.   29.77883 (240) obj. 42411.1 iterations 50
Cbc0038I Pass   5: suminf.   25.55073 (201) obj. 47524.9 iterations 479
Cbc0038I Pass   6: suminf.   22.74032 (205) obj. 48260.5 iterations 124
Cbc0038I Pass   7: suminf.   22.37154 (204) obj. 49363.1 iterations 29
Cbc0038I Pass   8: suminf.   21.57108 (186) obj. 51249.8 iterations 319
Cbc0038I Pass   9: suminf.   21.19332 (166) obj. 51200 iterations 136
Cbc0038I Pass  10: suminf.   21.04935 (166) obj. 51200 iterations 10
Cbc0038I Pass  11: suminf.   17.14167 (156) obj. 51200 iterations 247
Cbc0038I Pass  12: suminf.   16.94315 (155) obj. 51200 iterations 23
Cbc0038I Pass  13: suminf.   13.61746 (134) obj. 51573 iterations 268
Cbc0038I Pass  14: suminf.   13.95700 (127) obj. 51204.5 iterations 55
Cbc0038I Pass  15: suminf.   13.99220 (121) obj. 51200 iterations 10
Cbc0038I Pass  16: suminf.    2.99412 (44) obj. 51306.8 iterations 467
Cbc0038I Pass  17: suminf.    2.40763 (35) obj. 51306.8 iterations 43
Cbc0038I Pass  18: suminf.    3.10670 (24) obj. 54272 iterations 232
Cbc0038I Pass  19: suminf.    3.03449 (23) obj. 54272 iterations 34
Cbc0038I Pass  20: suminf.    0.52528 (14) obj. 54272 iterations 143
Cbc0038I Pass  21: suminf.    0.52528 (14) obj. 54272 iterations 6
Cbc0038I Pass  22: suminf.    0.65385 (10) obj. 54272 iterations 71
Cbc0038I Pass  23: suminf.    0.50012 (10) obj. 54272 iterations 70
Cbc0038I Pass  24: suminf.    0.00000 (0) obj. 54272 iterations 28
Cbc0038I Solution found of 54272
Cbc0038I Cleaned solution of 54272
Cbc0038I Before mini branch and bound, 304 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.05 seconds)
Cbc0038I Round again with cutoff of 51506.3
Cbc0038I Pass  25: suminf.   33.55733 (234) obj. 40232.7 iterations 0
Cbc0038I Pass  26: suminf.   31.82378 (237) obj. 40444.5 iterations 231
Cbc0038I Pass  27: suminf.   30.42352 (242) obj. 42089.5 iterations 152
Cbc0038I Pass  28: suminf.   29.77883 (240) obj. 42411.1 iterations 44
Cbc0038I Pass  29: suminf.   24.83401 (201) obj. 47315.6 iterations 626
Cbc0038I Pass  30: suminf.   22.53605 (168) obj. 47353.5 iterations 276
Cbc0038I Pass  31: suminf.   21.76778 (180) obj. 47337.5 iterations 31
Cbc0038I Pass  32: suminf.   20.06463 (140) obj. 51200 iterations 230
Cbc0038I Pass  33: suminf.   19.44932 (136) obj. 51213.2 iterations 91
Cbc0038I Pass  34: suminf.   19.00582 (140) obj. 51209.1 iterations 29
Cbc0038I Pass  35: suminf.   11.55317 (125) obj. 51221.3 iterations 332
Cbc0038I Pass  36: suminf.   10.75023 (123) obj. 51228 iterations 80
Cbc0038I Pass  37: suminf.    6.86051 (72) obj. 51285 iterations 308
Cbc0038I Pass  38: suminf.    5.37932 (71) obj. 51284.1 iterations 54
Cbc0038I Pass  39: suminf.    3.13364 (21) obj. 51307.8 iterations 368
Cbc0038I Pass  40: suminf.    3.13364 (21) obj. 51307.8 iterations 7
Cbc0038I Pass  41: suminf.    4.49074 (29) obj. 51506.3 iterations 141
Cbc0038I Pass  42: suminf.    0.67832 (18) obj. 51506.3 iterations 108
Cbc0038I Pass  43: suminf.    4.26133 (26) obj. 51506.3 iterations 116
Cbc0038I Pass  44: suminf.    4.26133 (26) obj. 51506.3 iterations 14
Cbc0038I Pass  45: suminf.    5.07865 (36) obj. 51506.3 iterations 774
Cbc0038I Pass  46: suminf.    4.94585 (31) obj. 51506.3 iterations 40
Cbc0038I Pass  47: suminf.    3.62045 (31) obj. 51506.3 iterations 85
Cbc0038I Pass  48: suminf.    2.97719 (37) obj. 51506.3 iterations 300
Cbc0038I Pass  49: suminf.    0.65536 (24) obj. 51200 iterations 125
Cbc0038I Pass  50: suminf.    4.52039 (32) obj. 51506.3 iterations 217
Cbc0038I Pass  51: suminf.    2.44560 (26) obj. 51506.3 iterations 61
Cbc0038I Pass  52: suminf.    4.24459 (33) obj. 51506.3 iterations 286
Cbc0038I Pass  53: suminf.    4.24459 (33) obj. 51506.3 iterations 20
Cbc0038I Pass  54: suminf.    1.03799 (30) obj. 51506.3 iterations 165
Cbc0038I Pass  55: suminf.    0.99482 (25) obj. 51506.3 iterations 17
Cbc0038I Pass  56: suminf.    4.92951 (26) obj. 51506.3 iterations 159
Cbc0038I Pass  57: suminf.    3.54702 (28) obj. 51506.3 iterations 18
Cbc0038I Pass  58: suminf.    0.35378 (15) obj. 51200 iterations 137
Cbc0038I Pass  59: suminf.    2.23632 (24) obj. 51506.3 iterations 84
Cbc0038I Pass  60: suminf.    1.75585 (22) obj. 51506.3 iterations 58
Cbc0038I Pass  61: suminf.    4.14804 (27) obj. 51506.3 iterations 105
Cbc0038I Pass  62: suminf.    3.11375 (30) obj. 51506.3 iterations 48
Cbc0038I Pass  63: suminf.    5.30243 (34) obj. 51506.3 iterations 189
Cbc0038I Pass  64: suminf.    5.14127 (37) obj. 51506.3 iterations 44
Cbc0038I Pass  65: suminf.    2.79617 (36) obj. 51506.3 iterations 210
Cbc0038I Pass  66: suminf.    1.70082 (25) obj. 51506.3 iterations 105
Cbc0038I Pass  67: suminf.    1.62941 (15) obj. 51506.3 iterations 651
Cbc0038I Pass  68: suminf.    1.82439 (26) obj. 51506.3 iterations 518
Cbc0038I Pass  69: suminf.    1.82929 (28) obj. 51506.3 iterations 13
Cbc0038I Pass  70: suminf.    2.10483 (16) obj. 51506.3 iterations 111
Cbc0038I Pass  71: suminf.   55.15474 (251) obj. 51506.3 iterations 1137
Cbc0038I Pass  72: suminf.   37.06400 (210) obj. 51506.3 iterations 358
Cbc0038I Pass  73: suminf.   34.09600 (201) obj. 51506.3 iterations 51
Cbc0038I Pass  74: suminf.   27.14011 (158) obj. 51506.3 iterations 319
Cbc0038I Pass  75: suminf.   27.43311 (154) obj. 51506.3 iterations 88
Cbc0038I Pass  76: suminf.   23.08462 (150) obj. 51506.3 iterations 216
Cbc0038I Pass  77: suminf.   20.98779 (144) obj. 51506.3 iterations 72
Cbc0038I Pass  78: suminf.   15.31599 (129) obj. 51506.3 iterations 171
Cbc0038I Pass  79: suminf.   15.41356 (127) obj. 51506.3 iterations 4
Cbc0038I Pass  80: suminf.    8.97509 (92) obj. 51506.3 iterations 162
Cbc0038I Pass  81: suminf.    8.81825 (91) obj. 51506.3 iterations 73
Cbc0038I Pass  82: suminf.    4.69706 (53) obj. 51506.3 iterations 175
Cbc0038I Pass  83: suminf.    4.69017 (54) obj. 51506.3 iterations 34
Cbc0038I Pass  84: suminf.    3.86815 (23) obj. 51506.3 iterations 345
Cbc0038I Pass  85: suminf.    1.54702 (16) obj. 51506.3 iterations 75
Cbc0038I Pass  86: suminf.    1.81137 (9) obj. 51506.3 iterations 1150
Cbc0038I Pass  87: suminf.    1.48219 (19) obj. 51506.3 iterations 145
Cbc0038I Pass  88: suminf.    3.96231 (20) obj. 51506.3 iterations 48
Cbc0038I Pass  89: suminf.    1.99039 (15) obj. 51506.3 iterations 114
Cbc0038I Pass  90: suminf.    1.47282 (20) obj. 51506.3 iterations 184
Cbc0038I Pass  91: suminf.   63.89230 (284) obj. 51506.3 iterations 835
Cbc0038I Pass  92: suminf.   41.37860 (248) obj. 51506.3 iterations 365
Cbc0038I Pass  93: suminf.   38.34276 (251) obj. 51506.3 iterations 85
Cbc0038I Pass  94: suminf.   37.95619 (250) obj. 51506.3 iterations 31
Cbc0038I Pass  95: suminf.   28.86215 (232) obj. 51506.3 iterations 216
Cbc0038I Pass  96: suminf.   28.67763 (228) obj. 51506.3 iterations 24
Cbc0038I Pass  97: suminf.   24.77470 (183) obj. 51506.3 iterations 265
Cbc0038I Pass  98: suminf.   23.95098 (183) obj. 51506.3 iterations 37
Cbc0038I Pass  99: suminf.   20.10017 (172) obj. 51506.3 iterations 207
Cbc0038I Pass 100: suminf.   20.06255 (172) obj. 51506.3 iterations 13
Cbc0038I Pass 101: suminf.   22.81170 (175) obj. 51506.3 iterations 164
Cbc0038I Pass 102: suminf.   20.27471 (159) obj. 51506.3 iterations 121
Cbc0038I Pass 103: suminf.   15.66455 (144) obj. 51506.3 iterations 185
Cbc0038I Pass 104: suminf.   14.57647 (147) obj. 51506.3 iterations 81
Cbc0038I Pass 105: suminf.   12.97517 (132) obj. 51506.3 iterations 188
Cbc0038I Pass 106: suminf.   12.97517 (132) obj. 51506.3 iterations 14
Cbc0038I Pass 107: suminf.   15.02669 (129) obj. 51506.3 iterations 156
Cbc0038I Pass 108: suminf.   14.31778 (128) obj. 51506.3 iterations 38
Cbc0038I Pass 109: suminf.   12.96901 (111) obj. 51506.3 iterations 148
Cbc0038I Pass 110: suminf.   11.92797 (119) obj. 51506.3 iterations 135
Cbc0038I Pass 111: suminf.   10.61142 (79) obj. 51506.3 iterations 186
Cbc0038I Pass 112: suminf.    9.25902 (83) obj. 51506.3 iterations 37
Cbc0038I Pass 113: suminf.    8.12974 (59) obj. 51506.3 iterations 192
Cbc0038I Pass 114: suminf.    4.06374 (48) obj. 51506.3 iterations 68
Cbc0038I Pass 115: suminf.    3.35995 (52) obj. 51506.3 iterations 59
Cbc0038I Pass 116: suminf.    4.83756 (26) obj. 51506.3 iterations 654
Cbc0038I Pass 117: suminf.    3.12432 (50) obj. 51506.3 iterations 488
Cbc0038I Pass 118: suminf.    0.30009 (1) obj. 51506.3 iterations 258
Cbc0038I Solution found of 51506.3
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2618 rows 838 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 51200
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2617 rows 838 columns, reduced to 2312 rows 718 columns - 221 fixed gives 1057, 302 - ok now
Cbc0038I Full problem 2617 rows 838 columns, reduced to 231 rows 85 columns
Cbc0038I Mini branch and bound did not improve solution (3.49 seconds)
Cbc0038I Round again with cutoff of 46284
Cbc0038I Pass 119: suminf.   33.55733 (234) obj. 40232.7 iterations 0
Cbc0038I Pass 120: suminf.   31.82378 (237) obj. 40444.5 iterations 231
Cbc0038I Pass 121: suminf.   30.42352 (242) obj. 42089.5 iterations 152
Cbc0038I Pass 122: suminf.   29.77883 (240) obj. 42411.1 iterations 44
Cbc0038I Pass 123: suminf.   26.39566 (201) obj. 46284 iterations 652
Cbc0038I Pass 124: suminf.   23.85259 (208) obj. 46284 iterations 232
Cbc0038I Pass 125: suminf.   25.35890 (210) obj. 46284 iterations 473
Cbc0038I Pass 126: suminf.   24.25396 (189) obj. 46284 iterations 111
Cbc0038I Pass 127: suminf.   25.04836 (191) obj. 46284 iterations 36
Cbc0038I Pass 128: suminf.   21.05575 (184) obj. 46284 iterations 232
Cbc0038I Pass 129: suminf.   21.06150 (194) obj. 46284 iterations 96
Cbc0038I Pass 130: suminf.   16.89039 (145) obj. 46284 iterations 251
Cbc0038I Pass 131: suminf.   16.48051 (133) obj. 46284 iterations 104
Cbc0038I Pass 132: suminf.   15.61752 (129) obj. 46284 iterations 16
Cbc0038I Pass 133: suminf.   10.08460 (90) obj. 46284 iterations 317
Cbc0038I Pass 134: suminf.    9.02834 (84) obj. 46284 iterations 64
Cbc0038I Pass 135: suminf.    6.08632 (49) obj. 46284 iterations 159
Cbc0038I Pass 136: suminf.    5.72289 (47) obj. 46284 iterations 91
Cbc0038I Pass 137: suminf.    4.81868 (37) obj. 46284 iterations 184
Cbc0038I Pass 138: suminf.    4.81868 (37) obj. 46284 iterations 13
Cbc0038I Pass 139: suminf.   10.43260 (57) obj. 46284 iterations 345
Cbc0038I Pass 140: suminf.    8.87101 (57) obj. 46284 iterations 52
Cbc0038I Pass 141: suminf.    4.96545 (75) obj. 46284 iterations 201
Cbc0038I Pass 142: suminf.    5.24421 (72) obj. 46284 iterations 42
Cbc0038I Pass 143: suminf.    8.34225 (46) obj. 46284 iterations 176
Cbc0038I Pass 144: suminf.    8.23535 (45) obj. 46284 iterations 56
Cbc0038I Pass 145: suminf.    9.52221 (70) obj. 46284 iterations 276
Cbc0038I Pass 146: suminf.    8.46124 (63) obj. 46284 iterations 67
Cbc0038I Pass 147: suminf.    8.14288 (70) obj. 46284 iterations 125
Cbc0038I Pass 148: suminf.    8.16804 (62) obj. 46284 iterations 40
Cbc0038I Pass 149: suminf.    9.39888 (93) obj. 46284 iterations 516
Cbc0038I Pass 150: suminf.    6.80444 (97) obj. 46284 iterations 136
Cbc0038I Pass 151: suminf.    7.15839 (67) obj. 46284 iterations 450
Cbc0038I Pass 152: suminf.    7.49109 (72) obj. 46284 iterations 120
Cbc0038I Pass 153: suminf.    9.02639 (74) obj. 46284 iterations 282
Cbc0038I Pass 154: suminf.    5.74311 (68) obj. 46284 iterations 81
Cbc0038I Pass 155: suminf.    5.62688 (65) obj. 46284 iterations 67
Cbc0038I Pass 156: suminf.    4.95994 (68) obj. 46284 iterations 497
Cbc0038I Pass 157: suminf.    4.87880 (76) obj. 46284 iterations 27
Cbc0038I Pass 158: suminf.   10.06086 (70) obj. 46284 iterations 552
Cbc0038I Pass 159: suminf.    4.82871 (53) obj. 46284 iterations 119
Cbc0038I Pass 160: suminf.    4.10911 (46) obj. 46284 iterations 153
Cbc0038I Pass 161: suminf.    9.47766 (67) obj. 46284 iterations 272
Cbc0038I Pass 162: suminf.    7.72162 (46) obj. 46284 iterations 164
Cbc0038I Pass 163: suminf.    7.04797 (48) obj. 46284 iterations 82
Cbc0038I Pass 164: suminf.    5.38379 (58) obj. 46284 iterations 685
Cbc0038I Pass 165: suminf.    4.90127 (61) obj. 46284 iterations 122
Cbc0038I Pass 166: suminf.    4.73256 (58) obj. 46284 iterations 289
Cbc0038I Pass 167: suminf.    2.92050 (50) obj. 46284 iterations 69
Cbc0038I Pass 168: suminf.    3.06124 (46) obj. 46284 iterations 26
Cbc0038I Pass 169: suminf.    2.58574 (54) obj. 46284 iterations 268
Cbc0038I Pass 170: suminf.    2.44142 (48) obj. 46284 iterations 62
Cbc0038I Pass 171: suminf.    9.24703 (72) obj. 46284 iterations 328
Cbc0038I Pass 172: suminf.    7.14143 (55) obj. 46284 iterations 50
Cbc0038I Pass 173: suminf.    7.14143 (55) obj. 46284 iterations 13
Cbc0038I Pass 174: suminf.    1.75185 (51) obj. 46284 iterations 426
Cbc0038I Pass 175: suminf.    1.50818 (47) obj. 46284 iterations 105
Cbc0038I Pass 176: suminf.    3.44742 (27) obj. 46284 iterations 117
Cbc0038I Pass 177: suminf.    2.83616 (55) obj. 46284 iterations 531
Cbc0038I Pass 178: suminf.    2.77079 (55) obj. 46284 iterations 48
Cbc0038I Pass 179: suminf.    9.07618 (55) obj. 46284 iterations 102
Cbc0038I Pass 180: suminf.    7.88551 (59) obj. 46284 iterations 71
Cbc0038I Pass 181: suminf.    5.24358 (56) obj. 46284 iterations 185
Cbc0038I Pass 182: suminf.    3.55990 (48) obj. 46284 iterations 122
Cbc0038I Pass 183: suminf.    7.55863 (52) obj. 46284 iterations 298
Cbc0038I Pass 184: suminf.    4.69338 (44) obj. 46284 iterations 46
Cbc0038I Pass 185: suminf.    3.02107 (47) obj. 46284 iterations 151
Cbc0038I Pass 186: suminf.    5.03484 (36) obj. 46284 iterations 217
Cbc0038I Pass 187: suminf.    1.52460 (31) obj. 46284 iterations 125
Cbc0038I Pass 188: suminf.    1.64968 (31) obj. 46284 iterations 36
Cbc0038I Pass 189: suminf.    4.89543 (43) obj. 46284 iterations 429
Cbc0038I Pass 190: suminf.    4.41782 (47) obj. 46284 iterations 47
Cbc0038I Pass 191: suminf.    3.79356 (42) obj. 46284 iterations 195
Cbc0038I Pass 192: suminf.    3.74706 (46) obj. 46284 iterations 24
Cbc0038I Pass 193: suminf.    7.68702 (62) obj. 46284 iterations 496
Cbc0038I Pass 194: suminf.    5.00158 (60) obj. 46284 iterations 133
Cbc0038I Pass 195: suminf.    1.37681 (31) obj. 46284 iterations 167
Cbc0038I Pass 196: suminf.    1.37681 (31) obj. 46284 iterations 18
Cbc0038I Pass 197: suminf.    4.60091 (56) obj. 46284 iterations 878
Cbc0038I Pass 198: suminf.    3.78638 (56) obj. 46284 iterations 8
Cbc0038I Pass 199: suminf.    6.63172 (53) obj. 46284 iterations 417
Cbc0038I Pass 200: suminf.    6.63547 (60) obj. 46284 iterations 61
Cbc0038I Pass 201: suminf.    6.13007 (41) obj. 46284 iterations 560
Cbc0038I Pass 202: suminf.    4.90891 (45) obj. 46284 iterations 54
Cbc0038I Pass 203: suminf.    3.14975 (26) obj. 46284 iterations 461
Cbc0038I Pass 204: suminf.    0.93245 (29) obj. 46284 iterations 53
Cbc0038I Pass 205: suminf.    0.93245 (29) obj. 46284 iterations 0
Cbc0038I Pass 206: suminf.    3.71216 (57) obj. 46284 iterations 617
Cbc0038I Pass 207: suminf.    3.63395 (56) obj. 46284 iterations 40
Cbc0038I Pass 208: suminf.    5.68469 (68) obj. 46284 iterations 124
Cbc0038I Pass 209: suminf.    5.19695 (69) obj. 46284 iterations 35
Cbc0038I Pass 210: suminf.    4.03462 (58) obj. 46284 iterations 298
Cbc0038I Pass 211: suminf.    3.04392 (29) obj. 46284 iterations 46
Cbc0038I Pass 212: suminf.    3.47217 (37) obj. 46284 iterations 211
Cbc0038I Pass 213: suminf.    2.95776 (37) obj. 46284 iterations 27
Cbc0038I Pass 214: suminf.    3.91276 (29) obj. 46284 iterations 609
Cbc0038I Pass 215: suminf.    3.72651 (29) obj. 46284 iterations 52
Cbc0038I Pass 216: suminf.    3.60674 (29) obj. 46284 iterations 195
Cbc0038I Pass 217: suminf.    1.28020 (25) obj. 46284 iterations 324
Cbc0038I Pass 218: suminf.   55.60015 (263) obj. 46284 iterations 803
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 188 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2617 rows 838 columns, reduced to 2149 rows 650 columns - 209 fixed gives 911, 246 - ok now
Cbc0038I Mini branch and bound did not improve solution (6.02 seconds)
Cbc0038I After 6.02 seconds - Feasibility pump exiting with objective of 51200 - took 5.59 seconds
Cbc0012I Integer solution of 51200 found by feasibility pump after 0 iterations and 0 nodes (6.02 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1673 rows 441 columns - 187 fixed gives 775, 184 - ok now
Cbc0031I 54 added rows had average density of 203.25926
Cbc0013I At root node, 54 cuts changed objective from 26624 to 30720 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.9 elements, 5 column cuts (5 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 278 row cuts average 566.3 elements, 0 column cuts (0 active)  in 0.412 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 92 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 31 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.303 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 51200 best solution, best possible 30720 (13.47 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1957 rows 552 columns - 211 fixed gives 889, 233 - ok now
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1679 rows 484 columns - 175 fixed gives 851, 208 - ok now
Cbc0010I After 100 nodes, 17 on tree, 51200 best solution, best possible 33792 (52.72 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1822 rows 529 columns - 185 fixed gives 892, 232 - ok now
Cbc0010I After 200 nodes, 6 on tree, 51200 best solution, best possible 33792 (81.69 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1463 rows 406 columns - 168 fixed gives 708, 154 - ok now
Cbc0010I After 300 nodes, 3 on tree, 51200 best solution, best possible 33802 (108.04 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1438 rows 394 columns - 167 fixed gives 690, 146 - ok now
Cbc0010I After 400 nodes, 3 on tree, 51200 best solution, best possible 33806 (130.42 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1464 rows 402 columns - 167 fixed gives 696, 148 - ok now
Cbc0010I After 500 nodes, 3 on tree, 51200 best solution, best possible 33806 (152.69 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1448 rows 399 columns - 167 fixed gives 686, 144 - ok now
Cbc0010I After 600 nodes, 4 on tree, 51200 best solution, best possible 33806 (176.25 seconds)
Cbc0010I After 700 nodes, 2 on tree, 51200 best solution, best possible 33806 (198.75 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1432 rows 391 columns - 167 fixed gives 688, 143 - ok now
Cbc0010I After 800 nodes, 3 on tree, 51200 best solution, best possible 33806 (221.38 seconds)
Cbc0010I After 900 nodes, 4 on tree, 51200 best solution, best possible 33806 (242.48 seconds)
Cbc0010I After 1000 nodes, 3 on tree, 51200 best solution, best possible 33806 (263.89 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1877 rows 528 columns - 204 fixed gives 898, 233 - ok now
Cbc0010I After 1100 nodes, 2 on tree, 51200 best solution, best possible 33806 (284.06 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1366 rows 371 columns - 155 fixed gives 670, 137 - ok now
Cbc0010I After 1200 nodes, 3 on tree, 51200 best solution, best possible 33806 (303.98 seconds)
Cbc0010I After 1300 nodes, 4 on tree, 51200 best solution, best possible 33806 (325.03 seconds)
Cbc0010I After 1400 nodes, 4 on tree, 51200 best solution, best possible 33806 (349.45 seconds)
Cbc0010I After 1500 nodes, 5 on tree, 51200 best solution, best possible 33806 (375.10 seconds)
Cbc0010I After 1600 nodes, 5 on tree, 51200 best solution, best possible 33806 (398.56 seconds)
Cbc0010I After 1700 nodes, 4 on tree, 51200 best solution, best possible 33806 (421.74 seconds)
Cbc0010I After 1800 nodes, 6 on tree, 51200 best solution, best possible 33806 (444.78 seconds)
Cbc0010I After 1900 nodes, 4 on tree, 51200 best solution, best possible 33806 (471.81 seconds)
Cbc0010I After 2000 nodes, 6 on tree, 51200 best solution, best possible 33806 (496.33 seconds)
Cbc0010I After 2100 nodes, 6 on tree, 51200 best solution, best possible 33806 (520.82 seconds)
Cbc0010I After 2200 nodes, 7 on tree, 51200 best solution, best possible 33806 (543.58 seconds)
Cbc0010I After 2300 nodes, 8 on tree, 51200 best solution, best possible 33806 (567.10 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1843 rows 517 columns - 198 fixed gives 876, 226 - ok now
Cbc0010I After 2400 nodes, 9 on tree, 51200 best solution, best possible 33806 (588.66 seconds)
Cbc0010I After 2500 nodes, 9 on tree, 51200 best solution, best possible 33806 (612.24 seconds)
Cbc0010I After 2600 nodes, 11 on tree, 51200 best solution, best possible 33806 (635.31 seconds)
Cbc0010I After 2700 nodes, 10 on tree, 51200 best solution, best possible 33806 (658.64 seconds)
Cbc0010I After 2800 nodes, 11 on tree, 51200 best solution, best possible 33806 (682.38 seconds)
Cbc0010I After 2900 nodes, 12 on tree, 51200 best solution, best possible 33806 (705.32 seconds)
Cbc0010I After 3000 nodes, 14 on tree, 51200 best solution, best possible 33806 (728.76 seconds)
Cbc0010I After 3100 nodes, 11 on tree, 51200 best solution, best possible 33806 (751.27 seconds)
Cbc0010I After 3200 nodes, 12 on tree, 51200 best solution, best possible 33806 (775.35 seconds)
Cbc0010I After 3300 nodes, 12 on tree, 51200 best solution, best possible 33806 (799.45 seconds)
Cbc0010I After 3400 nodes, 22 on tree, 51200 best solution, best possible 33806 (824.76 seconds)
Cbc0010I After 3500 nodes, 26 on tree, 51200 best solution, best possible 33806 (847.06 seconds)
Cbc0010I After 3600 nodes, 24 on tree, 51200 best solution, best possible 33806 (864.09 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1731 rows 495 columns - 178 fixed gives 869, 220 - ok now
Cbc0010I After 3700 nodes, 21 on tree, 51200 best solution, best possible 33806 (883.14 seconds)
Cbc0010I After 3800 nodes, 12 on tree, 51200 best solution, best possible 33806 (906.93 seconds)
Cbc0010I After 3900 nodes, 12 on tree, 51200 best solution, best possible 33806 (926.97 seconds)
Cbc0010I After 4000 nodes, 15 on tree, 51200 best solution, best possible 33806 (950.03 seconds)
Cbc0010I After 4100 nodes, 22 on tree, 51200 best solution, best possible 33806 (961.27 seconds)
Cbc0010I After 4200 nodes, 22 on tree, 51200 best solution, best possible 33806 (980.84 seconds)
Cbc0010I After 4300 nodes, 21 on tree, 51200 best solution, best possible 33806 (999.73 seconds)
Cbc0010I After 4400 nodes, 22 on tree, 51200 best solution, best possible 33806 (1015.05 seconds)
Cbc0010I After 4500 nodes, 17 on tree, 51200 best solution, best possible 33806 (1033.81 seconds)
Cbc0010I After 4600 nodes, 14 on tree, 51200 best solution, best possible 33806 (1052.24 seconds)
Cbc0010I After 4700 nodes, 14 on tree, 51200 best solution, best possible 33806 (1072.46 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1457 rows 408 columns - 164 fixed gives 740, 168 - ok now
Cbc0010I After 4800 nodes, 13 on tree, 51200 best solution, best possible 33806 (1091.09 seconds)
Cbc0010I After 4900 nodes, 12 on tree, 51200 best solution, best possible 33806 (1109.85 seconds)
Cbc0010I After 5000 nodes, 14 on tree, 51200 best solution, best possible 33806 (1128.21 seconds)
Cbc0010I After 5100 nodes, 11 on tree, 51200 best solution, best possible 33806 (1144.82 seconds)
Cbc0010I After 5200 nodes, 14 on tree, 51200 best solution, best possible 33806 (1162.49 seconds)
Cbc0010I After 5300 nodes, 16 on tree, 51200 best solution, best possible 33806 (1182.17 seconds)
Cbc0010I After 5400 nodes, 14 on tree, 51200 best solution, best possible 33806 (1202.02 seconds)
Cbc0010I After 5500 nodes, 11 on tree, 51200 best solution, best possible 33806 (1220.62 seconds)
Cbc0010I After 5600 nodes, 12 on tree, 51200 best solution, best possible 33806 (1238.65 seconds)
Cbc0010I After 5700 nodes, 15 on tree, 51200 best solution, best possible 33806 (1259.66 seconds)
Cbc0010I After 5800 nodes, 17 on tree, 51200 best solution, best possible 33806 (1279.01 seconds)
Cbc0010I After 5900 nodes, 15 on tree, 51200 best solution, best possible 33806 (1302.11 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1372 rows 379 columns - 157 fixed gives 677, 146 - ok now
Cbc0010I After 6000 nodes, 17 on tree, 51200 best solution, best possible 33806 (1321.73 seconds)
Cbc0010I After 6100 nodes, 17 on tree, 51200 best solution, best possible 33806 (1339.54 seconds)
Cbc0010I After 6200 nodes, 20 on tree, 51200 best solution, best possible 33806 (1357.04 seconds)
Cbc0010I After 6300 nodes, 20 on tree, 51200 best solution, best possible 33806 (1377.34 seconds)
Cbc0010I After 6400 nodes, 19 on tree, 51200 best solution, best possible 33806 (1397.39 seconds)
Cbc0010I After 6500 nodes, 17 on tree, 51200 best solution, best possible 33806 (1414.95 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1856 rows 516 columns - 204 fixed gives 852, 219 - ok now
Cbc0010I After 6600 nodes, 17 on tree, 51200 best solution, best possible 33806 (1434.15 seconds)
Cbc0010I After 6700 nodes, 18 on tree, 51200 best solution, best possible 33806 (1451.81 seconds)
Cbc0010I After 6800 nodes, 19 on tree, 51200 best solution, best possible 33806 (1471.72 seconds)
Cbc0010I After 6900 nodes, 22 on tree, 51200 best solution, best possible 33806 (1489.44 seconds)
Cbc0010I After 7000 nodes, 23 on tree, 51200 best solution, best possible 33806 (1506.55 seconds)
Cbc0010I After 7100 nodes, 24 on tree, 51200 best solution, best possible 33806 (1525.19 seconds)
Cbc0010I After 7200 nodes, 22 on tree, 51200 best solution, best possible 33806 (1539.89 seconds)
Cbc0010I After 7300 nodes, 24 on tree, 51200 best solution, best possible 33806 (1557.99 seconds)
Cbc0010I After 7400 nodes, 25 on tree, 51200 best solution, best possible 33806 (1576.63 seconds)
Cbc0010I After 7500 nodes, 23 on tree, 51200 best solution, best possible 33806 (1595.09 seconds)
Cbc0010I After 7600 nodes, 31 on tree, 51200 best solution, best possible 33806 (1614.02 seconds)
Cbc0010I After 7700 nodes, 37 on tree, 51200 best solution, best possible 33806 (1635.64 seconds)
Cbc0010I After 7800 nodes, 36 on tree, 51200 best solution, best possible 33806 (1653.90 seconds)
Cbc0038I Full problem 2617 rows 838 columns, reduced to 1796 rows 500 columns - 193 fixed gives 850, 217 - ok now
Cbc0010I After 7900 nodes, 33 on tree, 51200 best solution, best possible 33806 (1674.00 seconds)
Cbc0010I After 8000 nodes, 39 on tree, 51200 best solution, best possible 33806 (1691.31 seconds)
Cbc0010I After 8100 nodes, 39 on tree, 51200 best solution, best possible 33806 (1709.81 seconds)
Cbc0010I After 8200 nodes, 40 on tree, 51200 best solution, best possible 33806 (1727.16 seconds)
Cbc0010I After 8300 nodes, 45 on tree, 51200 best solution, best possible 33806 (1747.05 seconds)
Cbc0010I After 8400 nodes, 48 on tree, 51200 best solution, best possible 33806 (1768.94 seconds)
Cbc0010I After 8500 nodes, 45 on tree, 51200 best solution, best possible 33806 (1790.47 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 51200 (best possible 33806), took 6624047 iterations and 8546 nodes (1799.92 seconds)
Cbc0032I Strong branching done 37834 times (2460152 iterations), fathomed 139 nodes and fixed 9767 variables
Cbc0035I Maximum depth 954, 0 variables fixed on reduced cost
Cuts at root node changed objective from 26624 to 30720
Probing was tried 6169 times and created 304616 cuts of which 0 were active after adding rounds of cuts (21.191 seconds)
Gomory was tried 4621 times and created 2187 cuts of which 0 were active after adding rounds of cuts (15.805 seconds)
Knapsack was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 4621 times and created 49927 cuts of which 0 were active after adding rounds of cuts (5.931 seconds)
ZeroHalf was tried 4621 times and created 1310 cuts of which 0 were active after adding rounds of cuts (74.105 seconds)

Result - Stopped on time limit

Objective value:                51200.00000000
Lower bound:                    33806.000
Gap:                            0.51
Enumerated nodes:               8546
Total iterations:               6624047
Time (CPU seconds):             1800.00
Time (Wallclock seconds):       1829.53

Total time (CPU seconds):       1800.01   (Wallclock seconds):       1829.54

