Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_0_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_0_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 215.116 - 1.08 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 19 tightened bounds, 974 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 665 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 459 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 209 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 169 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 130 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 133 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 73 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 15973 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 784 integers unsatisfied sum - 235.614
Cbc0038I Pass   1: (3.61 seconds) suminf.  120.55913 (713) obj. 324.151 iterations 2218
Cbc0038I Pass   2: (3.86 seconds) suminf.   69.25849 (767) obj. 325.743 iterations 1189
Cbc0038I Pass   3: (3.96 seconds) suminf.   63.19227 (757) obj. 380.433 iterations 444
Cbc0038I Pass   4: (4.04 seconds) suminf.   60.43410 (777) obj. 396.708 iterations 324
Cbc0038I Pass   5: (4.08 seconds) suminf.   59.95501 (762) obj. 394.124 iterations 125
Cbc0038I Pass   6: (4.32 seconds) suminf.   56.40924 (814) obj. 398.217 iterations 1063
Cbc0038I Pass   7: (4.39 seconds) suminf.   54.54804 (827) obj. 398.461 iterations 226
Cbc0038I Pass   8: (4.40 seconds) suminf.   54.27923 (831) obj. 397.748 iterations 21
Cbc0038I Pass   9: (4.52 seconds) suminf.   53.87978 (816) obj. 427.854 iterations 487
Cbc0038I Pass  10: (4.58 seconds) suminf.   51.59983 (817) obj. 413.649 iterations 191
Cbc0038I Pass  11: (4.69 seconds) suminf.   51.33226 (823) obj. 416.345 iterations 373
Cbc0038I Pass  12: (4.72 seconds) suminf.   51.05154 (811) obj. 448.51 iterations 102
Cbc0038I Pass  13: (4.85 seconds) suminf.   52.79567 (837) obj. 444.998 iterations 511
Cbc0038I Pass  14: (4.91 seconds) suminf.   53.51103 (871) obj. 445.43 iterations 169
Cbc0038I Pass  15: (5.12 seconds) suminf.   51.80995 (838) obj. 445.395 iterations 878
Cbc0038I Pass  16: (5.22 seconds) suminf.   49.31420 (824) obj. 456.882 iterations 345
Cbc0038I Pass  17: (5.35 seconds) suminf.   48.71725 (821) obj. 455.276 iterations 640
Cbc0038I Pass  18: (5.44 seconds) suminf.   46.93619 (853) obj. 454.271 iterations 447
Cbc0038I Pass  19: (5.50 seconds) suminf.   46.40064 (834) obj. 453.609 iterations 194
Cbc0038I Pass  20: (5.66 seconds) suminf.   48.03352 (845) obj. 511.563 iterations 754
Cbc0038I Pass  21: (5.79 seconds) suminf.   48.72053 (841) obj. 488.589 iterations 588
Cbc0038I Pass  22: (5.93 seconds) suminf.   44.92877 (846) obj. 541.292 iterations 655
Cbc0038I Pass  23: (5.99 seconds) suminf.   45.74279 (854) obj. 539.604 iterations 233
Cbc0038I Pass  24: (6.11 seconds) suminf.   47.39401 (853) obj. 541.811 iterations 506
Cbc0038I Pass  25: (6.26 seconds) suminf.   45.51822 (849) obj. 537.668 iterations 648
Cbc0038I Pass  26: (6.30 seconds) suminf.   46.53202 (847) obj. 533.605 iterations 131
Cbc0038I Pass  27: (6.43 seconds) suminf.   52.10099 (836) obj. 529.466 iterations 559
Cbc0038I Pass  28: (6.56 seconds) suminf.   46.77812 (828) obj. 532.789 iterations 569
Cbc0038I Pass  29: (6.61 seconds) suminf.   46.31859 (827) obj. 533.257 iterations 171
Cbc0038I Pass  30: (6.73 seconds) suminf.   50.40661 (858) obj. 522.581 iterations 535
Cbc0038I Pass  31: (6.85 seconds) suminf.   45.58846 (837) obj. 537.46 iterations 479
Cbc0038I Pass  32: (6.89 seconds) suminf.   45.92754 (838) obj. 534.833 iterations 114
Cbc0038I Pass  33: (6.93 seconds) suminf.   45.85123 (852) obj. 533.764 iterations 139
Cbc0038I Pass  34: (7.05 seconds) suminf.   47.17081 (811) obj. 535.177 iterations 499
Cbc0038I Pass  35: (7.14 seconds) suminf.   46.39927 (863) obj. 532.467 iterations 402
Cbc0038I Pass  36: (7.26 seconds) suminf.   48.16405 (877) obj. 536.033 iterations 472
Cbc0038I Pass  37: (7.38 seconds) suminf.   45.94339 (870) obj. 533.604 iterations 468
Cbc0038I Pass  38: (7.52 seconds) suminf.   50.14533 (850) obj. 529.229 iterations 625
Cbc0038I Pass  39: (7.65 seconds) suminf.   45.34092 (855) obj. 539.981 iterations 517
Cbc0038I Pass  40: (7.78 seconds) suminf.   47.56652 (834) obj. 538.912 iterations 558
Cbc0038I Pass  41: (7.89 seconds) suminf.   46.87583 (861) obj. 540.072 iterations 465
Cbc0038I Pass  42: (7.94 seconds) suminf.   47.52519 (853) obj. 539.552 iterations 145
Cbc0038I Pass  43: (8.08 seconds) suminf.   51.39186 (836) obj. 553.572 iterations 570
Cbc0038I Pass  44: (8.21 seconds) suminf.   47.75167 (874) obj. 534.915 iterations 553
Cbc0038I Pass  45: (8.40 seconds) suminf.   50.58893 (829) obj. 576.692 iterations 896
Cbc0038I Pass  46: (8.50 seconds) suminf.   45.78591 (828) obj. 583.921 iterations 424
Cbc0038I Pass  47: (8.60 seconds) suminf.   47.90938 (850) obj. 582.156 iterations 443
Cbc0038I Pass  48: (8.68 seconds) suminf.   46.12642 (828) obj. 581.207 iterations 384
Cbc0038I Pass  49: (8.73 seconds) suminf.   46.13079 (855) obj. 580.5 iterations 146
Cbc0038I Pass  50: (8.84 seconds) suminf.   47.74368 (880) obj. 584.412 iterations 512
Cbc0038I Pass  51: (8.93 seconds) suminf.   45.65876 (855) obj. 580.097 iterations 382
Cbc0038I Pass  52: (9.00 seconds) suminf.   46.63514 (840) obj. 580.105 iterations 266
Cbc0038I Pass  53: (9.17 seconds) suminf.   48.02445 (848) obj. 534.02 iterations 789
Cbc0038I Pass  54: (9.26 seconds) suminf.   47.61367 (862) obj. 535.131 iterations 352
Cbc0038I Pass  55: (9.45 seconds) suminf.   48.91078 (834) obj. 579.755 iterations 845
Cbc0038I Pass  56: (9.55 seconds) suminf.   45.79367 (850) obj. 583.236 iterations 412
Cbc0038I Pass  57: (9.60 seconds) suminf.   46.63514 (840) obj. 580.105 iterations 166
Cbc0038I Pass  58: (9.75 seconds) suminf.   48.76125 (842) obj. 559.012 iterations 638
Cbc0038I Pass  59: (9.89 seconds) suminf.   47.38780 (873) obj. 519.169 iterations 596
Cbc0038I Pass  60: (9.95 seconds) suminf.   48.27783 (862) obj. 509.385 iterations 181
Cbc0038I Pass  61: (10.09 seconds) suminf.   51.28332 (840) obj. 516.514 iterations 586
Cbc0038I Pass  62: (10.20 seconds) suminf.   48.24219 (846) obj. 510.118 iterations 430
Cbc0038I Pass  63: (10.35 seconds) suminf.   51.19139 (845) obj. 533.771 iterations 649
Cbc0038I Pass  64: (10.46 seconds) suminf.   47.65810 (859) obj. 532.776 iterations 473
Cbc0038I Pass  65: (10.57 seconds) suminf.   47.81364 (836) obj. 510.083 iterations 435
Cbc0038I Pass  66: (10.68 seconds) suminf.   49.75283 (838) obj. 536.508 iterations 502
Cbc0038I Pass  67: (10.80 seconds) suminf.   47.89059 (856) obj. 510.157 iterations 490
Cbc0038I Pass  68: (10.85 seconds) suminf.   47.47572 (841) obj. 509.986 iterations 146
Cbc0038I Pass  69: (10.96 seconds) suminf.   48.57990 (844) obj. 520.887 iterations 469
Cbc0038I Pass  70: (11.07 seconds) suminf.   47.81364 (836) obj. 510.083 iterations 459
Cbc0038I Pass  71: (11.20 seconds) suminf.   50.77738 (825) obj. 535.725 iterations 541
Cbc0038I Pass  72: (11.29 seconds) suminf.   48.34129 (847) obj. 536.773 iterations 368
Cbc0038I Pass  73: (11.48 seconds) suminf.   52.38679 (862) obj. 572.007 iterations 840
Cbc0038I Pass  74: (11.59 seconds) suminf.   47.93063 (853) obj. 578.022 iterations 432
Cbc0038I Pass  75: (11.74 seconds) suminf.   49.19868 (842) obj. 564.282 iterations 646
Cbc0038I Pass  76: (11.86 seconds) suminf.   46.28038 (872) obj. 583.429 iterations 484
Cbc0038I Pass  77: (11.89 seconds) suminf.   46.16412 (862) obj. 583.393 iterations 96
Cbc0038I Pass  78: (12.03 seconds) suminf.   49.80530 (864) obj. 574.579 iterations 633
Cbc0038I Pass  79: (12.14 seconds) suminf.   45.65876 (855) obj. 580.097 iterations 494
Cbc0038I Pass  80: (12.20 seconds) suminf.   46.63514 (840) obj. 580.105 iterations 248
Cbc0038I Pass  81: (12.34 seconds) suminf.   48.98869 (843) obj. 554.21 iterations 604
Cbc0038I Pass  82: (12.49 seconds) suminf.   47.08014 (856) obj. 510.053 iterations 601
Cbc0038I Pass  83: (12.56 seconds) suminf.   47.84996 (844) obj. 510.196 iterations 248
Cbc0038I Pass  84: (12.70 seconds) suminf.   49.52601 (833) obj. 529.38 iterations 605
Cbc0038I Pass  85: (12.85 seconds) suminf.   47.82403 (845) obj. 510.159 iterations 638
Cbc0038I Pass  86: (12.91 seconds) suminf.   47.81364 (836) obj. 510.083 iterations 178
Cbc0038I Pass  87: (13.04 seconds) suminf.   50.43169 (835) obj. 535.65 iterations 546
Cbc0038I Pass  88: (13.14 seconds) suminf.   48.34129 (847) obj. 536.773 iterations 407
Cbc0038I Pass  89: (13.35 seconds) suminf.   50.71879 (853) obj. 574.842 iterations 934
Cbc0038I Pass  90: (13.46 seconds) suminf.   47.93063 (853) obj. 578.022 iterations 452
Cbc0038I Pass  91: (13.61 seconds) suminf.   48.82419 (852) obj. 533.668 iterations 655
Cbc0038I Pass  92: (13.75 seconds) suminf.   47.64145 (848) obj. 510.051 iterations 580
Cbc0038I Pass  93: (13.79 seconds) suminf.   47.84996 (844) obj. 510.196 iterations 125
Cbc0038I Pass  94: (13.93 seconds) suminf.   49.17175 (837) obj. 529.94 iterations 597
Cbc0038I Pass  95: (14.07 seconds) suminf.   47.82403 (845) obj. 510.159 iterations 608
Cbc0038I Pass  96: (14.12 seconds) suminf.   47.81364 (836) obj. 510.083 iterations 156
Cbc0038I Pass  97: (14.24 seconds) suminf.   49.90316 (834) obj. 535.596 iterations 493
Cbc0038I Pass  98: (14.36 seconds) suminf.   47.89059 (856) obj. 510.157 iterations 536
Cbc0038I Pass  99: (14.41 seconds) suminf.   47.47572 (841) obj. 509.986 iterations 140
Cbc0038I Pass 100: (14.64 seconds) suminf.   80.25742 (842) obj. 601.758 iterations 1361
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 183 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4301 rows 1431 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.75 seconds)
Cbc0038I After 14.75 seconds - Feasibility pump exiting - took 11.61 seconds
Cbc0031I 40 added rows had average density of 8.725
Cbc0013I At root node, 40 cuts changed objective from 215.32631 to 250 in 21 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 4.1 elements, 6 column cuts (6 active)  in 0.253 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 158 row cuts average 131.6 elements, 0 column cuts (0 active)  in 1.194 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 378 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 47 row cuts average 39.5 elements, 0 column cuts (0 active)  in 1.045 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 250 (33.37 seconds)
Cbc0010I After 100 nodes, 4 on tree, 1e+50 best solution, best possible 260 (152.45 seconds)
Cbc0010I After 200 nodes, 18 on tree, 1e+50 best solution, best possible 260 (209.22 seconds)
Cbc0010I After 300 nodes, 16 on tree, 1e+50 best solution, best possible 260 (262.61 seconds)
Cbc0010I After 400 nodes, 15 on tree, 1e+50 best solution, best possible 260 (318.36 seconds)
Cbc0010I After 500 nodes, 14 on tree, 1e+50 best solution, best possible 260 (374.60 seconds)
Cbc0010I After 600 nodes, 18 on tree, 1e+50 best solution, best possible 260 (432.71 seconds)
Cbc0010I After 700 nodes, 22 on tree, 1e+50 best solution, best possible 260 (495.15 seconds)
Cbc0010I After 800 nodes, 33 on tree, 1e+50 best solution, best possible 260 (556.64 seconds)
Cbc0010I After 900 nodes, 36 on tree, 1e+50 best solution, best possible 260 (603.91 seconds)
Cbc0010I After 1000 nodes, 47 on tree, 1e+50 best solution, best possible 260 (668.74 seconds)
Cbc0010I After 1100 nodes, 27 on tree, 1e+50 best solution, best possible 260 (726.95 seconds)
Cbc0010I After 1200 nodes, 18 on tree, 1e+50 best solution, best possible 260 (792.14 seconds)
Cbc0010I After 1300 nodes, 11 on tree, 1e+50 best solution, best possible 260 (853.48 seconds)
Cbc0010I After 1400 nodes, 18 on tree, 1e+50 best solution, best possible 260 (913.79 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 1e+50 best solution, best possible 260 (1000.57 seconds)
Cbc0010I After 1600 nodes, 11 on tree, 1e+50 best solution, best possible 260 (1067.65 seconds)
Cbc0010I After 1700 nodes, 12 on tree, 1e+50 best solution, best possible 260 (1123.32 seconds)
Cbc0010I After 1800 nodes, 13 on tree, 1e+50 best solution, best possible 260 (1183.64 seconds)
Cbc0010I After 1900 nodes, 16 on tree, 1e+50 best solution, best possible 260 (1243.61 seconds)
Cbc0010I After 2000 nodes, 26 on tree, 1e+50 best solution, best possible 260 (1294.23 seconds)
Cbc0010I After 2100 nodes, 28 on tree, 1e+50 best solution, best possible 260 (1347.92 seconds)
Cbc0010I After 2200 nodes, 20 on tree, 1e+50 best solution, best possible 260 (1401.89 seconds)
Cbc0010I After 2300 nodes, 26 on tree, 1e+50 best solution, best possible 260 (1449.60 seconds)
Cbc0010I After 2400 nodes, 25 on tree, 1e+50 best solution, best possible 260 (1503.54 seconds)
Cbc0010I After 2500 nodes, 23 on tree, 1e+50 best solution, best possible 260 (1541.00 seconds)
Cbc0010I After 2600 nodes, 20 on tree, 1e+50 best solution, best possible 260 (1588.39 seconds)
Cbc0010I After 2700 nodes, 16 on tree, 1e+50 best solution, best possible 260 (1631.41 seconds)
Cbc0010I After 2800 nodes, 17 on tree, 1e+50 best solution, best possible 260 (1673.23 seconds)
Cbc0010I After 2900 nodes, 15 on tree, 1e+50 best solution, best possible 260 (1717.94 seconds)
Cbc0010I After 3000 nodes, 6 on tree, 1e+50 best solution, best possible 260 (1759.14 seconds)
Cbc0010I After 3100 nodes, 12 on tree, 1e+50 best solution, best possible 260 (1792.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 260), took 3685690 iterations and 3122 nodes (1797.98 seconds)
Cbc0032I Strong branching done 26678 times (2132895 iterations), fathomed 193 nodes and fixed 2273 variables
Cbc0035I Maximum depth 57, 0 variables fixed on reduced cost
Cuts at root node changed objective from 215.326 to 250
Probing was tried 2256 times and created 172402 cuts of which 0 were active after adding rounds of cuts (19.388 seconds)
Gomory was tried 1941 times and created 908 cuts of which 0 were active after adding rounds of cuts (14.604 seconds)
Knapsack was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Clique was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
MixedIntegerRounding2 was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
FlowCover was tried 21 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 1941 times and created 33396 cuts of which 0 were active after adding rounds of cuts (4.336 seconds)
ZeroHalf was tried 1941 times and created 2128 cuts of which 0 were active after adding rounds of cuts (69.097 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    260.000
Enumerated nodes:               3122
Total iterations:               3685690
Time (CPU seconds):             1797.98
Time (Wallclock seconds):       1806.81

Total time (CPU seconds):       1798.00   (Wallclock seconds):       1806.84

