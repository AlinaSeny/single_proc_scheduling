Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_4_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_4_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 229.075 - 0.52 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1011 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 638 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 392 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 13 tightened bounds, 302 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 182 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 101 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 85 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16026 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 700 integers unsatisfied sum - 221.96
Cbc0038I Pass   1: (1.85 seconds) suminf.   87.47670 (602) obj. 325.734 iterations 2275
Cbc0038I Pass   2: (2.01 seconds) suminf.   68.12784 (613) obj. 335.236 iterations 975
Cbc0038I Pass   3: (2.15 seconds) suminf.   60.97542 (634) obj. 381.636 iterations 765
Cbc0038I Pass   4: (2.20 seconds) suminf.   58.22700 (637) obj. 414.02 iterations 197
Cbc0038I Pass   5: (2.21 seconds) suminf.   58.36808 (643) obj. 415.398 iterations 67
Cbc0038I Pass   6: (2.22 seconds) suminf.   58.17195 (643) obj. 416.613 iterations 21
Cbc0038I Pass   7: (2.34 seconds) suminf.   54.99130 (611) obj. 435.651 iterations 663
Cbc0038I Pass   8: (2.40 seconds) suminf.   53.04440 (607) obj. 455.025 iterations 278
Cbc0038I Pass   9: (2.45 seconds) suminf.   51.88040 (616) obj. 458.644 iterations 198
Cbc0038I Pass  10: (2.52 seconds) suminf.   54.78378 (590) obj. 456.783 iterations 330
Cbc0038I Pass  11: (2.57 seconds) suminf.   55.09441 (619) obj. 458.036 iterations 243
Cbc0038I Pass  12: (2.61 seconds) suminf.   54.84800 (623) obj. 457.336 iterations 160
Cbc0038I Pass  13: (2.69 seconds) suminf.   51.78644 (598) obj. 454.447 iterations 373
Cbc0038I Pass  14: (2.75 seconds) suminf.   50.66352 (591) obj. 454.4 iterations 311
Cbc0038I Pass  15: (2.83 seconds) suminf.   51.77855 (556) obj. 450.683 iterations 418
Cbc0038I Pass  16: (2.91 seconds) suminf.   49.15209 (578) obj. 450.869 iterations 445
Cbc0038I Pass  17: (2.95 seconds) suminf.   46.97623 (557) obj. 450.372 iterations 207
Cbc0038I Pass  18: (2.97 seconds) suminf.   47.02467 (564) obj. 450.744 iterations 23
Cbc0038I Pass  19: (3.06 seconds) suminf.   49.11528 (595) obj. 452.871 iterations 552
Cbc0038I Pass  20: (3.10 seconds) suminf.   49.78630 (620) obj. 454.979 iterations 138
Cbc0038I Pass  21: (3.20 seconds) suminf.   48.33622 (565) obj. 451.04 iterations 530
Cbc0038I Pass  22: (3.28 seconds) suminf.   48.39210 (583) obj. 454.056 iterations 455
Cbc0038I Pass  23: (3.34 seconds) suminf.   51.74549 (558) obj. 450.481 iterations 353
Cbc0038I Pass  24: (3.44 seconds) suminf.   49.36766 (616) obj. 452.604 iterations 533
Cbc0038I Pass  25: (3.49 seconds) suminf.   48.87047 (577) obj. 454.602 iterations 255
Cbc0038I Pass  26: (3.54 seconds) suminf.   47.82843 (592) obj. 453.748 iterations 194
Cbc0038I Pass  27: (3.63 seconds) suminf.   47.98330 (547) obj. 450.329 iterations 491
Cbc0038I Pass  28: (3.70 seconds) suminf.   46.53408 (573) obj. 451.892 iterations 372
Cbc0038I Pass  29: (3.79 seconds) suminf.   47.78733 (585) obj. 453.81 iterations 484
Cbc0038I Pass  30: (3.84 seconds) suminf.   48.41778 (583) obj. 455.186 iterations 237
Cbc0038I Pass  31: (3.91 seconds) suminf.   48.86956 (581) obj. 452.715 iterations 347
Cbc0038I Pass  32: (3.96 seconds) suminf.   48.28922 (570) obj. 451.793 iterations 247
Cbc0038I Pass  33: (4.03 seconds) suminf.   46.59333 (567) obj. 450.973 iterations 435
Cbc0038I Pass  34: (4.34 seconds) suminf.   89.42285 (691) obj. 507.595 iterations 1882
Cbc0038I Pass  35: (4.54 seconds) suminf.   61.49225 (692) obj. 495.716 iterations 1119
Cbc0038I Pass  36: (4.59 seconds) suminf.   61.72253 (701) obj. 507.614 iterations 189
Cbc0038I Pass  37: (4.61 seconds) suminf.   61.38708 (681) obj. 503.748 iterations 99
Cbc0038I Pass  38: (4.71 seconds) suminf.   61.18330 (670) obj. 527.145 iterations 498
Cbc0038I Pass  39: (4.77 seconds) suminf.   60.28420 (682) obj. 555.011 iterations 261
Cbc0038I Pass  40: (4.79 seconds) suminf.   59.92051 (686) obj. 555.055 iterations 82
Cbc0038I Pass  41: (4.88 seconds) suminf.   57.56434 (709) obj. 550.644 iterations 432
Cbc0038I Pass  42: (4.90 seconds) suminf.   57.25794 (696) obj. 548.166 iterations 101
Cbc0038I Pass  43: (5.02 seconds) suminf.   58.10628 (631) obj. 541.064 iterations 632
Cbc0038I Pass  44: (5.08 seconds) suminf.   54.70213 (654) obj. 536.725 iterations 273
Cbc0038I Pass  45: (5.19 seconds) suminf.   58.38302 (707) obj. 548.872 iterations 520
Cbc0038I Pass  46: (5.25 seconds) suminf.   55.72338 (691) obj. 548.686 iterations 292
Cbc0038I Pass  47: (5.28 seconds) suminf.   55.53210 (691) obj. 548.538 iterations 121
Cbc0038I Pass  48: (5.35 seconds) suminf.   56.91708 (732) obj. 546.031 iterations 288
Cbc0038I Pass  49: (5.37 seconds) suminf.   56.50078 (713) obj. 545.928 iterations 52
Cbc0038I Pass  50: (5.43 seconds) suminf.   57.98492 (679) obj. 551.733 iterations 294
Cbc0038I Pass  51: (5.48 seconds) suminf.   57.03228 (690) obj. 544.125 iterations 181
Cbc0038I Pass  52: (5.51 seconds) suminf.   56.45725 (697) obj. 542.517 iterations 130
Cbc0038I Pass  53: (5.55 seconds) suminf.   55.28680 (687) obj. 590.927 iterations 116
Cbc0038I Pass  54: (5.58 seconds) suminf.   56.40889 (693) obj. 576.132 iterations 127
Cbc0038I Pass  55: (5.67 seconds) suminf.   61.29211 (637) obj. 572.579 iterations 409
Cbc0038I Pass  56: (5.70 seconds) suminf.   61.32258 (641) obj. 549.012 iterations 135
Cbc0038I Pass  57: (5.73 seconds) suminf.   60.20949 (647) obj. 546.972 iterations 139
Cbc0038I Pass  58: (5.78 seconds) suminf.   60.02190 (630) obj. 547.909 iterations 181
Cbc0038I Pass  59: (5.82 seconds) suminf.   59.37107 (647) obj. 571.421 iterations 200
Cbc0038I Pass  60: (5.86 seconds) suminf.   58.20563 (664) obj. 572.958 iterations 136
Cbc0038I Pass  61: (5.90 seconds) suminf.   59.18947 (655) obj. 573.785 iterations 153
Cbc0038I Pass  62: (6.01 seconds) suminf.   62.08810 (576) obj. 539.69 iterations 623
Cbc0038I Pass  63: (6.04 seconds) suminf.   61.70284 (576) obj. 543.327 iterations 130
Cbc0038I Pass  64: (6.12 seconds) suminf.   61.68937 (584) obj. 546.14 iterations 428
Cbc0038I Pass  65: (6.17 seconds) suminf.   58.01197 (574) obj. 553.305 iterations 219
Cbc0038I Pass  66: (6.24 seconds) suminf.   60.01726 (519) obj. 538.554 iterations 360
Cbc0038I Pass  67: (6.26 seconds) suminf.   59.62844 (513) obj. 540.147 iterations 106
Cbc0038I Pass  68: (6.32 seconds) suminf.   57.83449 (495) obj. 536.637 iterations 270
Cbc0038I Pass  69: (6.35 seconds) suminf.   56.93769 (505) obj. 536.939 iterations 152
Cbc0038I Pass  70: (6.41 seconds) suminf.   57.35478 (483) obj. 531.029 iterations 349
Cbc0038I Pass  71: (6.43 seconds) suminf.   56.58297 (493) obj. 531.645 iterations 71
Cbc0038I Pass  72: (6.48 seconds) suminf.   58.24519 (510) obj. 525.285 iterations 267
Cbc0038I Pass  73: (6.49 seconds) suminf.   57.47176 (499) obj. 527.896 iterations 33
Cbc0038I Pass  74: (6.50 seconds) suminf.   57.61416 (494) obj. 528.354 iterations 12
Cbc0038I Pass  75: (6.55 seconds) suminf.   52.53707 (398) obj. 521.86 iterations 285
Cbc0038I Pass  76: (6.59 seconds) suminf.   51.15937 (424) obj. 529.365 iterations 195
Cbc0038I Pass  77: (6.60 seconds) suminf.   51.05413 (413) obj. 531.47 iterations 12
Cbc0038I Pass  78: (6.68 seconds) suminf.   49.29101 (394) obj. 526.364 iterations 514
Cbc0038I Pass  79: (6.69 seconds) suminf.   48.88029 (383) obj. 525.588 iterations 35
Cbc0038I Pass  80: (6.78 seconds) suminf.   43.34457 (369) obj. 498.909 iterations 649
Cbc0038I Pass  81: (6.79 seconds) suminf.   42.69319 (368) obj. 494.44 iterations 82
Cbc0038I Pass  82: (6.84 seconds) suminf.   43.16416 (376) obj. 490.797 iterations 260
Cbc0038I Pass  83: (6.85 seconds) suminf.   43.25981 (377) obj. 490.699 iterations 60
Cbc0038I Pass  84: (6.90 seconds) suminf.   41.80827 (369) obj. 524.212 iterations 257
Cbc0038I Pass  85: (6.94 seconds) suminf.   38.78270 (372) obj. 530.146 iterations 269
Cbc0038I Pass  86: (7.00 seconds) suminf.   32.07739 (337) obj. 506.874 iterations 363
Cbc0038I Pass  87: (7.00 seconds) suminf.   32.05729 (337) obj. 506.875 iterations 17
Cbc0038I Pass  88: (7.05 seconds) suminf.   32.51585 (333) obj. 509.665 iterations 281
Cbc0038I Pass  89: (7.06 seconds) suminf.   30.57952 (329) obj. 509.79 iterations 61
Cbc0038I Pass  90: (7.07 seconds) suminf.   30.43553 (330) obj. 509.806 iterations 71
Cbc0038I Pass  91: (7.11 seconds) suminf.   22.81662 (276) obj. 447.26 iterations 268
Cbc0038I Pass  92: (7.12 seconds) suminf.   22.81662 (276) obj. 447.26 iterations 9
Cbc0038I Pass  93: (7.16 seconds) suminf.   21.39397 (251) obj. 443.553 iterations 241
Cbc0038I Pass  94: (7.16 seconds) suminf.   21.04482 (250) obj. 443.586 iterations 14
Cbc0038I Pass  95: (7.20 seconds) suminf.   18.40991 (239) obj. 390.564 iterations 229
Cbc0038I Pass  96: (7.20 seconds) suminf.   18.40991 (239) obj. 390.564 iterations 13
Cbc0038I Pass  97: (7.23 seconds) suminf.   18.84169 (250) obj. 392.898 iterations 187
Cbc0038I Pass  98: (7.26 seconds) suminf.   15.75921 (214) obj. 387.501 iterations 211
Cbc0038I Pass  99: (7.27 seconds) suminf.   15.72761 (212) obj. 387.504 iterations 29
Cbc0038I Pass 100: (7.40 seconds) suminf.   64.78923 (403) obj. 435.112 iterations 1087
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 302 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4001 rows 1297 columns - too large
Cbc0038I Mini branch and bound did not improve solution (8.08 seconds)
Cbc0038I After 8.08 seconds - Feasibility pump exiting - took 6.64 seconds
Cbc0031I 67 added rows had average density of 79.597015
Cbc0013I At root node, 67 cuts changed objective from 229.07522 to 249 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 80 row cuts average 361.8 elements, 0 column cuts (0 active)  in 0.456 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 200 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 40 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.375 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 249 (16.04 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 257 (106.52 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 262 (144.06 seconds)
Cbc0010I After 300 nodes, 10 on tree, 1e+50 best solution, best possible 265 (185.56 seconds)
Cbc0010I After 400 nodes, 9 on tree, 1e+50 best solution, best possible 268 (235.85 seconds)
Cbc0010I After 500 nodes, 24 on tree, 1e+50 best solution, best possible 268 (277.21 seconds)
Cbc0010I After 600 nodes, 34 on tree, 1e+50 best solution, best possible 268 (320.52 seconds)
Cbc0010I After 700 nodes, 41 on tree, 1e+50 best solution, best possible 268 (362.66 seconds)
Cbc0010I After 800 nodes, 37 on tree, 1e+50 best solution, best possible 268 (410.56 seconds)
Cbc0010I After 900 nodes, 10 on tree, 1e+50 best solution, best possible 268 (459.02 seconds)
Cbc0010I After 1000 nodes, 17 on tree, 1e+50 best solution, best possible 268 (513.01 seconds)
Cbc0010I After 1100 nodes, 15 on tree, 1e+50 best solution, best possible 268 (580.03 seconds)
Cbc0010I After 1200 nodes, 10 on tree, 1e+50 best solution, best possible 268 (621.62 seconds)
Cbc0010I After 1300 nodes, 8 on tree, 1e+50 best solution, best possible 269 (672.53 seconds)
Cbc0010I After 1400 nodes, 14 on tree, 1e+50 best solution, best possible 270 (722.80 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 1e+50 best solution, best possible 270 (763.19 seconds)
Cbc0010I After 1600 nodes, 14 on tree, 1e+50 best solution, best possible 270 (815.20 seconds)
Cbc0010I After 1700 nodes, 8 on tree, 1e+50 best solution, best possible 270 (857.45 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 1e+50 best solution, best possible 270 (905.19 seconds)
Cbc0010I After 1900 nodes, 5 on tree, 1e+50 best solution, best possible 271 (957.47 seconds)
Cbc0010I After 2000 nodes, 24 on tree, 1e+50 best solution, best possible 272 (986.50 seconds)
Cbc0010I After 2100 nodes, 10 on tree, 1e+50 best solution, best possible 272 (1009.74 seconds)
Cbc0010I After 2200 nodes, 12 on tree, 1e+50 best solution, best possible 272 (1032.50 seconds)
Cbc0010I After 2300 nodes, 13 on tree, 1e+50 best solution, best possible 272 (1056.19 seconds)
Cbc0010I After 2400 nodes, 15 on tree, 1e+50 best solution, best possible 273 (1078.59 seconds)
Cbc0010I After 2500 nodes, 17 on tree, 1e+50 best solution, best possible 273 (1111.67 seconds)
Cbc0010I After 2600 nodes, 12 on tree, 1e+50 best solution, best possible 273 (1135.29 seconds)
Cbc0010I After 2700 nodes, 6 on tree, 1e+50 best solution, best possible 274 (1160.24 seconds)
Cbc0010I After 2800 nodes, 4 on tree, 1e+50 best solution, best possible 274 (1175.55 seconds)
Cbc0010I After 2900 nodes, 13 on tree, 1e+50 best solution, best possible 275 (1192.45 seconds)
Cbc0010I After 3000 nodes, 16 on tree, 1e+50 best solution, best possible 275 (1210.23 seconds)
Cbc0010I After 3100 nodes, 17 on tree, 1e+50 best solution, best possible 275 (1228.46 seconds)
Cbc0010I After 3200 nodes, 16 on tree, 1e+50 best solution, best possible 275 (1246.39 seconds)
Cbc0010I After 3300 nodes, 17 on tree, 1e+50 best solution, best possible 275 (1258.47 seconds)
Cbc0010I After 3400 nodes, 2 on tree, 1e+50 best solution, best possible 275 (1275.56 seconds)
Cbc0010I After 3500 nodes, 25 on tree, 1e+50 best solution, best possible 276 (1290.54 seconds)
Cbc0010I After 3600 nodes, 18 on tree, 1e+50 best solution, best possible 276 (1307.86 seconds)
Cbc0010I After 3700 nodes, 20 on tree, 1e+50 best solution, best possible 276 (1321.99 seconds)
Cbc0010I After 3800 nodes, 10 on tree, 1e+50 best solution, best possible 276 (1336.76 seconds)
Cbc0010I After 3900 nodes, 3 on tree, 1e+50 best solution, best possible 276 (1356.21 seconds)
Cbc0010I After 4000 nodes, 20 on tree, 1e+50 best solution, best possible 276 (1374.54 seconds)
Cbc0010I After 4100 nodes, 7 on tree, 1e+50 best solution, best possible 277 (1391.09 seconds)
Cbc0010I After 4200 nodes, 19 on tree, 1e+50 best solution, best possible 277 (1404.64 seconds)
Cbc0010I After 4300 nodes, 13 on tree, 1e+50 best solution, best possible 277 (1420.99 seconds)
Cbc0010I After 4400 nodes, 19 on tree, 1e+50 best solution, best possible 277 (1429.77 seconds)
Cbc0010I After 4500 nodes, 27 on tree, 1e+50 best solution, best possible 277 (1445.72 seconds)
Cbc0010I After 4600 nodes, 12 on tree, 1e+50 best solution, best possible 277 (1459.10 seconds)
Cbc0010I After 4700 nodes, 25 on tree, 1e+50 best solution, best possible 278 (1478.35 seconds)
Cbc0010I After 4800 nodes, 19 on tree, 1e+50 best solution, best possible 278 (1500.97 seconds)
Cbc0010I After 4900 nodes, 15 on tree, 1e+50 best solution, best possible 278 (1522.01 seconds)
Cbc0010I After 5000 nodes, 9 on tree, 1e+50 best solution, best possible 278 (1537.15 seconds)
Cbc0010I After 5100 nodes, 10 on tree, 1e+50 best solution, best possible 278 (1561.24 seconds)
Cbc0010I After 5200 nodes, 36 on tree, 1e+50 best solution, best possible 278 (1574.04 seconds)
Cbc0010I After 5300 nodes, 43 on tree, 1e+50 best solution, best possible 278 (1584.78 seconds)
Cbc0010I After 5400 nodes, 19 on tree, 1e+50 best solution, best possible 278 (1603.80 seconds)
Cbc0010I After 5500 nodes, 34 on tree, 1e+50 best solution, best possible 278 (1622.47 seconds)
Cbc0010I After 5600 nodes, 20 on tree, 1e+50 best solution, best possible 278 (1643.39 seconds)
Cbc0010I After 5700 nodes, 21 on tree, 1e+50 best solution, best possible 278 (1664.05 seconds)
Cbc0010I After 5800 nodes, 40 on tree, 1e+50 best solution, best possible 278 (1678.25 seconds)
Cbc0010I After 5900 nodes, 39 on tree, 1e+50 best solution, best possible 278 (1690.90 seconds)
Cbc0010I After 6000 nodes, 42 on tree, 1e+50 best solution, best possible 278 (1703.83 seconds)
Cbc0010I After 6100 nodes, 35 on tree, 1e+50 best solution, best possible 278 (1720.34 seconds)
Cbc0010I After 6200 nodes, 34 on tree, 1e+50 best solution, best possible 278 (1734.63 seconds)
Cbc0010I After 6300 nodes, 26 on tree, 1e+50 best solution, best possible 278 (1750.91 seconds)
Cbc0010I After 6400 nodes, 9 on tree, 1e+50 best solution, best possible 278 (1778.25 seconds)
Cbc0010I After 6500 nodes, 28 on tree, 1e+50 best solution, best possible 278 (1795.90 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 278), took 5331602 iterations and 6510 nodes (1800.18 seconds)
Cbc0032I Strong branching done 32118 times (2520134 iterations), fathomed 591 nodes and fixed 3443 variables
Cbc0035I Maximum depth 85, 0 variables fixed on reduced cost
Cuts at root node changed objective from 229.075 to 249
Probing was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.100 seconds)
Gomory was tried 992 times and created 938 cuts of which 0 were active after adding rounds of cuts (4.544 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 992 times and created 17514 cuts of which 0 were active after adding rounds of cuts (1.714 seconds)
ZeroHalf was tried 992 times and created 2798 cuts of which 0 were active after adding rounds of cuts (19.971 seconds)
ImplicationCuts was tried 85 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    278.000
Enumerated nodes:               6510
Total iterations:               5331602
Time (CPU seconds):             1800.18
Time (Wallclock seconds):       1809.58

Total time (CPU seconds):       1800.20   (Wallclock seconds):       1809.61

