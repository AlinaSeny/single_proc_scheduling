Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_1_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_1_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 223.83 - 1.19 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 981 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 676 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 402 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 313 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 238 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 140 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 15963 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 802 integers unsatisfied sum - 230.524
Cbc0038I Pass   1: (2.60 seconds) suminf.  102.04278 (552) obj. 350.771 iterations 2157
Cbc0038I Pass   2: (2.77 seconds) suminf.   71.19755 (519) obj. 396.035 iterations 899
Cbc0038I Pass   3: (2.87 seconds) suminf.   66.81987 (558) obj. 400.75 iterations 516
Cbc0038I Pass   4: (2.90 seconds) suminf.   65.02218 (560) obj. 402.617 iterations 127
Cbc0038I Pass   5: (2.94 seconds) suminf.   63.95205 (582) obj. 401.651 iterations 139
Cbc0038I Pass   6: (3.05 seconds) suminf.   60.39383 (517) obj. 459.093 iterations 534
Cbc0038I Pass   7: (3.09 seconds) suminf.   57.18412 (538) obj. 461.042 iterations 236
Cbc0038I Pass   8: (3.13 seconds) suminf.   56.76441 (538) obj. 460.735 iterations 148
Cbc0038I Pass   9: (3.21 seconds) suminf.   57.46394 (495) obj. 468.11 iterations 423
Cbc0038I Pass  10: (3.22 seconds) suminf.   57.33553 (493) obj. 468.117 iterations 26
Cbc0038I Pass  11: (3.28 seconds) suminf.   59.66155 (473) obj. 466.134 iterations 329
Cbc0038I Pass  12: (3.30 seconds) suminf.   59.03317 (489) obj. 462.681 iterations 75
Cbc0038I Pass  13: (3.31 seconds) suminf.   58.57527 (490) obj. 461.708 iterations 39
Cbc0038I Pass  14: (3.41 seconds) suminf.   56.02877 (471) obj. 462.587 iterations 553
Cbc0038I Pass  15: (3.46 seconds) suminf.   55.20578 (437) obj. 461.257 iterations 255
Cbc0038I Pass  16: (3.48 seconds) suminf.   54.71743 (469) obj. 461.231 iterations 73
Cbc0038I Pass  17: (3.50 seconds) suminf.   54.92864 (436) obj. 461.219 iterations 65
Cbc0038I Pass  18: (3.55 seconds) suminf.   53.11867 (423) obj. 451.23 iterations 286
Cbc0038I Pass  19: (3.59 seconds) suminf.   52.48214 (414) obj. 461.31 iterations 214
Cbc0038I Pass  20: (3.66 seconds) suminf.   51.40253 (398) obj. 451.77 iterations 405
Cbc0038I Pass  21: (3.70 seconds) suminf.   50.31163 (401) obj. 458.386 iterations 198
Cbc0038I Pass  22: (3.71 seconds) suminf.   51.27575 (418) obj. 460.45 iterations 37
Cbc0038I Pass  23: (3.77 seconds) suminf.   49.05229 (389) obj. 449.181 iterations 352
Cbc0038I Pass  24: (3.80 seconds) suminf.   47.95062 (415) obj. 459.618 iterations 125
Cbc0038I Pass  25: (3.86 seconds) suminf.   49.34476 (389) obj. 463.088 iterations 328
Cbc0038I Pass  26: (3.87 seconds) suminf.   49.11130 (388) obj. 463.021 iterations 20
Cbc0038I Pass  27: (3.94 seconds) suminf.   51.77499 (373) obj. 415.948 iterations 443
Cbc0038I Pass  28: (3.97 seconds) suminf.   51.33843 (384) obj. 419.833 iterations 161
Cbc0038I Pass  29: (4.03 seconds) suminf.   50.35151 (392) obj. 417.979 iterations 288
Cbc0038I Pass  30: (4.05 seconds) suminf.   47.96570 (395) obj. 424.067 iterations 146
Cbc0038I Pass  31: (4.11 seconds) suminf.   47.64983 (386) obj. 447.343 iterations 338
Cbc0038I Pass  32: (4.13 seconds) suminf.   47.46772 (398) obj. 453.71 iterations 84
Cbc0038I Pass  33: (4.16 seconds) suminf.   47.09422 (395) obj. 461.331 iterations 138
Cbc0038I Pass  34: (4.21 seconds) suminf.   48.74045 (376) obj. 425.749 iterations 234
Cbc0038I Pass  35: (4.23 seconds) suminf.   47.87239 (380) obj. 444.884 iterations 118
Cbc0038I Pass  36: (4.28 seconds) suminf.   46.34122 (381) obj. 460.738 iterations 287
Cbc0038I Pass  37: (4.32 seconds) suminf.   47.05361 (375) obj. 459.576 iterations 193
Cbc0038I Pass  38: (4.37 seconds) suminf.   45.80839 (368) obj. 449.93 iterations 301
Cbc0038I Pass  39: (4.41 seconds) suminf.   44.17828 (390) obj. 460.46 iterations 257
Cbc0038I Pass  40: (4.42 seconds) suminf.   44.07019 (391) obj. 460.544 iterations 5
Cbc0038I Pass  41: (4.48 seconds) suminf.   45.27401 (371) obj. 448.69 iterations 322
Cbc0038I Pass  42: (4.53 seconds) suminf.   45.18134 (376) obj. 445.065 iterations 295
Cbc0038I Pass  43: (4.59 seconds) suminf.   44.33733 (390) obj. 459.962 iterations 360
Cbc0038I Pass  44: (4.63 seconds) suminf.   43.84527 (398) obj. 461.441 iterations 222
Cbc0038I Pass  45: (4.69 seconds) suminf.   45.52107 (360) obj. 448.214 iterations 338
Cbc0038I Pass  46: (4.73 seconds) suminf.   47.23602 (375) obj. 448.054 iterations 181
Cbc0038I Pass  47: (4.74 seconds) suminf.   46.60162 (380) obj. 447.891 iterations 55
Cbc0038I Pass  48: (4.80 seconds) suminf.   48.63648 (411) obj. 459.195 iterations 321
Cbc0038I Pass  49: (4.86 seconds) suminf.   43.82497 (393) obj. 458.204 iterations 321
Cbc0038I Pass  50: (4.91 seconds) suminf.   46.04643 (366) obj. 448.528 iterations 331
Cbc0038I Pass  51: (4.95 seconds) suminf.   43.37202 (388) obj. 448.321 iterations 210
Cbc0038I Pass  52: (4.97 seconds) suminf.   43.35510 (379) obj. 448.141 iterations 112
Cbc0038I Pass  53: (5.02 seconds) suminf.   43.73221 (360) obj. 460.049 iterations 304
Cbc0038I Pass  54: (5.06 seconds) suminf.   43.61340 (378) obj. 460.162 iterations 228
Cbc0038I Pass  55: (5.09 seconds) suminf.   43.74496 (380) obj. 459.889 iterations 188
Cbc0038I Pass  56: (5.10 seconds) suminf.   43.11205 (369) obj. 459.984 iterations 68
Cbc0038I Pass  57: (5.17 seconds) suminf.   45.00856 (374) obj. 447.415 iterations 443
Cbc0038I Pass  58: (5.19 seconds) suminf.   43.37202 (388) obj. 448.321 iterations 109
Cbc0038I Pass  59: (5.21 seconds) suminf.   43.35510 (379) obj. 448.141 iterations 95
Cbc0038I Pass  60: (5.26 seconds) suminf.   45.91033 (365) obj. 461.359 iterations 315
Cbc0038I Pass  61: (5.31 seconds) suminf.   43.44203 (369) obj. 459.747 iterations 313
Cbc0038I Pass  62: (5.36 seconds) suminf.   42.81702 (390) obj. 446.974 iterations 309
Cbc0038I Pass  63: (5.37 seconds) suminf.   42.91866 (383) obj. 447.798 iterations 69
Cbc0038I Pass  64: (5.42 seconds) suminf.   44.43190 (372) obj. 459.668 iterations 281
Cbc0038I Pass  65: (5.71 seconds) suminf.   83.31222 (527) obj. 618.234 iterations 1808
Cbc0038I Pass  66: (5.84 seconds) suminf.   65.32491 (459) obj. 617.385 iterations 821
Cbc0038I Pass  67: (5.88 seconds) suminf.   63.55096 (480) obj. 629.666 iterations 145
Cbc0038I Pass  68: (5.96 seconds) suminf.   65.28777 (495) obj. 617.127 iterations 474
Cbc0038I Pass  69: (6.00 seconds) suminf.   63.01741 (478) obj. 615.906 iterations 160
Cbc0038I Pass  70: (6.02 seconds) suminf.   63.34202 (476) obj. 616.247 iterations 81
Cbc0038I Pass  71: (6.04 seconds) suminf.   62.60719 (472) obj. 616.07 iterations 73
Cbc0038I Pass  72: (6.06 seconds) suminf.   62.14941 (474) obj. 615.943 iterations 70
Cbc0038I Pass  73: (6.13 seconds) suminf.   59.88066 (426) obj. 625.747 iterations 379
Cbc0038I Pass  74: (6.17 seconds) suminf.   57.72988 (434) obj. 628.906 iterations 185
Cbc0038I Pass  75: (6.28 seconds) suminf.   54.98375 (403) obj. 660.817 iterations 708
Cbc0038I Pass  76: (6.31 seconds) suminf.   53.29859 (390) obj. 654.395 iterations 151
Cbc0038I Pass  77: (6.42 seconds) suminf.   53.90361 (428) obj. 635.252 iterations 677
Cbc0038I Pass  78: (6.46 seconds) suminf.   52.82909 (401) obj. 634.754 iterations 194
Cbc0038I Pass  79: (6.53 seconds) suminf.   49.96808 (385) obj. 598.135 iterations 400
Cbc0038I Pass  80: (6.54 seconds) suminf.   49.60953 (404) obj. 604.737 iterations 38
Cbc0038I Pass  81: (6.65 seconds) suminf.   44.73082 (366) obj. 556.788 iterations 660
Cbc0038I Pass  82: (6.68 seconds) suminf.   42.60571 (369) obj. 531.086 iterations 196
Cbc0038I Pass  83: (6.77 seconds) suminf.   41.24621 (382) obj. 568.282 iterations 495
Cbc0038I Pass  84: (6.82 seconds) suminf.   38.70524 (379) obj. 569.902 iterations 282
Cbc0038I Pass  85: (6.87 seconds) suminf.   37.80956 (383) obj. 568.833 iterations 281
Cbc0038I Pass  86: (6.89 seconds) suminf.   37.85033 (377) obj. 566.459 iterations 115
Cbc0038I Pass  87: (6.98 seconds) suminf.   31.81309 (292) obj. 585.472 iterations 559
Cbc0038I Pass  88: (7.00 seconds) suminf.   31.00322 (297) obj. 585.536 iterations 84
Cbc0038I Pass  89: (7.04 seconds) suminf.   30.94367 (293) obj. 555.862 iterations 215
Cbc0038I Pass  90: (7.05 seconds) suminf.   31.26191 (295) obj. 555.718 iterations 16
Cbc0038I Pass  91: (7.16 seconds) suminf.   23.22180 (267) obj. 569.363 iterations 811
Cbc0038I Pass  92: (7.18 seconds) suminf.   21.50104 (262) obj. 570.219 iterations 82
Cbc0038I Pass  93: (7.24 seconds) suminf.   31.63289 (277) obj. 516.363 iterations 448
Cbc0038I Pass  94: (7.28 seconds) suminf.   23.94294 (264) obj. 557.945 iterations 184
Cbc0038I Pass  95: (7.29 seconds) suminf.   22.81593 (259) obj. 556.05 iterations 79
Cbc0038I Pass  96: (7.30 seconds) suminf.   22.77369 (250) obj. 556.001 iterations 55
Cbc0038I Pass  97: (7.34 seconds) suminf.   22.79359 (222) obj. 589.081 iterations 206
Cbc0038I Pass  98: (7.35 seconds) suminf.   22.55247 (222) obj. 582.937 iterations 52
Cbc0038I Pass  99: (7.39 seconds) suminf.   21.17059 (236) obj. 591.474 iterations 253
Cbc0038I Pass 100: (7.57 seconds) suminf.   57.57450 (379) obj. 636.619 iterations 1202
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 313 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4016 rows 1291 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.73 seconds)
Cbc0038I After 7.73 seconds - Feasibility pump exiting - took 5.56 seconds
Cbc0031I 36 added rows had average density of 111.38889
Cbc0013I At root node, 36 cuts changed objective from 224.44635 to 250 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 87 row cuts average 769.0 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 80 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.232 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 10 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.455 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 250 (15.39 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 254 (94.41 seconds)
Cbc0010I After 200 nodes, 6 on tree, 1e+50 best solution, best possible 254 (148.77 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 254 (240.98 seconds)
Cbc0010I After 400 nodes, 19 on tree, 1e+50 best solution, best possible 254 (324.45 seconds)
Cbc0010I After 500 nodes, 30 on tree, 1e+50 best solution, best possible 254 (384.35 seconds)
Cbc0010I After 600 nodes, 37 on tree, 1e+50 best solution, best possible 254 (458.19 seconds)
Cbc0010I After 700 nodes, 32 on tree, 1e+50 best solution, best possible 254 (546.44 seconds)
Cbc0010I After 800 nodes, 63 on tree, 1e+50 best solution, best possible 254 (607.47 seconds)
Cbc0010I After 900 nodes, 68 on tree, 1e+50 best solution, best possible 254 (664.61 seconds)
Cbc0010I After 1000 nodes, 78 on tree, 1e+50 best solution, best possible 254 (719.40 seconds)
Cbc0010I After 1100 nodes, 72 on tree, 1e+50 best solution, best possible 258 (785.43 seconds)
Cbc0010I After 1200 nodes, 78 on tree, 1e+50 best solution, best possible 258 (851.81 seconds)
Cbc0010I After 1300 nodes, 72 on tree, 1e+50 best solution, best possible 258 (919.72 seconds)
Cbc0010I After 1400 nodes, 74 on tree, 1e+50 best solution, best possible 258 (986.30 seconds)
Cbc0010I After 1500 nodes, 73 on tree, 1e+50 best solution, best possible 258 (1045.66 seconds)
Cbc0010I After 1600 nodes, 71 on tree, 1e+50 best solution, best possible 258 (1121.81 seconds)
Cbc0010I After 1700 nodes, 66 on tree, 1e+50 best solution, best possible 258 (1179.77 seconds)
Cbc0010I After 1800 nodes, 61 on tree, 1e+50 best solution, best possible 258 (1252.08 seconds)
Cbc0010I After 1900 nodes, 56 on tree, 1e+50 best solution, best possible 258 (1320.52 seconds)
Cbc0010I After 2000 nodes, 58 on tree, 1e+50 best solution, best possible 258 (1396.25 seconds)
Cbc0010I After 2100 nodes, 51 on tree, 1e+50 best solution, best possible 258 (1471.06 seconds)
Cbc0010I After 2200 nodes, 66 on tree, 1e+50 best solution, best possible 258 (1532.70 seconds)
Cbc0010I After 2300 nodes, 65 on tree, 1e+50 best solution, best possible 258 (1581.12 seconds)
Cbc0010I After 2400 nodes, 56 on tree, 1e+50 best solution, best possible 258 (1628.62 seconds)
Cbc0010I After 2500 nodes, 58 on tree, 1e+50 best solution, best possible 258 (1668.34 seconds)
Cbc0010I After 2600 nodes, 55 on tree, 1e+50 best solution, best possible 258 (1698.37 seconds)
Cbc0010I After 2700 nodes, 52 on tree, 1e+50 best solution, best possible 258 (1732.38 seconds)
Cbc0010I After 2800 nodes, 55 on tree, 1e+50 best solution, best possible 258 (1776.53 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 258), took 3960803 iterations and 2864 nodes (1799.07 seconds)
Cbc0032I Strong branching done 26068 times (2127087 iterations), fathomed 226 nodes and fixed 2412 variables
Cbc0035I Maximum depth 79, 0 variables fixed on reduced cost
Cuts at root node changed objective from 224.446 to 250
Probing was tried 10 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
Gomory was tried 2040 times and created 1070 cuts of which 0 were active after adding rounds of cuts (14.616 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 2040 times and created 28521 cuts of which 0 were active after adding rounds of cuts (4.619 seconds)
ZeroHalf was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.455 seconds)
ImplicationCuts was tried 84 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    258.000
Enumerated nodes:               2864
Total iterations:               3960803
Time (CPU seconds):             1799.07
Time (Wallclock seconds):       1811.70

Total time (CPU seconds):       1799.09   (Wallclock seconds):       1811.73

