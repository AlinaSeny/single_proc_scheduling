Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 276.909 - 1.21 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1438 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 32 tightened bounds, 1163 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 759 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 489 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 381 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 245 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 143 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 83 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26287 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1188 integers unsatisfied sum - 403.927
Cbc0038I Pass   1: (5.62 seconds) suminf.  125.48929 (814) obj. 477.289 iterations 4157
Cbc0038I Pass   2: (5.95 seconds) suminf.   87.76755 (716) obj. 526.827 iterations 1265
Cbc0038I Pass   3: (6.10 seconds) suminf.   80.21724 (703) obj. 554.649 iterations 588
Cbc0038I Pass   4: (6.22 seconds) suminf.   77.31052 (685) obj. 557.394 iterations 381
Cbc0038I Pass   5: (6.27 seconds) suminf.   76.06287 (700) obj. 558.952 iterations 155
Cbc0038I Pass   6: (6.39 seconds) suminf.   77.94744 (684) obj. 554.13 iterations 400
Cbc0038I Pass   7: (6.49 seconds) suminf.   78.46634 (693) obj. 547.012 iterations 304
Cbc0038I Pass   8: (6.56 seconds) suminf.   78.12740 (658) obj. 546.974 iterations 195
Cbc0038I Pass   9: (6.61 seconds) suminf.   77.93013 (652) obj. 547.009 iterations 140
Cbc0038I Pass  10: (6.71 seconds) suminf.   78.74209 (643) obj. 547.096 iterations 326
Cbc0038I Pass  11: (6.92 seconds) suminf.   72.07329 (619) obj. 547.207 iterations 902
Cbc0038I Pass  12: (6.96 seconds) suminf.   72.15985 (609) obj. 547.215 iterations 124
Cbc0038I Pass  13: (7.10 seconds) suminf.   70.30881 (607) obj. 552.559 iterations 504
Cbc0038I Pass  14: (7.14 seconds) suminf.   70.22421 (593) obj. 551.167 iterations 157
Cbc0038I Pass  15: (7.32 seconds) suminf.   67.81826 (611) obj. 566.351 iterations 690
Cbc0038I Pass  16: (7.38 seconds) suminf.   67.02821 (601) obj. 568.185 iterations 223
Cbc0038I Pass  17: (7.40 seconds) suminf.   67.13738 (605) obj. 567.323 iterations 45
Cbc0038I Pass  18: (7.55 seconds) suminf.   65.57484 (626) obj. 547.541 iterations 590
Cbc0038I Pass  19: (7.62 seconds) suminf.   64.05728 (631) obj. 547.524 iterations 237
Cbc0038I Pass  20: (7.74 seconds) suminf.   64.86540 (596) obj. 547.666 iterations 487
Cbc0038I Pass  21: (7.79 seconds) suminf.   65.57376 (614) obj. 547.359 iterations 162
Cbc0038I Pass  22: (7.92 seconds) suminf.   64.39482 (584) obj. 547.531 iterations 509
Cbc0038I Pass  23: (7.98 seconds) suminf.   64.59253 (570) obj. 547.568 iterations 183
Cbc0038I Pass  24: (8.02 seconds) suminf.   64.19846 (599) obj. 547.603 iterations 124
Cbc0038I Pass  25: (8.08 seconds) suminf.   62.58069 (557) obj. 547.505 iterations 198
Cbc0038I Pass  26: (8.11 seconds) suminf.   62.57489 (584) obj. 547.417 iterations 75
Cbc0038I Pass  27: (8.20 seconds) suminf.   61.95094 (547) obj. 547.481 iterations 288
Cbc0038I Pass  28: (8.28 seconds) suminf.   61.90472 (574) obj. 547.476 iterations 260
Cbc0038I Pass  29: (8.36 seconds) suminf.   62.97904 (564) obj. 547.41 iterations 277
Cbc0038I Pass  30: (8.44 seconds) suminf.   62.21535 (582) obj. 547.385 iterations 270
Cbc0038I Pass  31: (8.47 seconds) suminf.   60.79146 (578) obj. 547.47 iterations 110
Cbc0038I Pass  32: (8.57 seconds) suminf.   60.71393 (555) obj. 547.432 iterations 314
Cbc0038I Pass  33: (8.62 seconds) suminf.   59.87047 (555) obj. 547.467 iterations 198
Cbc0038I Pass  34: (8.64 seconds) suminf.   59.99814 (559) obj. 547.476 iterations 50
Cbc0038I Pass  35: (8.69 seconds) suminf.   62.84815 (557) obj. 547.444 iterations 172
Cbc0038I Pass  36: (8.75 seconds) suminf.   60.33460 (570) obj. 547.433 iterations 196
Cbc0038I Pass  37: (8.87 seconds) suminf.   61.58705 (531) obj. 547.408 iterations 416
Cbc0038I Pass  38: (8.94 seconds) suminf.   59.51157 (534) obj. 547.419 iterations 224
Cbc0038I Pass  39: (8.95 seconds) suminf.   59.11870 (537) obj. 547.418 iterations 38
Cbc0038I Pass  40: (9.04 seconds) suminf.   57.71119 (540) obj. 547.544 iterations 339
Cbc0038I Pass  41: (9.08 seconds) suminf.   56.82057 (538) obj. 547.588 iterations 119
Cbc0038I Pass  42: (9.12 seconds) suminf.   55.47013 (539) obj. 547.594 iterations 142
Cbc0038I Pass  43: (9.24 seconds) suminf.   59.67880 (510) obj. 550.947 iterations 479
Cbc0038I Pass  44: (9.34 seconds) suminf.   54.87350 (528) obj. 551.148 iterations 338
Cbc0038I Pass  45: (9.35 seconds) suminf.   54.82062 (525) obj. 551.091 iterations 19
Cbc0038I Pass  46: (9.38 seconds) suminf.   55.16997 (530) obj. 550.667 iterations 130
Cbc0038I Pass  47: (9.41 seconds) suminf.   54.37371 (526) obj. 550.646 iterations 83
Cbc0038I Pass  48: (9.43 seconds) suminf.   53.94711 (522) obj. 550.872 iterations 50
Cbc0038I Pass  49: (9.50 seconds) suminf.   55.79263 (528) obj. 551.873 iterations 246
Cbc0038I Pass  50: (9.52 seconds) suminf.   55.69352 (529) obj. 551.892 iterations 45
Cbc0038I Pass  51: (9.59 seconds) suminf.   57.72515 (523) obj. 552.305 iterations 261
Cbc0038I Pass  52: (9.64 seconds) suminf.   57.53519 (527) obj. 552.683 iterations 175
Cbc0038I Pass  53: (9.69 seconds) suminf.   56.59067 (530) obj. 552.263 iterations 148
Cbc0038I Pass  54: (9.74 seconds) suminf.   55.24468 (522) obj. 552.145 iterations 192
Cbc0038I Pass  55: (9.83 seconds) suminf.   55.40244 (484) obj. 566.154 iterations 353
Cbc0038I Pass  56: (9.89 seconds) suminf.   54.95677 (502) obj. 580.152 iterations 202
Cbc0038I Pass  57: (9.98 seconds) suminf.   51.00586 (469) obj. 561.138 iterations 342
Cbc0038I Pass  58: (9.99 seconds) suminf.   51.00802 (469) obj. 561.14 iterations 21
Cbc0038I Pass  59: (10.16 seconds) suminf.   50.50804 (474) obj. 555.427 iterations 748
Cbc0038I Pass  60: (10.22 seconds) suminf.   47.64888 (438) obj. 558.843 iterations 214
Cbc0038I Pass  61: (10.30 seconds) suminf.   46.19790 (441) obj. 560.828 iterations 301
Cbc0038I Pass  62: (10.44 seconds) suminf.   42.43956 (395) obj. 591.935 iterations 712
Cbc0038I Pass  63: (10.46 seconds) suminf.   42.26659 (393) obj. 580.945 iterations 31
Cbc0038I Pass  64: (10.57 seconds) suminf.   41.98369 (411) obj. 622.231 iterations 574
Cbc0038I Pass  65: (10.60 seconds) suminf.   41.26749 (410) obj. 621.892 iterations 73
Cbc0038I Pass  66: (10.67 seconds) suminf.   39.20954 (387) obj. 624.533 iterations 315
Cbc0038I Pass  67: (10.72 seconds) suminf.   39.06434 (372) obj. 624.49 iterations 192
Cbc0038I Pass  68: (10.83 seconds) suminf.   36.44043 (370) obj. 631.869 iterations 586
Cbc0038I Pass  69: (10.92 seconds) suminf.   34.99950 (361) obj. 622.454 iterations 432
Cbc0038I Pass  70: (11.06 seconds) suminf.   29.14939 (338) obj. 532.217 iterations 723
Cbc0038I Pass  71: (11.11 seconds) suminf.   28.39840 (329) obj. 532.219 iterations 239
Cbc0038I Pass  72: (11.12 seconds) suminf.   28.39840 (329) obj. 532.219 iterations 13
Cbc0038I Pass  73: (11.21 seconds) suminf.   27.79643 (342) obj. 497.912 iterations 510
Cbc0038I Pass  74: (11.23 seconds) suminf.   28.21143 (341) obj. 501.557 iterations 28
Cbc0038I Pass  75: (11.27 seconds) suminf.   26.86384 (340) obj. 502.855 iterations 175
Cbc0038I Pass  76: (11.30 seconds) suminf.   27.17536 (343) obj. 499.301 iterations 141
Cbc0038I Pass  77: (11.36 seconds) suminf.   25.34603 (346) obj. 503.091 iterations 257
Cbc0038I Pass  78: (11.40 seconds) suminf.   24.19761 (352) obj. 501.96 iterations 171
Cbc0038I Pass  79: (11.47 seconds) suminf.   25.11393 (348) obj. 552.723 iterations 299
Cbc0038I Pass  80: (11.52 seconds) suminf.   22.50952 (345) obj. 556.406 iterations 199
Cbc0038I Pass  81: (11.53 seconds) suminf.   22.05427 (348) obj. 556.15 iterations 12
Cbc0038I Pass  82: (11.61 seconds) suminf.   23.99191 (304) obj. 582.31 iterations 410
Cbc0038I Pass  83: (11.67 seconds) suminf.   22.21528 (328) obj. 584.517 iterations 244
Cbc0038I Pass  84: (11.69 seconds) suminf.   21.88266 (306) obj. 582.725 iterations 59
Cbc0038I Pass  85: (11.78 seconds) suminf.   17.06738 (266) obj. 507.2 iterations 516
Cbc0038I Pass  86: (11.79 seconds) suminf.   17.03439 (267) obj. 507.2 iterations 18
Cbc0038I Pass  87: (11.89 seconds) suminf.   10.60685 (232) obj. 502.328 iterations 577
Cbc0038I Pass  88: (11.90 seconds) suminf.   10.60685 (232) obj. 502.328 iterations 30
Cbc0038I Pass  89: (12.09 seconds) suminf.    7.55300 (216) obj. 476.867 iterations 1007
Cbc0038I Pass  90: (12.10 seconds) suminf.    7.55300 (216) obj. 476.867 iterations 19
Cbc0038I Pass  91: (12.12 seconds) suminf.    7.66711 (206) obj. 477.088 iterations 139
Cbc0038I Pass  92: (12.14 seconds) suminf.    5.67617 (204) obj. 477.088 iterations 46
Cbc0038I Pass  93: (12.15 seconds) suminf.    4.37889 (166) obj. 476.879 iterations 107
Cbc0038I Pass  94: (12.16 seconds) suminf.    4.37889 (166) obj. 476.879 iterations 6
Cbc0038I Pass  95: (12.18 seconds) suminf.    3.76158 (162) obj. 477.088 iterations 56
Cbc0038I Pass  96: (12.20 seconds) suminf.    2.78522 (123) obj. 460 iterations 179
Cbc0038I Pass  97: (12.21 seconds) suminf.    2.78522 (123) obj. 460 iterations 0
Cbc0038I Pass  98: (12.22 seconds) suminf.    1.83038 (121) obj. 460 iterations 83
Cbc0038I Pass  99: (12.23 seconds) suminf.    1.83038 (121) obj. 460 iterations 14
Cbc0038I Pass 100: (12.37 seconds) suminf.   28.84221 (229) obj. 498.915 iterations 952
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 852 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5735 rows 1715 columns - too large
Cbc0038I Mini branch and bound did not improve solution (12.91 seconds)
Cbc0038I After 12.91 seconds - Feasibility pump exiting - took 8.56 seconds
Cbc0031I 65 added rows had average density of 19
Cbc0013I At root node, 65 cuts changed objective from 276.90909 to 320 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 25 row cuts average 4.1 elements, 3 column cuts (3 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 118 row cuts average 34.2 elements, 0 column cuts (0 active)  in 0.697 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 387 row cuts average 27.3 elements, 0 column cuts (0 active)  in 0.571 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 173 row cuts average 57.0 elements, 0 column cuts (0 active)  in 1.274 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 320 (39.18 seconds)
Cbc0010I After 100 nodes, 5 on tree, 1e+50 best solution, best possible 321 (208.39 seconds)
Cbc0010I After 200 nodes, 12 on tree, 1e+50 best solution, best possible 322 (350.24 seconds)
Cbc0010I After 300 nodes, 10 on tree, 1e+50 best solution, best possible 323 (482.85 seconds)
Cbc0010I After 400 nodes, 19 on tree, 1e+50 best solution, best possible 323 (615.71 seconds)
Cbc0010I After 500 nodes, 29 on tree, 1e+50 best solution, best possible 323 (734.05 seconds)
Cbc0010I After 600 nodes, 33 on tree, 1e+50 best solution, best possible 323 (850.47 seconds)
Cbc0010I After 700 nodes, 37 on tree, 1e+50 best solution, best possible 323 (969.85 seconds)
Cbc0010I After 800 nodes, 36 on tree, 1e+50 best solution, best possible 323 (1069.52 seconds)
Cbc0010I After 900 nodes, 41 on tree, 1e+50 best solution, best possible 323 (1183.60 seconds)
Cbc0010I After 1000 nodes, 52 on tree, 1e+50 best solution, best possible 323 (1311.64 seconds)
Cbc0010I After 1100 nodes, 42 on tree, 1e+50 best solution, best possible 323 (1408.76 seconds)
Cbc0010I After 1200 nodes, 39 on tree, 1e+50 best solution, best possible 323 (1526.14 seconds)
Cbc0010I After 1300 nodes, 36 on tree, 1e+50 best solution, best possible 323 (1632.40 seconds)
Cbc0010I After 1400 nodes, 31 on tree, 1e+50 best solution, best possible 323 (1755.23 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 323), took 2019008 iterations and 1433 nodes (1798.07 seconds)
Cbc0032I Strong branching done 15038 times (1360848 iterations), fathomed 59 nodes and fixed 1004 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 276.909 to 320
Probing was tried 975 times and created 34909 cuts of which 0 were active after adding rounds of cuts (18.525 seconds)
Gomory was tried 920 times and created 523 cuts of which 0 were active after adding rounds of cuts (17.786 seconds)
Knapsack was tried 920 times and created 1574 cuts of which 0 were active after adding rounds of cuts (1.995 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
MixedIntegerRounding2 was tried 12 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 920 times and created 11295 cuts of which 0 were active after adding rounds of cuts (4.813 seconds)
ZeroHalf was tried 920 times and created 3036 cuts of which 0 were active after adding rounds of cuts (98.669 seconds)
ImplicationCuts was tried 96 times and created 56 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    323.000
Enumerated nodes:               1433
Total iterations:               2019008
Time (CPU seconds):             1798.07
Time (Wallclock seconds):       1806.86

Total time (CPU seconds):       1798.09   (Wallclock seconds):       1806.88

