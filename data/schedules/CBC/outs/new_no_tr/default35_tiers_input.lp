Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default35_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/default35_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 28672 - 0.38 seconds
Cgl0002I 118 variables fixed
Cgl0003I 0 fixed, 20 tightened bounds, 864 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 15 tightened bounds, 235 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 96 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4131 rows, 1401 columns (1401 integer (1365 of which binary)) and 14013 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1401 objects (1401 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 767 integers unsatisfied sum - 236.18
Cbc0038I Pass   1: (1.56 seconds) suminf.   53.69436 (341) obj. 42096.8 iterations 2461
Cbc0038I Pass   2: (1.64 seconds) suminf.   42.42338 (302) obj. 41050.2 iterations 566
Cbc0038I Pass   3: (1.67 seconds) suminf.   40.32016 (303) obj. 40902.4 iterations 132
Cbc0038I Pass   4: (1.68 seconds) suminf.   39.46392 (302) obj. 40398.4 iterations 51
Cbc0038I Pass   5: (1.73 seconds) suminf.   32.06559 (269) obj. 42410.4 iterations 281
Cbc0038I Pass   6: (1.75 seconds) suminf.   33.63516 (283) obj. 42186.1 iterations 123
Cbc0038I Pass   7: (1.80 seconds) suminf.   32.36212 (244) obj. 42227.5 iterations 366
Cbc0038I Pass   8: (1.85 seconds) suminf.   30.26732 (247) obj. 44701.5 iterations 305
Cbc0038I Pass   9: (1.90 seconds) suminf.   29.24410 (246) obj. 45919.2 iterations 340
Cbc0038I Pass  10: (1.93 seconds) suminf.   28.13241 (231) obj. 45794.6 iterations 168
Cbc0038I Pass  11: (1.99 seconds) suminf.   21.46337 (211) obj. 38214 iterations 522
Cbc0038I Pass  12: (2.04 seconds) suminf.   19.30979 (207) obj. 36051.2 iterations 310
Cbc0038I Pass  13: (2.08 seconds) suminf.   21.24477 (190) obj. 37989.9 iterations 259
Cbc0038I Pass  14: (2.08 seconds) suminf.   18.41354 (187) obj. 37876 iterations 34
Cbc0038I Pass  15: (2.14 seconds) suminf.   14.72017 (145) obj. 47100.9 iterations 371
Cbc0038I Pass  16: (2.15 seconds) suminf.   12.21810 (148) obj. 47353.2 iterations 83
Cbc0038I Pass  17: (2.16 seconds) suminf.   12.14300 (149) obj. 47353.2 iterations 22
Cbc0038I Pass  18: (2.23 seconds) suminf.   10.56523 (130) obj. 44961.5 iterations 479
Cbc0038I Pass  19: (2.23 seconds) suminf.    9.75973 (125) obj. 45089.5 iterations 24
Cbc0038I Pass  20: (2.25 seconds) suminf.    9.60124 (118) obj. 45095.5 iterations 56
Cbc0038I Pass  21: (2.28 seconds) suminf.    7.77354 (104) obj. 45122.8 iterations 220
Cbc0038I Pass  22: (2.41 seconds) suminf.    6.81407 (110) obj. 45064.8 iterations 849
Cbc0038I Pass  23: (2.41 seconds) suminf.    6.65366 (116) obj. 45065 iterations 20
Cbc0038I Pass  24: (2.57 seconds) suminf.    3.65543 (63) obj. 44032 iterations 1555
Cbc0038I Pass  25: (2.60 seconds) suminf.    3.49321 (109) obj. 44032 iterations 186
Cbc0038I Pass  26: (2.74 seconds) suminf.    3.45335 (36) obj. 44032 iterations 1089
Cbc0038I Pass  27: (2.76 seconds) suminf.    2.26714 (38) obj. 44032 iterations 112
Cbc0038I Pass  28: (2.80 seconds) suminf.    2.13115 (22) obj. 44032 iterations 259
Cbc0038I Pass  29: (2.81 seconds) suminf.    2.13115 (22) obj. 44032 iterations 22
Cbc0038I Pass  30: (2.83 seconds) suminf.    0.00000 (0) obj. 44032 iterations 76
Cbc0038I Solution found of 44032
Cbc0038I Cleaned solution of 44032
Cbc0038I Before mini branch and bound, 474 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.87 seconds)
Cbc0038I Round again with cutoff of 42495.1
Cbc0038I Pass  31: (2.88 seconds) suminf.   53.69436 (341) obj. 42096.8 iterations 0
Cbc0038I Pass  32: (2.98 seconds) suminf.   42.42338 (302) obj. 41050.2 iterations 759
Cbc0038I Pass  33: (3.00 seconds) suminf.   40.32016 (303) obj. 40902.4 iterations 150
Cbc0038I Pass  34: (3.02 seconds) suminf.   39.46392 (302) obj. 40398.4 iterations 51
Cbc0038I Pass  35: (3.13 seconds) suminf.   29.60187 (263) obj. 40364 iterations 912
Cbc0038I Pass  36: (3.18 seconds) suminf.   29.40989 (269) obj. 39131.2 iterations 334
Cbc0038I Pass  37: (3.31 seconds) suminf.   27.28204 (230) obj. 42495.1 iterations 1032
Cbc0038I Pass  38: (3.33 seconds) suminf.   24.91768 (221) obj. 42495.1 iterations 131
Cbc0038I Pass  39: (3.34 seconds) suminf.   24.96931 (222) obj. 42495.1 iterations 11
Cbc0038I Pass  40: (3.37 seconds) suminf.   20.35128 (201) obj. 42495.1 iterations 202
Cbc0038I Pass  41: (3.38 seconds) suminf.   20.07558 (199) obj. 42495.1 iterations 26
Cbc0038I Pass  42: (3.41 seconds) suminf.   21.43495 (187) obj. 42495.1 iterations 225
Cbc0038I Pass  43: (3.42 seconds) suminf.   18.46193 (184) obj. 42495.1 iterations 63
Cbc0038I Pass  44: (3.43 seconds) suminf.   18.61075 (180) obj. 42495.1 iterations 76
Cbc0038I Pass  45: (3.47 seconds) suminf.   16.96459 (187) obj. 42495.1 iterations 192
Cbc0038I Pass  46: (3.48 seconds) suminf.   15.44516 (182) obj. 42495.1 iterations 103
Cbc0038I Pass  47: (3.50 seconds) suminf.   15.01867 (175) obj. 42495.1 iterations 58
Cbc0038I Pass  48: (3.53 seconds) suminf.   16.80069 (151) obj. 42495.1 iterations 223
Cbc0038I Pass  49: (3.55 seconds) suminf.   15.79803 (156) obj. 42495.1 iterations 84
Cbc0038I Pass  50: (3.64 seconds) suminf.   12.50965 (211) obj. 42495.1 iterations 627
Cbc0038I Pass  51: (3.82 seconds) suminf.   10.62572 (204) obj. 42495.1 iterations 1274
Cbc0038I Pass  52: (4.00 seconds) suminf.   10.30119 (107) obj. 42495.1 iterations 1403
Cbc0038I Pass  53: (4.04 seconds) suminf.    5.00368 (75) obj. 42495.1 iterations 231
Cbc0038I Pass  54: (4.05 seconds) suminf.    3.50414 (71) obj. 42495.1 iterations 69
Cbc0038I Pass  55: (4.06 seconds) suminf.    3.17852 (69) obj. 42495.1 iterations 69
Cbc0038I Pass  56: (4.21 seconds) suminf.    4.76422 (74) obj. 42495.1 iterations 1384
Cbc0038I Pass  57: (4.26 seconds) suminf.    4.75497 (134) obj. 42495.1 iterations 318
Cbc0038I Pass  58: (4.35 seconds) suminf.    4.54963 (107) obj. 42495.1 iterations 692
Cbc0038I Pass  59: (4.35 seconds) suminf.    4.54553 (107) obj. 42495.1 iterations 17
Cbc0038I Pass  60: (4.42 seconds) suminf.    3.45724 (35) obj. 42495.1 iterations 463
Cbc0038I Pass  61: (4.43 seconds) suminf.    3.46587 (41) obj. 42495.1 iterations 47
Cbc0038I Pass  62: (4.66 seconds) suminf.    3.97588 (31) obj. 42495.1 iterations 1849
Cbc0038I Pass  63: (4.67 seconds) suminf.    3.92696 (31) obj. 42495.1 iterations 28
Cbc0038I Pass  64: (4.71 seconds) suminf.    7.53389 (93) obj. 42495.1 iterations 374
Cbc0038I Pass  65: (4.72 seconds) suminf.    4.11115 (95) obj. 42495.1 iterations 98
Cbc0038I Pass  66: (4.73 seconds) suminf.    3.82251 (98) obj. 42495.1 iterations 47
Cbc0038I Pass  67: (4.85 seconds) suminf.   10.52723 (59) obj. 42495.1 iterations 936
Cbc0038I Pass  68: (4.91 seconds) suminf.    0.86868 (14) obj. 42495.1 iterations 213
Cbc0038I Pass  69: (4.92 seconds) suminf.    0.67221 (15) obj. 42495.1 iterations 36
Cbc0038I Pass  70: (4.97 seconds) suminf.    0.10009 (1) obj. 42495.1 iterations 236
Cbc0038I Solution found of 42495.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4132 rows 1401 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 38912
Cbc0038I Before mini branch and bound, 413 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 3259 rows 988 columns - 498 fixed gives 528, 134 - ok now
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 201 rows 70 columns
Cbc0038I Mini branch and bound did not improve solution (5.48 seconds)
Cbc0038I Round again with cutoff of 36863.2
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 3
Cbc0038I Pass  71: (5.53 seconds) suminf.   54.63371 (349) obj. 36863 iterations 230
Cbc0038I Pass  72: (5.63 seconds) suminf.   47.07662 (329) obj. 36863.2 iterations 759
Cbc0038I Pass  73: (5.69 seconds) suminf.   43.72433 (332) obj. 36863.2 iterations 401
Cbc0038I Pass  74: (5.79 seconds) suminf.   36.16365 (298) obj. 36863.2 iterations 738
Cbc0038I Pass  75: (5.83 seconds) suminf.   35.56881 (298) obj. 36863.2 iterations 279
Cbc0038I Pass  76: (5.86 seconds) suminf.   36.02612 (274) obj. 36863.2 iterations 165
Cbc0038I Pass  77: (5.94 seconds) suminf.   25.47218 (225) obj. 36863.2 iterations 587
Cbc0038I Pass  78: (5.97 seconds) suminf.   24.77520 (229) obj. 36863.2 iterations 205
Cbc0038I Pass  79: (6.03 seconds) suminf.   21.50260 (195) obj. 36863.2 iterations 462
Cbc0038I Pass  80: (6.07 seconds) suminf.   19.58958 (195) obj. 36863.2 iterations 207
Cbc0038I Pass  81: (6.07 seconds) suminf.   19.62447 (196) obj. 36863.2 iterations 12
Cbc0038I Pass  82: (6.13 seconds) suminf.   20.90207 (167) obj. 36863.2 iterations 430
Cbc0038I Pass  83: (6.15 seconds) suminf.   17.08249 (165) obj. 36863.2 iterations 94
Cbc0038I Pass  84: (6.17 seconds) suminf.   15.62173 (155) obj. 36863.2 iterations 96
Cbc0038I Pass  85: (6.24 seconds) suminf.   12.37664 (161) obj. 36863.2 iterations 570
Cbc0038I Pass  86: (6.27 seconds) suminf.   11.88096 (151) obj. 36863.2 iterations 177
Cbc0038I Pass  87: (6.37 seconds) suminf.    6.92782 (90) obj. 36863.2 iterations 791
Cbc0038I Pass  88: (6.40 seconds) suminf.    6.77221 (79) obj. 36863.2 iterations 173
Cbc0038I Pass  89: (6.43 seconds) suminf.    5.09575 (61) obj. 36863.2 iterations 166
Cbc0038I Pass  90: (6.44 seconds) suminf.    3.31593 (57) obj. 36863.2 iterations 76
Cbc0038I Pass  91: (6.50 seconds) suminf.    5.77524 (28) obj. 36863.2 iterations 573
Cbc0038I Pass  92: (6.51 seconds) suminf.    4.05272 (25) obj. 36863.2 iterations 46
Cbc0038I Pass  93: (6.52 seconds) suminf.    0.75607 (6) obj. 36863.2 iterations 77
Cbc0038I Pass  94: (6.54 seconds) suminf.    0.20008 (1) obj. 36863.2 iterations 55
Cbc0038I Solution found of 36863.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4132 rows 1401 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 34816
Cbc0038I Before mini branch and bound, 474 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 3137 rows 927 columns - 474 fixed gives 726, 186 - ok now
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 381 rows 127 columns
Cbc0038I Mini branch and bound did not improve solution (7.00 seconds)
Cbc0038I Round again with cutoff of 32972.1
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 4
Cbc0038I Pass  95: (7.08 seconds) suminf.   59.00476 (358) obj. 32972.1 iterations 295
Cbc0038I Pass  96: (7.18 seconds) suminf.   39.21614 (304) obj. 32972.1 iterations 810
Cbc0038I Pass  97: (7.23 seconds) suminf.   36.42165 (306) obj. 32972.1 iterations 299
Cbc0038I Pass  98: (7.29 seconds) suminf.   32.03561 (284) obj. 32972.1 iterations 414
Cbc0038I Pass  99: (7.32 seconds) suminf.   30.41684 (279) obj. 32972.1 iterations 121
Cbc0038I Pass 100: (7.39 seconds) suminf.   26.01526 (246) obj. 32972.1 iterations 549
Cbc0038I Pass 101: (7.43 seconds) suminf.   25.36023 (250) obj. 32972.1 iterations 281
Cbc0038I Pass 102: (7.47 seconds) suminf.   23.72164 (235) obj. 32972.1 iterations 241
Cbc0038I Pass 103: (7.48 seconds) suminf.   22.18754 (233) obj. 32972.1 iterations 65
Cbc0038I Pass 104: (7.52 seconds) suminf.   24.45222 (249) obj. 32972.1 iterations 293
Cbc0038I Pass 105: (7.53 seconds) suminf.   23.80862 (257) obj. 32972.1 iterations 61
Cbc0038I Pass 106: (7.58 seconds) suminf.   24.98588 (236) obj. 32972.1 iterations 382
Cbc0038I Pass 107: (7.60 seconds) suminf.   22.15513 (239) obj. 32972.1 iterations 137
Cbc0038I Pass 108: (7.65 seconds) suminf.   26.38605 (238) obj. 32972.1 iterations 331
Cbc0038I Pass 109: (7.68 seconds) suminf.   24.66375 (243) obj. 32972.1 iterations 254
Cbc0038I Pass 110: (7.69 seconds) suminf.   21.81285 (239) obj. 32972.1 iterations 47
Cbc0038I Pass 111: (7.70 seconds) suminf.   21.54183 (238) obj. 32972.1 iterations 22
Cbc0038I Pass 112: (7.76 seconds) suminf.   23.19581 (236) obj. 32972.1 iterations 368
Cbc0038I Pass 113: (7.77 seconds) suminf.   22.83643 (242) obj. 32972.1 iterations 104
Cbc0038I Pass 114: (7.84 seconds) suminf.   22.17135 (228) obj. 32972.1 iterations 478
Cbc0038I Pass 115: (7.85 seconds) suminf.   21.26149 (229) obj. 32972.1 iterations 79
Cbc0038I Pass 116: (7.90 seconds) suminf.   22.71158 (231) obj. 32972.1 iterations 298
Cbc0038I Pass 117: (7.91 seconds) suminf.   21.99040 (225) obj. 32972.1 iterations 81
Cbc0038I Pass 118: (8.01 seconds) suminf.   22.12876 (225) obj. 32972.1 iterations 832
Cbc0038I Pass 119: (8.03 seconds) suminf.   21.12689 (243) obj. 32972.1 iterations 96
Cbc0038I Pass 120: (8.13 seconds) suminf.   21.16884 (227) obj. 32972.1 iterations 783
Cbc0038I Pass 121: (8.14 seconds) suminf.   19.15061 (229) obj. 32972.1 iterations 59
Cbc0038I Pass 122: (8.20 seconds) suminf.   23.87438 (234) obj. 32972.1 iterations 441
Cbc0038I Pass 123: (8.24 seconds) suminf.   19.41907 (230) obj. 32972.1 iterations 313
Cbc0038I Pass 124: (8.25 seconds) suminf.   19.04164 (229) obj. 32972.1 iterations 35
Cbc0038I Pass 125: (8.28 seconds) suminf.   19.35449 (225) obj. 32972.1 iterations 245
Cbc0038I Pass 126: (8.30 seconds) suminf.   18.34438 (233) obj. 32972.1 iterations 67
Cbc0038I Pass 127: (8.33 seconds) suminf.   21.49798 (225) obj. 32972.1 iterations 249
Cbc0038I Pass 128: (8.35 seconds) suminf.   18.50899 (231) obj. 32972.1 iterations 125
Cbc0038I Pass 129: (8.36 seconds) suminf.   18.41620 (229) obj. 32972.1 iterations 88
Cbc0038I Pass 130: (8.38 seconds) suminf.   19.81838 (230) obj. 32972.1 iterations 129
Cbc0038I Pass 131: (8.40 seconds) suminf.   18.34438 (233) obj. 32972.1 iterations 121
Cbc0038I Pass 132: (8.45 seconds) suminf.   21.34487 (193) obj. 32972.1 iterations 411
Cbc0038I Pass 133: (8.47 seconds) suminf.   17.68678 (201) obj. 32972.1 iterations 108
Cbc0038I Pass 134: (8.50 seconds) suminf.   16.98007 (188) obj. 32972.1 iterations 186
Cbc0038I Pass 135: (8.51 seconds) suminf.   17.02174 (187) obj. 32972.1 iterations 71
Cbc0038I Pass 136: (8.57 seconds) suminf.   13.47602 (153) obj. 32972.1 iterations 552
Cbc0038I Pass 137: (8.58 seconds) suminf.   11.25865 (163) obj. 32972.1 iterations 73
Cbc0038I Pass 138: (8.63 seconds) suminf.   12.77715 (147) obj. 32972.1 iterations 408
Cbc0038I Pass 139: (8.64 seconds) suminf.   11.36167 (145) obj. 32972.1 iterations 52
Cbc0038I Pass 140: (8.68 seconds) suminf.   10.71791 (131) obj. 32972.1 iterations 351
Cbc0038I Pass 141: (8.69 seconds) suminf.    8.93134 (124) obj. 32972.1 iterations 72
Cbc0038I Pass 142: (8.73 seconds) suminf.   10.47784 (118) obj. 32972.1 iterations 381
Cbc0038I Pass 143: (8.74 seconds) suminf.    8.78223 (104) obj. 32972.1 iterations 86
Cbc0038I Pass 144: (8.74 seconds) suminf.    8.78223 (104) obj. 32972.1 iterations 5
Cbc0038I Pass 145: (8.78 seconds) suminf.    9.45980 (140) obj. 32972.1 iterations 354
Cbc0038I Pass 146: (8.80 seconds) suminf.    8.69433 (130) obj. 32972.1 iterations 103
Cbc0038I Pass 147: (8.83 seconds) suminf.   12.23892 (99) obj. 32972.1 iterations 305
Cbc0038I Pass 148: (8.85 seconds) suminf.    8.72103 (95) obj. 32972.1 iterations 184
Cbc0038I Pass 149: (8.90 seconds) suminf.    8.04682 (156) obj. 32972.1 iterations 460
Cbc0038I Pass 150: (8.92 seconds) suminf.    6.92799 (142) obj. 32972.1 iterations 170
Cbc0038I Pass 151: (8.94 seconds) suminf.    8.32722 (93) obj. 32972.1 iterations 161
Cbc0038I Pass 152: (8.95 seconds) suminf.    8.32722 (93) obj. 32972.1 iterations 61
Cbc0038I Pass 153: (9.00 seconds) suminf.    9.94866 (125) obj. 32972.1 iterations 558
Cbc0038I Pass 154: (9.02 seconds) suminf.    8.94153 (112) obj. 32972.1 iterations 117
Cbc0038I Pass 155: (9.03 seconds) suminf.    9.22256 (112) obj. 32972.1 iterations 57
Cbc0038I Pass 156: (9.08 seconds) suminf.   12.17408 (78) obj. 32972.1 iterations 703
Cbc0038I Pass 157: (9.10 seconds) suminf.   11.06267 (78) obj. 32972.1 iterations 88
Cbc0038I Pass 158: (9.14 seconds) suminf.    9.90161 (127) obj. 32972.1 iterations 529
Cbc0038I Pass 159: (9.26 seconds) suminf.   45.41956 (286) obj. 32972.1 iterations 1109
Cbc0038I Pass 160: (9.40 seconds) suminf.   20.91756 (184) obj. 32972.1 iterations 1301
Cbc0038I Pass 161: (9.41 seconds) suminf.   20.91437 (182) obj. 32972.1 iterations 23
Cbc0038I Pass 162: (9.47 seconds) suminf.   15.23398 (149) obj. 32972.1 iterations 613
Cbc0038I Pass 163: (9.50 seconds) suminf.   13.31908 (139) obj. 32972.1 iterations 208
Cbc0038I Pass 164: (9.57 seconds) suminf.   13.66240 (127) obj. 32972.1 iterations 711
Cbc0038I Pass 165: (9.59 seconds) suminf.   13.06247 (134) obj. 32972.1 iterations 72
Cbc0038I Pass 166: (9.68 seconds) suminf.   14.40210 (110) obj. 32972.1 iterations 950
Cbc0038I Pass 167: (9.69 seconds) suminf.   13.40904 (109) obj. 32972.1 iterations 35
Cbc0038I Pass 168: (9.80 seconds) suminf.    9.81440 (85) obj. 32972.1 iterations 879
Cbc0038I Pass 169: (9.80 seconds) suminf.    9.81440 (85) obj. 32972.1 iterations 8
Cbc0038I Pass 170: (9.83 seconds) suminf.   10.46294 (88) obj. 32972.1 iterations 257
Cbc0038I Pass 171: (9.84 seconds) suminf.    8.98901 (88) obj. 32972.1 iterations 61
Cbc0038I Pass 172: (9.90 seconds) suminf.   10.75592 (71) obj. 32972.1 iterations 707
Cbc0038I Pass 173: (9.93 seconds) suminf.    9.66417 (72) obj. 32972.1 iterations 229
Cbc0038I Pass 174: (9.94 seconds) suminf.    9.21889 (73) obj. 32972.1 iterations 32
Cbc0038I Pass 175: (9.99 seconds) suminf.    9.01154 (78) obj. 32972.1 iterations 565
Cbc0038I Pass 176: (10.02 seconds) suminf.    8.37255 (79) obj. 32972.1 iterations 278
Cbc0038I Pass 177: (10.12 seconds) suminf.   10.87493 (65) obj. 32972.1 iterations 874
Cbc0038I Pass 178: (10.16 seconds) suminf.   10.05705 (63) obj. 32972.1 iterations 242
Cbc0038I Pass 179: (10.27 seconds) suminf.    7.97046 (90) obj. 32972.1 iterations 847
Cbc0038I Pass 180: (10.30 seconds) suminf.    7.95179 (83) obj. 32972.1 iterations 142
Cbc0038I Pass 181: (10.39 seconds) suminf.   14.86489 (121) obj. 32972.1 iterations 816
Cbc0038I Pass 182: (10.47 seconds) suminf.   10.48973 (101) obj. 32972.1 iterations 665
Cbc0038I Pass 183: (10.50 seconds) suminf.    8.55513 (89) obj. 32972.1 iterations 278
Cbc0038I Pass 184: (10.51 seconds) suminf.    7.45147 (87) obj. 32972.1 iterations 10
Cbc0038I Pass 185: (10.55 seconds) suminf.   12.80151 (97) obj. 32972.1 iterations 475
Cbc0038I Pass 186: (10.58 seconds) suminf.   10.96519 (102) obj. 32972.1 iterations 201
Cbc0038I Pass 187: (10.59 seconds) suminf.   10.46039 (102) obj. 32972.1 iterations 55
Cbc0038I Pass 188: (10.63 seconds) suminf.    8.12981 (112) obj. 32972.1 iterations 335
Cbc0038I Pass 189: (10.63 seconds) suminf.    8.12981 (112) obj. 32972.1 iterations 18
Cbc0038I Pass 190: (10.68 seconds) suminf.   12.25600 (74) obj. 32972.1 iterations 496
Cbc0038I Pass 191: (10.71 seconds) suminf.   10.05705 (63) obj. 32972.1 iterations 242
Cbc0038I Pass 192: (10.73 seconds) suminf.   10.05705 (63) obj. 32972.1 iterations 106
Cbc0038I Pass 193: (10.79 seconds) suminf.    8.33462 (124) obj. 32972.1 iterations 540
Cbc0038I Pass 194: (11.02 seconds) suminf.   64.21763 (346) obj. 32972.1 iterations 1863
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 348 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 3401 rows 1053 columns - 479 fixed gives 812, 199 - ok now
Cbc0038I Mini branch and bound did not improve solution (11.43 seconds)
Cbc0038I After 11.43 seconds - Feasibility pump exiting with objective of 34816 - took 10.26 seconds
Cbc0012I Integer solution of 34816 found by feasibility pump after 0 iterations and 0 nodes (11.43 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2830 rows 779 columns - 466 fixed gives 163, 44 - ok now
Cbc0031I 69 added rows had average density of 13.057971
Cbc0013I At root node, 69 cuts changed objective from 28672 to 28797.648 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 43 row cuts average 4.0 elements, 6 column cuts (6 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 38 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 163 row cuts average 16.8 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 34816 best solution, best possible 28798 (20.61 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2675 rows 745 columns - 384 fixed gives 378, 80 - ok now
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2646 rows 733 columns - 392 fixed gives 445, 85 - ok now
Cbc0010I After 100 nodes, 5 on tree, 34816 best solution, best possible 28939.296 (97.12 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2851 rows 807 columns - 442 fixed gives 253, 65 - ok now
Cbc0010I After 200 nodes, 13 on tree, 34816 best solution, best possible 28939.296 (148.90 seconds)
Cbc0010I After 300 nodes, 22 on tree, 34816 best solution, best possible 28939.296 (193.04 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2619 rows 711 columns - 414 fixed gives 416, 96 - ok now
Cbc0010I After 400 nodes, 34 on tree, 34816 best solution, best possible 28939.296 (244.44 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2613 rows 710 columns - 412 fixed gives 435, 96 - ok now
Cbc0010I After 500 nodes, 83 on tree, 34816 best solution, best possible 28939.296 (331.06 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2490 rows 699 columns - 381 fixed gives 344, 88 - ok now
Cbc0010I After 600 nodes, 133 on tree, 34816 best solution, best possible 28939.296 (450.21 seconds)
Cbc0010I After 700 nodes, 133 on tree, 34816 best solution, best possible 28939.296 (475.12 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2612 rows 708 columns - 410 fixed gives 435, 96 - ok now
Cbc0010I After 800 nodes, 179 on tree, 34816 best solution, best possible 28939.296 (592.20 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2426 rows 674 columns - 363 fixed gives 329, 76 - ok now
Cbc0010I After 900 nodes, 214 on tree, 34816 best solution, best possible 28939.296 (685.75 seconds)
Cbc0010I After 1000 nodes, 232 on tree, 34816 best solution, best possible 28939.296 (722.35 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 551 rows 175 columns
Cbc0010I After 1100 nodes, 252 on tree, 34816 best solution, best possible 28939.296 (748.60 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 531 rows 147 columns
Cbc0010I After 1200 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (766.48 seconds)
Cbc0010I After 1300 nodes, 235 on tree, 34816 best solution, best possible 28939.296 (792.72 seconds)
Cbc0010I After 1400 nodes, 256 on tree, 34816 best solution, best possible 28939.296 (822.66 seconds)
Cbc0010I After 1500 nodes, 239 on tree, 34816 best solution, best possible 28939.296 (851.82 seconds)
Cbc0010I After 1600 nodes, 242 on tree, 34816 best solution, best possible 28939.296 (889.91 seconds)
Cbc0010I After 1700 nodes, 245 on tree, 34816 best solution, best possible 28939.296 (910.56 seconds)
Cbc0010I After 1800 nodes, 245 on tree, 34816 best solution, best possible 28939.296 (922.64 seconds)
Cbc0010I After 1900 nodes, 235 on tree, 34816 best solution, best possible 28939.296 (958.79 seconds)
Cbc0010I After 2000 nodes, 253 on tree, 34816 best solution, best possible 28939.296 (991.58 seconds)
Cbc0010I After 2100 nodes, 251 on tree, 34816 best solution, best possible 28939.296 (1014.84 seconds)
Cbc0010I After 2200 nodes, 250 on tree, 34816 best solution, best possible 28939.296 (1033.98 seconds)
Cbc0010I After 2300 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (1063.58 seconds)
Cbc0010I After 2400 nodes, 243 on tree, 34816 best solution, best possible 28939.296 (1093.38 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 1413 rows 400 columns
Cbc0010I After 2500 nodes, 246 on tree, 34816 best solution, best possible 28939.296 (1121.99 seconds)
Cbc0010I After 2600 nodes, 242 on tree, 34816 best solution, best possible 28939.296 (1144.49 seconds)
Cbc0010I After 2700 nodes, 239 on tree, 34816 best solution, best possible 28939.296 (1174.04 seconds)
Cbc0010I After 2800 nodes, 245 on tree, 34816 best solution, best possible 28939.296 (1203.81 seconds)
Cbc0010I After 2900 nodes, 239 on tree, 34816 best solution, best possible 28939.296 (1229.25 seconds)
Cbc0010I After 3000 nodes, 245 on tree, 34816 best solution, best possible 28939.296 (1255.90 seconds)
Cbc0010I After 3100 nodes, 251 on tree, 34816 best solution, best possible 28939.296 (1279.03 seconds)
Cbc0010I After 3200 nodes, 241 on tree, 34816 best solution, best possible 28939.296 (1310.97 seconds)
Cbc0010I After 3300 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (1327.20 seconds)
Cbc0010I After 3400 nodes, 240 on tree, 34816 best solution, best possible 28939.296 (1344.11 seconds)
Cbc0010I After 3500 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (1363.24 seconds)
Cbc0010I After 3600 nodes, 241 on tree, 34816 best solution, best possible 28939.296 (1380.71 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2703 rows 734 columns - 445 fixed gives 315, 73 - ok now
Cbc0010I After 3700 nodes, 241 on tree, 34816 best solution, best possible 28939.296 (1401.33 seconds)
Cbc0010I After 3800 nodes, 246 on tree, 34816 best solution, best possible 28939.296 (1419.15 seconds)
Cbc0010I After 3900 nodes, 244 on tree, 34816 best solution, best possible 28939.296 (1442.03 seconds)
Cbc0010I After 4000 nodes, 247 on tree, 34816 best solution, best possible 28939.296 (1457.82 seconds)
Cbc0010I After 4100 nodes, 242 on tree, 34816 best solution, best possible 28939.296 (1489.35 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2677 rows 733 columns - 436 fixed gives 326, 75 - ok now
Cbc0010I After 4200 nodes, 244 on tree, 34816 best solution, best possible 28939.296 (1513.63 seconds)
Cbc0010I After 4300 nodes, 251 on tree, 34816 best solution, best possible 28939.296 (1533.24 seconds)
Cbc0010I After 4400 nodes, 252 on tree, 34816 best solution, best possible 28939.296 (1554.47 seconds)
Cbc0010I After 4500 nodes, 257 on tree, 34816 best solution, best possible 28939.296 (1577.23 seconds)
Cbc0010I After 4600 nodes, 254 on tree, 34816 best solution, best possible 28939.296 (1599.17 seconds)
Cbc0010I After 4700 nodes, 260 on tree, 34816 best solution, best possible 28939.296 (1620.52 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2610 rows 731 columns - 407 fixed gives 348, 85 - ok now
Cbc0010I After 4800 nodes, 256 on tree, 34816 best solution, best possible 28939.296 (1644.06 seconds)
Cbc0010I After 4900 nodes, 250 on tree, 34816 best solution, best possible 28939.296 (1673.91 seconds)
Cbc0010I After 5000 nodes, 254 on tree, 34816 best solution, best possible 28939.296 (1691.27 seconds)
Cbc0010I After 5100 nodes, 251 on tree, 34816 best solution, best possible 28939.296 (1710.60 seconds)
Cbc0010I After 5200 nodes, 244 on tree, 34816 best solution, best possible 28939.296 (1731.83 seconds)
Cbc0010I After 5300 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (1749.26 seconds)
Cbc0038I Full problem 4131 rows 1401 columns, reduced to 2733 rows 756 columns - 436 fixed gives 355, 85 - ok now
Cbc0010I After 5400 nodes, 248 on tree, 34816 best solution, best possible 28939.296 (1768.30 seconds)
Cbc0010I After 5500 nodes, 250 on tree, 34816 best solution, best possible 28939.296 (1786.36 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 34816 (best possible 28939.296), took 5810481 iterations and 5572 nodes (1799.29 seconds)
Cbc0032I Strong branching done 24684 times (1827170 iterations), fathomed 306 nodes and fixed 3844 variables
Cbc0035I Maximum depth 445, 13 variables fixed on reduced cost
Cuts at root node changed objective from 28672 to 28798
Probing was tried 1077 times and created 113926 cuts of which 0 were active after adding rounds of cuts (7.341 seconds)
Gomory was tried 645 times and created 1057 cuts of which 0 were active after adding rounds of cuts (4.410 seconds)
Knapsack was tried 645 times and created 2944 cuts of which 0 were active after adding rounds of cuts (0.785 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
TwoMirCuts was tried 10 times and created 163 cuts of which 0 were active after adding rounds of cuts (0.210 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
ImplicationCuts was tried 25 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

Objective value:                34816.00000000
Lower bound:                    28939.296
Gap:                            0.20
Enumerated nodes:               5572
Total iterations:               5810481
Time (CPU seconds):             1799.45
Time (Wallclock seconds):       1799.98

Total time (CPU seconds):       1799.47   (Wallclock seconds):       1800.00

