Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_5_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_5_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 264.964 - 0.09 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 9 tightened bounds, 308 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 104 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 46 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 1 tightened bounds, 11 strengthened rows, 1 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 1386 rows, 489 columns (489 integer (467 of which binary)) and 4671 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 489 objects (489 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 270 integers unsatisfied sum - 70.6805
Cbc0038I Pass   1: suminf.   50.78722 (267) obj. 316.858 iterations 470
Cbc0038I Pass   2: suminf.   48.46846 (260) obj. 382.778 iterations 88
Cbc0038I Pass   3: suminf.   46.73666 (229) obj. 394.077 iterations 61
Cbc0038I Pass   4: suminf.   38.69479 (179) obj. 426.389 iterations 207
Cbc0038I Pass   5: suminf.   28.82974 (162) obj. 421.259 iterations 146
Cbc0038I Pass   6: suminf.   25.61028 (165) obj. 420.067 iterations 129
Cbc0038I Pass   7: suminf.   23.92169 (160) obj. 419.905 iterations 56
Cbc0038I Pass   8: suminf.   23.71200 (160) obj. 420.021 iterations 32
Cbc0038I Pass   9: suminf.   18.68411 (97) obj. 419.252 iterations 242
Cbc0038I Pass  10: suminf.   18.20128 (94) obj. 419.252 iterations 71
Cbc0038I Pass  11: suminf.   13.10414 (78) obj. 419.079 iterations 139
Cbc0038I Pass  12: suminf.   12.96102 (76) obj. 419.092 iterations 55
Cbc0038I Pass  13: suminf.    4.47742 (36) obj. 394 iterations 158
Cbc0038I Pass  14: suminf.    4.23565 (36) obj. 394 iterations 40
Cbc0038I Pass  15: suminf.    0.00000 (0) obj. 394 iterations 64
Cbc0038I Solution found of 394
Cbc0038I Cleaned solution of 394
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1113 rows 369 columns - 44 fixed gives 680, 216 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I Round again with cutoff of 380.246
Cbc0038I Pass  16: suminf.   50.78722 (267) obj. 316.858 iterations 0
Cbc0038I Pass  17: suminf.   48.69138 (263) obj. 380.246 iterations 92
Cbc0038I Pass  18: suminf.   46.05313 (245) obj. 380.246 iterations 68
Cbc0038I Pass  19: suminf.   42.13081 (208) obj. 380.246 iterations 150
Cbc0038I Pass  20: suminf.   34.33532 (172) obj. 380.246 iterations 162
Cbc0038I Pass  21: suminf.   25.65814 (141) obj. 380.246 iterations 136
Cbc0038I Pass  22: suminf.   24.49826 (141) obj. 380.246 iterations 56
Cbc0038I Pass  23: suminf.   16.75590 (102) obj. 380.246 iterations 300
Cbc0038I Pass  24: suminf.   15.69274 (116) obj. 380.246 iterations 87
Cbc0038I Pass  25: suminf.   13.39752 (67) obj. 380.246 iterations 132
Cbc0038I Pass  26: suminf.   12.53794 (74) obj. 380.246 iterations 68
Cbc0038I Pass  27: suminf.   12.53794 (74) obj. 380.246 iterations 4
Cbc0038I Pass  28: suminf.   10.11723 (71) obj. 380.246 iterations 118
Cbc0038I Pass  29: suminf.    8.57229 (54) obj. 380.246 iterations 89
Cbc0038I Pass  30: suminf.    8.57229 (54) obj. 380.246 iterations 18
Cbc0038I Pass  31: suminf.    9.00464 (50) obj. 380.246 iterations 101
Cbc0038I Pass  32: suminf.    2.06116 (28) obj. 380.246 iterations 96
Cbc0038I Pass  33: suminf.    8.64973 (42) obj. 380.246 iterations 183
Cbc0038I Pass  34: suminf.    7.79492 (39) obj. 380.246 iterations 71
Cbc0038I Pass  35: suminf.   10.33775 (68) obj. 380.246 iterations 193
Cbc0038I Pass  36: suminf.    2.60427 (24) obj. 380.246 iterations 118
Cbc0038I Pass  37: suminf.    4.79095 (30) obj. 380.246 iterations 98
Cbc0038I Pass  38: suminf.    1.56732 (25) obj. 380.246 iterations 64
Cbc0038I Pass  39: suminf.    5.41330 (27) obj. 380.246 iterations 98
Cbc0038I Pass  40: suminf.    0.24561 (1) obj. 380.246 iterations 81
Cbc0038I Solution found of 380.246
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1387 rows 489 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 363
Cbc0038I Before mini branch and bound, 116 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1118 rows 373 columns - 138 fixed gives 233, 70 - ok now
Cbc0038I Full problem 1386 rows 489 columns, reduced to 109 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.74 seconds)
Cbc0038I Round again with cutoff of 342.691
Cbc0038I Pass  41: suminf.   50.78722 (267) obj. 316.858 iterations 0
Cbc0038I Pass  42: suminf.   46.14324 (268) obj. 342.691 iterations 86
Cbc0038I Pass  43: suminf.   38.26540 (213) obj. 342.691 iterations 151
Cbc0038I Pass  44: suminf.   33.19596 (175) obj. 342.691 iterations 198
Cbc0038I Pass  45: suminf.   29.25443 (150) obj. 342.691 iterations 156
Cbc0038I Pass  46: suminf.   29.85409 (157) obj. 342.691 iterations 32
Cbc0038I Pass  47: suminf.   24.26806 (130) obj. 342.691 iterations 119
Cbc0038I Pass  48: suminf.   24.51321 (128) obj. 342.691 iterations 23
Cbc0038I Pass  49: suminf.   23.56766 (128) obj. 342.691 iterations 10
Cbc0038I Pass  50: suminf.   21.73654 (129) obj. 342.691 iterations 115
Cbc0038I Pass  51: suminf.   21.41004 (129) obj. 342.691 iterations 20
Cbc0038I Pass  52: suminf.   16.80165 (97) obj. 342.691 iterations 131
Cbc0038I Pass  53: suminf.   16.51427 (105) obj. 342.691 iterations 70
Cbc0038I Pass  54: suminf.   13.42222 (88) obj. 342.691 iterations 155
Cbc0038I Pass  55: suminf.   11.43072 (92) obj. 342.691 iterations 129
Cbc0038I Pass  56: suminf.    5.99637 (70) obj. 342.691 iterations 186
Cbc0038I Pass  57: suminf.    5.99637 (70) obj. 342.691 iterations 11
Cbc0038I Pass  58: suminf.    4.81552 (39) obj. 342.691 iterations 263
Cbc0038I Pass  59: suminf.    3.80091 (33) obj. 342.691 iterations 6
Cbc0038I Pass  60: suminf.    0.30887 (1) obj. 342.691 iterations 74
Cbc0038I Solution found of 342.691
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1387 rows 489 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 293
Cbc0038I Before mini branch and bound, 119 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1118 rows 370 columns - 114 fixed gives 451, 144 - ok now
Cbc0038I Full problem 1386 rows 489 columns, reduced to 290 rows 103 columns
Cbc0038I Mini branch and bound improved solution from 293 to 287 (0.96 seconds)
Cbc0038I Round again with cutoff of 279.837
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 4
Cbc0038I Pass  61: suminf.   50.75700 (273) obj. 279 iterations 107
Cbc0038I Pass  62: suminf.   48.15669 (254) obj. 279.837 iterations 158
Cbc0038I Pass  63: suminf.   47.73909 (263) obj. 279.837 iterations 69
Cbc0038I Pass  64: suminf.   47.97627 (259) obj. 279.837 iterations 44
Cbc0038I Pass  65: suminf.   29.96915 (227) obj. 279.837 iterations 248
Cbc0038I Pass  66: suminf.   28.41751 (206) obj. 279.837 iterations 188
Cbc0038I Pass  67: suminf.   23.55806 (181) obj. 279.837 iterations 149
Cbc0038I Pass  68: suminf.   22.37444 (182) obj. 279.837 iterations 79
Cbc0038I Pass  69: suminf.   22.60249 (184) obj. 279.837 iterations 21
Cbc0038I Pass  70: suminf.   15.26855 (143) obj. 279.837 iterations 197
Cbc0038I Pass  71: suminf.   15.24044 (157) obj. 279.837 iterations 104
Cbc0038I Pass  72: suminf.   15.07841 (144) obj. 279.837 iterations 107
Cbc0038I Pass  73: suminf.   13.87963 (155) obj. 279.837 iterations 86
Cbc0038I Pass  74: suminf.   13.84180 (155) obj. 279.837 iterations 1
Cbc0038I Pass  75: suminf.   14.88823 (149) obj. 279.837 iterations 106
Cbc0038I Pass  76: suminf.   13.92732 (157) obj. 279.837 iterations 74
Cbc0038I Pass  77: suminf.   15.49150 (145) obj. 279.837 iterations 202
Cbc0038I Pass  78: suminf.   35.65383 (208) obj. 279.837 iterations 314
Cbc0038I Pass  79: suminf.   18.70326 (163) obj. 279.837 iterations 232
Cbc0038I Pass  80: suminf.   17.62630 (149) obj. 279.837 iterations 87
Cbc0038I Pass  81: suminf.   14.33885 (151) obj. 279.837 iterations 88
Cbc0038I Pass  82: suminf.   13.76537 (159) obj. 279.837 iterations 70
Cbc0038I Pass  83: suminf.   14.94213 (160) obj. 279.837 iterations 96
Cbc0038I Pass  84: suminf.   34.47232 (210) obj. 279.837 iterations 280
Cbc0038I Pass  85: suminf.   19.32171 (181) obj. 279.837 iterations 257
Cbc0038I Pass  86: suminf.   17.64107 (164) obj. 279.837 iterations 48
Cbc0038I Pass  87: suminf.   18.55419 (169) obj. 279.837 iterations 131
Cbc0038I Pass  88: suminf.   14.65564 (160) obj. 279.837 iterations 103
Cbc0038I Pass  89: suminf.   16.13267 (165) obj. 279.837 iterations 134
Cbc0038I Pass  90: suminf.   14.44673 (158) obj. 279.837 iterations 82
Cbc0038I Pass  91: suminf.   16.95039 (152) obj. 279.837 iterations 190
Cbc0038I Pass  92: suminf.   13.81994 (155) obj. 279.837 iterations 124
Cbc0038I Pass  93: suminf.   14.71366 (158) obj. 279.837 iterations 115
Cbc0038I Pass  94: suminf.   30.04170 (192) obj. 279.837 iterations 296
Cbc0038I Pass  95: suminf.   18.30682 (177) obj. 279.837 iterations 246
Cbc0038I Pass  96: suminf.   17.17775 (179) obj. 279.837 iterations 16
Cbc0038I Pass  97: suminf.   15.92439 (152) obj. 279.837 iterations 82
Cbc0038I Pass  98: suminf.   16.00382 (153) obj. 279.837 iterations 11
Cbc0038I Pass  99: suminf.   16.37000 (149) obj. 279.837 iterations 118
Cbc0038I Pass 100: suminf.   14.50413 (156) obj. 279.837 iterations 80
Cbc0038I Pass 101: suminf.   17.75963 (155) obj. 279.837 iterations 112
Cbc0038I Pass 102: suminf.   37.08318 (221) obj. 279.837 iterations 366
Cbc0038I Pass 103: suminf.   25.76574 (184) obj. 279.837 iterations 290
Cbc0038I Pass 104: suminf.   22.67603 (187) obj. 279.837 iterations 116
Cbc0038I Pass 105: suminf.   22.51665 (187) obj. 279.837 iterations 50
Cbc0038I Pass 106: suminf.   20.65584 (176) obj. 279.837 iterations 160
Cbc0038I Pass 107: suminf.   19.90822 (190) obj. 279.837 iterations 80
Cbc0038I Pass 108: suminf.   18.85743 (205) obj. 279.837 iterations 92
Cbc0038I Pass 109: suminf.   19.01399 (158) obj. 279.837 iterations 129
Cbc0038I Pass 110: suminf.   16.54541 (174) obj. 279.837 iterations 79
Cbc0038I Pass 111: suminf.   16.60260 (181) obj. 279.837 iterations 11
Cbc0038I Pass 112: suminf.   17.89519 (162) obj. 279.837 iterations 119
Cbc0038I Pass 113: suminf.   15.07589 (149) obj. 279.837 iterations 88
Cbc0038I Pass 114: suminf.   15.07589 (149) obj. 279.837 iterations 2
Cbc0038I Pass 115: suminf.   14.68354 (150) obj. 279.837 iterations 96
Cbc0038I Pass 116: suminf.   14.64602 (150) obj. 279.837 iterations 33
Cbc0038I Pass 117: suminf.   15.53646 (153) obj. 279.837 iterations 111
Cbc0038I Pass 118: suminf.   34.93132 (203) obj. 279.837 iterations 316
Cbc0038I Pass 119: suminf.   20.07391 (170) obj. 279.837 iterations 240
Cbc0038I Pass 120: suminf.   18.38359 (171) obj. 279.837 iterations 9
Cbc0038I Pass 121: suminf.   15.86891 (158) obj. 279.837 iterations 130
Cbc0038I Pass 122: suminf.   15.87320 (158) obj. 279.837 iterations 11
Cbc0038I Pass 123: suminf.   14.02492 (134) obj. 279.837 iterations 106
Cbc0038I Pass 124: suminf.   13.99089 (155) obj. 279.837 iterations 50
Cbc0038I Pass 125: suminf.   15.16003 (155) obj. 279.837 iterations 118
Cbc0038I Pass 126: suminf.   43.46640 (219) obj. 279.837 iterations 355
Cbc0038I Pass 127: suminf.   20.53973 (169) obj. 279.837 iterations 264
Cbc0038I Pass 128: suminf.   19.71597 (166) obj. 279.837 iterations 48
Cbc0038I Pass 129: suminf.   18.89258 (165) obj. 279.837 iterations 110
Cbc0038I Pass 130: suminf.   16.95827 (161) obj. 279.837 iterations 69
Cbc0038I Pass 131: suminf.   16.95535 (163) obj. 279.837 iterations 7
Cbc0038I Pass 132: suminf.   16.38701 (157) obj. 279.837 iterations 152
Cbc0038I Pass 133: suminf.   14.59871 (159) obj. 279.837 iterations 70
Cbc0038I Pass 134: suminf.   14.20754 (168) obj. 279.837 iterations 37
Cbc0038I Pass 135: suminf.   17.58889 (168) obj. 279.837 iterations 93
Cbc0038I Pass 136: suminf.   17.52237 (168) obj. 279.837 iterations 38
Cbc0038I Pass 137: suminf.   17.61768 (161) obj. 279.837 iterations 11
Cbc0038I Pass 138: suminf.   14.47792 (156) obj. 279.837 iterations 134
Cbc0038I Pass 139: suminf.   13.81908 (161) obj. 279.837 iterations 84
Cbc0038I Pass 140: suminf.   16.86930 (165) obj. 279.837 iterations 58
Cbc0038I Pass 141: suminf.   16.47729 (165) obj. 279.837 iterations 38
Cbc0038I Pass 142: suminf.   16.47729 (165) obj. 279.837 iterations 6
Cbc0038I Pass 143: suminf.   16.20225 (148) obj. 279.837 iterations 81
Cbc0038I Pass 144: suminf.   15.22795 (167) obj. 279.837 iterations 49
Cbc0038I Pass 145: suminf.   17.36023 (153) obj. 279.837 iterations 109
Cbc0038I Pass 146: suminf.   16.62800 (162) obj. 279.837 iterations 78
Cbc0038I Pass 147: suminf.   16.62800 (162) obj. 279.837 iterations 7
Cbc0038I Pass 148: suminf.   16.31886 (150) obj. 279.837 iterations 79
Cbc0038I Pass 149: suminf.   16.15989 (155) obj. 279.837 iterations 24
Cbc0038I Pass 150: suminf.   16.21128 (167) obj. 279.837 iterations 61
Cbc0038I Pass 151: suminf.   16.42269 (169) obj. 279.837 iterations 30
Cbc0038I Pass 152: suminf.   15.34188 (172) obj. 279.837 iterations 25
Cbc0038I Pass 153: suminf.   15.84876 (146) obj. 279.837 iterations 99
Cbc0038I Pass 154: suminf.   16.15989 (155) obj. 279.837 iterations 42
Cbc0038I Pass 155: suminf.   15.22375 (166) obj. 279.837 iterations 55
Cbc0038I Pass 156: suminf.   15.22795 (167) obj. 279.837 iterations 40
Cbc0038I Pass 157: suminf.   16.44751 (158) obj. 279.837 iterations 59
Cbc0038I Pass 158: suminf.   15.90054 (155) obj. 279.837 iterations 69
Cbc0038I Pass 159: suminf.   16.15989 (155) obj. 279.837 iterations 5
Cbc0038I Pass 160: suminf.   32.96189 (211) obj. 279.837 iterations 246
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1386 rows 489 columns, reduced to 1298 rows 445 columns - 134 fixed gives 461, 148 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.84 seconds)
Cbc0038I After 1.84 seconds - Feasibility pump exiting with objective of 287 - took 1.57 seconds
Cbc0012I Integer solution of 287 found by feasibility pump after 0 iterations and 0 nodes (1.84 seconds)
Cbc0038I Full problem 1386 rows 489 columns, reduced to 932 rows 282 columns - 108 fixed gives 220, 64 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 265.45523 to 284 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 88 row cuts average 2.0 elements, 32 column cuts (32 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 287, took 541 iterations and 0 nodes (2.07 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Cuts at root node changed objective from 265.455 to 284
Probing was tried 1 times and created 120 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                287.00000000
Enumerated nodes:               0
Total iterations:               541
Time (CPU seconds):             2.10
Time (Wallclock seconds):       2.12

Total time (CPU seconds):       2.10   (Wallclock seconds):       2.13

