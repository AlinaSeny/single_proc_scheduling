Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_1_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_1_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 311.217 - 0.03 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 12 tightened bounds, 285 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 180 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 7 tightened bounds, 114 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1394 rows, 493 columns (493 integer (471 of which binary)) and 4633 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 493 objects (491 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 249 integers unsatisfied sum - 72.9747
Cbc0038I Pass   1: suminf.   29.54517 (144) obj. 371.129 iterations 487
Cbc0038I Pass   2: suminf.   20.23224 (115) obj. 394.494 iterations 193
Cbc0038I Pass   3: suminf.   18.40578 (106) obj. 395.45 iterations 34
Cbc0038I Pass   4: suminf.   12.61162 (66) obj. 428.722 iterations 182
Cbc0038I Pass   5: suminf.   12.64148 (77) obj. 426.341 iterations 12
Cbc0038I Pass   6: suminf.    6.54459 (51) obj. 447.447 iterations 328
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 448 iterations 139
Cbc0038I Solution found of 448
Cbc0038I Cleaned solution of 448
Cbc0038I Before mini branch and bound, 195 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.23 seconds)
Cbc0038I Round again with cutoff of 433.5
Cbc0038I Pass   8: suminf.   29.54517 (144) obj. 371.129 iterations 0
Cbc0038I Pass   9: suminf.   20.23224 (115) obj. 394.494 iterations 236
Cbc0038I Pass  10: suminf.   18.40578 (106) obj. 395.45 iterations 51
Cbc0038I Pass  11: suminf.   12.72722 (64) obj. 428.827 iterations 155
Cbc0038I Pass  12: suminf.   12.64148 (77) obj. 426.341 iterations 26
Cbc0038I Pass  13: suminf.    7.82134 (59) obj. 433.5 iterations 103
Cbc0038I Pass  14: suminf.    0.40393 (8) obj. 418 iterations 184
Cbc0038I Pass  15: suminf.    0.40393 (8) obj. 418 iterations 6
Cbc0038I Pass  16: suminf.    0.37357 (25) obj. 418 iterations 88
Cbc0038I Pass  17: suminf.    3.43146 (38) obj. 415.155 iterations 118
Cbc0038I Pass  18: suminf.    1.66264 (20) obj. 397 iterations 52
Cbc0038I Pass  19: suminf.    1.66264 (20) obj. 397 iterations 3
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 397 iterations 20
Cbc0038I Solution found of 397
Cbc0038I Cleaned solution of 397
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1394 rows 493 columns, reduced to 993 rows 311 columns - 53 fixed gives 677, 192 - still too large
Cbc0038I Full problem 1394 rows 493 columns, reduced to 10 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I Round again with cutoff of 379.2
Cbc0038I Pass  21: suminf.   29.54517 (144) obj. 371.129 iterations 0
Cbc0038I Pass  22: suminf.   20.12798 (112) obj. 379.2 iterations 225
Cbc0038I Pass  23: suminf.   18.51074 (104) obj. 379.2 iterations 95
Cbc0038I Pass  24: suminf.    9.31593 (63) obj. 379.2 iterations 292
Cbc0038I Pass  25: suminf.    9.31593 (63) obj. 379.2 iterations 3
Cbc0038I Pass  26: suminf.    7.56508 (53) obj. 379.2 iterations 140
Cbc0038I Pass  27: suminf.    6.05777 (55) obj. 379.2 iterations 130
Cbc0038I Pass  28: suminf.    8.32937 (56) obj. 379.2 iterations 145
Cbc0038I Pass  29: suminf.    5.52921 (46) obj. 379.2 iterations 123
Cbc0038I Pass  30: suminf.    8.48984 (37) obj. 379.2 iterations 217
Cbc0038I Pass  31: suminf.    6.04725 (44) obj. 370.974 iterations 81
Cbc0038I Pass  32: suminf.    8.99663 (51) obj. 379.2 iterations 109
Cbc0038I Pass  33: suminf.    5.98690 (39) obj. 370.658 iterations 52
Cbc0038I Pass  34: suminf.    5.95673 (39) obj. 370.658 iterations 25
Cbc0038I Pass  35: suminf.    6.68557 (30) obj. 379.2 iterations 80
Cbc0038I Pass  36: suminf.    4.80455 (34) obj. 368.996 iterations 61
Cbc0038I Pass  37: suminf.    7.41104 (47) obj. 379.2 iterations 84
Cbc0038I Pass  38: suminf.    5.39285 (41) obj. 379.2 iterations 36
Cbc0038I Pass  39: suminf.    2.03543 (20) obj. 379.2 iterations 63
Cbc0038I Pass  40: suminf.    2.03543 (20) obj. 379.2 iterations 8
Cbc0038I Pass  41: suminf.    3.25241 (14) obj. 379.2 iterations 109
Cbc0038I Pass  42: suminf.    3.07176 (14) obj. 379.2 iterations 13
Cbc0038I Pass  43: suminf.    2.11567 (7) obj. 379.2 iterations 37
Cbc0038I Pass  44: suminf.    0.19989 (1) obj. 379.2 iterations 7
Cbc0038I Solution found of 379.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1395 rows 493 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 361
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1394 rows 493 columns, reduced to 986 rows 309 columns - 40 fixed gives 743, 218 - still too large
Cbc0038I Full problem 1394 rows 493 columns, reduced to 135 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.53 seconds)
Cbc0038I Round again with cutoff of 345.6
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 4
Cbc0038I Pass  45: suminf.   29.32712 (151) obj. 345 iterations 88
Cbc0038I Pass  46: suminf.   21.62514 (122) obj. 345.6 iterations 257
Cbc0038I Pass  47: suminf.   20.43614 (117) obj. 345.6 iterations 118
Cbc0038I Pass  48: suminf.   20.50006 (115) obj. 345.6 iterations 10
Cbc0038I Pass  49: suminf.    9.70870 (67) obj. 345.6 iterations 295
Cbc0038I Pass  50: suminf.    9.70870 (67) obj. 345.6 iterations 2
Cbc0038I Pass  51: suminf.   13.38064 (62) obj. 345.6 iterations 228
Cbc0038I Pass  52: suminf.   12.27787 (67) obj. 345.6 iterations 173
Cbc0038I Pass  53: suminf.   12.05425 (63) obj. 345.6 iterations 33
Cbc0038I Pass  54: suminf.   11.50463 (64) obj. 345.6 iterations 24
Cbc0038I Pass  55: suminf.   12.27502 (60) obj. 345.6 iterations 93
Cbc0038I Pass  56: suminf.   10.85569 (61) obj. 345.6 iterations 24
Cbc0038I Pass  57: suminf.   10.96763 (56) obj. 345.6 iterations 110
Cbc0038I Pass  58: suminf.    9.65967 (60) obj. 345.6 iterations 26
Cbc0038I Pass  59: suminf.    8.75347 (63) obj. 345.6 iterations 78
Cbc0038I Pass  60: suminf.    8.18117 (62) obj. 345.6 iterations 40
Cbc0038I Pass  61: suminf.    9.72575 (57) obj. 345.6 iterations 59
Cbc0038I Pass  62: suminf.    9.17681 (60) obj. 345.6 iterations 60
Cbc0038I Pass  63: suminf.    9.17681 (60) obj. 345.6 iterations 7
Cbc0038I Pass  64: suminf.   12.12503 (59) obj. 345.6 iterations 118
Cbc0038I Pass  65: suminf.   10.60835 (62) obj. 345.6 iterations 137
Cbc0038I Pass  66: suminf.    8.19795 (58) obj. 345.6 iterations 154
Cbc0038I Pass  67: suminf.    8.08029 (59) obj. 345.6 iterations 15
Cbc0038I Pass  68: suminf.    7.70492 (52) obj. 345.6 iterations 106
Cbc0038I Pass  69: suminf.    7.70492 (52) obj. 345.6 iterations 13
Cbc0038I Pass  70: suminf.   13.47127 (66) obj. 345.6 iterations 108
Cbc0038I Pass  71: suminf.   12.22142 (59) obj. 345.6 iterations 72
Cbc0038I Pass  72: suminf.   11.57144 (60) obj. 345.6 iterations 77
Cbc0038I Pass  73: suminf.   10.53198 (60) obj. 345.6 iterations 54
Cbc0038I Pass  74: suminf.    9.18889 (59) obj. 345.6 iterations 122
Cbc0038I Pass  75: suminf.    8.55784 (59) obj. 345.6 iterations 26
Cbc0038I Pass  76: suminf.    8.52806 (58) obj. 345.6 iterations 26
Cbc0038I Pass  77: suminf.    9.31947 (57) obj. 345.6 iterations 74
Cbc0038I Pass  78: suminf.    9.06106 (56) obj. 345.6 iterations 10
Cbc0038I Pass  79: suminf.    9.95854 (57) obj. 345.6 iterations 124
Cbc0038I Pass  80: suminf.    7.99095 (55) obj. 345.6 iterations 45
Cbc0038I Pass  81: suminf.   10.34450 (55) obj. 345.6 iterations 115
Cbc0038I Pass  82: suminf.    7.82013 (55) obj. 345.6 iterations 62
Cbc0038I Pass  83: suminf.   10.44767 (58) obj. 345.6 iterations 83
Cbc0038I Pass  84: suminf.    7.32591 (51) obj. 345.6 iterations 64
Cbc0038I Pass  85: suminf.    7.06528 (48) obj. 345.6 iterations 19
Cbc0038I Pass  86: suminf.    8.54815 (54) obj. 345.6 iterations 48
Cbc0038I Pass  87: suminf.    7.67131 (56) obj. 345.6 iterations 17
Cbc0038I Pass  88: suminf.    9.93544 (39) obj. 345.6 iterations 115
Cbc0038I Pass  89: suminf.    7.04632 (54) obj. 345.6 iterations 92
Cbc0038I Pass  90: suminf.    7.41210 (55) obj. 345.6 iterations 34
Cbc0038I Pass  91: suminf.    9.19672 (57) obj. 345.6 iterations 90
Cbc0038I Pass  92: suminf.    9.00859 (56) obj. 345.6 iterations 37
Cbc0038I Pass  93: suminf.    8.93560 (49) obj. 345.6 iterations 17
Cbc0038I Pass  94: suminf.   11.61174 (56) obj. 345.6 iterations 105
Cbc0038I Pass  95: suminf.   10.28937 (60) obj. 345.6 iterations 35
Cbc0038I Pass  96: suminf.    9.54837 (68) obj. 345.6 iterations 57
Cbc0038I Pass  97: suminf.    7.55712 (54) obj. 345.6 iterations 93
Cbc0038I Pass  98: suminf.    7.26755 (55) obj. 345.6 iterations 5
Cbc0038I Pass  99: suminf.    7.01229 (57) obj. 345.6 iterations 16
Cbc0038I Pass 100: suminf.    9.19198 (53) obj. 345.6 iterations 57
Cbc0038I Pass 101: suminf.    8.05400 (52) obj. 345.6 iterations 54
Cbc0038I Pass 102: suminf.   15.27650 (64) obj. 345.6 iterations 126
Cbc0038I Pass 103: suminf.   11.54443 (72) obj. 345.6 iterations 151
Cbc0038I Pass 104: suminf.   10.58024 (71) obj. 345.6 iterations 60
Cbc0038I Pass 105: suminf.   10.58024 (71) obj. 345.6 iterations 14
Cbc0038I Pass 106: suminf.    7.87104 (58) obj. 345.6 iterations 63
Cbc0038I Pass 107: suminf.    8.14100 (56) obj. 345.6 iterations 24
Cbc0038I Pass 108: suminf.    9.72543 (60) obj. 345.6 iterations 207
Cbc0038I Pass 109: suminf.    8.47691 (58) obj. 345.6 iterations 43
Cbc0038I Pass 110: suminf.   11.25884 (56) obj. 345.6 iterations 91
Cbc0038I Pass 111: suminf.   10.21464 (62) obj. 345.6 iterations 66
Cbc0038I Pass 112: suminf.   10.78351 (53) obj. 345.6 iterations 90
Cbc0038I Pass 113: suminf.    7.89731 (53) obj. 345.6 iterations 56
Cbc0038I Pass 114: suminf.    8.97699 (57) obj. 345.6 iterations 59
Cbc0038I Pass 115: suminf.    6.66620 (53) obj. 345.6 iterations 20
Cbc0038I Pass 116: suminf.    6.74298 (54) obj. 345.6 iterations 7
Cbc0038I Pass 117: suminf.    6.74298 (54) obj. 345.6 iterations 4
Cbc0038I Pass 118: suminf.   10.58440 (42) obj. 345.6 iterations 63
Cbc0038I Pass 119: suminf.    9.69481 (44) obj. 345.6 iterations 60
Cbc0038I Pass 120: suminf.    7.89831 (54) obj. 345.6 iterations 51
Cbc0038I Pass 121: suminf.    7.21222 (47) obj. 345.6 iterations 43
Cbc0038I Pass 122: suminf.   10.31669 (57) obj. 345.6 iterations 91
Cbc0038I Pass 123: suminf.    8.58561 (57) obj. 345.6 iterations 33
Cbc0038I Pass 124: suminf.   12.47479 (60) obj. 345.6 iterations 97
Cbc0038I Pass 125: suminf.   10.81894 (59) obj. 345.6 iterations 62
Cbc0038I Pass 126: suminf.   10.73671 (64) obj. 345.6 iterations 73
Cbc0038I Pass 127: suminf.    8.52134 (56) obj. 345.6 iterations 117
Cbc0038I Pass 128: suminf.    8.51846 (58) obj. 345.6 iterations 14
Cbc0038I Pass 129: suminf.   13.10416 (62) obj. 345.6 iterations 69
Cbc0038I Pass 130: suminf.   10.48423 (69) obj. 345.6 iterations 45
Cbc0038I Pass 131: suminf.    9.85868 (75) obj. 345.6 iterations 21
Cbc0038I Pass 132: suminf.    8.03328 (58) obj. 345.6 iterations 51
Cbc0038I Pass 133: suminf.    8.06994 (61) obj. 345.6 iterations 36
Cbc0038I Pass 134: suminf.   13.44931 (50) obj. 345.6 iterations 63
Cbc0038I Pass 135: suminf.   10.04117 (50) obj. 345.6 iterations 183
Cbc0038I Pass 136: suminf.    7.00727 (49) obj. 345.6 iterations 15
Cbc0038I Pass 137: suminf.   11.14555 (64) obj. 345.6 iterations 68
Cbc0038I Pass 138: suminf.    9.38901 (62) obj. 345.6 iterations 61
Cbc0038I Pass 139: suminf.   12.35509 (62) obj. 345.6 iterations 68
Cbc0038I Pass 140: suminf.    9.78005 (63) obj. 345.6 iterations 64
Cbc0038I Pass 141: suminf.    9.35956 (62) obj. 345.6 iterations 37
Cbc0038I Pass 142: suminf.   11.26932 (57) obj. 345.6 iterations 82
Cbc0038I Pass 143: suminf.    9.49616 (57) obj. 345.6 iterations 27
Cbc0038I Pass 144: suminf.   31.68167 (143) obj. 345.6 iterations 325
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1394 rows 493 columns, reduced to 1060 rows 343 columns - 42 fixed gives 802, 244 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.02 seconds)
Cbc0038I After 1.02 seconds - Feasibility pump exiting with objective of 361 - took 0.88 seconds
Cbc0012I Integer solution of 361 found by feasibility pump after 0 iterations and 0 nodes (1.02 seconds)
Cbc0038I Full problem 1394 rows 493 columns, reduced to 872 rows 258 columns - 39 fixed gives 627, 177 - ok now
Cbc0031I 13 added rows had average density of 4.9230769
Cbc0013I At root node, 110 cuts changed objective from 311.99906 to 363 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 1.9 elements, 4 column cuts (4 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 71 row cuts average 178.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0001I Search completed - best objective 361, took 1162 iterations and 0 nodes (1.27 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 311.999 to 363
Probing was tried 1 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 1 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Knapsack was tried 1 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 71 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                361.00000000
Enumerated nodes:               0
Total iterations:               1162
Time (CPU seconds):             1.29
Time (Wallclock seconds):       1.31

Total time (CPU seconds):       1.29   (Wallclock seconds):       1.32

