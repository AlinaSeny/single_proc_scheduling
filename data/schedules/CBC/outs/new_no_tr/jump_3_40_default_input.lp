Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_40_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_40_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 30997.7 - 2.41 seconds
Cgl0002I 151 variables fixed
Cgl0003I 0 fixed, 24 tightened bounds, 868 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 79 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 5456 rows, 1649 columns (1649 integer (1608 of which binary)) and 18656 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1649 objects (1649 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 912 integers unsatisfied sum - 317.219
Cbc0038I Pass   1: (6.22 seconds) suminf.  164.52336 (920) obj. 52734.7 iterations 3859
Cbc0038I Pass   2: (6.65 seconds) suminf.  108.55682 (779) obj. 61636 iterations 1462
Cbc0038I Pass   3: (6.92 seconds) suminf.   88.04698 (794) obj. 63019.2 iterations 930
Cbc0038I Pass   4: (7.20 seconds) suminf.   82.42811 (744) obj. 65348.6 iterations 965
Cbc0038I Pass   5: (7.41 seconds) suminf.   78.19458 (758) obj. 67465.8 iterations 798
Cbc0038I Pass   6: (7.60 seconds) suminf.   67.71651 (666) obj. 72854.9 iterations 702
Cbc0038I Pass   7: (7.78 seconds) suminf.   64.30350 (715) obj. 72259.5 iterations 696
Cbc0038I Pass   8: (7.88 seconds) suminf.   61.49795 (689) obj. 72246.2 iterations 343
Cbc0038I Pass   9: (7.97 seconds) suminf.   59.96109 (728) obj. 72246 iterations 239
Cbc0038I Pass  10: (7.98 seconds) suminf.   60.13990 (726) obj. 72235.2 iterations 39
Cbc0038I Pass  11: (8.23 seconds) suminf.   55.64907 (697) obj. 72099.1 iterations 1050
Cbc0038I Pass  12: (8.37 seconds) suminf.   55.71102 (684) obj. 71989.4 iterations 554
Cbc0038I Pass  13: (8.47 seconds) suminf.   52.61866 (678) obj. 71898.5 iterations 350
Cbc0038I Pass  14: (8.58 seconds) suminf.   52.39977 (660) obj. 72662.2 iterations 416
Cbc0038I Pass  15: (8.67 seconds) suminf.   51.95417 (675) obj. 71885.1 iterations 328
Cbc0038I Pass  16: (8.82 seconds) suminf.   52.68309 (689) obj. 72618.1 iterations 610
Cbc0038I Pass  17: (8.94 seconds) suminf.   52.51247 (672) obj. 71956.6 iterations 420
Cbc0038I Pass  18: (9.07 seconds) suminf.   53.89476 (687) obj. 72700.4 iterations 526
Cbc0038I Pass  19: (9.16 seconds) suminf.   51.88585 (660) obj. 72166.4 iterations 283
Cbc0038I Pass  20: (9.23 seconds) suminf.   52.08011 (670) obj. 71920.8 iterations 209
Cbc0038I Pass  21: (9.41 seconds) suminf.   56.12149 (700) obj. 72641.1 iterations 707
Cbc0038I Pass  22: (9.53 seconds) suminf.   50.84668 (661) obj. 72462.1 iterations 407
Cbc0038I Pass  23: (9.69 seconds) suminf.   48.71459 (686) obj. 72923.2 iterations 571
Cbc0038I Pass  24: (9.79 seconds) suminf.   47.38742 (706) obj. 72846.5 iterations 316
Cbc0038I Pass  25: (9.95 seconds) suminf.   47.88775 (698) obj. 73022.3 iterations 569
Cbc0038I Pass  26: (10.01 seconds) suminf.   46.62888 (696) obj. 73014.9 iterations 162
Cbc0038I Pass  27: (10.15 seconds) suminf.   44.14094 (670) obj. 72892.3 iterations 549
Cbc0038I Pass  28: (10.20 seconds) suminf.   44.02384 (696) obj. 72945.2 iterations 139
Cbc0038I Pass  29: (10.34 seconds) suminf.   42.81398 (659) obj. 72875.9 iterations 539
Cbc0038I Pass  30: (10.44 seconds) suminf.   42.46458 (670) obj. 72922.5 iterations 342
Cbc0038I Pass  31: (10.51 seconds) suminf.   42.08796 (679) obj. 72966.5 iterations 190
Cbc0038I Pass  32: (10.72 seconds) suminf.   47.45353 (676) obj. 72631.9 iterations 756
Cbc0038I Pass  33: (10.82 seconds) suminf.   44.11557 (693) obj. 72616 iterations 281
Cbc0038I Pass  34: (10.90 seconds) suminf.   44.84820 (698) obj. 72633.2 iterations 211
Cbc0038I Pass  35: (11.13 seconds) suminf.   46.54367 (661) obj. 71894 iterations 795
Cbc0038I Pass  36: (11.20 seconds) suminf.   44.00301 (671) obj. 72258.4 iterations 189
Cbc0038I Pass  37: (11.39 seconds) suminf.   44.31252 (646) obj. 72903.6 iterations 675
Cbc0038I Pass  38: (11.44 seconds) suminf.   44.80100 (635) obj. 72845.5 iterations 128
Cbc0038I Pass  39: (11.50 seconds) suminf.   45.34154 (640) obj. 73307.1 iterations 168
Cbc0038I Pass  40: (11.66 seconds) suminf.   42.99316 (627) obj. 72055.4 iterations 528
Cbc0038I Pass  41: (11.74 seconds) suminf.   41.84340 (645) obj. 71955 iterations 210
Cbc0038I Pass  42: (11.83 seconds) suminf.   41.18463 (625) obj. 72088.4 iterations 213
Cbc0038I Pass  43: (11.99 seconds) suminf.   43.78543 (632) obj. 72745.6 iterations 562
Cbc0038I Pass  44: (12.09 seconds) suminf.   41.86973 (633) obj. 71438.5 iterations 327
Cbc0038I Pass  45: (12.13 seconds) suminf.   41.30153 (640) obj. 71445.4 iterations 112
Cbc0038I Pass  46: (12.27 seconds) suminf.   45.01542 (631) obj. 71891 iterations 505
Cbc0038I Pass  47: (12.40 seconds) suminf.   42.51908 (609) obj. 72034.4 iterations 487
Cbc0038I Pass  48: (12.58 seconds) suminf.   43.91724 (620) obj. 73045.2 iterations 686
Cbc0038I Pass  49: (12.68 seconds) suminf.   42.35526 (628) obj. 72572.4 iterations 308
Cbc0038I Pass  50: (12.84 seconds) suminf.   44.25036 (596) obj. 72215.4 iterations 591
Cbc0038I Pass  51: (12.95 seconds) suminf.   41.03788 (599) obj. 72457.4 iterations 349
Cbc0038I Pass  52: (13.20 seconds) suminf.   42.87466 (600) obj. 72583.3 iterations 1045
Cbc0038I Pass  53: (13.29 seconds) suminf.   41.59891 (607) obj. 72676.7 iterations 255
Cbc0038I Pass  54: (13.53 seconds) suminf.   41.28412 (558) obj. 72454.2 iterations 965
Cbc0038I Pass  55: (13.61 seconds) suminf.   39.77683 (567) obj. 72395.5 iterations 233
Cbc0038I Pass  56: (13.67 seconds) suminf.   41.09115 (578) obj. 72509.1 iterations 190
Cbc0038I Pass  57: (13.85 seconds) suminf.   41.43071 (594) obj. 71755 iterations 695
Cbc0038I Pass  58: (14.01 seconds) suminf.   36.23665 (582) obj. 72490.1 iterations 644
Cbc0038I Pass  59: (14.26 seconds) suminf.   36.12346 (593) obj. 72075.3 iterations 968
Cbc0038I Pass  60: (14.35 seconds) suminf.   34.40497 (595) obj. 72065.4 iterations 275
Cbc0038I Pass  61: (14.59 seconds) suminf.   37.58700 (591) obj. 72369.3 iterations 961
Cbc0038I Pass  62: (14.71 seconds) suminf.   37.17635 (590) obj. 72439.5 iterations 367
Cbc0038I Pass  63: (14.89 seconds) suminf.   38.44081 (597) obj. 71644.4 iterations 665
Cbc0038I Pass  64: (15.05 seconds) suminf.   33.90080 (596) obj. 72349.6 iterations 557
Cbc0038I Pass  65: (15.06 seconds) suminf.   33.79644 (595) obj. 72349.2 iterations 3
Cbc0038I Pass  66: (15.34 seconds) suminf.   37.54176 (597) obj. 74901.3 iterations 1113
Cbc0038I Pass  67: (15.49 seconds) suminf.   37.36605 (602) obj. 74587.4 iterations 506
Cbc0038I Pass  68: (15.73 seconds) suminf.   40.28223 (596) obj. 74742.6 iterations 897
Cbc0038I Pass  69: (15.86 seconds) suminf.   38.20222 (593) obj. 74843.2 iterations 397
Cbc0038I Pass  70: (16.02 seconds) suminf.   39.23309 (586) obj. 74521.2 iterations 564
Cbc0038I Pass  71: (16.12 seconds) suminf.   39.45386 (605) obj. 74695.8 iterations 304
Cbc0038I Pass  72: (16.29 seconds) suminf.   42.57358 (576) obj. 74223.6 iterations 577
Cbc0038I Pass  73: (16.41 seconds) suminf.   38.60004 (571) obj. 74487 iterations 396
Cbc0038I Pass  74: (16.58 seconds) suminf.   41.87321 (585) obj. 75036.6 iterations 685
Cbc0038I Pass  75: (16.67 seconds) suminf.   39.89372 (568) obj. 74768.1 iterations 269
Cbc0038I Pass  76: (16.81 seconds) suminf.   40.17950 (562) obj. 74772 iterations 471
Cbc0038I Pass  77: (16.89 seconds) suminf.   39.53246 (561) obj. 75122.1 iterations 244
Cbc0038I Pass  78: (16.93 seconds) suminf.   39.02644 (558) obj. 74959.4 iterations 100
Cbc0038I Pass  79: (17.12 seconds) suminf.   41.75139 (550) obj. 75507.8 iterations 696
Cbc0038I Pass  80: (17.18 seconds) suminf.   41.62154 (551) obj. 75500.5 iterations 199
Cbc0038I Pass  81: (17.33 seconds) suminf.   43.24465 (521) obj. 75481.4 iterations 564
Cbc0038I Pass  82: (17.42 seconds) suminf.   40.63752 (514) obj. 75693.2 iterations 291
Cbc0038I Pass  83: (17.55 seconds) suminf.   37.92513 (516) obj. 75569 iterations 510
Cbc0038I Pass  84: (17.58 seconds) suminf.   37.05666 (511) obj. 75938.9 iterations 96
Cbc0038I Pass  85: (17.79 seconds) suminf.   41.78038 (514) obj. 81994.2 iterations 789
Cbc0038I Pass  86: (17.92 seconds) suminf.   36.30932 (507) obj. 83638.2 iterations 479
Cbc0038I Pass  87: (17.99 seconds) suminf.   34.60472 (507) obj. 83834 iterations 204
Cbc0038I Pass  88: (18.13 seconds) suminf.   36.87429 (474) obj. 82623.3 iterations 508
Cbc0038I Pass  89: (18.20 seconds) suminf.   36.06372 (479) obj. 82866.8 iterations 218
Cbc0038I Pass  90: (18.23 seconds) suminf.   36.58462 (483) obj. 83692.6 iterations 88
Cbc0038I Pass  91: (18.37 seconds) suminf.   39.24022 (477) obj. 82789.3 iterations 520
Cbc0038I Pass  92: (18.48 seconds) suminf.   36.52994 (487) obj. 83052.4 iterations 349
Cbc0038I Pass  93: (18.58 seconds) suminf.   34.72232 (461) obj. 83149.3 iterations 388
Cbc0038I Pass  94: (18.63 seconds) suminf.   33.01235 (475) obj. 82890.1 iterations 138
Cbc0038I Pass  95: (18.77 seconds) suminf.   33.51419 (460) obj. 84578.2 iterations 537
Cbc0038I Pass  96: (18.85 seconds) suminf.   32.75049 (465) obj. 85260.8 iterations 211
Cbc0038I Pass  97: (18.94 seconds) suminf.   34.13668 (452) obj. 83160.8 iterations 341
Cbc0038I Pass  98: (19.03 seconds) suminf.   32.87161 (457) obj. 82756 iterations 307
Cbc0038I Pass  99: (19.07 seconds) suminf.   32.69056 (471) obj. 82780.9 iterations 116
Cbc0038I Pass 100: (19.58 seconds) suminf.   90.42068 (619) obj. 89692 iterations 1985
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5456 rows 1649 columns, reduced to 5092 rows 1474 columns - too large
Cbc0038I Mini branch and bound did not improve solution (19.61 seconds)
Cbc0038I After 19.61 seconds - Feasibility pump exiting - took 14.59 seconds
Cbc0031I 64 added rows had average density of 30.734375
Cbc0013I At root node, 64 cuts changed objective from 31103.912 to 34152.876 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 138 row cuts average 339.1 elements, 0 column cuts (0 active)  in 0.980 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 346 row cuts average 56.2 elements, 0 column cuts (0 active)  in 0.427 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 200 row cuts average 32.9 elements, 0 column cuts (0 active)  in 0.879 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 34153 (59.65 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 36797.037 (302.12 seconds)
Cbc0010I After 200 nodes, 14 on tree, 1e+50 best solution, best possible 36797.037 (495.99 seconds)
Cbc0010I After 300 nodes, 57 on tree, 1e+50 best solution, best possible 36797.037 (704.59 seconds)
Cbc0010I After 400 nodes, 107 on tree, 1e+50 best solution, best possible 36797.037 (893.46 seconds)
Cbc0010I After 500 nodes, 157 on tree, 1e+50 best solution, best possible 36797.037 (1014.21 seconds)
Cbc0010I After 600 nodes, 208 on tree, 1e+50 best solution, best possible 36797.037 (1128.01 seconds)
Cbc0010I After 700 nodes, 257 on tree, 1e+50 best solution, best possible 36797.037 (1247.19 seconds)
Cbc0010I After 800 nodes, 307 on tree, 1e+50 best solution, best possible 36797.037 (1361.29 seconds)
Cbc0010I After 900 nodes, 357 on tree, 1e+50 best solution, best possible 36797.037 (1470.96 seconds)
Cbc0010I After 1000 nodes, 407 on tree, 1e+50 best solution, best possible 36797.037 (1577.64 seconds)
Cbc0010I After 1100 nodes, 421 on tree, 1e+50 best solution, best possible 38439.179 (1699.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 38439.179), took 3523516 iterations and 1198 nodes (1797.54 seconds)
Cbc0032I Strong branching done 9994 times (877062 iterations), fathomed 28 nodes and fixed 955 variables
Cbc0035I Maximum depth 475, 0 variables fixed on reduced cost
Cuts at root node changed objective from 31103.9 to 34153
Probing was tried 10 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.120 seconds)
Gomory was tried 279 times and created 1489 cuts of which 0 were active after adding rounds of cuts (4.389 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
TwoMirCuts was tried 279 times and created 4210 cuts of which 0 were active after adding rounds of cuts (1.861 seconds)
ZeroHalf was tried 279 times and created 2289 cuts of which 0 were active after adding rounds of cuts (20.732 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    38439.179
Enumerated nodes:               1198
Total iterations:               3523516
Time (CPU seconds):             1797.54
Time (Wallclock seconds):       1798.49

Total time (CPU seconds):       1797.56   (Wallclock seconds):       1798.52

