Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_3_35_default_input.lp sec 1800 solve solu solutions/new_no_tr/jump_3_35_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 26624 - 0.41 seconds
Cgl0002I 102 variables fixed
Cgl0003I 0 fixed, 13 tightened bounds, 575 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 73 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 3898 rows, 1245 columns (1245 integer (1209 of which binary)) and 13159 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1245 objects (1245 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 692 integers unsatisfied sum - 237.362
Cbc0038I Pass   1: (1.70 seconds) suminf.   96.71411 (500) obj. 43705.2 iterations 1943
Cbc0038I Pass   2: (1.83 seconds) suminf.   59.97613 (409) obj. 45663 iterations 771
Cbc0038I Pass   3: (1.90 seconds) suminf.   56.01348 (378) obj. 47070.5 iterations 340
Cbc0038I Pass   4: (1.90 seconds) suminf.   55.72275 (377) obj. 47120.8 iterations 4
Cbc0038I Pass   5: (1.92 seconds) suminf.   53.51394 (368) obj. 47156.6 iterations 81
Cbc0038I Pass   6: (1.99 seconds) suminf.   47.28177 (365) obj. 49158.8 iterations 363
Cbc0038I Pass   7: (2.02 seconds) suminf.   45.86850 (361) obj. 49212.7 iterations 166
Cbc0038I Pass   8: (2.11 seconds) suminf.   39.01139 (411) obj. 49140.9 iterations 475
Cbc0038I Pass   9: (2.15 seconds) suminf.   35.87944 (385) obj. 49451.8 iterations 190
Cbc0038I Pass  10: (2.18 seconds) suminf.   35.38860 (385) obj. 49382 iterations 90
Cbc0038I Pass  11: (2.19 seconds) suminf.   35.27013 (381) obj. 49227.6 iterations 58
Cbc0038I Pass  12: (2.24 seconds) suminf.   31.15922 (384) obj. 48884 iterations 249
Cbc0038I Pass  13: (2.33 seconds) suminf.   32.79765 (355) obj. 50981.4 iterations 481
Cbc0038I Pass  14: (2.35 seconds) suminf.   32.65652 (376) obj. 51208.6 iterations 83
Cbc0038I Pass  15: (2.37 seconds) suminf.   32.67766 (369) obj. 51397.9 iterations 98
Cbc0038I Pass  16: (2.39 seconds) suminf.   32.56364 (384) obj. 50748.3 iterations 96
Cbc0038I Pass  17: (2.46 seconds) suminf.   31.98543 (364) obj. 54292.3 iterations 408
Cbc0038I Pass  18: (2.51 seconds) suminf.   30.79317 (354) obj. 54187.6 iterations 188
Cbc0038I Pass  19: (2.57 seconds) suminf.   31.15966 (346) obj. 53521.4 iterations 380
Cbc0038I Pass  20: (2.61 seconds) suminf.   29.45362 (363) obj. 53240.2 iterations 192
Cbc0038I Pass  21: (2.70 seconds) suminf.   30.46695 (328) obj. 54050.4 iterations 591
Cbc0038I Pass  22: (2.73 seconds) suminf.   29.25840 (333) obj. 54223.6 iterations 141
Cbc0038I Pass  23: (2.78 seconds) suminf.   31.04742 (344) obj. 54460.8 iterations 284
Cbc0038I Pass  24: (2.79 seconds) suminf.   29.48988 (344) obj. 54072.3 iterations 20
Cbc0038I Pass  25: (2.81 seconds) suminf.   28.44273 (337) obj. 54345.9 iterations 105
Cbc0038I Pass  26: (2.86 seconds) suminf.   30.62155 (335) obj. 55000 iterations 328
Cbc0038I Pass  27: (2.90 seconds) suminf.   29.96298 (335) obj. 54887.8 iterations 203
Cbc0038I Pass  28: (2.92 seconds) suminf.   29.49024 (329) obj. 54445.7 iterations 77
Cbc0038I Pass  29: (2.98 seconds) suminf.   30.64473 (311) obj. 53904.2 iterations 326
Cbc0038I Pass  30: (3.03 seconds) suminf.   27.15884 (322) obj. 54690.9 iterations 286
Cbc0038I Pass  31: (3.07 seconds) suminf.   26.71968 (325) obj. 54732.8 iterations 244
Cbc0038I Pass  32: (3.10 seconds) suminf.   28.65655 (329) obj. 54559.5 iterations 100
Cbc0038I Pass  33: (3.17 seconds) suminf.   30.40314 (313) obj. 55500.8 iterations 485
Cbc0038I Pass  34: (3.21 seconds) suminf.   28.47328 (301) obj. 59143.9 iterations 195
Cbc0038I Pass  35: (3.26 seconds) suminf.   28.72920 (305) obj. 63238.2 iterations 246
Cbc0038I Pass  36: (3.30 seconds) suminf.   26.25140 (316) obj. 64027.9 iterations 179
Cbc0038I Pass  37: (3.34 seconds) suminf.   30.02798 (299) obj. 64459.8 iterations 245
Cbc0038I Pass  38: (3.40 seconds) suminf.   25.20434 (316) obj. 64127.4 iterations 357
Cbc0038I Pass  39: (3.47 seconds) suminf.   30.82399 (297) obj. 63113.6 iterations 359
Cbc0038I Pass  40: (3.52 seconds) suminf.   27.94523 (308) obj. 63476.2 iterations 279
Cbc0038I Pass  41: (3.55 seconds) suminf.   29.00359 (308) obj. 63527 iterations 153
Cbc0038I Pass  42: (3.59 seconds) suminf.   27.35156 (310) obj. 63874 iterations 269
Cbc0038I Pass  43: (3.65 seconds) suminf.   30.08679 (305) obj. 63230.9 iterations 298
Cbc0038I Pass  44: (3.88 seconds) suminf.  105.94277 (536) obj. 72813.2 iterations 1380
Cbc0038I Pass  45: (4.00 seconds) suminf.   74.94047 (498) obj. 74062.2 iterations 657
Cbc0038I Pass  46: (4.07 seconds) suminf.   70.44816 (497) obj. 73731.9 iterations 293
Cbc0038I Pass  47: (4.08 seconds) suminf.   69.96247 (499) obj. 73700 iterations 44
Cbc0038I Pass  48: (4.16 seconds) suminf.   62.03137 (462) obj. 75155.8 iterations 364
Cbc0038I Pass  49: (4.22 seconds) suminf.   55.79035 (427) obj. 75875.1 iterations 242
Cbc0038I Pass  50: (4.27 seconds) suminf.   52.88253 (405) obj. 75899.5 iterations 267
Cbc0038I Pass  51: (4.30 seconds) suminf.   50.37653 (418) obj. 76047.2 iterations 119
Cbc0038I Pass  52: (4.32 seconds) suminf.   49.91497 (416) obj. 75990.7 iterations 62
Cbc0038I Pass  53: (4.34 seconds) suminf.   49.67821 (427) obj. 75940.5 iterations 55
Cbc0038I Pass  54: (4.40 seconds) suminf.   43.57529 (399) obj. 70304.2 iterations 269
Cbc0038I Pass  55: (4.42 seconds) suminf.   44.02552 (408) obj. 70331.6 iterations 99
Cbc0038I Pass  56: (4.43 seconds) suminf.   43.18829 (409) obj. 70345.7 iterations 18
Cbc0038I Pass  57: (4.49 seconds) suminf.   40.61569 (385) obj. 70378.8 iterations 299
Cbc0038I Pass  58: (4.52 seconds) suminf.   39.24322 (381) obj. 70244.9 iterations 109
Cbc0038I Pass  59: (4.57 seconds) suminf.   37.16240 (366) obj. 70794.7 iterations 182
Cbc0038I Pass  60: (4.58 seconds) suminf.   39.43618 (374) obj. 70786.5 iterations 65
Cbc0038I Pass  61: (4.63 seconds) suminf.   34.99089 (349) obj. 73767.8 iterations 217
Cbc0038I Pass  62: (4.65 seconds) suminf.   33.25665 (348) obj. 74297.5 iterations 67
Cbc0038I Pass  63: (4.72 seconds) suminf.   30.00341 (328) obj. 72060.9 iterations 368
Cbc0038I Pass  64: (4.74 seconds) suminf.   28.63990 (325) obj. 71959.7 iterations 119
Cbc0038I Pass  65: (4.79 seconds) suminf.   28.40812 (321) obj. 70370.3 iterations 230
Cbc0038I Pass  66: (4.81 seconds) suminf.   28.04646 (323) obj. 70291.2 iterations 70
Cbc0038I Pass  67: (4.86 seconds) suminf.   30.92805 (322) obj. 69341.3 iterations 254
Cbc0038I Pass  68: (4.90 seconds) suminf.   27.90593 (312) obj. 71033.2 iterations 230
Cbc0038I Pass  69: (4.91 seconds) suminf.   28.18836 (313) obj. 71036.6 iterations 12
Cbc0038I Pass  70: (4.95 seconds) suminf.   29.94370 (320) obj. 72644.4 iterations 192
Cbc0038I Pass  71: (4.97 seconds) suminf.   28.24394 (340) obj. 72303.4 iterations 90
Cbc0038I Pass  72: (5.03 seconds) suminf.   32.00194 (323) obj. 66846.3 iterations 361
Cbc0038I Pass  73: (5.06 seconds) suminf.   29.35748 (330) obj. 66810.4 iterations 142
Cbc0038I Pass  74: (5.08 seconds) suminf.   29.69404 (335) obj. 66939.4 iterations 65
Cbc0038I Pass  75: (5.13 seconds) suminf.   29.28820 (319) obj. 66490.3 iterations 240
Cbc0038I Pass  76: (5.14 seconds) suminf.   28.43125 (327) obj. 66487 iterations 52
Cbc0038I Pass  77: (5.18 seconds) suminf.   33.71045 (300) obj. 66604.6 iterations 202
Cbc0038I Pass  78: (5.20 seconds) suminf.   31.52075 (298) obj. 66483.5 iterations 82
Cbc0038I Pass  79: (5.21 seconds) suminf.   31.12091 (299) obj. 67444.8 iterations 48
Cbc0038I Pass  80: (5.22 seconds) suminf.   29.96833 (302) obj. 67954.1 iterations 66
Cbc0038I Pass  81: (5.24 seconds) suminf.   29.85514 (298) obj. 67437.9 iterations 62
Cbc0038I Pass  82: (5.29 seconds) suminf.   29.36171 (289) obj. 66706.5 iterations 293
Cbc0038I Pass  83: (5.32 seconds) suminf.   28.16713 (292) obj. 66733.1 iterations 151
Cbc0038I Pass  84: (5.33 seconds) suminf.   27.93863 (291) obj. 66752.4 iterations 64
Cbc0038I Pass  85: (5.38 seconds) suminf.   27.56439 (250) obj. 66757.1 iterations 236
Cbc0038I Pass  86: (5.39 seconds) suminf.   25.96992 (247) obj. 66710 iterations 62
Cbc0038I Pass  87: (5.40 seconds) suminf.   25.96104 (246) obj. 66706 iterations 26
Cbc0038I Pass  88: (5.42 seconds) suminf.   25.69442 (254) obj. 66842.2 iterations 144
Cbc0038I Pass  89: (5.44 seconds) suminf.   25.99635 (243) obj. 66723.2 iterations 58
Cbc0038I Pass  90: (5.48 seconds) suminf.   26.52295 (242) obj. 66715.8 iterations 261
Cbc0038I Pass  91: (5.49 seconds) suminf.   24.92175 (248) obj. 66711.8 iterations 50
Cbc0038I Pass  92: (5.51 seconds) suminf.   24.45991 (250) obj. 66708.7 iterations 84
Cbc0038I Pass  93: (5.55 seconds) suminf.   25.83933 (252) obj. 66870.5 iterations 232
Cbc0038I Pass  94: (5.57 seconds) suminf.   24.73877 (233) obj. 66709.3 iterations 128
Cbc0038I Pass  95: (5.63 seconds) suminf.   24.73668 (261) obj. 67041.3 iterations 347
Cbc0038I Pass  96: (5.66 seconds) suminf.   22.93575 (244) obj. 67258.1 iterations 140
Cbc0038I Pass  97: (5.70 seconds) suminf.   24.72273 (218) obj. 67101.9 iterations 226
Cbc0038I Pass  98: (5.71 seconds) suminf.   23.79523 (240) obj. 67253.4 iterations 95
Cbc0038I Pass  99: (5.75 seconds) suminf.   23.15168 (276) obj. 67085.6 iterations 203
Cbc0038I Pass 100: (5.99 seconds) suminf.  100.98995 (552) obj. 79302.7 iterations 1397
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3898 rows 1245 columns, reduced to 3564 rows 1093 columns - too large
Cbc0038I Mini branch and bound did not improve solution (6.11 seconds)
Cbc0038I After 6.11 seconds - Feasibility pump exiting - took 4.80 seconds
Cbc0031I 102 added rows had average density of 20.107843
Cbc0013I At root node, 102 cuts changed objective from 26624 to 35585.999 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 244 row cuts average 3.4 elements, 10 column cuts (10 active)  in 0.374 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 64.1 elements, 0 column cuts (0 active)  in 2.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 1440 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.312 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 35586 (55.59 seconds)
Cbc0010I After 100 nodes, 22 on tree, 1e+50 best solution, best possible 35587 (186.36 seconds)
Cbc0010I After 200 nodes, 17 on tree, 1e+50 best solution, best possible 35587 (308.34 seconds)
Cbc0010I After 300 nodes, 8 on tree, 1e+50 best solution, best possible 35587 (420.83 seconds)
Cbc0010I After 400 nodes, 8 on tree, 1e+50 best solution, best possible 35589 (518.96 seconds)
Cbc0010I After 500 nodes, 12 on tree, 1e+50 best solution, best possible 35596 (604.85 seconds)
Cbc0010I After 600 nodes, 25 on tree, 1e+50 best solution, best possible 35596 (669.09 seconds)
Cbc0010I After 700 nodes, 33 on tree, 1e+50 best solution, best possible 35596 (739.06 seconds)
Cbc0010I After 800 nodes, 27 on tree, 1e+50 best solution, best possible 35596 (801.05 seconds)
Cbc0010I After 900 nodes, 43 on tree, 1e+50 best solution, best possible 35596 (866.83 seconds)
Cbc0010I After 1000 nodes, 40 on tree, 1e+50 best solution, best possible 35596 (929.22 seconds)
Cbc0010I After 1100 nodes, 21 on tree, 1e+50 best solution, best possible 35596 (983.94 seconds)
Cbc0010I After 1200 nodes, 5 on tree, 1e+50 best solution, best possible 35596 (1051.77 seconds)
Cbc0010I After 1300 nodes, 12 on tree, 1e+50 best solution, best possible 35597 (1117.73 seconds)
Cbc0010I After 1400 nodes, 14 on tree, 1e+50 best solution, best possible 35597 (1178.97 seconds)
Cbc0010I After 1500 nodes, 9 on tree, 1e+50 best solution, best possible 35597 (1278.54 seconds)
Cbc0010I After 1600 nodes, 17 on tree, 1e+50 best solution, best possible 35597 (1347.31 seconds)
Cbc0010I After 1700 nodes, 19 on tree, 1e+50 best solution, best possible 35597 (1418.71 seconds)
Cbc0010I After 1800 nodes, 22 on tree, 1e+50 best solution, best possible 35597 (1476.66 seconds)
Cbc0010I After 1900 nodes, 17 on tree, 1e+50 best solution, best possible 35597 (1539.84 seconds)
Cbc0010I After 2000 nodes, 16 on tree, 1e+50 best solution, best possible 35597 (1594.23 seconds)
Cbc0010I After 2100 nodes, 6 on tree, 1e+50 best solution, best possible 35597 (1639.88 seconds)
Cbc0010I After 2200 nodes, 12 on tree, 1e+50 best solution, best possible 35597 (1676.20 seconds)
Cbc0010I After 2300 nodes, 15 on tree, 1e+50 best solution, best possible 35597 (1750.21 seconds)
Cbc0010I After 2400 nodes, 11 on tree, 1e+50 best solution, best possible 35597 (1797.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 35597), took 4042600 iterations and 2406 nodes (1800.44 seconds)
Cbc0032I Strong branching done 20066 times (1774616 iterations), fathomed 73 nodes and fixed 1570 variables
Cbc0035I Maximum depth 48, 0 variables fixed on reduced cost
Cuts at root node changed objective from 26624 to 35586
Probing was tried 1973 times and created 91216 cuts of which 0 were active after adding rounds of cuts (16.880 seconds)
Gomory was tried 1579 times and created 2367 cuts of which 0 were active after adding rounds of cuts (14.676 seconds)
Knapsack was tried 48 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.070 seconds)
Clique was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
MixedIntegerRounding2 was tried 48 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
FlowCover was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
TwoMirCuts was tried 1579 times and created 17256 cuts of which 0 were active after adding rounds of cuts (4.471 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
ImplicationCuts was tried 92 times and created 140 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    35597.000
Enumerated nodes:               2406
Total iterations:               4042600
Time (CPU seconds):             1800.45
Time (Wallclock seconds):       1818.77

Total time (CPU seconds):       1800.46   (Wallclock seconds):       1818.79

