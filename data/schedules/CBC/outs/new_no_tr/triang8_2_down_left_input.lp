Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_2_down_left_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_2_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 290.555 - 0.56 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 19 tightened bounds, 1062 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 19 tightened bounds, 485 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 207 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 14 tightened bounds, 87 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16336 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 765 integers unsatisfied sum - 250.34
Cbc0038I Pass   1: (2.18 seconds) suminf.  125.06530 (841) obj. 411.851 iterations 1863
Cbc0038I Pass   2: (2.32 seconds) suminf.  105.11551 (915) obj. 460.439 iterations 740
Cbc0038I Pass   3: (2.41 seconds) suminf.   96.70170 (934) obj. 479.624 iterations 456
Cbc0038I Pass   4: (2.46 seconds) suminf.   95.39770 (954) obj. 481.103 iterations 179
Cbc0038I Pass   5: (2.53 seconds) suminf.   83.14950 (952) obj. 521.196 iterations 350
Cbc0038I Pass   6: (2.55 seconds) suminf.   82.56430 (958) obj. 525.628 iterations 80
Cbc0038I Pass   7: (2.64 seconds) suminf.   79.52728 (973) obj. 525.628 iterations 401
Cbc0038I Pass   8: (2.67 seconds) suminf.   79.07790 (961) obj. 525.628 iterations 123
Cbc0038I Pass   9: (2.74 seconds) suminf.   80.46680 (1001) obj. 525.628 iterations 325
Cbc0038I Pass  10: (2.79 seconds) suminf.   79.32581 (1002) obj. 525.628 iterations 205
Cbc0038I Pass  11: (2.82 seconds) suminf.   78.54943 (1007) obj. 525.628 iterations 105
Cbc0038I Pass  12: (2.84 seconds) suminf.   77.54868 (1002) obj. 525.628 iterations 103
Cbc0038I Pass  13: (2.91 seconds) suminf.   79.51179 (998) obj. 525.628 iterations 364
Cbc0038I Pass  14: (2.92 seconds) suminf.   79.36905 (992) obj. 525.628 iterations 45
Cbc0038I Pass  15: (2.95 seconds) suminf.   78.44975 (987) obj. 525.628 iterations 149
Cbc0038I Pass  16: (3.01 seconds) suminf.   79.71088 (1016) obj. 525.628 iterations 300
Cbc0038I Pass  17: (3.07 seconds) suminf.   78.08581 (1008) obj. 531.148 iterations 204
Cbc0038I Pass  18: (3.15 seconds) suminf.   79.38301 (1030) obj. 525.628 iterations 431
Cbc0038I Pass  19: (3.18 seconds) suminf.   78.69106 (1025) obj. 525.628 iterations 132
Cbc0038I Pass  20: (3.26 seconds) suminf.   80.38928 (976) obj. 525.628 iterations 385
Cbc0038I Pass  21: (3.32 seconds) suminf.   78.28009 (1006) obj. 525.628 iterations 242
Cbc0038I Pass  22: (3.34 seconds) suminf.   77.89637 (1009) obj. 525.628 iterations 99
Cbc0038I Pass  23: (3.43 seconds) suminf.   80.51984 (1010) obj. 525.628 iterations 430
Cbc0038I Pass  24: (3.49 seconds) suminf.   78.41441 (1010) obj. 525.628 iterations 223
Cbc0038I Pass  25: (3.50 seconds) suminf.   78.15034 (1009) obj. 525.628 iterations 46
Cbc0038I Pass  26: (3.58 seconds) suminf.   79.05098 (981) obj. 525.628 iterations 343
Cbc0038I Pass  27: (3.63 seconds) suminf.   77.53961 (988) obj. 525.628 iterations 211
Cbc0038I Pass  28: (3.70 seconds) suminf.   80.60072 (976) obj. 525.628 iterations 346
Cbc0038I Pass  29: (3.75 seconds) suminf.   77.54491 (989) obj. 525.628 iterations 247
Cbc0038I Pass  30: (3.82 seconds) suminf.   80.19597 (1010) obj. 525.628 iterations 326
Cbc0038I Pass  31: (3.88 seconds) suminf.   77.53906 (997) obj. 525.628 iterations 252
Cbc0038I Pass  32: (3.92 seconds) suminf.   77.07649 (1023) obj. 525.628 iterations 149
Cbc0038I Pass  33: (3.98 seconds) suminf.   78.43481 (968) obj. 525.628 iterations 253
Cbc0038I Pass  34: (4.00 seconds) suminf.   77.40743 (978) obj. 525.628 iterations 110
Cbc0038I Pass  35: (4.04 seconds) suminf.   77.48037 (999) obj. 525.628 iterations 185
Cbc0038I Pass  36: (4.07 seconds) suminf.   76.67028 (997) obj. 525.628 iterations 118
Cbc0038I Pass  37: (4.12 seconds) suminf.   77.38914 (993) obj. 525.628 iterations 244
Cbc0038I Pass  38: (4.17 seconds) suminf.   76.56735 (991) obj. 525.628 iterations 162
Cbc0038I Pass  39: (4.22 seconds) suminf.   77.03779 (1015) obj. 525.628 iterations 198
Cbc0038I Pass  40: (4.23 seconds) suminf.   76.93390 (1007) obj. 525.628 iterations 47
Cbc0038I Pass  41: (4.29 seconds) suminf.   77.43976 (996) obj. 525.628 iterations 261
Cbc0038I Pass  42: (4.48 seconds) suminf.  105.94665 (893) obj. 587.931 iterations 1143
Cbc0038I Pass  43: (4.61 seconds) suminf.   80.08429 (957) obj. 579.315 iterations 796
Cbc0038I Pass  44: (4.64 seconds) suminf.   78.85239 (960) obj. 580.621 iterations 169
Cbc0038I Pass  45: (4.72 seconds) suminf.   80.04656 (908) obj. 576.725 iterations 443
Cbc0038I Pass  46: (4.78 seconds) suminf.   78.72262 (925) obj. 565.68 iterations 225
Cbc0038I Pass  47: (4.85 seconds) suminf.   77.45235 (933) obj. 568.195 iterations 358
Cbc0038I Pass  48: (4.88 seconds) suminf.   76.10992 (918) obj. 565.676 iterations 143
Cbc0038I Pass  49: (4.94 seconds) suminf.   77.06792 (930) obj. 567.711 iterations 253
Cbc0038I Pass  50: (4.98 seconds) suminf.   76.26575 (920) obj. 581.835 iterations 156
Cbc0038I Pass  51: (5.04 seconds) suminf.   77.93228 (943) obj. 582.527 iterations 309
Cbc0038I Pass  52: (5.07 seconds) suminf.   77.15048 (950) obj. 582.516 iterations 132
Cbc0038I Pass  53: (5.10 seconds) suminf.   76.43754 (944) obj. 581.846 iterations 154
Cbc0038I Pass  54: (5.12 seconds) suminf.   76.11188 (942) obj. 581.845 iterations 73
Cbc0038I Pass  55: (5.19 seconds) suminf.   78.47693 (920) obj. 580.517 iterations 358
Cbc0038I Pass  56: (5.25 seconds) suminf.   76.32818 (902) obj. 581.846 iterations 244
Cbc0038I Pass  57: (5.27 seconds) suminf.   75.98813 (910) obj. 581.846 iterations 97
Cbc0038I Pass  58: (5.29 seconds) suminf.   75.75796 (905) obj. 581.846 iterations 78
Cbc0038I Pass  59: (5.36 seconds) suminf.   77.56692 (919) obj. 582.588 iterations 338
Cbc0038I Pass  60: (5.38 seconds) suminf.   76.90168 (915) obj. 581.907 iterations 104
Cbc0038I Pass  61: (5.40 seconds) suminf.   76.77789 (916) obj. 581.907 iterations 131
Cbc0038I Pass  62: (5.47 seconds) suminf.   79.13130 (911) obj. 581.892 iterations 363
Cbc0038I Pass  63: (5.52 seconds) suminf.   77.60283 (914) obj. 581.757 iterations 193
Cbc0038I Pass  64: (5.54 seconds) suminf.   77.21705 (911) obj. 581.757 iterations 93
Cbc0038I Pass  65: (5.60 seconds) suminf.   77.70621 (920) obj. 582.527 iterations 306
Cbc0038I Pass  66: (5.63 seconds) suminf.   76.26739 (918) obj. 581.846 iterations 149
Cbc0038I Pass  67: (5.65 seconds) suminf.   76.01501 (919) obj. 581.835 iterations 78
Cbc0038I Pass  68: (5.71 seconds) suminf.   77.62221 (904) obj. 582.573 iterations 308
Cbc0038I Pass  69: (5.75 seconds) suminf.   76.25705 (897) obj. 581.833 iterations 158
Cbc0038I Pass  70: (5.78 seconds) suminf.   75.75796 (905) obj. 581.846 iterations 129
Cbc0038I Pass  71: (5.85 seconds) suminf.   77.41707 (936) obj. 582.071 iterations 331
Cbc0038I Pass  72: (5.87 seconds) suminf.   77.16312 (937) obj. 581.839 iterations 89
Cbc0038I Pass  73: (5.93 seconds) suminf.   76.46230 (907) obj. 581.903 iterations 321
Cbc0038I Pass  74: (6.12 seconds) suminf.  121.09493 (961) obj. 624.616 iterations 1147
Cbc0038I Pass  75: (6.27 seconds) suminf.   83.56913 (962) obj. 584.158 iterations 893
Cbc0038I Pass  76: (6.30 seconds) suminf.   80.99221 (959) obj. 584.261 iterations 178
Cbc0038I Pass  77: (6.32 seconds) suminf.   80.61236 (966) obj. 584.521 iterations 51
Cbc0038I Pass  78: (6.38 seconds) suminf.   77.41821 (947) obj. 586.711 iterations 393
Cbc0038I Pass  79: (6.40 seconds) suminf.   77.07035 (941) obj. 585.488 iterations 76
Cbc0038I Pass  80: (6.46 seconds) suminf.   77.69388 (909) obj. 582.829 iterations 319
Cbc0038I Pass  81: (6.50 seconds) suminf.   76.43984 (918) obj. 582.509 iterations 195
Cbc0038I Pass  82: (6.54 seconds) suminf.   77.53138 (903) obj. 587.861 iterations 252
Cbc0038I Pass  83: (6.59 seconds) suminf.   76.36339 (908) obj. 585.372 iterations 226
Cbc0038I Pass  84: (6.61 seconds) suminf.   75.86575 (903) obj. 586.055 iterations 75
Cbc0038I Pass  85: (6.68 seconds) suminf.   78.19707 (926) obj. 586.252 iterations 394
Cbc0038I Pass  86: (6.71 seconds) suminf.   77.59897 (958) obj. 587.263 iterations 135
Cbc0038I Pass  87: (6.78 seconds) suminf.   79.90809 (908) obj. 584.381 iterations 415
Cbc0038I Pass  88: (6.82 seconds) suminf.   77.24992 (918) obj. 585.484 iterations 215
Cbc0038I Pass  89: (6.85 seconds) suminf.   76.17425 (940) obj. 585.523 iterations 123
Cbc0038I Pass  90: (6.92 seconds) suminf.   76.62284 (936) obj. 585.336 iterations 352
Cbc0038I Pass  91: (6.94 seconds) suminf.   76.01575 (939) obj. 584.387 iterations 139
Cbc0038I Pass  92: (7.00 seconds) suminf.   76.66119 (940) obj. 587.132 iterations 336
Cbc0038I Pass  93: (7.02 seconds) suminf.   76.01037 (940) obj. 588.173 iterations 106
Cbc0038I Pass  94: (7.09 seconds) suminf.   78.25375 (932) obj. 585.341 iterations 343
Cbc0038I Pass  95: (7.12 seconds) suminf.   76.21498 (932) obj. 585.41 iterations 148
Cbc0038I Pass  96: (7.17 seconds) suminf.   76.73178 (955) obj. 585.379 iterations 280
Cbc0038I Pass  97: (7.22 seconds) suminf.   75.37828 (941) obj. 585.353 iterations 215
Cbc0038I Pass  98: (7.30 seconds) suminf.   78.65984 (923) obj. 585.359 iterations 403
Cbc0038I Pass  99: (7.32 seconds) suminf.   76.62007 (918) obj. 584.719 iterations 104
Cbc0038I Pass 100: (7.47 seconds) suminf.  100.22702 (946) obj. 582.494 iterations 1015
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 4493 rows 1496 columns - too large
Cbc0038I Mini branch and bound did not improve solution (7.50 seconds)
Cbc0038I After 7.50 seconds - Feasibility pump exiting - took 5.73 seconds
Cbc0031I 82 added rows had average density of 11.914634
Cbc0013I At root node, 82 cuts changed objective from 290.60929 to 311 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 4.2 elements, 3 column cuts (3 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 109 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.580 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 254 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 311 (15.03 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 317 (133.66 seconds)
Cbc0010I After 200 nodes, 59 on tree, 1e+50 best solution, best possible 317 (196.12 seconds)
Cbc0010I After 300 nodes, 109 on tree, 1e+50 best solution, best possible 317 (261.12 seconds)
Cbc0010I After 400 nodes, 159 on tree, 1e+50 best solution, best possible 317 (336.71 seconds)
Cbc0010I After 500 nodes, 209 on tree, 1e+50 best solution, best possible 317 (411.18 seconds)
Cbc0010I After 600 nodes, 259 on tree, 1e+50 best solution, best possible 317 (504.38 seconds)
Cbc0010I After 700 nodes, 309 on tree, 1e+50 best solution, best possible 317 (577.43 seconds)
Cbc0010I After 800 nodes, 359 on tree, 1e+50 best solution, best possible 317 (642.55 seconds)
Cbc0010I After 900 nodes, 409 on tree, 1e+50 best solution, best possible 317 (704.55 seconds)
Cbc0010I After 1000 nodes, 459 on tree, 1e+50 best solution, best possible 317 (770.08 seconds)
Cbc0010I After 1100 nodes, 491 on tree, 1e+50 best solution, best possible 319 (818.00 seconds)
Cbc0010I After 1200 nodes, 497 on tree, 1e+50 best solution, best possible 319 (836.69 seconds)
Cbc0010I After 1300 nodes, 493 on tree, 1e+50 best solution, best possible 319 (851.08 seconds)
Cbc0010I After 1400 nodes, 491 on tree, 1e+50 best solution, best possible 319 (863.72 seconds)
Cbc0010I After 1500 nodes, 494 on tree, 1e+50 best solution, best possible 319 (893.63 seconds)
Cbc0010I After 1600 nodes, 488 on tree, 1e+50 best solution, best possible 319 (920.24 seconds)
Cbc0010I After 1700 nodes, 493 on tree, 1e+50 best solution, best possible 319 (951.29 seconds)
Cbc0010I After 1800 nodes, 483 on tree, 1e+50 best solution, best possible 319 (980.67 seconds)
Cbc0010I After 1900 nodes, 490 on tree, 1e+50 best solution, best possible 319 (1014.69 seconds)
Cbc0010I After 2000 nodes, 488 on tree, 1e+50 best solution, best possible 319 (1045.58 seconds)
Cbc0010I After 2100 nodes, 492 on tree, 1e+50 best solution, best possible 319 (1070.82 seconds)
Cbc0010I After 2200 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1086.14 seconds)
Cbc0010I After 2300 nodes, 492 on tree, 1e+50 best solution, best possible 319 (1104.80 seconds)
Cbc0010I After 2400 nodes, 487 on tree, 1e+50 best solution, best possible 319 (1116.56 seconds)
Cbc0010I After 2500 nodes, 489 on tree, 1e+50 best solution, best possible 319 (1123.97 seconds)
Cbc0010I After 2600 nodes, 483 on tree, 1e+50 best solution, best possible 319 (1133.61 seconds)
Cbc0010I After 2700 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1154.26 seconds)
Cbc0010I After 2800 nodes, 487 on tree, 1e+50 best solution, best possible 319 (1167.37 seconds)
Cbc0010I After 2900 nodes, 500 on tree, 1e+50 best solution, best possible 319 (1179.27 seconds)
Cbc0010I After 3000 nodes, 489 on tree, 1e+50 best solution, best possible 319 (1187.17 seconds)
Cbc0010I After 3100 nodes, 488 on tree, 1e+50 best solution, best possible 319 (1198.85 seconds)
Cbc0010I After 3200 nodes, 487 on tree, 1e+50 best solution, best possible 319 (1209.35 seconds)
Cbc0010I After 3300 nodes, 483 on tree, 1e+50 best solution, best possible 319 (1220.57 seconds)
Cbc0010I After 3400 nodes, 498 on tree, 1e+50 best solution, best possible 319 (1232.03 seconds)
Cbc0010I After 3500 nodes, 495 on tree, 1e+50 best solution, best possible 319 (1240.28 seconds)
Cbc0010I After 3600 nodes, 497 on tree, 1e+50 best solution, best possible 319 (1248.90 seconds)
Cbc0010I After 3700 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1259.13 seconds)
Cbc0010I After 3800 nodes, 503 on tree, 1e+50 best solution, best possible 319 (1268.97 seconds)
Cbc0010I After 3900 nodes, 497 on tree, 1e+50 best solution, best possible 319 (1278.71 seconds)
Cbc0010I After 4000 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1290.16 seconds)
Cbc0010I After 4100 nodes, 498 on tree, 1e+50 best solution, best possible 319 (1302.81 seconds)
Cbc0010I After 4200 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1315.39 seconds)
Cbc0010I After 4300 nodes, 489 on tree, 1e+50 best solution, best possible 319 (1324.09 seconds)
Cbc0010I After 4400 nodes, 511 on tree, 1e+50 best solution, best possible 319 (1333.94 seconds)
Cbc0010I After 4500 nodes, 497 on tree, 1e+50 best solution, best possible 319 (1342.42 seconds)
Cbc0010I After 4600 nodes, 496 on tree, 1e+50 best solution, best possible 319 (1351.67 seconds)
Cbc0010I After 4700 nodes, 498 on tree, 1e+50 best solution, best possible 319 (1360.66 seconds)
Cbc0010I After 4800 nodes, 487 on tree, 1e+50 best solution, best possible 319 (1369.42 seconds)
Cbc0010I After 4900 nodes, 491 on tree, 1e+50 best solution, best possible 319 (1378.82 seconds)
Cbc0010I After 5000 nodes, 495 on tree, 1e+50 best solution, best possible 319 (1389.44 seconds)
Cbc0010I After 5100 nodes, 493 on tree, 1e+50 best solution, best possible 320 (1399.22 seconds)
Cbc0010I After 5200 nodes, 497 on tree, 1e+50 best solution, best possible 320 (1408.88 seconds)
Cbc0010I After 5300 nodes, 494 on tree, 1e+50 best solution, best possible 320 (1417.95 seconds)
Cbc0010I After 5400 nodes, 495 on tree, 1e+50 best solution, best possible 320 (1427.54 seconds)
Cbc0010I After 5500 nodes, 494 on tree, 1e+50 best solution, best possible 320 (1438.27 seconds)
Cbc0010I After 5600 nodes, 481 on tree, 1e+50 best solution, best possible 320 (1447.44 seconds)
Cbc0010I After 5700 nodes, 498 on tree, 1e+50 best solution, best possible 320 (1455.50 seconds)
Cbc0010I After 5800 nodes, 492 on tree, 1e+50 best solution, best possible 320 (1462.49 seconds)
Cbc0010I After 5900 nodes, 493 on tree, 1e+50 best solution, best possible 320 (1471.47 seconds)
Cbc0010I After 6000 nodes, 494 on tree, 1e+50 best solution, best possible 320 (1481.39 seconds)
Cbc0010I After 6100 nodes, 493 on tree, 1e+50 best solution, best possible 320 (1490.52 seconds)
Cbc0010I After 6200 nodes, 482 on tree, 1e+50 best solution, best possible 320 (1500.40 seconds)
Cbc0010I After 6300 nodes, 493 on tree, 1e+50 best solution, best possible 320 (1508.21 seconds)
Cbc0010I After 6400 nodes, 509 on tree, 1e+50 best solution, best possible 320 (1522.80 seconds)
Cbc0010I After 6500 nodes, 506 on tree, 1e+50 best solution, best possible 320 (1533.69 seconds)
Cbc0010I After 6600 nodes, 511 on tree, 1e+50 best solution, best possible 320 (1542.94 seconds)
Cbc0010I After 6700 nodes, 499 on tree, 1e+50 best solution, best possible 320 (1552.23 seconds)
Cbc0010I After 6800 nodes, 507 on tree, 1e+50 best solution, best possible 320 (1560.85 seconds)
Cbc0010I After 6900 nodes, 494 on tree, 1e+50 best solution, best possible 320 (1571.08 seconds)
Cbc0010I After 7000 nodes, 481 on tree, 1e+50 best solution, best possible 320 (1582.71 seconds)
Cbc0010I After 7100 nodes, 510 on tree, 1e+50 best solution, best possible 320 (1594.27 seconds)
Cbc0010I After 7200 nodes, 505 on tree, 1e+50 best solution, best possible 320 (1603.77 seconds)
Cbc0010I After 7300 nodes, 504 on tree, 1e+50 best solution, best possible 320 (1614.11 seconds)
Cbc0010I After 7400 nodes, 508 on tree, 1e+50 best solution, best possible 320 (1623.34 seconds)
Cbc0010I After 7500 nodes, 503 on tree, 1e+50 best solution, best possible 320 (1633.82 seconds)
Cbc0010I After 7600 nodes, 506 on tree, 1e+50 best solution, best possible 320 (1643.98 seconds)
Cbc0010I After 7700 nodes, 503 on tree, 1e+50 best solution, best possible 320 (1653.55 seconds)
Cbc0010I After 7800 nodes, 504 on tree, 1e+50 best solution, best possible 320 (1662.92 seconds)
Cbc0010I After 7900 nodes, 501 on tree, 1e+50 best solution, best possible 320 (1676.08 seconds)
Cbc0010I After 8000 nodes, 504 on tree, 1e+50 best solution, best possible 320 (1682.61 seconds)
Cbc0010I After 8100 nodes, 495 on tree, 1e+50 best solution, best possible 320 (1693.97 seconds)
Cbc0010I After 8200 nodes, 500 on tree, 1e+50 best solution, best possible 320 (1703.68 seconds)
Cbc0010I After 8300 nodes, 502 on tree, 1e+50 best solution, best possible 320 (1712.72 seconds)
Cbc0010I After 8400 nodes, 499 on tree, 1e+50 best solution, best possible 320 (1720.32 seconds)
Cbc0010I After 8500 nodes, 491 on tree, 1e+50 best solution, best possible 320 (1730.53 seconds)
Cbc0010I After 8600 nodes, 508 on tree, 1e+50 best solution, best possible 320 (1740.06 seconds)
Cbc0010I After 8700 nodes, 507 on tree, 1e+50 best solution, best possible 320 (1745.77 seconds)
Cbc0010I After 8800 nodes, 501 on tree, 1e+50 best solution, best possible 320 (1752.46 seconds)
Cbc0010I After 8900 nodes, 496 on tree, 1e+50 best solution, best possible 320 (1763.14 seconds)
Cbc0010I After 9000 nodes, 488 on tree, 1e+50 best solution, best possible 320 (1776.62 seconds)
Cbc0010I After 9100 nodes, 492 on tree, 1e+50 best solution, best possible 321 (1793.74 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 321), took 4607463 iterations and 9147 nodes (1798.84 seconds)
Cbc0032I Strong branching done 37670 times (2534293 iterations), fathomed 582 nodes and fixed 7352 variables
Cbc0035I Maximum depth 530, 0 variables fixed on reduced cost
Cuts at root node changed objective from 290.609 to 311
Probing was tried 2002 times and created 345719 cuts of which 0 were active after adding rounds of cuts (9.960 seconds)
Gomory was tried 1223 times and created 5184 cuts of which 0 were active after adding rounds of cuts (8.115 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 1223 times and created 29497 cuts of which 0 were active after adding rounds of cuts (3.190 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    321.000
Enumerated nodes:               9147
Total iterations:               4607463
Time (CPU seconds):             1798.84
Time (Wallclock seconds):       1810.76

Total time (CPU seconds):       1798.86   (Wallclock seconds):       1810.78

