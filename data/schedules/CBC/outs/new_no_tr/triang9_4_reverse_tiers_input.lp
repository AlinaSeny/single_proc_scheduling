Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_4_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_4_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 272.1 - 2.41 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 23 tightened bounds, 1467 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 29 tightened bounds, 1233 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 26 tightened bounds, 701 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 514 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 349 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 11 tightened bounds, 314 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 200 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 117 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26334 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1076 integers unsatisfied sum - 242.857
Cbc0038I Pass   1: (8.01 seconds) suminf.  127.83357 (888) obj. 401.547 iterations 3937
Cbc0038I Pass   2: (8.36 seconds) suminf.  109.74617 (785) obj. 419.117 iterations 1330
Cbc0038I Pass   3: (8.51 seconds) suminf.  105.08029 (790) obj. 424.49 iterations 503
Cbc0038I Pass   4: (8.60 seconds) suminf.  101.28418 (774) obj. 454.092 iterations 301
Cbc0038I Pass   5: (8.77 seconds) suminf.   91.76596 (774) obj. 478.301 iterations 599
Cbc0038I Pass   6: (8.95 seconds) suminf.   89.64076 (757) obj. 486.211 iterations 663
Cbc0038I Pass   7: (9.05 seconds) suminf.   88.75630 (757) obj. 485.96 iterations 322
Cbc0038I Pass   8: (9.15 seconds) suminf.   86.55146 (758) obj. 478.209 iterations 367
Cbc0038I Pass   9: (9.29 seconds) suminf.   79.05070 (746) obj. 468.106 iterations 493
Cbc0038I Pass  10: (9.42 seconds) suminf.   78.17048 (730) obj. 475.483 iterations 392
Cbc0038I Pass  11: (9.52 seconds) suminf.   75.91353 (726) obj. 475.805 iterations 299
Cbc0038I Pass  12: (9.64 seconds) suminf.   74.48830 (711) obj. 484.521 iterations 408
Cbc0038I Pass  13: (9.73 seconds) suminf.   73.83806 (696) obj. 475.64 iterations 282
Cbc0038I Pass  14: (9.83 seconds) suminf.   68.92057 (739) obj. 475.584 iterations 306
Cbc0038I Pass  15: (10.08 seconds) suminf.   63.49254 (750) obj. 475.121 iterations 964
Cbc0038I Pass  16: (10.12 seconds) suminf.   64.00534 (741) obj. 475.045 iterations 88
Cbc0038I Pass  17: (10.33 seconds) suminf.   62.25083 (763) obj. 463.581 iterations 845
Cbc0038I Pass  18: (10.45 seconds) suminf.   63.17471 (768) obj. 463.666 iterations 384
Cbc0038I Pass  19: (10.67 seconds) suminf.   60.00413 (724) obj. 463.945 iterations 868
Cbc0038I Pass  20: (10.75 seconds) suminf.   60.09011 (727) obj. 464.787 iterations 259
Cbc0038I Pass  21: (10.97 seconds) suminf.   57.58841 (707) obj. 462.856 iterations 932
Cbc0038I Pass  22: (11.14 seconds) suminf.   55.15950 (733) obj. 462.766 iterations 628
Cbc0038I Pass  23: (11.33 seconds) suminf.   55.60873 (745) obj. 462.659 iterations 692
Cbc0038I Pass  24: (11.36 seconds) suminf.   55.10860 (730) obj. 462.659 iterations 91
Cbc0038I Pass  25: (11.64 seconds) suminf.   54.68401 (744) obj. 463.1 iterations 1075
Cbc0038I Pass  26: (11.78 seconds) suminf.   51.95675 (731) obj. 462.801 iterations 494
Cbc0038I Pass  27: (12.07 seconds) suminf.   59.19148 (717) obj. 458.035 iterations 1307
Cbc0038I Pass  28: (12.15 seconds) suminf.   59.11610 (713) obj. 466.041 iterations 304
Cbc0038I Pass  29: (12.28 seconds) suminf.   58.58043 (743) obj. 470.708 iterations 606
Cbc0038I Pass  30: (12.29 seconds) suminf.   58.40932 (743) obj. 470.708 iterations 10
Cbc0038I Pass  31: (12.46 seconds) suminf.   58.30870 (727) obj. 450.425 iterations 855
Cbc0038I Pass  32: (12.54 seconds) suminf.   57.00576 (729) obj. 464.981 iterations 301
Cbc0038I Pass  33: (12.56 seconds) suminf.   56.82356 (724) obj. 471.656 iterations 116
Cbc0038I Pass  34: (12.73 seconds) suminf.   59.25329 (703) obj. 448.057 iterations 839
Cbc0038I Pass  35: (12.82 seconds) suminf.   58.02589 (704) obj. 448.006 iterations 376
Cbc0038I Pass  36: (13.04 seconds) suminf.   55.99163 (744) obj. 448.857 iterations 1056
Cbc0038I Pass  37: (13.09 seconds) suminf.   55.81844 (741) obj. 455.741 iterations 186
Cbc0038I Pass  38: (13.30 seconds) suminf.   53.29318 (724) obj. 457.022 iterations 1036
Cbc0038I Pass  39: (13.43 seconds) suminf.   53.14435 (737) obj. 454.68 iterations 616
Cbc0038I Pass  40: (13.67 seconds) suminf.   56.70440 (723) obj. 464.451 iterations 1186
Cbc0038I Pass  41: (13.76 seconds) suminf.   54.22508 (739) obj. 463.962 iterations 379
Cbc0038I Pass  42: (13.97 seconds) suminf.   52.84287 (733) obj. 453.965 iterations 979
Cbc0038I Pass  43: (14.07 seconds) suminf.   50.83811 (720) obj. 454.021 iterations 417
Cbc0038I Pass  44: (14.24 seconds) suminf.   53.59801 (706) obj. 448.044 iterations 690
Cbc0038I Pass  45: (14.35 seconds) suminf.   50.63875 (701) obj. 453.992 iterations 382
Cbc0038I Pass  46: (14.36 seconds) suminf.   51.04919 (695) obj. 453.524 iterations 22
Cbc0038I Pass  47: (14.55 seconds) suminf.   54.02813 (692) obj. 453.117 iterations 842
Cbc0038I Pass  48: (14.60 seconds) suminf.   54.39275 (703) obj. 453.618 iterations 190
Cbc0038I Pass  49: (14.77 seconds) suminf.   53.54367 (722) obj. 453.588 iterations 768
Cbc0038I Pass  50: (14.84 seconds) suminf.   53.33296 (712) obj. 461.444 iterations 272
Cbc0038I Pass  51: (15.05 seconds) suminf.   52.56146 (726) obj. 448.641 iterations 973
Cbc0038I Pass  52: (15.11 seconds) suminf.   51.85569 (736) obj. 453.926 iterations 214
Cbc0038I Pass  53: (15.33 seconds) suminf.   51.70887 (691) obj. 450.847 iterations 1010
Cbc0038I Pass  54: (15.43 seconds) suminf.   51.22062 (713) obj. 461.972 iterations 455
Cbc0038I Pass  55: (15.63 seconds) suminf.   52.22716 (699) obj. 448.064 iterations 1007
Cbc0038I Pass  56: (15.77 seconds) suminf.   51.51647 (728) obj. 454.046 iterations 579
Cbc0038I Pass  57: (15.96 seconds) suminf.   53.09251 (705) obj. 458.605 iterations 849
Cbc0038I Pass  58: (16.04 seconds) suminf.   52.58521 (714) obj. 462.286 iterations 341
Cbc0038I Pass  59: (16.29 seconds) suminf.   54.07176 (722) obj. 516.543 iterations 1236
Cbc0038I Pass  60: (16.41 seconds) suminf.   53.43359 (725) obj. 519.265 iterations 505
Cbc0038I Pass  61: (16.66 seconds) suminf.   53.04932 (725) obj. 502.038 iterations 1226
Cbc0038I Pass  62: (16.78 seconds) suminf.   50.81472 (736) obj. 513.86 iterations 495
Cbc0038I Pass  63: (16.97 seconds) suminf.   54.70568 (750) obj. 504.342 iterations 816
Cbc0038I Pass  64: (17.05 seconds) suminf.   52.76083 (741) obj. 516.5 iterations 281
Cbc0038I Pass  65: (17.25 seconds) suminf.   55.03422 (718) obj. 475.453 iterations 973
Cbc0038I Pass  66: (17.36 seconds) suminf.   51.33065 (720) obj. 485.134 iterations 415
Cbc0038I Pass  67: (17.40 seconds) suminf.   51.33754 (718) obj. 485.709 iterations 114
Cbc0038I Pass  68: (17.60 seconds) suminf.   53.33968 (734) obj. 516.279 iterations 965
Cbc0038I Pass  69: (17.69 seconds) suminf.   53.43359 (725) obj. 519.265 iterations 354
Cbc0038I Pass  70: (17.94 seconds) suminf.   53.88648 (727) obj. 497.301 iterations 1159
Cbc0038I Pass  71: (18.05 seconds) suminf.   50.78341 (713) obj. 512.92 iterations 502
Cbc0038I Pass  72: (18.10 seconds) suminf.   50.42102 (723) obj. 519.065 iterations 177
Cbc0038I Pass  73: (18.34 seconds) suminf.   53.15196 (700) obj. 487.861 iterations 1045
Cbc0038I Pass  74: (18.38 seconds) suminf.   53.14491 (704) obj. 493.527 iterations 145
Cbc0038I Pass  75: (18.55 seconds) suminf.   52.18591 (716) obj. 484.291 iterations 728
Cbc0038I Pass  76: (18.59 seconds) suminf.   52.13490 (694) obj. 484.453 iterations 136
Cbc0038I Pass  77: (18.78 seconds) suminf.   49.33475 (676) obj. 463.456 iterations 875
Cbc0038I Pass  78: (18.91 seconds) suminf.   47.57870 (695) obj. 458.083 iterations 481
Cbc0038I Pass  79: (19.16 seconds) suminf.   45.55131 (689) obj. 462.878 iterations 1135
Cbc0038I Pass  80: (19.32 seconds) suminf.   45.22610 (696) obj. 467.826 iterations 659
Cbc0038I Pass  81: (19.56 seconds) suminf.   46.23369 (686) obj. 506.597 iterations 1092
Cbc0038I Pass  82: (19.63 seconds) suminf.   45.59503 (695) obj. 506.788 iterations 266
Cbc0038I Pass  83: (19.88 seconds) suminf.   47.77376 (676) obj. 504.016 iterations 1129
Cbc0038I Pass  84: (20.02 seconds) suminf.   44.40388 (669) obj. 511.138 iterations 644
Cbc0038I Pass  85: (20.32 seconds) suminf.   47.25640 (671) obj. 504.64 iterations 1386
Cbc0038I Pass  86: (20.48 seconds) suminf.   43.15388 (705) obj. 508.374 iterations 743
Cbc0038I Pass  87: (20.54 seconds) suminf.   42.09105 (700) obj. 506.357 iterations 204
Cbc0038I Pass  88: (20.67 seconds) suminf.   41.71659 (718) obj. 506.203 iterations 560
Cbc0038I Pass  89: (20.73 seconds) suminf.   41.32866 (713) obj. 502.95 iterations 233
Cbc0038I Pass  90: (20.97 seconds) suminf.   45.07458 (709) obj. 470.653 iterations 1025
Cbc0038I Pass  91: (21.09 seconds) suminf.   43.50396 (706) obj. 471.461 iterations 475
Cbc0038I Pass  92: (21.29 seconds) suminf.   43.91305 (708) obj. 477.386 iterations 865
Cbc0038I Pass  93: (21.41 seconds) suminf.   43.40254 (701) obj. 487.372 iterations 488
Cbc0038I Pass  94: (21.58 seconds) suminf.   45.12409 (742) obj. 506.701 iterations 767
Cbc0038I Pass  95: (21.69 seconds) suminf.   43.92867 (696) obj. 531.524 iterations 443
Cbc0038I Pass  96: (21.75 seconds) suminf.   43.34420 (692) obj. 531.306 iterations 198
Cbc0038I Pass  97: (21.94 seconds) suminf.   44.99849 (667) obj. 471.565 iterations 868
Cbc0038I Pass  98: (22.00 seconds) suminf.   45.13179 (658) obj. 470.708 iterations 220
Cbc0038I Pass  99: (22.04 seconds) suminf.   44.48977 (663) obj. 482.4 iterations 133
Cbc0038I Pass 100: (22.45 seconds) suminf.   77.16186 (668) obj. 462.974 iterations 1875
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 731 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 5524 rows 1767 columns - too large
Cbc0038I Mini branch and bound did not improve solution (23.75 seconds)
Cbc0038I After 23.75 seconds - Feasibility pump exiting - took 16.91 seconds
Cbc0031I 64 added rows had average density of 5.53125
Cbc0013I At root node, 64 cuts changed objective from 273.90698 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 57 row cuts average 3.9 elements, 3 column cuts (3 active)  in 0.226 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 245 row cuts average 34.8 elements, 0 column cuts (0 active)  in 0.921 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 479 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.518 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (40.42 seconds)
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 300 (125.59 seconds)
Cbc0010I After 200 nodes, 59 on tree, 1e+50 best solution, best possible 300 (184.46 seconds)
Cbc0010I After 300 nodes, 68 on tree, 1e+50 best solution, best possible 300 (283.63 seconds)
Cbc0010I After 400 nodes, 90 on tree, 1e+50 best solution, best possible 300 (355.47 seconds)
Cbc0010I After 500 nodes, 105 on tree, 1e+50 best solution, best possible 300 (422.88 seconds)
Cbc0010I After 600 nodes, 118 on tree, 1e+50 best solution, best possible 300 (522.26 seconds)
Cbc0010I After 700 nodes, 111 on tree, 1e+50 best solution, best possible 300 (628.34 seconds)
Cbc0010I After 800 nodes, 125 on tree, 1e+50 best solution, best possible 300 (698.86 seconds)
Cbc0010I After 900 nodes, 132 on tree, 1e+50 best solution, best possible 300 (794.58 seconds)
Cbc0010I After 1000 nodes, 146 on tree, 1e+50 best solution, best possible 300 (859.54 seconds)
Cbc0010I After 1100 nodes, 133 on tree, 1e+50 best solution, best possible 300 (917.30 seconds)
Cbc0010I After 1200 nodes, 117 on tree, 1e+50 best solution, best possible 300 (1024.84 seconds)
Cbc0010I After 1300 nodes, 107 on tree, 1e+50 best solution, best possible 300 (1149.24 seconds)
Cbc0010I After 1400 nodes, 84 on tree, 1e+50 best solution, best possible 300 (1246.10 seconds)
Cbc0010I After 1500 nodes, 72 on tree, 1e+50 best solution, best possible 300 (1313.78 seconds)
Cbc0010I After 1600 nodes, 61 on tree, 1e+50 best solution, best possible 300 (1394.34 seconds)
Cbc0010I After 1700 nodes, 50 on tree, 1e+50 best solution, best possible 300 (1486.30 seconds)
Cbc0010I After 1800 nodes, 58 on tree, 1e+50 best solution, best possible 300 (1600.36 seconds)
Cbc0010I After 1900 nodes, 51 on tree, 1e+50 best solution, best possible 300 (1722.60 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 300), took 3936234 iterations and 1994 nodes (1795.90 seconds)
Cbc0032I Strong branching done 20058 times (1605082 iterations), fathomed 248 nodes and fixed 2199 variables
Cbc0035I Maximum depth 65, 0 variables fixed on reduced cost
Cuts at root node changed objective from 273.907 to 300
Probing was tried 340 times and created 23545 cuts of which 0 were active after adding rounds of cuts (1.813 seconds)
Gomory was tried 281 times and created 376 cuts of which 0 were active after adding rounds of cuts (2.608 seconds)
Knapsack was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 281 times and created 4121 cuts of which 0 were active after adding rounds of cuts (1.176 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.097 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    300.000
Enumerated nodes:               1994
Total iterations:               3936234
Time (CPU seconds):             1795.90
Time (Wallclock seconds):       1797.05

Total time (CPU seconds):       1795.92   (Wallclock seconds):       1797.08

