Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang9_2_default_input.lp sec 1800 solve solu solutions/new_no_tr/triang9_2_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 297.162 - 3.12 seconds
Cgl0002I 201 variables fixed
Cgl0003I 0 fixed, 31 tightened bounds, 1758 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 20 tightened bounds, 890 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 22 tightened bounds, 293 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 18 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 24 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 6 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 2 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 7792 rows, 2629 columns (2629 integer (2583 of which binary)) and 26821 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2629 objects (2629 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1332 integers unsatisfied sum - 426.628
Cbc0038I Pass   1: (8.92 seconds) suminf.  187.64136 (954) obj. 525.689 iterations 5334
Cbc0038I Pass   2: (9.82 seconds) suminf.  127.53888 (733) obj. 568.316 iterations 2244
Cbc0038I Pass   3: (10.30 seconds) suminf.   94.95254 (686) obj. 595.986 iterations 1139
Cbc0038I Pass   4: (10.49 seconds) suminf.   90.48097 (685) obj. 596.613 iterations 396
Cbc0038I Pass   5: (10.63 seconds) suminf.   89.37348 (703) obj. 608.715 iterations 243
Cbc0038I Pass   6: (10.96 seconds) suminf.   82.69988 (651) obj. 621.877 iterations 833
Cbc0038I Pass   7: (11.12 seconds) suminf.   80.80014 (677) obj. 608.962 iterations 316
Cbc0038I Pass   8: (11.20 seconds) suminf.   80.24259 (675) obj. 613.82 iterations 151
Cbc0038I Pass   9: (11.45 seconds) suminf.   79.53728 (643) obj. 614.088 iterations 597
Cbc0038I Pass  10: (11.68 seconds) suminf.   78.55203 (606) obj. 613.105 iterations 549
Cbc0038I Pass  11: (11.83 seconds) suminf.   75.34111 (648) obj. 613.199 iterations 277
Cbc0038I Pass  12: (11.88 seconds) suminf.   75.27945 (626) obj. 615.433 iterations 95
Cbc0038I Pass  13: (12.14 seconds) suminf.   73.95765 (587) obj. 615.148 iterations 658
Cbc0038I Pass  14: (12.40 seconds) suminf.   68.59503 (574) obj. 614.214 iterations 624
Cbc0038I Pass  15: (12.52 seconds) suminf.   67.60803 (598) obj. 613.592 iterations 262
Cbc0038I Pass  16: (12.67 seconds) suminf.   68.51520 (543) obj. 613.906 iterations 315
Cbc0038I Pass  17: (12.81 seconds) suminf.   65.40697 (588) obj. 612.381 iterations 308
Cbc0038I Pass  18: (12.96 seconds) suminf.   65.32880 (557) obj. 612.57 iterations 319
Cbc0038I Pass  19: (13.04 seconds) suminf.   64.81071 (588) obj. 611.683 iterations 176
Cbc0038I Pass  20: (13.18 seconds) suminf.   65.39646 (558) obj. 615.781 iterations 267
Cbc0038I Pass  21: (13.31 seconds) suminf.   64.65615 (582) obj. 612.477 iterations 256
Cbc0038I Pass  22: (13.39 seconds) suminf.   63.74636 (595) obj. 613.011 iterations 170
Cbc0038I Pass  23: (13.53 seconds) suminf.   64.34697 (564) obj. 612.749 iterations 274
Cbc0038I Pass  24: (13.57 seconds) suminf.   64.36890 (563) obj. 613.248 iterations 75
Cbc0038I Pass  25: (13.67 seconds) suminf.   65.59278 (546) obj. 612.392 iterations 209
Cbc0038I Pass  26: (13.74 seconds) suminf.   63.55396 (550) obj. 612.519 iterations 149
Cbc0038I Pass  27: (13.79 seconds) suminf.   63.16948 (570) obj. 612.99 iterations 113
Cbc0038I Pass  28: (13.94 seconds) suminf.   64.41757 (526) obj. 612.482 iterations 316
Cbc0038I Pass  29: (14.09 seconds) suminf.   64.31922 (548) obj. 613.959 iterations 314
Cbc0038I Pass  30: (14.27 seconds) suminf.   65.16003 (530) obj. 638.381 iterations 440
Cbc0038I Pass  31: (14.40 seconds) suminf.   64.37660 (546) obj. 646.984 iterations 283
Cbc0038I Pass  32: (14.49 seconds) suminf.   63.33743 (545) obj. 646.069 iterations 208
Cbc0038I Pass  33: (14.65 seconds) suminf.   61.57565 (539) obj. 644.82 iterations 372
Cbc0038I Pass  34: (14.74 seconds) suminf.   63.12089 (565) obj. 644.158 iterations 207
Cbc0038I Pass  35: (14.84 seconds) suminf.   63.23731 (537) obj. 644.609 iterations 203
Cbc0038I Pass  36: (14.89 seconds) suminf.   62.69551 (540) obj. 644.584 iterations 106
Cbc0038I Pass  37: (15.04 seconds) suminf.   63.63180 (538) obj. 648.699 iterations 359
Cbc0038I Pass  38: (15.11 seconds) suminf.   62.99360 (543) obj. 648.99 iterations 152
Cbc0038I Pass  39: (15.14 seconds) suminf.   63.59510 (546) obj. 648.693 iterations 75
Cbc0038I Pass  40: (15.29 seconds) suminf.   63.73026 (531) obj. 662.166 iterations 347
Cbc0038I Pass  41: (15.36 seconds) suminf.   62.58178 (535) obj. 662.204 iterations 154
Cbc0038I Pass  42: (15.47 seconds) suminf.   62.57162 (532) obj. 661.151 iterations 227
Cbc0038I Pass  43: (15.56 seconds) suminf.   62.99453 (543) obj. 660.545 iterations 198
Cbc0038I Pass  44: (15.66 seconds) suminf.   62.21993 (539) obj. 661.009 iterations 226
Cbc0038I Pass  45: (15.82 seconds) suminf.   66.12930 (518) obj. 660.074 iterations 362
Cbc0038I Pass  46: (15.91 seconds) suminf.   65.16524 (518) obj. 659.731 iterations 214
Cbc0038I Pass  47: (16.08 seconds) suminf.   63.46872 (551) obj. 660.31 iterations 443
Cbc0038I Pass  48: (16.17 seconds) suminf.   63.05907 (537) obj. 661.181 iterations 184
Cbc0038I Pass  49: (16.22 seconds) suminf.   63.40650 (535) obj. 660.379 iterations 109
Cbc0038I Pass  50: (16.43 seconds) suminf.   62.54165 (500) obj. 675.1 iterations 587
Cbc0038I Pass  51: (16.58 seconds) suminf.   60.51466 (505) obj. 676.341 iterations 317
Cbc0038I Pass  52: (16.70 seconds) suminf.   61.56224 (505) obj. 662.841 iterations 233
Cbc0038I Pass  53: (16.81 seconds) suminf.   61.29636 (509) obj. 662.2 iterations 246
Cbc0038I Pass  54: (16.84 seconds) suminf.   61.19159 (516) obj. 661.97 iterations 67
Cbc0038I Pass  55: (17.03 seconds) suminf.   56.88216 (482) obj. 661.9 iterations 441
Cbc0038I Pass  56: (17.13 seconds) suminf.   56.04612 (488) obj. 662.012 iterations 237
Cbc0038I Pass  57: (17.36 seconds) suminf.   57.52475 (490) obj. 711.016 iterations 642
Cbc0038I Pass  58: (17.46 seconds) suminf.   56.44751 (491) obj. 722.447 iterations 209
Cbc0038I Pass  59: (17.88 seconds) suminf.   54.17300 (460) obj. 671.43 iterations 1179
Cbc0038I Pass  60: (17.99 seconds) suminf.   52.40125 (486) obj. 668.692 iterations 243
Cbc0038I Pass  61: (18.08 seconds) suminf.   50.78434 (460) obj. 665.317 iterations 214
Cbc0038I Pass  62: (18.54 seconds) suminf.   45.22656 (458) obj. 638.014 iterations 1309
Cbc0038I Pass  63: (18.56 seconds) suminf.   45.63907 (455) obj. 633.519 iterations 62
Cbc0038I Pass  64: (19.12 seconds) suminf.   43.18374 (453) obj. 590.578 iterations 1714
Cbc0038I Pass  65: (19.29 seconds) suminf.   42.30916 (492) obj. 592.793 iterations 429
Cbc0038I Pass  66: (19.59 seconds) suminf.   36.12234 (432) obj. 587.52 iterations 815
Cbc0038I Pass  67: (19.62 seconds) suminf.   35.72592 (477) obj. 588.212 iterations 63
Cbc0038I Pass  68: (20.04 seconds) suminf.   33.88305 (366) obj. 607.901 iterations 1045
Cbc0038I Pass  69: (20.09 seconds) suminf.   33.74967 (368) obj. 607.891 iterations 143
Cbc0038I Pass  70: (20.52 seconds) suminf.   35.02520 (337) obj. 574.202 iterations 1436
Cbc0038I Pass  71: (20.70 seconds) suminf.   32.35947 (354) obj. 574.807 iterations 523
Cbc0038I Pass  72: (21.02 seconds) suminf.   31.17695 (373) obj. 577.866 iterations 1053
Cbc0038I Pass  73: (21.19 seconds) suminf.   29.87507 (358) obj. 578.115 iterations 449
Cbc0038I Pass  74: (21.53 seconds) suminf.   26.22107 (288) obj. 574.647 iterations 1012
Cbc0038I Pass  75: (21.63 seconds) suminf.   23.15626 (279) obj. 574.892 iterations 249
Cbc0038I Pass  76: (21.64 seconds) suminf.   22.72924 (275) obj. 574.885 iterations 19
Cbc0038I Pass  77: (21.90 seconds) suminf.   20.94168 (287) obj. 587.108 iterations 838
Cbc0038I Pass  78: (21.92 seconds) suminf.   20.98839 (287) obj. 587.121 iterations 13
Cbc0038I Pass  79: (22.17 seconds) suminf.   18.28910 (269) obj. 602.264 iterations 759
Cbc0038I Pass  80: (22.18 seconds) suminf.   18.28910 (269) obj. 602.264 iterations 15
Cbc0038I Pass  81: (22.85 seconds) suminf.   15.75747 (215) obj. 596.018 iterations 1909
Cbc0038I Pass  82: (23.03 seconds) suminf.   13.75937 (204) obj. 587.805 iterations 362
Cbc0038I Pass  83: (23.34 seconds) suminf.   15.97520 (208) obj. 572.466 iterations 983
Cbc0038I Pass  84: (23.38 seconds) suminf.   15.36458 (176) obj. 572.029 iterations 121
Cbc0038I Pass  85: (23.65 seconds) suminf.   14.75248 (197) obj. 572.708 iterations 954
Cbc0038I Pass  86: (23.79 seconds) suminf.   16.64915 (226) obj. 572.708 iterations 394
Cbc0038I Pass  87: (24.54 seconds) suminf.   17.37444 (186) obj. 573.448 iterations 2272
Cbc0038I Pass  88: (24.91 seconds) suminf.   13.70858 (205) obj. 567.076 iterations 1159
Cbc0038I Pass  89: (25.44 seconds) suminf.   14.69101 (237) obj. 590.879 iterations 2159
Cbc0038I Pass  90: (25.59 seconds) suminf.   12.87854 (198) obj. 588.621 iterations 372
Cbc0038I Pass  91: (26.15 seconds) suminf.   12.62262 (141) obj. 588.911 iterations 1889
Cbc0038I Pass  92: (26.44 seconds) suminf.   11.13382 (198) obj. 588.993 iterations 797
Cbc0038I Pass  93: (27.05 seconds) suminf.   19.86533 (284) obj. 566.728 iterations 2162
Cbc0038I Pass  94: (27.15 seconds) suminf.   17.83330 (297) obj. 568.107 iterations 230
Cbc0038I Pass  95: (27.16 seconds) suminf.   17.79687 (297) obj. 568.107 iterations 8
Cbc0038I Pass  96: (27.31 seconds) suminf.   17.38129 (225) obj. 569.917 iterations 335
Cbc0038I Pass  97: (27.38 seconds) suminf.   18.40335 (257) obj. 569.511 iterations 221
Cbc0038I Pass  98: (27.51 seconds) suminf.   17.54363 (256) obj. 566.717 iterations 386
Cbc0038I Pass  99: (27.89 seconds) suminf.   53.37762 (271) obj. 600.072 iterations 1549
Cbc0038I Pass 100: (28.24 seconds) suminf.   68.14875 (364) obj. 684.637 iterations 1363
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 556 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7792 rows 2629 columns, reduced to 6565 rows 2049 columns - too large
Cbc0038I Mini branch and bound did not improve solution (31.94 seconds)
Cbc0038I After 31.94 seconds - Feasibility pump exiting - took 25.61 seconds
Cbc0031I 62 added rows had average density of 28.887097
Cbc0013I At root node, 62 cuts changed objective from 297.16176 to 321 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.249 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 283.2 elements, 0 column cuts (0 active)  in 1.553 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 190 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.791 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 38 row cuts average 40.8 elements, 0 column cuts (0 active)  in 1.461 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 321 (77.72 seconds)
Cbc0010I After 100 nodes, 34 on tree, 1e+50 best solution, best possible 327 (469.59 seconds)
Cbc0010I After 200 nodes, 84 on tree, 1e+50 best solution, best possible 327 (793.98 seconds)
Cbc0010I After 300 nodes, 134 on tree, 1e+50 best solution, best possible 327 (1035.11 seconds)
Cbc0010I After 400 nodes, 184 on tree, 1e+50 best solution, best possible 327 (1276.55 seconds)
Cbc0010I After 500 nodes, 234 on tree, 1e+50 best solution, best possible 327 (1564.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 327), took 2783438 iterations and 579 nodes (1798.40 seconds)
Cbc0032I Strong branching done 5312 times (450238 iterations), fathomed 5 nodes and fixed 739 variables
Cbc0035I Maximum depth 279, 0 variables fixed on reduced cost
Cuts at root node changed objective from 297.162 to 321
Probing was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.249 seconds)
Gomory was tried 146 times and created 1191 cuts of which 0 were active after adding rounds of cuts (4.436 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.078 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
TwoMirCuts was tried 146 times and created 1051 cuts of which 0 were active after adding rounds of cuts (2.209 seconds)
ZeroHalf was tried 146 times and created 935 cuts of which 0 were active after adding rounds of cuts (20.991 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    327.000
Enumerated nodes:               579
Total iterations:               2783438
Time (CPU seconds):             1798.41
Time (Wallclock seconds):       1799.09

Total time (CPU seconds):       1798.43   (Wallclock seconds):       1799.13

