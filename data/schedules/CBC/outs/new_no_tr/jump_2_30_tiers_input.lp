Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump_2_30_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump_2_30_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 25600 - 0.21 seconds
Cgl0002I 101 variables fixed
Cgl0003I 0 fixed, 16 tightened bounds, 545 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 95 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 3020 rows, 987 columns (987 integer (956 of which binary)) and 10112 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 987 objects (987 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 536 integers unsatisfied sum - 200.887
Cbc0038I Pass   1: (0.76 seconds) suminf.  127.39609 (556) obj. 39423.6 iterations 1321
Cbc0038I Pass   2: (0.87 seconds) suminf.   81.36485 (593) obj. 45149.9 iterations 747
Cbc0038I Pass   3: (0.95 seconds) suminf.   61.88005 (568) obj. 47305.7 iterations 653
Cbc0038I Pass   4: (0.98 seconds) suminf.   59.83114 (585) obj. 48085.3 iterations 166
Cbc0038I Pass   5: (1.00 seconds) suminf.   56.34483 (573) obj. 49125.4 iterations 169
Cbc0038I Pass   6: (1.03 seconds) suminf.   55.35727 (598) obj. 49612.7 iterations 134
Cbc0038I Pass   7: (1.07 seconds) suminf.   55.69091 (590) obj. 49363.7 iterations 284
Cbc0038I Pass   8: (1.09 seconds) suminf.   54.78736 (581) obj. 49682.8 iterations 144
Cbc0038I Pass   9: (1.11 seconds) suminf.   54.62285 (594) obj. 49386.7 iterations 87
Cbc0038I Pass  10: (1.15 seconds) suminf.   56.20411 (585) obj. 49517.9 iterations 283
Cbc0038I Pass  11: (1.19 seconds) suminf.   53.28250 (608) obj. 49667.9 iterations 229
Cbc0038I Pass  12: (1.20 seconds) suminf.   53.01856 (605) obj. 49707.7 iterations 94
Cbc0038I Pass  13: (1.23 seconds) suminf.   55.13273 (592) obj. 49424.6 iterations 230
Cbc0038I Pass  14: (1.26 seconds) suminf.   53.80800 (581) obj. 49505.7 iterations 171
Cbc0038I Pass  15: (1.27 seconds) suminf.   53.64858 (592) obj. 49533.7 iterations 73
Cbc0038I Pass  16: (1.32 seconds) suminf.   54.05937 (614) obj. 49465.7 iterations 351
Cbc0038I Pass  17: (1.35 seconds) suminf.   53.13628 (613) obj. 49514.4 iterations 201
Cbc0038I Pass  18: (1.38 seconds) suminf.   52.57452 (615) obj. 50720.3 iterations 154
Cbc0038I Pass  19: (1.42 seconds) suminf.   55.12767 (595) obj. 52106.2 iterations 258
Cbc0038I Pass  20: (1.45 seconds) suminf.   54.17352 (608) obj. 51126.8 iterations 183
Cbc0038I Pass  21: (1.47 seconds) suminf.   52.62058 (607) obj. 51642 iterations 159
Cbc0038I Pass  22: (1.48 seconds) suminf.   52.55631 (608) obj. 51645.9 iterations 33
Cbc0038I Pass  23: (1.54 seconds) suminf.   53.63800 (620) obj. 56420.6 iterations 446
Cbc0038I Pass  24: (1.56 seconds) suminf.   52.64749 (624) obj. 56540.9 iterations 95
Cbc0038I Pass  25: (1.63 seconds) suminf.   54.76713 (602) obj. 49725.5 iterations 529
Cbc0038I Pass  26: (1.67 seconds) suminf.   53.79958 (625) obj. 51275.8 iterations 210
Cbc0038I Pass  27: (1.73 seconds) suminf.   56.40109 (609) obj. 56383.7 iterations 497
Cbc0038I Pass  28: (1.77 seconds) suminf.   53.31910 (600) obj. 55827.7 iterations 225
Cbc0038I Pass  29: (1.78 seconds) suminf.   52.96654 (601) obj. 55347.9 iterations 41
Cbc0038I Pass  30: (1.83 seconds) suminf.   53.84390 (613) obj. 50064.5 iterations 345
Cbc0038I Pass  31: (1.86 seconds) suminf.   54.10783 (615) obj. 50837 iterations 153
Cbc0038I Pass  32: (1.88 seconds) suminf.   53.44212 (606) obj. 50988.1 iterations 147
Cbc0038I Pass  33: (1.96 seconds) suminf.   55.35632 (622) obj. 55248 iterations 515
Cbc0038I Pass  34: (1.99 seconds) suminf.   54.76432 (637) obj. 55810.3 iterations 200
Cbc0038I Pass  35: (2.02 seconds) suminf.   53.63734 (636) obj. 55340.4 iterations 142
Cbc0038I Pass  36: (2.08 seconds) suminf.   53.13823 (608) obj. 49769.9 iterations 370
Cbc0038I Pass  37: (2.10 seconds) suminf.   53.08653 (614) obj. 49963.3 iterations 131
Cbc0038I Pass  38: (2.15 seconds) suminf.   54.52630 (626) obj. 49949.8 iterations 324
Cbc0038I Pass  39: (2.19 seconds) suminf.   52.68905 (624) obj. 51504.3 iterations 302
Cbc0038I Pass  40: (2.23 seconds) suminf.   54.57656 (600) obj. 55120.8 iterations 352
Cbc0038I Pass  41: (2.26 seconds) suminf.   53.46018 (615) obj. 55355.3 iterations 237
Cbc0038I Pass  42: (2.30 seconds) suminf.   53.46742 (621) obj. 52983 iterations 306
Cbc0038I Pass  43: (2.33 seconds) suminf.   52.54244 (618) obj. 50975.1 iterations 174
Cbc0038I Pass  44: (2.35 seconds) suminf.   52.17446 (612) obj. 51494.8 iterations 134
Cbc0038I Pass  45: (2.39 seconds) suminf.   53.36957 (603) obj. 55066 iterations 273
Cbc0038I Pass  46: (2.41 seconds) suminf.   53.32172 (602) obj. 54861.5 iterations 146
Cbc0038I Pass  47: (2.46 seconds) suminf.   53.19852 (614) obj. 51256.6 iterations 320
Cbc0038I Pass  48: (2.62 seconds) suminf.   79.56116 (611) obj. 60709 iterations 1095
Cbc0038I Pass  49: (2.74 seconds) suminf.   54.85928 (605) obj. 65424.4 iterations 683
Cbc0038I Pass  50: (2.77 seconds) suminf.   52.92579 (607) obj. 65512.3 iterations 122
Cbc0038I Pass  51: (2.80 seconds) suminf.   51.12041 (613) obj. 65566.7 iterations 110
Cbc0038I Pass  52: (2.87 seconds) suminf.   52.79433 (638) obj. 66574.3 iterations 360
Cbc0038I Pass  53: (2.90 seconds) suminf.   54.49295 (635) obj. 66655.9 iterations 146
Cbc0038I Pass  54: (2.93 seconds) suminf.   51.06839 (635) obj. 66670.1 iterations 109
Cbc0038I Pass  55: (2.94 seconds) suminf.   52.07639 (632) obj. 66641.1 iterations 50
Cbc0038I Pass  56: (2.99 seconds) suminf.   56.45589 (612) obj. 66396.5 iterations 283
Cbc0038I Pass  57: (3.02 seconds) suminf.   54.81333 (611) obj. 66701.7 iterations 140
Cbc0038I Pass  58: (3.03 seconds) suminf.   53.99236 (617) obj. 66711.2 iterations 52
Cbc0038I Pass  59: (3.07 seconds) suminf.   53.56915 (622) obj. 66393.7 iterations 255
Cbc0038I Pass  60: (3.09 seconds) suminf.   53.47554 (609) obj. 66400.3 iterations 79
Cbc0038I Pass  61: (3.13 seconds) suminf.   52.29830 (610) obj. 66471.7 iterations 205
Cbc0038I Pass  62: (3.16 seconds) suminf.   52.44438 (608) obj. 66381.2 iterations 157
Cbc0038I Pass  63: (3.22 seconds) suminf.   52.24966 (619) obj. 63124.7 iterations 368
Cbc0038I Pass  64: (3.25 seconds) suminf.   53.39944 (609) obj. 62236.5 iterations 145
Cbc0038I Pass  65: (3.27 seconds) suminf.   52.84097 (613) obj. 62361.4 iterations 59
Cbc0038I Pass  66: (3.31 seconds) suminf.   51.53249 (606) obj. 62829 iterations 252
Cbc0038I Pass  67: (3.34 seconds) suminf.   53.94691 (609) obj. 62478.6 iterations 156
Cbc0038I Pass  68: (3.36 seconds) suminf.   53.75765 (602) obj. 62560.6 iterations 160
Cbc0038I Pass  69: (3.39 seconds) suminf.   52.51453 (614) obj. 62593.1 iterations 105
Cbc0038I Pass  70: (3.40 seconds) suminf.   52.21072 (611) obj. 62522 iterations 86
Cbc0038I Pass  71: (3.44 seconds) suminf.   53.91491 (609) obj. 62780.4 iterations 217
Cbc0038I Pass  72: (3.48 seconds) suminf.   52.64050 (620) obj. 62497.8 iterations 202
Cbc0038I Pass  73: (3.49 seconds) suminf.   52.05255 (625) obj. 62457.9 iterations 63
Cbc0038I Pass  74: (3.53 seconds) suminf.   53.23527 (611) obj. 62546.1 iterations 188
Cbc0038I Pass  75: (3.55 seconds) suminf.   52.28933 (610) obj. 62126.2 iterations 126
Cbc0038I Pass  76: (3.60 seconds) suminf.   52.74038 (639) obj. 62716.3 iterations 296
Cbc0038I Pass  77: (3.63 seconds) suminf.   52.61607 (622) obj. 62723.4 iterations 145
Cbc0038I Pass  78: (3.67 seconds) suminf.   52.28234 (616) obj. 62549.1 iterations 261
Cbc0038I Pass  79: (3.69 seconds) suminf.   52.14943 (621) obj. 62726.7 iterations 91
Cbc0038I Pass  80: (3.73 seconds) suminf.   53.54351 (645) obj. 62592.1 iterations 264
Cbc0038I Pass  81: (3.92 seconds) suminf.   90.97466 (617) obj. 72789.7 iterations 1151
Cbc0038I Pass  82: (4.02 seconds) suminf.   53.90496 (610) obj. 76426.1 iterations 576
Cbc0038I Pass  83: (4.07 seconds) suminf.   49.01412 (623) obj. 76220.9 iterations 224
Cbc0038I Pass  84: (4.10 seconds) suminf.   51.98536 (615) obj. 75709.3 iterations 94
Cbc0038I Pass  85: (4.11 seconds) suminf.   52.68468 (608) obj. 75551.5 iterations 48
Cbc0038I Pass  86: (4.15 seconds) suminf.   56.37700 (622) obj. 75104.9 iterations 254
Cbc0038I Pass  87: (4.18 seconds) suminf.   53.24591 (624) obj. 75465.2 iterations 129
Cbc0038I Pass  88: (4.19 seconds) suminf.   53.52481 (627) obj. 75327.5 iterations 64
Cbc0038I Pass  89: (4.24 seconds) suminf.   50.02730 (621) obj. 75744 iterations 280
Cbc0038I Pass  90: (4.28 seconds) suminf.   51.45736 (626) obj. 75877.7 iterations 159
Cbc0038I Pass  91: (4.30 seconds) suminf.   50.28656 (619) obj. 75829.2 iterations 79
Cbc0038I Pass  92: (4.36 seconds) suminf.   55.53451 (634) obj. 74498.5 iterations 288
Cbc0038I Pass  93: (4.40 seconds) suminf.   52.79821 (649) obj. 74985.5 iterations 164
Cbc0038I Pass  94: (4.43 seconds) suminf.   51.13590 (630) obj. 75025.9 iterations 144
Cbc0038I Pass  95: (4.48 seconds) suminf.   50.91759 (649) obj. 74879.1 iterations 221
Cbc0038I Pass  96: (4.50 seconds) suminf.   50.46228 (652) obj. 74871.8 iterations 101
Cbc0038I Pass  97: (4.56 seconds) suminf.   51.67381 (632) obj. 75142.2 iterations 253
Cbc0038I Pass  98: (4.57 seconds) suminf.   51.09972 (617) obj. 75128.9 iterations 67
Cbc0038I Pass  99: (4.61 seconds) suminf.   50.91248 (645) obj. 75299.7 iterations 201
Cbc0038I Pass 100: (4.75 seconds) suminf.   85.09188 (620) obj. 70477.9 iterations 868
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3020 rows 987 columns, reduced to 2978 rows 967 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.77 seconds)
Cbc0038I After 4.77 seconds - Feasibility pump exiting - took 4.23 seconds
Cbc0031I 47 added rows had average density of 182.08511
Cbc0013I At root node, 47 cuts changed objective from 25600 to 27719.201 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 15 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.180 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 512 row cuts average 676.2 elements, 0 column cuts (0 active)  in 1.736 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 97 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 27719.201 (13.03 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 28339.792 (68.63 seconds)
Cbc0010I After 200 nodes, 9 on tree, 1e+50 best solution, best possible 28339.792 (106.34 seconds)
Cbc0010I After 300 nodes, 24 on tree, 1e+50 best solution, best possible 28339.792 (166.09 seconds)
Cbc0010I After 400 nodes, 32 on tree, 1e+50 best solution, best possible 28339.792 (224.02 seconds)
Cbc0010I After 500 nodes, 53 on tree, 1e+50 best solution, best possible 28339.792 (267.98 seconds)
Cbc0010I After 600 nodes, 72 on tree, 1e+50 best solution, best possible 28339.792 (308.68 seconds)
Cbc0010I After 700 nodes, 77 on tree, 1e+50 best solution, best possible 28339.792 (363.77 seconds)
Cbc0010I After 800 nodes, 88 on tree, 1e+50 best solution, best possible 28339.792 (409.16 seconds)
Cbc0010I After 900 nodes, 118 on tree, 1e+50 best solution, best possible 28339.792 (451.64 seconds)
Cbc0010I After 1000 nodes, 139 on tree, 1e+50 best solution, best possible 28339.792 (500.53 seconds)
Cbc0010I After 1100 nodes, 139 on tree, 1e+50 best solution, best possible 29694.044 (551.14 seconds)
Cbc0010I After 1200 nodes, 141 on tree, 1e+50 best solution, best possible 29694.044 (601.76 seconds)
Cbc0010I After 1300 nodes, 137 on tree, 1e+50 best solution, best possible 29694.044 (655.79 seconds)
Cbc0010I After 1400 nodes, 147 on tree, 1e+50 best solution, best possible 29694.044 (706.65 seconds)
Cbc0010I After 1500 nodes, 160 on tree, 1e+50 best solution, best possible 29694.044 (758.69 seconds)
Cbc0010I After 1600 nodes, 162 on tree, 1e+50 best solution, best possible 29694.044 (810.59 seconds)
Cbc0010I After 1700 nodes, 162 on tree, 1e+50 best solution, best possible 29694.044 (867.90 seconds)
Cbc0010I After 1800 nodes, 170 on tree, 1e+50 best solution, best possible 29694.044 (918.91 seconds)
Cbc0010I After 1900 nodes, 190 on tree, 1e+50 best solution, best possible 29694.044 (958.48 seconds)
Cbc0010I After 2000 nodes, 194 on tree, 1e+50 best solution, best possible 29694.044 (997.98 seconds)
Cbc0010I After 2100 nodes, 200 on tree, 1e+50 best solution, best possible 29694.044 (1037.71 seconds)
Cbc0010I After 2200 nodes, 206 on tree, 1e+50 best solution, best possible 29694.044 (1078.00 seconds)
Cbc0010I After 2300 nodes, 216 on tree, 1e+50 best solution, best possible 29694.044 (1121.95 seconds)
Cbc0010I After 2400 nodes, 221 on tree, 1e+50 best solution, best possible 29694.044 (1165.14 seconds)
Cbc0010I After 2500 nodes, 233 on tree, 1e+50 best solution, best possible 29694.044 (1210.49 seconds)
Cbc0010I After 2600 nodes, 246 on tree, 1e+50 best solution, best possible 29694.044 (1242.55 seconds)
Cbc0010I After 2700 nodes, 249 on tree, 1e+50 best solution, best possible 29694.044 (1297.54 seconds)
Cbc0010I After 2800 nodes, 250 on tree, 1e+50 best solution, best possible 29694.044 (1336.16 seconds)
Cbc0010I After 2900 nodes, 254 on tree, 1e+50 best solution, best possible 29694.044 (1378.63 seconds)
Cbc0010I After 3000 nodes, 254 on tree, 1e+50 best solution, best possible 29694.044 (1419.07 seconds)
Cbc0010I After 3100 nodes, 256 on tree, 1e+50 best solution, best possible 29694.044 (1447.31 seconds)
Cbc0010I After 3200 nodes, 257 on tree, 1e+50 best solution, best possible 29694.044 (1475.18 seconds)
Cbc0010I After 3300 nodes, 257 on tree, 1e+50 best solution, best possible 29694.044 (1522.58 seconds)
Cbc0010I After 3400 nodes, 266 on tree, 1e+50 best solution, best possible 29694.044 (1550.01 seconds)
Cbc0010I After 3500 nodes, 265 on tree, 1e+50 best solution, best possible 29694.044 (1578.51 seconds)
Cbc0010I After 3600 nodes, 269 on tree, 1e+50 best solution, best possible 29694.044 (1608.79 seconds)
Cbc0010I After 3700 nodes, 272 on tree, 1e+50 best solution, best possible 29694.044 (1640.84 seconds)
Cbc0010I After 3800 nodes, 280 on tree, 1e+50 best solution, best possible 29694.044 (1665.65 seconds)
Cbc0010I After 3900 nodes, 280 on tree, 1e+50 best solution, best possible 29694.044 (1690.82 seconds)
Cbc0010I After 4000 nodes, 282 on tree, 1e+50 best solution, best possible 29694.044 (1714.66 seconds)
Cbc0010I After 4100 nodes, 281 on tree, 1e+50 best solution, best possible 29694.044 (1737.72 seconds)
Cbc0010I After 4200 nodes, 281 on tree, 1e+50 best solution, best possible 29694.044 (1767.17 seconds)
Cbc0010I After 4300 nodes, 281 on tree, 1e+50 best solution, best possible 29694.044 (1797.34 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 29694.044), took 7569591 iterations and 4308 nodes (1799.73 seconds)
Cbc0032I Strong branching done 17014 times (1420922 iterations), fathomed 461 nodes and fixed 965 variables
Cbc0035I Maximum depth 1021, 0 variables fixed on reduced cost
Cuts at root node changed objective from 25600 to 27719.2
Probing was tried 31 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.180 seconds)
Gomory was tried 812 times and created 2648 cuts of which 0 were active after adding rounds of cuts (6.005 seconds)
Knapsack was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Clique was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
MixedIntegerRounding2 was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
FlowCover was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
TwoMirCuts was tried 812 times and created 9325 cuts of which 0 were active after adding rounds of cuts (1.781 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
ImplicationCuts was tried 38 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    29694.044
Enumerated nodes:               4308
Total iterations:               7569591
Time (CPU seconds):             1799.75
Time (Wallclock seconds):       1800.55

Total time (CPU seconds):       1799.76   (Wallclock seconds):       1800.57

