Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang8_1_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang8_1_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 223.83 - 0.87 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 23 tightened bounds, 969 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 17 tightened bounds, 723 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 16 tightened bounds, 440 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 315 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 204 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 145 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 5 tightened bounds, 104 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0004I processed model has 4764 rows, 1627 columns (1627 integer (1590 of which binary)) and 16013 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1627 objects (1627 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 809 integers unsatisfied sum - 231.933
Cbc0038I Pass   1: (2.20 seconds) suminf.  105.35866 (573) obj. 354.421 iterations 2069
Cbc0038I Pass   2: (2.42 seconds) suminf.   56.78965 (509) obj. 357.09 iterations 1196
Cbc0038I Pass   3: (2.48 seconds) suminf.   54.57996 (501) obj. 362.785 iterations 261
Cbc0038I Pass   4: (2.54 seconds) suminf.   53.24434 (494) obj. 367.022 iterations 250
Cbc0038I Pass   5: (2.55 seconds) suminf.   52.26657 (486) obj. 366.861 iterations 71
Cbc0038I Pass   6: (2.61 seconds) suminf.   50.94388 (486) obj. 366.91 iterations 219
Cbc0038I Pass   7: (2.62 seconds) suminf.   51.06833 (490) obj. 366.938 iterations 33
Cbc0038I Pass   8: (2.70 seconds) suminf.   56.19247 (428) obj. 364.715 iterations 388
Cbc0038I Pass   9: (2.72 seconds) suminf.   56.16616 (439) obj. 364.629 iterations 110
Cbc0038I Pass  10: (2.77 seconds) suminf.   54.22809 (427) obj. 364.427 iterations 223
Cbc0038I Pass  11: (2.82 seconds) suminf.   52.99000 (432) obj. 364.346 iterations 244
Cbc0038I Pass  12: (2.87 seconds) suminf.   56.32466 (417) obj. 369.353 iterations 210
Cbc0038I Pass  13: (2.90 seconds) suminf.   55.56894 (434) obj. 369.486 iterations 126
Cbc0038I Pass  14: (2.92 seconds) suminf.   54.31659 (447) obj. 365.368 iterations 61
Cbc0038I Pass  15: (2.94 seconds) suminf.   53.22446 (438) obj. 364.302 iterations 65
Cbc0038I Pass  16: (2.98 seconds) suminf.   54.18205 (415) obj. 364.322 iterations 172
Cbc0038I Pass  17: (3.00 seconds) suminf.   54.42333 (421) obj. 364.335 iterations 81
Cbc0038I Pass  18: (3.01 seconds) suminf.   53.67583 (436) obj. 364.375 iterations 68
Cbc0038I Pass  19: (3.06 seconds) suminf.   56.77826 (431) obj. 370.199 iterations 226
Cbc0038I Pass  20: (3.08 seconds) suminf.   57.08352 (440) obj. 372.532 iterations 82
Cbc0038I Pass  21: (3.15 seconds) suminf.   54.97989 (426) obj. 369.914 iterations 294
Cbc0038I Pass  22: (3.20 seconds) suminf.   52.44424 (440) obj. 364.438 iterations 252
Cbc0038I Pass  23: (3.25 seconds) suminf.   58.52365 (413) obj. 370.492 iterations 263
Cbc0038I Pass  24: (3.30 seconds) suminf.   55.12087 (430) obj. 371.747 iterations 201
Cbc0038I Pass  25: (3.31 seconds) suminf.   55.51957 (425) obj. 371.27 iterations 51
Cbc0038I Pass  26: (3.34 seconds) suminf.   55.69567 (417) obj. 371.496 iterations 140
Cbc0038I Pass  27: (3.41 seconds) suminf.   52.15898 (405) obj. 362.591 iterations 348
Cbc0038I Pass  28: (3.44 seconds) suminf.   50.18206 (393) obj. 360.885 iterations 138
Cbc0038I Pass  29: (3.46 seconds) suminf.   50.65349 (384) obj. 360.772 iterations 83
Cbc0038I Pass  30: (3.47 seconds) suminf.   50.64861 (392) obj. 360.623 iterations 43
Cbc0038I Pass  31: (3.52 seconds) suminf.   49.77069 (382) obj. 349.991 iterations 196
Cbc0038I Pass  32: (3.54 seconds) suminf.   50.16931 (395) obj. 345.471 iterations 77
Cbc0038I Pass  33: (3.57 seconds) suminf.   49.31967 (407) obj. 347.774 iterations 169
Cbc0038I Pass  34: (3.60 seconds) suminf.   49.90760 (402) obj. 356.6 iterations 113
Cbc0038I Pass  35: (3.62 seconds) suminf.   48.98922 (406) obj. 356.084 iterations 75
Cbc0038I Pass  36: (3.66 seconds) suminf.   50.57046 (378) obj. 341.804 iterations 207
Cbc0038I Pass  37: (3.68 seconds) suminf.   50.29117 (382) obj. 340.935 iterations 31
Cbc0038I Pass  38: (3.69 seconds) suminf.   49.48188 (394) obj. 341.275 iterations 26
Cbc0038I Pass  39: (3.70 seconds) suminf.   49.27609 (392) obj. 340.574 iterations 46
Cbc0038I Pass  40: (3.77 seconds) suminf.   46.56708 (388) obj. 342.237 iterations 382
Cbc0038I Pass  41: (3.79 seconds) suminf.   45.47719 (391) obj. 340 iterations 96
Cbc0038I Pass  42: (3.80 seconds) suminf.   45.48765 (390) obj. 340 iterations 4
Cbc0038I Pass  43: (3.86 seconds) suminf.   42.62821 (319) obj. 340 iterations 405
Cbc0038I Pass  44: (3.90 seconds) suminf.   41.32088 (307) obj. 340.546 iterations 204
Cbc0038I Pass  45: (3.91 seconds) suminf.   41.12707 (312) obj. 340.497 iterations 19
Cbc0038I Pass  46: (3.98 seconds) suminf.   37.95050 (291) obj. 341.642 iterations 410
Cbc0038I Pass  47: (4.03 seconds) suminf.   34.91326 (292) obj. 345.276 iterations 235
Cbc0038I Pass  48: (4.10 seconds) suminf.   34.94170 (307) obj. 359.439 iterations 448
Cbc0038I Pass  49: (4.14 seconds) suminf.   33.49853 (310) obj. 345.896 iterations 168
Cbc0038I Pass  50: (4.19 seconds) suminf.   34.86689 (321) obj. 379.466 iterations 328
Cbc0038I Pass  51: (4.23 seconds) suminf.   33.25468 (314) obj. 394.865 iterations 196
Cbc0038I Pass  52: (4.39 seconds) suminf.   32.23265 (301) obj. 343.25 iterations 1048
Cbc0038I Pass  53: (4.43 seconds) suminf.   30.65209 (323) obj. 342.767 iterations 220
Cbc0038I Pass  54: (4.48 seconds) suminf.   29.01217 (336) obj. 349.95 iterations 230
Cbc0038I Pass  55: (4.50 seconds) suminf.   28.77923 (337) obj. 351.039 iterations 76
Cbc0038I Pass  56: (4.56 seconds) suminf.   28.43150 (295) obj. 400.116 iterations 330
Cbc0038I Pass  57: (4.58 seconds) suminf.   28.76008 (296) obj. 398.652 iterations 124
Cbc0038I Pass  58: (4.66 seconds) suminf.   28.76990 (318) obj. 400.062 iterations 515
Cbc0038I Pass  59: (4.67 seconds) suminf.   28.80891 (318) obj. 400.071 iterations 6
Cbc0038I Pass  60: (4.76 seconds) suminf.   29.21822 (286) obj. 400.101 iterations 592
Cbc0038I Pass  61: (4.77 seconds) suminf.   29.30677 (286) obj. 400.102 iterations 75
Cbc0038I Pass  62: (4.78 seconds) suminf.   29.07066 (291) obj. 400.101 iterations 34
Cbc0038I Pass  63: (4.88 seconds) suminf.   28.49516 (265) obj. 401.433 iterations 708
Cbc0038I Pass  64: (4.92 seconds) suminf.   27.51957 (263) obj. 401.476 iterations 190
Cbc0038I Pass  65: (4.93 seconds) suminf.   27.51943 (262) obj. 401.476 iterations 42
Cbc0038I Pass  66: (4.96 seconds) suminf.   28.42528 (262) obj. 401.438 iterations 170
Cbc0038I Pass  67: (5.01 seconds) suminf.   25.34256 (260) obj. 401.46 iterations 336
Cbc0038I Pass  68: (5.02 seconds) suminf.   25.32284 (259) obj. 401.467 iterations 3
Cbc0038I Pass  69: (5.05 seconds) suminf.   25.42045 (253) obj. 401.469 iterations 204
Cbc0038I Pass  70: (5.07 seconds) suminf.   24.90083 (252) obj. 401.472 iterations 102
Cbc0038I Pass  71: (5.14 seconds) suminf.   27.03848 (231) obj. 401.796 iterations 538
Cbc0038I Pass  72: (5.18 seconds) suminf.   26.78467 (228) obj. 401.857 iterations 216
Cbc0038I Pass  73: (5.26 seconds) suminf.   24.84989 (236) obj. 464.133 iterations 568
Cbc0038I Pass  74: (5.27 seconds) suminf.   25.05450 (229) obj. 460.162 iterations 73
Cbc0038I Pass  75: (5.35 seconds) suminf.   24.87596 (214) obj. 448 iterations 570
Cbc0038I Pass  76: (5.36 seconds) suminf.   24.37125 (206) obj. 420.399 iterations 42
Cbc0038I Pass  77: (5.36 seconds) suminf.   24.10700 (204) obj. 420.862 iterations 9
Cbc0038I Pass  78: (5.42 seconds) suminf.   24.82258 (205) obj. 434.599 iterations 390
Cbc0038I Pass  79: (5.42 seconds) suminf.   23.03782 (202) obj. 442.19 iterations 2
Cbc0038I Pass  80: (5.44 seconds) suminf.   20.23055 (198) obj. 433.8 iterations 125
Cbc0038I Pass  81: (5.50 seconds) suminf.   20.88278 (204) obj. 453.156 iterations 407
Cbc0038I Pass  82: (5.54 seconds) suminf.   20.82759 (195) obj. 401.456 iterations 297
Cbc0038I Pass  83: (5.56 seconds) suminf.   21.57278 (189) obj. 401.47 iterations 121
Cbc0038I Pass  84: (5.57 seconds) suminf.   21.19363 (193) obj. 401.637 iterations 36
Cbc0038I Pass  85: (5.60 seconds) suminf.   20.39912 (192) obj. 401.393 iterations 201
Cbc0038I Pass  86: (5.61 seconds) suminf.   20.39912 (192) obj. 401.393 iterations 7
Cbc0038I Pass  87: (5.68 seconds) suminf.   19.65664 (201) obj. 401.534 iterations 519
Cbc0038I Pass  88: (5.72 seconds) suminf.   18.95486 (174) obj. 401.476 iterations 191
Cbc0038I Pass  89: (5.75 seconds) suminf.   16.97720 (158) obj. 401.377 iterations 245
Cbc0038I Pass  90: (5.76 seconds) suminf.   17.06349 (161) obj. 401.377 iterations 47
Cbc0038I Pass  91: (5.77 seconds) suminf.   17.04955 (160) obj. 401.377 iterations 11
Cbc0038I Pass  92: (5.78 seconds) suminf.   15.40116 (159) obj. 401.377 iterations 81
Cbc0038I Pass  93: (5.79 seconds) suminf.   15.33105 (156) obj. 401.377 iterations 41
Cbc0038I Pass  94: (5.86 seconds) suminf.   13.69438 (149) obj. 401.364 iterations 488
Cbc0038I Pass  95: (5.88 seconds) suminf.   13.03235 (149) obj. 401.364 iterations 138
Cbc0038I Pass  96: (5.93 seconds) suminf.   16.05491 (181) obj. 345.162 iterations 331
Cbc0038I Pass  97: (5.94 seconds) suminf.   16.24116 (170) obj. 344.305 iterations 51
Cbc0038I Pass  98: (6.00 seconds) suminf.   16.50949 (157) obj. 340 iterations 420
Cbc0038I Pass  99: (6.02 seconds) suminf.   16.16588 (164) obj. 340 iterations 83
Cbc0038I Pass 100: (6.26 seconds) suminf.   82.37241 (425) obj. 556.099 iterations 1628
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 380 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4764 rows 1627 columns, reduced to 3889 rows 1223 columns - too large
Cbc0038I Mini branch and bound did not improve solution (6.29 seconds)
Cbc0038I After 6.29 seconds - Feasibility pump exiting - took 4.51 seconds
Cbc0031I 50 added rows had average density of 270.18
Cbc0013I At root node, 50 cuts changed objective from 224.44835 to 250 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 71 row cuts average 629.1 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 89 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.236 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 156 row cuts average 80.8 elements, 0 column cuts (0 active)  in 0.458 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 250 (16.77 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 257 (95.32 seconds)
Cbc0010I After 200 nodes, 14 on tree, 1e+50 best solution, best possible 257 (153.45 seconds)
Cbc0010I After 300 nodes, 28 on tree, 1e+50 best solution, best possible 257 (210.80 seconds)
Cbc0010I After 400 nodes, 37 on tree, 1e+50 best solution, best possible 257 (273.36 seconds)
Cbc0010I After 500 nodes, 33 on tree, 1e+50 best solution, best possible 257 (339.81 seconds)
Cbc0010I After 600 nodes, 31 on tree, 1e+50 best solution, best possible 257 (398.26 seconds)
Cbc0010I After 700 nodes, 16 on tree, 1e+50 best solution, best possible 257 (456.67 seconds)
Cbc0010I After 800 nodes, 15 on tree, 1e+50 best solution, best possible 257 (517.95 seconds)
Cbc0010I After 900 nodes, 35 on tree, 1e+50 best solution, best possible 257 (577.58 seconds)
Cbc0010I After 1000 nodes, 46 on tree, 1e+50 best solution, best possible 257 (644.04 seconds)
Cbc0010I After 1100 nodes, 38 on tree, 1e+50 best solution, best possible 261 (706.61 seconds)
Cbc0010I After 1200 nodes, 47 on tree, 1e+50 best solution, best possible 261 (778.38 seconds)
Cbc0010I After 1300 nodes, 33 on tree, 1e+50 best solution, best possible 261 (839.14 seconds)
Cbc0010I After 1400 nodes, 33 on tree, 1e+50 best solution, best possible 261 (892.19 seconds)
Cbc0010I After 1500 nodes, 28 on tree, 1e+50 best solution, best possible 261 (957.12 seconds)
Cbc0010I After 1600 nodes, 25 on tree, 1e+50 best solution, best possible 261 (1024.91 seconds)
Cbc0010I After 1700 nodes, 20 on tree, 1e+50 best solution, best possible 261 (1078.95 seconds)
Cbc0010I After 1800 nodes, 17 on tree, 1e+50 best solution, best possible 261 (1138.34 seconds)
Cbc0010I After 1900 nodes, 8 on tree, 1e+50 best solution, best possible 261 (1209.25 seconds)
Cbc0010I After 2000 nodes, 4 on tree, 1e+50 best solution, best possible 267 (1282.66 seconds)
Cbc0010I After 2100 nodes, 27 on tree, 1e+50 best solution, best possible 270 (1341.57 seconds)
Cbc0010I After 2200 nodes, 10 on tree, 1e+50 best solution, best possible 271 (1400.19 seconds)
Cbc0010I After 2300 nodes, 18 on tree, 1e+50 best solution, best possible 271 (1454.65 seconds)
Cbc0010I After 2400 nodes, 14 on tree, 1e+50 best solution, best possible 271 (1500.38 seconds)
Cbc0010I After 2500 nodes, 15 on tree, 1e+50 best solution, best possible 271 (1561.95 seconds)
Cbc0010I After 2600 nodes, 20 on tree, 1e+50 best solution, best possible 271 (1616.17 seconds)
Cbc0010I After 2700 nodes, 5 on tree, 1e+50 best solution, best possible 271 (1661.55 seconds)
Cbc0010I After 2800 nodes, 16 on tree, 1e+50 best solution, best possible 272 (1698.19 seconds)
Cbc0010I After 2900 nodes, 3 on tree, 1e+50 best solution, best possible 272 (1735.13 seconds)
Cbc0010I After 3000 nodes, 5 on tree, 1e+50 best solution, best possible 273 (1763.41 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 273), took 3700467 iterations and 3092 nodes (1799.12 seconds)
Cbc0032I Strong branching done 26626 times (2235457 iterations), fathomed 272 nodes and fixed 2328 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 224.448 to 250
Probing was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
Gomory was tried 2120 times and created 1047 cuts of which 0 were active after adding rounds of cuts (16.129 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 2120 times and created 26901 cuts of which 0 were active after adding rounds of cuts (4.915 seconds)
ZeroHalf was tried 2120 times and created 4270 cuts of which 0 were active after adding rounds of cuts (77.225 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    273.000
Enumerated nodes:               3092
Total iterations:               3700467
Time (CPU seconds):             1799.12
Time (Wallclock seconds):       1807.97

Total time (CPU seconds):       1799.14   (Wallclock seconds):       1808.00

