Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_4_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_4_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 276.37 - 0.07 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 12 tightened bounds, 288 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 10 tightened bounds, 189 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 122 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 83 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 0 tightened bounds, 2 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1378 rows, 486 columns (486 integer (464 of which binary)) and 4645 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 486 objects (486 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 279 integers unsatisfied sum - 86.3001
Cbc0038I Pass   1: suminf.   41.49593 (259) obj. 414.811 iterations 613
Cbc0038I Pass   2: suminf.   35.81943 (212) obj. 422.446 iterations 214
Cbc0038I Pass   3: suminf.   36.35660 (218) obj. 426.446 iterations 63
Cbc0038I Pass   4: suminf.   28.72617 (231) obj. 436.283 iterations 294
Cbc0038I Pass   5: suminf.   26.62861 (233) obj. 434.944 iterations 57
Cbc0038I Pass   6: suminf.   28.77505 (213) obj. 455.292 iterations 154
Cbc0038I Pass   7: suminf.   27.13138 (218) obj. 446.649 iterations 51
Cbc0038I Pass   8: suminf.   28.23101 (214) obj. 447.384 iterations 12
Cbc0038I Pass   9: suminf.   26.63954 (177) obj. 458.49 iterations 187
Cbc0038I Pass  10: suminf.   26.60512 (185) obj. 458.454 iterations 23
Cbc0038I Pass  11: suminf.   23.71981 (160) obj. 481.045 iterations 179
Cbc0038I Pass  12: suminf.   23.60548 (155) obj. 485.616 iterations 28
Cbc0038I Pass  13: suminf.   22.21589 (137) obj. 506.359 iterations 105
Cbc0038I Pass  14: suminf.   20.95736 (140) obj. 517.218 iterations 52
Cbc0038I Pass  15: suminf.   14.95279 (80) obj. 563.742 iterations 133
Cbc0038I Pass  16: suminf.   14.31034 (77) obj. 563.742 iterations 28
Cbc0038I Pass  17: suminf.    9.38864 (51) obj. 477.215 iterations 137
Cbc0038I Pass  18: suminf.    9.14926 (52) obj. 475.464 iterations 23
Cbc0038I Pass  19: suminf.    2.50950 (45) obj. 494.979 iterations 137
Cbc0038I Pass  20: suminf.    1.32450 (22) obj. 503 iterations 71
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 503 iterations 388
Cbc0038I Solution found of 503
Cbc0038I Cleaned solution of 503
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1378 rows 486 columns, reduced to 1219 rows 401 columns - 30 fixed gives 819, 253 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.51 seconds)
Cbc0038I Round again with cutoff of 479.545
Cbc0038I Pass  22: suminf.   41.49593 (259) obj. 414.811 iterations 0
Cbc0038I Pass  23: suminf.   35.81943 (212) obj. 422.446 iterations 201
Cbc0038I Pass  24: suminf.   36.35660 (218) obj. 426.446 iterations 42
Cbc0038I Pass  25: suminf.   28.72617 (231) obj. 436.283 iterations 196
Cbc0038I Pass  26: suminf.   26.62861 (233) obj. 434.944 iterations 46
Cbc0038I Pass  27: suminf.   28.14226 (213) obj. 447.23 iterations 194
Cbc0038I Pass  28: suminf.   27.19049 (185) obj. 441.099 iterations 70
Cbc0038I Pass  29: suminf.   25.84186 (181) obj. 449.346 iterations 44
Cbc0038I Pass  30: suminf.   20.29781 (138) obj. 479.545 iterations 223
Cbc0038I Pass  31: suminf.   19.00589 (131) obj. 479.545 iterations 71
Cbc0038I Pass  32: suminf.    9.59215 (92) obj. 479.545 iterations 75
Cbc0038I Pass  33: suminf.    9.14343 (93) obj. 479.545 iterations 21
Cbc0038I Pass  34: suminf.    6.42519 (64) obj. 479.545 iterations 146
Cbc0038I Pass  35: suminf.    5.35319 (59) obj. 479.545 iterations 30
Cbc0038I Pass  36: suminf.    3.49513 (55) obj. 479.545 iterations 134
Cbc0038I Pass  37: suminf.    3.26674 (51) obj. 479.545 iterations 22
Cbc0038I Pass  38: suminf.    5.50053 (50) obj. 470.831 iterations 164
Cbc0038I Pass  39: suminf.    6.69729 (68) obj. 479.545 iterations 35
Cbc0038I Pass  40: suminf.   11.31851 (78) obj. 470.178 iterations 100
Cbc0038I Pass  41: suminf.    6.62365 (61) obj. 479.545 iterations 143
Cbc0038I Pass  42: suminf.    5.97949 (53) obj. 479.545 iterations 26
Cbc0038I Pass  43: suminf.    4.79729 (49) obj. 479.545 iterations 33
Cbc0038I Pass  44: suminf.    6.65385 (36) obj. 453.075 iterations 113
Cbc0038I Pass  45: suminf.    3.91982 (36) obj. 479.545 iterations 41
Cbc0038I Pass  46: suminf.    3.51144 (35) obj. 479.545 iterations 128
Cbc0038I Pass  47: suminf.    3.47912 (32) obj. 479.545 iterations 13
Cbc0038I Pass  48: suminf.    5.20404 (54) obj. 479.545 iterations 197
Cbc0038I Pass  49: suminf.    5.05016 (53) obj. 479.545 iterations 16
Cbc0038I Pass  50: suminf.    1.99561 (28) obj. 479.545 iterations 41
Cbc0038I Pass  51: suminf.    1.99561 (28) obj. 479.545 iterations 5
Cbc0038I Pass  52: suminf.    3.74600 (26) obj. 479.545 iterations 50
Cbc0038I Pass  53: suminf.    1.23692 (17) obj. 479.545 iterations 5
Cbc0038I Pass  54: suminf.    1.23692 (17) obj. 479.545 iterations 9
Cbc0038I Pass  55: suminf.    1.63806 (23) obj. 479.545 iterations 78
Cbc0038I Pass  56: suminf.    2.79285 (23) obj. 479.545 iterations 94
Cbc0038I Pass  57: suminf.    2.10287 (37) obj. 479.545 iterations 100
Cbc0038I Pass  58: suminf.    1.81330 (55) obj. 479.545 iterations 52
Cbc0038I Pass  59: suminf.    5.62707 (40) obj. 479.545 iterations 102
Cbc0038I Pass  60: suminf.    5.57415 (39) obj. 479.545 iterations 12
Cbc0038I Pass  61: suminf.    5.04858 (41) obj. 479.545 iterations 142
Cbc0038I Pass  62: suminf.    1.08513 (47) obj. 479.545 iterations 96
Cbc0038I Pass  63: suminf.   21.60761 (106) obj. 479.545 iterations 220
Cbc0038I Pass  64: suminf.   18.36453 (105) obj. 479.545 iterations 92
Cbc0038I Pass  65: suminf.   14.10067 (81) obj. 479.545 iterations 178
Cbc0038I Pass  66: suminf.   13.36669 (71) obj. 479.545 iterations 54
Cbc0038I Pass  67: suminf.   13.23864 (74) obj. 479.545 iterations 36
Cbc0038I Pass  68: suminf.   10.06639 (53) obj. 479.545 iterations 103
Cbc0038I Pass  69: suminf.    5.82696 (39) obj. 479.545 iterations 35
Cbc0038I Pass  70: suminf.    5.60971 (38) obj. 479.545 iterations 62
Cbc0038I Pass  71: suminf.    3.52128 (42) obj. 479.545 iterations 102
Cbc0038I Pass  72: suminf.    3.52128 (42) obj. 479.545 iterations 4
Cbc0038I Pass  73: suminf.    5.82324 (50) obj. 479.545 iterations 90
Cbc0038I Pass  74: suminf.    5.82324 (50) obj. 479.545 iterations 20
Cbc0038I Pass  75: suminf.    2.64049 (23) obj. 479.545 iterations 49
Cbc0038I Pass  76: suminf.    2.64049 (23) obj. 479.545 iterations 8
Cbc0038I Pass  77: suminf.    2.14474 (31) obj. 479.545 iterations 120
Cbc0038I Pass  78: suminf.    9.58261 (49) obj. 479.545 iterations 178
Cbc0038I Pass  79: suminf.    5.59085 (46) obj. 479.545 iterations 51
Cbc0038I Pass  80: suminf.    4.26215 (36) obj. 479.545 iterations 23
Cbc0038I Pass  81: suminf.    4.71073 (44) obj. 479.545 iterations 128
Cbc0038I Pass  82: suminf.    4.30298 (44) obj. 479.545 iterations 14
Cbc0038I Pass  83: suminf.    2.98710 (22) obj. 479.545 iterations 37
Cbc0038I Pass  84: suminf.    2.98710 (22) obj. 479.545 iterations 9
Cbc0038I Pass  85: suminf.    0.96380 (20) obj. 479.545 iterations 117
Cbc0038I Pass  86: suminf.    5.57607 (32) obj. 479.545 iterations 121
Cbc0038I Pass  87: suminf.    0.45497 (1) obj. 479.545 iterations 35
Cbc0038I Solution found of 479.545
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1379 rows 486 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 448
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1378 rows 486 columns, reduced to 1254 rows 419 columns - 49 fixed gives 977, 308 - still too large
Cbc0038I Full problem 1378 rows 486 columns, reduced to 346 rows 110 columns
Cbc0038I Mini branch and bound improved solution from 448 to 445 (0.93 seconds)
Cbc0038I Round again with cutoff of 410.69
Cbc0038I Pass  88: suminf.   41.61482 (255) obj. 410 iterations 7
Cbc0038I Pass  89: suminf.   37.69562 (218) obj. 410.69 iterations 200
Cbc0038I Pass  90: suminf.   37.91049 (226) obj. 410.69 iterations 28
Cbc0038I Pass  91: suminf.   27.01631 (223) obj. 410.69 iterations 301
Cbc0038I Pass  92: suminf.   25.78984 (219) obj. 410.69 iterations 64
Cbc0038I Pass  93: suminf.   25.69447 (218) obj. 410.69 iterations 14
Cbc0038I Pass  94: suminf.   28.31793 (202) obj. 410.69 iterations 207
Cbc0038I Pass  95: suminf.   27.47868 (181) obj. 410.69 iterations 61
Cbc0038I Pass  96: suminf.   27.94616 (179) obj. 410.69 iterations 67
Cbc0038I Pass  97: suminf.   27.93415 (169) obj. 410.69 iterations 123
Cbc0038I Pass  98: suminf.   25.55468 (169) obj. 410.69 iterations 113
Cbc0038I Pass  99: suminf.   24.26414 (162) obj. 410.69 iterations 38
Cbc0038I Pass 100: suminf.   22.06634 (128) obj. 410.69 iterations 168
Cbc0038I Pass 101: suminf.   17.40322 (113) obj. 410.69 iterations 81
Cbc0038I Pass 102: suminf.   17.40322 (113) obj. 410.69 iterations 5
Cbc0038I Pass 103: suminf.    9.71926 (70) obj. 410.69 iterations 127
Cbc0038I Pass 104: suminf.    9.66492 (70) obj. 410.69 iterations 9
Cbc0038I Pass 105: suminf.   10.72228 (64) obj. 410.69 iterations 114
Cbc0038I Pass 106: suminf.    8.29214 (62) obj. 410.69 iterations 89
Cbc0038I Pass 107: suminf.    3.38358 (40) obj. 410.69 iterations 70
Cbc0038I Pass 108: suminf.    3.21377 (42) obj. 410.69 iterations 52
Cbc0038I Pass 109: suminf.    8.01146 (32) obj. 410.69 iterations 137
Cbc0038I Pass 110: suminf.    8.31719 (32) obj. 410.69 iterations 26
Cbc0038I Pass 111: suminf.    6.28852 (47) obj. 410.69 iterations 89
Cbc0038I Pass 112: suminf.    4.66971 (33) obj. 410.69 iterations 168
Cbc0038I Pass 113: suminf.    3.75828 (43) obj. 410.69 iterations 71
Cbc0038I Pass 114: suminf.    7.22534 (29) obj. 410.69 iterations 120
Cbc0038I Pass 115: suminf.    3.27553 (40) obj. 410.69 iterations 100
Cbc0038I Pass 116: suminf.   11.80468 (54) obj. 410.69 iterations 95
Cbc0038I Pass 117: suminf.    7.58863 (39) obj. 410.69 iterations 48
Cbc0038I Pass 118: suminf.   12.52235 (72) obj. 410.69 iterations 161
Cbc0038I Pass 119: suminf.    5.05427 (53) obj. 410.69 iterations 84
Cbc0038I Pass 120: suminf.    3.77618 (45) obj. 410.69 iterations 41
Cbc0038I Pass 121: suminf.   14.80255 (49) obj. 410.69 iterations 185
Cbc0038I Pass 122: suminf.    9.54179 (52) obj. 410.69 iterations 122
Cbc0038I Pass 123: suminf.    6.81310 (43) obj. 410.69 iterations 36
Cbc0038I Pass 124: suminf.    6.85647 (36) obj. 410.69 iterations 124
Cbc0038I Pass 125: suminf.    3.68436 (42) obj. 410.69 iterations 54
Cbc0038I Pass 126: suminf.   13.71475 (60) obj. 410.69 iterations 183
Cbc0038I Pass 127: suminf.   13.18879 (64) obj. 410.69 iterations 21
Cbc0038I Pass 128: suminf.   12.72288 (67) obj. 410.69 iterations 13
Cbc0038I Pass 129: suminf.   12.72288 (67) obj. 410.69 iterations 11
Cbc0038I Pass 130: suminf.    9.43889 (53) obj. 410.69 iterations 124
Cbc0038I Pass 131: suminf.    8.70675 (59) obj. 410.69 iterations 31
Cbc0038I Pass 132: suminf.    7.90108 (60) obj. 410.69 iterations 128
Cbc0038I Pass 133: suminf.    7.76738 (62) obj. 410.69 iterations 27
Cbc0038I Pass 134: suminf.    3.43119 (33) obj. 410.69 iterations 126
Cbc0038I Pass 135: suminf.    3.23114 (33) obj. 410.69 iterations 25
Cbc0038I Pass 136: suminf.    6.29139 (59) obj. 410.69 iterations 200
Cbc0038I Pass 137: suminf.    5.53884 (60) obj. 410.69 iterations 38
Cbc0038I Pass 138: suminf.    8.46911 (49) obj. 410.69 iterations 121
Cbc0038I Pass 139: suminf.    7.18970 (46) obj. 410.69 iterations 167
Cbc0038I Pass 140: suminf.    6.41427 (49) obj. 410.69 iterations 215
Cbc0038I Pass 141: suminf.    3.16391 (36) obj. 410.69 iterations 48
Cbc0038I Pass 142: suminf.    7.52459 (53) obj. 410.69 iterations 84
Cbc0038I Pass 143: suminf.    7.52797 (60) obj. 410.69 iterations 60
Cbc0038I Pass 144: suminf.    4.60745 (49) obj. 410.69 iterations 153
Cbc0038I Pass 145: suminf.    4.57729 (46) obj. 410.69 iterations 8
Cbc0038I Pass 146: suminf.    6.91234 (44) obj. 410.69 iterations 144
Cbc0038I Pass 147: suminf.    5.03112 (42) obj. 410.69 iterations 84
Cbc0038I Pass 148: suminf.    5.79468 (41) obj. 410.69 iterations 109
Cbc0038I Pass 149: suminf.    3.29559 (31) obj. 410.69 iterations 404
Cbc0038I Pass 150: suminf.    4.98321 (23) obj. 410.69 iterations 90
Cbc0038I Pass 151: suminf.    4.98321 (23) obj. 410.69 iterations 10
Cbc0038I Pass 152: suminf.    5.66204 (36) obj. 410.69 iterations 107
Cbc0038I Pass 153: suminf.    3.36985 (31) obj. 410.69 iterations 33
Cbc0038I Pass 154: suminf.    7.04198 (32) obj. 410.69 iterations 99
Cbc0038I Pass 155: suminf.    7.09919 (32) obj. 410.69 iterations 28
Cbc0038I Pass 156: suminf.    6.30492 (65) obj. 410.69 iterations 185
Cbc0038I Pass 157: suminf.    7.08939 (65) obj. 410.69 iterations 18
Cbc0038I Pass 158: suminf.    7.85707 (38) obj. 410.69 iterations 148
Cbc0038I Pass 159: suminf.    5.51464 (50) obj. 410.69 iterations 163
Cbc0038I Pass 160: suminf.    7.35293 (44) obj. 410.69 iterations 434
Cbc0038I Pass 161: suminf.    4.96783 (33) obj. 410.69 iterations 73
Cbc0038I Pass 162: suminf.    2.91090 (25) obj. 410.69 iterations 37
Cbc0038I Pass 163: suminf.    9.57098 (38) obj. 410.69 iterations 83
Cbc0038I Pass 164: suminf.    8.05288 (30) obj. 410.69 iterations 22
Cbc0038I Pass 165: suminf.    7.69928 (33) obj. 410.69 iterations 51
Cbc0038I Pass 166: suminf.    6.03195 (38) obj. 410.69 iterations 294
Cbc0038I Pass 167: suminf.    5.41779 (33) obj. 410.69 iterations 82
Cbc0038I Pass 168: suminf.    4.97674 (26) obj. 410.69 iterations 57
Cbc0038I Pass 169: suminf.    5.45491 (42) obj. 410.69 iterations 143
Cbc0038I Pass 170: suminf.    5.42824 (44) obj. 410.69 iterations 38
Cbc0038I Pass 171: suminf.    7.56509 (60) obj. 410.69 iterations 168
Cbc0038I Pass 172: suminf.    7.60202 (59) obj. 410.69 iterations 8
Cbc0038I Pass 173: suminf.    3.31572 (28) obj. 410.69 iterations 111
Cbc0038I Pass 174: suminf.    3.31572 (28) obj. 410.69 iterations 21
Cbc0038I Pass 175: suminf.    3.76750 (14) obj. 410.69 iterations 53
Cbc0038I Pass 176: suminf.    3.43893 (19) obj. 410.69 iterations 79
Cbc0038I Pass 177: suminf.    6.93470 (78) obj. 410.69 iterations 252
Cbc0038I Pass 178: suminf.    5.78924 (31) obj. 410.69 iterations 89
Cbc0038I Pass 179: suminf.    4.90184 (26) obj. 410.69 iterations 90
Cbc0038I Pass 180: suminf.    5.46248 (26) obj. 410.69 iterations 53
Cbc0038I Pass 181: suminf.    5.46350 (26) obj. 410.69 iterations 207
Cbc0038I Pass 182: suminf.    3.69743 (25) obj. 410.69 iterations 71
Cbc0038I Pass 183: suminf.    5.30476 (39) obj. 410.69 iterations 152
Cbc0038I Pass 184: suminf.    5.19007 (37) obj. 410.69 iterations 46
Cbc0038I Pass 185: suminf.    3.83014 (33) obj. 410.69 iterations 107
Cbc0038I Pass 186: suminf.    3.16413 (32) obj. 410.69 iterations 19
Cbc0038I Pass 187: suminf.   37.78126 (180) obj. 410.69 iterations 349
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1378 rows 486 columns, reduced to 1266 rows 430 columns - 49 fixed gives 985, 317 - still too large
Cbc0038I Full problem 1378 rows 486 columns, reduced to 336 rows 108 columns
Cbc0038I Mini branch and bound did not improve solution (1.68 seconds)
Cbc0038I After 1.68 seconds - Feasibility pump exiting with objective of 445 - took 1.45 seconds
Cbc0012I Integer solution of 445 found by feasibility pump after 0 iterations and 0 nodes (1.68 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 997 rows 297 columns - 45 fixed gives 774, 216 - still too large
Cbc0038I Full problem 1378 rows 486 columns, reduced to 28 rows 14 columns
Cbc0031I 35 added rows had average density of 177.71429
Cbc0013I At root node, 35 cuts changed objective from 277.44937 to 297.99993 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 114 row cuts average 2.6 elements, 5 column cuts (5 active)  in 0.293 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 844 row cuts average 443.9 elements, 0 column cuts (0 active)  in 1.228 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 407 row cuts average 149.1 elements, 0 column cuts (0 active)  in 0.440 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 82 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.601 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 445 best solution, best possible 298 (7.48 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 982 rows 295 columns - 44 fixed gives 768, 215 - still too large
Cbc0038I Full problem 1378 rows 486 columns, reduced to 34 rows 14 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 904 rows 269 columns - 42 fixed gives 693, 190 - ok now
Cbc0038I Full problem 1378 rows 486 columns, reduced to 18 rows 7 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 803 rows 240 columns - 42 fixed gives 556, 150 - ok now
Cbc0038I Full problem 1378 rows 486 columns, reduced to 33 rows 14 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 349 rows 114 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 354 rows 117 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 753 rows 229 columns - 39 fixed gives 522, 139 - ok now
Cbc0038I Full problem 1378 rows 486 columns, reduced to 63 rows 23 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 268 rows 89 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 320 rows 104 columns
Cbc0010I After 1000 nodes, 12 on tree, 445 best solution, best possible 316 (52.81 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 205 rows 68 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 234 rows 77 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 314 rows 102 columns
Cbc0010I After 2000 nodes, 14 on tree, 445 best solution, best possible 316 (77.61 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 294 rows 86 columns
Cbc0010I After 3000 nodes, 16 on tree, 445 best solution, best possible 316 (97.07 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 230 rows 80 columns
Cbc0010I After 4000 nodes, 15 on tree, 445 best solution, best possible 316 (114.08 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 223 rows 75 columns
Cbc0038I Full problem 1378 rows 486 columns, reduced to 158 rows 52 columns
Cbc0010I After 5000 nodes, 22 on tree, 445 best solution, best possible 316 (129.70 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 311 rows 103 columns
Cbc0010I After 6000 nodes, 24 on tree, 445 best solution, best possible 316 (148.18 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 150 rows 50 columns
Cbc0010I After 7000 nodes, 20 on tree, 445 best solution, best possible 316 (166.96 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 312 rows 102 columns
Cbc0010I After 8000 nodes, 17 on tree, 445 best solution, best possible 316 (183.75 seconds)
Cbc0016I Integer solution of 389 found by strong branching after 1440360 iterations and 8252 nodes (188.77 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 198 rows 68 columns
Cbc0010I After 9000 nodes, 10 on tree, 389 best solution, best possible 316 (204.89 seconds)
Cbc0010I After 10000 nodes, 17 on tree, 389 best solution, best possible 316 (221.87 seconds)
Cbc0038I Full problem 1378 rows 486 columns, reduced to 67 rows 26 columns
Cbc0010I After 11000 nodes, 15 on tree, 389 best solution, best possible 316 (237.56 seconds)
Cbc0010I After 12000 nodes, 6 on tree, 389 best solution, best possible 380 (254.46 seconds)
Cbc0001I Search completed - best objective 389, took 2015497 iterations and 12027 nodes (254.89 seconds)
Cbc0032I Strong branching done 24410 times (1012964 iterations), fathomed 1002 nodes and fixed 3646 variables
Cbc0035I Maximum depth 105, 0 variables fixed on reduced cost
Cuts at root node changed objective from 277.449 to 298
Probing was tried 2167 times and created 69568 cuts of which 0 were active after adding rounds of cuts (2.365 seconds)
Gomory was tried 1540 times and created 2349 cuts of which 0 were active after adding rounds of cuts (2.382 seconds)
Knapsack was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
FlowCover was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
TwoMirCuts was tried 1540 times and created 13181 cuts of which 0 were active after adding rounds of cuts (1.223 seconds)
ZeroHalf was tried 1540 times and created 2342 cuts of which 0 were active after adding rounds of cuts (4.144 seconds)
ImplicationCuts was tried 48 times and created 86 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                389.00000000
Enumerated nodes:               12027
Total iterations:               2015497
Time (CPU seconds):             254.94
Time (Wallclock seconds):       255.38

Total time (CPU seconds):       254.94   (Wallclock seconds):       255.39

