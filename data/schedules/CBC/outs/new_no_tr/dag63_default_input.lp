Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/dag63_default_input.lp sec 1800 solve solu solutions/new_no_tr/dag63_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 823311 - 1.05 seconds
Cgl0002I 137 variables fixed
Cgl0003I 0 fixed, 21 tightened bounds, 1008 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 467 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 4 tightened bounds, 165 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 4919 rows, 1657 columns (1657 integer (1620 of which binary)) and 16330 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1657 objects (1657 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 827 integers unsatisfied sum - 212.292
Cbc0038I Pass   1: (3.76 seconds) suminf.  107.11950 (865) obj. 998716 iterations 2217
Cbc0038I Pass   2: (4.02 seconds) suminf.   86.94872 (909) obj. 1.081e+06 iterations 944
Cbc0038I Pass   3: (4.13 seconds) suminf.   90.43282 (908) obj. 1.12969e+06 iterations 313
Cbc0038I Pass   4: (4.22 seconds) suminf.   88.19117 (914) obj. 1.13478e+06 iterations 228
Cbc0038I Pass   5: (4.25 seconds) suminf.   87.92347 (911) obj. 1.14701e+06 iterations 60
Cbc0038I Pass   6: (4.36 seconds) suminf.   85.89779 (894) obj. 1.14179e+06 iterations 394
Cbc0038I Pass   7: (4.41 seconds) suminf.   84.49455 (886) obj. 1.14823e+06 iterations 130
Cbc0038I Pass   8: (4.48 seconds) suminf.   84.11656 (900) obj. 1.14989e+06 iterations 181
Cbc0038I Pass   9: (4.63 seconds) suminf.   82.09272 (873) obj. 1.14985e+06 iterations 490
Cbc0038I Pass  10: (4.68 seconds) suminf.   79.85070 (886) obj. 1.1665e+06 iterations 133
Cbc0038I Pass  11: (4.83 seconds) suminf.   77.67007 (879) obj. 1.24341e+06 iterations 438
Cbc0038I Pass  12: (4.95 seconds) suminf.   75.42421 (879) obj. 1.28159e+06 iterations 346
Cbc0038I Pass  13: (5.05 seconds) suminf.   74.05402 (898) obj. 1.36124e+06 iterations 304
Cbc0038I Pass  14: (5.10 seconds) suminf.   73.33782 (898) obj. 1.36176e+06 iterations 125
Cbc0038I Pass  15: (5.27 seconds) suminf.   72.77740 (869) obj. 1.35355e+06 iterations 542
Cbc0038I Pass  16: (5.37 seconds) suminf.   72.44662 (867) obj. 1.36344e+06 iterations 335
Cbc0038I Pass  17: (5.49 seconds) suminf.   73.69599 (856) obj. 1.36138e+06 iterations 385
Cbc0038I Pass  18: (5.61 seconds) suminf.   72.22664 (854) obj. 1.3618e+06 iterations 347
Cbc0038I Pass  19: (5.70 seconds) suminf.   73.48551 (860) obj. 1.35819e+06 iterations 218
Cbc0038I Pass  20: (5.77 seconds) suminf.   72.58591 (858) obj. 1.36282e+06 iterations 194
Cbc0038I Pass  21: (5.88 seconds) suminf.   72.73702 (854) obj. 1.35081e+06 iterations 320
Cbc0038I Pass  22: (6.43 seconds) suminf.  135.66490 (924) obj. 1.64498e+06 iterations 2101
Cbc0038I Pass  23: (6.84 seconds) suminf.   87.28593 (896) obj. 1.77231e+06 iterations 1525
Cbc0038I Pass  24: (6.94 seconds) suminf.   84.34345 (905) obj. 1.76596e+06 iterations 285
Cbc0038I Pass  25: (6.98 seconds) suminf.   81.26031 (913) obj. 1.76699e+06 iterations 101
Cbc0038I Pass  26: (7.17 seconds) suminf.   76.34563 (923) obj. 1.77842e+06 iterations 616
Cbc0038I Pass  27: (7.25 seconds) suminf.   76.15881 (923) obj. 1.76251e+06 iterations 184
Cbc0038I Pass  28: (7.37 seconds) suminf.   73.25503 (898) obj. 1.77118e+06 iterations 359
Cbc0038I Pass  29: (7.46 seconds) suminf.   75.83562 (920) obj. 1.77003e+06 iterations 211
Cbc0038I Pass  30: (7.60 seconds) suminf.   76.35663 (917) obj. 1.73972e+06 iterations 439
Cbc0038I Pass  31: (7.66 seconds) suminf.   76.94421 (915) obj. 1.74033e+06 iterations 156
Cbc0038I Pass  32: (7.70 seconds) suminf.   77.20265 (928) obj. 1.74018e+06 iterations 96
Cbc0038I Pass  33: (7.85 seconds) suminf.   77.92871 (927) obj. 1.77841e+06 iterations 444
Cbc0038I Pass  34: (7.95 seconds) suminf.   78.48504 (948) obj. 1.77776e+06 iterations 258
Cbc0038I Pass  35: (8.11 seconds) suminf.   75.22734 (898) obj. 1.75082e+06 iterations 541
Cbc0038I Pass  36: (8.18 seconds) suminf.   75.07886 (919) obj. 1.74827e+06 iterations 170
Cbc0038I Pass  37: (8.31 seconds) suminf.   74.55858 (913) obj. 1.78299e+06 iterations 384
Cbc0038I Pass  38: (8.36 seconds) suminf.   75.54813 (910) obj. 1.78224e+06 iterations 131
Cbc0038I Pass  39: (8.47 seconds) suminf.   74.96348 (909) obj. 1.74805e+06 iterations 321
Cbc0038I Pass  40: (8.52 seconds) suminf.   75.82075 (904) obj. 1.74824e+06 iterations 114
Cbc0038I Pass  41: (8.62 seconds) suminf.   75.79879 (917) obj. 1.74868e+06 iterations 239
Cbc0038I Pass  42: (8.67 seconds) suminf.   77.11882 (934) obj. 1.74875e+06 iterations 126
Cbc0038I Pass  43: (8.83 seconds) suminf.   73.27178 (911) obj. 1.7843e+06 iterations 484
Cbc0038I Pass  44: (8.87 seconds) suminf.   74.42990 (909) obj. 1.78396e+06 iterations 117
Cbc0038I Pass  45: (8.93 seconds) suminf.   72.16442 (892) obj. 1.78373e+06 iterations 162
Cbc0038I Pass  46: (8.98 seconds) suminf.   73.26613 (895) obj. 1.78204e+06 iterations 153
Cbc0038I Pass  47: (9.05 seconds) suminf.   71.63007 (883) obj. 1.78478e+06 iterations 164
Cbc0038I Pass  48: (9.11 seconds) suminf.   73.62340 (893) obj. 1.78381e+06 iterations 163
Cbc0038I Pass  49: (9.19 seconds) suminf.   71.49662 (886) obj. 1.78417e+06 iterations 225
Cbc0038I Pass  50: (9.24 seconds) suminf.   74.05028 (898) obj. 1.78442e+06 iterations 140
Cbc0038I Pass  51: (9.30 seconds) suminf.   73.36909 (895) obj. 1.78416e+06 iterations 142
Cbc0038I Pass  52: (9.62 seconds) suminf.  102.87143 (874) obj. 1.80356e+06 iterations 1273
Cbc0038I Pass  53: (9.83 seconds) suminf.   76.56507 (874) obj. 1.83253e+06 iterations 894
Cbc0038I Pass  54: (9.89 seconds) suminf.   76.43752 (889) obj. 1.8341e+06 iterations 152
Cbc0038I Pass  55: (10.02 seconds) suminf.   77.52515 (880) obj. 1.86273e+06 iterations 432
Cbc0038I Pass  56: (10.11 seconds) suminf.   76.10375 (884) obj. 1.8388e+06 iterations 270
Cbc0038I Pass  57: (10.12 seconds) suminf.   75.67996 (881) obj. 1.83731e+06 iterations 36
Cbc0038I Pass  58: (10.24 seconds) suminf.   77.07313 (881) obj. 1.86375e+06 iterations 410
Cbc0038I Pass  59: (10.32 seconds) suminf.   76.54100 (876) obj. 1.85182e+06 iterations 240
Cbc0038I Pass  60: (10.34 seconds) suminf.   76.46817 (874) obj. 1.84666e+06 iterations 60
Cbc0038I Pass  61: (10.47 seconds) suminf.   78.08585 (864) obj. 1.86828e+06 iterations 534
Cbc0038I Pass  62: (10.58 seconds) suminf.   77.33231 (860) obj. 1.83055e+06 iterations 344
Cbc0038I Pass  63: (10.60 seconds) suminf.   77.13093 (862) obj. 1.83267e+06 iterations 66
Cbc0038I Pass  64: (10.72 seconds) suminf.   77.37080 (873) obj. 1.85554e+06 iterations 378
Cbc0038I Pass  65: (10.77 seconds) suminf.   77.01673 (873) obj. 1.84748e+06 iterations 124
Cbc0038I Pass  66: (10.89 seconds) suminf.   78.50933 (867) obj. 1.86952e+06 iterations 453
Cbc0038I Pass  67: (10.97 seconds) suminf.   76.67280 (862) obj. 1.82992e+06 iterations 221
Cbc0038I Pass  68: (11.02 seconds) suminf.   76.00732 (872) obj. 1.82771e+06 iterations 144
Cbc0038I Pass  69: (11.19 seconds) suminf.   76.22829 (883) obj. 1.86324e+06 iterations 545
Cbc0038I Pass  70: (11.29 seconds) suminf.   76.22244 (885) obj. 1.8506e+06 iterations 341
Cbc0038I Pass  71: (11.32 seconds) suminf.   76.28053 (881) obj. 1.84971e+06 iterations 102
Cbc0038I Pass  72: (11.42 seconds) suminf.   76.29253 (872) obj. 1.86408e+06 iterations 375
Cbc0038I Pass  73: (11.48 seconds) suminf.   75.71081 (870) obj. 1.84133e+06 iterations 201
Cbc0038I Pass  74: (11.59 seconds) suminf.   76.32573 (894) obj. 1.85865e+06 iterations 333
Cbc0038I Pass  75: (11.66 seconds) suminf.   76.32369 (883) obj. 1.84357e+06 iterations 219
Cbc0038I Pass  76: (11.78 seconds) suminf.   76.51123 (884) obj. 1.86553e+06 iterations 445
Cbc0038I Pass  77: (12.16 seconds) suminf.  106.50997 (842) obj. 1.937e+06 iterations 1470
Cbc0038I Pass  78: (12.47 seconds) suminf.   76.49983 (865) obj. 1.90709e+06 iterations 1077
Cbc0038I Pass  79: (12.54 seconds) suminf.   76.43134 (887) obj. 1.94383e+06 iterations 215
Cbc0038I Pass  80: (12.62 seconds) suminf.   75.49017 (887) obj. 1.93041e+06 iterations 176
Cbc0038I Pass  81: (12.70 seconds) suminf.   74.66904 (910) obj. 1.93143e+06 iterations 227
Cbc0038I Pass  82: (12.80 seconds) suminf.   75.16473 (876) obj. 1.92124e+06 iterations 282
Cbc0038I Pass  83: (12.88 seconds) suminf.   73.70936 (880) obj. 1.92505e+06 iterations 228
Cbc0038I Pass  84: (12.94 seconds) suminf.   74.36997 (905) obj. 1.92598e+06 iterations 156
Cbc0038I Pass  85: (13.05 seconds) suminf.   72.94109 (904) obj. 1.9168e+06 iterations 333
Cbc0038I Pass  86: (13.15 seconds) suminf.   73.90668 (917) obj. 1.92307e+06 iterations 277
Cbc0038I Pass  87: (13.27 seconds) suminf.   80.48301 (890) obj. 1.91334e+06 iterations 380
Cbc0038I Pass  88: (13.37 seconds) suminf.   77.03911 (892) obj. 1.91231e+06 iterations 260
Cbc0038I Pass  89: (13.46 seconds) suminf.   74.38240 (922) obj. 1.91263e+06 iterations 253
Cbc0038I Pass  90: (13.59 seconds) suminf.   75.62780 (868) obj. 1.91169e+06 iterations 403
Cbc0038I Pass  91: (13.68 seconds) suminf.   73.90034 (875) obj. 1.91256e+06 iterations 263
Cbc0038I Pass  92: (13.69 seconds) suminf.   74.04838 (874) obj. 1.91262e+06 iterations 40
Cbc0038I Pass  93: (13.78 seconds) suminf.   76.42243 (881) obj. 1.93289e+06 iterations 242
Cbc0038I Pass  94: (13.86 seconds) suminf.   74.85190 (870) obj. 1.93731e+06 iterations 201
Cbc0038I Pass  95: (13.88 seconds) suminf.   74.61515 (890) obj. 1.93595e+06 iterations 50
Cbc0038I Pass  96: (13.98 seconds) suminf.   76.58735 (888) obj. 1.93802e+06 iterations 317
Cbc0038I Pass  97: (14.10 seconds) suminf.   73.94505 (896) obj. 1.94061e+06 iterations 354
Cbc0038I Pass  98: (14.12 seconds) suminf.   73.66498 (896) obj. 1.93726e+06 iterations 40
Cbc0038I Pass  99: (14.23 seconds) suminf.   75.06644 (866) obj. 1.94234e+06 iterations 321
Cbc0038I Pass 100: (14.52 seconds) suminf.  101.92792 (845) obj. 1.87839e+06 iterations 1190
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 109 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4919 rows 1657 columns, reduced to 4684 rows 1545 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.83 seconds)
Cbc0038I After 14.83 seconds - Feasibility pump exiting - took 11.76 seconds
Cbc0031I 37 added rows had average density of 6.0810811
Cbc0013I At root node, 37 cuts changed objective from 835012.46 to 1130496 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 176 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.445 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 124 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.243 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 5 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.421 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1130496 (25.31 seconds)
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 1130496 (130.58 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 1130496 (283.10 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 1130496 (420.75 seconds)
Cbc0010I After 400 nodes, 6 on tree, 1e+50 best solution, best possible 1130496 (532.71 seconds)
Cbc0010I After 500 nodes, 6 on tree, 1e+50 best solution, best possible 1130496 (614.32 seconds)
Cbc0010I After 600 nodes, 43 on tree, 1e+50 best solution, best possible 1130496 (701.82 seconds)
Cbc0010I After 700 nodes, 69 on tree, 1e+50 best solution, best possible 1130496 (777.40 seconds)
Cbc0010I After 800 nodes, 94 on tree, 1e+50 best solution, best possible 1130496 (873.03 seconds)
Cbc0010I After 900 nodes, 93 on tree, 1e+50 best solution, best possible 1130496 (977.49 seconds)
Cbc0010I After 1000 nodes, 94 on tree, 1e+50 best solution, best possible 1130496 (1052.82 seconds)
Cbc0010I After 1100 nodes, 109 on tree, 1e+50 best solution, best possible 1130496 (1167.79 seconds)
Cbc0010I After 1200 nodes, 104 on tree, 1e+50 best solution, best possible 1130496 (1321.78 seconds)
Cbc0010I After 1300 nodes, 99 on tree, 1e+50 best solution, best possible 1130496 (1464.47 seconds)
Cbc0010I After 1400 nodes, 133 on tree, 1e+50 best solution, best possible 1130496 (1553.97 seconds)
Cbc0010I After 1500 nodes, 119 on tree, 1e+50 best solution, best possible 1130496 (1674.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1130496), took 3621095 iterations and 1591 nodes (1798.58 seconds)
Cbc0032I Strong branching done 17732 times (1484033 iterations), fathomed 86 nodes and fixed 1767 variables
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost
Cuts at root node changed objective from 835012 to 1.1305e+06
Probing was tried 1231 times and created 40212 cuts of which 0 were active after adding rounds of cuts (7.511 seconds)
Gomory was tried 1193 times and created 986 cuts of which 0 were active after adding rounds of cuts (8.756 seconds)
Knapsack was tried 1193 times and created 1489 cuts of which 0 were active after adding rounds of cuts (2.059 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 1193 times and created 10178 cuts of which 0 were active after adding rounds of cuts (2.912 seconds)
ZeroHalf was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.421 seconds)
ImplicationCuts was tried 119 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1130496.000
Enumerated nodes:               1591
Total iterations:               3621095
Time (CPU seconds):             1798.58
Time (Wallclock seconds):       1803.90

Total time (CPU seconds):       1798.60   (Wallclock seconds):       1803.92

