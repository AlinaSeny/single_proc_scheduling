Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump40_up_right_input.lp sec 1800 solve solu solutions/new_no_tr/jump40_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32768 - 0.60 seconds
Cgl0002I 144 variables fixed
Cgl0003I 0 fixed, 11 tightened bounds, 887 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 9 tightened bounds, 270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 5142 rows, 1510 columns (1510 integer (1469 of which binary)) and 17895 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1510 objects (1510 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 900 integers unsatisfied sum - 325.563
Cbc0038I Pass   1: (3.56 seconds) suminf.  143.42645 (918) obj. 57949.3 iterations 2793
Cbc0038I Pass   2: (3.92 seconds) suminf.   84.51412 (890) obj. 61607 iterations 1285
Cbc0038I Pass   3: (4.19 seconds) suminf.   75.64098 (914) obj. 59841.5 iterations 944
Cbc0038I Pass   4: (4.24 seconds) suminf.   76.41920 (920) obj. 61024.9 iterations 112
Cbc0038I Pass   5: (4.53 seconds) suminf.   62.33429 (929) obj. 67141.9 iterations 971
Cbc0038I Pass   6: (4.73 seconds) suminf.   50.27407 (950) obj. 67721.9 iterations 666
Cbc0038I Pass   7: (4.86 seconds) suminf.   49.15274 (982) obj. 67682.6 iterations 372
Cbc0038I Pass   8: (5.11 seconds) suminf.   50.10673 (979) obj. 68050.2 iterations 771
Cbc0038I Pass   9: (5.20 seconds) suminf.   48.99507 (980) obj. 67832 iterations 230
Cbc0038I Pass  10: (5.24 seconds) suminf.   47.63914 (984) obj. 67776.8 iterations 95
Cbc0038I Pass  11: (5.32 seconds) suminf.   47.00670 (998) obj. 67718.4 iterations 188
Cbc0038I Pass  12: (5.47 seconds) suminf.   49.25279 (986) obj. 67739.2 iterations 491
Cbc0038I Pass  13: (5.62 seconds) suminf.   46.36306 (980) obj. 67757 iterations 477
Cbc0038I Pass  14: (5.82 seconds) suminf.   51.73130 (1009) obj. 67744.2 iterations 748
Cbc0038I Pass  15: (5.97 seconds) suminf.   47.82031 (1010) obj. 67803.4 iterations 581
Cbc0038I Pass  16: (6.07 seconds) suminf.   46.55410 (1016) obj. 67884.3 iterations 327
Cbc0038I Pass  17: (6.16 seconds) suminf.   46.39128 (1012) obj. 67936.4 iterations 262
Cbc0038I Pass  18: (6.38 seconds) suminf.   46.10332 (1010) obj. 67821.8 iterations 790
Cbc0038I Pass  19: (6.51 seconds) suminf.   45.40117 (1004) obj. 67584.8 iterations 405
Cbc0038I Pass  20: (6.68 seconds) suminf.   46.60841 (989) obj. 67819.2 iterations 549
Cbc0038I Pass  21: (6.78 seconds) suminf.   45.77759 (984) obj. 67784.5 iterations 319
Cbc0038I Pass  22: (6.97 seconds) suminf.   47.60309 (1015) obj. 67762.5 iterations 623
Cbc0038I Pass  23: (7.12 seconds) suminf.   46.31686 (1014) obj. 67690.9 iterations 446
Cbc0038I Pass  24: (7.30 seconds) suminf.   46.72803 (1034) obj. 67816.4 iterations 615
Cbc0038I Pass  25: (7.47 seconds) suminf.   45.46483 (1006) obj. 67641.8 iterations 541
Cbc0038I Pass  26: (7.68 seconds) suminf.   45.63579 (1012) obj. 67814.2 iterations 667
Cbc0038I Pass  27: (7.83 seconds) suminf.   44.86941 (970) obj. 67726 iterations 486
Cbc0038I Pass  28: (7.91 seconds) suminf.   45.55636 (998) obj. 67729.4 iterations 248
Cbc0038I Pass  29: (8.12 seconds) suminf.   47.69253 (1011) obj. 67884.2 iterations 671
Cbc0038I Pass  30: (8.30 seconds) suminf.   45.04143 (975) obj. 67730.8 iterations 496
Cbc0038I Pass  31: (8.50 seconds) suminf.   46.11144 (1005) obj. 67708.1 iterations 600
Cbc0038I Pass  32: (8.60 seconds) suminf.   45.37192 (1008) obj. 67663.1 iterations 268
Cbc0038I Pass  33: (8.85 seconds) suminf.   45.61436 (1010) obj. 67636 iterations 743
Cbc0038I Pass  34: (8.98 seconds) suminf.   44.17902 (1040) obj. 67565.2 iterations 315
Cbc0038I Pass  35: (9.08 seconds) suminf.   43.29547 (1030) obj. 67558.9 iterations 239
Cbc0038I Pass  36: (9.29 seconds) suminf.   46.01338 (992) obj. 67598.1 iterations 673
Cbc0038I Pass  37: (9.43 seconds) suminf.   45.16268 (988) obj. 67691.8 iterations 462
Cbc0038I Pass  38: (9.51 seconds) suminf.   44.75127 (1010) obj. 67735.2 iterations 215
Cbc0038I Pass  39: (9.59 seconds) suminf.   43.98838 (979) obj. 67665.2 iterations 187
Cbc0038I Pass  40: (9.79 seconds) suminf.   47.48760 (1010) obj. 67803.9 iterations 683
Cbc0038I Pass  41: (9.92 seconds) suminf.   43.02449 (1013) obj. 67824.9 iterations 500
Cbc0038I Pass  42: (10.15 seconds) suminf.   47.19197 (1006) obj. 67946.9 iterations 769
Cbc0038I Pass  43: (10.37 seconds) suminf.   44.63648 (1030) obj. 67694.9 iterations 730
Cbc0038I Pass  44: (10.56 seconds) suminf.   44.47234 (963) obj. 67692.2 iterations 650
Cbc0038I Pass  45: (10.73 seconds) suminf.   44.60010 (1014) obj. 67679.6 iterations 580
Cbc0038I Pass  46: (10.91 seconds) suminf.   46.01724 (1006) obj. 67651 iterations 572
Cbc0038I Pass  47: (11.04 seconds) suminf.   44.15728 (1036) obj. 67646.7 iterations 429
Cbc0038I Pass  48: (11.27 seconds) suminf.   45.38549 (986) obj. 67701.8 iterations 799
Cbc0038I Pass  49: (11.39 seconds) suminf.   44.54564 (971) obj. 67694.3 iterations 361
Cbc0038I Pass  50: (11.46 seconds) suminf.   44.32043 (987) obj. 67698.4 iterations 180
Cbc0038I Pass  51: (11.64 seconds) suminf.   46.32753 (1019) obj. 67662.3 iterations 571
Cbc0038I Pass  52: (11.80 seconds) suminf.   44.95876 (997) obj. 67620.1 iterations 516
Cbc0038I Pass  53: (11.86 seconds) suminf.   44.82976 (986) obj. 67653.3 iterations 120
Cbc0038I Pass  54: (12.03 seconds) suminf.   46.84467 (1028) obj. 67687.4 iterations 556
Cbc0038I Pass  55: (12.21 seconds) suminf.   46.37853 (987) obj. 67597.8 iterations 573
Cbc0038I Pass  56: (12.37 seconds) suminf.   45.83013 (1041) obj. 67752.8 iterations 497
Cbc0038I Pass  57: (12.54 seconds) suminf.   46.79232 (997) obj. 67678.5 iterations 551
Cbc0038I Pass  58: (12.72 seconds) suminf.   45.77229 (1041) obj. 67669.2 iterations 558
Cbc0038I Pass  59: (13.03 seconds) suminf.   67.37457 (956) obj. 80981.2 iterations 1419
Cbc0038I Pass  60: (13.26 seconds) suminf.   50.10715 (970) obj. 80958.4 iterations 998
Cbc0038I Pass  61: (13.34 seconds) suminf.   49.21299 (974) obj. 80915.8 iterations 213
Cbc0038I Pass  62: (13.55 seconds) suminf.   46.29721 (981) obj. 79566 iterations 733
Cbc0038I Pass  63: (13.65 seconds) suminf.   47.52411 (984) obj. 79563.1 iterations 258
Cbc0038I Pass  64: (13.89 seconds) suminf.   53.49996 (940) obj. 79598.2 iterations 845
Cbc0038I Pass  65: (14.01 seconds) suminf.   51.20830 (968) obj. 79411.4 iterations 333
Cbc0038I Pass  66: (14.20 seconds) suminf.   49.96532 (1013) obj. 79513.2 iterations 584
Cbc0038I Pass  67: (14.29 seconds) suminf.   47.75776 (1005) obj. 79515.7 iterations 225
Cbc0038I Pass  68: (14.39 seconds) suminf.   44.93214 (986) obj. 79542.8 iterations 247
Cbc0038I Pass  69: (14.59 seconds) suminf.   47.90938 (946) obj. 79803.8 iterations 640
Cbc0038I Pass  70: (14.72 seconds) suminf.   46.68977 (986) obj. 79599.9 iterations 384
Cbc0038I Pass  71: (14.81 seconds) suminf.   45.58820 (1005) obj. 79609.9 iterations 215
Cbc0038I Pass  72: (14.97 seconds) suminf.   46.90486 (1006) obj. 79634.8 iterations 463
Cbc0038I Pass  73: (15.10 seconds) suminf.   45.07039 (994) obj. 79559 iterations 342
Cbc0038I Pass  74: (15.29 seconds) suminf.   46.96618 (986) obj. 79550.6 iterations 574
Cbc0038I Pass  75: (15.42 seconds) suminf.   45.23508 (1000) obj. 79535.8 iterations 346
Cbc0038I Pass  76: (15.65 seconds) suminf.   50.18057 (960) obj. 79751.9 iterations 752
Cbc0038I Pass  77: (15.83 seconds) suminf.   47.34681 (962) obj. 79616.9 iterations 517
Cbc0038I Pass  78: (16.04 seconds) suminf.   46.78377 (977) obj. 79711.7 iterations 634
Cbc0038I Pass  79: (16.17 seconds) suminf.   44.72747 (1017) obj. 79491.6 iterations 337
Cbc0038I Pass  80: (16.35 seconds) suminf.   43.97703 (1005) obj. 79723.5 iterations 484
Cbc0038I Pass  81: (16.49 seconds) suminf.   44.49237 (994) obj. 79435.6 iterations 415
Cbc0038I Pass  82: (16.55 seconds) suminf.   44.41306 (1002) obj. 79430.8 iterations 126
Cbc0038I Pass  83: (16.77 seconds) suminf.   47.00354 (957) obj. 79840.2 iterations 642
Cbc0038I Pass  84: (16.92 seconds) suminf.   47.23474 (1003) obj. 79507.4 iterations 431
Cbc0038I Pass  85: (17.18 seconds) suminf.   47.40317 (951) obj. 79427.1 iterations 793
Cbc0038I Pass  86: (17.27 seconds) suminf.   45.55516 (975) obj. 79455.6 iterations 252
Cbc0038I Pass  87: (17.34 seconds) suminf.   45.65065 (982) obj. 79529.3 iterations 171
Cbc0038I Pass  88: (17.42 seconds) suminf.   44.23234 (981) obj. 79513.3 iterations 184
Cbc0038I Pass  89: (17.47 seconds) suminf.   43.83507 (978) obj. 79512.1 iterations 138
Cbc0038I Pass  90: (17.50 seconds) suminf.   43.64797 (978) obj. 79515 iterations 54
Cbc0038I Pass  91: (17.70 seconds) suminf.   46.79022 (978) obj. 79663.9 iterations 605
Cbc0038I Pass  92: (17.85 seconds) suminf.   41.70871 (990) obj. 79553.2 iterations 417
Cbc0038I Pass  93: (18.06 seconds) suminf.   49.84142 (935) obj. 79710.7 iterations 665
Cbc0038I Pass  94: (18.26 seconds) suminf.   44.87972 (970) obj. 79476.9 iterations 564
Cbc0038I Pass  95: (18.34 seconds) suminf.   46.05995 (965) obj. 79454.2 iterations 190
Cbc0038I Pass  96: (18.57 seconds) suminf.   48.42805 (962) obj. 79709.1 iterations 738
Cbc0038I Pass  97: (18.69 seconds) suminf.   46.22323 (980) obj. 79715.2 iterations 367
Cbc0038I Pass  98: (18.90 seconds) suminf.   45.95735 (970) obj. 79555.2 iterations 656
Cbc0038I Pass  99: (19.06 seconds) suminf.   46.73674 (937) obj. 79535.6 iterations 492
Cbc0038I Pass 100: (19.45 seconds) suminf.   74.78650 (969) obj. 76551.3 iterations 1495
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5142 rows 1510 columns, reduced to 5008 rows 1457 columns - too large
Cbc0038I Mini branch and bound did not improve solution (21.20 seconds)
Cbc0038I After 21.20 seconds - Feasibility pump exiting - took 18.45 seconds
Cbc0031I 140 added rows had average density of 6.2714286
Cbc0013I At root node, 140 cuts changed objective from 32768 to 48128 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 274 row cuts average 3.5 elements, 8 column cuts (20 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 359 row cuts average 47.7 elements, 0 column cuts (0 active)  in 1.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 6 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 619 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.385 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 53 row cuts average 17.9 elements, 0 column cuts (0 active)  in 1.093 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 48128 (63.82 seconds)
Cbc0010I After 100 nodes, 29 on tree, 1e+50 best solution, best possible 48128 (171.24 seconds)
Cbc0010I After 200 nodes, 36 on tree, 1e+50 best solution, best possible 48128 (259.07 seconds)
Cbc0010I After 300 nodes, 43 on tree, 1e+50 best solution, best possible 48128 (349.85 seconds)
Cbc0010I After 400 nodes, 47 on tree, 1e+50 best solution, best possible 48128 (434.10 seconds)
Cbc0010I After 500 nodes, 46 on tree, 1e+50 best solution, best possible 48128 (526.51 seconds)
Cbc0010I After 600 nodes, 52 on tree, 1e+50 best solution, best possible 48128 (633.15 seconds)
Cbc0010I After 700 nodes, 51 on tree, 1e+50 best solution, best possible 48128 (720.09 seconds)
Cbc0010I After 800 nodes, 46 on tree, 1e+50 best solution, best possible 48128 (803.31 seconds)
Cbc0010I After 900 nodes, 77 on tree, 1e+50 best solution, best possible 48128 (912.41 seconds)
Cbc0010I After 1000 nodes, 90 on tree, 1e+50 best solution, best possible 48128 (1033.93 seconds)
Cbc0010I After 1100 nodes, 83 on tree, 1e+50 best solution, best possible 48128 (1142.14 seconds)
Cbc0010I After 1200 nodes, 68 on tree, 1e+50 best solution, best possible 48128 (1236.57 seconds)
Cbc0010I After 1300 nodes, 50 on tree, 1e+50 best solution, best possible 48128 (1351.11 seconds)
Cbc0010I After 1400 nodes, 50 on tree, 1e+50 best solution, best possible 48128 (1443.48 seconds)
Cbc0010I After 1500 nodes, 48 on tree, 1e+50 best solution, best possible 48128 (1526.81 seconds)
Cbc0010I After 1600 nodes, 42 on tree, 1e+50 best solution, best possible 48128 (1616.00 seconds)
Cbc0010I After 1700 nodes, 33 on tree, 1e+50 best solution, best possible 48128 (1702.27 seconds)
Cbc0010I After 1800 nodes, 35 on tree, 1e+50 best solution, best possible 48128 (1796.39 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 48128), took 2897394 iterations and 1804 nodes (1797.89 seconds)
Cbc0032I Strong branching done 18744 times (1591060 iterations), fathomed 75 nodes and fixed 2277 variables
Cbc0035I Maximum depth 54, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32768 to 48128
Probing was tried 1413 times and created 156339 cuts of which 12 were active after adding rounds of cuts (17.718 seconds)
Gomory was tried 1199 times and created 1595 cuts of which 0 were active after adding rounds of cuts (14.461 seconds)
Knapsack was tried 15 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
Clique was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
MixedIntegerRounding2 was tried 15 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
FlowCover was tried 15 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
TwoMirCuts was tried 1199 times and created 20741 cuts of which 0 were active after adding rounds of cuts (4.114 seconds)
ZeroHalf was tried 1199 times and created 1884 cuts of which 0 were active after adding rounds of cuts (73.466 seconds)
ImplicationCuts was tried 15 times and created 53 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    48128.000
Enumerated nodes:               1804
Total iterations:               2897394
Time (CPU seconds):             1797.89
Time (Wallclock seconds):       1802.02

Total time (CPU seconds):       1797.91   (Wallclock seconds):       1802.05

