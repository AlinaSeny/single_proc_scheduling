Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/triang6_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/triang6_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 264.964 - 0.09 seconds
Cgl0002I 81 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 271 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 12 tightened bounds, 195 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 8 tightened bounds, 117 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 3 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 1 fixed, 1 tightened bounds, 58 strengthened rows, 2 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 29 strengthened rows, 4 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 12 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1380 rows, 485 columns (485 integer (463 of which binary)) and 4617 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 485 objects (485 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 258 integers unsatisfied sum - 66.4872
Cbc0038I Pass   1: suminf.   44.03010 (206) obj. 382.441 iterations 466
Cbc0038I Pass   2: suminf.   37.21684 (213) obj. 366.927 iterations 158
Cbc0038I Pass   3: suminf.   33.97413 (205) obj. 364.716 iterations 101
Cbc0038I Pass   4: suminf.   33.95319 (214) obj. 363.881 iterations 47
Cbc0038I Pass   5: suminf.   27.42947 (149) obj. 363 iterations 267
Cbc0038I Pass   6: suminf.   24.06112 (157) obj. 363 iterations 105
Cbc0038I Pass   7: suminf.   24.07239 (153) obj. 363 iterations 37
Cbc0038I Pass   8: suminf.   20.91784 (106) obj. 363 iterations 127
Cbc0038I Pass   9: suminf.   17.35411 (99) obj. 363 iterations 73
Cbc0038I Pass  10: suminf.   13.96408 (103) obj. 363 iterations 97
Cbc0038I Pass  11: suminf.   11.39514 (78) obj. 363 iterations 57
Cbc0038I Pass  12: suminf.    7.16366 (50) obj. 363 iterations 88
Cbc0038I Pass  13: suminf.    7.16366 (50) obj. 363 iterations 13
Cbc0038I Pass  14: suminf.    2.64561 (21) obj. 363 iterations 64
Cbc0038I Pass  15: suminf.    2.21444 (31) obj. 363 iterations 44
Cbc0038I Pass  16: suminf.    2.17722 (23) obj. 370.228 iterations 418
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 363 iterations 48
Cbc0038I Solution found of 363
Cbc0038I Cleaned solution of 363
Cbc0038I Before mini branch and bound, 127 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1380 rows 485 columns, reduced to 1107 rows 358 columns - 32 fixed gives 772, 242 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I Round again with cutoff of 352.619
Cbc0038I Pass  18: suminf.   43.14783 (205) obj. 352 iterations 30
Cbc0038I Pass  19: suminf.   36.80253 (206) obj. 352.619 iterations 170
Cbc0038I Pass  20: suminf.   35.03571 (200) obj. 352.619 iterations 139
Cbc0038I Pass  21: suminf.   34.92904 (213) obj. 352.619 iterations 54
Cbc0038I Pass  22: suminf.   27.94035 (173) obj. 352.619 iterations 270
Cbc0038I Pass  23: suminf.   25.01163 (178) obj. 352.619 iterations 87
Cbc0038I Pass  24: suminf.   20.66371 (137) obj. 352.619 iterations 177
Cbc0038I Pass  25: suminf.   17.48416 (117) obj. 352.619 iterations 99
Cbc0038I Pass  26: suminf.    4.65845 (59) obj. 352.619 iterations 225
Cbc0038I Pass  27: suminf.    4.65845 (59) obj. 352.619 iterations 23
Cbc0038I Pass  28: suminf.    3.42979 (47) obj. 352.619 iterations 214
Cbc0038I Pass  29: suminf.    3.40800 (36) obj. 352.619 iterations 19
Cbc0038I Pass  30: suminf.    1.46936 (40) obj. 352.619 iterations 68
Cbc0038I Pass  31: suminf.    1.37881 (52) obj. 352.619 iterations 49
Cbc0038I Pass  32: suminf.    8.41135 (53) obj. 352.619 iterations 342
Cbc0038I Pass  33: suminf.    4.15646 (71) obj. 352.619 iterations 187
Cbc0038I Pass  34: suminf.    4.92562 (70) obj. 352.619 iterations 221
Cbc0038I Pass  35: suminf.    1.24711 (12) obj. 352.619 iterations 168
Cbc0038I Pass  36: suminf.    0.38142 (1) obj. 352.619 iterations 58
Cbc0038I Solution found of 352.619
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1381 rows 485 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 351
Cbc0038I Before mini branch and bound, 103 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1380 rows 485 columns, reduced to 1164 rows 382 columns - 51 fixed gives 839, 254 - still too large
Cbc0038I Full problem 1380 rows 485 columns, reduced to 49 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 351 to 325 (0.75 seconds)
Cbc0038I Round again with cutoff of 312.837
Cbc0038I Pass  37: suminf.   43.03673 (207) obj. 312.837 iterations 37
Cbc0038I Pass  38: suminf.   38.08445 (217) obj. 312.837 iterations 161
Cbc0038I Pass  39: suminf.   30.84067 (183) obj. 312.837 iterations 167
Cbc0038I Pass  40: suminf.   30.32389 (186) obj. 312.837 iterations 56
Cbc0038I Pass  41: suminf.   27.68020 (168) obj. 312.837 iterations 91
Cbc0038I Pass  42: suminf.   27.42524 (145) obj. 312.837 iterations 98
Cbc0038I Pass  43: suminf.   17.15035 (106) obj. 312.837 iterations 224
Cbc0038I Pass  44: suminf.   16.30069 (126) obj. 312.837 iterations 86
Cbc0038I Pass  45: suminf.    0.16294 (1) obj. 312.837 iterations 190
Cbc0038I Solution found of 312.837
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1381 rows 485 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 290
Cbc0038I Before mini branch and bound, 140 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1380 rows 485 columns, reduced to 1075 rows 345 columns - 49 fixed gives 782, 230 - still too large
Cbc0038I Full problem 1380 rows 485 columns, reduced to 31 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.91 seconds)
Cbc0038I Round again with cutoff of 282.756
Cbc0038I Reduced cost fixing fixed 14 variables on major pass 4
Cbc0038I Pass  46: suminf.   43.13687 (248) obj. 282.756 iterations 115
Cbc0038I Pass  47: suminf.   39.61841 (241) obj. 282.756 iterations 180
Cbc0038I Pass  48: suminf.   37.93647 (238) obj. 282.756 iterations 101
Cbc0038I Pass  49: suminf.   30.71992 (246) obj. 282.756 iterations 146
Cbc0038I Pass  50: suminf.   31.04580 (246) obj. 282.756 iterations 68
Cbc0038I Pass  51: suminf.   31.45408 (230) obj. 282.756 iterations 46
Cbc0038I Pass  52: suminf.   24.25837 (203) obj. 282.756 iterations 236
Cbc0038I Pass  53: suminf.   22.82138 (211) obj. 282.756 iterations 114
Cbc0038I Pass  54: suminf.   18.03059 (183) obj. 282.756 iterations 158
Cbc0038I Pass  55: suminf.   15.85193 (168) obj. 282.756 iterations 53
Cbc0038I Pass  56: suminf.   11.66364 (159) obj. 282.756 iterations 62
Cbc0038I Pass  57: suminf.   11.42218 (160) obj. 282.756 iterations 12
Cbc0038I Pass  58: suminf.   12.84447 (135) obj. 282.756 iterations 160
Cbc0038I Pass  59: suminf.   11.51885 (139) obj. 282.756 iterations 39
Cbc0038I Pass  60: suminf.   13.50309 (132) obj. 282.756 iterations 82
Cbc0038I Pass  61: suminf.   13.30419 (131) obj. 282.756 iterations 31
Cbc0038I Pass  62: suminf.   14.40927 (118) obj. 282.756 iterations 126
Cbc0038I Pass  63: suminf.   13.77553 (109) obj. 282.756 iterations 121
Cbc0038I Pass  64: suminf.   13.77553 (109) obj. 282.756 iterations 7
Cbc0038I Pass  65: suminf.   14.49155 (135) obj. 282.756 iterations 225
Cbc0038I Pass  66: suminf.   12.99545 (139) obj. 282.756 iterations 44
Cbc0038I Pass  67: suminf.   12.78924 (142) obj. 282.756 iterations 54
Cbc0038I Pass  68: suminf.   12.27126 (135) obj. 282.756 iterations 221
Cbc0038I Pass  69: suminf.   11.40866 (120) obj. 282.756 iterations 30
Cbc0038I Pass  70: suminf.   15.24458 (122) obj. 282.756 iterations 174
Cbc0038I Pass  71: suminf.   12.38956 (124) obj. 282.756 iterations 98
Cbc0038I Pass  72: suminf.   11.34754 (126) obj. 282.756 iterations 73
Cbc0038I Pass  73: suminf.   11.37907 (119) obj. 282.756 iterations 82
Cbc0038I Pass  74: suminf.   11.40866 (120) obj. 282.756 iterations 33
Cbc0038I Pass  75: suminf.   14.10428 (116) obj. 282.756 iterations 160
Cbc0038I Pass  76: suminf.   11.42889 (126) obj. 282.756 iterations 61
Cbc0038I Pass  77: suminf.   11.34754 (126) obj. 282.756 iterations 38
Cbc0038I Pass  78: suminf.   12.51232 (118) obj. 282.756 iterations 175
Cbc0038I Pass  79: suminf.   12.39256 (118) obj. 282.756 iterations 6
Cbc0038I Pass  80: suminf.   12.65081 (146) obj. 282.756 iterations 99
Cbc0038I Pass  81: suminf.   11.89967 (145) obj. 282.756 iterations 59
Cbc0038I Pass  82: suminf.   14.78633 (130) obj. 282.756 iterations 157
Cbc0038I Pass  83: suminf.   12.51570 (139) obj. 282.756 iterations 101
Cbc0038I Pass  84: suminf.   11.92312 (138) obj. 282.756 iterations 26
Cbc0038I Pass  85: suminf.    9.73397 (111) obj. 282.756 iterations 160
Cbc0038I Pass  86: suminf.    8.78238 (120) obj. 282.756 iterations 90
Cbc0038I Pass  87: suminf.   16.88576 (128) obj. 282.756 iterations 187
Cbc0038I Pass  88: suminf.    9.78066 (108) obj. 282.756 iterations 178
Cbc0038I Pass  89: suminf.    9.62679 (100) obj. 282.756 iterations 47
Cbc0038I Pass  90: suminf.   12.73620 (124) obj. 282.756 iterations 179
Cbc0038I Pass  91: suminf.    8.77111 (106) obj. 282.756 iterations 172
Cbc0038I Pass  92: suminf.    8.77907 (119) obj. 282.756 iterations 36
Cbc0038I Pass  93: suminf.   10.35388 (118) obj. 282.756 iterations 118
Cbc0038I Pass  94: suminf.    9.59407 (103) obj. 282.756 iterations 68
Cbc0038I Pass  95: suminf.    9.64551 (113) obj. 282.756 iterations 110
Cbc0038I Pass  96: suminf.   24.41712 (184) obj. 282.756 iterations 313
Cbc0038I Pass  97: suminf.    9.34178 (114) obj. 282.756 iterations 277
Cbc0038I Pass  98: suminf.    8.77970 (119) obj. 282.756 iterations 51
Cbc0038I Pass  99: suminf.   10.41260 (117) obj. 282.756 iterations 147
Cbc0038I Pass 100: suminf.    9.77933 (116) obj. 282.756 iterations 69
Cbc0038I Pass 101: suminf.   14.91739 (124) obj. 282.756 iterations 178
Cbc0038I Pass 102: suminf.    8.77111 (106) obj. 282.756 iterations 153
Cbc0038I Pass 103: suminf.    8.77907 (119) obj. 282.756 iterations 37
Cbc0038I Pass 104: suminf.   10.79330 (98) obj. 282.756 iterations 118
Cbc0038I Pass 105: suminf.    9.59407 (103) obj. 282.756 iterations 98
Cbc0038I Pass 106: suminf.    9.49834 (115) obj. 282.756 iterations 117
Cbc0038I Pass 107: suminf.   22.25943 (181) obj. 282.756 iterations 387
Cbc0038I Pass 108: suminf.   12.67143 (141) obj. 282.756 iterations 356
Cbc0038I Pass 109: suminf.   10.08039 (130) obj. 282.756 iterations 216
Cbc0038I Pass 110: suminf.    8.51527 (135) obj. 282.756 iterations 85
Cbc0038I Pass 111: suminf.   10.01823 (153) obj. 282.756 iterations 84
Cbc0038I Pass 112: suminf.   10.06851 (152) obj. 282.756 iterations 14
Cbc0038I Pass 113: suminf.   12.73992 (149) obj. 282.756 iterations 166
Cbc0038I Pass 114: suminf.   12.61686 (148) obj. 282.756 iterations 10
Cbc0038I Pass 115: suminf.   11.52469 (127) obj. 282.756 iterations 186
Cbc0038I Pass 116: suminf.    9.87906 (118) obj. 282.756 iterations 88
Cbc0038I Pass 117: suminf.    9.80387 (109) obj. 282.756 iterations 81
Cbc0038I Pass 118: suminf.   18.31963 (129) obj. 282.756 iterations 164
Cbc0038I Pass 119: suminf.   16.24689 (102) obj. 282.756 iterations 108
Cbc0038I Pass 120: suminf.   13.62599 (123) obj. 282.756 iterations 96
Cbc0038I Pass 121: suminf.   15.62084 (117) obj. 282.756 iterations 137
Cbc0038I Pass 122: suminf.   11.98154 (108) obj. 282.756 iterations 63
Cbc0038I Pass 123: suminf.   11.57476 (122) obj. 282.756 iterations 60
Cbc0038I Pass 124: suminf.   13.33431 (114) obj. 282.756 iterations 148
Cbc0038I Pass 125: suminf.    8.78074 (122) obj. 282.756 iterations 144
Cbc0038I Pass 126: suminf.   18.95976 (148) obj. 282.756 iterations 189
Cbc0038I Pass 127: suminf.    9.89326 (103) obj. 282.756 iterations 161
Cbc0038I Pass 128: suminf.    9.73688 (104) obj. 282.756 iterations 57
Cbc0038I Pass 129: suminf.    9.94500 (114) obj. 282.756 iterations 120
Cbc0038I Pass 130: suminf.    8.97130 (119) obj. 282.756 iterations 74
Cbc0038I Pass 131: suminf.   10.45072 (112) obj. 282.756 iterations 83
Cbc0038I Pass 132: suminf.    8.78074 (122) obj. 282.756 iterations 92
Cbc0038I Pass 133: suminf.    9.56599 (114) obj. 282.756 iterations 81
Cbc0038I Pass 134: suminf.   27.20070 (190) obj. 282.756 iterations 400
Cbc0038I Pass 135: suminf.   17.12475 (151) obj. 282.756 iterations 275
Cbc0038I Pass 136: suminf.   14.42715 (157) obj. 282.756 iterations 97
Cbc0038I Pass 137: suminf.   14.35240 (144) obj. 282.756 iterations 30
Cbc0038I Pass 138: suminf.   10.53168 (133) obj. 282.756 iterations 160
Cbc0038I Pass 139: suminf.   10.26192 (124) obj. 282.756 iterations 58
Cbc0038I Pass 140: suminf.   12.46152 (117) obj. 282.756 iterations 143
Cbc0038I Pass 141: suminf.   12.55093 (112) obj. 282.756 iterations 35
Cbc0038I Pass 142: suminf.   12.65100 (142) obj. 282.756 iterations 125
Cbc0038I Pass 143: suminf.   10.80138 (115) obj. 282.756 iterations 69
Cbc0038I Pass 144: suminf.   10.01243 (119) obj. 282.756 iterations 23
Cbc0038I Pass 145: suminf.   21.07506 (174) obj. 282.756 iterations 280
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1380 rows 485 columns, reduced to 1281 rows 435 columns - 53 fixed gives 932, 296 - still too large
Cbc0038I Full problem 1380 rows 485 columns, reduced to 72 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (1.83 seconds)
Cbc0038I After 1.83 seconds - Feasibility pump exiting with objective of 290 - took 1.58 seconds
Cbc0012I Integer solution of 290 found by feasibility pump after 0 iterations and 0 nodes (1.83 seconds)
Cbc0038I Full problem 1380 rows 485 columns, reduced to 911 rows 264 columns - 41 fixed gives 685, 180 - ok now
Cbc0012I Integer solution of 287 found by DiveCoefficient after 4156 iterations and 0 nodes (2.42 seconds)
Cbc0031I 17 added rows had average density of 9.5882353
Cbc0013I At root node, 17 cuts changed objective from 268.18491 to 287 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 334 row cuts average 2.7 elements, 81 column cuts (81 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 242 row cuts average 117.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective 287, took 4156 iterations and 0 nodes (2.43 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Cuts at root node changed objective from 268.185 to 287
Probing was tried 5 times and created 415 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
Gomory was tried 5 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 5 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 5 times and created 242 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                287.00000000
Enumerated nodes:               0
Total iterations:               4156
Time (CPU seconds):             2.46
Time (Wallclock seconds):       2.48

Total time (CPU seconds):       2.46   (Wallclock seconds):       2.49

