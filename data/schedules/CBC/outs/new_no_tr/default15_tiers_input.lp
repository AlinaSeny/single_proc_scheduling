Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default15_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/default15_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 19456 - 0.01 seconds
Cgl0002I 33 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 127 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 2 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 17 fixed, 11 tightened bounds, 9 strengthened rows, 6 substitutions
Cgl0003I 4 fixed, 0 tightened bounds, 52 strengthened rows, 5 substitutions
Cgl0003I 1 fixed, 0 tightened bounds, 1 strengthened rows, 1 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 477 rows, 168 columns (168 integer (152 of which binary)) and 1607 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 168 objects (168 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 47 integers unsatisfied sum - 8.55156
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20480 iterations 133
Cbc0038I Solution found of 20480
Cbc0038I Cleaned solution of 20480
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 477 rows 168 columns, reduced to 49 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of 20376.7
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.30227 (31) obj. 20376 iterations 44
Cbc0038I Pass   3: suminf.    7.45531 (38) obj. 20376.7 iterations 83
Cbc0038I Pass   4: suminf.    4.97080 (31) obj. 20376.7 iterations 29
Cbc0038I Pass   5: suminf.    3.76578 (27) obj. 20376.7 iterations 17
Cbc0038I Pass   6: suminf.    4.74527 (27) obj. 20376.7 iterations 124
Cbc0038I Pass   7: suminf.    4.42764 (29) obj. 20376.7 iterations 14
Cbc0038I Pass   8: suminf.    2.73594 (26) obj. 20376.7 iterations 49
Cbc0038I Pass   9: suminf.    1.79625 (26) obj. 20376.7 iterations 7
Cbc0038I Pass  10: suminf.    5.82199 (31) obj. 20376.7 iterations 67
Cbc0038I Pass  11: suminf.    1.00514 (27) obj. 20376.7 iterations 37
Cbc0038I Pass  12: suminf.    0.64252 (22) obj. 20376.7 iterations 11
Cbc0038I Pass  13: suminf.    1.68224 (30) obj. 20376.7 iterations 152
Cbc0038I Pass  14: suminf.    1.58653 (27) obj. 20376.7 iterations 7
Cbc0038I Pass  15: suminf.    7.32594 (36) obj. 20376.7 iterations 81
Cbc0038I Pass  16: suminf.    1.82616 (29) obj. 20376.7 iterations 35
Cbc0038I Pass  17: suminf.    1.82427 (26) obj. 20376.7 iterations 9
Cbc0038I Pass  18: suminf.    4.00433 (26) obj. 20376.7 iterations 76
Cbc0038I Pass  19: suminf.    0.61450 (22) obj. 20376.7 iterations 28
Cbc0038I Pass  20: suminf.    1.71026 (30) obj. 20376.7 iterations 28
Cbc0038I Pass  21: suminf.    1.61456 (23) obj. 20376.7 iterations 10
Cbc0038I Pass  22: suminf.    5.18146 (29) obj. 20376.7 iterations 90
Cbc0038I Pass  23: suminf.    5.16640 (27) obj. 20376.7 iterations 7
Cbc0038I Pass  24: suminf.    4.29063 (29) obj. 20376.7 iterations 57
Cbc0038I Pass  25: suminf.    4.15897 (28) obj. 20376.7 iterations 5
Cbc0038I Pass  26: suminf.    3.65603 (26) obj. 20376.7 iterations 124
Cbc0038I Pass  27: suminf.    1.79625 (26) obj. 20376.7 iterations 21
Cbc0038I Pass  28: suminf.    5.82199 (31) obj. 20376.7 iterations 59
Cbc0038I Pass  29: suminf.    1.00514 (27) obj. 20376.7 iterations 32
Cbc0038I Pass  30: suminf.    0.64252 (22) obj. 20376.7 iterations 9
Cbc0038I Pass  31: suminf.    1.68224 (30) obj. 20376.7 iterations 114
Cbc0038I Pass  32: suminf.    1.58653 (27) obj. 20376.7 iterations 7
Cbc0038I Pass  33: suminf.    5.18146 (29) obj. 20376.7 iterations 53
Cbc0038I Pass  34: suminf.    5.16640 (27) obj. 20376.7 iterations 6
Cbc0038I Pass  35: suminf.    4.29063 (29) obj. 20376.7 iterations 49
Cbc0038I Pass  36: suminf.    4.15897 (28) obj. 20376.7 iterations 5
Cbc0038I Pass  37: suminf.    3.65603 (26) obj. 20376.7 iterations 115
Cbc0038I Pass  38: suminf.    1.79625 (26) obj. 20376.7 iterations 22
Cbc0038I Pass  39: suminf.    5.82199 (31) obj. 20376.7 iterations 57
Cbc0038I Pass  40: suminf.    1.00514 (27) obj. 20376.7 iterations 31
Cbc0038I Pass  41: suminf.    0.64252 (22) obj. 20376.7 iterations 12
Cbc0038I Pass  42: suminf.    1.68224 (30) obj. 20376.7 iterations 97
Cbc0038I Pass  43: suminf.    1.58653 (27) obj. 20376.7 iterations 17
Cbc0038I Pass  44: suminf.    6.31998 (32) obj. 20376.7 iterations 75
Cbc0038I Pass  45: suminf.    6.31998 (32) obj. 20376.7 iterations 9
Cbc0038I Pass  46: suminf.    7.18678 (49) obj. 20376.7 iterations 128
Cbc0038I Pass  47: suminf.    7.05512 (48) obj. 20376.7 iterations 5
Cbc0038I Pass  48: suminf.    7.03844 (45) obj. 20376.7 iterations 52
Cbc0038I Pass  49: suminf.    1.82427 (26) obj. 20376.7 iterations 54
Cbc0038I Pass  50: suminf.    3.39454 (23) obj. 20376.7 iterations 111
Cbc0038I Pass  51: suminf.    0.61450 (22) obj. 20376.7 iterations 26
Cbc0038I Pass  52: suminf.    0.61450 (22) obj. 20376.7 iterations 0
Cbc0038I Pass  53: suminf.    1.71026 (34) obj. 20376.7 iterations 52
Cbc0038I Pass  54: suminf.    1.61456 (27) obj. 20376.7 iterations 12
Cbc0038I Pass  55: suminf.    5.61098 (35) obj. 20376.7 iterations 151
Cbc0038I Pass  56: suminf.    5.16640 (27) obj. 20376.7 iterations 26
Cbc0038I Pass  57: suminf.    4.29063 (29) obj. 20376.7 iterations 59
Cbc0038I Pass  58: suminf.    4.15897 (28) obj. 20376.7 iterations 6
Cbc0038I Pass  59: suminf.    3.65603 (26) obj. 20376.7 iterations 112
Cbc0038I Pass  60: suminf.    1.79625 (26) obj. 20376.7 iterations 24
Cbc0038I Pass  61: suminf.    5.82199 (31) obj. 20376.7 iterations 54
Cbc0038I Pass  62: suminf.    1.00514 (27) obj. 20376.7 iterations 27
Cbc0038I Pass  63: suminf.    0.64252 (22) obj. 20376.7 iterations 13
Cbc0038I Pass  64: suminf.    1.68224 (34) obj. 20376.7 iterations 126
Cbc0038I Pass  65: suminf.    1.58653 (27) obj. 20376.7 iterations 8
Cbc0038I Pass  66: suminf.    6.15889 (42) obj. 20376.7 iterations 90
Cbc0038I Pass  67: suminf.    5.19442 (27) obj. 20376.7 iterations 26
Cbc0038I Pass  68: suminf.    4.26261 (29) obj. 20376.7 iterations 134
Cbc0038I Pass  69: suminf.    4.13095 (28) obj. 20376.7 iterations 5
Cbc0038I Pass  70: suminf.    3.68405 (26) obj. 20376.7 iterations 46
Cbc0038I Pass  71: suminf.    1.82427 (26) obj. 20376.7 iterations 24
Cbc0038I Pass  72: suminf.    5.79397 (31) obj. 20376.7 iterations 116
Cbc0038I Pass  73: suminf.    0.97712 (27) obj. 20376.7 iterations 37
Cbc0038I Pass  74: suminf.    0.61450 (22) obj. 20376.7 iterations 11
Cbc0038I Pass  75: suminf.    0.63185 (30) obj. 20376.7 iterations 43
Cbc0038I Pass  76: suminf.    0.60014 (36) obj. 20376.7 iterations 15
Cbc0038I Pass  77: suminf.    7.61951 (45) obj. 20376.7 iterations 87
Cbc0038I Pass  78: suminf.    6.02993 (38) obj. 20376.7 iterations 37
Cbc0038I Pass  79: suminf.    0.61869 (25) obj. 20376.7 iterations 43
Cbc0038I Pass  80: suminf.    0.55685 (20) obj. 20376.7 iterations 6
Cbc0038I Pass  81: suminf.    4.52048 (39) obj. 20376.7 iterations 68
Cbc0038I Pass  82: suminf.    1.70102 (29) obj. 20376.7 iterations 41
Cbc0038I Pass  83: suminf.    2.93258 (33) obj. 20376.7 iterations 132
Cbc0038I Pass  84: suminf.    0.57212 (36) obj. 20376.7 iterations 56
Cbc0038I Pass  85: suminf.    5.63024 (43) obj. 20376.7 iterations 66
Cbc0038I Pass  86: suminf.    0.64252 (22) obj. 20376.7 iterations 82
Cbc0038I Pass  87: suminf.    0.64252 (22) obj. 20376.7 iterations 0
Cbc0038I Pass  88: suminf.    1.68224 (34) obj. 20376.7 iterations 130
Cbc0038I Pass  89: suminf.    1.58653 (27) obj. 20376.7 iterations 16
Cbc0038I Pass  90: suminf.    5.19442 (27) obj. 20376.7 iterations 65
Cbc0038I Pass  91: suminf.    5.19442 (27) obj. 20376.7 iterations 3
Cbc0038I Pass  92: suminf.    4.26261 (29) obj. 20376.7 iterations 115
Cbc0038I Pass  93: suminf.    4.13095 (28) obj. 20376.7 iterations 4
Cbc0038I Pass  94: suminf.    3.68405 (26) obj. 20376.7 iterations 44
Cbc0038I Pass  95: suminf.    1.82427 (26) obj. 20376.7 iterations 24
Cbc0038I Pass  96: suminf.    5.79397 (31) obj. 20376.7 iterations 100
Cbc0038I Pass  97: suminf.    0.97712 (27) obj. 20376.7 iterations 35
Cbc0038I Pass  98: suminf.    0.61450 (22) obj. 20376.7 iterations 10
Cbc0038I Pass  99: suminf.    1.71026 (34) obj. 20376.7 iterations 30
Cbc0038I Pass 100: suminf.    1.61456 (27) obj. 20376.7 iterations 8
Cbc0038I Pass 101: suminf.   14.45342 (64) obj. 20376.7 iterations 80
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 477 rows 168 columns, reduced to 318 rows 97 columns - 17 fixed gives 208, 60 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of 20480 - took 0.18 seconds
Cbc0012I Integer solution of 20480 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 19456 to 19456 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 20480, took 0 iterations and 0 nodes (0.23 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Cuts at root node changed objective from 19456 to 19456
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                20480.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.24
Time (Wallclock seconds):       0.25

Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

