Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/jump45_tiers_input.lp sec 1800 solve solu solutions/new_no_tr/jump45_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 34133.3 - 2.33 seconds
Cgl0002I 167 variables fixed
Cgl0003I 0 fixed, 13 tightened bounds, 980 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 1 tightened bounds, 122 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 7057 rows, 2103 columns (2103 integer (2057 of which binary)) and 24235 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2103 objects (2103 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1202 integers unsatisfied sum - 440.125
Cbc0038I Pass   1: (4.96 seconds) suminf.  253.65830 (1218) obj. 70217 iterations 5881
Cbc0038I Pass   2: (6.08 seconds) suminf.  168.96265 (1226) obj. 79635.2 iterations 2789
Cbc0038I Pass   3: (6.45 seconds) suminf.  131.47515 (1221) obj. 78745.8 iterations 914
Cbc0038I Pass   4: (7.05 seconds) suminf.  101.52025 (1314) obj. 81117.7 iterations 1434
Cbc0038I Pass   5: (7.47 seconds) suminf.   77.96223 (1371) obj. 82613.1 iterations 1069
Cbc0038I Pass   6: (7.75 seconds) suminf.   71.86171 (1374) obj. 83821.4 iterations 623
Cbc0038I Pass   7: (7.92 seconds) suminf.   68.46014 (1364) obj. 83934.4 iterations 330
Cbc0038I Pass   8: (8.04 seconds) suminf.   66.92999 (1355) obj. 83923.2 iterations 230
Cbc0038I Pass   9: (8.15 seconds) suminf.   67.07206 (1360) obj. 83976.1 iterations 226
Cbc0038I Pass  10: (8.53 seconds) suminf.   68.48082 (1373) obj. 84091.7 iterations 997
Cbc0038I Pass  11: (8.74 seconds) suminf.   65.29102 (1347) obj. 84378.4 iterations 486
Cbc0038I Pass  12: (8.85 seconds) suminf.   63.46551 (1344) obj. 84282.1 iterations 218
Cbc0038I Pass  13: (8.92 seconds) suminf.   63.40636 (1344) obj. 84338.9 iterations 150
Cbc0038I Pass  14: (9.35 seconds) suminf.   66.16199 (1382) obj. 93459.4 iterations 1195
Cbc0038I Pass  15: (9.54 seconds) suminf.   64.63119 (1379) obj. 93593.3 iterations 470
Cbc0038I Pass  16: (9.85 seconds) suminf.   68.49036 (1406) obj. 93469.5 iterations 797
Cbc0038I Pass  17: (10.07 seconds) suminf.   66.46749 (1405) obj. 93252.6 iterations 505
Cbc0038I Pass  18: (10.17 seconds) suminf.   65.94128 (1391) obj. 93245.8 iterations 205
Cbc0038I Pass  19: (10.59 seconds) suminf.   67.37441 (1327) obj. 92529.8 iterations 1070
Cbc0038I Pass  20: (10.86 seconds) suminf.   64.98114 (1375) obj. 93449.8 iterations 675
Cbc0038I Pass  21: (11.22 seconds) suminf.   65.91786 (1408) obj. 92900.6 iterations 922
Cbc0038I Pass  22: (11.42 seconds) suminf.   64.93082 (1378) obj. 93137.9 iterations 482
Cbc0038I Pass  23: (11.75 seconds) suminf.   64.58638 (1402) obj. 93380.9 iterations 763
Cbc0038I Pass  24: (12.03 seconds) suminf.   62.73813 (1428) obj. 93445.7 iterations 624
Cbc0038I Pass  25: (12.32 seconds) suminf.   66.28526 (1373) obj. 93097.4 iterations 635
Cbc0038I Pass  26: (12.54 seconds) suminf.   64.84864 (1402) obj. 93334.7 iterations 411
Cbc0038I Pass  27: (12.84 seconds) suminf.   68.40045 (1378) obj. 93232.9 iterations 757
Cbc0038I Pass  28: (13.08 seconds) suminf.   65.08130 (1408) obj. 93350 iterations 511
Cbc0038I Pass  29: (13.27 seconds) suminf.   65.25614 (1378) obj. 93087.5 iterations 361
Cbc0038I Pass  30: (13.43 seconds) suminf.   64.80341 (1362) obj. 93348.8 iterations 285
Cbc0038I Pass  31: (13.82 seconds) suminf.   66.79416 (1399) obj. 93279.1 iterations 890
Cbc0038I Pass  32: (13.98 seconds) suminf.   64.71465 (1374) obj. 93130 iterations 337
Cbc0038I Pass  33: (14.30 seconds) suminf.   63.96278 (1392) obj. 93229.8 iterations 757
Cbc0038I Pass  34: (14.50 seconds) suminf.   63.55587 (1404) obj. 93181.2 iterations 487
Cbc0038I Pass  35: (14.63 seconds) suminf.   62.32715 (1375) obj. 93126.2 iterations 244
Cbc0038I Pass  36: (15.00 seconds) suminf.   65.96571 (1410) obj. 93176.6 iterations 887
Cbc0038I Pass  37: (15.29 seconds) suminf.   63.71735 (1398) obj. 93097.5 iterations 632
Cbc0038I Pass  38: (15.67 seconds) suminf.   63.91083 (1369) obj. 93171.6 iterations 874
Cbc0038I Pass  39: (15.84 seconds) suminf.   60.67037 (1375) obj. 93237.7 iterations 332
Cbc0038I Pass  40: (16.19 seconds) suminf.   66.57594 (1362) obj. 93207.3 iterations 792
Cbc0038I Pass  41: (16.40 seconds) suminf.   63.35991 (1374) obj. 93013.2 iterations 462
Cbc0038I Pass  42: (16.54 seconds) suminf.   63.44768 (1382) obj. 93048.2 iterations 268
Cbc0038I Pass  43: (16.90 seconds) suminf.   63.74716 (1405) obj. 93661.4 iterations 850
Cbc0038I Pass  44: (17.08 seconds) suminf.   62.81138 (1406) obj. 93024.6 iterations 416
Cbc0038I Pass  45: (17.38 seconds) suminf.   61.92683 (1357) obj. 93403.6 iterations 741
Cbc0038I Pass  46: (17.46 seconds) suminf.   61.37806 (1345) obj. 93478.5 iterations 161
Cbc0038I Pass  47: (17.78 seconds) suminf.   64.75743 (1390) obj. 93659.5 iterations 835
Cbc0038I Pass  48: (18.06 seconds) suminf.   62.91187 (1423) obj. 93019.8 iterations 629
Cbc0038I Pass  49: (18.38 seconds) suminf.   66.00772 (1384) obj. 92960.5 iterations 754
Cbc0038I Pass  50: (18.60 seconds) suminf.   62.38845 (1384) obj. 93129.3 iterations 491
Cbc0038I Pass  51: (18.70 seconds) suminf.   61.74710 (1392) obj. 93087.7 iterations 186
Cbc0038I Pass  52: (19.04 seconds) suminf.   64.16996 (1387) obj. 93250.4 iterations 862
Cbc0038I Pass  53: (19.27 seconds) suminf.   61.44625 (1395) obj. 93273.3 iterations 544
Cbc0038I Pass  54: (19.38 seconds) suminf.   60.91004 (1372) obj. 93348.7 iterations 203
Cbc0038I Pass  55: (19.73 seconds) suminf.   64.83225 (1392) obj. 93337.9 iterations 879
Cbc0038I Pass  56: (19.95 seconds) suminf.   64.18263 (1425) obj. 93170.9 iterations 505
Cbc0038I Pass  57: (20.21 seconds) suminf.   64.20586 (1381) obj. 93870.1 iterations 703
Cbc0038I Pass  58: (20.46 seconds) suminf.   63.78693 (1366) obj. 93068.8 iterations 592
Cbc0038I Pass  59: (20.70 seconds) suminf.   62.74889 (1434) obj. 92998.6 iterations 580
Cbc0038I Pass  60: (20.74 seconds) suminf.   62.17968 (1435) obj. 92924.9 iterations 51
Cbc0038I Pass  61: (21.04 seconds) suminf.   65.83646 (1355) obj. 93005.2 iterations 758
Cbc0038I Pass  62: (21.31 seconds) suminf.   63.35233 (1389) obj. 93003.2 iterations 681
Cbc0038I Pass  63: (21.59 seconds) suminf.   65.08404 (1391) obj. 93542 iterations 736
Cbc0038I Pass  64: (21.67 seconds) suminf.   65.05020 (1377) obj. 93683.8 iterations 135
Cbc0038I Pass  65: (21.96 seconds) suminf.   62.28102 (1409) obj. 93157.8 iterations 736
Cbc0038I Pass  66: (21.99 seconds) suminf.   62.11870 (1407) obj. 93109.6 iterations 30
Cbc0038I Pass  67: (22.11 seconds) suminf.   61.35215 (1410) obj. 93079.5 iterations 227
Cbc0038I Pass  68: (22.48 seconds) suminf.   66.29628 (1380) obj. 93221.1 iterations 933
Cbc0038I Pass  69: (22.74 seconds) suminf.   64.33780 (1382) obj. 93081.5 iterations 651
Cbc0038I Pass  70: (23.07 seconds) suminf.   66.12748 (1418) obj. 93138.8 iterations 759
Cbc0038I Pass  71: (23.28 seconds) suminf.   62.74835 (1393) obj. 93492.1 iterations 459
Cbc0038I Pass  72: (23.33 seconds) suminf.   63.16221 (1397) obj. 93450.4 iterations 95
Cbc0038I Pass  73: (23.72 seconds) suminf.   63.37434 (1344) obj. 93342 iterations 953
Cbc0038I Pass  74: (24.08 seconds) suminf.   60.55501 (1359) obj. 92914 iterations 864
Cbc0038I Pass  75: (24.36 seconds) suminf.   61.70274 (1411) obj. 93471.3 iterations 667
Cbc0038I Pass  76: (24.54 seconds) suminf.   61.97562 (1426) obj. 93421.2 iterations 367
Cbc0038I Pass  77: (24.80 seconds) suminf.   63.10439 (1372) obj. 93073.2 iterations 639
Cbc0038I Pass  78: (24.94 seconds) suminf.   62.90230 (1363) obj. 93340.8 iterations 254
Cbc0038I Pass  79: (25.25 seconds) suminf.   62.22750 (1416) obj. 93145.3 iterations 747
Cbc0038I Pass  80: (25.48 seconds) suminf.   60.75316 (1380) obj. 93038.8 iterations 519
Cbc0038I Pass  81: (25.76 seconds) suminf.   61.89906 (1380) obj. 92741.5 iterations 654
Cbc0038I Pass  82: (25.95 seconds) suminf.   59.91156 (1381) obj. 93269.7 iterations 400
Cbc0038I Pass  83: (26.20 seconds) suminf.   61.57598 (1371) obj. 93554.2 iterations 587
Cbc0038I Pass  84: (26.73 seconds) suminf.   98.54660 (1366) obj. 100076 iterations 1559
Cbc0038I Pass  85: (27.08 seconds) suminf.   77.14458 (1379) obj. 98848.6 iterations 1008
Cbc0038I Pass  86: (27.18 seconds) suminf.   75.18687 (1383) obj. 98964.9 iterations 192
Cbc0038I Pass  87: (27.28 seconds) suminf.   73.36661 (1396) obj. 98734.4 iterations 213
Cbc0038I Pass  88: (27.52 seconds) suminf.   72.01126 (1398) obj. 98827.8 iterations 569
Cbc0038I Pass  89: (27.67 seconds) suminf.   71.00486 (1406) obj. 98903.3 iterations 322
Cbc0038I Pass  90: (27.99 seconds) suminf.   65.20922 (1376) obj. 98814.3 iterations 787
Cbc0038I Pass  91: (28.24 seconds) suminf.   62.98535 (1368) obj. 98992.7 iterations 621
Cbc0038I Pass  92: (28.50 seconds) suminf.   65.69938 (1377) obj. 98850.7 iterations 609
Cbc0038I Pass  93: (28.66 seconds) suminf.   61.89639 (1359) obj. 98408.3 iterations 374
Cbc0038I Pass  94: (28.98 seconds) suminf.   63.58521 (1386) obj. 99116.8 iterations 789
Cbc0038I Pass  95: (29.28 seconds) suminf.   61.17191 (1363) obj. 99110.6 iterations 797
Cbc0038I Pass  96: (29.41 seconds) suminf.   60.21359 (1368) obj. 98852.3 iterations 261
Cbc0038I Pass  97: (29.70 seconds) suminf.   65.70512 (1387) obj. 99224.8 iterations 720
Cbc0038I Pass  98: (30.00 seconds) suminf.   59.80001 (1361) obj. 98952.1 iterations 693
Cbc0038I Pass  99: (30.09 seconds) suminf.   59.61024 (1365) obj. 98759.2 iterations 180
Cbc0038I Pass 100: (30.61 seconds) suminf.   91.12262 (1376) obj. 98912.7 iterations 1521
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7057 rows 2103 columns, reduced to 6873 rows 2016 columns - too large
Cbc0038I Mini branch and bound did not improve solution (30.65 seconds)
Cbc0038I After 30.65 seconds - Feasibility pump exiting - took 27.85 seconds
Cbc0031I 41 added rows had average density of 4.9268293
Cbc0013I At root node, 41 cuts changed objective from 34466.341 to 46080 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 3.3 elements, 6 column cuts (6 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 113 row cuts average 218.3 elements, 0 column cuts (0 active)  in 1.241 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 130 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 46080 (65.68 seconds)
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 46080 (327.54 seconds)
Cbc0010I After 200 nodes, 6 on tree, 1e+50 best solution, best possible 46080 (599.22 seconds)
Cbc0010I After 300 nodes, 11 on tree, 1e+50 best solution, best possible 46080 (840.12 seconds)
Cbc0010I After 400 nodes, 1 on tree, 1e+50 best solution, best possible 46084 (1207.83 seconds)
Cbc0010I After 500 nodes, 49 on tree, 1e+50 best solution, best possible 46086 (1614.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 46086), took 2466169 iterations and 567 nodes (1800.82 seconds)
Cbc0032I Strong branching done 6104 times (536997 iterations), fathomed 17 nodes and fixed 755 variables
Cbc0035I Maximum depth 91, 0 variables fixed on reduced cost
Cuts at root node changed objective from 34466.3 to 46080
Probing was tried 444 times and created 3286 cuts of which 0 were active after adding rounds of cuts (4.519 seconds)
Gomory was tried 442 times and created 343 cuts of which 0 were active after adding rounds of cuts (10.424 seconds)
Knapsack was tried 442 times and created 696 cuts of which 0 were active after adding rounds of cuts (0.873 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
MixedIntegerRounding2 was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
TwoMirCuts was tried 442 times and created 4073 cuts of which 0 were active after adding rounds of cuts (3.400 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.130 seconds)
ImplicationCuts was tried 62 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    46086.000
Enumerated nodes:               567
Total iterations:               2466169
Time (CPU seconds):             1800.82
Time (Wallclock seconds):       1801.46

Total time (CPU seconds):       1800.85   (Wallclock seconds):       1801.50

