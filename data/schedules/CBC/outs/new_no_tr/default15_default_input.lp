Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_no_tr/order/default15_default_input.lp sec 1800 solve solu solutions/new_no_tr/default15_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 19456 - 0.01 seconds
Cgl0002I 33 variables fixed
Cgl0003I 0 fixed, 10 tightened bounds, 127 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 5 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 2 fixed, 2 tightened bounds, 23 strengthened rows, 2 substitutions
Cgl0003I 22 fixed, 6 tightened bounds, 75 strengthened rows, 3 substitutions
Cgl0003I 2 fixed, 2 tightened bounds, 13 strengthened rows, 7 substitutions
Cgl0003I 3 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 3 fixed, 2 tightened bounds, 3 strengthened rows, 2 substitutions
Cgl0003I 3 fixed, 0 tightened bounds, 0 strengthened rows, 1 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 3 fixed, 3 tightened bounds, 12 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 1 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 431 rows, 149 columns (149 integer (133 of which binary)) and 1452 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 149 objects (149 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 60 integers unsatisfied sum - 14.9546
Cbc0038I Pass   1: suminf.    2.27937 (16) obj. 23552 iterations 140
Cbc0038I Pass   2: suminf.    3.05085 (12) obj. 23552 iterations 41
Cbc0038I Pass   3: suminf.    2.52571 (12) obj. 23552 iterations 27
Cbc0038I Pass   4: suminf.    2.58182 (14) obj. 23552 iterations 23
Cbc0038I Pass   5: suminf.    0.00000 (0) obj. 23552 iterations 43
Cbc0038I Solution found of 23552
Cbc0038I Cleaned solution of 23552
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 431 rows 149 columns, reduced to 238 rows 66 columns - 8 fixed gives 89, 27 - ok now
Cbc0038I Full problem 431 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of 23192.7
Cbc0038I Pass   6: suminf.    2.91553 (29) obj. 23192 iterations 22
Cbc0038I Pass   7: suminf.    7.58927 (29) obj. 23192.7 iterations 61
Cbc0038I Pass   8: suminf.    5.61421 (26) obj. 23192.7 iterations 19
Cbc0038I Pass   9: suminf.    4.90750 (28) obj. 23192.7 iterations 17
Cbc0038I Pass  10: suminf.    2.28529 (11) obj. 23192.7 iterations 42
Cbc0038I Pass  11: suminf.    0.68967 (13) obj. 23192.7 iterations 33
Cbc0038I Pass  12: suminf.    0.29991 (1) obj. 23192.7 iterations 118
Cbc0038I Solution found of 23192.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 432 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 21504
Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 431 rows 149 columns, reduced to 241 rows 70 columns - 26 fixed gives 39, 17 - ok now
Cbc0038I Full problem 431 rows 149 columns, reduced to 31 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of 21196
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  13: suminf.    5.96471 (30) obj. 21196 iterations 6
Cbc0038I Pass  14: suminf.    3.01180 (13) obj. 21196 iterations 115
Cbc0038I Pass  15: suminf.    0.00008 (1) obj. 21196 iterations 8
Cbc0038I Solution found of 21196
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 432 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 20480
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 431 rows 149 columns, reduced to 236 rows 65 columns - 24 fixed gives 26, 12 - ok now
Cbc0038I Full problem 431 rows 149 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of 20325.7
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  16: suminf.    7.18008 (30) obj. 20325.7 iterations 0
Cbc0038I Pass  17: suminf.    3.31360 (14) obj. 20325.7 iterations 37
Cbc0038I Pass  18: suminf.    3.31360 (14) obj. 20325.7 iterations 4
Cbc0038I Pass  19: suminf.    4.90071 (14) obj. 20325.7 iterations 12
Cbc0038I Pass  20: suminf.   11.10010 (57) obj. 20325.7 iterations 105
Cbc0038I Pass  21: suminf.    8.39411 (38) obj. 20325.7 iterations 63
Cbc0038I Pass  22: suminf.    5.07903 (46) obj. 20325.7 iterations 66
Cbc0038I Pass  23: suminf.    3.99168 (22) obj. 20325.7 iterations 21
Cbc0038I Pass  24: suminf.    3.99168 (22) obj. 20325.7 iterations 0
Cbc0038I Pass  25: suminf.    4.90071 (14) obj. 20325.7 iterations 29
Cbc0038I Pass  26: suminf.    3.31360 (14) obj. 20325.7 iterations 27
Cbc0038I Pass  27: suminf.    9.34117 (55) obj. 20325.7 iterations 89
Cbc0038I Pass  28: suminf.    7.58820 (45) obj. 20325.7 iterations 32
Cbc0038I Pass  29: suminf.    3.31360 (14) obj. 20325.7 iterations 27
Cbc0038I Pass  30: suminf.    9.42381 (55) obj. 20325.7 iterations 91
Cbc0038I Pass  31: suminf.    3.31360 (14) obj. 20325.7 iterations 144
Cbc0038I Pass  32: suminf.    3.31360 (14) obj. 20325.7 iterations 3
Cbc0038I Pass  33: suminf.    4.90071 (14) obj. 20325.7 iterations 16
Cbc0038I Pass  34: suminf.   10.48133 (63) obj. 20325.7 iterations 71
Cbc0038I Pass  35: suminf.    4.90071 (14) obj. 20325.7 iterations 65
Cbc0038I Pass  36: suminf.   14.81877 (61) obj. 20325.7 iterations 73
Cbc0038I Pass  37: suminf.    8.47583 (31) obj. 20325.7 iterations 81
Cbc0038I Pass  38: suminf.    3.95745 (18) obj. 20325.7 iterations 93
Cbc0038I Pass  39: suminf.    3.95745 (18) obj. 20325.7 iterations 4
Cbc0038I Pass  40: suminf.    5.99269 (18) obj. 20325.7 iterations 29
Cbc0038I Pass  41: suminf.   15.31753 (54) obj. 20325.7 iterations 75
Cbc0038I Pass  42: suminf.    8.01084 (34) obj. 20325.7 iterations 51
Cbc0038I Pass  43: suminf.   13.14931 (52) obj. 20325.7 iterations 54
Cbc0038I Pass  44: suminf.    8.55708 (40) obj. 20325.7 iterations 40
Cbc0038I Pass  45: suminf.    7.69254 (25) obj. 20325.7 iterations 16
Cbc0038I Pass  46: suminf.    6.90376 (21) obj. 20325.7 iterations 14
Cbc0038I Pass  47: suminf.    4.28697 (23) obj. 20325.7 iterations 63
Cbc0038I Pass  48: suminf.    4.38602 (44) obj. 20325.7 iterations 30
Cbc0038I Pass  49: suminf.    3.31360 (14) obj. 20325.7 iterations 20
Cbc0038I Pass  50: suminf.    3.31360 (14) obj. 20325.7 iterations 0
Cbc0038I Pass  51: suminf.    4.90071 (14) obj. 20325.7 iterations 13
Cbc0038I Pass  52: suminf.   13.19489 (62) obj. 20325.7 iterations 82
Cbc0038I Pass  53: suminf.    8.45780 (29) obj. 20325.7 iterations 52
Cbc0038I Pass  54: suminf.    8.22122 (26) obj. 20325.7 iterations 11
Cbc0038I Pass  55: suminf.    5.29851 (26) obj. 20325.7 iterations 47
Cbc0038I Pass  56: suminf.    4.90071 (14) obj. 20325.7 iterations 37
Cbc0038I Pass  57: suminf.    4.90071 (14) obj. 20325.7 iterations 13
Cbc0038I Pass  58: suminf.    3.31360 (14) obj. 20325.7 iterations 17
Cbc0038I Pass  59: suminf.   11.52575 (60) obj. 20325.7 iterations 91
Cbc0038I Pass  60: suminf.    9.08734 (59) obj. 20325.7 iterations 51
Cbc0038I Pass  61: suminf.    8.88754 (53) obj. 20325.7 iterations 67
Cbc0038I Pass  62: suminf.    5.99336 (43) obj. 20325.7 iterations 31
Cbc0038I Pass  63: suminf.    6.81360 (21) obj. 20325.7 iterations 126
Cbc0038I Pass  64: suminf.    3.31360 (14) obj. 20325.7 iterations 22
Cbc0038I Pass  65: suminf.    3.31360 (14) obj. 20325.7 iterations 14
Cbc0038I Pass  66: suminf.    4.90071 (14) obj. 20325.7 iterations 82
Cbc0038I Pass  67: suminf.    4.90071 (14) obj. 20325.7 iterations 40
Cbc0038I Pass  68: suminf.    4.90071 (14) obj. 20325.7 iterations 39
Cbc0038I Pass  69: suminf.   10.01816 (35) obj. 20325.7 iterations 54
Cbc0038I Pass  70: suminf.    4.90071 (14) obj. 20325.7 iterations 45
Cbc0038I Pass  71: suminf.   14.75074 (56) obj. 20325.7 iterations 95
Cbc0038I Pass  72: suminf.    9.71815 (48) obj. 20325.7 iterations 63
Cbc0038I Pass  73: suminf.    8.54970 (41) obj. 20325.7 iterations 11
Cbc0038I Pass  74: suminf.    4.90071 (14) obj. 20325.7 iterations 108
Cbc0038I Pass  75: suminf.    4.90071 (14) obj. 20325.7 iterations 0
Cbc0038I Pass  76: suminf.    3.31360 (14) obj. 20325.7 iterations 16
Cbc0038I Pass  77: suminf.   12.73994 (54) obj. 20325.7 iterations 69
Cbc0038I Pass  78: suminf.    4.11007 (22) obj. 20325.7 iterations 62
Cbc0038I Pass  79: suminf.    4.90071 (14) obj. 20325.7 iterations 32
Cbc0038I Pass  80: suminf.    3.31360 (14) obj. 20325.7 iterations 28
Cbc0038I Pass  81: suminf.    9.07094 (37) obj. 20325.7 iterations 71
Cbc0038I Pass  82: suminf.    3.31360 (14) obj. 20325.7 iterations 65
Cbc0038I Pass  83: suminf.    3.31360 (14) obj. 20325.7 iterations 8
Cbc0038I Pass  84: suminf.    4.90071 (14) obj. 20325.7 iterations 37
Cbc0038I Pass  85: suminf.   13.19862 (56) obj. 20325.7 iterations 66
Cbc0038I Pass  86: suminf.    7.37202 (29) obj. 20325.7 iterations 43
Cbc0038I Pass  87: suminf.    7.24885 (32) obj. 20325.7 iterations 15
Cbc0038I Pass  88: suminf.    8.54708 (35) obj. 20325.7 iterations 59
Cbc0038I Pass  89: suminf.    5.56538 (34) obj. 20325.7 iterations 16
Cbc0038I Pass  90: suminf.    5.45566 (27) obj. 20325.7 iterations 18
Cbc0038I Pass  91: suminf.    5.60847 (19) obj. 20325.7 iterations 75
Cbc0038I Pass  92: suminf.    4.90071 (14) obj. 20325.7 iterations 7
Cbc0038I Pass  93: suminf.    3.31360 (14) obj. 20325.7 iterations 21
Cbc0038I Pass  94: suminf.   14.02737 (70) obj. 20325.7 iterations 96
Cbc0038I Pass  95: suminf.    5.26129 (28) obj. 20325.7 iterations 41
Cbc0038I Pass  96: suminf.    4.65279 (21) obj. 20325.7 iterations 12
Cbc0038I Pass  97: suminf.    4.90071 (14) obj. 20325.7 iterations 89
Cbc0038I Pass  98: suminf.    4.90071 (14) obj. 20325.7 iterations 7
Cbc0038I Pass  99: suminf.    3.31360 (14) obj. 20325.7 iterations 12
Cbc0038I Pass 100: suminf.   12.36280 (51) obj. 20325.7 iterations 85
Cbc0038I Pass 101: suminf.    4.46335 (23) obj. 20325.7 iterations 61
Cbc0038I Pass 102: suminf.    4.46335 (23) obj. 20325.7 iterations 14
Cbc0038I Pass 103: suminf.    6.49954 (21) obj. 20325.7 iterations 101
Cbc0038I Pass 104: suminf.    5.99269 (18) obj. 20325.7 iterations 9
Cbc0038I Pass 105: suminf.    3.95745 (18) obj. 20325.7 iterations 34
Cbc0038I Pass 106: suminf.    4.90809 (21) obj. 20325.7 iterations 41
Cbc0038I Pass 107: suminf.    4.61151 (24) obj. 20325.7 iterations 25
Cbc0038I Pass 108: suminf.    6.59036 (25) obj. 20325.7 iterations 81
Cbc0038I Pass 109: suminf.   12.64408 (63) obj. 20325.7 iterations 80
Cbc0038I Pass 110: suminf.    5.28913 (34) obj. 20325.7 iterations 81
Cbc0038I Pass 111: suminf.    5.28913 (34) obj. 20325.7 iterations 0
Cbc0038I Pass 112: suminf.    6.19360 (26) obj. 20325.7 iterations 87
Cbc0038I Pass 113: suminf.    5.54719 (29) obj. 20325.7 iterations 41
Cbc0038I Pass 114: suminf.    7.81529 (31) obj. 20325.7 iterations 48
Cbc0038I Pass 115: suminf.    9.62953 (49) obj. 20325.7 iterations 90
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 431 rows 149 columns, reduced to 413 rows 141 columns - 57 fixed gives 52, 21 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.62 seconds)
Cbc0038I After 0.62 seconds - Feasibility pump exiting with objective of 20480 - took 0.56 seconds
Cbc0012I Integer solution of 20480 found by feasibility pump after 0 iterations and 0 nodes (0.62 seconds)
Cbc0038I Full problem 431 rows 149 columns, reduced to 229 rows 63 columns - 23 fixed gives 26, 12 - ok now
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 19968 to 19968 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 20480, took 0 iterations and 0 nodes (0.63 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Cuts at root node changed objective from 19968 to 19968
Probing was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                20480.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.64
Time (Wallclock seconds):       0.65

Total time (CPU seconds):       0.64   (Wallclock seconds):       0.65

