Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_3_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang7_3_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 297.673 - 0.05 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 367 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 106 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1486 rows, 526 columns (526 integer (498 of which binary)) and 4928 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 263 integers unsatisfied sum - 63.7746
Cbc0038I Pass   1: suminf.   29.72359 (162) obj. 330.085 iterations 502
Cbc0038I Pass   2: suminf.   27.83030 (154) obj. 328.324 iterations 51
Cbc0038I Pass   3: suminf.   27.46031 (163) obj. 328.669 iterations 51
Cbc0038I Pass   4: suminf.   27.10005 (149) obj. 361.469 iterations 54
Cbc0038I Pass   5: suminf.   27.91060 (143) obj. 360.611 iterations 45
Cbc0038I Pass   6: suminf.   24.73678 (142) obj. 354.473 iterations 50
Cbc0038I Pass   7: suminf.   20.64680 (121) obj. 355.696 iterations 98
Cbc0038I Pass   8: suminf.   19.50057 (108) obj. 358 iterations 45
Cbc0038I Pass   9: suminf.   12.80354 (74) obj. 358 iterations 117
Cbc0038I Pass  10: suminf.   10.54204 (73) obj. 358 iterations 29
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 358 iterations 115
Cbc0038I Solution found of 358
Cbc0038I Cleaned solution of 358
Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1052 rows 317 columns - 36 fixed gives 743, 206 - ok now
Cbc0038I Full problem 1486 rows 526 columns, reduced to 248 rows 87 columns
Cbc0038I Mini branch and bound improved solution from 358 to 357 (0.37 seconds)
Cbc0038I Round again with cutoff of 350.167
Cbc0038I Pass  12: suminf.   29.72359 (162) obj. 330.085 iterations 0
Cbc0038I Pass  13: suminf.   27.83030 (154) obj. 328.324 iterations 60
Cbc0038I Pass  14: suminf.   27.46031 (163) obj. 328.669 iterations 53
Cbc0038I Pass  15: suminf.   26.83105 (152) obj. 350.167 iterations 54
Cbc0038I Pass  16: suminf.   16.93066 (112) obj. 350.167 iterations 202
Cbc0038I Pass  17: suminf.   16.37785 (113) obj. 350.167 iterations 41
Cbc0038I Pass  18: suminf.   16.68510 (104) obj. 350.167 iterations 88
Cbc0038I Pass  19: suminf.   15.97994 (104) obj. 350.167 iterations 43
Cbc0038I Pass  20: suminf.   14.46130 (92) obj. 350.167 iterations 93
Cbc0038I Pass  21: suminf.   12.01382 (95) obj. 350.167 iterations 51
Cbc0038I Pass  22: suminf.   10.75273 (61) obj. 350.167 iterations 86
Cbc0038I Pass  23: suminf.    7.18156 (64) obj. 350.167 iterations 97
Cbc0038I Pass  24: suminf.   19.26859 (87) obj. 334.52 iterations 147
Cbc0038I Pass  25: suminf.   10.18666 (56) obj. 350.167 iterations 105
Cbc0038I Pass  26: suminf.    9.13573 (58) obj. 350.167 iterations 66
Cbc0038I Pass  27: suminf.    9.59202 (58) obj. 350.167 iterations 80
Cbc0038I Pass  28: suminf.    8.36599 (67) obj. 350.167 iterations 59
Cbc0038I Pass  29: suminf.   15.44392 (80) obj. 350.167 iterations 121
Cbc0038I Pass  30: suminf.    9.50901 (62) obj. 350.167 iterations 70
Cbc0038I Pass  31: suminf.    7.69628 (63) obj. 350.167 iterations 76
Cbc0038I Pass  32: suminf.    8.84327 (46) obj. 350.167 iterations 87
Cbc0038I Pass  33: suminf.    7.28906 (58) obj. 350.167 iterations 79
Cbc0038I Pass  34: suminf.   11.86863 (69) obj. 350.167 iterations 116
Cbc0038I Pass  35: suminf.    7.00301 (58) obj. 350.167 iterations 125
Cbc0038I Pass  36: suminf.    8.73954 (75) obj. 350.167 iterations 93
Cbc0038I Pass  37: suminf.    6.22750 (74) obj. 350.167 iterations 40
Cbc0038I Pass  38: suminf.    5.88820 (71) obj. 350.167 iterations 8
Cbc0038I Pass  39: suminf.    7.52811 (59) obj. 350.167 iterations 115
Cbc0038I Pass  40: suminf.    6.35512 (75) obj. 350.167 iterations 51
Cbc0038I Pass  41: suminf.    6.27296 (75) obj. 350.167 iterations 6
Cbc0038I Pass  42: suminf.    9.57932 (63) obj. 350.167 iterations 86
Cbc0038I Pass  43: suminf.    6.09465 (55) obj. 350.167 iterations 48
Cbc0038I Pass  44: suminf.    6.74839 (68) obj. 350.167 iterations 55
Cbc0038I Pass  45: suminf.   15.26211 (79) obj. 350.167 iterations 95
Cbc0038I Pass  46: suminf.    8.66706 (73) obj. 350.167 iterations 91
Cbc0038I Pass  47: suminf.    7.24391 (74) obj. 350.167 iterations 35
Cbc0038I Pass  48: suminf.    6.99508 (78) obj. 350.167 iterations 126
Cbc0038I Pass  49: suminf.    5.48209 (72) obj. 350.167 iterations 58
Cbc0038I Pass  50: suminf.    9.55636 (50) obj. 350.167 iterations 97
Cbc0038I Pass  51: suminf.    5.46545 (53) obj. 350.167 iterations 67
Cbc0038I Pass  52: suminf.    9.06782 (47) obj. 347.715 iterations 72
Cbc0038I Pass  53: suminf.   36.98180 (169) obj. 350.167 iterations 293
Cbc0038I Pass  54: suminf.   24.26160 (170) obj. 350.167 iterations 243
Cbc0038I Pass  55: suminf.   21.70648 (152) obj. 350.167 iterations 33
Cbc0038I Pass  56: suminf.   21.52001 (155) obj. 350.167 iterations 4
Cbc0038I Pass  57: suminf.   18.47935 (131) obj. 350.167 iterations 91
Cbc0038I Pass  58: suminf.   18.43650 (131) obj. 350.167 iterations 27
Cbc0038I Pass  59: suminf.   12.19940 (103) obj. 350.167 iterations 127
Cbc0038I Pass  60: suminf.   11.25332 (105) obj. 350.167 iterations 52
Cbc0038I Pass  61: suminf.    9.70944 (107) obj. 350.167 iterations 28
Cbc0038I Pass  62: suminf.    9.64105 (117) obj. 350.167 iterations 17
Cbc0038I Pass  63: suminf.    9.91225 (63) obj. 350.167 iterations 84
Cbc0038I Pass  64: suminf.    6.38482 (67) obj. 350.167 iterations 50
Cbc0038I Pass  65: suminf.    6.29250 (71) obj. 350.167 iterations 21
Cbc0038I Pass  66: suminf.   13.59994 (88) obj. 350.167 iterations 96
Cbc0038I Pass  67: suminf.   12.19079 (80) obj. 350.167 iterations 68
Cbc0038I Pass  68: suminf.   11.27051 (79) obj. 350.167 iterations 21
Cbc0038I Pass  69: suminf.    6.63282 (51) obj. 350.167 iterations 209
Cbc0038I Pass  70: suminf.    6.14759 (57) obj. 350.167 iterations 64
Cbc0038I Pass  71: suminf.   13.36942 (95) obj. 326.677 iterations 143
Cbc0038I Pass  72: suminf.   12.99941 (98) obj. 326.602 iterations 28
Cbc0038I Pass  73: suminf.    5.91068 (58) obj. 350.167 iterations 113
Cbc0038I Pass  74: suminf.    5.83987 (60) obj. 350.167 iterations 31
Cbc0038I Pass  75: suminf.    8.54855 (67) obj. 350.167 iterations 104
Cbc0038I Pass  76: suminf.    7.74192 (69) obj. 350.167 iterations 32
Cbc0038I Pass  77: suminf.    6.52378 (60) obj. 350.167 iterations 40
Cbc0038I Pass  78: suminf.    6.36222 (62) obj. 350.167 iterations 9
Cbc0038I Pass  79: suminf.    6.70615 (61) obj. 350.167 iterations 25
Cbc0038I Pass  80: suminf.    9.30481 (64) obj. 350.167 iterations 113
Cbc0038I Pass  81: suminf.    5.45325 (52) obj. 350.167 iterations 68
Cbc0038I Pass  82: suminf.   11.86457 (81) obj. 350.167 iterations 246
Cbc0038I Pass  83: suminf.   11.66035 (80) obj. 350.167 iterations 5
Cbc0038I Pass  84: suminf.    5.16242 (53) obj. 350.167 iterations 119
Cbc0038I Pass  85: suminf.    5.16242 (53) obj. 350.167 iterations 7
Cbc0038I Pass  86: suminf.    9.45408 (71) obj. 350.167 iterations 54
Cbc0038I Pass  87: suminf.    8.98960 (73) obj. 350.167 iterations 38
Cbc0038I Pass  88: suminf.    9.25539 (108) obj. 350.167 iterations 147
Cbc0038I Pass  89: suminf.    7.55965 (103) obj. 350.167 iterations 64
Cbc0038I Pass  90: suminf.    6.90042 (81) obj. 350.167 iterations 108
Cbc0038I Pass  91: suminf.    5.17972 (54) obj. 350.167 iterations 65
Cbc0038I Pass  92: suminf.    9.86604 (66) obj. 350.167 iterations 81
Cbc0038I Pass  93: suminf.    7.84769 (65) obj. 350.167 iterations 45
Cbc0038I Pass  94: suminf.    6.50516 (48) obj. 350.167 iterations 80
Cbc0038I Pass  95: suminf.    5.26656 (60) obj. 350.167 iterations 52
Cbc0038I Pass  96: suminf.   14.06325 (110) obj. 350.167 iterations 153
Cbc0038I Pass  97: suminf.    9.86319 (92) obj. 350.167 iterations 86
Cbc0038I Pass  98: suminf.    8.89714 (95) obj. 350.167 iterations 24
Cbc0038I Pass  99: suminf.    8.81994 (105) obj. 350.167 iterations 34
Cbc0038I Pass 100: suminf.    8.50889 (120) obj. 350.167 iterations 23
Cbc0038I Pass 101: suminf.    7.22487 (56) obj. 350.167 iterations 61
Cbc0038I Pass 102: suminf.    5.08399 (49) obj. 350.167 iterations 30
Cbc0038I Pass 103: suminf.    8.32620 (64) obj. 350.167 iterations 49
Cbc0038I Pass 104: suminf.    7.67148 (72) obj. 350.167 iterations 38
Cbc0038I Pass 105: suminf.    8.72462 (102) obj. 350.167 iterations 114
Cbc0038I Pass 106: suminf.    8.53922 (105) obj. 350.167 iterations 46
Cbc0038I Pass 107: suminf.    6.73515 (48) obj. 350.167 iterations 81
Cbc0038I Pass 108: suminf.    5.22171 (53) obj. 350.167 iterations 33
Cbc0038I Pass 109: suminf.   15.18965 (113) obj. 350.167 iterations 233
Cbc0038I Pass 110: suminf.   10.95780 (119) obj. 350.167 iterations 85
Cbc0038I Pass 111: suminf.   27.55504 (162) obj. 350.167 iterations 294
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1249 rows 416 columns - 125 fixed gives 492, 162 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.99 seconds)
Cbc0038I After 1.00 seconds - Feasibility pump exiting with objective of 357 - took 0.81 seconds
Cbc0012I Integer solution of 357 found by feasibility pump after 0 iterations and 0 nodes (1.00 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 961 rows 272 columns - 116 fixed gives 237, 62 - ok now
Cbc0031I 35 added rows had average density of 121.4
Cbc0013I At root node, 35 cuts changed objective from 297.67347 to 312 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 111 row cuts average 2.3 elements, 10 column cuts (10 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 47 row cuts average 110.4 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 237 row cuts average 280.2 elements, 0 column cuts (0 active)  in 0.393 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 357 best solution, best possible 312 (2.91 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 762 rows 226 columns - 83 fixed gives 237, 62 - ok now
Cbc0038I Full problem 1486 rows 526 columns, reduced to 561 rows 171 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 474 rows 145 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 521 rows 163 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 293 rows 86 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 481 rows 150 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 445 rows 137 columns
Cbc0010I After 1000 nodes, 23 on tree, 357 best solution, best possible 318 (27.07 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 484 rows 150 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 481 rows 151 columns
Cbc0010I After 2000 nodes, 22 on tree, 357 best solution, best possible 318 (36.22 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 467 rows 142 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 381 rows 120 columns
Cbc0010I After 3000 nodes, 25 on tree, 357 best solution, best possible 318 (46.29 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 510 rows 159 columns
Cbc0010I After 4000 nodes, 23 on tree, 357 best solution, best possible 318 (55.87 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 463 rows 142 columns
Cbc0010I After 5000 nodes, 16 on tree, 357 best solution, best possible 318 (66.18 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 491 rows 151 columns
Cbc0010I After 6000 nodes, 12 on tree, 357 best solution, best possible 318 (75.86 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 513 rows 162 columns
Cbc0010I After 7000 nodes, 14 on tree, 357 best solution, best possible 318 (86.18 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 356 rows 109 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 466 rows 150 columns
Cbc0010I After 8000 nodes, 8 on tree, 357 best solution, best possible 318 (96.86 seconds)
Cbc0010I After 9000 nodes, 29 on tree, 357 best solution, best possible 319 (106.22 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 421 rows 133 columns
Cbc0010I After 10000 nodes, 17 on tree, 357 best solution, best possible 319 (112.94 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 481 rows 151 columns
Cbc0010I After 11000 nodes, 16 on tree, 357 best solution, best possible 319 (120.01 seconds)
Cbc0010I After 12000 nodes, 22 on tree, 357 best solution, best possible 320 (129.47 seconds)
Cbc0010I After 13000 nodes, 31 on tree, 357 best solution, best possible 320 (139.93 seconds)
Cbc0010I After 14000 nodes, 16 on tree, 357 best solution, best possible 320 (151.17 seconds)
Cbc0010I After 15000 nodes, 12 on tree, 357 best solution, best possible 320 (161.52 seconds)
Cbc0010I After 16000 nodes, 22 on tree, 357 best solution, best possible 320 (173.89 seconds)
Cbc0010I After 17000 nodes, 10 on tree, 357 best solution, best possible 320 (183.41 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 487 rows 150 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 430 rows 139 columns
Cbc0010I After 18000 nodes, 17 on tree, 357 best solution, best possible 321 (193.50 seconds)
Cbc0010I After 19000 nodes, 25 on tree, 357 best solution, best possible 322 (207.69 seconds)
Cbc0010I After 20000 nodes, 32 on tree, 357 best solution, best possible 322 (221.90 seconds)
Cbc0010I After 21000 nodes, 20 on tree, 357 best solution, best possible 322 (235.88 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 590 rows 184 columns
Cbc0010I After 22000 nodes, 14 on tree, 357 best solution, best possible 322 (250.31 seconds)
Cbc0010I After 23000 nodes, 31 on tree, 357 best solution, best possible 322 (265.82 seconds)
Cbc0010I After 24000 nodes, 33 on tree, 357 best solution, best possible 322 (276.56 seconds)
Cbc0010I After 25000 nodes, 34 on tree, 357 best solution, best possible 322 (291.32 seconds)
Cbc0010I After 26000 nodes, 22 on tree, 357 best solution, best possible 322 (302.67 seconds)
Cbc0010I After 27000 nodes, 8 on tree, 357 best solution, best possible 322 (319.46 seconds)
Cbc0010I After 28000 nodes, 15 on tree, 357 best solution, best possible 322 (333.06 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 772 rows 243 columns - 80 fixed gives 248, 64 - ok now
Cbc0010I After 29000 nodes, 8 on tree, 357 best solution, best possible 322 (344.93 seconds)
Cbc0010I After 30000 nodes, 10 on tree, 357 best solution, best possible 322 (353.93 seconds)
Cbc0010I After 31000 nodes, 10 on tree, 357 best solution, best possible 322 (365.88 seconds)
Cbc0010I After 32000 nodes, 15 on tree, 357 best solution, best possible 323 (377.61 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 778 rows 232 columns - 75 fixed gives 255, 70 - ok now
Cbc0010I After 33000 nodes, 16 on tree, 357 best solution, best possible 323 (390.16 seconds)
Cbc0010I After 34000 nodes, 20 on tree, 357 best solution, best possible 323 (403.09 seconds)
Cbc0010I After 35000 nodes, 14 on tree, 357 best solution, best possible 323 (417.87 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 775 rows 246 columns - 85 fixed gives 283, 77 - ok now
Cbc0010I After 36000 nodes, 11 on tree, 357 best solution, best possible 323 (431.24 seconds)
Cbc0010I After 37000 nodes, 22 on tree, 357 best solution, best possible 323 (442.33 seconds)
Cbc0010I After 38000 nodes, 22 on tree, 357 best solution, best possible 323 (452.76 seconds)
Cbc0010I After 39000 nodes, 10 on tree, 357 best solution, best possible 323 (465.19 seconds)
Cbc0010I After 40000 nodes, 13 on tree, 357 best solution, best possible 323 (474.96 seconds)
Cbc0010I After 41000 nodes, 8 on tree, 357 best solution, best possible 324 (487.75 seconds)
Cbc0010I After 42000 nodes, 26 on tree, 357 best solution, best possible 324 (499.63 seconds)
Cbc0010I After 43000 nodes, 11 on tree, 357 best solution, best possible 324 (512.69 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 552 rows 173 columns
Cbc0010I After 44000 nodes, 19 on tree, 357 best solution, best possible 324 (524.53 seconds)
Cbc0010I After 45000 nodes, 15 on tree, 357 best solution, best possible 324 (536.03 seconds)
Cbc0010I After 46000 nodes, 10 on tree, 357 best solution, best possible 324 (544.65 seconds)
Cbc0010I After 47000 nodes, 15 on tree, 357 best solution, best possible 325 (555.52 seconds)
Cbc0010I After 48000 nodes, 16 on tree, 357 best solution, best possible 325 (566.62 seconds)
Cbc0010I After 49000 nodes, 21 on tree, 357 best solution, best possible 325 (575.74 seconds)
Cbc0010I After 50000 nodes, 14 on tree, 357 best solution, best possible 325 (586.31 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 548 rows 165 columns
Cbc0010I After 51000 nodes, 12 on tree, 357 best solution, best possible 325 (598.08 seconds)
Cbc0010I After 52000 nodes, 6 on tree, 357 best solution, best possible 325 (606.58 seconds)
Cbc0010I After 53000 nodes, 13 on tree, 357 best solution, best possible 325 (616.11 seconds)
Cbc0010I After 54000 nodes, 20 on tree, 357 best solution, best possible 325 (624.83 seconds)
Cbc0010I After 55000 nodes, 15 on tree, 357 best solution, best possible 325 (635.79 seconds)
Cbc0010I After 56000 nodes, 22 on tree, 357 best solution, best possible 325 (646.72 seconds)
Cbc0010I After 57000 nodes, 9 on tree, 357 best solution, best possible 325 (658.03 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 495 rows 149 columns
Cbc0010I After 58000 nodes, 15 on tree, 357 best solution, best possible 325 (668.91 seconds)
Cbc0010I After 59000 nodes, 14 on tree, 357 best solution, best possible 326 (680.09 seconds)
Cbc0010I After 60000 nodes, 21 on tree, 357 best solution, best possible 326 (692.28 seconds)
Cbc0010I After 61000 nodes, 14 on tree, 357 best solution, best possible 326 (704.32 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 752 rows 251 columns - 74 fixed gives 270, 71 - ok now
Cbc0010I After 62000 nodes, 8 on tree, 357 best solution, best possible 326 (714.82 seconds)
Cbc0010I After 63000 nodes, 8 on tree, 357 best solution, best possible 326 (722.57 seconds)
Cbc0010I After 64000 nodes, 8 on tree, 357 best solution, best possible 326 (731.24 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 443 rows 130 columns
Cbc0010I After 65000 nodes, 11 on tree, 357 best solution, best possible 326 (742.80 seconds)
Cbc0010I After 66000 nodes, 26 on tree, 357 best solution, best possible 327 (753.89 seconds)
Cbc0010I After 67000 nodes, 22 on tree, 357 best solution, best possible 327 (762.07 seconds)
Cbc0010I After 68000 nodes, 14 on tree, 357 best solution, best possible 327 (772.57 seconds)
Cbc0010I After 69000 nodes, 18 on tree, 357 best solution, best possible 327 (782.68 seconds)
Cbc0010I After 70000 nodes, 15 on tree, 357 best solution, best possible 327 (792.59 seconds)
Cbc0010I After 71000 nodes, 13 on tree, 357 best solution, best possible 327 (802.21 seconds)
Cbc0010I After 72000 nodes, 11 on tree, 357 best solution, best possible 327 (813.85 seconds)
Cbc0010I After 73000 nodes, 6 on tree, 357 best solution, best possible 327 (825.00 seconds)
Cbc0010I After 74000 nodes, 28 on tree, 357 best solution, best possible 328 (835.94 seconds)
Cbc0010I After 75000 nodes, 23 on tree, 357 best solution, best possible 328 (846.31 seconds)
Cbc0010I After 76000 nodes, 15 on tree, 357 best solution, best possible 328 (856.43 seconds)
Cbc0010I After 77000 nodes, 23 on tree, 357 best solution, best possible 328 (867.38 seconds)
Cbc0010I After 78000 nodes, 34 on tree, 357 best solution, best possible 328 (875.71 seconds)
Cbc0010I After 79000 nodes, 20 on tree, 357 best solution, best possible 328 (884.32 seconds)
Cbc0010I After 80000 nodes, 18 on tree, 357 best solution, best possible 328 (895.51 seconds)
Cbc0010I After 81000 nodes, 8 on tree, 357 best solution, best possible 328 (905.81 seconds)
Cbc0010I After 82000 nodes, 6 on tree, 357 best solution, best possible 328 (915.89 seconds)
Cbc0010I After 83000 nodes, 14 on tree, 357 best solution, best possible 329 (927.83 seconds)
Cbc0010I After 84000 nodes, 9 on tree, 357 best solution, best possible 329 (938.51 seconds)
Cbc0010I After 85000 nodes, 21 on tree, 357 best solution, best possible 329 (947.12 seconds)
Cbc0010I After 86000 nodes, 14 on tree, 357 best solution, best possible 329 (955.37 seconds)
Cbc0010I After 87000 nodes, 22 on tree, 357 best solution, best possible 329 (966.34 seconds)
Cbc0010I After 88000 nodes, 9 on tree, 357 best solution, best possible 329 (976.42 seconds)
Cbc0010I After 89000 nodes, 10 on tree, 357 best solution, best possible 330 (987.02 seconds)
Cbc0010I After 90000 nodes, 12 on tree, 357 best solution, best possible 330 (1000.23 seconds)
Cbc0010I After 91000 nodes, 18 on tree, 357 best solution, best possible 330 (1012.24 seconds)
Cbc0010I After 92000 nodes, 13 on tree, 357 best solution, best possible 330 (1025.09 seconds)
Cbc0010I After 93000 nodes, 6 on tree, 357 best solution, best possible 330 (1036.11 seconds)
Cbc0010I After 94000 nodes, 30 on tree, 357 best solution, best possible 330 (1045.94 seconds)
Cbc0010I After 95000 nodes, 39 on tree, 357 best solution, best possible 330 (1054.98 seconds)
Cbc0010I After 96000 nodes, 43 on tree, 357 best solution, best possible 330 (1063.92 seconds)
Cbc0010I After 97000 nodes, 33 on tree, 357 best solution, best possible 330 (1072.02 seconds)
Cbc0010I After 98000 nodes, 33 on tree, 357 best solution, best possible 330 (1080.63 seconds)
Cbc0010I After 99000 nodes, 32 on tree, 357 best solution, best possible 330 (1088.19 seconds)
Cbc0010I After 100000 nodes, 25 on tree, 357 best solution, best possible 330 (1097.83 seconds)
Cbc0010I After 101000 nodes, 24 on tree, 357 best solution, best possible 330 (1110.76 seconds)
Cbc0010I After 102000 nodes, 17 on tree, 357 best solution, best possible 330 (1125.29 seconds)
Cbc0010I After 103000 nodes, 22 on tree, 357 best solution, best possible 330 (1138.78 seconds)
Cbc0010I After 104000 nodes, 26 on tree, 357 best solution, best possible 330 (1152.43 seconds)
Cbc0010I After 105000 nodes, 24 on tree, 357 best solution, best possible 330 (1166.76 seconds)
Cbc0010I After 106000 nodes, 30 on tree, 357 best solution, best possible 330 (1183.47 seconds)
Cbc0010I After 107000 nodes, 44 on tree, 357 best solution, best possible 331 (1199.37 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 934 rows 273 columns - 93 fixed gives 269, 74 - ok now
Cbc0010I After 108000 nodes, 44 on tree, 357 best solution, best possible 331 (1218.47 seconds)
Cbc0010I After 109000 nodes, 32 on tree, 357 best solution, best possible 331 (1236.94 seconds)
Cbc0010I After 110000 nodes, 38 on tree, 357 best solution, best possible 331 (1253.32 seconds)
Cbc0010I After 111000 nodes, 42 on tree, 357 best solution, best possible 331 (1267.55 seconds)
Cbc0010I After 112000 nodes, 41 on tree, 357 best solution, best possible 331 (1279.76 seconds)
Cbc0010I After 113000 nodes, 36 on tree, 357 best solution, best possible 331 (1292.51 seconds)
Cbc0010I After 114000 nodes, 27 on tree, 357 best solution, best possible 331 (1307.01 seconds)
Cbc0010I After 115000 nodes, 22 on tree, 357 best solution, best possible 331 (1321.22 seconds)
Cbc0010I After 116000 nodes, 25 on tree, 357 best solution, best possible 331 (1335.05 seconds)
Cbc0010I After 117000 nodes, 18 on tree, 357 best solution, best possible 332 (1347.56 seconds)
Cbc0010I After 118000 nodes, 21 on tree, 357 best solution, best possible 332 (1359.94 seconds)
Cbc0010I After 119000 nodes, 22 on tree, 357 best solution, best possible 332 (1371.79 seconds)
Cbc0010I After 120000 nodes, 19 on tree, 357 best solution, best possible 332 (1381.44 seconds)
Cbc0010I After 121000 nodes, 6 on tree, 357 best solution, best possible 332 (1397.69 seconds)
Cbc0010I After 122000 nodes, 15 on tree, 357 best solution, best possible 333 (1412.45 seconds)
Cbc0010I After 123000 nodes, 9 on tree, 357 best solution, best possible 333 (1424.63 seconds)
Cbc0010I After 124000 nodes, 14 on tree, 357 best solution, best possible 333 (1438.29 seconds)
Cbc0010I After 125000 nodes, 14 on tree, 357 best solution, best possible 333 (1452.23 seconds)
Cbc0010I After 126000 nodes, 13 on tree, 357 best solution, best possible 333 (1463.11 seconds)
Cbc0010I After 127000 nodes, 12 on tree, 357 best solution, best possible 333 (1472.21 seconds)
Cbc0010I After 128000 nodes, 9 on tree, 357 best solution, best possible 333 (1481.66 seconds)
Cbc0010I After 129000 nodes, 10 on tree, 357 best solution, best possible 334 (1494.27 seconds)
Cbc0010I After 130000 nodes, 24 on tree, 357 best solution, best possible 334 (1506.88 seconds)
Cbc0010I After 131000 nodes, 25 on tree, 357 best solution, best possible 334 (1518.89 seconds)
Cbc0010I After 132000 nodes, 23 on tree, 357 best solution, best possible 334 (1531.49 seconds)
Cbc0010I After 133000 nodes, 22 on tree, 357 best solution, best possible 334 (1543.54 seconds)
Cbc0010I After 134000 nodes, 29 on tree, 357 best solution, best possible 334 (1554.63 seconds)
Cbc0010I After 135000 nodes, 32 on tree, 357 best solution, best possible 334 (1566.23 seconds)
Cbc0010I After 136000 nodes, 32 on tree, 357 best solution, best possible 334 (1578.77 seconds)
Cbc0010I After 137000 nodes, 26 on tree, 357 best solution, best possible 334 (1588.92 seconds)
Cbc0010I After 138000 nodes, 20 on tree, 357 best solution, best possible 334 (1603.22 seconds)
Cbc0010I After 139000 nodes, 27 on tree, 357 best solution, best possible 335 (1618.28 seconds)
Cbc0010I After 140000 nodes, 26 on tree, 357 best solution, best possible 335 (1633.30 seconds)
Cbc0010I After 141000 nodes, 27 on tree, 357 best solution, best possible 335 (1648.49 seconds)
Cbc0010I After 142000 nodes, 31 on tree, 357 best solution, best possible 335 (1659.24 seconds)
Cbc0010I After 143000 nodes, 35 on tree, 357 best solution, best possible 335 (1673.33 seconds)
Cbc0010I After 144000 nodes, 33 on tree, 357 best solution, best possible 335 (1685.15 seconds)
Cbc0010I After 145000 nodes, 21 on tree, 357 best solution, best possible 336 (1698.62 seconds)
Cbc0016I Integer solution of 336 found by strong branching after 17085267 iterations and 145962 nodes (1713.86 seconds)
Cbc0001I Search completed - best objective 336, took 17085290 iterations and 145962 nodes (1713.86 seconds)
Cbc0032I Strong branching done 65112 times (2723794 iterations), fathomed 2654 nodes and fixed 10980 variables
Cbc0035I Maximum depth 65, 0 variables fixed on reduced cost
Cuts at root node changed objective from 297.673 to 312
Probing was tried 29503 times and created 2929636 cuts of which 0 were active after adding rounds of cuts (45.346 seconds)
Gomory was tried 11261 times and created 17335 cuts of which 0 were active after adding rounds of cuts (12.995 seconds)
Knapsack was tried 11261 times and created 62809 cuts of which 0 were active after adding rounds of cuts (6.211 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 11261 times and created 197701 cuts of which 0 were active after adding rounds of cuts (7.416 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ImplicationCuts was tried 93 times and created 565 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)

Result - Optimal solution found

Objective value:                336.00000000
Enumerated nodes:               145962
Total iterations:               17085290
Time (CPU seconds):             1713.90
Time (Wallclock seconds):       1716.73

Total time (CPU seconds):       1713.90   (Wallclock seconds):       1716.74

