Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag15_down_left_input.lp sec 1800 solve solu solutions/new_tr/dag15_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 819200 - 0.36 seconds
Cgl0002I 1510 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 797 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 4122 rows, 1339 columns (1339 integer (1291 of which binary)) and 13712 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1339 objects (1339 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 631 integers unsatisfied sum - 150.449
Cbc0038I Pass   1: (1.14 seconds) suminf.   83.17409 (540) obj. 887346 iterations 1261
Cbc0038I Pass   2: (1.22 seconds) suminf.   74.02469 (534) obj. 867184 iterations 365
Cbc0038I Pass   3: (1.28 seconds) suminf.   66.33053 (500) obj. 865458 iterations 304
Cbc0038I Pass   4: (1.32 seconds) suminf.   62.79344 (488) obj. 863528 iterations 142
Cbc0038I Pass   5: (1.32 seconds) suminf.   62.66250 (488) obj. 863528 iterations 5
Cbc0038I Pass   6: (1.40 seconds) suminf.   57.85209 (487) obj. 859093 iterations 404
Cbc0038I Pass   7: (1.44 seconds) suminf.   57.59830 (478) obj. 857541 iterations 151
Cbc0038I Pass   8: (1.48 seconds) suminf.   53.77372 (480) obj. 860675 iterations 158
Cbc0038I Pass   9: (1.50 seconds) suminf.   54.46003 (460) obj. 859329 iterations 55
Cbc0038I Pass  10: (1.57 seconds) suminf.   48.86841 (454) obj. 892644 iterations 421
Cbc0038I Pass  11: (1.62 seconds) suminf.   49.35202 (450) obj. 890609 iterations 164
Cbc0038I Pass  12: (1.69 seconds) suminf.   49.67195 (434) obj. 921373 iterations 350
Cbc0038I Pass  13: (1.71 seconds) suminf.   49.28304 (436) obj. 919362 iterations 118
Cbc0038I Pass  14: (1.74 seconds) suminf.   48.86375 (441) obj. 916201 iterations 120
Cbc0038I Pass  15: (1.76 seconds) suminf.   48.15894 (426) obj. 927456 iterations 87
Cbc0038I Pass  16: (1.78 seconds) suminf.   48.07983 (452) obj. 927397 iterations 36
Cbc0038I Pass  17: (1.83 seconds) suminf.   44.97739 (433) obj. 955959 iterations 286
Cbc0038I Pass  18: (1.85 seconds) suminf.   44.96126 (421) obj. 955292 iterations 68
Cbc0038I Pass  19: (1.91 seconds) suminf.   40.38656 (390) obj. 966656 iterations 293
Cbc0038I Pass  20: (1.93 seconds) suminf.   40.62649 (408) obj. 966656 iterations 94
Cbc0038I Pass  21: (1.97 seconds) suminf.   39.95535 (384) obj. 966656 iterations 206
Cbc0038I Pass  22: (1.99 seconds) suminf.   40.35739 (386) obj. 966656 iterations 91
Cbc0038I Pass  23: (2.03 seconds) suminf.   40.07894 (405) obj. 966656 iterations 172
Cbc0038I Pass  24: (2.04 seconds) suminf.   40.14358 (398) obj. 966656 iterations 27
Cbc0038I Pass  25: (2.06 seconds) suminf.   40.35702 (388) obj. 966656 iterations 69
Cbc0038I Pass  26: (2.08 seconds) suminf.   40.25144 (392) obj. 966656 iterations 67
Cbc0038I Pass  27: (2.15 seconds) suminf.   42.46573 (400) obj. 965736 iterations 375
Cbc0038I Pass  28: (2.17 seconds) suminf.   41.87857 (392) obj. 966591 iterations 100
Cbc0038I Pass  29: (2.19 seconds) suminf.   40.81868 (400) obj. 965996 iterations 45
Cbc0038I Pass  30: (2.25 seconds) suminf.   40.00441 (395) obj. 965181 iterations 382
Cbc0038I Pass  31: (2.28 seconds) suminf.   37.17121 (397) obj. 965383 iterations 142
Cbc0038I Pass  32: (2.30 seconds) suminf.   36.74761 (402) obj. 965354 iterations 69
Cbc0038I Pass  33: (2.37 seconds) suminf.   36.36965 (411) obj. 965913 iterations 359
Cbc0038I Pass  34: (2.39 seconds) suminf.   35.77951 (406) obj. 965532 iterations 80
Cbc0038I Pass  35: (2.44 seconds) suminf.   33.04609 (414) obj. 966656 iterations 262
Cbc0038I Pass  36: (2.46 seconds) suminf.   35.11405 (434) obj. 966656 iterations 70
Cbc0038I Pass  37: (2.55 seconds) suminf.   28.33306 (394) obj. 966656 iterations 480
Cbc0038I Pass  38: (2.56 seconds) suminf.   27.43379 (380) obj. 966656 iterations 62
Cbc0038I Pass  39: (2.62 seconds) suminf.   25.50651 (369) obj. 966785 iterations 287
Cbc0038I Pass  40: (2.65 seconds) suminf.   25.42206 (350) obj. 966656 iterations 121
Cbc0038I Pass  41: (2.69 seconds) suminf.   25.98287 (308) obj. 966656 iterations 236
Cbc0038I Pass  42: (2.71 seconds) suminf.   24.32593 (308) obj. 966656 iterations 68
Cbc0038I Pass  43: (2.72 seconds) suminf.   23.96370 (311) obj. 966656 iterations 59
Cbc0038I Pass  44: (2.73 seconds) suminf.   23.96370 (311) obj. 966656 iterations 4
Cbc0038I Pass  45: (2.77 seconds) suminf.   22.84925 (288) obj. 966656 iterations 194
Cbc0038I Pass  46: (2.79 seconds) suminf.   20.99620 (293) obj. 966656 iterations 110
Cbc0038I Pass  47: (2.84 seconds) suminf.   21.29498 (266) obj. 966656 iterations 259
Cbc0038I Pass  48: (2.86 seconds) suminf.   20.37255 (262) obj. 966656 iterations 102
Cbc0038I Pass  49: (2.87 seconds) suminf.   19.53583 (249) obj. 966656 iterations 64
Cbc0038I Pass  50: (2.91 seconds) suminf.   17.59378 (227) obj. 969185 iterations 254
Cbc0038I Pass  51: (2.94 seconds) suminf.   15.69959 (232) obj. 967846 iterations 146
Cbc0038I Pass  52: (2.95 seconds) suminf.   15.38519 (233) obj. 967848 iterations 29
Cbc0038I Pass  53: (2.97 seconds) suminf.   16.36001 (231) obj. 966656 iterations 146
Cbc0038I Pass  54: (2.99 seconds) suminf.   12.37551 (230) obj. 972301 iterations 126
Cbc0038I Pass  55: (3.05 seconds) suminf.   12.06286 (215) obj. 966656 iterations 379
Cbc0038I Pass  56: (3.07 seconds) suminf.   10.65206 (201) obj. 966656 iterations 137
Cbc0038I Pass  57: (3.11 seconds) suminf.   12.33572 (197) obj. 1.07898e+06 iterations 223
Cbc0038I Pass  58: (3.13 seconds) suminf.   11.02827 (198) obj. 1.15596e+06 iterations 136
Cbc0038I Pass  59: (3.16 seconds) suminf.    7.98415 (177) obj. 1.26355e+06 iterations 206
Cbc0038I Pass  60: (3.17 seconds) suminf.    7.37698 (183) obj. 1.28612e+06 iterations 41
Cbc0038I Pass  61: (3.21 seconds) suminf.    7.43481 (166) obj. 1.28918e+06 iterations 163
Cbc0038I Pass  62: (3.23 seconds) suminf.    6.89300 (164) obj. 1.28918e+06 iterations 25
Cbc0038I Pass  63: (3.25 seconds) suminf.    7.04562 (132) obj. 1.29256e+06 iterations 103
Cbc0038I Pass  64: (3.29 seconds) suminf.    3.75484 (126) obj. 1.29256e+06 iterations 143
Cbc0038I Pass  65: (3.32 seconds) suminf.    4.48906 (83) obj. 1.29244e+06 iterations 160
Cbc0038I Pass  66: (3.34 seconds) suminf.    4.48906 (83) obj. 1.29244e+06 iterations 7
Cbc0038I Pass  67: (3.39 seconds) suminf.    5.50171 (66) obj. 1.17252e+06 iterations 359
Cbc0038I Pass  68: (3.42 seconds) suminf.    4.20637 (53) obj. 1.17003e+06 iterations 105
Cbc0038I Pass  69: (3.44 seconds) suminf.    0.00000 (0) obj. 983040 iterations 157
Cbc0038I Solution found of 983040
Cbc0038I Cleaned solution of 983040
Cbc0038I Before mini branch and bound, 314 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4122 rows 1339 columns, reduced to 3372 rows 1025 columns - 131 fixed gives 2375, 660 - still too large
Cbc0038I Mini branch and bound did not improve solution (3.94 seconds)
Cbc0038I Round again with cutoff of 966655
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass  70: (3.94 seconds) suminf.   83.17409 (540) obj. 887346 iterations 0
Cbc0038I Pass  71: (4.01 seconds) suminf.   73.89606 (535) obj. 867187 iterations 371
Cbc0038I Pass  72: (4.09 seconds) suminf.   66.33053 (500) obj. 865458 iterations 436
Cbc0038I Pass  73: (4.13 seconds) suminf.   62.79344 (488) obj. 863528 iterations 137
Cbc0038I Pass  74: (4.13 seconds) suminf.   62.66250 (488) obj. 863528 iterations 5
Cbc0038I Pass  75: (4.22 seconds) suminf.   57.85209 (487) obj. 859093 iterations 419
Cbc0038I Pass  76: (4.25 seconds) suminf.   57.59830 (478) obj. 857541 iterations 135
Cbc0038I Pass  77: (4.29 seconds) suminf.   53.77372 (480) obj. 860675 iterations 167
Cbc0038I Pass  78: (4.31 seconds) suminf.   54.46003 (460) obj. 859329 iterations 80
Cbc0038I Pass  79: (4.36 seconds) suminf.   52.68689 (474) obj. 859265 iterations 266
Cbc0038I Pass  80: (4.38 seconds) suminf.   52.79675 (471) obj. 861375 iterations 61
Cbc0038I Pass  81: (4.43 seconds) suminf.   52.08772 (474) obj. 867475 iterations 239
Cbc0038I Pass  82: (4.45 seconds) suminf.   50.91434 (469) obj. 870033 iterations 90
Cbc0038I Pass  83: (4.51 seconds) suminf.   49.90585 (489) obj. 869544 iterations 312
Cbc0038I Pass  84: (4.54 seconds) suminf.   48.53096 (455) obj. 863925 iterations 126
Cbc0038I Pass  85: (4.59 seconds) suminf.   45.48816 (430) obj. 855289 iterations 231
Cbc0038I Pass  86: (4.62 seconds) suminf.   45.49649 (438) obj. 856246 iterations 135
Cbc0038I Pass  87: (4.63 seconds) suminf.   44.96039 (435) obj. 855850 iterations 62
Cbc0038I Pass  88: (4.65 seconds) suminf.   44.85385 (446) obj. 855838 iterations 77
Cbc0038I Pass  89: (4.67 seconds) suminf.   45.46132 (448) obj. 855273 iterations 66
Cbc0038I Pass  90: (4.69 seconds) suminf.   45.82120 (453) obj. 855781 iterations 91
Cbc0038I Pass  91: (4.70 seconds) suminf.   45.29356 (449) obj. 855311 iterations 49
Cbc0038I Pass  92: (4.72 seconds) suminf.   45.55855 (455) obj. 854848 iterations 54
Cbc0038I Pass  93: (4.94 seconds) suminf.   75.64355 (558) obj. 966655 iterations 1356
Cbc0038I Pass  94: (5.11 seconds) suminf.   43.12533 (431) obj. 966655 iterations 1028
Cbc0038I Pass  95: (5.16 seconds) suminf.   37.60130 (446) obj. 966655 iterations 234
Cbc0038I Pass  96: (5.19 seconds) suminf.   36.66767 (444) obj. 966655 iterations 124
Cbc0038I Pass  97: (5.25 seconds) suminf.   33.04902 (436) obj. 966655 iterations 268
Cbc0038I Pass  98: (5.32 seconds) suminf.   33.21796 (392) obj. 966655 iterations 406
Cbc0038I Pass  99: (5.35 seconds) suminf.   30.98869 (385) obj. 966655 iterations 135
Cbc0038I Pass 100: (5.39 seconds) suminf.   33.32087 (370) obj. 966655 iterations 226
Cbc0038I Pass 101: (5.41 seconds) suminf.   29.18412 (360) obj. 966655 iterations 101
Cbc0038I Pass 102: (5.43 seconds) suminf.   29.02742 (352) obj. 966655 iterations 42
Cbc0038I Pass 103: (5.48 seconds) suminf.   29.60129 (342) obj. 966655 iterations 282
Cbc0038I Pass 104: (5.50 seconds) suminf.   27.58492 (346) obj. 966655 iterations 90
Cbc0038I Pass 105: (5.54 seconds) suminf.   27.56171 (339) obj. 966655 iterations 245
Cbc0038I Pass 106: (5.57 seconds) suminf.   26.01795 (329) obj. 966655 iterations 163
Cbc0038I Pass 107: (5.62 seconds) suminf.   26.66180 (334) obj. 966655 iterations 251
Cbc0038I Pass 108: (5.64 seconds) suminf.   26.85302 (340) obj. 966655 iterations 113
Cbc0038I Pass 109: (5.66 seconds) suminf.   26.16549 (331) obj. 966655 iterations 48
Cbc0038I Pass 110: (5.70 seconds) suminf.   24.73251 (317) obj. 966655 iterations 232
Cbc0038I Pass 111: (5.71 seconds) suminf.   24.62611 (318) obj. 966655 iterations 45
Cbc0038I Pass 112: (5.74 seconds) suminf.   24.43254 (291) obj. 966655 iterations 192
Cbc0038I Pass 113: (5.77 seconds) suminf.   23.63047 (304) obj. 966655 iterations 149
Cbc0038I Pass 114: (5.81 seconds) suminf.   22.93458 (293) obj. 966655 iterations 272
Cbc0038I Pass 115: (5.82 seconds) suminf.   22.79401 (294) obj. 966655 iterations 27
Cbc0038I Pass 116: (5.85 seconds) suminf.   22.24410 (277) obj. 966655 iterations 200
Cbc0038I Pass 117: (5.88 seconds) suminf.   20.78342 (286) obj. 966655 iterations 136
Cbc0038I Pass 118: (5.90 seconds) suminf.   22.38376 (291) obj. 966655 iterations 122
Cbc0038I Pass 119: (5.90 seconds) suminf.   22.07015 (293) obj. 966655 iterations 12
Cbc0038I Pass 120: (5.94 seconds) suminf.   19.68543 (298) obj. 966655 iterations 234
Cbc0038I Pass 121: (5.95 seconds) suminf.   19.96105 (292) obj. 966655 iterations 32
Cbc0038I Pass 122: (6.01 seconds) suminf.   21.12471 (296) obj. 966655 iterations 372
Cbc0038I Pass 123: (6.02 seconds) suminf.   20.23429 (295) obj. 966655 iterations 72
Cbc0038I Pass 124: (6.07 seconds) suminf.   23.90359 (315) obj. 966655 iterations 289
Cbc0038I Pass 125: (6.09 seconds) suminf.   22.23483 (288) obj. 966655 iterations 144
Cbc0038I Pass 126: (6.13 seconds) suminf.   22.56273 (264) obj. 966655 iterations 179
Cbc0038I Pass 127: (6.15 seconds) suminf.   17.98961 (264) obj. 966655 iterations 142
Cbc0038I Pass 128: (6.16 seconds) suminf.   18.14743 (269) obj. 966655 iterations 5
Cbc0038I Pass 129: (6.20 seconds) suminf.   19.59121 (256) obj. 966655 iterations 283
Cbc0038I Pass 130: (6.22 seconds) suminf.   19.02022 (241) obj. 966655 iterations 102
Cbc0038I Pass 131: (6.22 seconds) suminf.   16.57956 (243) obj. 966655 iterations 11
Cbc0038I Pass 132: (6.24 seconds) suminf.   15.03131 (248) obj. 966655 iterations 153
Cbc0038I Pass 133: (6.26 seconds) suminf.   15.67403 (239) obj. 966655 iterations 94
Cbc0038I Pass 134: (6.29 seconds) suminf.   19.49494 (245) obj. 966655 iterations 211
Cbc0038I Pass 135: (6.30 seconds) suminf.   18.55014 (233) obj. 966655 iterations 21
Cbc0038I Pass 136: (6.33 seconds) suminf.   18.78758 (252) obj. 966655 iterations 206
Cbc0038I Pass 137: (6.34 seconds) suminf.   17.09709 (244) obj. 966655 iterations 65
Cbc0038I Pass 138: (6.35 seconds) suminf.   17.22216 (254) obj. 966655 iterations 26
Cbc0038I Pass 139: (6.39 seconds) suminf.   15.95121 (249) obj. 966655 iterations 296
Cbc0038I Pass 140: (6.41 seconds) suminf.   14.81950 (231) obj. 966655 iterations 114
Cbc0038I Pass 141: (6.45 seconds) suminf.   13.76028 (237) obj. 966655 iterations 214
Cbc0038I Pass 142: (6.46 seconds) suminf.   14.12680 (238) obj. 966655 iterations 84
Cbc0038I Pass 143: (6.47 seconds) suminf.   14.12680 (238) obj. 966655 iterations 2
Cbc0038I Pass 144: (6.50 seconds) suminf.   14.34780 (227) obj. 966655 iterations 228
Cbc0038I Pass 145: (6.52 seconds) suminf.   14.40516 (220) obj. 966655 iterations 86
Cbc0038I Pass 146: (6.54 seconds) suminf.   12.53948 (213) obj. 966655 iterations 140
Cbc0038I Pass 147: (6.55 seconds) suminf.   12.55619 (217) obj. 966655 iterations 4
Cbc0038I Pass 148: (6.59 seconds) suminf.   16.13812 (204) obj. 966655 iterations 260
Cbc0038I Pass 149: (6.61 seconds) suminf.   14.72909 (224) obj. 966655 iterations 161
Cbc0038I Pass 150: (6.66 seconds) suminf.   16.98155 (242) obj. 966655 iterations 316
Cbc0038I Pass 151: (6.67 seconds) suminf.   14.52850 (230) obj. 966655 iterations 53
Cbc0038I Pass 152: (6.69 seconds) suminf.   13.52942 (225) obj. 966655 iterations 90
Cbc0038I Pass 153: (6.70 seconds) suminf.   13.18220 (220) obj. 966655 iterations 53
Cbc0038I Pass 154: (6.74 seconds) suminf.   13.72237 (209) obj. 966655 iterations 274
Cbc0038I Pass 155: (6.76 seconds) suminf.   12.31081 (201) obj. 966655 iterations 88
Cbc0038I Pass 156: (6.77 seconds) suminf.   12.93221 (203) obj. 966655 iterations 87
Cbc0038I Pass 157: (6.78 seconds) suminf.   11.64654 (206) obj. 966655 iterations 50
Cbc0038I Pass 158: (6.80 seconds) suminf.   12.23943 (200) obj. 966655 iterations 106
Cbc0038I Pass 159: (6.95 seconds) suminf.   82.19899 (497) obj. 966655 iterations 1009
Cbc0038I Pass 160: (7.08 seconds) suminf.   41.61077 (326) obj. 966655 iterations 757
Cbc0038I Pass 161: (7.10 seconds) suminf.   33.38705 (321) obj. 966655 iterations 144
Cbc0038I Pass 162: (7.12 seconds) suminf.   30.98760 (320) obj. 966655 iterations 108
Cbc0038I Pass 163: (7.14 seconds) suminf.   30.82779 (318) obj. 966655 iterations 70
Cbc0038I Pass 164: (7.17 seconds) suminf.   25.97607 (310) obj. 966655 iterations 163
Cbc0038I Pass 165: (7.18 seconds) suminf.   26.00204 (306) obj. 966655 iterations 22
Cbc0038I Pass 166: (7.22 seconds) suminf.   22.87457 (306) obj. 966655 iterations 246
Cbc0038I Pass 167: (7.24 seconds) suminf.   21.25219 (312) obj. 966655 iterations 115
Cbc0038I Pass 168: (7.27 seconds) suminf.   18.50514 (312) obj. 966655 iterations 178
Cbc0038I Pass 169: (7.40 seconds) suminf.   61.69666 (416) obj. 966655 iterations 799
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 171 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (7.40 seconds)
Cbc0038I After 7.40 seconds - Feasibility pump exiting with objective of 983040 - took 6.49 seconds
Cbc0012I Integer solution of 983040 found by feasibility pump after 0 iterations and 0 nodes (7.41 seconds)
Cbc0031I 40 added rows had average density of 3.8
Cbc0013I At root node, 40 cuts changed objective from 819200 to 819200 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 96 row cuts average 3.0 elements, 5 column cuts (5 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 333.0 elements, 0 column cuts (0 active)  in 0.344 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.171 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.348 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 983040 best solution, best possible 819200 (10.35 seconds)
Cbc0010I After 100 nodes, 3 on tree, 983040 best solution, best possible 819207 (67.91 seconds)
Cbc0010I After 200 nodes, 8 on tree, 983040 best solution, best possible 819207 (110.59 seconds)
Cbc0010I After 300 nodes, 13 on tree, 983040 best solution, best possible 819207 (140.99 seconds)
Cbc0010I After 400 nodes, 10 on tree, 983040 best solution, best possible 819207 (172.52 seconds)
Cbc0010I After 500 nodes, 13 on tree, 983040 best solution, best possible 819207 (199.56 seconds)
Cbc0010I After 600 nodes, 20 on tree, 983040 best solution, best possible 819207 (226.08 seconds)
Cbc0010I After 700 nodes, 27 on tree, 983040 best solution, best possible 819207 (253.37 seconds)
Cbc0010I After 800 nodes, 35 on tree, 983040 best solution, best possible 819207 (279.86 seconds)
Cbc0010I After 900 nodes, 41 on tree, 983040 best solution, best possible 819207 (306.23 seconds)
Cbc0010I After 1000 nodes, 50 on tree, 983040 best solution, best possible 819207 (331.34 seconds)
Cbc0010I After 1100 nodes, 48 on tree, 983040 best solution, best possible 819207 (355.45 seconds)
Cbc0010I After 1200 nodes, 48 on tree, 983040 best solution, best possible 819207 (380.12 seconds)
Cbc0010I After 1300 nodes, 48 on tree, 983040 best solution, best possible 819207 (400.72 seconds)
Cbc0010I After 1400 nodes, 48 on tree, 983040 best solution, best possible 819207 (421.94 seconds)
Cbc0010I After 1500 nodes, 48 on tree, 983040 best solution, best possible 819207 (444.31 seconds)
Cbc0010I After 1600 nodes, 48 on tree, 983040 best solution, best possible 819207 (467.63 seconds)
Cbc0010I After 1700 nodes, 49 on tree, 983040 best solution, best possible 819207 (489.49 seconds)
Cbc0010I After 1800 nodes, 48 on tree, 983040 best solution, best possible 819207 (511.01 seconds)
Cbc0010I After 1900 nodes, 48 on tree, 983040 best solution, best possible 819207 (538.94 seconds)
Cbc0010I After 2000 nodes, 48 on tree, 983040 best solution, best possible 819207 (563.80 seconds)
Cbc0010I After 2100 nodes, 48 on tree, 983040 best solution, best possible 819207 (584.47 seconds)
Cbc0010I After 2200 nodes, 48 on tree, 983040 best solution, best possible 819207 (604.43 seconds)
Cbc0010I After 2300 nodes, 49 on tree, 983040 best solution, best possible 819207 (627.07 seconds)
Cbc0010I After 2400 nodes, 48 on tree, 983040 best solution, best possible 819207 (648.71 seconds)
Cbc0010I After 2500 nodes, 49 on tree, 983040 best solution, best possible 819207 (669.90 seconds)
Cbc0010I After 2600 nodes, 49 on tree, 983040 best solution, best possible 819207 (691.39 seconds)
Cbc0010I After 2700 nodes, 48 on tree, 983040 best solution, best possible 819207 (713.19 seconds)
Cbc0010I After 2800 nodes, 49 on tree, 983040 best solution, best possible 819207 (734.57 seconds)
Cbc0010I After 2900 nodes, 48 on tree, 983040 best solution, best possible 819207 (755.30 seconds)
Cbc0010I After 3000 nodes, 48 on tree, 983040 best solution, best possible 819207 (776.82 seconds)
Cbc0010I After 3100 nodes, 48 on tree, 983040 best solution, best possible 819207 (798.89 seconds)
Cbc0010I After 3200 nodes, 49 on tree, 983040 best solution, best possible 819207 (820.21 seconds)
Cbc0010I After 3300 nodes, 48 on tree, 983040 best solution, best possible 819207 (845.12 seconds)
Cbc0010I After 3400 nodes, 48 on tree, 983040 best solution, best possible 819207 (868.13 seconds)
Cbc0010I After 3500 nodes, 49 on tree, 983040 best solution, best possible 819207 (891.90 seconds)
Cbc0010I After 3600 nodes, 49 on tree, 983040 best solution, best possible 819207 (914.59 seconds)
Cbc0010I After 3700 nodes, 48 on tree, 983040 best solution, best possible 819207 (935.75 seconds)
Cbc0010I After 3800 nodes, 48 on tree, 983040 best solution, best possible 819207 (955.88 seconds)
Cbc0010I After 3900 nodes, 48 on tree, 983040 best solution, best possible 819207 (977.60 seconds)
Cbc0010I After 4000 nodes, 48 on tree, 983040 best solution, best possible 819207 (999.25 seconds)
Cbc0010I After 4100 nodes, 48 on tree, 983040 best solution, best possible 819207 (1021.63 seconds)
Cbc0010I After 4200 nodes, 48 on tree, 983040 best solution, best possible 819207 (1041.64 seconds)
Cbc0010I After 4300 nodes, 48 on tree, 983040 best solution, best possible 819207 (1066.28 seconds)
Cbc0010I After 4400 nodes, 48 on tree, 983040 best solution, best possible 819207 (1089.69 seconds)
Cbc0010I After 4500 nodes, 49 on tree, 983040 best solution, best possible 819207 (1117.30 seconds)
Cbc0010I After 4600 nodes, 48 on tree, 983040 best solution, best possible 819207 (1137.84 seconds)
Cbc0010I After 4700 nodes, 48 on tree, 983040 best solution, best possible 819207 (1164.34 seconds)
Cbc0010I After 4800 nodes, 49 on tree, 983040 best solution, best possible 819207 (1189.25 seconds)
Cbc0010I After 4900 nodes, 48 on tree, 983040 best solution, best possible 819207 (1211.57 seconds)
Cbc0010I After 5000 nodes, 48 on tree, 983040 best solution, best possible 819207 (1239.23 seconds)
Cbc0010I After 5100 nodes, 48 on tree, 983040 best solution, best possible 819207 (1268.38 seconds)
Cbc0010I After 5200 nodes, 48 on tree, 983040 best solution, best possible 819207 (1295.87 seconds)
Cbc0010I After 5300 nodes, 49 on tree, 983040 best solution, best possible 819207 (1319.71 seconds)
Cbc0010I After 5400 nodes, 49 on tree, 983040 best solution, best possible 819207 (1348.60 seconds)
Cbc0010I After 5500 nodes, 48 on tree, 983040 best solution, best possible 819207 (1370.00 seconds)
Cbc0010I After 5600 nodes, 48 on tree, 983040 best solution, best possible 819207 (1393.16 seconds)
Cbc0010I After 5700 nodes, 48 on tree, 983040 best solution, best possible 819207 (1422.33 seconds)
Cbc0010I After 5800 nodes, 48 on tree, 983040 best solution, best possible 819207 (1453.32 seconds)
Cbc0010I After 5900 nodes, 48 on tree, 983040 best solution, best possible 819207 (1484.43 seconds)
Cbc0010I After 6000 nodes, 48 on tree, 983040 best solution, best possible 819207 (1507.21 seconds)
Cbc0010I After 6100 nodes, 48 on tree, 983040 best solution, best possible 819207 (1550.19 seconds)
Cbc0010I After 6200 nodes, 48 on tree, 983040 best solution, best possible 819207 (1604.98 seconds)
Cbc0010I After 6300 nodes, 48 on tree, 983040 best solution, best possible 819207 (1665.56 seconds)
Cbc0010I After 6400 nodes, 48 on tree, 983040 best solution, best possible 819207 (1716.73 seconds)
Cbc0010I After 6500 nodes, 48 on tree, 983040 best solution, best possible 819207 (1763.45 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 983040 (best possible 819207), took 6653008 iterations and 6567 nodes (1800.25 seconds)
Cbc0032I Strong branching done 17700 times (1287047 iterations), fathomed 1743 nodes and fixed 246 variables
Cbc0035I Maximum depth 2457, 4 variables fixed on reduced cost
Cuts at root node changed objective from 819200 to 819200
Probing was tried 1159 times and created 59857 cuts of which 0 were active after adding rounds of cuts (5.702 seconds)
Gomory was tried 716 times and created 448 cuts of which 0 were active after adding rounds of cuts (4.232 seconds)
Knapsack was tried 716 times and created 479 cuts of which 0 were active after adding rounds of cuts (0.864 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 10 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.171 seconds)
ZeroHalf was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.348 seconds)
ImplicationCuts was tried 23 times and created 234 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

Objective value:                983040.00000000
Lower bound:                    819207.000
Gap:                            0.20
Enumerated nodes:               6567
Total iterations:               6653008
Time (CPU seconds):             1800.41
Time (Wallclock seconds):       1803.05

Total time (CPU seconds):       1800.44   (Wallclock seconds):       1803.08

