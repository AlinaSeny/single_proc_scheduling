Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag176_up_right_input.lp sec 1800 solve solu solutions/new_tr/dag176_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 967816 - 2.69 seconds
Cgl0002I 1053 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 672 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 57 strengthened rows, 0 substitutions
Cgl0004I processed model has 3950 rows, 1256 columns (1256 integer (1213 of which binary)) and 13016 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1256 objects (1256 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 577 integers unsatisfied sum - 151.451
Cbc0038I Pass   1: (4.02 seconds) suminf.   85.25119 (557) obj. 1.20792e+06 iterations 1295
Cbc0038I Pass   2: (4.10 seconds) suminf.   79.84339 (556) obj. 1.21749e+06 iterations 382
Cbc0038I Pass   3: (4.15 seconds) suminf.   78.92542 (554) obj. 1.22003e+06 iterations 180
Cbc0038I Pass   4: (4.19 seconds) suminf.   78.29857 (549) obj. 1.22109e+06 iterations 149
Cbc0038I Pass   5: (4.27 seconds) suminf.   74.75822 (552) obj. 1.23342e+06 iterations 433
Cbc0038I Pass   6: (4.31 seconds) suminf.   73.15863 (550) obj. 1.24646e+06 iterations 136
Cbc0038I Pass   7: (4.32 seconds) suminf.   72.96997 (556) obj. 1.24663e+06 iterations 56
Cbc0038I Pass   8: (4.37 seconds) suminf.   72.80491 (544) obj. 1.24352e+06 iterations 187
Cbc0038I Pass   9: (4.38 seconds) suminf.   72.84874 (546) obj. 1.24278e+06 iterations 43
Cbc0038I Pass  10: (4.46 seconds) suminf.   65.51056 (545) obj. 1.42852e+06 iterations 390
Cbc0038I Pass  11: (4.49 seconds) suminf.   65.56591 (564) obj. 1.43958e+06 iterations 86
Cbc0038I Pass  12: (4.51 seconds) suminf.   64.99719 (558) obj. 1.44294e+06 iterations 56
Cbc0038I Pass  13: (4.60 seconds) suminf.   61.86318 (504) obj. 1.44885e+06 iterations 471
Cbc0038I Pass  14: (4.65 seconds) suminf.   61.53412 (493) obj. 1.44923e+06 iterations 182
Cbc0038I Pass  15: (4.67 seconds) suminf.   60.99248 (485) obj. 1.44917e+06 iterations 63
Cbc0038I Pass  16: (4.67 seconds) suminf.   61.53941 (486) obj. 1.44748e+06 iterations 13
Cbc0038I Pass  17: (4.72 seconds) suminf.   59.19406 (498) obj. 1.44942e+06 iterations 191
Cbc0038I Pass  18: (4.76 seconds) suminf.   59.33614 (511) obj. 1.44767e+06 iterations 140
Cbc0038I Pass  19: (4.82 seconds) suminf.   58.35504 (470) obj. 1.44848e+06 iterations 285
Cbc0038I Pass  20: (4.85 seconds) suminf.   58.65192 (471) obj. 1.44644e+06 iterations 153
Cbc0038I Pass  21: (4.86 seconds) suminf.   58.73358 (466) obj. 1.44623e+06 iterations 30
Cbc0038I Pass  22: (4.89 seconds) suminf.   57.68911 (463) obj. 1.44645e+06 iterations 98
Cbc0038I Pass  23: (4.90 seconds) suminf.   57.55706 (460) obj. 1.44647e+06 iterations 52
Cbc0038I Pass  24: (4.95 seconds) suminf.   57.27726 (490) obj. 1.44859e+06 iterations 215
Cbc0038I Pass  25: (4.99 seconds) suminf.   57.68157 (489) obj. 1.44701e+06 iterations 133
Cbc0038I Pass  26: (5.02 seconds) suminf.   56.37177 (492) obj. 1.44883e+06 iterations 136
Cbc0038I Pass  27: (5.05 seconds) suminf.   56.45396 (490) obj. 1.44715e+06 iterations 93
Cbc0038I Pass  28: (5.10 seconds) suminf.   56.66747 (493) obj. 1.45003e+06 iterations 273
Cbc0038I Pass  29: (5.14 seconds) suminf.   57.90855 (503) obj. 1.44778e+06 iterations 133
Cbc0038I Pass  30: (5.17 seconds) suminf.   56.22113 (492) obj. 1.45026e+06 iterations 146
Cbc0038I Pass  31: (5.18 seconds) suminf.   57.13598 (465) obj. 1.44951e+06 iterations 30
Cbc0038I Pass  32: (5.23 seconds) suminf.   54.79404 (472) obj. 1.44968e+06 iterations 225
Cbc0038I Pass  33: (5.26 seconds) suminf.   54.91430 (465) obj. 1.44773e+06 iterations 117
Cbc0038I Pass  34: (5.30 seconds) suminf.   55.21746 (467) obj. 1.4505e+06 iterations 172
Cbc0038I Pass  35: (5.32 seconds) suminf.   54.35827 (461) obj. 1.45036e+06 iterations 79
Cbc0038I Pass  36: (5.36 seconds) suminf.   53.89811 (477) obj. 1.44929e+06 iterations 158
Cbc0038I Pass  37: (5.39 seconds) suminf.   54.43499 (459) obj. 1.44804e+06 iterations 110
Cbc0038I Pass  38: (5.41 seconds) suminf.   53.86733 (459) obj. 1.45046e+06 iterations 91
Cbc0038I Pass  39: (5.43 seconds) suminf.   53.74202 (441) obj. 1.4491e+06 iterations 74
Cbc0038I Pass  40: (5.44 seconds) suminf.   53.76947 (441) obj. 1.44815e+06 iterations 23
Cbc0038I Pass  41: (5.46 seconds) suminf.   52.63688 (475) obj. 1.44929e+06 iterations 94
Cbc0038I Pass  42: (5.48 seconds) suminf.   53.91991 (438) obj. 1.44791e+06 iterations 75
Cbc0038I Pass  43: (5.52 seconds) suminf.   54.09320 (454) obj. 1.44668e+06 iterations 155
Cbc0038I Pass  44: (5.55 seconds) suminf.   53.60932 (440) obj. 1.44608e+06 iterations 124
Cbc0038I Pass  45: (5.57 seconds) suminf.   53.24030 (447) obj. 1.44466e+06 iterations 65
Cbc0038I Pass  46: (5.59 seconds) suminf.   53.54665 (449) obj. 1.44274e+06 iterations 96
Cbc0038I Pass  47: (5.60 seconds) suminf.   53.87948 (446) obj. 1.44337e+06 iterations 21
Cbc0038I Pass  48: (5.62 seconds) suminf.   53.16958 (450) obj. 1.44504e+06 iterations 64
Cbc0038I Pass  49: (5.80 seconds) suminf.   95.01368 (553) obj. 1.80028e+06 iterations 1039
Cbc0038I Pass  50: (5.91 seconds) suminf.   64.12081 (489) obj. 1.74652e+06 iterations 663
Cbc0038I Pass  51: (5.97 seconds) suminf.   62.05459 (476) obj. 1.74938e+06 iterations 146
Cbc0038I Pass  52: (5.98 seconds) suminf.   61.34480 (464) obj. 1.74926e+06 iterations 54
Cbc0038I Pass  53: (6.01 seconds) suminf.   61.67022 (466) obj. 1.74929e+06 iterations 28
Cbc0038I Pass  54: (6.09 seconds) suminf.   57.85138 (461) obj. 1.58271e+06 iterations 400
Cbc0038I Pass  55: (6.12 seconds) suminf.   56.42035 (449) obj. 1.58305e+06 iterations 98
Cbc0038I Pass  56: (6.17 seconds) suminf.   52.93944 (434) obj. 1.58287e+06 iterations 220
Cbc0038I Pass  57: (6.18 seconds) suminf.   53.15315 (436) obj. 1.58266e+06 iterations 17
Cbc0038I Pass  58: (6.23 seconds) suminf.   48.96666 (455) obj. 1.58143e+06 iterations 203
Cbc0038I Pass  59: (6.25 seconds) suminf.   48.84140 (437) obj. 1.58163e+06 iterations 86
Cbc0038I Pass  60: (6.27 seconds) suminf.   48.73052 (449) obj. 1.58131e+06 iterations 66
Cbc0038I Pass  61: (6.28 seconds) suminf.   47.68319 (442) obj. 1.58095e+06 iterations 31
Cbc0038I Pass  62: (6.32 seconds) suminf.   49.08659 (429) obj. 1.57976e+06 iterations 170
Cbc0038I Pass  63: (6.36 seconds) suminf.   48.36488 (427) obj. 1.57998e+06 iterations 132
Cbc0038I Pass  64: (6.36 seconds) suminf.   48.30655 (428) obj. 1.58e+06 iterations 10
Cbc0038I Pass  65: (6.39 seconds) suminf.   48.19923 (432) obj. 1.58009e+06 iterations 130
Cbc0038I Pass  66: (6.41 seconds) suminf.   47.54330 (425) obj. 1.58003e+06 iterations 50
Cbc0038I Pass  67: (6.47 seconds) suminf.   46.14527 (399) obj. 1.57874e+06 iterations 286
Cbc0038I Pass  68: (6.49 seconds) suminf.   45.61265 (390) obj. 1.57871e+06 iterations 94
Cbc0038I Pass  69: (6.50 seconds) suminf.   44.10729 (391) obj. 1.5787e+06 iterations 28
Cbc0038I Pass  70: (6.51 seconds) suminf.   44.09055 (399) obj. 1.57864e+06 iterations 55
Cbc0038I Pass  71: (6.54 seconds) suminf.   45.32588 (394) obj. 1.57847e+06 iterations 139
Cbc0038I Pass  72: (6.56 seconds) suminf.   45.63880 (396) obj. 1.57849e+06 iterations 73
Cbc0038I Pass  73: (6.61 seconds) suminf.   43.94493 (381) obj. 1.57821e+06 iterations 177
Cbc0038I Pass  74: (6.63 seconds) suminf.   43.66250 (375) obj. 1.57676e+06 iterations 104
Cbc0038I Pass  75: (6.65 seconds) suminf.   42.94827 (378) obj. 1.57662e+06 iterations 105
Cbc0038I Pass  76: (6.72 seconds) suminf.   44.90946 (367) obj. 1.55939e+06 iterations 368
Cbc0038I Pass  77: (6.76 seconds) suminf.   43.02491 (371) obj. 1.57123e+06 iterations 169
Cbc0038I Pass  78: (6.76 seconds) suminf.   42.81414 (371) obj. 1.57123e+06 iterations 6
Cbc0038I Pass  79: (6.84 seconds) suminf.   43.80673 (371) obj. 1.58619e+06 iterations 385
Cbc0038I Pass  80: (6.89 seconds) suminf.   41.86682 (400) obj. 1.58624e+06 iterations 243
Cbc0038I Pass  81: (6.90 seconds) suminf.   41.78171 (396) obj. 1.58649e+06 iterations 81
Cbc0038I Pass  82: (6.96 seconds) suminf.   43.16917 (388) obj. 1.58687e+06 iterations 302
Cbc0038I Pass  83: (6.97 seconds) suminf.   43.32174 (392) obj. 1.60314e+06 iterations 30
Cbc0038I Pass  84: (6.99 seconds) suminf.   40.80913 (362) obj. 1.6189e+06 iterations 87
Cbc0038I Pass  85: (7.03 seconds) suminf.   37.00387 (369) obj. 1.61889e+06 iterations 171
Cbc0038I Pass  86: (7.10 seconds) suminf.   41.17232 (357) obj. 1.61289e+06 iterations 301
Cbc0038I Pass  87: (7.14 seconds) suminf.   37.23263 (372) obj. 1.61803e+06 iterations 173
Cbc0038I Pass  88: (7.15 seconds) suminf.   37.23263 (372) obj. 1.61803e+06 iterations 11
Cbc0038I Pass  89: (7.21 seconds) suminf.   34.57713 (350) obj. 1.62002e+06 iterations 389
Cbc0038I Pass  90: (7.24 seconds) suminf.   33.18222 (320) obj. 1.62001e+06 iterations 112
Cbc0038I Pass  91: (7.31 seconds) suminf.   29.77742 (316) obj. 1.60371e+06 iterations 397
Cbc0038I Pass  92: (7.34 seconds) suminf.   28.58422 (318) obj. 1.60365e+06 iterations 141
Cbc0038I Pass  93: (7.42 seconds) suminf.   30.52124 (292) obj. 1.60929e+06 iterations 338
Cbc0038I Pass  94: (7.46 seconds) suminf.   29.89639 (287) obj. 1.58789e+06 iterations 76
Cbc0038I Pass  95: (7.52 seconds) suminf.   24.37178 (255) obj. 1.49026e+06 iterations 354
Cbc0038I Pass  96: (7.52 seconds) suminf.   24.45774 (255) obj. 1.48809e+06 iterations 21
Cbc0038I Pass  97: (7.56 seconds) suminf.   22.10095 (242) obj. 1.4737e+06 iterations 170
Cbc0038I Pass  98: (7.57 seconds) suminf.   20.81736 (237) obj. 1.4737e+06 iterations 72
Cbc0038I Pass  99: (7.64 seconds) suminf.   21.73622 (238) obj. 1.50487e+06 iterations 439
Cbc0038I Pass 100: (7.83 seconds) suminf.   80.06066 (504) obj. 1.51356e+06 iterations 1204
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 141 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3950 rows 1256 columns, reduced to 3474 rows 1081 columns - too large
Cbc0038I Mini branch and bound did not improve solution (8.07 seconds)
Cbc0038I After 8.07 seconds - Feasibility pump exiting - took 4.29 seconds
Cbc0031I 59 added rows had average density of 16.288136
Cbc0013I At root node, 59 cuts changed objective from 971077.96 to 1008115.8 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 174 row cuts average 103.5 elements, 0 column cuts (0 active)  in 0.341 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 395 row cuts average 118.8 elements, 0 column cuts (0 active)  in 0.501 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1008115.8 (30.08 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 1008115.8 (87.72 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 1008115.8 (144.92 seconds)
Cbc0010I After 300 nodes, 6 on tree, 1e+50 best solution, best possible 1008115.8 (197.39 seconds)
Cbc0010I After 400 nodes, 8 on tree, 1e+50 best solution, best possible 1008115.8 (263.72 seconds)
Cbc0010I After 500 nodes, 7 on tree, 1e+50 best solution, best possible 1008115.8 (307.41 seconds)
Cbc0010I After 600 nodes, 14 on tree, 1e+50 best solution, best possible 1008115.8 (352.16 seconds)
Cbc0010I After 700 nodes, 7 on tree, 1e+50 best solution, best possible 1008115.8 (403.26 seconds)
Cbc0010I After 800 nodes, 7 on tree, 1e+50 best solution, best possible 1008115.8 (458.49 seconds)
Cbc0010I After 900 nodes, 8 on tree, 1e+50 best solution, best possible 1008115.8 (510.29 seconds)
Cbc0010I After 1000 nodes, 9 on tree, 1e+50 best solution, best possible 1008115.8 (552.70 seconds)
Cbc0010I After 1100 nodes, 17 on tree, 1e+50 best solution, best possible 1011065.7 (587.31 seconds)
Cbc0010I After 1200 nodes, 30 on tree, 1e+50 best solution, best possible 1011065.7 (623.62 seconds)
Cbc0010I After 1300 nodes, 42 on tree, 1e+50 best solution, best possible 1011065.7 (659.41 seconds)
Cbc0010I After 1400 nodes, 49 on tree, 1e+50 best solution, best possible 1011065.7 (695.98 seconds)
Cbc0010I After 1500 nodes, 59 on tree, 1e+50 best solution, best possible 1011065.7 (724.77 seconds)
Cbc0010I After 1600 nodes, 69 on tree, 1e+50 best solution, best possible 1011065.7 (761.41 seconds)
Cbc0010I After 1700 nodes, 83 on tree, 1e+50 best solution, best possible 1011065.7 (793.52 seconds)
Cbc0010I After 1800 nodes, 91 on tree, 1e+50 best solution, best possible 1011065.7 (826.85 seconds)
Cbc0010I After 1900 nodes, 95 on tree, 1e+50 best solution, best possible 1011065.7 (857.49 seconds)
Cbc0010I After 2000 nodes, 97 on tree, 1e+50 best solution, best possible 1011065.7 (889.75 seconds)
Cbc0010I After 2100 nodes, 99 on tree, 1e+50 best solution, best possible 1011065.7 (923.80 seconds)
Cbc0010I After 2200 nodes, 101 on tree, 1e+50 best solution, best possible 1011065.7 (956.95 seconds)
Cbc0010I After 2300 nodes, 110 on tree, 1e+50 best solution, best possible 1011065.7 (988.31 seconds)
Cbc0010I After 2400 nodes, 111 on tree, 1e+50 best solution, best possible 1011065.7 (1024.09 seconds)
Cbc0010I After 2500 nodes, 122 on tree, 1e+50 best solution, best possible 1011065.7 (1055.77 seconds)
Cbc0010I After 2600 nodes, 124 on tree, 1e+50 best solution, best possible 1011065.7 (1095.10 seconds)
Cbc0010I After 2700 nodes, 127 on tree, 1e+50 best solution, best possible 1011065.7 (1129.71 seconds)
Cbc0010I After 2800 nodes, 137 on tree, 1e+50 best solution, best possible 1011065.7 (1162.55 seconds)
Cbc0010I After 2900 nodes, 137 on tree, 1e+50 best solution, best possible 1011065.7 (1196.59 seconds)
Cbc0010I After 3000 nodes, 147 on tree, 1e+50 best solution, best possible 1011065.7 (1227.98 seconds)
Cbc0010I After 3100 nodes, 151 on tree, 1e+50 best solution, best possible 1011065.7 (1256.54 seconds)
Cbc0010I After 3200 nodes, 161 on tree, 1e+50 best solution, best possible 1011065.7 (1286.73 seconds)
Cbc0010I After 3300 nodes, 162 on tree, 1e+50 best solution, best possible 1011065.7 (1316.70 seconds)
Cbc0010I After 3400 nodes, 166 on tree, 1e+50 best solution, best possible 1011065.7 (1346.08 seconds)
Cbc0010I After 3500 nodes, 172 on tree, 1e+50 best solution, best possible 1011065.7 (1377.44 seconds)
Cbc0010I After 3600 nodes, 181 on tree, 1e+50 best solution, best possible 1011065.7 (1408.27 seconds)
Cbc0010I After 3700 nodes, 188 on tree, 1e+50 best solution, best possible 1011065.7 (1441.94 seconds)
Cbc0010I After 3800 nodes, 191 on tree, 1e+50 best solution, best possible 1011065.7 (1477.25 seconds)
Cbc0010I After 3900 nodes, 195 on tree, 1e+50 best solution, best possible 1011065.7 (1516.31 seconds)
Cbc0010I After 4000 nodes, 210 on tree, 1e+50 best solution, best possible 1011065.7 (1550.70 seconds)
Cbc0010I After 4100 nodes, 226 on tree, 1e+50 best solution, best possible 1011065.7 (1583.52 seconds)
Cbc0010I After 4200 nodes, 228 on tree, 1e+50 best solution, best possible 1011065.7 (1625.89 seconds)
Cbc0010I After 4300 nodes, 240 on tree, 1e+50 best solution, best possible 1011065.7 (1659.16 seconds)
Cbc0010I After 4400 nodes, 249 on tree, 1e+50 best solution, best possible 1011065.7 (1693.99 seconds)
Cbc0010I After 4500 nodes, 257 on tree, 1e+50 best solution, best possible 1011065.7 (1727.68 seconds)
Cbc0010I After 4600 nodes, 259 on tree, 1e+50 best solution, best possible 1011065.7 (1763.97 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1011065.7), took 6882193 iterations and 4695 nodes (1800.01 seconds)
Cbc0032I Strong branching done 14168 times (1142946 iterations), fathomed 200 nodes and fixed 151 variables
Cbc0035I Maximum depth 1558, 0 variables fixed on reduced cost
Cuts at root node changed objective from 971078 to 1.00812e+06
Probing was tried 10 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.074 seconds)
Gomory was tried 602 times and created 575 cuts of which 0 were active after adding rounds of cuts (4.178 seconds)
Knapsack was tried 602 times and created 1100 cuts of which 0 were active after adding rounds of cuts (0.701 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 602 times and created 9339 cuts of which 0 were active after adding rounds of cuts (1.777 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
ImplicationCuts was tried 23 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1011065.702
Enumerated nodes:               4695
Total iterations:               6882193
Time (CPU seconds):             1800.01
Time (Wallclock seconds):       1806.79

Total time (CPU seconds):       1800.04   (Wallclock seconds):       1806.82

