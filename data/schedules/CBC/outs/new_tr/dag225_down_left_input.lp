Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag225_down_left_input.lp sec 1800 solve solu transitive/dag225_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 903918 - 0.99 seconds
Cgl0002I 610 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 494 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 53 strengthened rows, 0 substitutions
Cgl0004I processed model has 2827 rows, 909 columns (909 integer (874 of which binary)) and 9291 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 909 objects (909 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 520 integers unsatisfied sum - 115.832
Cbc0038I Pass   1: suminf.   74.11883 (465) obj. 1.1976e+06 iterations 1082
Cbc0038I Pass   2: suminf.   69.96113 (429) obj. 1.19541e+06 iterations 291
Cbc0038I Pass   3: suminf.   68.61076 (429) obj. 1.19305e+06 iterations 54
Cbc0038I Pass   4: suminf.   64.57834 (426) obj. 1.20426e+06 iterations 256
Cbc0038I Pass   5: suminf.   63.91070 (436) obj. 1.22132e+06 iterations 71
Cbc0038I Pass   6: suminf.   65.95815 (437) obj. 1.22548e+06 iterations 43
Cbc0038I Pass   7: suminf.   56.95076 (438) obj. 1.22694e+06 iterations 228
Cbc0038I Pass   8: suminf.   58.09628 (428) obj. 1.21987e+06 iterations 70
Cbc0038I Pass   9: suminf.   52.84825 (390) obj. 1.22795e+06 iterations 399
Cbc0038I Pass  10: suminf.   50.80922 (397) obj. 1.226e+06 iterations 159
Cbc0038I Pass  11: suminf.   49.19527 (394) obj. 1.22286e+06 iterations 186
Cbc0038I Pass  12: suminf.   48.82874 (377) obj. 1.22181e+06 iterations 63
Cbc0038I Pass  13: suminf.   49.47754 (397) obj. 1.21579e+06 iterations 105
Cbc0038I Pass  14: suminf.   48.89705 (374) obj. 1.21735e+06 iterations 40
Cbc0038I Pass  15: suminf.   45.25757 (304) obj. 1.20128e+06 iterations 528
Cbc0038I Pass  16: suminf.   43.15895 (302) obj. 1.15528e+06 iterations 177
Cbc0038I Pass  17: suminf.   41.23374 (294) obj. 1.18518e+06 iterations 129
Cbc0038I Pass  18: suminf.   34.88085 (269) obj. 1.21568e+06 iterations 389
Cbc0038I Pass  19: suminf.   32.98996 (269) obj. 1.25989e+06 iterations 111
Cbc0038I Pass  20: suminf.   31.97647 (270) obj. 1.25751e+06 iterations 89
Cbc0038I Pass  21: suminf.   31.18103 (275) obj. 1.25402e+06 iterations 114
Cbc0038I Pass  22: suminf.   29.43714 (252) obj. 1.25332e+06 iterations 203
Cbc0038I Pass  23: suminf.   27.09021 (239) obj. 1.25296e+06 iterations 124
Cbc0038I Pass  24: suminf.   26.34995 (263) obj. 1.24958e+06 iterations 217
Cbc0038I Pass  25: suminf.   26.42745 (263) obj. 1.24956e+06 iterations 9
Cbc0038I Pass  26: suminf.   24.83144 (246) obj. 1.25877e+06 iterations 225
Cbc0038I Pass  27: suminf.   24.69595 (244) obj. 1.25845e+06 iterations 25
Cbc0038I Pass  28: suminf.   23.22352 (234) obj. 1.2606e+06 iterations 202
Cbc0038I Pass  29: suminf.   22.45084 (237) obj. 1.26123e+06 iterations 131
Cbc0038I Pass  30: suminf.   25.00270 (204) obj. 1.26348e+06 iterations 231
Cbc0038I Pass  31: suminf.   21.80842 (206) obj. 1.26499e+06 iterations 164
Cbc0038I Pass  32: suminf.   20.83774 (212) obj. 1.26494e+06 iterations 28
Cbc0038I Pass  33: suminf.   18.03573 (177) obj. 1.3577e+06 iterations 212
Cbc0038I Pass  34: suminf.   17.74401 (180) obj. 1.35768e+06 iterations 24
Cbc0038I Pass  35: suminf.   13.30942 (156) obj. 1.35655e+06 iterations 256
Cbc0038I Pass  36: suminf.   12.82958 (155) obj. 1.35623e+06 iterations 55
Cbc0038I Pass  37: suminf.   14.62871 (154) obj. 1.35767e+06 iterations 255
Cbc0038I Pass  38: suminf.   10.86334 (135) obj. 1.35764e+06 iterations 131
Cbc0038I Pass  39: suminf.   10.95411 (131) obj. 1.35764e+06 iterations 19
Cbc0038I Pass  40: suminf.   12.28766 (111) obj. 1.33585e+06 iterations 201
Cbc0038I Pass  41: suminf.   11.07932 (102) obj. 1.33503e+06 iterations 105
Cbc0038I Pass  42: suminf.    8.94483 (73) obj. 1.37528e+06 iterations 249
Cbc0038I Pass  43: suminf.    5.46580 (81) obj. 1.35618e+06 iterations 84
Cbc0038I Pass  44: suminf.    5.16551 (75) obj. 1.36008e+06 iterations 29
Cbc0038I Pass  45: suminf.    7.65794 (77) obj. 1.36971e+06 iterations 100
Cbc0038I Pass  46: suminf.    7.59143 (73) obj. 1.36793e+06 iterations 29
Cbc0038I Pass  47: suminf.    5.59094 (67) obj. 1.36654e+06 iterations 20
Cbc0038I Pass  48: suminf.    4.57840 (66) obj. 1.35585e+06 iterations 43
Cbc0038I Pass  49: suminf.    6.31015 (68) obj. 1.46266e+06 iterations 203
Cbc0038I Pass  50: suminf.    5.84125 (59) obj. 1.46279e+06 iterations 19
Cbc0038I Pass  51: suminf.    4.33384 (52) obj. 1.35987e+06 iterations 63
Cbc0038I Pass  52: suminf.    2.60999 (52) obj. 1.35987e+06 iterations 12
Cbc0038I Pass  53: suminf.    6.54168 (58) obj. 1.46728e+06 iterations 114
Cbc0038I Pass  54: suminf.    6.41289 (55) obj. 1.46728e+06 iterations 17
Cbc0038I Pass  55: suminf.    0.00000 (0) obj. 1.35987e+06 iterations 336
Cbc0038I Solution found of 1.35987e+06
Cbc0038I Cleaned solution of 1.35987e+06
Cbc0038I Before mini branch and bound, 168 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.80 seconds)
Cbc0038I Round again with cutoff of 1.31665e+06
Cbc0038I Pass  56: suminf.   74.11883 (465) obj. 1.1976e+06 iterations 0
Cbc0038I Pass  57: suminf.   69.96113 (429) obj. 1.19541e+06 iterations 234
Cbc0038I Pass  58: suminf.   68.61076 (429) obj. 1.19305e+06 iterations 61
Cbc0038I Pass  59: suminf.   59.75134 (374) obj. 1.21377e+06 iterations 377
Cbc0038I Pass  60: suminf.   56.11206 (366) obj. 1.25334e+06 iterations 293
Cbc0038I Pass  61: suminf.   56.58423 (368) obj. 1.25305e+06 iterations 10
Cbc0038I Pass  62: suminf.   57.55059 (343) obj. 1.24451e+06 iterations 300
Cbc0038I Pass  63: suminf.   55.64942 (363) obj. 1.2403e+06 iterations 144
Cbc0038I Pass  64: suminf.   55.02746 (361) obj. 1.24064e+06 iterations 26
Cbc0038I Pass  65: suminf.   45.83883 (310) obj. 1.2056e+06 iterations 415
Cbc0038I Pass  66: suminf.   44.61503 (309) obj. 1.20708e+06 iterations 96
Cbc0038I Pass  67: suminf.   37.54057 (302) obj. 1.19138e+06 iterations 298
Cbc0038I Pass  68: suminf.   34.40098 (270) obj. 1.24194e+06 iterations 171
Cbc0038I Pass  69: suminf.   33.23603 (268) obj. 1.22829e+06 iterations 64
Cbc0038I Pass  70: suminf.   30.50624 (271) obj. 1.19032e+06 iterations 184
Cbc0038I Pass  71: suminf.   27.52340 (238) obj. 1.19397e+06 iterations 251
Cbc0038I Pass  72: suminf.   27.44228 (235) obj. 1.2036e+06 iterations 57
Cbc0038I Pass  73: suminf.   24.38795 (227) obj. 1.19066e+06 iterations 107
Cbc0038I Pass  74: suminf.   23.13195 (236) obj. 1.18992e+06 iterations 106
Cbc0038I Pass  75: suminf.   20.74529 (182) obj. 1.19605e+06 iterations 292
Cbc0038I Pass  76: suminf.   17.80306 (180) obj. 1.31665e+06 iterations 159
Cbc0038I Pass  77: suminf.   17.99750 (178) obj. 1.31665e+06 iterations 43
Cbc0038I Pass  78: suminf.   16.28024 (129) obj. 1.31665e+06 iterations 455
Cbc0038I Pass  79: suminf.   12.08038 (112) obj. 1.29741e+06 iterations 164
Cbc0038I Pass  80: suminf.    9.38185 (112) obj. 1.29725e+06 iterations 67
Cbc0038I Pass  81: suminf.   11.45241 (92) obj. 1.29712e+06 iterations 244
Cbc0038I Pass  82: suminf.    7.01112 (90) obj. 1.29712e+06 iterations 80
Cbc0038I Pass  83: suminf.   11.10188 (82) obj. 1.31665e+06 iterations 275
Cbc0038I Pass  84: suminf.    8.77865 (88) obj. 1.29434e+06 iterations 96
Cbc0038I Pass  85: suminf.    7.86660 (81) obj. 1.29434e+06 iterations 62
Cbc0038I Pass  86: suminf.    4.50938 (69) obj. 1.29434e+06 iterations 59
Cbc0038I Pass  87: suminf.    4.50938 (69) obj. 1.29434e+06 iterations 4
Cbc0038I Pass  88: suminf.    5.06287 (68) obj. 1.29434e+06 iterations 905
Cbc0038I Pass  89: suminf.    3.73476 (65) obj. 1.29434e+06 iterations 59
Cbc0038I Pass  90: suminf.   11.04675 (75) obj. 1.31665e+06 iterations 1018
Cbc0038I Pass  91: suminf.    6.70192 (96) obj. 1.31202e+06 iterations 256
Cbc0038I Pass  92: suminf.   12.32808 (80) obj. 1.31665e+06 iterations 416
Cbc0038I Pass  93: suminf.    8.49441 (77) obj. 1.31665e+06 iterations 377
Cbc0038I Pass  94: suminf.    8.48899 (79) obj. 1.31665e+06 iterations 26
Cbc0038I Pass  95: suminf.    0.43335 (1) obj. 1.31665e+06 iterations 1500
Cbc0038I Solution found of 1.31665e+06
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2828 rows 909 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 1.29434e+06
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2827 rows 909 columns, reduced to 2360 rows 725 columns - 213 fixed gives 1078, 274 - ok now
Cbc0038I Full problem 2827 rows 909 columns, reduced to 156 rows 57 columns
Cbc0038I Mini branch and bound did not improve solution (4.41 seconds)
Cbc0038I Round again with cutoff of 1.221e+06
Cbc0038I Pass  96: suminf.   74.11883 (465) obj. 1.1976e+06 iterations 0
Cbc0038I Pass  97: suminf.   69.96113 (429) obj. 1.19541e+06 iterations 234
Cbc0038I Pass  98: suminf.   68.61076 (429) obj. 1.19305e+06 iterations 61
Cbc0038I Pass  99: suminf.   64.64491 (431) obj. 1.21679e+06 iterations 177
Cbc0038I Pass 100: suminf.   65.71234 (437) obj. 1.221e+06 iterations 93
Cbc0038I Pass 101: suminf.   60.21547 (431) obj. 1.21543e+06 iterations 259
Cbc0038I Pass 102: suminf.   59.07932 (423) obj. 1.221e+06 iterations 30
Cbc0038I Pass 103: suminf.   56.06947 (426) obj. 1.221e+06 iterations 156
Cbc0038I Pass 104: suminf.   54.82959 (406) obj. 1.21839e+06 iterations 112
Cbc0038I Pass 105: suminf.   55.25081 (429) obj. 1.221e+06 iterations 40
Cbc0038I Pass 106: suminf.   55.33000 (409) obj. 1.221e+06 iterations 31
Cbc0038I Pass 107: suminf.   54.54715 (362) obj. 1.19829e+06 iterations 441
Cbc0038I Pass 108: suminf.   50.55018 (326) obj. 1.18863e+06 iterations 258
Cbc0038I Pass 109: suminf.   45.58294 (289) obj. 1.13502e+06 iterations 554
Cbc0038I Pass 110: suminf.   45.45717 (301) obj. 1.1347e+06 iterations 54
Cbc0038I Pass 111: suminf.   43.85004 (284) obj. 1.20044e+06 iterations 230
Cbc0038I Pass 112: suminf.   43.74673 (289) obj. 1.21842e+06 iterations 140
Cbc0038I Pass 113: suminf.   39.97119 (270) obj. 1.221e+06 iterations 194
Cbc0038I Pass 114: suminf.   39.28866 (285) obj. 1.221e+06 iterations 65
Cbc0038I Pass 115: suminf.   27.90608 (234) obj. 1.221e+06 iterations 253
Cbc0038I Pass 116: suminf.   27.47863 (232) obj. 1.221e+06 iterations 75
Cbc0038I Pass 117: suminf.   23.36449 (221) obj. 1.221e+06 iterations 127
Cbc0038I Pass 118: suminf.   22.70465 (217) obj. 1.221e+06 iterations 89
Cbc0038I Pass 119: suminf.   22.60836 (221) obj. 1.221e+06 iterations 41
Cbc0038I Pass 120: suminf.   17.38639 (194) obj. 1.221e+06 iterations 280
Cbc0038I Pass 121: suminf.   18.52212 (192) obj. 1.221e+06 iterations 161
Cbc0038I Pass 122: suminf.   21.44980 (188) obj. 1.221e+06 iterations 421
Cbc0038I Pass 123: suminf.   19.40707 (173) obj. 1.221e+06 iterations 111
Cbc0038I Pass 124: suminf.   17.60232 (174) obj. 1.221e+06 iterations 198
Cbc0038I Pass 125: suminf.   17.43109 (174) obj. 1.221e+06 iterations 69
Cbc0038I Pass 126: suminf.   16.09781 (138) obj. 1.221e+06 iterations 269
Cbc0038I Pass 127: suminf.   13.37889 (144) obj. 1.221e+06 iterations 128
Cbc0038I Pass 128: suminf.   11.78961 (129) obj. 1.221e+06 iterations 65
Cbc0038I Pass 129: suminf.   11.09830 (105) obj. 1.221e+06 iterations 101
Cbc0038I Pass 130: suminf.    9.86927 (109) obj. 1.221e+06 iterations 123
Cbc0038I Pass 131: suminf.   10.11876 (112) obj. 1.221e+06 iterations 41
Cbc0038I Pass 132: suminf.   10.83104 (93) obj. 1.221e+06 iterations 281
Cbc0038I Pass 133: suminf.   10.27512 (101) obj. 1.221e+06 iterations 83
Cbc0038I Pass 134: suminf.    8.47670 (88) obj. 1.221e+06 iterations 145
Cbc0038I Pass 135: suminf.    8.69091 (90) obj. 1.221e+06 iterations 53
Cbc0038I Pass 136: suminf.    9.65656 (83) obj. 1.18641e+06 iterations 215
Cbc0038I Pass 137: suminf.    9.23100 (97) obj. 1.221e+06 iterations 175
Cbc0038I Pass 138: suminf.    9.26001 (81) obj. 1.221e+06 iterations 96
Cbc0038I Pass 139: suminf.    8.32358 (84) obj. 1.221e+06 iterations 53
Cbc0038I Pass 140: suminf.    8.01074 (83) obj. 1.221e+06 iterations 53
Cbc0038I Pass 141: suminf.    8.80021 (74) obj. 1.21939e+06 iterations 194
Cbc0038I Pass 142: suminf.    8.59870 (95) obj. 1.17056e+06 iterations 191
Cbc0038I Pass 143: suminf.    8.32967 (71) obj. 1.221e+06 iterations 222
Cbc0038I Pass 144: suminf.    8.38181 (90) obj. 1.221e+06 iterations 57
Cbc0038I Pass 145: suminf.    9.60859 (75) obj. 1.16046e+06 iterations 350
Cbc0038I Pass 146: suminf.    8.14670 (88) obj. 1.16287e+06 iterations 142
Cbc0038I Pass 147: suminf.   15.99736 (122) obj. 1.221e+06 iterations 472
Cbc0038I Pass 148: suminf.   14.60014 (121) obj. 1.221e+06 iterations 52
Cbc0038I Pass 149: suminf.   14.54228 (122) obj. 1.221e+06 iterations 6
Cbc0038I Pass 150: suminf.   11.99632 (79) obj. 1.221e+06 iterations 643
Cbc0038I Pass 151: suminf.    9.87499 (67) obj. 1.221e+06 iterations 486
Cbc0038I Pass 152: suminf.    9.78555 (79) obj. 1.221e+06 iterations 94
Cbc0038I Pass 153: suminf.   17.08674 (108) obj. 1.221e+06 iterations 454
Cbc0038I Pass 154: suminf.   11.34831 (95) obj. 1.221e+06 iterations 240
Cbc0038I Pass 155: suminf.   10.90587 (88) obj. 1.221e+06 iterations 55
Cbc0038I Pass 156: suminf.   13.04258 (78) obj. 1.221e+06 iterations 404
Cbc0038I Pass 157: suminf.   11.44472 (93) obj. 1.221e+06 iterations 113
Cbc0038I Pass 158: suminf.   13.76986 (90) obj. 1.221e+06 iterations 276
Cbc0038I Pass 159: suminf.   11.34831 (95) obj. 1.221e+06 iterations 90
Cbc0038I Pass 160: suminf.   10.90587 (88) obj. 1.221e+06 iterations 54
Cbc0038I Pass 161: suminf.   14.31822 (87) obj. 1.221e+06 iterations 384
Cbc0038I Pass 162: suminf.   13.74208 (111) obj. 1.221e+06 iterations 79
Cbc0038I Pass 163: suminf.   11.01328 (102) obj. 1.221e+06 iterations 116
Cbc0038I Pass 164: suminf.   10.96320 (102) obj. 1.221e+06 iterations 69
Cbc0038I Pass 165: suminf.   11.25958 (83) obj. 1.221e+06 iterations 171
Cbc0038I Pass 166: suminf.   10.90587 (88) obj. 1.221e+06 iterations 45
Cbc0038I Pass 167: suminf.   15.56850 (83) obj. 1.221e+06 iterations 227
Cbc0038I Pass 168: suminf.    9.69643 (67) obj. 1.221e+06 iterations 114
Cbc0038I Pass 169: suminf.    7.60095 (76) obj. 1.221e+06 iterations 76
Cbc0038I Pass 170: suminf.    8.50213 (64) obj. 1.221e+06 iterations 278
Cbc0038I Pass 171: suminf.    7.91819 (67) obj. 1.221e+06 iterations 61
Cbc0038I Pass 172: suminf.    7.28551 (52) obj. 1.221e+06 iterations 248
Cbc0038I Pass 173: suminf.    6.63074 (44) obj. 1.221e+06 iterations 131
Cbc0038I Pass 174: suminf.   10.52739 (53) obj. 1.221e+06 iterations 1702
Cbc0038I Pass 175: suminf.    9.55984 (41) obj. 1.221e+06 iterations 154
Cbc0038I Pass 176: suminf.    7.87266 (45) obj. 1.221e+06 iterations 107
Cbc0038I Pass 177: suminf.    6.56471 (41) obj. 1.221e+06 iterations 156
Cbc0038I Pass 178: suminf.    9.92323 (57) obj. 1.221e+06 iterations 619
Cbc0038I Pass 179: suminf.    8.15263 (49) obj. 1.221e+06 iterations 210
Cbc0038I Pass 180: suminf.    5.19971 (40) obj. 1.221e+06 iterations 84
Cbc0038I Pass 181: suminf.    5.03704 (74) obj. 1.221e+06 iterations 143
Cbc0038I Pass 182: suminf.    5.88217 (43) obj. 1.221e+06 iterations 199
Cbc0038I Pass 183: suminf.    5.85805 (52) obj. 1.221e+06 iterations 54
Cbc0038I Pass 184: suminf.   12.12595 (107) obj. 1.221e+06 iterations 1333
Cbc0038I Pass 185: suminf.    8.87276 (52) obj. 1.221e+06 iterations 203
Cbc0038I Pass 186: suminf.   10.11474 (55) obj. 1.221e+06 iterations 479
Cbc0038I Pass 187: suminf.    7.84399 (78) obj. 1.221e+06 iterations 174
Cbc0038I Pass 188: suminf.    7.99372 (78) obj. 1.221e+06 iterations 355
Cbc0038I Pass 189: suminf.    6.78265 (63) obj. 1.221e+06 iterations 121
Cbc0038I Pass 190: suminf.    5.26998 (47) obj. 1.221e+06 iterations 81
Cbc0038I Pass 191: suminf.    7.35196 (86) obj. 1.221e+06 iterations 167
Cbc0038I Pass 192: suminf.   12.79672 (80) obj. 1.221e+06 iterations 462
Cbc0038I Pass 193: suminf.   12.59214 (97) obj. 1.221e+06 iterations 68
Cbc0038I Pass 194: suminf.    8.75365 (79) obj. 1.221e+06 iterations 270
Cbc0038I Pass 195: suminf.   42.79247 (246) obj. 1.221e+06 iterations 922
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 132 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2827 rows 909 columns, reduced to 2489 rows 777 columns - 220 fixed gives 1156, 301 - ok now
Cbc0038I Mini branch and bound did not improve solution (7.34 seconds)
Cbc0038I After 7.34 seconds - Feasibility pump exiting with objective of 1.29434e+06 - took 5.97 seconds
Cbc0012I Integer solution of 1294336 found by feasibility pump after 0 iterations and 0 nodes (7.34 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1875 rows 544 columns - 165 fixed gives 558, 179 - ok now
Cbc0031I 33 added rows had average density of 3.3333333
Cbc0013I At root node, 33 cuts changed objective from 927645.33 to 1097728 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.8 elements, 4 column cuts (4 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 119 row cuts average 318.6 elements, 0 column cuts (0 active)  in 0.258 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 544 row cuts average 97.5 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1294336 best solution, best possible 1097728 (22.02 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1624 rows 450 columns - 162 fixed gives 475, 122 - ok now
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1591 rows 429 columns - 158 fixed gives 305, 102 - ok now
Cbc0010I After 100 nodes, 4 on tree, 1294336 best solution, best possible 1097728 (56.65 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 400 rows 129 columns
Cbc0010I After 200 nodes, 4 on tree, 1294336 best solution, best possible 1097735 (85.92 seconds)
Cbc0010I After 300 nodes, 9 on tree, 1294336 best solution, best possible 1097735 (102.27 seconds)
Cbc0010I After 400 nodes, 9 on tree, 1294336 best solution, best possible 1097739 (123.63 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 400 rows 128 columns
Cbc0010I After 500 nodes, 8 on tree, 1294336 best solution, best possible 1097739 (141.16 seconds)
Cbc0010I After 600 nodes, 4 on tree, 1294336 best solution, best possible 1097742 (162.91 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1451 rows 399 columns - 158 fixed gives 211, 73 - ok now
Cbc0010I After 700 nodes, 7 on tree, 1294336 best solution, best possible 1097742 (186.91 seconds)
Cbc0010I After 800 nodes, 2 on tree, 1294336 best solution, best possible 1097743 (219.18 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 217 rows 79 columns
Cbc0038I Full problem 2827 rows 909 columns, reduced to 220 rows 85 columns
Cbc0010I After 900 nodes, 5 on tree, 1294336 best solution, best possible 1097747 (247.21 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1583 rows 429 columns - 165 fixed gives 221, 81 - ok now
Cbc0010I After 1000 nodes, 4 on tree, 1294336 best solution, best possible 1097747 (276.01 seconds)
Cbc0010I After 1100 nodes, 7 on tree, 1294336 best solution, best possible 1097747 (301.42 seconds)
Cbc0010I After 1200 nodes, 3 on tree, 1294336 best solution, best possible 1097747 (328.96 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1784 rows 500 columns - 162 fixed gives 453, 133 - ok now
Cbc0010I After 1300 nodes, 5 on tree, 1294336 best solution, best possible 1097747 (353.44 seconds)
Cbc0010I After 1400 nodes, 4 on tree, 1294336 best solution, best possible 1097747 (377.08 seconds)
Cbc0010I After 1500 nodes, 8 on tree, 1294336 best solution, best possible 1097747 (401.34 seconds)
Cbc0010I After 1600 nodes, 8 on tree, 1294336 best solution, best possible 1097747 (426.44 seconds)
Cbc0010I After 1700 nodes, 11 on tree, 1294336 best solution, best possible 1097747 (451.53 seconds)
Cbc0010I After 1800 nodes, 11 on tree, 1294336 best solution, best possible 1097747 (479.10 seconds)
Cbc0010I After 1900 nodes, 10 on tree, 1294336 best solution, best possible 1097747 (502.89 seconds)
Cbc0010I After 2000 nodes, 12 on tree, 1294336 best solution, best possible 1097747 (524.08 seconds)
Cbc0010I After 2100 nodes, 15 on tree, 1294336 best solution, best possible 1097747 (540.46 seconds)
Cbc0010I After 2200 nodes, 16 on tree, 1294336 best solution, best possible 1097747 (557.57 seconds)
Cbc0010I After 2300 nodes, 16 on tree, 1294336 best solution, best possible 1097747 (575.87 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1649 rows 448 columns - 177 fixed gives 217, 79 - ok now
Cbc0010I After 2400 nodes, 14 on tree, 1294336 best solution, best possible 1097747 (595.05 seconds)
Cbc0010I After 2500 nodes, 14 on tree, 1294336 best solution, best possible 1097747 (614.61 seconds)
Cbc0010I After 2600 nodes, 20 on tree, 1294336 best solution, best possible 1097747 (632.58 seconds)
Cbc0010I After 2700 nodes, 24 on tree, 1294336 best solution, best possible 1097747 (654.44 seconds)
Cbc0010I After 2800 nodes, 21 on tree, 1294336 best solution, best possible 1097747 (671.84 seconds)
Cbc0010I After 2900 nodes, 30 on tree, 1294336 best solution, best possible 1097747 (690.76 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1801 rows 505 columns - 164 fixed gives 450, 132 - ok now
Cbc0010I After 3000 nodes, 22 on tree, 1294336 best solution, best possible 1097747 (710.69 seconds)
Cbc0010I After 3100 nodes, 23 on tree, 1294336 best solution, best possible 1097747 (732.07 seconds)
Cbc0010I After 3200 nodes, 26 on tree, 1294336 best solution, best possible 1097747 (752.11 seconds)
Cbc0010I After 3300 nodes, 24 on tree, 1294336 best solution, best possible 1097747 (775.01 seconds)
Cbc0010I After 3400 nodes, 23 on tree, 1294336 best solution, best possible 1097747 (797.75 seconds)
Cbc0010I After 3500 nodes, 26 on tree, 1294336 best solution, best possible 1097747 (818.46 seconds)
Cbc0010I After 3600 nodes, 25 on tree, 1294336 best solution, best possible 1097747 (839.35 seconds)
Cbc0010I After 3700 nodes, 28 on tree, 1294336 best solution, best possible 1097747 (862.02 seconds)
Cbc0010I After 3800 nodes, 26 on tree, 1294336 best solution, best possible 1097747 (882.94 seconds)
Cbc0010I After 3900 nodes, 28 on tree, 1294336 best solution, best possible 1097747 (901.87 seconds)
Cbc0010I After 4000 nodes, 28 on tree, 1294336 best solution, best possible 1097747 (925.25 seconds)
Cbc0010I After 4100 nodes, 29 on tree, 1294336 best solution, best possible 1097747 (945.79 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 328 rows 107 columns
Cbc0010I After 4200 nodes, 34 on tree, 1294336 best solution, best possible 1097747 (968.30 seconds)
Cbc0010I After 4300 nodes, 28 on tree, 1294336 best solution, best possible 1097747 (988.74 seconds)
Cbc0010I After 4400 nodes, 30 on tree, 1294336 best solution, best possible 1097747 (1008.80 seconds)
Cbc0010I After 4500 nodes, 34 on tree, 1294336 best solution, best possible 1097747 (1030.09 seconds)
Cbc0010I After 4600 nodes, 33 on tree, 1294336 best solution, best possible 1097747 (1051.56 seconds)
Cbc0010I After 4700 nodes, 35 on tree, 1294336 best solution, best possible 1097747 (1071.69 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1568 rows 434 columns - 159 fixed gives 291, 105 - ok now
Cbc0010I After 4800 nodes, 36 on tree, 1294336 best solution, best possible 1097747 (1089.06 seconds)
Cbc0010I After 4900 nodes, 35 on tree, 1294336 best solution, best possible 1097747 (1104.95 seconds)
Cbc0010I After 5000 nodes, 35 on tree, 1294336 best solution, best possible 1097747 (1127.02 seconds)
Cbc0010I After 5100 nodes, 32 on tree, 1294336 best solution, best possible 1097747 (1143.88 seconds)
Cbc0010I After 5200 nodes, 33 on tree, 1294336 best solution, best possible 1097747 (1162.87 seconds)
Cbc0010I After 5300 nodes, 32 on tree, 1294336 best solution, best possible 1097747 (1180.90 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1723 rows 466 columns - 180 fixed gives 264, 84 - ok now
Cbc0010I After 5400 nodes, 34 on tree, 1294336 best solution, best possible 1097747 (1201.73 seconds)
Cbc0010I After 5500 nodes, 36 on tree, 1294336 best solution, best possible 1097747 (1222.79 seconds)
Cbc0010I After 5600 nodes, 47 on tree, 1294336 best solution, best possible 1097747 (1240.92 seconds)
Cbc0010I After 5700 nodes, 41 on tree, 1294336 best solution, best possible 1097747 (1260.57 seconds)
Cbc0010I After 5800 nodes, 39 on tree, 1294336 best solution, best possible 1097747 (1279.77 seconds)
Cbc0010I After 5900 nodes, 47 on tree, 1294336 best solution, best possible 1097747 (1298.91 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1656 rows 462 columns - 177 fixed gives 306, 105 - ok now
Cbc0010I After 6000 nodes, 46 on tree, 1294336 best solution, best possible 1097747 (1321.95 seconds)
Cbc0010I After 6100 nodes, 43 on tree, 1294336 best solution, best possible 1097747 (1340.63 seconds)
Cbc0010I After 6200 nodes, 49 on tree, 1294336 best solution, best possible 1097747 (1359.01 seconds)
Cbc0010I After 6300 nodes, 49 on tree, 1294336 best solution, best possible 1097747 (1379.81 seconds)
Cbc0010I After 6400 nodes, 43 on tree, 1294336 best solution, best possible 1097747 (1399.70 seconds)
Cbc0010I After 6500 nodes, 43 on tree, 1294336 best solution, best possible 1097747 (1418.68 seconds)
Cbc0010I After 6600 nodes, 51 on tree, 1294336 best solution, best possible 1097747 (1439.59 seconds)
Cbc0010I After 6700 nodes, 43 on tree, 1294336 best solution, best possible 1097747 (1460.30 seconds)
Cbc0010I After 6800 nodes, 45 on tree, 1294336 best solution, best possible 1097747 (1479.89 seconds)
Cbc0010I After 6900 nodes, 49 on tree, 1294336 best solution, best possible 1097747 (1500.07 seconds)
Cbc0010I After 7000 nodes, 50 on tree, 1294336 best solution, best possible 1097747 (1522.37 seconds)
Cbc0010I After 7100 nodes, 44 on tree, 1294336 best solution, best possible 1097747 (1544.32 seconds)
Cbc0010I After 7200 nodes, 49 on tree, 1294336 best solution, best possible 1097747 (1562.57 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1802 rows 505 columns - 165 fixed gives 448, 132 - ok now
Cbc0010I After 7300 nodes, 45 on tree, 1294336 best solution, best possible 1097747 (1582.13 seconds)
Cbc0010I After 7400 nodes, 45 on tree, 1294336 best solution, best possible 1097747 (1600.61 seconds)
Cbc0010I After 7500 nodes, 49 on tree, 1294336 best solution, best possible 1097747 (1617.39 seconds)
Cbc0010I After 7600 nodes, 47 on tree, 1294336 best solution, best possible 1097747 (1638.18 seconds)
Cbc0010I After 7700 nodes, 48 on tree, 1294336 best solution, best possible 1097747 (1659.38 seconds)
Cbc0010I After 7800 nodes, 45 on tree, 1294336 best solution, best possible 1097747 (1679.29 seconds)
Cbc0010I After 7900 nodes, 53 on tree, 1294336 best solution, best possible 1097747 (1698.50 seconds)
Cbc0010I After 8000 nodes, 56 on tree, 1294336 best solution, best possible 1097747 (1716.16 seconds)
Cbc0010I After 8100 nodes, 47 on tree, 1294336 best solution, best possible 1097747 (1736.76 seconds)
Cbc0010I After 8200 nodes, 47 on tree, 1294336 best solution, best possible 1097747 (1753.20 seconds)
Cbc0010I After 8300 nodes, 48 on tree, 1294336 best solution, best possible 1097747 (1770.37 seconds)
Cbc0010I After 8400 nodes, 51 on tree, 1294336 best solution, best possible 1097747 (1787.20 seconds)
Cbc0038I Full problem 2827 rows 909 columns, reduced to 1565 rows 421 columns - 166 fixed gives 252, 91 - ok now
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1294336 (best possible 1097747), took 7650571 iterations and 8478 nodes (1799.89 seconds)
Cbc0032I Strong branching done 24840 times (1869133 iterations), fathomed 88 nodes and fixed 2268 variables
Cbc0035I Maximum depth 811, 3 variables fixed on reduced cost
Cuts at root node changed objective from 927645 to 1.09773e+06
Probing was tried 5291 times and created 187532 cuts of which 0 were active after adding rounds of cuts (19.869 seconds)
Gomory was tried 5139 times and created 3877 cuts of which 0 were active after adding rounds of cuts (15.290 seconds)
Knapsack was tried 5139 times and created 13906 cuts of which 0 were active after adding rounds of cuts (5.892 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 5139 times and created 47116 cuts of which 0 were active after adding rounds of cuts (6.220 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
ImplicationCuts was tried 85 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Stopped on time limit

Objective value:                1294336.00000000
Lower bound:                    1097747.000
Gap:                            0.18
Enumerated nodes:               8478
Total iterations:               7650571
Time (CPU seconds):             1800.04
Time (Wallclock seconds):       1801.22

Total time (CPU seconds):       1800.05   (Wallclock seconds):       1801.24

