Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_30_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_3_30_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32401.8 - 0.10 seconds
Cgl0002I 304 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 360 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0004I processed model has 2124 rows, 682 columns (682 integer (651 of which binary)) and 7038 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 682 objects (682 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 376 integers unsatisfied sum - 105.348
Cbc0038I Pass   1: suminf.   32.23154 (181) obj. 45933.4 iterations 797
Cbc0038I Pass   2: suminf.   23.81471 (178) obj. 49082.5 iterations 267
Cbc0038I Pass   3: suminf.   23.23858 (179) obj. 49127.7 iterations 16
Cbc0038I Pass   4: suminf.   16.75475 (161) obj. 46277.6 iterations 203
Cbc0038I Pass   5: suminf.   15.59787 (166) obj. 45921.2 iterations 55
Cbc0038I Pass   6: suminf.   13.41280 (128) obj. 54650.6 iterations 188
Cbc0038I Pass   7: suminf.   12.70607 (127) obj. 54623.9 iterations 29
Cbc0038I Pass   8: suminf.   10.43154 (110) obj. 54402.9 iterations 197
Cbc0038I Pass   9: suminf.    8.59570 (108) obj. 54347.2 iterations 72
Cbc0038I Pass  10: suminf.    5.70561 (88) obj. 54129.8 iterations 42
Cbc0038I Pass  11: suminf.    5.65959 (88) obj. 54129.8 iterations 25
Cbc0038I Pass  12: suminf.    4.10137 (65) obj. 54513.5 iterations 83
Cbc0038I Pass  13: suminf.    3.08125 (66) obj. 54498.2 iterations 29
Cbc0038I Pass  14: suminf.    1.05399 (36) obj. 54272 iterations 84
Cbc0038I Pass  15: suminf.    0.90042 (29) obj. 54272 iterations 26
Cbc0038I Pass  16: suminf.    2.52266 (23) obj. 54272 iterations 187
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 54272 iterations 81
Cbc0038I Solution found of 54272
Cbc0038I Cleaned solution of 54272
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I Round again with cutoff of 52084.1
Cbc0038I Pass  18: suminf.   32.23154 (181) obj. 45933.4 iterations 0
Cbc0038I Pass  19: suminf.   23.81471 (178) obj. 49082.5 iterations 171
Cbc0038I Pass  20: suminf.   23.23858 (179) obj. 49127.7 iterations 21
Cbc0038I Pass  21: suminf.   15.67775 (155) obj. 45662.6 iterations 170
Cbc0038I Pass  22: suminf.   15.67775 (155) obj. 45662.6 iterations 0
Cbc0038I Pass  23: suminf.   13.15337 (126) obj. 52084.1 iterations 346
Cbc0038I Pass  24: suminf.   12.04199 (128) obj. 52084.1 iterations 102
Cbc0038I Pass  25: suminf.   12.07127 (129) obj. 52084.1 iterations 13
Cbc0038I Pass  26: suminf.   11.09877 (100) obj. 52084.1 iterations 242
Cbc0038I Pass  27: suminf.   10.64008 (98) obj. 52084.1 iterations 24
Cbc0038I Pass  28: suminf.   10.63774 (99) obj. 52084.1 iterations 9
Cbc0038I Pass  29: suminf.    6.51466 (76) obj. 48128 iterations 139
Cbc0038I Pass  30: suminf.    3.96819 (61) obj. 48128 iterations 22
Cbc0038I Pass  31: suminf.    3.96819 (61) obj. 48128 iterations 3
Cbc0038I Pass  32: suminf.    3.69170 (24) obj. 48128 iterations 182
Cbc0038I Pass  33: suminf.    2.99629 (23) obj. 48128 iterations 25
Cbc0038I Pass  34: suminf.    0.00000 (0) obj. 48128 iterations 46
Cbc0038I Solution found of 48128
Cbc0038I Cleaned solution of 48128
Cbc0038I Before mini branch and bound, 223 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1570 rows 459 columns - 175 fixed gives 758, 178 - still too large
Cbc0038I Full problem 2124 rows 682 columns, reduced to 89 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.82 seconds)
Cbc0038I Round again with cutoff of 44982
Cbc0038I Pass  35: suminf.   31.76892 (179) obj. 44981 iterations 7
Cbc0038I Pass  36: suminf.   22.92141 (189) obj. 44982 iterations 205
Cbc0038I Pass  37: suminf.   22.63984 (190) obj. 44982 iterations 31
Cbc0038I Pass  38: suminf.   18.86248 (167) obj. 44982 iterations 153
Cbc0038I Pass  39: suminf.   19.34509 (162) obj. 44982 iterations 11
Cbc0038I Pass  40: suminf.   14.20317 (146) obj. 44982 iterations 186
Cbc0038I Pass  41: suminf.   14.30029 (137) obj. 44982 iterations 122
Cbc0038I Pass  42: suminf.   17.86994 (146) obj. 44982 iterations 141
Cbc0038I Pass  43: suminf.   15.56003 (143) obj. 44982 iterations 32
Cbc0038I Pass  44: suminf.   15.97675 (143) obj. 44982 iterations 12
Cbc0038I Pass  45: suminf.   13.44363 (129) obj. 44982 iterations 268
Cbc0038I Pass  46: suminf.   12.69144 (120) obj. 44982 iterations 81
Cbc0038I Pass  47: suminf.    6.17992 (82) obj. 44982 iterations 403
Cbc0038I Pass  48: suminf.    5.94475 (87) obj. 44982 iterations 135
Cbc0038I Pass  49: suminf.    3.20143 (54) obj. 44982 iterations 163
Cbc0038I Pass  50: suminf.    3.20143 (54) obj. 44982 iterations 2
Cbc0038I Pass  51: suminf.    0.87981 (32) obj. 44982 iterations 51
Cbc0038I Pass  52: suminf.    3.59302 (32) obj. 44982 iterations 46
Cbc0038I Pass  53: suminf.    3.95899 (34) obj. 44982 iterations 63
Cbc0038I Pass  54: suminf.    2.90023 (30) obj. 44982 iterations 139
Cbc0038I Pass  55: suminf.    3.17484 (25) obj. 44982 iterations 130
Cbc0038I Pass  56: suminf.    2.62468 (24) obj. 44982 iterations 38
Cbc0038I Pass  57: suminf.    0.44305 (18) obj. 44982 iterations 68
Cbc0038I Pass  58: suminf.    0.62499 (16) obj. 44982 iterations 44
Cbc0038I Pass  59: suminf.    0.52560 (17) obj. 44982 iterations 14
Cbc0038I Pass  60: suminf.    2.17236 (18) obj. 44982 iterations 43
Cbc0038I Pass  61: suminf.    0.62199 (19) obj. 44982 iterations 97
Cbc0038I Pass  62: suminf.    2.80291 (15) obj. 44982 iterations 57
Cbc0038I Pass  63: suminf.    0.51615 (15) obj. 44982 iterations 35
Cbc0038I Pass  64: suminf.    0.49454 (16) obj. 44982 iterations 9
Cbc0038I Pass  65: suminf.    0.04604 (1) obj. 44982 iterations 26
Cbc0038I Solution found of 44982
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2125 rows 682 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 43008
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1562 rows 455 columns - 157 fixed gives 774, 202 - ok now
Cbc0038I Full problem 2124 rows 682 columns, reduced to 201 rows 77 columns
Cbc0038I Mini branch and bound did not improve solution (1.26 seconds)
Cbc0038I Round again with cutoff of 39825.4
Cbc0038I Pass  66: suminf.   33.43944 (192) obj. 39825.4 iterations 30
Cbc0038I Pass  67: suminf.   27.73304 (180) obj. 39825.4 iterations 221
Cbc0038I Pass  68: suminf.   25.17839 (190) obj. 39825.4 iterations 164
Cbc0038I Pass  69: suminf.   22.54931 (182) obj. 39825.4 iterations 117
Cbc0038I Pass  70: suminf.   21.54582 (181) obj. 39825.4 iterations 68
Cbc0038I Pass  71: suminf.   19.92584 (148) obj. 39825.4 iterations 148
Cbc0038I Pass  72: suminf.   19.09912 (150) obj. 39825.4 iterations 52
Cbc0038I Pass  73: suminf.   19.57260 (151) obj. 39825.4 iterations 83
Cbc0038I Pass  74: suminf.   15.83891 (118) obj. 39825.4 iterations 152
Cbc0038I Pass  75: suminf.   15.20763 (121) obj. 39825.4 iterations 124
Cbc0038I Pass  76: suminf.    7.53029 (80) obj. 39825.4 iterations 314
Cbc0038I Pass  77: suminf.    5.67282 (74) obj. 39825.4 iterations 61
Cbc0038I Pass  78: suminf.    6.27156 (74) obj. 39825.4 iterations 172
Cbc0038I Pass  79: suminf.    5.88858 (64) obj. 39825.4 iterations 19
Cbc0038I Pass  80: suminf.    5.88858 (64) obj. 39825.4 iterations 3
Cbc0038I Pass  81: suminf.    6.52181 (66) obj. 39825.4 iterations 169
Cbc0038I Pass  82: suminf.    6.63329 (72) obj. 39825.4 iterations 10
Cbc0038I Pass  83: suminf.    2.34514 (39) obj. 39825.4 iterations 62
Cbc0038I Pass  84: suminf.    6.24248 (43) obj. 39825.4 iterations 111
Cbc0038I Pass  85: suminf.    3.57244 (20) obj. 39825.4 iterations 32
Cbc0038I Pass  86: suminf.    2.94058 (17) obj. 39825.4 iterations 76
Cbc0038I Pass  87: suminf.    6.07013 (30) obj. 39825.4 iterations 256
Cbc0038I Pass  88: suminf.    4.54329 (27) obj. 39825.4 iterations 57
Cbc0038I Pass  89: suminf.    5.48738 (29) obj. 39825.4 iterations 159
Cbc0038I Pass  90: suminf.    3.35984 (56) obj. 39825.4 iterations 181
Cbc0038I Pass  91: suminf.    6.91097 (60) obj. 39825.4 iterations 240
Cbc0038I Pass  92: suminf.    5.21211 (35) obj. 39825.4 iterations 77
Cbc0038I Pass  93: suminf.    5.61203 (56) obj. 39825.4 iterations 719
Cbc0038I Pass  94: suminf.    5.20984 (52) obj. 39825.4 iterations 51
Cbc0038I Pass  95: suminf.    8.33165 (49) obj. 39825.4 iterations 174
Cbc0038I Pass  96: suminf.    3.57244 (20) obj. 39825.4 iterations 106
Cbc0038I Pass  97: suminf.    2.94058 (17) obj. 39825.4 iterations 87
Cbc0038I Pass  98: suminf.    6.07013 (30) obj. 39825.4 iterations 460
Cbc0038I Pass  99: suminf.    4.54329 (27) obj. 39825.4 iterations 61
Cbc0038I Pass 100: suminf.    5.48738 (29) obj. 39825.4 iterations 173
Cbc0038I Pass 101: suminf.    3.35984 (56) obj. 39825.4 iterations 162
Cbc0038I Pass 102: suminf.    8.79171 (81) obj. 39825.4 iterations 364
Cbc0038I Pass 103: suminf.    6.26550 (75) obj. 39825.4 iterations 91
Cbc0038I Pass 104: suminf.    9.14556 (58) obj. 39825.4 iterations 332
Cbc0038I Pass 105: suminf.    6.45091 (50) obj. 39825.4 iterations 98
Cbc0038I Pass 106: suminf.    3.35016 (47) obj. 39825.4 iterations 93
Cbc0038I Pass 107: suminf.    7.53671 (45) obj. 39825.4 iterations 122
Cbc0038I Pass 108: suminf.    3.13711 (21) obj. 39825.4 iterations 54
Cbc0038I Pass 109: suminf.    3.13711 (21) obj. 39825.4 iterations 2
Cbc0038I Pass 110: suminf.    5.83039 (22) obj. 39825.4 iterations 108
Cbc0038I Pass 111: suminf.    4.26889 (51) obj. 39825.4 iterations 73
Cbc0038I Pass 112: suminf.    4.20432 (49) obj. 39825.4 iterations 80
Cbc0038I Pass 113: suminf.    3.90654 (48) obj. 39825.4 iterations 67
Cbc0038I Pass 114: suminf.   10.02773 (51) obj. 39825.4 iterations 129
Cbc0038I Pass 115: suminf.    4.33000 (23) obj. 39825.4 iterations 166
Cbc0038I Pass 116: suminf.    4.33000 (23) obj. 39825.4 iterations 14
Cbc0038I Pass 117: suminf.    6.16551 (27) obj. 39825.4 iterations 140
Cbc0038I Pass 118: suminf.    2.62947 (53) obj. 39825.4 iterations 164
Cbc0038I Pass 119: suminf.    5.77183 (52) obj. 39825.4 iterations 92
Cbc0038I Pass 120: suminf.    3.37225 (46) obj. 39825.4 iterations 70
Cbc0038I Pass 121: suminf.    7.30493 (41) obj. 39825.4 iterations 94
Cbc0038I Pass 122: suminf.    3.26556 (42) obj. 39825.4 iterations 77
Cbc0038I Pass 123: suminf.    7.24902 (49) obj. 39825.4 iterations 107
Cbc0038I Pass 124: suminf.    4.31638 (48) obj. 39825.4 iterations 118
Cbc0038I Pass 125: suminf.    8.97521 (107) obj. 39825.4 iterations 377
Cbc0038I Pass 126: suminf.    8.15845 (99) obj. 39825.4 iterations 40
Cbc0038I Pass 127: suminf.    7.95847 (103) obj. 39825.4 iterations 82
Cbc0038I Pass 128: suminf.   10.61692 (82) obj. 39825.4 iterations 330
Cbc0038I Pass 129: suminf.    7.14953 (43) obj. 39825.4 iterations 142
Cbc0038I Pass 130: suminf.   11.18898 (106) obj. 39825.4 iterations 774
Cbc0038I Pass 131: suminf.    8.89192 (113) obj. 39825.4 iterations 55
Cbc0038I Pass 132: suminf.    8.45505 (100) obj. 39825.4 iterations 59
Cbc0038I Pass 133: suminf.    7.57325 (73) obj. 39825.4 iterations 171
Cbc0038I Pass 134: suminf.    5.55106 (77) obj. 39825.4 iterations 161
Cbc0038I Pass 135: suminf.    5.55106 (77) obj. 39825.4 iterations 2
Cbc0038I Pass 136: suminf.    5.10411 (102) obj. 39825.4 iterations 244
Cbc0038I Pass 137: suminf.    4.94411 (79) obj. 39825.4 iterations 120
Cbc0038I Pass 138: suminf.    5.17702 (91) obj. 39825.4 iterations 137
Cbc0038I Pass 139: suminf.   39.61866 (205) obj. 39825.4 iterations 693
Cbc0038I Pass 140: suminf.   21.85562 (152) obj. 39825.4 iterations 455
Cbc0038I Pass 141: suminf.   21.50853 (162) obj. 39825.4 iterations 137
Cbc0038I Pass 142: suminf.   11.33561 (106) obj. 39825.4 iterations 278
Cbc0038I Pass 143: suminf.   11.15161 (112) obj. 39825.4 iterations 12
Cbc0038I Pass 144: suminf.    9.87357 (109) obj. 39825.4 iterations 166
Cbc0038I Pass 145: suminf.    7.55230 (83) obj. 39825.4 iterations 80
Cbc0038I Pass 146: suminf.    8.12681 (84) obj. 39825.4 iterations 168
Cbc0038I Pass 147: suminf.    7.17845 (89) obj. 39825.4 iterations 38
Cbc0038I Pass 148: suminf.    7.45227 (54) obj. 39825.4 iterations 98
Cbc0038I Pass 149: suminf.    6.02130 (64) obj. 39825.4 iterations 117
Cbc0038I Pass 150: suminf.    6.67148 (73) obj. 39825.4 iterations 216
Cbc0038I Pass 151: suminf.    6.72202 (82) obj. 39825.4 iterations 79
Cbc0038I Pass 152: suminf.    6.42686 (58) obj. 39825.4 iterations 92
Cbc0038I Pass 153: suminf.    6.05989 (58) obj. 39825.4 iterations 47
Cbc0038I Pass 154: suminf.    4.69121 (53) obj. 39825.4 iterations 158
Cbc0038I Pass 155: suminf.    3.67728 (42) obj. 39825.4 iterations 107
Cbc0038I Pass 156: suminf.    9.15800 (65) obj. 39825.4 iterations 226
Cbc0038I Pass 157: suminf.    5.96606 (27) obj. 39825.4 iterations 99
Cbc0038I Pass 158: suminf.    4.33831 (28) obj. 39825.4 iterations 75
Cbc0038I Pass 159: suminf.    3.44372 (29) obj. 39825.4 iterations 81
Cbc0038I Pass 160: suminf.    5.48418 (33) obj. 39825.4 iterations 147
Cbc0038I Pass 161: suminf.    3.44618 (27) obj. 39825.4 iterations 82
Cbc0038I Pass 162: suminf.    7.07954 (27) obj. 39825.4 iterations 180
Cbc0038I Pass 163: suminf.    4.54329 (27) obj. 39825.4 iterations 149
Cbc0038I Pass 164: suminf.    5.48738 (29) obj. 39825.4 iterations 130
Cbc0038I Pass 165: suminf.   38.05517 (181) obj. 39825.4 iterations 618
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1793 rows 551 columns - 180 fixed gives 861, 225 - ok now
Cbc0038I Mini branch and bound did not improve solution (2.82 seconds)
Cbc0038I After 2.82 seconds - Feasibility pump exiting with objective of 43008 - took 2.62 seconds
Cbc0012I Integer solution of 43008 found by feasibility pump after 0 iterations and 0 nodes (2.82 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1418 rows 394 columns - 152 fixed gives 630, 150 - ok now
Cbc0031I 71 added rows had average density of 39.084507
Cbc0013I At root node, 71 cuts changed objective from 32401.769 to 36137.998 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 80 row cuts average 4.3 elements, 7 column cuts (33 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 410 row cuts average 309.9 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 649 row cuts average 64.1 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 43008 best solution, best possible 36138 (9.77 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1552 rows 434 columns - 164 fixed gives 697, 156 - ok now
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1443 rows 401 columns - 146 fixed gives 646, 148 - ok now
Cbc0010I After 100 nodes, 6 on tree, 43008 best solution, best possible 36150.488 (26.14 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1407 rows 388 columns - 147 fixed gives 631, 140 - ok now
Cbc0010I After 200 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (38.34 seconds)
Cbc0010I After 300 nodes, 6 on tree, 43008 best solution, best possible 36150.488 (46.47 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1398 rows 384 columns - 145 fixed gives 631, 140 - ok now
Cbc0010I After 400 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (54.60 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1398 rows 382 columns - 148 fixed gives 612, 139 - ok now
Cbc0010I After 500 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (64.92 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1388 rows 379 columns - 146 fixed gives 632, 140 - ok now
Cbc0010I After 600 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (75.83 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1378 rows 375 columns - 145 fixed gives 633, 140 - ok now
Cbc0010I After 700 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (86.43 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1364 rows 371 columns - 142 fixed gives 624, 136 - ok now
Cbc0010I After 800 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (97.63 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1388 rows 379 columns - 147 fixed gives 631, 139 - ok now
Cbc0010I After 900 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (111.41 seconds)
Cbc0010I After 1000 nodes, 5 on tree, 43008 best solution, best possible 36150.488 (121.70 seconds)
Cbc0010I After 1100 nodes, 11 on tree, 43008 best solution, best possible 36150.488 (131.71 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1359 rows 370 columns - 142 fixed gives 621, 137 - ok now
Cbc0010I After 1200 nodes, 15 on tree, 43008 best solution, best possible 36150.488 (139.94 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 43008 best solution, best possible 36150.488 (147.71 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 43008 best solution, best possible 36150.488 (155.48 seconds)
Cbc0010I After 1500 nodes, 26 on tree, 43008 best solution, best possible 36150.488 (163.75 seconds)
Cbc0010I After 1600 nodes, 33 on tree, 43008 best solution, best possible 36150.488 (174.31 seconds)
Cbc0010I After 1700 nodes, 35 on tree, 43008 best solution, best possible 36150.488 (184.50 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1368 rows 371 columns - 146 fixed gives 621, 136 - ok now
Cbc0010I After 1800 nodes, 41 on tree, 43008 best solution, best possible 36150.488 (195.36 seconds)
Cbc0010I After 1900 nodes, 44 on tree, 43008 best solution, best possible 36150.488 (207.16 seconds)
Cbc0010I After 2000 nodes, 48 on tree, 43008 best solution, best possible 36150.488 (219.57 seconds)
Cbc0010I After 2100 nodes, 49 on tree, 43008 best solution, best possible 36150.488 (234.34 seconds)
Cbc0010I After 2200 nodes, 53 on tree, 43008 best solution, best possible 36150.488 (248.05 seconds)
Cbc0010I After 2300 nodes, 57 on tree, 43008 best solution, best possible 36150.488 (261.02 seconds)
Cbc0010I After 2400 nodes, 58 on tree, 43008 best solution, best possible 36150.488 (273.41 seconds)
Cbc0010I After 2500 nodes, 63 on tree, 43008 best solution, best possible 36150.488 (284.53 seconds)
Cbc0010I After 2600 nodes, 67 on tree, 43008 best solution, best possible 36150.488 (295.51 seconds)
Cbc0010I After 2700 nodes, 68 on tree, 43008 best solution, best possible 36150.488 (306.37 seconds)
Cbc0010I After 2800 nodes, 73 on tree, 43008 best solution, best possible 36150.488 (319.55 seconds)
Cbc0010I After 2900 nodes, 76 on tree, 43008 best solution, best possible 36150.488 (333.17 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1339 rows 362 columns - 142 fixed gives 597, 133 - ok now
Cbc0010I After 3000 nodes, 75 on tree, 43008 best solution, best possible 36150.488 (346.80 seconds)
Cbc0010I After 3100 nodes, 77 on tree, 43008 best solution, best possible 36150.488 (360.76 seconds)
Cbc0010I After 3200 nodes, 77 on tree, 43008 best solution, best possible 36150.488 (376.63 seconds)
Cbc0010I After 3300 nodes, 80 on tree, 43008 best solution, best possible 36150.488 (393.90 seconds)
Cbc0010I After 3400 nodes, 80 on tree, 43008 best solution, best possible 36150.488 (408.59 seconds)
Cbc0010I After 3500 nodes, 81 on tree, 43008 best solution, best possible 36150.488 (424.96 seconds)
Cbc0010I After 3600 nodes, 84 on tree, 43008 best solution, best possible 36150.488 (440.95 seconds)
Cbc0010I After 3700 nodes, 85 on tree, 43008 best solution, best possible 36150.488 (456.65 seconds)
Cbc0010I After 3800 nodes, 88 on tree, 43008 best solution, best possible 36150.488 (473.47 seconds)
Cbc0010I After 3900 nodes, 91 on tree, 43008 best solution, best possible 36150.488 (489.99 seconds)
Cbc0010I After 4000 nodes, 89 on tree, 43008 best solution, best possible 36150.488 (506.06 seconds)
Cbc0010I After 4100 nodes, 91 on tree, 43008 best solution, best possible 36150.488 (521.90 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1339 rows 362 columns - 142 fixed gives 597, 133 - ok now
Cbc0010I After 4200 nodes, 91 on tree, 43008 best solution, best possible 36150.488 (538.98 seconds)
Cbc0010I After 4300 nodes, 95 on tree, 43008 best solution, best possible 36150.488 (554.35 seconds)
Cbc0010I After 4400 nodes, 103 on tree, 43008 best solution, best possible 36150.488 (566.71 seconds)
Cbc0010I After 4500 nodes, 103 on tree, 43008 best solution, best possible 36150.488 (579.58 seconds)
Cbc0010I After 4600 nodes, 104 on tree, 43008 best solution, best possible 36150.488 (592.09 seconds)
Cbc0010I After 4700 nodes, 106 on tree, 43008 best solution, best possible 36150.488 (603.01 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1344 rows 363 columns - 142 fixed gives 599, 134 - ok now
Cbc0010I After 4800 nodes, 109 on tree, 43008 best solution, best possible 36150.488 (614.43 seconds)
Cbc0010I After 4900 nodes, 114 on tree, 43008 best solution, best possible 36150.488 (629.11 seconds)
Cbc0010I After 5000 nodes, 124 on tree, 43008 best solution, best possible 36150.488 (642.23 seconds)
Cbc0010I After 5100 nodes, 136 on tree, 43008 best solution, best possible 36150.488 (653.32 seconds)
Cbc0010I After 5200 nodes, 137 on tree, 43008 best solution, best possible 36150.488 (666.89 seconds)
Cbc0010I After 5300 nodes, 140 on tree, 43008 best solution, best possible 36150.488 (681.05 seconds)
Cbc0010I After 5400 nodes, 142 on tree, 43008 best solution, best possible 36150.488 (694.14 seconds)
Cbc0010I After 5500 nodes, 144 on tree, 43008 best solution, best possible 36150.488 (709.93 seconds)
Cbc0010I After 5600 nodes, 148 on tree, 43008 best solution, best possible 36150.488 (726.57 seconds)
Cbc0010I After 5700 nodes, 152 on tree, 43008 best solution, best possible 36150.488 (737.87 seconds)
Cbc0010I After 5800 nodes, 148 on tree, 43008 best solution, best possible 36150.488 (748.35 seconds)
Cbc0010I After 5900 nodes, 151 on tree, 43008 best solution, best possible 36150.488 (760.02 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1346 rows 375 columns - 144 fixed gives 540, 116 - ok now
Cbc0010I After 6000 nodes, 149 on tree, 43008 best solution, best possible 36150.488 (771.69 seconds)
Cbc0010I After 6100 nodes, 146 on tree, 43008 best solution, best possible 36150.488 (784.81 seconds)
Cbc0010I After 6200 nodes, 153 on tree, 43008 best solution, best possible 36150.488 (797.03 seconds)
Cbc0010I After 6300 nodes, 154 on tree, 43008 best solution, best possible 36150.488 (808.85 seconds)
Cbc0010I After 6400 nodes, 156 on tree, 43008 best solution, best possible 36150.488 (821.56 seconds)
Cbc0010I After 6500 nodes, 154 on tree, 43008 best solution, best possible 36150.488 (834.81 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1344 rows 362 columns - 143 fixed gives 591, 132 - ok now
Cbc0010I After 6600 nodes, 151 on tree, 43008 best solution, best possible 36150.488 (847.53 seconds)
Cbc0010I After 6700 nodes, 155 on tree, 43008 best solution, best possible 36150.488 (859.56 seconds)
Cbc0010I After 6800 nodes, 161 on tree, 43008 best solution, best possible 36150.488 (871.03 seconds)
Cbc0010I After 6900 nodes, 162 on tree, 43008 best solution, best possible 36150.488 (881.09 seconds)
Cbc0010I After 7000 nodes, 156 on tree, 43008 best solution, best possible 36150.488 (892.05 seconds)
Cbc0010I After 7100 nodes, 160 on tree, 43008 best solution, best possible 36150.488 (903.38 seconds)
Cbc0010I After 7200 nodes, 158 on tree, 43008 best solution, best possible 36150.488 (913.79 seconds)
Cbc0010I After 7300 nodes, 165 on tree, 43008 best solution, best possible 36150.488 (925.47 seconds)
Cbc0010I After 7400 nodes, 158 on tree, 43008 best solution, best possible 36150.488 (937.48 seconds)
Cbc0010I After 7500 nodes, 163 on tree, 43008 best solution, best possible 36150.488 (953.61 seconds)
Cbc0010I After 7600 nodes, 161 on tree, 43008 best solution, best possible 36150.488 (968.61 seconds)
Cbc0010I After 7700 nodes, 167 on tree, 43008 best solution, best possible 36150.488 (978.43 seconds)
Cbc0010I After 7800 nodes, 164 on tree, 43008 best solution, best possible 36150.488 (990.06 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1348 rows 363 columns - 144 fixed gives 591, 132 - ok now
Cbc0010I After 7900 nodes, 171 on tree, 43008 best solution, best possible 36150.488 (1001.41 seconds)
Cbc0010I After 8000 nodes, 177 on tree, 43008 best solution, best possible 36150.488 (1014.46 seconds)
Cbc0010I After 8100 nodes, 176 on tree, 43008 best solution, best possible 36150.488 (1028.43 seconds)
Cbc0010I After 8200 nodes, 174 on tree, 43008 best solution, best possible 36150.488 (1041.38 seconds)
Cbc0010I After 8300 nodes, 175 on tree, 43008 best solution, best possible 36150.488 (1052.95 seconds)
Cbc0010I After 8400 nodes, 178 on tree, 43008 best solution, best possible 36150.488 (1063.27 seconds)
Cbc0010I After 8500 nodes, 170 on tree, 43008 best solution, best possible 36150.488 (1073.58 seconds)
Cbc0010I After 8600 nodes, 172 on tree, 43008 best solution, best possible 36150.488 (1083.60 seconds)
Cbc0010I After 8700 nodes, 174 on tree, 43008 best solution, best possible 36150.488 (1092.93 seconds)
Cbc0010I After 8800 nodes, 176 on tree, 43008 best solution, best possible 36150.488 (1104.76 seconds)
Cbc0010I After 8900 nodes, 177 on tree, 43008 best solution, best possible 36150.488 (1115.36 seconds)
Cbc0010I After 9000 nodes, 178 on tree, 43008 best solution, best possible 36150.488 (1126.29 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1349 rows 363 columns - 143 fixed gives 595, 133 - ok now
Cbc0010I After 9100 nodes, 179 on tree, 43008 best solution, best possible 36150.488 (1139.75 seconds)
Cbc0010I After 9200 nodes, 178 on tree, 43008 best solution, best possible 36150.488 (1149.46 seconds)
Cbc0010I After 9300 nodes, 179 on tree, 43008 best solution, best possible 36150.488 (1161.25 seconds)
Cbc0010I After 9400 nodes, 180 on tree, 43008 best solution, best possible 36150.488 (1172.35 seconds)
Cbc0010I After 9500 nodes, 183 on tree, 43008 best solution, best possible 36150.488 (1184.53 seconds)
Cbc0010I After 9600 nodes, 180 on tree, 43008 best solution, best possible 36150.488 (1196.28 seconds)
Cbc0010I After 9700 nodes, 183 on tree, 43008 best solution, best possible 36150.488 (1206.56 seconds)
Cbc0010I After 9800 nodes, 187 on tree, 43008 best solution, best possible 36150.488 (1217.45 seconds)
Cbc0010I After 9900 nodes, 187 on tree, 43008 best solution, best possible 36150.488 (1226.16 seconds)
Cbc0010I After 10000 nodes, 191 on tree, 43008 best solution, best possible 36150.488 (1236.95 seconds)
Cbc0010I After 10100 nodes, 190 on tree, 43008 best solution, best possible 36150.488 (1248.26 seconds)
Cbc0010I After 10200 nodes, 192 on tree, 43008 best solution, best possible 36150.488 (1258.28 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1353 rows 381 columns - 143 fixed gives 565, 130 - ok now
Cbc0010I After 10300 nodes, 193 on tree, 43008 best solution, best possible 36150.488 (1269.87 seconds)
Cbc0010I After 10400 nodes, 188 on tree, 43008 best solution, best possible 36150.488 (1284.20 seconds)
Cbc0010I After 10500 nodes, 191 on tree, 43008 best solution, best possible 36150.488 (1295.67 seconds)
Cbc0010I After 10600 nodes, 192 on tree, 43008 best solution, best possible 36150.488 (1306.30 seconds)
Cbc0010I After 10700 nodes, 193 on tree, 43008 best solution, best possible 36150.488 (1316.34 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1327 rows 367 columns - 147 fixed gives 284, 94 - ok now
Cbc0010I After 10800 nodes, 195 on tree, 43008 best solution, best possible 36150.488 (1327.62 seconds)
Cbc0010I After 10900 nodes, 199 on tree, 43008 best solution, best possible 36150.488 (1338.07 seconds)
Cbc0010I After 11000 nodes, 195 on tree, 43008 best solution, best possible 36150.488 (1347.21 seconds)
Cbc0010I After 11100 nodes, 109 on tree, 43008 best solution, best possible 38490 (1366.52 seconds)
Cbc0010I After 11200 nodes, 73 on tree, 43008 best solution, best possible 38782 (1381.70 seconds)
Cbc0010I After 11300 nodes, 50 on tree, 43008 best solution, best possible 38952 (1395.63 seconds)
Cbc0010I After 11400 nodes, 40 on tree, 43008 best solution, best possible 39025 (1405.78 seconds)
Cbc0010I After 11500 nodes, 27 on tree, 43008 best solution, best possible 39095 (1416.31 seconds)
Cbc0010I After 11600 nodes, 17 on tree, 43008 best solution, best possible 39170 (1425.32 seconds)
Cbc0010I After 11700 nodes, 6 on tree, 43008 best solution, best possible 39261 (1435.83 seconds)
Cbc0010I After 11800 nodes, 3 on tree, 43008 best solution, best possible 39307 (1445.47 seconds)
Cbc0010I After 11900 nodes, 2 on tree, 43008 best solution, best possible 39316 (1454.17 seconds)
Cbc0010I After 12000 nodes, 3 on tree, 43008 best solution, best possible 39326 (1463.84 seconds)
Cbc0010I After 12100 nodes, 1 on tree, 43008 best solution, best possible 39337 (1473.70 seconds)
Cbc0010I After 12200 nodes, 1 on tree, 43008 best solution, best possible 39346 (1483.13 seconds)
Cbc0010I After 12300 nodes, 1 on tree, 43008 best solution, best possible 39355 (1492.06 seconds)
Cbc0010I After 12400 nodes, 4 on tree, 43008 best solution, best possible 39364 (1501.84 seconds)
Cbc0010I After 12500 nodes, 2 on tree, 43008 best solution, best possible 39375 (1511.76 seconds)
Cbc0010I After 12600 nodes, 2 on tree, 43008 best solution, best possible 39385 (1521.21 seconds)
Cbc0010I After 12700 nodes, 1 on tree, 43008 best solution, best possible 39395 (1530.79 seconds)
Cbc0010I After 12800 nodes, 3 on tree, 43008 best solution, best possible 39404 (1540.08 seconds)
Cbc0010I After 12900 nodes, 3 on tree, 43008 best solution, best possible 39413 (1548.42 seconds)
Cbc0010I After 13000 nodes, 2 on tree, 43008 best solution, best possible 39423 (1558.89 seconds)
Cbc0010I After 13100 nodes, 1 on tree, 43008 best solution, best possible 39430 (1569.17 seconds)
Cbc0010I After 13200 nodes, 1 on tree, 43008 best solution, best possible 39435 (1579.05 seconds)
Cbc0010I After 13300 nodes, 3 on tree, 43008 best solution, best possible 39441 (1589.90 seconds)
Cbc0010I After 13400 nodes, 2 on tree, 43008 best solution, best possible 39445 (1599.57 seconds)
Cbc0010I After 13500 nodes, 2 on tree, 43008 best solution, best possible 39450 (1611.43 seconds)
Cbc0010I After 13600 nodes, 7 on tree, 43008 best solution, best possible 39455 (1621.66 seconds)
Cbc0010I After 13700 nodes, 8 on tree, 43008 best solution, best possible 39461 (1629.85 seconds)
Cbc0010I After 13800 nodes, 9 on tree, 43008 best solution, best possible 39467 (1639.10 seconds)
Cbc0010I After 13900 nodes, 3 on tree, 43008 best solution, best possible 39472 (1649.41 seconds)
Cbc0010I After 14000 nodes, 12 on tree, 43008 best solution, best possible 39476 (1659.42 seconds)
Cbc0010I After 14100 nodes, 2 on tree, 43008 best solution, best possible 39480 (1665.84 seconds)
Cbc0010I After 14200 nodes, 4 on tree, 43008 best solution, best possible 39485 (1678.75 seconds)
Cbc0010I After 14300 nodes, 1 on tree, 43008 best solution, best possible 39491 (1689.20 seconds)
Cbc0010I After 14400 nodes, 2 on tree, 43008 best solution, best possible 39495 (1698.16 seconds)
Cbc0010I After 14500 nodes, 4 on tree, 43008 best solution, best possible 39501 (1708.95 seconds)
Cbc0010I After 14600 nodes, 3 on tree, 43008 best solution, best possible 39505 (1719.23 seconds)
Cbc0010I After 14700 nodes, 1 on tree, 43008 best solution, best possible 39511 (1727.20 seconds)
Cbc0010I After 14800 nodes, 9 on tree, 43008 best solution, best possible 39515 (1734.94 seconds)
Cbc0010I After 14900 nodes, 2 on tree, 43008 best solution, best possible 39520 (1744.73 seconds)
Cbc0010I After 15000 nodes, 2 on tree, 43008 best solution, best possible 39524 (1753.07 seconds)
Cbc0010I After 15100 nodes, 2 on tree, 43008 best solution, best possible 39529 (1764.83 seconds)
Cbc0010I After 15200 nodes, 4 on tree, 43008 best solution, best possible 39535 (1773.56 seconds)
Cbc0010I After 15300 nodes, 1 on tree, 43008 best solution, best possible 39539 (1785.83 seconds)
Cbc0010I After 15400 nodes, 2 on tree, 43008 best solution, best possible 39543 (1797.22 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 43008 (best possible 39543), took 10468768 iterations and 15422 nodes (1800.01 seconds)
Cbc0032I Strong branching done 25480 times (1909776 iterations), fathomed 638 nodes and fixed 2663 variables
Cbc0035I Maximum depth 2770, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32401.8 to 36138
Probing was tried 11509 times and created 465359 cuts of which 26 were active after adding rounds of cuts (24.091 seconds)
Gomory was tried 9287 times and created 10147 cuts of which 0 were active after adding rounds of cuts (21.694 seconds)
Knapsack was tried 17 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 9287 times and created 100889 cuts of which 0 were active after adding rounds of cuts (9.408 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
ImplicationCuts was tried 25 times and created 67 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

Objective value:                43008.00000000
Lower bound:                    39543.000
Gap:                            0.09
Enumerated nodes:               15422
Total iterations:               10468768
Time (CPU seconds):             1800.08
Time (Wallclock seconds):       1805.82

Total time (CPU seconds):       1800.10   (Wallclock seconds):       1805.83

