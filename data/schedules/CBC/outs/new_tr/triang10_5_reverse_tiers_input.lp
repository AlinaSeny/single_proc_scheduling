Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang10_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 322.496 - 2.86 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1598 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 534 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 82 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 6704 rows, 2298 columns (2298 integer (2243 of which binary)) and 22172 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 789 integers unsatisfied sum - 183.922
Cbc0038I Pass   1: (5.96 seconds) suminf.   60.60200 (563) obj. 417.019 iterations 3015
Cbc0038I Pass   2: (6.07 seconds) suminf.   57.65575 (567) obj. 439.997 iterations 265
Cbc0038I Pass   3: (6.09 seconds) suminf.   57.23197 (566) obj. 439.955 iterations 11
Cbc0038I Pass   4: (6.21 seconds) suminf.   49.50158 (537) obj. 443.755 iterations 281
Cbc0038I Pass   5: (6.23 seconds) suminf.   48.65419 (539) obj. 443.928 iterations 30
Cbc0038I Pass   6: (6.34 seconds) suminf.   41.53632 (510) obj. 441.407 iterations 283
Cbc0038I Pass   7: (6.35 seconds) suminf.   40.74123 (510) obj. 440.497 iterations 17
Cbc0038I Pass   8: (6.47 seconds) suminf.   35.89484 (493) obj. 474.296 iterations 277
Cbc0038I Pass   9: (6.49 seconds) suminf.   35.95680 (499) obj. 474.348 iterations 41
Cbc0038I Pass  10: (6.57 seconds) suminf.   33.33176 (463) obj. 474.883 iterations 193
Cbc0038I Pass  11: (6.58 seconds) suminf.   32.91157 (463) obj. 474.968 iterations 25
Cbc0038I Pass  12: (6.61 seconds) suminf.   32.94528 (445) obj. 474.848 iterations 74
Cbc0038I Pass  13: (6.64 seconds) suminf.   31.44958 (432) obj. 475.315 iterations 93
Cbc0038I Pass  14: (6.80 seconds) suminf.   29.95665 (422) obj. 475.645 iterations 438
Cbc0038I Pass  15: (6.82 seconds) suminf.   29.72481 (434) obj. 475.69 iterations 44
Cbc0038I Pass  16: (6.90 seconds) suminf.   26.70845 (405) obj. 492.124 iterations 187
Cbc0038I Pass  17: (6.95 seconds) suminf.   25.94206 (404) obj. 491.561 iterations 133
Cbc0038I Pass  18: (7.04 seconds) suminf.   24.70929 (372) obj. 491.435 iterations 257
Cbc0038I Pass  19: (7.07 seconds) suminf.   23.98367 (376) obj. 491.396 iterations 78
Cbc0038I Pass  20: (7.12 seconds) suminf.   21.29940 (314) obj. 491.539 iterations 147
Cbc0038I Pass  21: (7.15 seconds) suminf.   20.28131 (330) obj. 490.092 iterations 92
Cbc0038I Pass  22: (7.16 seconds) suminf.   20.34773 (334) obj. 490.106 iterations 7
Cbc0038I Pass  23: (7.26 seconds) suminf.   20.96625 (334) obj. 490.461 iterations 259
Cbc0038I Pass  24: (7.27 seconds) suminf.   20.85832 (335) obj. 490.485 iterations 21
Cbc0038I Pass  25: (7.30 seconds) suminf.   19.49693 (326) obj. 490.514 iterations 75
Cbc0038I Pass  26: (7.32 seconds) suminf.   19.43697 (327) obj. 490.64 iterations 69
Cbc0038I Pass  27: (7.39 seconds) suminf.   20.07098 (325) obj. 490.785 iterations 211
Cbc0038I Pass  28: (7.41 seconds) suminf.   19.60229 (327) obj. 490.819 iterations 17
Cbc0038I Pass  29: (7.49 seconds) suminf.   18.72005 (302) obj. 490.856 iterations 242
Cbc0038I Pass  30: (7.52 seconds) suminf.   15.70242 (286) obj. 490.608 iterations 80
Cbc0038I Pass  31: (7.64 seconds) suminf.   15.26971 (273) obj. 491.236 iterations 414
Cbc0038I Pass  32: (7.65 seconds) suminf.   14.97425 (275) obj. 491.219 iterations 31
Cbc0038I Pass  33: (7.69 seconds) suminf.   16.15965 (276) obj. 491.504 iterations 138
Cbc0038I Pass  34: (7.70 seconds) suminf.   12.71578 (271) obj. 491.152 iterations 41
Cbc0038I Pass  35: (7.86 seconds) suminf.   13.71312 (266) obj. 529.57 iterations 618
Cbc0038I Pass  36: (7.90 seconds) suminf.   12.46852 (269) obj. 529.669 iterations 118
Cbc0038I Pass  37: (7.98 seconds) suminf.   14.20092 (253) obj. 492.702 iterations 264
Cbc0038I Pass  38: (8.01 seconds) suminf.   11.31807 (253) obj. 492.804 iterations 82
Cbc0038I Pass  39: (8.03 seconds) suminf.    9.73044 (247) obj. 492.676 iterations 54
Cbc0038I Pass  40: (8.07 seconds) suminf.   11.03400 (238) obj. 492.945 iterations 170
Cbc0038I Pass  41: (8.10 seconds) suminf.    7.82201 (232) obj. 493.031 iterations 133
Cbc0038I Pass  42: (8.14 seconds) suminf.    7.52648 (201) obj. 492.858 iterations 143
Cbc0038I Pass  43: (8.16 seconds) suminf.    7.50243 (207) obj. 492.792 iterations 65
Cbc0038I Pass  44: (8.20 seconds) suminf.    5.74361 (189) obj. 489.87 iterations 157
Cbc0038I Pass  45: (8.22 seconds) suminf.    5.59579 (191) obj. 489.852 iterations 78
Cbc0038I Pass  46: (8.27 seconds) suminf.   11.46370 (205) obj. 487.43 iterations 165
Cbc0038I Pass  47: (8.28 seconds) suminf.   11.35025 (205) obj. 487.34 iterations 16
Cbc0038I Pass  48: (8.31 seconds) suminf.    8.74817 (203) obj. 487.517 iterations 103
Cbc0038I Pass  49: (8.33 seconds) suminf.    8.28004 (202) obj. 487.608 iterations 53
Cbc0038I Pass  50: (8.40 seconds) suminf.   10.55083 (186) obj. 487.467 iterations 243
Cbc0038I Pass  51: (8.41 seconds) suminf.   10.46864 (185) obj. 487.461 iterations 14
Cbc0038I Pass  52: (8.45 seconds) suminf.   11.43447 (209) obj. 488.479 iterations 165
Cbc0038I Pass  53: (8.46 seconds) suminf.   11.29376 (213) obj. 488.468 iterations 5
Cbc0038I Pass  54: (8.54 seconds) suminf.    6.70322 (168) obj. 520.086 iterations 255
Cbc0038I Pass  55: (8.56 seconds) suminf.    6.65152 (176) obj. 521.56 iterations 68
Cbc0038I Pass  56: (8.62 seconds) suminf.    9.05639 (183) obj. 506.311 iterations 225
Cbc0038I Pass  57: (8.63 seconds) suminf.    9.03034 (183) obj. 506.31 iterations 7
Cbc0038I Pass  58: (8.66 seconds) suminf.    7.35225 (163) obj. 506.311 iterations 103
Cbc0038I Pass  59: (8.67 seconds) suminf.    7.01252 (161) obj. 506.32 iterations 29
Cbc0038I Pass  60: (8.71 seconds) suminf.    8.96371 (171) obj. 506.029 iterations 160
Cbc0038I Pass  61: (8.72 seconds) suminf.    8.96371 (171) obj. 506.029 iterations 3
Cbc0038I Pass  62: (8.74 seconds) suminf.    8.02288 (174) obj. 505.178 iterations 79
Cbc0038I Pass  63: (8.75 seconds) suminf.    6.82320 (172) obj. 505.18 iterations 17
Cbc0038I Pass  64: (8.78 seconds) suminf.    9.49571 (189) obj. 505.441 iterations 86
Cbc0038I Pass  65: (8.80 seconds) suminf.    7.62854 (173) obj. 505.723 iterations 87
Cbc0038I Pass  66: (8.83 seconds) suminf.    3.77649 (166) obj. 505.137 iterations 123
Cbc0038I Pass  67: (8.84 seconds) suminf.    3.77649 (166) obj. 505.137 iterations 6
Cbc0038I Pass  68: (8.87 seconds) suminf.    4.93955 (143) obj. 505.696 iterations 96
Cbc0038I Pass  69: (8.88 seconds) suminf.    4.93955 (143) obj. 505.696 iterations 1
Cbc0038I Pass  70: (8.92 seconds) suminf.    3.78675 (101) obj. 505.124 iterations 189
Cbc0038I Pass  71: (8.93 seconds) suminf.    3.26348 (116) obj. 505.124 iterations 41
Cbc0038I Pass  72: (8.96 seconds) suminf.    2.67383 (84) obj. 505.689 iterations 107
Cbc0038I Pass  73: (8.99 seconds) suminf.    4.47339 (70) obj. 503.589 iterations 154
Cbc0038I Pass  74: (9.00 seconds) suminf.    2.73703 (64) obj. 503.597 iterations 21
Cbc0038I Pass  75: (9.22 seconds) suminf.    1.23732 (37) obj. 503.955 iterations 935
Cbc0038I Pass  76: (9.23 seconds) suminf.    1.23732 (37) obj. 503.955 iterations 3
Cbc0038I Pass  77: (9.25 seconds) suminf.    2.69964 (47) obj. 503.521 iterations 90
Cbc0038I Pass  78: (9.26 seconds) suminf.    1.42602 (39) obj. 503.53 iterations 11
Cbc0038I Pass  79: (9.35 seconds) suminf.    1.22204 (40) obj. 478.819 iterations 333
Cbc0038I Pass  80: (9.36 seconds) suminf.    1.17017 (38) obj. 478.819 iterations 3
Cbc0038I Pass  81: (9.39 seconds) suminf.    2.47951 (43) obj. 473.088 iterations 122
Cbc0038I Pass  82: (9.40 seconds) suminf.    1.06384 (40) obj. 476.892 iterations 63
Cbc0038I Pass  83: (9.52 seconds) suminf.    1.29793 (33) obj. 458.725 iterations 468
Cbc0038I Pass  84: (9.53 seconds) suminf.    1.58687 (27) obj. 448 iterations 67
Cbc0038I Pass  85: (9.54 seconds) suminf.    0.56232 (24) obj. 448 iterations 4
Cbc0038I Pass  86: (9.66 seconds) suminf.    0.45442 (29) obj. 448 iterations 544
Cbc0038I Pass  87: (9.68 seconds) suminf.    0.42524 (22) obj. 448 iterations 21
Cbc0038I Pass  88: (9.69 seconds) suminf.    0.38611 (28) obj. 448 iterations 50
Cbc0038I Pass  89: (9.70 seconds) suminf.    0.38611 (28) obj. 448 iterations 12
Cbc0038I Pass  90: (9.72 seconds) suminf.    0.71508 (27) obj. 448 iterations 49
Cbc0038I Pass  91: (10.10 seconds) suminf.    0.55969 (51) obj. 448 iterations 1410
Cbc0038I Pass  92: (10.13 seconds) suminf.    0.51041 (20) obj. 448 iterations 97
Cbc0038I Pass  93: (10.14 seconds) suminf.    0.51041 (20) obj. 448 iterations 4
Cbc0038I Pass  94: (10.24 seconds) suminf.    0.31699 (46) obj. 448 iterations 488
Cbc0038I Pass  95: (10.35 seconds) suminf.    1.46709 (67) obj. 448 iterations 458
Cbc0038I Pass  96: (10.37 seconds) suminf.    1.55686 (66) obj. 448 iterations 26
Cbc0038I Pass  97: (10.42 seconds) suminf.    3.05469 (81) obj. 448 iterations 281
Cbc0038I Pass  98: (10.45 seconds) suminf.    2.56034 (80) obj. 448 iterations 149
Cbc0038I Pass  99: (10.61 seconds) suminf.    0.76812 (40) obj. 448 iterations 617
Cbc0038I Pass 100: (10.94 seconds) suminf.   69.51929 (455) obj. 526.477 iterations 1428
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 944 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6704 rows 2298 columns, reduced to 2712 rows 876 columns
Cbc0038I Mini branch and bound did not improve solution (15.97 seconds)
Cbc0038I After 15.97 seconds - Feasibility pump exiting - took 11.06 seconds
Cbc0031I 25 added rows had average density of 8.04
Cbc0013I At root node, 25 cuts changed objective from 322.49573 to 332 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 330 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 40.3 elements, 0 column cuts (0 active)  in 0.623 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 46 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.424 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 332 (20.11 seconds)
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 332 (161.64 seconds)
Cbc0010I After 200 nodes, 37 on tree, 1e+50 best solution, best possible 332 (300.91 seconds)
Cbc0010I After 300 nodes, 43 on tree, 1e+50 best solution, best possible 332 (424.98 seconds)
Cbc0010I After 400 nodes, 76 on tree, 1e+50 best solution, best possible 332 (547.68 seconds)
Cbc0010I After 500 nodes, 86 on tree, 1e+50 best solution, best possible 332 (655.61 seconds)
Cbc0010I After 600 nodes, 96 on tree, 1e+50 best solution, best possible 332 (754.18 seconds)
Cbc0010I After 700 nodes, 109 on tree, 1e+50 best solution, best possible 332 (848.92 seconds)
Cbc0010I After 800 nodes, 114 on tree, 1e+50 best solution, best possible 332 (959.30 seconds)
Cbc0010I After 900 nodes, 119 on tree, 1e+50 best solution, best possible 332 (1072.36 seconds)
Cbc0010I After 1000 nodes, 125 on tree, 1e+50 best solution, best possible 332 (1221.14 seconds)
Cbc0010I After 1100 nodes, 149 on tree, 1e+50 best solution, best possible 332 (1358.84 seconds)
Cbc0010I After 1200 nodes, 146 on tree, 1e+50 best solution, best possible 332 (1500.22 seconds)
Cbc0010I After 1300 nodes, 155 on tree, 1e+50 best solution, best possible 332 (1626.30 seconds)
Cbc0010I After 1400 nodes, 152 on tree, 1e+50 best solution, best possible 332 (1731.43 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 332), took 1887910 iterations and 1457 nodes (1799.03 seconds)
Cbc0032I Strong branching done 16022 times (1278238 iterations), fathomed 103 nodes and fixed 1127 variables
Cbc0035I Maximum depth 43, 0 variables fixed on reduced cost
Cuts at root node changed objective from 322.496 to 332
Probing was tried 388 times and created 72745 cuts of which 0 were active after adding rounds of cuts (3.291 seconds)
Gomory was tried 305 times and created 632 cuts of which 0 were active after adding rounds of cuts (3.270 seconds)
Knapsack was tried 305 times and created 1923 cuts of which 0 were active after adding rounds of cuts (0.799 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 305 times and created 9626 cuts of which 0 were active after adding rounds of cuts (1.373 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    332.000
Enumerated nodes:               1457
Total iterations:               1887910
Time (CPU seconds):             1799.03
Time (Wallclock seconds):       1805.38

Total time (CPU seconds):       1799.07   (Wallclock seconds):       1805.44

