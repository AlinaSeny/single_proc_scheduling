Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_1_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang9_1_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 313.276 - 1.60 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1049 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 413 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 98 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4308 rows, 1490 columns (1490 integer (1445 of which binary)) and 14388 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 622 integers unsatisfied sum - 156.629
Cbc0038I Pass   1: (5.66 seconds) suminf.   58.65840 (448) obj. 420.817 iterations 1806
Cbc0038I Pass   2: (5.77 seconds) suminf.   51.82969 (428) obj. 439.827 iterations 535
Cbc0038I Pass   3: (5.77 seconds) suminf.   51.82969 (428) obj. 439.827 iterations 0
Cbc0038I Pass   4: (5.82 seconds) suminf.   47.49497 (406) obj. 462.152 iterations 208
Cbc0038I Pass   5: (5.84 seconds) suminf.   47.19860 (407) obj. 468.047 iterations 61
Cbc0038I Pass   6: (5.85 seconds) suminf.   46.94989 (405) obj. 464.138 iterations 26
Cbc0038I Pass   7: (5.87 seconds) suminf.   46.98525 (407) obj. 460.996 iterations 59
Cbc0038I Pass   8: (5.93 seconds) suminf.   41.86220 (400) obj. 447.119 iterations 237
Cbc0038I Pass   9: (5.95 seconds) suminf.   39.74458 (398) obj. 456.11 iterations 64
Cbc0038I Pass  10: (5.96 seconds) suminf.   39.98331 (401) obj. 456.323 iterations 17
Cbc0038I Pass  11: (6.04 seconds) suminf.   38.80877 (367) obj. 455.418 iterations 363
Cbc0038I Pass  12: (6.07 seconds) suminf.   37.89412 (380) obj. 449.708 iterations 122
Cbc0038I Pass  13: (6.08 seconds) suminf.   37.89133 (372) obj. 449.728 iterations 16
Cbc0038I Pass  14: (6.13 seconds) suminf.   35.45444 (351) obj. 453.475 iterations 165
Cbc0038I Pass  15: (6.15 seconds) suminf.   35.28828 (370) obj. 450.544 iterations 88
Cbc0038I Pass  16: (6.19 seconds) suminf.   31.62489 (344) obj. 459.131 iterations 173
Cbc0038I Pass  17: (6.22 seconds) suminf.   30.98575 (359) obj. 459.53 iterations 104
Cbc0038I Pass  18: (6.29 seconds) suminf.   31.20414 (352) obj. 501.857 iterations 357
Cbc0038I Pass  19: (6.33 seconds) suminf.   30.83079 (331) obj. 500.122 iterations 145
Cbc0038I Pass  20: (6.39 seconds) suminf.   27.09296 (320) obj. 507.143 iterations 260
Cbc0038I Pass  21: (6.40 seconds) suminf.   26.62239 (317) obj. 505.131 iterations 54
Cbc0038I Pass  22: (6.46 seconds) suminf.   27.51672 (324) obj. 501.641 iterations 271
Cbc0038I Pass  23: (6.50 seconds) suminf.   25.95958 (320) obj. 500.148 iterations 159
Cbc0038I Pass  24: (6.55 seconds) suminf.   26.51193 (307) obj. 495.103 iterations 260
Cbc0038I Pass  25: (6.59 seconds) suminf.   24.68946 (314) obj. 500.49 iterations 143
Cbc0038I Pass  26: (6.59 seconds) suminf.   24.68754 (315) obj. 500.494 iterations 7
Cbc0038I Pass  27: (6.66 seconds) suminf.   29.29735 (293) obj. 495.116 iterations 352
Cbc0038I Pass  28: (6.69 seconds) suminf.   24.49946 (310) obj. 499.202 iterations 135
Cbc0038I Pass  29: (6.70 seconds) suminf.   24.56754 (318) obj. 499.306 iterations 12
Cbc0038I Pass  30: (6.75 seconds) suminf.   27.34081 (300) obj. 490.722 iterations 211
Cbc0038I Pass  31: (6.80 seconds) suminf.   24.28449 (305) obj. 519.943 iterations 189
Cbc0038I Pass  32: (6.83 seconds) suminf.   23.32005 (289) obj. 524.14 iterations 156
Cbc0038I Pass  33: (6.88 seconds) suminf.   26.52020 (307) obj. 489.554 iterations 212
Cbc0038I Pass  34: (6.90 seconds) suminf.   24.03498 (318) obj. 499.123 iterations 104
Cbc0038I Pass  35: (6.93 seconds) suminf.   23.18138 (323) obj. 495.734 iterations 94
Cbc0038I Pass  36: (6.96 seconds) suminf.   24.75998 (306) obj. 500.258 iterations 132
Cbc0038I Pass  37: (6.98 seconds) suminf.   24.17479 (315) obj. 499.32 iterations 94
Cbc0038I Pass  38: (7.04 seconds) suminf.   26.23861 (293) obj. 471.177 iterations 262
Cbc0038I Pass  39: (7.09 seconds) suminf.   24.15333 (313) obj. 445.845 iterations 230
Cbc0038I Pass  40: (7.10 seconds) suminf.   23.02854 (326) obj. 445.74 iterations 25
Cbc0038I Pass  41: (7.16 seconds) suminf.   24.69330 (288) obj. 440.242 iterations 245
Cbc0038I Pass  42: (7.17 seconds) suminf.   23.65262 (284) obj. 445.15 iterations 58
Cbc0038I Pass  43: (7.21 seconds) suminf.   23.35829 (286) obj. 446.24 iterations 162
Cbc0038I Pass  44: (7.24 seconds) suminf.   21.46992 (295) obj. 445.246 iterations 108
Cbc0038I Pass  45: (7.24 seconds) suminf.   21.46992 (295) obj. 445.246 iterations 1
Cbc0038I Pass  46: (7.31 seconds) suminf.   22.74144 (290) obj. 485.827 iterations 339
Cbc0038I Pass  47: (7.35 seconds) suminf.   19.95405 (286) obj. 470.522 iterations 211
Cbc0038I Pass  48: (7.36 seconds) suminf.   19.62350 (287) obj. 470.592 iterations 11
Cbc0038I Pass  49: (7.43 seconds) suminf.   21.12302 (256) obj. 440.432 iterations 361
Cbc0038I Pass  50: (7.44 seconds) suminf.   20.39450 (260) obj. 439.994 iterations 63
Cbc0038I Pass  51: (7.48 seconds) suminf.   19.76216 (253) obj. 435.892 iterations 161
Cbc0038I Pass  52: (7.49 seconds) suminf.   19.94202 (258) obj. 431.533 iterations 71
Cbc0038I Pass  53: (7.54 seconds) suminf.   20.59642 (245) obj. 443.049 iterations 255
Cbc0038I Pass  54: (7.57 seconds) suminf.   19.17142 (251) obj. 445.224 iterations 134
Cbc0038I Pass  55: (7.61 seconds) suminf.   18.43661 (259) obj. 464.956 iterations 197
Cbc0038I Pass  56: (7.62 seconds) suminf.   18.35661 (258) obj. 466.852 iterations 38
Cbc0038I Pass  57: (7.68 seconds) suminf.   19.58566 (237) obj. 414.527 iterations 328
Cbc0038I Pass  58: (7.71 seconds) suminf.   17.14584 (258) obj. 413.228 iterations 101
Cbc0038I Pass  59: (7.75 seconds) suminf.   16.12496 (241) obj. 447.123 iterations 203
Cbc0038I Pass  60: (7.77 seconds) suminf.   14.22911 (221) obj. 442.239 iterations 110
Cbc0038I Pass  61: (7.79 seconds) suminf.   14.62861 (226) obj. 468.629 iterations 92
Cbc0038I Pass  62: (7.81 seconds) suminf.   14.10066 (228) obj. 462.256 iterations 85
Cbc0038I Pass  63: (7.89 seconds) suminf.   12.66292 (210) obj. 406.507 iterations 460
Cbc0038I Pass  64: (7.91 seconds) suminf.    9.25383 (204) obj. 405.828 iterations 99
Cbc0038I Pass  65: (7.98 seconds) suminf.    8.85957 (161) obj. 405.346 iterations 458
Cbc0038I Pass  66: (8.00 seconds) suminf.    8.06458 (163) obj. 406.019 iterations 95
Cbc0038I Pass  67: (8.06 seconds) suminf.   15.38542 (180) obj. 487.226 iterations 440
Cbc0038I Pass  68: (8.08 seconds) suminf.   12.53134 (171) obj. 512.936 iterations 83
Cbc0038I Pass  69: (8.11 seconds) suminf.    9.98430 (167) obj. 508.378 iterations 153
Cbc0038I Pass  70: (8.12 seconds) suminf.    9.56464 (174) obj. 497.62 iterations 57
Cbc0038I Pass  71: (8.13 seconds) suminf.    9.56464 (174) obj. 497.62 iterations 1
Cbc0038I Pass  72: (8.18 seconds) suminf.   14.62946 (187) obj. 509.088 iterations 322
Cbc0038I Pass  73: (8.20 seconds) suminf.   13.18578 (180) obj. 508.151 iterations 87
Cbc0038I Pass  74: (8.21 seconds) suminf.   12.92722 (164) obj. 514.54 iterations 32
Cbc0038I Pass  75: (8.26 seconds) suminf.   11.08295 (115) obj. 503.31 iterations 306
Cbc0038I Pass  76: (8.28 seconds) suminf.    9.95110 (130) obj. 503.244 iterations 104
Cbc0038I Pass  77: (8.29 seconds) suminf.    9.65607 (132) obj. 502.009 iterations 30
Cbc0038I Pass  78: (8.34 seconds) suminf.   10.02612 (139) obj. 502.991 iterations 329
Cbc0038I Pass  79: (8.36 seconds) suminf.    8.03250 (130) obj. 483.883 iterations 66
Cbc0038I Pass  80: (8.37 seconds) suminf.    7.73468 (132) obj. 480.236 iterations 34
Cbc0038I Pass  81: (8.41 seconds) suminf.    8.38340 (142) obj. 495.836 iterations 261
Cbc0038I Pass  82: (8.42 seconds) suminf.    7.47262 (141) obj. 495.709 iterations 10
Cbc0038I Pass  83: (8.43 seconds) suminf.    7.47262 (141) obj. 495.709 iterations 1
Cbc0038I Pass  84: (8.48 seconds) suminf.    8.80663 (132) obj. 406.146 iterations 383
Cbc0038I Pass  85: (8.49 seconds) suminf.    7.28956 (131) obj. 405.99 iterations 43
Cbc0038I Pass  86: (8.50 seconds) suminf.    7.07513 (133) obj. 405.987 iterations 48
Cbc0038I Pass  87: (8.53 seconds) suminf.   17.28335 (160) obj. 411.335 iterations 185
Cbc0038I Pass  88: (8.54 seconds) suminf.   13.57039 (162) obj. 411.157 iterations 86
Cbc0038I Pass  89: (8.55 seconds) suminf.   13.32950 (163) obj. 411.152 iterations 33
Cbc0038I Pass  90: (8.58 seconds) suminf.   13.79681 (164) obj. 423.426 iterations 140
Cbc0038I Pass  91: (8.60 seconds) suminf.    9.77576 (157) obj. 422.972 iterations 130
Cbc0038I Pass  92: (8.65 seconds) suminf.   14.74881 (153) obj. 393.103 iterations 319
Cbc0038I Pass  93: (8.67 seconds) suminf.   13.15569 (156) obj. 385.751 iterations 118
Cbc0038I Pass  94: (8.69 seconds) suminf.    9.93059 (152) obj. 385.886 iterations 145
Cbc0038I Pass  95: (8.72 seconds) suminf.    7.43335 (135) obj. 381.318 iterations 182
Cbc0038I Pass  96: (8.72 seconds) suminf.    7.43335 (135) obj. 381.318 iterations 2
Cbc0038I Pass  97: (8.75 seconds) suminf.   11.02290 (158) obj. 385.729 iterations 135
Cbc0038I Pass  98: (8.75 seconds) suminf.   10.92431 (151) obj. 385.765 iterations 24
Cbc0038I Pass  99: (8.79 seconds) suminf.    9.95685 (143) obj. 400.649 iterations 267
Cbc0038I Pass 100: (8.93 seconds) suminf.   54.15144 (319) obj. 525.153 iterations 882
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 441 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4308 rows 1490 columns, reduced to 2849 rows 912 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.12 seconds)
Cbc0038I After 9.12 seconds - Feasibility pump exiting - took 3.85 seconds
Cbc0031I 32 added rows had average density of 13.6875
Cbc0013I At root node, 32 cuts changed objective from 313.86814 to 335.99993 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 143 row cuts average 2.0 elements, 2 column cuts (2 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 132 row cuts average 63.7 elements, 0 column cuts (0 active)  in 0.446 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 288 row cuts average 61.9 elements, 0 column cuts (0 active)  in 0.247 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 336 (13.69 seconds)
Cbc0010I After 100 nodes, 22 on tree, 1e+50 best solution, best possible 337 (72.38 seconds)
Cbc0010I After 200 nodes, 34 on tree, 1e+50 best solution, best possible 337 (123.13 seconds)
Cbc0010I After 300 nodes, 46 on tree, 1e+50 best solution, best possible 337 (151.33 seconds)
Cbc0010I After 400 nodes, 50 on tree, 1e+50 best solution, best possible 337 (183.02 seconds)
Cbc0010I After 500 nodes, 59 on tree, 1e+50 best solution, best possible 337 (211.61 seconds)
Cbc0010I After 600 nodes, 76 on tree, 1e+50 best solution, best possible 337 (237.35 seconds)
Cbc0010I After 700 nodes, 79 on tree, 1e+50 best solution, best possible 337 (255.26 seconds)
Cbc0010I After 800 nodes, 96 on tree, 1e+50 best solution, best possible 337 (277.53 seconds)
Cbc0010I After 900 nodes, 102 on tree, 1e+50 best solution, best possible 337 (296.67 seconds)
Cbc0010I After 1000 nodes, 105 on tree, 1e+50 best solution, best possible 337 (318.79 seconds)
Cbc0010I After 1100 nodes, 92 on tree, 1e+50 best solution, best possible 337 (337.50 seconds)
Cbc0010I After 1200 nodes, 64 on tree, 1e+50 best solution, best possible 337 (356.62 seconds)
Cbc0010I After 1300 nodes, 48 on tree, 1e+50 best solution, best possible 337 (376.93 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 1e+50 best solution, best possible 337 (421.78 seconds)
Cbc0010I After 1500 nodes, 8 on tree, 1e+50 best solution, best possible 338 (466.68 seconds)
Cbc0010I After 1600 nodes, 15 on tree, 1e+50 best solution, best possible 339 (507.47 seconds)
Cbc0004I Integer solution of 340 found after 1237360 iterations and 1626 nodes (512.84 seconds)
Cbc0038I Full problem 4308 rows 1490 columns, reduced to 718 rows 207 columns
Cbc0004I Integer solution of 339 found after 1241864 iterations and 1655 nodes (520.19 seconds)
Cbc0001I Search completed - best objective 339, took 1241864 iterations and 1655 nodes (520.19 seconds)
Cbc0032I Strong branching done 16786 times (997684 iterations), fathomed 266 nodes and fixed 908 variables
Cbc0035I Maximum depth 50, 0 variables fixed on reduced cost
Cuts at root node changed objective from 313.868 to 336
Probing was tried 399 times and created 15934 cuts of which 0 were active after adding rounds of cuts (1.450 seconds)
Gomory was tried 310 times and created 394 cuts of which 0 were active after adding rounds of cuts (1.494 seconds)
Knapsack was tried 310 times and created 953 cuts of which 0 were active after adding rounds of cuts (0.486 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 310 times and created 2812 cuts of which 0 were active after adding rounds of cuts (0.716 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
ImplicationCuts was tried 120 times and created 107 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                339.00000000
Enumerated nodes:               1655
Total iterations:               1241864
Time (CPU seconds):             520.41
Time (Wallclock seconds):       528.66

Total time (CPU seconds):       520.44   (Wallclock seconds):       528.69

