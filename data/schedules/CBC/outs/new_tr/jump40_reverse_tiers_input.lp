Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump40_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump40_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 40504.7 - 2.00 seconds
Cgl0002I 324 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 599 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 4518 rows, 1324 columns (1324 integer (1283 of which binary)) and 15561 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1324 objects (1324 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 835 integers unsatisfied sum - 233.166
Cbc0038I Pass   1: (3.82 seconds) suminf.  108.71481 (721) obj. 57451.3 iterations 2602
Cbc0038I Pass   2: (3.97 seconds) suminf.   86.34221 (710) obj. 57511.2 iterations 637
Cbc0038I Pass   3: (4.04 seconds) suminf.   82.94345 (696) obj. 57443.2 iterations 195
Cbc0038I Pass   4: (4.07 seconds) suminf.   81.89423 (694) obj. 57440.9 iterations 84
Cbc0038I Pass   5: (4.16 seconds) suminf.   80.63124 (717) obj. 58241.1 iterations 285
Cbc0038I Pass   6: (4.19 seconds) suminf.   79.31879 (714) obj. 58231.6 iterations 67
Cbc0038I Pass   7: (4.32 seconds) suminf.   74.38356 (608) obj. 58550.4 iterations 481
Cbc0038I Pass   8: (4.38 seconds) suminf.   73.83536 (586) obj. 58662.4 iterations 163
Cbc0038I Pass   9: (4.39 seconds) suminf.   73.83116 (586) obj. 58662.4 iterations 4
Cbc0038I Pass  10: (4.48 seconds) suminf.   76.14009 (568) obj. 58584.4 iterations 308
Cbc0038I Pass  11: (4.53 seconds) suminf.   74.18908 (584) obj. 58482.6 iterations 158
Cbc0038I Pass  12: (4.61 seconds) suminf.   70.11637 (580) obj. 58937.9 iterations 296
Cbc0038I Pass  13: (4.64 seconds) suminf.   71.30236 (597) obj. 58863.2 iterations 92
Cbc0038I Pass  14: (4.76 seconds) suminf.   67.99235 (566) obj. 58879.9 iterations 459
Cbc0038I Pass  15: (4.79 seconds) suminf.   69.21416 (572) obj. 58844.4 iterations 95
Cbc0038I Pass  16: (4.89 seconds) suminf.   65.88049 (557) obj. 58067.3 iterations 344
Cbc0038I Pass  17: (4.92 seconds) suminf.   64.35890 (553) obj. 58502.4 iterations 87
Cbc0038I Pass  18: (5.03 seconds) suminf.   62.20811 (567) obj. 57980.6 iterations 447
Cbc0038I Pass  19: (5.09 seconds) suminf.   62.43818 (578) obj. 58010.2 iterations 178
Cbc0038I Pass  20: (5.10 seconds) suminf.   62.40454 (576) obj. 58009.7 iterations 16
Cbc0038I Pass  21: (5.24 seconds) suminf.   61.91250 (518) obj. 60083.7 iterations 565
Cbc0038I Pass  22: (5.34 seconds) suminf.   59.66996 (523) obj. 61569.6 iterations 432
Cbc0038I Pass  23: (5.36 seconds) suminf.   59.60301 (523) obj. 61440.7 iterations 53
Cbc0038I Pass  24: (5.47 seconds) suminf.   61.21294 (507) obj. 60975.3 iterations 420
Cbc0038I Pass  25: (5.53 seconds) suminf.   58.59175 (501) obj. 61290.9 iterations 205
Cbc0038I Pass  26: (5.53 seconds) suminf.   58.59175 (501) obj. 61290.9 iterations 2
Cbc0038I Pass  27: (5.65 seconds) suminf.   54.37517 (491) obj. 60776.4 iterations 518
Cbc0038I Pass  28: (5.70 seconds) suminf.   52.54927 (501) obj. 60811.9 iterations 165
Cbc0038I Pass  29: (5.83 seconds) suminf.   54.23736 (517) obj. 63114.9 iterations 550
Cbc0038I Pass  30: (5.90 seconds) suminf.   54.25870 (528) obj. 62183.6 iterations 266
Cbc0038I Pass  31: (6.02 seconds) suminf.   46.82468 (547) obj. 64795.2 iterations 467
Cbc0038I Pass  32: (6.08 seconds) suminf.   47.66932 (547) obj. 64123.1 iterations 213
Cbc0038I Pass  33: (6.14 seconds) suminf.   45.05090 (550) obj. 63193.1 iterations 179
Cbc0038I Pass  34: (6.20 seconds) suminf.   45.91126 (570) obj. 63950.8 iterations 153
Cbc0038I Pass  35: (6.38 seconds) suminf.   48.05151 (521) obj. 64978.5 iterations 803
Cbc0038I Pass  36: (6.46 seconds) suminf.   46.50055 (561) obj. 66300.5 iterations 284
Cbc0038I Pass  37: (6.47 seconds) suminf.   46.50055 (561) obj. 66300.5 iterations 9
Cbc0038I Pass  38: (6.63 seconds) suminf.   45.27876 (616) obj. 66785.4 iterations 700
Cbc0038I Pass  39: (6.66 seconds) suminf.   45.34759 (589) obj. 66778.6 iterations 85
Cbc0038I Pass  40: (6.67 seconds) suminf.   45.77146 (587) obj. 66740.5 iterations 15
Cbc0038I Pass  41: (6.72 seconds) suminf.   45.76725 (572) obj. 66733.1 iterations 138
Cbc0038I Pass  42: (6.84 seconds) suminf.   45.56963 (566) obj. 65041.8 iterations 491
Cbc0038I Pass  43: (6.91 seconds) suminf.   46.04346 (590) obj. 65873.3 iterations 241
Cbc0038I Pass  44: (7.05 seconds) suminf.   46.85902 (562) obj. 65872.6 iterations 537
Cbc0038I Pass  45: (7.21 seconds) suminf.   47.06746 (572) obj. 65194.1 iterations 731
Cbc0038I Pass  46: (7.28 seconds) suminf.   45.19941 (573) obj. 65054.1 iterations 207
Cbc0038I Pass  47: (7.38 seconds) suminf.   41.60414 (549) obj. 65461.9 iterations 375
Cbc0038I Pass  48: (7.39 seconds) suminf.   41.78641 (549) obj. 65462.7 iterations 17
Cbc0038I Pass  49: (7.50 seconds) suminf.   44.24125 (562) obj. 64853.9 iterations 455
Cbc0038I Pass  50: (7.60 seconds) suminf.   40.19919 (553) obj. 65873.5 iterations 372
Cbc0038I Pass  51: (7.65 seconds) suminf.   40.58149 (569) obj. 65978.6 iterations 147
Cbc0038I Pass  52: (7.74 seconds) suminf.   44.40308 (525) obj. 64893.6 iterations 395
Cbc0038I Pass  53: (7.83 seconds) suminf.   41.19350 (543) obj. 65451.2 iterations 292
Cbc0038I Pass  54: (7.93 seconds) suminf.   42.77691 (552) obj. 65636.7 iterations 459
Cbc0038I Pass  55: (8.01 seconds) suminf.   38.45294 (530) obj. 65955.4 iterations 297
Cbc0038I Pass  56: (8.20 seconds) suminf.   37.55418 (549) obj. 65763.5 iterations 798
Cbc0038I Pass  57: (8.24 seconds) suminf.   34.69323 (510) obj. 65984 iterations 116
Cbc0038I Pass  58: (8.34 seconds) suminf.   38.96992 (527) obj. 65674.1 iterations 380
Cbc0038I Pass  59: (8.35 seconds) suminf.   38.96369 (524) obj. 65673.8 iterations 40
Cbc0038I Pass  60: (8.48 seconds) suminf.   35.16501 (484) obj. 65986.7 iterations 532
Cbc0038I Pass  61: (8.51 seconds) suminf.   33.43883 (490) obj. 65840.7 iterations 131
Cbc0038I Pass  62: (8.64 seconds) suminf.   34.86847 (505) obj. 65324.7 iterations 538
Cbc0038I Pass  63: (8.68 seconds) suminf.   34.17830 (506) obj. 65301.7 iterations 127
Cbc0038I Pass  64: (8.69 seconds) suminf.   33.76864 (506) obj. 65307.6 iterations 21
Cbc0038I Pass  65: (8.86 seconds) suminf.   37.65609 (473) obj. 65674.6 iterations 819
Cbc0038I Pass  66: (8.92 seconds) suminf.   34.57469 (472) obj. 65661.4 iterations 192
Cbc0038I Pass  67: (8.96 seconds) suminf.   33.28639 (471) obj. 65659.1 iterations 137
Cbc0038I Pass  68: (9.04 seconds) suminf.   32.99428 (491) obj. 65638.2 iterations 305
Cbc0038I Pass  69: (9.10 seconds) suminf.   32.41524 (477) obj. 65657.9 iterations 188
Cbc0038I Pass  70: (9.18 seconds) suminf.   35.16414 (498) obj. 65434.5 iterations 326
Cbc0038I Pass  71: (9.25 seconds) suminf.   32.00997 (469) obj. 65342.5 iterations 240
Cbc0038I Pass  72: (9.31 seconds) suminf.   32.00002 (486) obj. 65499.6 iterations 194
Cbc0038I Pass  73: (9.48 seconds) suminf.   34.48761 (481) obj. 69632 iterations 739
Cbc0038I Pass  74: (9.52 seconds) suminf.   33.15498 (486) obj. 69632 iterations 139
Cbc0038I Pass  75: (9.64 seconds) suminf.   38.62977 (482) obj. 69632 iterations 496
Cbc0038I Pass  76: (9.75 seconds) suminf.   33.63942 (508) obj. 69632 iterations 418
Cbc0038I Pass  77: (9.79 seconds) suminf.   33.23458 (487) obj. 69632 iterations 137
Cbc0038I Pass  78: (9.87 seconds) suminf.   34.76239 (500) obj. 69632 iterations 292
Cbc0038I Pass  79: (9.91 seconds) suminf.   32.41183 (475) obj. 69632 iterations 111
Cbc0038I Pass  80: (10.01 seconds) suminf.   32.96106 (468) obj. 69718.5 iterations 435
Cbc0038I Pass  81: (10.04 seconds) suminf.   33.00420 (470) obj. 69718.5 iterations 93
Cbc0038I Pass  82: (10.12 seconds) suminf.   35.44918 (463) obj. 69723.7 iterations 305
Cbc0038I Pass  83: (10.15 seconds) suminf.   33.23466 (465) obj. 69632 iterations 117
Cbc0038I Pass  84: (10.25 seconds) suminf.   30.73245 (470) obj. 69718.5 iterations 419
Cbc0038I Pass  85: (10.29 seconds) suminf.   29.98314 (457) obj. 69718.5 iterations 131
Cbc0038I Pass  86: (10.43 seconds) suminf.   31.41597 (470) obj. 70710.3 iterations 599
Cbc0038I Pass  87: (10.49 seconds) suminf.   29.20019 (474) obj. 69692.2 iterations 228
Cbc0038I Pass  88: (10.53 seconds) suminf.   29.48657 (457) obj. 69753.5 iterations 121
Cbc0038I Pass  89: (10.64 seconds) suminf.   27.58708 (474) obj. 69796.1 iterations 501
Cbc0038I Pass  90: (10.70 seconds) suminf.   28.10346 (477) obj. 69787 iterations 157
Cbc0038I Pass  91: (10.78 seconds) suminf.   29.15289 (448) obj. 69728.7 iterations 318
Cbc0038I Pass  92: (10.88 seconds) suminf.   27.02654 (432) obj. 69722.7 iterations 400
Cbc0038I Pass  93: (10.98 seconds) suminf.   30.28605 (448) obj. 69808.9 iterations 451
Cbc0038I Pass  94: (11.03 seconds) suminf.   28.18074 (430) obj. 69756.2 iterations 147
Cbc0038I Pass  95: (11.12 seconds) suminf.   31.12818 (458) obj. 69704.5 iterations 333
Cbc0038I Pass  96: (11.16 seconds) suminf.   28.36838 (439) obj. 69729.6 iterations 154
Cbc0038I Pass  97: (11.24 seconds) suminf.   27.64122 (411) obj. 69632 iterations 298
Cbc0038I Pass  98: (11.33 seconds) suminf.   28.38997 (435) obj. 69632 iterations 297
Cbc0038I Pass  99: (11.41 seconds) suminf.   28.85802 (384) obj. 69632 iterations 322
Cbc0038I Pass 100: (11.68 seconds) suminf.   75.13172 (500) obj. 63926.7 iterations 1341
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 129 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1324 columns, reduced to 4193 rows 1185 columns - too large
Cbc0038I Mini branch and bound did not improve solution (11.74 seconds)
Cbc0038I After 11.74 seconds - Feasibility pump exiting - took 8.62 seconds
Cbc0031I 51 added rows had average density of 47.666667
Cbc0013I At root node, 51 cuts changed objective from 40504.676 to 41932.995 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 156 row cuts average 122.0 elements, 0 column cuts (0 active)  in 0.619 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 344 row cuts average 129.1 elements, 0 column cuts (0 active)  in 0.586 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41933 (41.02 seconds)
Cbc0010I After 100 nodes, 2 on tree, 1e+50 best solution, best possible 41990 (231.10 seconds)
Cbc0010I After 200 nodes, 4 on tree, 1e+50 best solution, best possible 42002 (375.22 seconds)
Cbc0010I After 300 nodes, 3 on tree, 1e+50 best solution, best possible 42007 (510.00 seconds)
Cbc0010I After 400 nodes, 2 on tree, 1e+50 best solution, best possible 42007 (616.77 seconds)
Cbc0010I After 500 nodes, 29 on tree, 1e+50 best solution, best possible 42008 (701.72 seconds)
Cbc0010I After 600 nodes, 41 on tree, 1e+50 best solution, best possible 42008 (784.44 seconds)
Cbc0010I After 700 nodes, 41 on tree, 1e+50 best solution, best possible 42008 (877.10 seconds)
Cbc0010I After 800 nodes, 44 on tree, 1e+50 best solution, best possible 42008 (968.96 seconds)
Cbc0010I After 900 nodes, 53 on tree, 1e+50 best solution, best possible 42008 (1053.77 seconds)
Cbc0010I After 1000 nodes, 44 on tree, 1e+50 best solution, best possible 42008 (1156.11 seconds)
Cbc0010I After 1100 nodes, 33 on tree, 1e+50 best solution, best possible 42008 (1225.86 seconds)
Cbc0010I After 1200 nodes, 31 on tree, 1e+50 best solution, best possible 42008 (1298.65 seconds)
Cbc0010I After 1300 nodes, 25 on tree, 1e+50 best solution, best possible 42008 (1377.72 seconds)
Cbc0010I After 1400 nodes, 13 on tree, 1e+50 best solution, best possible 42008 (1463.89 seconds)
Cbc0010I After 1500 nodes, 19 on tree, 1e+50 best solution, best possible 42008 (1556.88 seconds)
Cbc0010I After 1600 nodes, 12 on tree, 1e+50 best solution, best possible 42008 (1640.92 seconds)
Cbc0010I After 1700 nodes, 16 on tree, 1e+50 best solution, best possible 42008 (1728.57 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 42008), took 3562787 iterations and 1773 nodes (1798.90 seconds)
Cbc0032I Strong branching done 16934 times (1496386 iterations), fathomed 121 nodes and fixed 696 variables
Cbc0035I Maximum depth 67, 0 variables fixed on reduced cost
Cuts at root node changed objective from 40504.7 to 41933
Probing was tried 10 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.091 seconds)
Gomory was tried 319 times and created 1141 cuts of which 0 were active after adding rounds of cuts (4.156 seconds)
Knapsack was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 319 times and created 6877 cuts of which 0 were active after adding rounds of cuts (1.939 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
ImplicationCuts was tried 42 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    42008.000
Enumerated nodes:               1773
Total iterations:               3562787
Time (CPU seconds):             1798.91
Time (Wallclock seconds):       1805.22

Total time (CPU seconds):       1798.93   (Wallclock seconds):       1805.24

