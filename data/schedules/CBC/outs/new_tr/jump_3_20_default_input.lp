Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_20_default_input.lp sec 1800 solve solu solutions/new_tr/jump_3_20_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 23040 - 0.01 seconds
Cgl0002I 110 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 176 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1000 rows, 329 columns (329 integer (308 of which binary)) and 3272 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 329 objects (329 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 143 integers unsatisfied sum - 40.8394
Cbc0038I Pass   1: suminf.    4.29412 (21) obj. 24576 iterations 514
Cbc0038I Pass   2: suminf.    4.29412 (21) obj. 24576 iterations 0
Cbc0038I Pass   3: suminf.    0.73212 (22) obj. 24576 iterations 63
Cbc0038I Pass   4: suminf.    4.24958 (30) obj. 24683.7 iterations 98
Cbc0038I Pass   5: suminf.    1.37367 (10) obj. 24576 iterations 21
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 24576 iterations 15
Cbc0038I Solution found of 24576
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I Round again with cutoff of 24421.5
Cbc0038I Reduced cost fixing fixed 16 variables on major pass 2
Cbc0038I Pass   7: suminf.    5.89473 (63) obj. 24421 iterations 81
Cbc0038I Pass   8: suminf.    6.38948 (64) obj. 24421.5 iterations 1
Cbc0038I Pass   9: suminf.    3.51072 (53) obj. 24421.5 iterations 71
Cbc0038I Pass  10: suminf.    3.51072 (53) obj. 24421.5 iterations 1
Cbc0038I Pass  11: suminf.   14.89187 (75) obj. 24421.5 iterations 170
Cbc0038I Pass  12: suminf.    5.66468 (51) obj. 24421.5 iterations 114
Cbc0038I Pass  13: suminf.    5.66468 (51) obj. 24421.5 iterations 3
Cbc0038I Pass  14: suminf.    3.97810 (55) obj. 24421.5 iterations 131
Cbc0038I Pass  15: suminf.    3.50570 (53) obj. 24421.5 iterations 19
Cbc0038I Pass  16: suminf.    5.87505 (52) obj. 24421.5 iterations 48
Cbc0038I Pass  17: suminf.    2.40395 (49) obj. 24421.5 iterations 36
Cbc0038I Pass  18: suminf.    2.22384 (62) obj. 24421.5 iterations 51
Cbc0038I Pass  19: suminf.   11.17143 (64) obj. 24421.5 iterations 173
Cbc0038I Pass  20: suminf.    5.24139 (62) obj. 24421.5 iterations 59
Cbc0038I Pass  21: suminf.    9.78639 (62) obj. 24421.5 iterations 121
Cbc0038I Pass  22: suminf.    4.39090 (58) obj. 24421.5 iterations 55
Cbc0038I Pass  23: suminf.    5.70572 (41) obj. 24421.5 iterations 162
Cbc0038I Pass  24: suminf.    5.23747 (40) obj. 24421.5 iterations 31
Cbc0038I Pass  25: suminf.    8.24756 (48) obj. 24421.5 iterations 90
Cbc0038I Pass  26: suminf.    2.55967 (46) obj. 24421.5 iterations 22
Cbc0038I Pass  27: suminf.    2.40114 (46) obj. 24421.5 iterations 25
Cbc0038I Pass  28: suminf.   15.30594 (65) obj. 24421.5 iterations 122
Cbc0038I Pass  29: suminf.    8.41954 (55) obj. 24421.5 iterations 165
Cbc0038I Pass  30: suminf.    7.68967 (55) obj. 24421.5 iterations 33
Cbc0038I Pass  31: suminf.    7.09410 (53) obj. 24421.5 iterations 24
Cbc0038I Pass  32: suminf.    3.36864 (47) obj. 24421.5 iterations 72
Cbc0038I Pass  33: suminf.    2.03142 (45) obj. 24421.5 iterations 39
Cbc0038I Pass  34: suminf.    6.81956 (46) obj. 24421.5 iterations 65
Cbc0038I Pass  35: suminf.    5.03410 (46) obj. 24421.5 iterations 30
Cbc0038I Pass  36: suminf.    7.80064 (51) obj. 24421.5 iterations 59
Cbc0038I Pass  37: suminf.    2.12558 (44) obj. 24421.5 iterations 44
Cbc0038I Pass  38: suminf.    2.03064 (44) obj. 24421.5 iterations 16
Cbc0038I Pass  39: suminf.    8.07594 (49) obj. 24421.5 iterations 80
Cbc0038I Pass  40: suminf.    3.35646 (44) obj. 24421.5 iterations 34
Cbc0038I Pass  41: suminf.    2.48312 (46) obj. 24421.5 iterations 18
Cbc0038I Pass  42: suminf.    2.88748 (45) obj. 24421.5 iterations 19
Cbc0038I Pass  43: suminf.    2.03142 (45) obj. 24421.5 iterations 13
Cbc0038I Pass  44: suminf.   10.39858 (58) obj. 24421.5 iterations 104
Cbc0038I Pass  45: suminf.    7.14440 (49) obj. 24421.5 iterations 52
Cbc0038I Pass  46: suminf.    6.98251 (48) obj. 24421.5 iterations 36
Cbc0038I Pass  47: suminf.    5.53750 (47) obj. 24421.5 iterations 79
Cbc0038I Pass  48: suminf.    2.40550 (45) obj. 24421.5 iterations 32
Cbc0038I Pass  49: suminf.   13.04581 (57) obj. 24421.5 iterations 156
Cbc0038I Pass  50: suminf.    7.23998 (44) obj. 24421.5 iterations 105
Cbc0038I Pass  51: suminf.    7.23998 (44) obj. 24421.5 iterations 9
Cbc0038I Pass  52: suminf.    3.84150 (43) obj. 24421.5 iterations 96
Cbc0038I Pass  53: suminf.    2.25224 (46) obj. 24421.5 iterations 57
Cbc0038I Pass  54: suminf.    5.79443 (44) obj. 24421.5 iterations 140
Cbc0038I Pass  55: suminf.    5.01773 (42) obj. 24421.5 iterations 18
Cbc0038I Pass  56: suminf.   10.70132 (56) obj. 24421.5 iterations 198
Cbc0038I Pass  57: suminf.    2.37271 (45) obj. 24421.5 iterations 92
Cbc0038I Pass  58: suminf.    2.25190 (45) obj. 24421.5 iterations 16
Cbc0038I Pass  59: suminf.   10.89022 (67) obj. 24421.5 iterations 162
Cbc0038I Pass  60: suminf.    5.03525 (42) obj. 24421.5 iterations 52
Cbc0038I Pass  61: suminf.    5.01773 (42) obj. 24421.5 iterations 9
Cbc0038I Pass  62: suminf.   10.15995 (52) obj. 24421.5 iterations 221
Cbc0038I Pass  63: suminf.    2.85863 (44) obj. 24421.5 iterations 62
Cbc0038I Pass  64: suminf.    2.85863 (44) obj. 24421.5 iterations 4
Cbc0038I Pass  65: suminf.   10.10213 (52) obj. 24421.5 iterations 164
Cbc0038I Pass  66: suminf.    6.99300 (44) obj. 24421.5 iterations 54
Cbc0038I Pass  67: suminf.    4.21362 (48) obj. 24421.5 iterations 44
Cbc0038I Pass  68: suminf.    9.91973 (53) obj. 24421.5 iterations 141
Cbc0038I Pass  69: suminf.    5.24285 (42) obj. 24421.5 iterations 65
Cbc0038I Pass  70: suminf.    5.23747 (40) obj. 24421.5 iterations 23
Cbc0038I Pass  71: suminf.    3.78517 (47) obj. 24421.5 iterations 87
Cbc0038I Pass  72: suminf.    2.40114 (46) obj. 24421.5 iterations 47
Cbc0038I Pass  73: suminf.    5.94211 (42) obj. 24421.5 iterations 128
Cbc0038I Pass  74: suminf.    5.24285 (42) obj. 24421.5 iterations 32
Cbc0038I Pass  75: suminf.    5.23747 (40) obj. 24421.5 iterations 31
Cbc0038I Pass  76: suminf.    2.78736 (46) obj. 24421.5 iterations 64
Cbc0038I Pass  77: suminf.    2.40114 (46) obj. 24421.5 iterations 11
Cbc0038I Pass  78: suminf.    5.94211 (42) obj. 24421.5 iterations 127
Cbc0038I Pass  79: suminf.    5.24285 (42) obj. 24421.5 iterations 26
Cbc0038I Pass  80: suminf.    5.23747 (40) obj. 24421.5 iterations 27
Cbc0038I Pass  81: suminf.   10.97874 (56) obj. 24421.5 iterations 116
Cbc0038I Pass  82: suminf.    5.14349 (49) obj. 24421.5 iterations 31
Cbc0038I Pass  83: suminf.    7.68083 (53) obj. 24421.5 iterations 98
Cbc0038I Pass  84: suminf.    2.54311 (46) obj. 24421.5 iterations 69
Cbc0038I Pass  85: suminf.    5.97023 (44) obj. 24421.5 iterations 131
Cbc0038I Pass  86: suminf.    5.23747 (40) obj. 24421.5 iterations 61
Cbc0038I Pass  87: suminf.    2.82088 (47) obj. 24421.5 iterations 61
Cbc0038I Pass  88: suminf.    2.40114 (46) obj. 24421.5 iterations 6
Cbc0038I Pass  89: suminf.    5.94211 (42) obj. 24421.5 iterations 170
Cbc0038I Pass  90: suminf.    5.24285 (42) obj. 24421.5 iterations 27
Cbc0038I Pass  91: suminf.    5.23747 (40) obj. 24421.5 iterations 44
Cbc0038I Pass  92: suminf.    3.20612 (44) obj. 24421.5 iterations 67
Cbc0038I Pass  93: suminf.    2.40114 (46) obj. 24421.5 iterations 22
Cbc0038I Pass  94: suminf.    7.66532 (45) obj. 24421.5 iterations 165
Cbc0038I Pass  95: suminf.    5.24285 (42) obj. 24421.5 iterations 33
Cbc0038I Pass  96: suminf.    5.23747 (40) obj. 24421.5 iterations 39
Cbc0038I Pass  97: suminf.    2.68459 (46) obj. 24421.5 iterations 47
Cbc0038I Pass  98: suminf.    2.40114 (46) obj. 24421.5 iterations 12
Cbc0038I Pass  99: suminf.    5.24285 (42) obj. 24421.5 iterations 171
Cbc0038I Pass 100: suminf.   17.76511 (102) obj. 24421.5 iterations 170
Cbc0038I Pass 101: suminf.   10.27043 (77) obj. 24421.5 iterations 155
Cbc0038I Pass 102: suminf.    7.53349 (68) obj. 24421.5 iterations 71
Cbc0038I Pass 103: suminf.    4.69020 (50) obj. 24421.5 iterations 104
Cbc0038I Pass 104: suminf.    3.34844 (58) obj. 24421.5 iterations 43
Cbc0038I Pass 105: suminf.    6.96040 (55) obj. 24421.5 iterations 117
Cbc0038I Pass 106: suminf.   25.74220 (110) obj. 24421.5 iterations 193
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 100 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1000 rows 329 columns, reduced to 761 rows 229 columns - 24 fixed gives 597, 179 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.52 seconds)
Cbc0038I After 0.52 seconds - Feasibility pump exiting with objective of 24576 - took 0.47 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.52 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 23040 to 23040 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 1.5 elements, 19 column cuts (19 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 24576, took 0 iterations and 0 nodes (0.56 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Cuts at root node changed objective from 23040 to 23040
Probing was tried 1 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.57
Time (Wallclock seconds):       0.58

Total time (CPU seconds):       0.58   (Wallclock seconds):       0.59

