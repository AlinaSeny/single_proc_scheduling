Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_4_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang10_4_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 387 - 10.00 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1598 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 6702 rows, 2298 columns (2298 integer (2243 of which binary)) and 21769 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1103 integers unsatisfied sum - 247.602
Cbc0038I Pass   1: (16.29 seconds) suminf.   91.52120 (712) obj. 463.218 iterations 3421
Cbc0038I Pass   2: (16.55 seconds) suminf.   73.01734 (663) obj. 466.389 iterations 643
Cbc0038I Pass   3: (16.73 seconds) suminf.   69.63400 (679) obj. 468.151 iterations 400
Cbc0038I Pass   4: (16.84 seconds) suminf.   69.18349 (691) obj. 467.42 iterations 179
Cbc0038I Pass   5: (17.00 seconds) suminf.   64.52238 (689) obj. 476.518 iterations 335
Cbc0038I Pass   6: (17.08 seconds) suminf.   64.71018 (676) obj. 476.518 iterations 137
Cbc0038I Pass   7: (17.18 seconds) suminf.   64.85388 (673) obj. 476.493 iterations 175
Cbc0038I Pass   8: (17.22 seconds) suminf.   63.59139 (678) obj. 476.495 iterations 63
Cbc0038I Pass   9: (17.39 seconds) suminf.   59.98568 (651) obj. 476.459 iterations 333
Cbc0038I Pass  10: (17.49 seconds) suminf.   59.18159 (662) obj. 476.471 iterations 176
Cbc0038I Pass  11: (17.59 seconds) suminf.   60.46727 (657) obj. 476.46 iterations 182
Cbc0038I Pass  12: (17.77 seconds) suminf.   55.55510 (673) obj. 476.456 iterations 363
Cbc0038I Pass  13: (17.82 seconds) suminf.   55.39364 (667) obj. 476.46 iterations 85
Cbc0038I Pass  14: (18.01 seconds) suminf.   53.47138 (669) obj. 476.406 iterations 408
Cbc0038I Pass  15: (18.10 seconds) suminf.   51.63469 (639) obj. 476.641 iterations 143
Cbc0038I Pass  16: (18.15 seconds) suminf.   51.22436 (646) obj. 476.643 iterations 101
Cbc0038I Pass  17: (18.33 seconds) suminf.   50.94610 (572) obj. 475.87 iterations 421
Cbc0038I Pass  18: (18.45 seconds) suminf.   49.86769 (552) obj. 476.055 iterations 240
Cbc0038I Pass  19: (18.49 seconds) suminf.   49.47989 (552) obj. 476.054 iterations 76
Cbc0038I Pass  20: (18.67 seconds) suminf.   49.71368 (526) obj. 475.17 iterations 488
Cbc0038I Pass  21: (18.76 seconds) suminf.   47.32325 (519) obj. 475.17 iterations 201
Cbc0038I Pass  22: (18.91 seconds) suminf.   42.24877 (483) obj. 474.674 iterations 413
Cbc0038I Pass  23: (18.94 seconds) suminf.   41.70464 (466) obj. 474.648 iterations 85
Cbc0038I Pass  24: (19.06 seconds) suminf.   42.02953 (456) obj. 474.659 iterations 311
Cbc0038I Pass  25: (19.10 seconds) suminf.   40.43227 (451) obj. 474.646 iterations 135
Cbc0038I Pass  26: (19.17 seconds) suminf.   40.71093 (447) obj. 517.443 iterations 192
Cbc0038I Pass  27: (19.22 seconds) suminf.   38.28651 (434) obj. 515.901 iterations 99
Cbc0038I Pass  28: (19.30 seconds) suminf.   39.24143 (424) obj. 474.678 iterations 225
Cbc0038I Pass  29: (19.33 seconds) suminf.   39.06659 (438) obj. 474.667 iterations 72
Cbc0038I Pass  30: (19.43 seconds) suminf.   39.10464 (409) obj. 474.645 iterations 290
Cbc0038I Pass  31: (19.48 seconds) suminf.   35.98422 (386) obj. 474.577 iterations 108
Cbc0038I Pass  32: (19.51 seconds) suminf.   35.25967 (382) obj. 474.577 iterations 81
Cbc0038I Pass  33: (19.56 seconds) suminf.   35.08317 (372) obj. 514.179 iterations 127
Cbc0038I Pass  34: (19.62 seconds) suminf.   34.39045 (384) obj. 514.281 iterations 158
Cbc0038I Pass  35: (19.78 seconds) suminf.   34.74034 (328) obj. 474.577 iterations 571
Cbc0038I Pass  36: (19.85 seconds) suminf.   31.54879 (331) obj. 474.576 iterations 191
Cbc0038I Pass  37: (19.86 seconds) suminf.   31.21447 (335) obj. 474.576 iterations 37
Cbc0038I Pass  38: (19.96 seconds) suminf.   31.40511 (312) obj. 490.989 iterations 286
Cbc0038I Pass  39: (20.01 seconds) suminf.   27.14910 (307) obj. 481.067 iterations 170
Cbc0038I Pass  40: (20.06 seconds) suminf.   24.45793 (277) obj. 479 iterations 148
Cbc0038I Pass  41: (20.08 seconds) suminf.   23.89118 (269) obj. 479 iterations 75
Cbc0038I Pass  42: (20.09 seconds) suminf.   23.89118 (269) obj. 479 iterations 6
Cbc0038I Pass  43: (20.13 seconds) suminf.   21.15731 (260) obj. 479 iterations 118
Cbc0038I Pass  44: (20.15 seconds) suminf.   19.56305 (253) obj. 479 iterations 58
Cbc0038I Pass  45: (20.18 seconds) suminf.   18.70288 (263) obj. 479.033 iterations 96
Cbc0038I Pass  46: (20.19 seconds) suminf.   18.34418 (264) obj. 479.034 iterations 22
Cbc0038I Pass  47: (20.23 seconds) suminf.   15.88143 (224) obj. 479.644 iterations 150
Cbc0038I Pass  48: (20.25 seconds) suminf.   14.59472 (227) obj. 479.644 iterations 40
Cbc0038I Pass  49: (20.26 seconds) suminf.   13.77996 (228) obj. 479.644 iterations 12
Cbc0038I Pass  50: (20.28 seconds) suminf.   14.84516 (218) obj. 479.664 iterations 74
Cbc0038I Pass  51: (20.30 seconds) suminf.   12.26379 (223) obj. 479.659 iterations 43
Cbc0038I Pass  52: (20.33 seconds) suminf.   14.01165 (216) obj. 479.659 iterations 85
Cbc0038I Pass  53: (20.34 seconds) suminf.   14.00449 (223) obj. 479.658 iterations 8
Cbc0038I Pass  54: (20.38 seconds) suminf.    9.72577 (192) obj. 480.334 iterations 150
Cbc0038I Pass  55: (20.40 seconds) suminf.    8.37342 (186) obj. 501.064 iterations 30
Cbc0038I Pass  56: (20.47 seconds) suminf.    9.03191 (156) obj. 518.763 iterations 286
Cbc0038I Pass  57: (20.48 seconds) suminf.    5.46757 (161) obj. 518.789 iterations 41
Cbc0038I Pass  58: (20.49 seconds) suminf.    5.50511 (161) obj. 518.777 iterations 12
Cbc0038I Pass  59: (20.59 seconds) suminf.   10.64374 (124) obj. 559.198 iterations 407
Cbc0038I Pass  60: (20.62 seconds) suminf.    6.34106 (112) obj. 559.71 iterations 130
Cbc0038I Pass  61: (20.63 seconds) suminf.    6.35805 (109) obj. 559.71 iterations 16
Cbc0038I Pass  62: (20.70 seconds) suminf.    3.98517 (80) obj. 480 iterations 287
Cbc0038I Pass  63: (20.71 seconds) suminf.    1.84524 (65) obj. 480 iterations 46
Cbc0038I Pass  64: (20.76 seconds) suminf.    2.53876 (54) obj. 480 iterations 200
Cbc0038I Pass  65: (20.77 seconds) suminf.    2.55957 (51) obj. 480 iterations 28
Cbc0038I Pass  66: (21.01 seconds) suminf.    0.00000 (0) obj. 480 iterations 774
Cbc0038I Solution found of 480
Cbc0038I Cleaned solution of 480
Cbc0038I Before mini branch and bound, 797 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (21.08 seconds)
Cbc0038I Round again with cutoff of 469.8
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  67: (21.09 seconds) suminf.   91.52120 (712) obj. 463.218 iterations 0
Cbc0038I Pass  68: (21.34 seconds) suminf.   73.01734 (663) obj. 466.389 iterations 797
Cbc0038I Pass  69: (21.52 seconds) suminf.   69.63400 (679) obj. 468.151 iterations 571
Cbc0038I Pass  70: (21.61 seconds) suminf.   69.18349 (691) obj. 467.42 iterations 182
Cbc0038I Pass  71: (21.70 seconds) suminf.   61.78730 (684) obj. 469.8 iterations 190
Cbc0038I Pass  72: (21.80 seconds) suminf.   59.80937 (685) obj. 469.8 iterations 232
Cbc0038I Pass  73: (21.90 seconds) suminf.   61.05616 (675) obj. 469.8 iterations 210
Cbc0038I Pass  74: (22.10 seconds) suminf.   54.48656 (653) obj. 469.8 iterations 507
Cbc0038I Pass  75: (22.18 seconds) suminf.   54.80578 (672) obj. 469.8 iterations 154
Cbc0038I Pass  76: (22.39 seconds) suminf.   54.03056 (654) obj. 469.8 iterations 544
Cbc0038I Pass  77: (22.49 seconds) suminf.   53.50589 (647) obj. 469.8 iterations 204
Cbc0038I Pass  78: (22.64 seconds) suminf.   52.62187 (642) obj. 469.8 iterations 379
Cbc0038I Pass  79: (22.75 seconds) suminf.   52.18312 (647) obj. 469.8 iterations 243
Cbc0038I Pass  80: (22.87 seconds) suminf.   52.32784 (620) obj. 469.8 iterations 245
Cbc0038I Pass  81: (22.96 seconds) suminf.   50.75335 (610) obj. 469.8 iterations 207
Cbc0038I Pass  82: (23.02 seconds) suminf.   51.63501 (612) obj. 469.8 iterations 118
Cbc0038I Pass  83: (23.20 seconds) suminf.   49.67719 (547) obj. 469.8 iterations 541
Cbc0038I Pass  84: (23.23 seconds) suminf.   49.42923 (558) obj. 469.8 iterations 61
Cbc0038I Pass  85: (23.33 seconds) suminf.   45.05299 (532) obj. 469.8 iterations 198
Cbc0038I Pass  86: (23.38 seconds) suminf.   44.45632 (525) obj. 469.8 iterations 129
Cbc0038I Pass  87: (23.49 seconds) suminf.   44.76678 (546) obj. 469.8 iterations 262
Cbc0038I Pass  88: (23.52 seconds) suminf.   44.43235 (540) obj. 469.8 iterations 53
Cbc0038I Pass  89: (23.65 seconds) suminf.   41.53212 (502) obj. 469.8 iterations 380
Cbc0038I Pass  90: (23.75 seconds) suminf.   37.63861 (489) obj. 469.8 iterations 290
Cbc0038I Pass  91: (23.79 seconds) suminf.   38.27181 (493) obj. 469.8 iterations 111
Cbc0038I Pass  92: (23.91 seconds) suminf.   38.54343 (499) obj. 469.8 iterations 400
Cbc0038I Pass  93: (24.00 seconds) suminf.   38.74326 (486) obj. 469.8 iterations 266
Cbc0038I Pass  94: (24.11 seconds) suminf.   40.80115 (477) obj. 469.8 iterations 323
Cbc0038I Pass  95: (24.15 seconds) suminf.   40.03604 (471) obj. 469.8 iterations 119
Cbc0038I Pass  96: (24.24 seconds) suminf.   39.62915 (445) obj. 469.8 iterations 208
Cbc0038I Pass  97: (24.28 seconds) suminf.   37.45002 (445) obj. 469.8 iterations 105
Cbc0038I Pass  98: (24.38 seconds) suminf.   39.98405 (412) obj. 469.8 iterations 348
Cbc0038I Pass  99: (24.42 seconds) suminf.   37.21929 (391) obj. 469.8 iterations 124
Cbc0038I Pass 100: (24.44 seconds) suminf.   35.82144 (396) obj. 469.8 iterations 53
Cbc0038I Pass 101: (24.45 seconds) suminf.   35.37799 (395) obj. 469.8 iterations 8
Cbc0038I Pass 102: (24.53 seconds) suminf.   36.91645 (374) obj. 469.8 iterations 237
Cbc0038I Pass 103: (24.56 seconds) suminf.   35.66893 (365) obj. 469.8 iterations 76
Cbc0038I Pass 104: (24.58 seconds) suminf.   34.75801 (376) obj. 469.8 iterations 68
Cbc0038I Pass 105: (24.65 seconds) suminf.   32.71350 (352) obj. 469.8 iterations 210
Cbc0038I Pass 106: (24.67 seconds) suminf.   32.28780 (351) obj. 469.8 iterations 87
Cbc0038I Pass 107: (24.72 seconds) suminf.   32.08074 (334) obj. 469.8 iterations 158
Cbc0038I Pass 108: (24.76 seconds) suminf.   30.50585 (333) obj. 469.8 iterations 154
Cbc0038I Pass 109: (24.85 seconds) suminf.   31.27575 (311) obj. 469.8 iterations 387
Cbc0038I Pass 110: (24.88 seconds) suminf.   30.71633 (331) obj. 469.8 iterations 71
Cbc0038I Pass 111: (24.95 seconds) suminf.   25.78525 (318) obj. 469.8 iterations 244
Cbc0038I Pass 112: (24.97 seconds) suminf.   25.73985 (324) obj. 469.8 iterations 79
Cbc0038I Pass 113: (25.01 seconds) suminf.   24.73602 (316) obj. 469.8 iterations 161
Cbc0038I Pass 114: (25.03 seconds) suminf.   23.70630 (320) obj. 469.8 iterations 62
Cbc0038I Pass 115: (25.05 seconds) suminf.   22.84233 (300) obj. 469.8 iterations 70
Cbc0038I Pass 116: (25.07 seconds) suminf.   22.43210 (312) obj. 469.8 iterations 46
Cbc0038I Pass 117: (25.10 seconds) suminf.   23.25758 (295) obj. 469.8 iterations 101
Cbc0038I Pass 118: (25.12 seconds) suminf.   21.34381 (295) obj. 469.8 iterations 63
Cbc0038I Pass 119: (25.15 seconds) suminf.   19.80427 (283) obj. 469.8 iterations 128
Cbc0038I Pass 120: (25.23 seconds) suminf.   14.64995 (237) obj. 469.8 iterations 325
Cbc0038I Pass 121: (25.24 seconds) suminf.   14.64995 (237) obj. 469.8 iterations 2
Cbc0038I Pass 122: (25.27 seconds) suminf.   12.70769 (215) obj. 469.8 iterations 153
Cbc0038I Pass 123: (25.29 seconds) suminf.   11.60940 (222) obj. 469.8 iterations 77
Cbc0038I Pass 124: (25.34 seconds) suminf.   13.15655 (192) obj. 469.8 iterations 220
Cbc0038I Pass 125: (25.35 seconds) suminf.   12.33273 (189) obj. 469.8 iterations 25
Cbc0038I Pass 126: (25.39 seconds) suminf.    8.84067 (180) obj. 469.8 iterations 144
Cbc0038I Pass 127: (25.40 seconds) suminf.    8.06867 (179) obj. 469.8 iterations 14
Cbc0038I Pass 128: (25.45 seconds) suminf.    8.88182 (163) obj. 469.8 iterations 237
Cbc0038I Pass 129: (25.46 seconds) suminf.    9.29549 (171) obj. 469.8 iterations 50
Cbc0038I Pass 130: (25.57 seconds) suminf.    9.06639 (183) obj. 469.8 iterations 509
Cbc0038I Pass 131: (25.58 seconds) suminf.    8.14514 (165) obj. 469.8 iterations 40
Cbc0038I Pass 132: (25.63 seconds) suminf.    9.12035 (151) obj. 469.8 iterations 235
Cbc0038I Pass 133: (25.64 seconds) suminf.    8.22215 (153) obj. 469.8 iterations 49
Cbc0038I Pass 134: (25.68 seconds) suminf.    8.87779 (134) obj. 469.8 iterations 191
Cbc0038I Pass 135: (25.69 seconds) suminf.    8.87695 (134) obj. 469.8 iterations 44
Cbc0038I Pass 136: (25.74 seconds) suminf.    9.76759 (127) obj. 469.8 iterations 260
Cbc0038I Pass 137: (25.75 seconds) suminf.    6.39504 (124) obj. 469.8 iterations 75
Cbc0038I Pass 138: (25.78 seconds) suminf.    7.55845 (115) obj. 469.8 iterations 176
Cbc0038I Pass 139: (25.80 seconds) suminf.    7.08473 (124) obj. 469.8 iterations 82
Cbc0038I Pass 140: (25.85 seconds) suminf.    7.84145 (83) obj. 469.8 iterations 241
Cbc0038I Pass 141: (25.88 seconds) suminf.    4.09119 (84) obj. 469.8 iterations 183
Cbc0038I Pass 142: (25.95 seconds) suminf.    7.47824 (78) obj. 469.8 iterations 332
Cbc0038I Pass 143: (25.99 seconds) suminf.    5.35964 (76) obj. 469.8 iterations 211
Cbc0038I Pass 144: (26.03 seconds) suminf.    7.15816 (83) obj. 469.8 iterations 220
Cbc0038I Pass 145: (26.06 seconds) suminf.    2.70971 (51) obj. 469.8 iterations 180
Cbc0038I Pass 146: (26.08 seconds) suminf.    2.56974 (48) obj. 469.8 iterations 25
Cbc0038I Pass 147: (26.11 seconds) suminf.    4.22505 (60) obj. 464.229 iterations 161
Cbc0038I Pass 148: (26.13 seconds) suminf.    4.02636 (60) obj. 469.8 iterations 80
Cbc0038I Pass 149: (26.18 seconds) suminf.    5.70039 (67) obj. 469.8 iterations 235
Cbc0038I Pass 150: (26.19 seconds) suminf.    5.70039 (67) obj. 469.8 iterations 3
Cbc0038I Pass 151: (26.26 seconds) suminf.    6.28599 (84) obj. 469.8 iterations 340
Cbc0038I Pass 152: (26.29 seconds) suminf.    5.75398 (91) obj. 469.8 iterations 113
Cbc0038I Pass 153: (26.33 seconds) suminf.    6.88032 (83) obj. 469.8 iterations 192
Cbc0038I Pass 154: (26.34 seconds) suminf.    5.27554 (84) obj. 469.8 iterations 44
Cbc0038I Pass 155: (26.36 seconds) suminf.    4.50612 (78) obj. 469.8 iterations 109
Cbc0038I Pass 156: (26.37 seconds) suminf.    4.50612 (78) obj. 469.8 iterations 1
Cbc0038I Pass 157: (26.45 seconds) suminf.    3.91240 (86) obj. 469.8 iterations 377
Cbc0038I Pass 158: (26.46 seconds) suminf.    3.48868 (87) obj. 469.8 iterations 28
Cbc0038I Pass 159: (26.48 seconds) suminf.    3.61089 (84) obj. 469.8 iterations 88
Cbc0038I Pass 160: (26.50 seconds) suminf.    3.15361 (86) obj. 469.8 iterations 44
Cbc0038I Pass 161: (26.59 seconds) suminf.    5.19170 (76) obj. 469.8 iterations 360
Cbc0038I Pass 162: (26.62 seconds) suminf.    3.26042 (71) obj. 469.8 iterations 105
Cbc0038I Pass 163: (26.65 seconds) suminf.    3.10569 (83) obj. 469.8 iterations 132
Cbc0038I Pass 164: (26.66 seconds) suminf.    3.08712 (84) obj. 469.8 iterations 17
Cbc0038I Pass 165: (26.72 seconds) suminf.    4.99618 (59) obj. 469.8 iterations 242
Cbc0038I Pass 166: (27.08 seconds) suminf.   77.29814 (423) obj. 469.8 iterations 1509
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 714 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (27.10 seconds)
Cbc0038I After 27.10 seconds - Feasibility pump exiting with objective of 480 - took 12.34 seconds
Cbc0012I Integer solution of 480 found by feasibility pump after 0 iterations and 0 nodes (27.10 seconds)
Cbc0031I 20 added rows had average density of 7.9
Cbc0013I At root node, 20 cuts changed objective from 387 to 387 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 256 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 400.2 elements, 0 column cuts (0 active)  in 1.568 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 33 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.597 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 480 best solution, best possible 387 (41.67 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1426 rows 434 columns
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1458 rows 444 columns
Cbc0010I After 100 nodes, 21 on tree, 480 best solution, best possible 387 (142.83 seconds)
Cbc0010I After 200 nodes, 31 on tree, 480 best solution, best possible 387 (210.44 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1088 rows 321 columns
Cbc0010I After 300 nodes, 35 on tree, 480 best solution, best possible 387 (270.87 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1279 rows 388 columns
Cbc0010I After 400 nodes, 33 on tree, 480 best solution, best possible 387 (319.83 seconds)
Cbc0010I After 500 nodes, 33 on tree, 480 best solution, best possible 387 (370.42 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 849 rows 240 columns
Cbc0010I After 600 nodes, 34 on tree, 480 best solution, best possible 387 (435.00 seconds)
Cbc0010I After 700 nodes, 47 on tree, 480 best solution, best possible 387 (515.00 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1117 rows 331 columns
Cbc0010I After 800 nodes, 49 on tree, 480 best solution, best possible 387 (582.37 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 958 rows 277 columns
Cbc0010I After 900 nodes, 51 on tree, 480 best solution, best possible 387 (643.72 seconds)
Cbc0010I After 1000 nodes, 57 on tree, 480 best solution, best possible 387 (691.52 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1213 rows 361 columns
Cbc0010I After 1100 nodes, 43 on tree, 480 best solution, best possible 387 (741.34 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1264 rows 375 columns
Cbc0010I After 1200 nodes, 30 on tree, 480 best solution, best possible 387 (807.62 seconds)
Cbc0010I After 1300 nodes, 36 on tree, 480 best solution, best possible 387 (850.30 seconds)
Cbc0010I After 1400 nodes, 43 on tree, 480 best solution, best possible 387 (886.69 seconds)
Cbc0010I After 1500 nodes, 43 on tree, 480 best solution, best possible 387 (950.08 seconds)
Cbc0010I After 1600 nodes, 30 on tree, 480 best solution, best possible 387 (993.30 seconds)
Cbc0010I After 1700 nodes, 44 on tree, 480 best solution, best possible 387 (1038.71 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1308 rows 400 columns
Cbc0010I After 1800 nodes, 40 on tree, 480 best solution, best possible 387 (1072.27 seconds)
Cbc0010I After 1900 nodes, 31 on tree, 480 best solution, best possible 387 (1119.27 seconds)
Cbc0010I After 2000 nodes, 33 on tree, 480 best solution, best possible 387 (1156.57 seconds)
Cbc0010I After 2100 nodes, 30 on tree, 480 best solution, best possible 387 (1190.79 seconds)
Cbc0010I After 2200 nodes, 30 on tree, 480 best solution, best possible 387 (1227.13 seconds)
Cbc0010I After 2300 nodes, 32 on tree, 480 best solution, best possible 387 (1245.53 seconds)
Cbc0010I After 2400 nodes, 29 on tree, 480 best solution, best possible 387 (1264.44 seconds)
Cbc0010I After 2500 nodes, 24 on tree, 480 best solution, best possible 387 (1291.14 seconds)
Cbc0010I After 2600 nodes, 26 on tree, 480 best solution, best possible 387 (1311.40 seconds)
Cbc0010I After 2700 nodes, 21 on tree, 480 best solution, best possible 387 (1350.38 seconds)
Cbc0010I After 2800 nodes, 14 on tree, 480 best solution, best possible 387 (1402.20 seconds)
Cbc0010I After 2900 nodes, 14 on tree, 480 best solution, best possible 387 (1455.70 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1341 rows 408 columns
Cbc0010I After 3000 nodes, 20 on tree, 480 best solution, best possible 387 (1503.93 seconds)
Cbc0010I After 3100 nodes, 18 on tree, 480 best solution, best possible 387 (1518.08 seconds)
Cbc0010I After 3200 nodes, 17 on tree, 480 best solution, best possible 387 (1534.93 seconds)
Cbc0010I After 3300 nodes, 12 on tree, 480 best solution, best possible 387 (1557.37 seconds)
Cbc0010I After 3400 nodes, 21 on tree, 480 best solution, best possible 387 (1571.61 seconds)
Cbc0010I After 3500 nodes, 15 on tree, 480 best solution, best possible 387 (1588.29 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1299 rows 395 columns
Cbc0010I After 3600 nodes, 11 on tree, 480 best solution, best possible 387 (1616.99 seconds)
Cbc0010I After 3700 nodes, 10 on tree, 480 best solution, best possible 387 (1640.35 seconds)
Cbc0010I After 3800 nodes, 16 on tree, 480 best solution, best possible 388 (1676.34 seconds)
Cbc0010I After 3900 nodes, 37 on tree, 480 best solution, best possible 388 (1699.10 seconds)
Cbc0010I After 4000 nodes, 20 on tree, 480 best solution, best possible 388 (1731.84 seconds)
Cbc0010I After 4100 nodes, 22 on tree, 480 best solution, best possible 388 (1758.62 seconds)
Cbc0038I Full problem 6702 rows 2298 columns, reduced to 1437 rows 446 columns
Cbc0010I After 4200 nodes, 23 on tree, 480 best solution, best possible 388 (1785.88 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 480 (best possible 388), took 3465313 iterations and 4222 nodes (1797.33 seconds)
Cbc0032I Strong branching done 25538 times (1829796 iterations), fathomed 251 nodes and fixed 1926 variables
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost
Cuts at root node changed objective from 387 to 387
Probing was tried 826 times and created 168534 cuts of which 0 were active after adding rounds of cuts (5.843 seconds)
Gomory was tried 479 times and created 1328 cuts of which 0 were active after adding rounds of cuts (5.420 seconds)
Knapsack was tried 479 times and created 2965 cuts of which 0 were active after adding rounds of cuts (1.040 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
TwoMirCuts was tried 10 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.597 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.108 seconds)
ImplicationCuts was tried 35 times and created 252 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Stopped on time limit

Objective value:                480.00000000
Lower bound:                    388.000
Gap:                            0.24
Enumerated nodes:               4222
Total iterations:               3465313
Time (CPU seconds):             1797.92
Time (Wallclock seconds):       1799.94

Total time (CPU seconds):       1797.96   (Wallclock seconds):       1799.99

