Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag341_up_right_input.lp sec 1800 solve solu solutions/new_tr/dag341_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.03219e+06 - 0.82 seconds
Cgl0002I 1954 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1603 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0004I processed model has 8730 rows, 2792 columns (2792 integer (2731 of which binary)) and 28895 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2792 objects (2792 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1024 integers unsatisfied sum - 189.96
Cbc0038I Pass   1: (2.38 seconds) suminf.  111.97946 (931) obj. 1.1191e+06 iterations 2230
Cbc0038I Pass   2: (2.57 seconds) suminf.  108.68687 (954) obj. 1.1294e+06 iterations 419
Cbc0038I Pass   3: (2.66 seconds) suminf.  107.95479 (952) obj. 1.13549e+06 iterations 190
Cbc0038I Pass   4: (2.81 seconds) suminf.  108.19069 (962) obj. 1.13456e+06 iterations 292
Cbc0038I Pass   5: (2.92 seconds) suminf.  108.54151 (967) obj. 1.13433e+06 iterations 207
Cbc0038I Pass   6: (2.96 seconds) suminf.  107.51343 (968) obj. 1.13512e+06 iterations 80
Cbc0038I Pass   7: (3.13 seconds) suminf.  105.23566 (940) obj. 1.13353e+06 iterations 365
Cbc0038I Pass   8: (3.24 seconds) suminf.  103.83778 (942) obj. 1.13547e+06 iterations 224
Cbc0038I Pass   9: (3.27 seconds) suminf.  103.44815 (932) obj. 1.13523e+06 iterations 32
Cbc0038I Pass  10: (3.54 seconds) suminf.   96.53542 (869) obj. 1.15792e+06 iterations 715
Cbc0038I Pass  11: (3.63 seconds) suminf.   94.17002 (878) obj. 1.15841e+06 iterations 176
Cbc0038I Pass  12: (3.83 seconds) suminf.   89.79473 (868) obj. 1.13816e+06 iterations 524
Cbc0038I Pass  13: (4.01 seconds) suminf.   89.37374 (884) obj. 1.14194e+06 iterations 436
Cbc0038I Pass  14: (4.14 seconds) suminf.   88.32782 (883) obj. 1.13906e+06 iterations 280
Cbc0038I Pass  15: (4.17 seconds) suminf.   87.92996 (876) obj. 1.13994e+06 iterations 44
Cbc0038I Pass  16: (4.34 seconds) suminf.   83.76929 (807) obj. 1.14353e+06 iterations 432
Cbc0038I Pass  17: (4.38 seconds) suminf.   83.02824 (805) obj. 1.14652e+06 iterations 84
Cbc0038I Pass  18: (4.60 seconds) suminf.   78.87488 (796) obj. 1.1737e+06 iterations 622
Cbc0038I Pass  19: (4.67 seconds) suminf.   77.98644 (803) obj. 1.1707e+06 iterations 172
Cbc0038I Pass  20: (4.82 seconds) suminf.   77.27517 (809) obj. 1.1941e+06 iterations 337
Cbc0038I Pass  21: (4.86 seconds) suminf.   77.10034 (818) obj. 1.17123e+06 iterations 79
Cbc0038I Pass  22: (5.01 seconds) suminf.   72.92164 (797) obj. 1.17126e+06 iterations 355
Cbc0038I Pass  23: (5.06 seconds) suminf.   72.92795 (803) obj. 1.17197e+06 iterations 93
Cbc0038I Pass  24: (5.24 seconds) suminf.   72.98449 (782) obj. 1.20793e+06 iterations 513
Cbc0038I Pass  25: (5.31 seconds) suminf.   72.64327 (772) obj. 1.20729e+06 iterations 157
Cbc0038I Pass  26: (5.49 seconds) suminf.   71.49199 (739) obj. 1.23332e+06 iterations 468
Cbc0038I Pass  27: (5.58 seconds) suminf.   69.89626 (732) obj. 1.22077e+06 iterations 222
Cbc0038I Pass  28: (5.65 seconds) suminf.   69.76521 (739) obj. 1.22044e+06 iterations 154
Cbc0038I Pass  29: (5.82 seconds) suminf.   70.02970 (673) obj. 1.23922e+06 iterations 434
Cbc0038I Pass  30: (5.86 seconds) suminf.   68.63860 (683) obj. 1.23987e+06 iterations 93
Cbc0038I Pass  31: (5.91 seconds) suminf.   66.77432 (694) obj. 1.24416e+06 iterations 102
Cbc0038I Pass  32: (6.02 seconds) suminf.   66.86610 (680) obj. 1.24554e+06 iterations 239
Cbc0038I Pass  33: (6.05 seconds) suminf.   65.96921 (672) obj. 1.24583e+06 iterations 42
Cbc0038I Pass  34: (6.34 seconds) suminf.   67.12084 (648) obj. 1.23326e+06 iterations 919
Cbc0038I Pass  35: (6.38 seconds) suminf.   64.90380 (657) obj. 1.23446e+06 iterations 90
Cbc0038I Pass  36: (6.52 seconds) suminf.   65.83528 (623) obj. 1.22943e+06 iterations 352
Cbc0038I Pass  37: (6.60 seconds) suminf.   66.30418 (625) obj. 1.2281e+06 iterations 186
Cbc0038I Pass  38: (6.66 seconds) suminf.   65.89614 (603) obj. 1.22664e+06 iterations 140
Cbc0038I Pass  39: (6.81 seconds) suminf.   62.64503 (604) obj. 1.22321e+06 iterations 404
Cbc0038I Pass  40: (6.85 seconds) suminf.   62.36293 (613) obj. 1.23303e+06 iterations 109
Cbc0038I Pass  41: (7.00 seconds) suminf.   63.66854 (565) obj. 1.2264e+06 iterations 399
Cbc0038I Pass  42: (7.08 seconds) suminf.   64.14336 (586) obj. 1.23644e+06 iterations 216
Cbc0038I Pass  43: (7.17 seconds) suminf.   62.70640 (587) obj. 1.23674e+06 iterations 233
Cbc0038I Pass  44: (7.21 seconds) suminf.   62.60705 (589) obj. 1.23728e+06 iterations 90
Cbc0038I Pass  45: (7.30 seconds) suminf.   62.47447 (581) obj. 1.23829e+06 iterations 229
Cbc0038I Pass  46: (7.33 seconds) suminf.   62.57858 (589) obj. 1.23816e+06 iterations 67
Cbc0038I Pass  47: (7.37 seconds) suminf.   62.85961 (597) obj. 1.23809e+06 iterations 83
Cbc0038I Pass  48: (7.49 seconds) suminf.   62.46064 (562) obj. 1.23746e+06 iterations 303
Cbc0038I Pass  49: (7.52 seconds) suminf.   63.27344 (572) obj. 1.23847e+06 iterations 58
Cbc0038I Pass  50: (7.56 seconds) suminf.   63.23281 (565) obj. 1.23894e+06 iterations 83
Cbc0038I Pass  51: (7.62 seconds) suminf.   61.34683 (561) obj. 1.23931e+06 iterations 153
Cbc0038I Pass  52: (7.63 seconds) suminf.   61.91943 (562) obj. 1.2393e+06 iterations 8
Cbc0038I Pass  53: (7.74 seconds) suminf.   57.83484 (548) obj. 1.23666e+06 iterations 266
Cbc0038I Pass  54: (7.76 seconds) suminf.   58.02737 (557) obj. 1.23709e+06 iterations 54
Cbc0038I Pass  55: (7.88 seconds) suminf.   57.81236 (486) obj. 1.24954e+06 iterations 322
Cbc0038I Pass  56: (7.93 seconds) suminf.   56.95935 (489) obj. 1.24933e+06 iterations 110
Cbc0038I Pass  57: (7.96 seconds) suminf.   56.08744 (506) obj. 1.24898e+06 iterations 73
Cbc0038I Pass  58: (8.07 seconds) suminf.   54.57305 (514) obj. 1.24869e+06 iterations 311
Cbc0038I Pass  59: (8.09 seconds) suminf.   53.90783 (511) obj. 1.24893e+06 iterations 23
Cbc0038I Pass  60: (8.22 seconds) suminf.   51.67568 (469) obj. 1.28405e+06 iterations 409
Cbc0038I Pass  61: (8.29 seconds) suminf.   50.32503 (463) obj. 1.28749e+06 iterations 174
Cbc0038I Pass  62: (8.32 seconds) suminf.   49.93677 (463) obj. 1.28752e+06 iterations 74
Cbc0038I Pass  63: (8.40 seconds) suminf.   51.76795 (472) obj. 1.30038e+06 iterations 222
Cbc0038I Pass  64: (8.45 seconds) suminf.   51.16608 (464) obj. 1.3003e+06 iterations 135
Cbc0038I Pass  65: (8.46 seconds) suminf.   51.16608 (464) obj. 1.3003e+06 iterations 4
Cbc0038I Pass  66: (8.52 seconds) suminf.   50.46209 (463) obj. 1.30186e+06 iterations 150
Cbc0038I Pass  67: (8.54 seconds) suminf.   49.58110 (461) obj. 1.30205e+06 iterations 20
Cbc0038I Pass  68: (8.75 seconds) suminf.   46.41405 (465) obj. 1.35146e+06 iterations 713
Cbc0038I Pass  69: (8.88 seconds) suminf.   45.46059 (453) obj. 1.35166e+06 iterations 397
Cbc0038I Pass  70: (9.05 seconds) suminf.   48.03128 (446) obj. 1.35143e+06 iterations 548
Cbc0038I Pass  71: (9.12 seconds) suminf.   47.08931 (433) obj. 1.35144e+06 iterations 210
Cbc0038I Pass  72: (9.27 seconds) suminf.   47.20835 (422) obj. 1.3514e+06 iterations 482
Cbc0038I Pass  73: (9.35 seconds) suminf.   45.84500 (424) obj. 1.3516e+06 iterations 238
Cbc0038I Pass  74: (9.41 seconds) suminf.   45.53777 (414) obj. 1.35159e+06 iterations 191
Cbc0038I Pass  75: (9.43 seconds) suminf.   45.40797 (414) obj. 1.35159e+06 iterations 40
Cbc0038I Pass  76: (9.64 seconds) suminf.   46.07922 (413) obj. 1.35153e+06 iterations 758
Cbc0038I Pass  77: (9.75 seconds) suminf.   45.24728 (416) obj. 1.35148e+06 iterations 335
Cbc0038I Pass  78: (9.89 seconds) suminf.   42.07115 (434) obj. 1.35143e+06 iterations 482
Cbc0038I Pass  79: (10.00 seconds) suminf.   39.69311 (426) obj. 1.3513e+06 iterations 308
Cbc0038I Pass  80: (10.10 seconds) suminf.   38.46145 (393) obj. 1.35147e+06 iterations 294
Cbc0038I Pass  81: (10.15 seconds) suminf.   39.13103 (425) obj. 1.35154e+06 iterations 123
Cbc0038I Pass  82: (10.28 seconds) suminf.   39.42777 (413) obj. 1.34999e+06 iterations 456
Cbc0038I Pass  83: (10.35 seconds) suminf.   39.69644 (410) obj. 1.34999e+06 iterations 167
Cbc0038I Pass  84: (10.45 seconds) suminf.   38.01286 (388) obj. 1.34981e+06 iterations 294
Cbc0038I Pass  85: (10.49 seconds) suminf.   36.34137 (390) obj. 1.34983e+06 iterations 125
Cbc0038I Pass  86: (10.51 seconds) suminf.   36.15040 (388) obj. 1.35001e+06 iterations 12
Cbc0038I Pass  87: (10.62 seconds) suminf.   37.84784 (382) obj. 1.34997e+06 iterations 316
Cbc0038I Pass  88: (10.66 seconds) suminf.   35.83397 (399) obj. 1.34995e+06 iterations 109
Cbc0038I Pass  89: (10.79 seconds) suminf.   35.62605 (391) obj. 1.36731e+06 iterations 474
Cbc0038I Pass  90: (10.81 seconds) suminf.   34.51216 (389) obj. 1.37009e+06 iterations 30
Cbc0038I Pass  91: (10.86 seconds) suminf.   36.04743 (394) obj. 1.38651e+06 iterations 153
Cbc0038I Pass  92: (10.91 seconds) suminf.   33.96917 (381) obj. 1.36725e+06 iterations 155
Cbc0038I Pass  93: (11.05 seconds) suminf.   36.14697 (383) obj. 1.43541e+06 iterations 449
Cbc0038I Pass  94: (11.14 seconds) suminf.   33.04513 (359) obj. 1.35147e+06 iterations 267
Cbc0038I Pass  95: (11.34 seconds) suminf.   33.65812 (397) obj. 1.38675e+06 iterations 683
Cbc0038I Pass  96: (11.38 seconds) suminf.   31.85353 (385) obj. 1.38937e+06 iterations 119
Cbc0038I Pass  97: (11.52 seconds) suminf.   35.01317 (374) obj. 1.50849e+06 iterations 401
Cbc0038I Pass  98: (11.56 seconds) suminf.   35.39594 (369) obj. 1.57092e+06 iterations 119
Cbc0038I Pass  99: (11.62 seconds) suminf.   34.56499 (368) obj. 1.56999e+06 iterations 118
Cbc0038I Pass 100: (11.93 seconds) suminf.   67.17639 (520) obj. 1.56701e+06 iterations 1185
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8730 rows 2792 columns, reduced to 3589 rows 1131 columns
Cbc0038I Mini branch and bound did not improve solution (17.73 seconds)
Cbc0038I After 17.73 seconds - Feasibility pump exiting - took 16.06 seconds
Cbc0031I 37 added rows had average density of 6.8378378
Cbc0013I At root node, 37 cuts changed objective from 1032192 to 1032192 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.207 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 47.6 elements, 0 column cuts (0 active)  in 1.437 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 81 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.666 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1032192 (28.73 seconds)
Cbc0010I After 100 nodes, 8 on tree, 1e+50 best solution, best possible 1032192 (195.66 seconds)
Cbc0010I After 200 nodes, 20 on tree, 1e+50 best solution, best possible 1032192 (338.50 seconds)
Cbc0010I After 300 nodes, 18 on tree, 1e+50 best solution, best possible 1032192 (487.71 seconds)
Cbc0010I After 400 nodes, 15 on tree, 1e+50 best solution, best possible 1032192 (674.50 seconds)
Cbc0010I After 500 nodes, 15 on tree, 1e+50 best solution, best possible 1032192 (844.94 seconds)
Cbc0010I After 600 nodes, 24 on tree, 1e+50 best solution, best possible 1032192 (1032.28 seconds)
Cbc0010I After 700 nodes, 37 on tree, 1e+50 best solution, best possible 1032192 (1196.84 seconds)
Cbc0010I After 800 nodes, 36 on tree, 1e+50 best solution, best possible 1032192 (1374.18 seconds)
Cbc0010I After 900 nodes, 23 on tree, 1e+50 best solution, best possible 1032192 (1768.74 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1032192), took 2677461 iterations and 920 nodes (1799.78 seconds)
Cbc0032I Strong branching done 10340 times (801448 iterations), fathomed 96 nodes and fixed 1088 variables
Cbc0035I Maximum depth 63, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.03219e+06 to 1.03219e+06
Probing was tried 152 times and created 19187 cuts of which 0 were active after adding rounds of cuts (0.985 seconds)
Gomory was tried 140 times and created 416 cuts of which 0 were active after adding rounds of cuts (3.314 seconds)
Knapsack was tried 140 times and created 915 cuts of which 0 were active after adding rounds of cuts (0.412 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
TwoMirCuts was tried 10 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.666 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.118 seconds)
ImplicationCuts was tried 32 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1032192.000
Enumerated nodes:               920
Total iterations:               2677461
Time (CPU seconds):             1799.78
Time (Wallclock seconds):       1800.14

Total time (CPU seconds):       1799.83   (Wallclock seconds):       1800.19

