Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_1_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang8_1_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 275.954 - 0.53 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 646 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 263 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 115 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2628 rows, 916 columns (916 integer (880 of which binary)) and 8935 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 454 integers unsatisfied sum - 113.468
Cbc0038I Pass   1: suminf.   33.52713 (255) obj. 324.431 iterations 882
Cbc0038I Pass   2: suminf.   26.97667 (196) obj. 343.505 iterations 138
Cbc0038I Pass   3: suminf.   24.51679 (188) obj. 343.349 iterations 54
Cbc0038I Pass   4: suminf.   23.15730 (190) obj. 343.667 iterations 56
Cbc0038I Pass   5: suminf.   23.05647 (198) obj. 343.745 iterations 23
Cbc0038I Pass   6: suminf.   19.30384 (165) obj. 342.515 iterations 161
Cbc0038I Pass   7: suminf.   18.95268 (169) obj. 342.826 iterations 90
Cbc0038I Pass   8: suminf.   13.20640 (126) obj. 319.254 iterations 193
Cbc0038I Pass   9: suminf.   11.91162 (105) obj. 318.699 iterations 108
Cbc0038I Pass  10: suminf.   10.36845 (97) obj. 320 iterations 109
Cbc0038I Pass  11: suminf.    3.43031 (53) obj. 320 iterations 229
Cbc0038I Pass  12: suminf.    3.23687 (53) obj. 320 iterations 33
Cbc0038I Pass  13: suminf.    5.05229 (75) obj. 354.295 iterations 707
Cbc0038I Pass  14: suminf.    4.01572 (83) obj. 354.414 iterations 99
Cbc0038I Pass  15: suminf.    3.16296 (26) obj. 354.414 iterations 78
Cbc0038I Pass  16: suminf.    3.16296 (26) obj. 354.414 iterations 0
Cbc0038I Pass  17: suminf.    7.33874 (48) obj. 401.596 iterations 175
Cbc0038I Pass  18: suminf.    5.28910 (42) obj. 400.916 iterations 51
Cbc0038I Pass  19: suminf.    5.28910 (42) obj. 400.916 iterations 5
Cbc0038I Pass  20: suminf.    0.00000 (0) obj. 376 iterations 60
Cbc0038I Solution found of 376
Cbc0038I Cleaned solution of 376
Cbc0038I Before mini branch and bound, 349 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1877 rows 567 columns - 46 fixed gives 1521, 430 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.89 seconds)
Cbc0038I Round again with cutoff of 365.096
Cbc0038I Pass  21: suminf.   33.52713 (255) obj. 324.431 iterations 0
Cbc0038I Pass  22: suminf.   26.97667 (196) obj. 343.505 iterations 159
Cbc0038I Pass  23: suminf.   24.51679 (188) obj. 343.349 iterations 44
Cbc0038I Pass  24: suminf.   23.15730 (190) obj. 343.667 iterations 36
Cbc0038I Pass  25: suminf.   23.05647 (198) obj. 343.745 iterations 20
Cbc0038I Pass  26: suminf.   21.71990 (169) obj. 343.168 iterations 154
Cbc0038I Pass  27: suminf.   20.03523 (168) obj. 342.725 iterations 89
Cbc0038I Pass  28: suminf.   19.80088 (170) obj. 343.001 iterations 61
Cbc0038I Pass  29: suminf.   18.39044 (166) obj. 341.976 iterations 105
Cbc0038I Pass  30: suminf.   17.87721 (169) obj. 342.482 iterations 15
Cbc0038I Pass  31: suminf.   17.88183 (168) obj. 342.485 iterations 10
Cbc0038I Pass  32: suminf.   14.69182 (143) obj. 350.39 iterations 189
Cbc0038I Pass  33: suminf.   14.65893 (144) obj. 350.398 iterations 29
Cbc0038I Pass  34: suminf.    6.57352 (91) obj. 320 iterations 172
Cbc0038I Pass  35: suminf.    6.55354 (91) obj. 320 iterations 15
Cbc0038I Pass  36: suminf.    7.00589 (79) obj. 328.682 iterations 374
Cbc0038I Pass  37: suminf.    5.71642 (79) obj. 359.022 iterations 22
Cbc0038I Pass  38: suminf.    6.14245 (79) obj. 359.541 iterations 2
Cbc0038I Pass  39: suminf.    6.34224 (79) obj. 359.286 iterations 253
Cbc0038I Pass  40: suminf.    3.14783 (39) obj. 359.176 iterations 45
Cbc0038I Pass  41: suminf.    5.47669 (33) obj. 320 iterations 53
Cbc0038I Pass  42: suminf.    3.58041 (33) obj. 320 iterations 62
Cbc0038I Pass  43: suminf.    2.18305 (12) obj. 338 iterations 98
Cbc0038I Pass  44: suminf.    0.00000 (0) obj. 338 iterations 16
Cbc0038I Solution found of 338
Cbc0038I Cleaned solution of 338
Cbc0038I Before mini branch and bound, 356 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.13 seconds)
Cbc0038I Round again with cutoff of 324.792
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  45: suminf.   33.59647 (265) obj. 324.441 iterations 5
Cbc0038I Pass  46: suminf.   26.28627 (211) obj. 324.792 iterations 172
Cbc0038I Pass  47: suminf.   24.83677 (197) obj. 324.792 iterations 76
Cbc0038I Pass  48: suminf.   24.55219 (196) obj. 324.792 iterations 61
Cbc0038I Pass  49: suminf.   23.76476 (206) obj. 324.792 iterations 73
Cbc0038I Pass  50: suminf.   23.48327 (179) obj. 322.187 iterations 164
Cbc0038I Pass  51: suminf.   20.47990 (165) obj. 324.792 iterations 113
Cbc0038I Pass  52: suminf.   18.95187 (162) obj. 324.792 iterations 44
Cbc0038I Pass  53: suminf.   18.59371 (156) obj. 324.792 iterations 57
Cbc0038I Pass  54: suminf.   14.88920 (131) obj. 320 iterations 182
Cbc0038I Pass  55: suminf.   14.07483 (144) obj. 324.792 iterations 68
Cbc0038I Pass  56: suminf.   10.33076 (108) obj. 324.792 iterations 188
Cbc0038I Pass  57: suminf.    9.16320 (96) obj. 324.792 iterations 50
Cbc0038I Pass  58: suminf.   12.34609 (123) obj. 324.792 iterations 137
Cbc0038I Pass  59: suminf.   10.02930 (121) obj. 324.792 iterations 83
Cbc0038I Pass  60: suminf.    4.81420 (71) obj. 324.792 iterations 256
Cbc0038I Pass  61: suminf.    3.58784 (59) obj. 324.792 iterations 1
Cbc0038I Pass  62: suminf.    2.83085 (38) obj. 324.792 iterations 123
Cbc0038I Pass  63: suminf.    2.76885 (40) obj. 324.792 iterations 7
Cbc0038I Pass  64: suminf.    0.99192 (23) obj. 324.792 iterations 35
Cbc0038I Pass  65: suminf.    0.91903 (34) obj. 324.792 iterations 78
Cbc0038I Pass  66: suminf.    0.20805 (1) obj. 324.792 iterations 84
Cbc0038I Solution found of 324.792
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2629 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 320
Cbc0038I Before mini branch and bound, 339 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1901 rows 577 columns - 123 fixed gives 1199, 325 - ok now
Cbc0038I Full problem 2628 rows 916 columns, reduced to 117 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (2.53 seconds)
Cbc0038I Round again with cutoff of 306.088
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 4
Cbc0038I Pass  67: suminf.   34.59136 (271) obj. 306 iterations 66
Cbc0038I Pass  68: suminf.   29.04493 (235) obj. 306.088 iterations 229
Cbc0038I Pass  69: suminf.   25.99081 (224) obj. 306.088 iterations 62
Cbc0038I Pass  70: suminf.   25.99786 (221) obj. 306.088 iterations 26
Cbc0038I Pass  71: suminf.   22.21858 (198) obj. 306.088 iterations 229
Cbc0038I Pass  72: suminf.   18.05139 (189) obj. 306.088 iterations 115
Cbc0038I Pass  73: suminf.   18.05139 (189) obj. 306.088 iterations 5
Cbc0038I Pass  74: suminf.   12.32356 (159) obj. 306.088 iterations 242
Cbc0038I Pass  75: suminf.   11.77723 (158) obj. 306.088 iterations 30
Cbc0038I Pass  76: suminf.   13.46064 (166) obj. 306.088 iterations 206
Cbc0038I Pass  77: suminf.   13.31370 (161) obj. 306.088 iterations 20
Cbc0038I Pass  78: suminf.   12.21532 (177) obj. 306.088 iterations 212
Cbc0038I Pass  79: suminf.    7.81245 (160) obj. 306.088 iterations 52
Cbc0038I Pass  80: suminf.   12.11269 (141) obj. 306.088 iterations 264
Cbc0038I Pass  81: suminf.   10.54966 (150) obj. 306.088 iterations 59
Cbc0038I Pass  82: suminf.   10.49516 (151) obj. 306.088 iterations 5
Cbc0038I Pass  83: suminf.    8.25673 (154) obj. 306.088 iterations 130
Cbc0038I Pass  84: suminf.    7.59240 (147) obj. 306.088 iterations 47
Cbc0038I Pass  85: suminf.   13.87988 (161) obj. 306.088 iterations 139
Cbc0038I Pass  86: suminf.   12.82065 (163) obj. 306.088 iterations 57
Cbc0038I Pass  87: suminf.    9.88302 (143) obj. 306.088 iterations 165
Cbc0038I Pass  88: suminf.    9.97832 (148) obj. 306.088 iterations 46
Cbc0038I Pass  89: suminf.   15.66368 (175) obj. 306.088 iterations 301
Cbc0038I Pass  90: suminf.   15.13266 (166) obj. 306.088 iterations 72
Cbc0038I Pass  91: suminf.   13.50098 (168) obj. 306.088 iterations 37
Cbc0038I Pass  92: suminf.   12.17562 (156) obj. 306.088 iterations 20
Cbc0038I Pass  93: suminf.   11.78816 (139) obj. 306.088 iterations 190
Cbc0038I Pass  94: suminf.   10.19519 (151) obj. 306.088 iterations 54
Cbc0038I Pass  95: suminf.    8.99726 (153) obj. 306.088 iterations 33
Cbc0038I Pass  96: suminf.   11.35827 (139) obj. 306.088 iterations 165
Cbc0038I Pass  97: suminf.   10.51430 (141) obj. 306.088 iterations 86
Cbc0038I Pass  98: suminf.    8.88122 (153) obj. 306.088 iterations 322
Cbc0038I Pass  99: suminf.    8.88122 (153) obj. 306.088 iterations 15
Cbc0038I Pass 100: suminf.    8.27415 (119) obj. 306.088 iterations 265
Cbc0038I Pass 101: suminf.    6.09994 (121) obj. 306.088 iterations 48
Cbc0038I Pass 102: suminf.    9.27327 (126) obj. 306.088 iterations 73
Cbc0038I Pass 103: suminf.    8.83514 (124) obj. 306.088 iterations 22
Cbc0038I Pass 104: suminf.   10.52090 (125) obj. 306.088 iterations 189
Cbc0038I Pass 105: suminf.    9.89259 (121) obj. 306.088 iterations 44
Cbc0038I Pass 106: suminf.    9.11054 (123) obj. 306.088 iterations 5
Cbc0038I Pass 107: suminf.    9.61536 (128) obj. 306.088 iterations 256
Cbc0038I Pass 108: suminf.    5.97856 (120) obj. 306.088 iterations 47
Cbc0038I Pass 109: suminf.    6.38476 (116) obj. 306.088 iterations 49
Cbc0038I Pass 110: suminf.    7.26698 (134) obj. 306.088 iterations 86
Cbc0038I Pass 111: suminf.    6.80133 (135) obj. 306.088 iterations 40
Cbc0038I Pass 112: suminf.    9.54402 (121) obj. 306.088 iterations 341
Cbc0038I Pass 113: suminf.    8.39096 (127) obj. 306.088 iterations 104
Cbc0038I Pass 114: suminf.    8.55539 (126) obj. 306.088 iterations 64
Cbc0038I Pass 115: suminf.    9.56783 (93) obj. 306.088 iterations 288
Cbc0038I Pass 116: suminf.    7.38982 (101) obj. 306.088 iterations 90
Cbc0038I Pass 117: suminf.    6.33838 (103) obj. 306.088 iterations 52
Cbc0038I Pass 118: suminf.    8.16718 (90) obj. 306.088 iterations 111
Cbc0038I Pass 119: suminf.    7.02010 (98) obj. 306.088 iterations 67
Cbc0038I Pass 120: suminf.    6.99752 (92) obj. 306.088 iterations 48
Cbc0038I Pass 121: suminf.   11.68789 (84) obj. 306.088 iterations 150
Cbc0038I Pass 122: suminf.    8.96338 (80) obj. 306.088 iterations 79
Cbc0038I Pass 123: suminf.    8.94297 (81) obj. 306.088 iterations 47
Cbc0038I Pass 124: suminf.    6.41751 (81) obj. 306.088 iterations 102
Cbc0038I Pass 125: suminf.    6.34645 (77) obj. 306.088 iterations 74
Cbc0038I Pass 126: suminf.   11.99976 (88) obj. 306.088 iterations 144
Cbc0038I Pass 127: suminf.    7.51212 (90) obj. 306.088 iterations 86
Cbc0038I Pass 128: suminf.    6.21728 (83) obj. 306.088 iterations 85
Cbc0038I Pass 129: suminf.    6.17696 (83) obj. 306.088 iterations 24
Cbc0038I Pass 130: suminf.    9.74453 (91) obj. 306.088 iterations 191
Cbc0038I Pass 131: suminf.    8.88253 (89) obj. 306.088 iterations 29
Cbc0038I Pass 132: suminf.    7.16688 (88) obj. 306.088 iterations 152
Cbc0038I Pass 133: suminf.    5.84821 (88) obj. 306.088 iterations 31
Cbc0038I Pass 134: suminf.    8.28618 (75) obj. 306.088 iterations 128
Cbc0038I Pass 135: suminf.    8.19861 (73) obj. 306.088 iterations 24
Cbc0038I Pass 136: suminf.    8.06568 (74) obj. 306.088 iterations 61
Cbc0038I Pass 137: suminf.    7.75009 (74) obj. 306.088 iterations 25
Cbc0038I Pass 138: suminf.    7.75009 (74) obj. 306.088 iterations 0
Cbc0038I Pass 139: suminf.    8.16275 (81) obj. 306.088 iterations 146
Cbc0038I Pass 140: suminf.    5.87507 (80) obj. 306.088 iterations 119
Cbc0038I Pass 141: suminf.    8.42159 (91) obj. 306.088 iterations 127
Cbc0038I Pass 142: suminf.    7.30657 (91) obj. 306.088 iterations 60
Cbc0038I Pass 143: suminf.    4.72829 (74) obj. 306.088 iterations 140
Cbc0038I Pass 144: suminf.    4.72829 (74) obj. 306.088 iterations 3
Cbc0038I Pass 145: suminf.   14.37532 (101) obj. 306.088 iterations 198
Cbc0038I Pass 146: suminf.   14.26491 (102) obj. 306.088 iterations 13
Cbc0038I Pass 147: suminf.   12.77869 (104) obj. 306.088 iterations 329
Cbc0038I Pass 148: suminf.   10.26572 (98) obj. 306.088 iterations 207
Cbc0038I Pass 149: suminf.    5.83163 (98) obj. 306.088 iterations 214
Cbc0038I Pass 150: suminf.    4.64906 (102) obj. 306.088 iterations 24
Cbc0038I Pass 151: suminf.   10.77914 (94) obj. 306.088 iterations 123
Cbc0038I Pass 152: suminf.    7.54496 (103) obj. 306.088 iterations 85
Cbc0038I Pass 153: suminf.    5.04465 (98) obj. 306.088 iterations 55
Cbc0038I Pass 154: suminf.   10.52162 (73) obj. 306.088 iterations 192
Cbc0038I Pass 155: suminf.   10.39195 (76) obj. 306.088 iterations 56
Cbc0038I Pass 156: suminf.   10.39589 (66) obj. 306.088 iterations 126
Cbc0038I Pass 157: suminf.    8.12691 (68) obj. 306.088 iterations 71
Cbc0038I Pass 158: suminf.    6.46778 (67) obj. 306.088 iterations 232
Cbc0038I Pass 159: suminf.    6.46778 (67) obj. 306.088 iterations 30
Cbc0038I Pass 160: suminf.    7.68822 (77) obj. 306.088 iterations 248
Cbc0038I Pass 161: suminf.    7.78985 (85) obj. 306.088 iterations 58
Cbc0038I Pass 162: suminf.    6.88215 (54) obj. 306.088 iterations 175
Cbc0038I Pass 163: suminf.    5.57070 (58) obj. 306.088 iterations 94
Cbc0038I Pass 164: suminf.    9.91301 (61) obj. 306.088 iterations 296
Cbc0038I Pass 165: suminf.    8.55758 (66) obj. 306.088 iterations 84
Cbc0038I Pass 166: suminf.   40.93138 (233) obj. 306.088 iterations 742
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 279 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 2033 rows 637 columns - 125 fixed gives 1284, 362 - ok now
Cbc0038I Mini branch and bound did not improve solution (3.89 seconds)
Cbc0038I After 3.89 seconds - Feasibility pump exiting with objective of 320 - took 2.53 seconds
Cbc0012I Integer solution of 320 found by feasibility pump after 0 iterations and 0 nodes (3.89 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1677 rows 470 columns - 119 fixed gives 771, 265 - ok now
Cbc0031I 31 added rows had average density of 7.1290323
Cbc0013I At root node, 31 cuts changed objective from 275.95934 to 276.07167 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 86 row cuts average 2.9 elements, 25 column cuts (25 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 13.2 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 11 row cuts average 17.9 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 320 best solution, best possible 277 (4.90 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1623 rows 448 columns - 114 fixed gives 774, 267 - ok now
Cbc0038I Full problem 2628 rows 916 columns, reduced to 684 rows 211 columns
Cbc0010I After 100 nodes, 2 on tree, 320 best solution, best possible 282 (23.26 seconds)
Cbc0010I After 200 nodes, 4 on tree, 320 best solution, best possible 285 (36.71 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 771 rows 225 columns
Cbc0010I After 300 nodes, 7 on tree, 320 best solution, best possible 287 (46.82 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 545 rows 161 columns
Cbc0010I After 400 nodes, 14 on tree, 320 best solution, best possible 287 (52.02 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 793 rows 242 columns
Cbc0010I After 500 nodes, 19 on tree, 320 best solution, best possible 287 (59.26 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 520 rows 152 columns
Cbc0010I After 600 nodes, 18 on tree, 320 best solution, best possible 287 (66.95 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 750 rows 230 columns
Cbc0010I After 700 nodes, 10 on tree, 320 best solution, best possible 287 (75.83 seconds)
Cbc0010I After 800 nodes, 6 on tree, 320 best solution, best possible 287 (85.90 seconds)
Cbc0010I After 900 nodes, 5 on tree, 320 best solution, best possible 288 (93.39 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 788 rows 232 columns
Cbc0038I Full problem 2628 rows 916 columns, reduced to 786 rows 235 columns
Cbc0010I After 1000 nodes, 9 on tree, 320 best solution, best possible 289 (100.14 seconds)
Cbc0010I After 1100 nodes, 13 on tree, 320 best solution, best possible 289 (107.22 seconds)
Cbc0010I After 1200 nodes, 4 on tree, 320 best solution, best possible 289 (114.28 seconds)
Cbc0010I After 1300 nodes, 5 on tree, 320 best solution, best possible 292 (120.21 seconds)
Cbc0010I After 1400 nodes, 8 on tree, 320 best solution, best possible 293 (124.54 seconds)
Cbc0010I After 1500 nodes, 9 on tree, 320 best solution, best possible 294 (130.68 seconds)
Cbc0010I After 1600 nodes, 6 on tree, 320 best solution, best possible 297 (134.57 seconds)
Cbc0010I After 1700 nodes, 2 on tree, 320 best solution, best possible 298 (138.14 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 320 best solution, best possible 299 (141.09 seconds)
Cbc0010I After 1900 nodes, 15 on tree, 320 best solution, best possible 300 (144.61 seconds)
Cbc0010I After 2000 nodes, 10 on tree, 320 best solution, best possible 300 (147.57 seconds)
Cbc0010I After 2100 nodes, 12 on tree, 320 best solution, best possible 300 (151.98 seconds)
Cbc0010I After 2200 nodes, 8 on tree, 320 best solution, best possible 300 (154.91 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 524 rows 156 columns
Cbc0010I After 2300 nodes, 7 on tree, 320 best solution, best possible 301 (157.95 seconds)
Cbc0010I After 2400 nodes, 10 on tree, 320 best solution, best possible 301 (161.15 seconds)
Cbc0010I After 2500 nodes, 10 on tree, 320 best solution, best possible 303 (164.89 seconds)
Cbc0010I After 2600 nodes, 8 on tree, 320 best solution, best possible 303 (168.35 seconds)
Cbc0010I After 2700 nodes, 6 on tree, 320 best solution, best possible 304 (172.12 seconds)
Cbc0010I After 2800 nodes, 10 on tree, 320 best solution, best possible 305 (175.24 seconds)
Cbc0010I After 2900 nodes, 16 on tree, 320 best solution, best possible 306 (178.47 seconds)
Cbc0010I After 3000 nodes, 8 on tree, 320 best solution, best possible 306 (181.55 seconds)
Cbc0010I After 3100 nodes, 2 on tree, 320 best solution, best possible 306 (184.18 seconds)
Cbc0016I Integer solution of 307 found by strong branching after 800313 iterations and 3180 nodes (186.80 seconds)
Cbc0001I Search completed - best objective 307, took 800423 iterations and 3180 nodes (186.81 seconds)
Cbc0032I Strong branching done 10744 times (483678 iterations), fathomed 169 nodes and fixed 448 variables
Cbc0035I Maximum depth 47, 8 variables fixed on reduced cost
Cuts at root node changed objective from 275.959 to 277
Probing was tried 697 times and created 34125 cuts of which 0 were active after adding rounds of cuts (1.590 seconds)
Gomory was tried 342 times and created 162 cuts of which 0 were active after adding rounds of cuts (0.784 seconds)
Knapsack was tried 342 times and created 2190 cuts of which 0 were active after adding rounds of cuts (0.325 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 9 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.077 seconds)
ZeroHalf was tried 9 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.131 seconds)
ImplicationCuts was tried 87 times and created 121 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                307.00000000
Enumerated nodes:               3180
Total iterations:               800423
Time (CPU seconds):             186.90
Time (Wallclock seconds):       187.06

Total time (CPU seconds):       186.92   (Wallclock seconds):       187.08

