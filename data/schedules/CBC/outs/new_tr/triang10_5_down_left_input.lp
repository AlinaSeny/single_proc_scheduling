Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_5_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang10_5_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 322.496 - 5.19 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1599 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 6703 rows, 2298 columns (2298 integer (2243 of which binary)) and 21745 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1168 integers unsatisfied sum - 203.814
Cbc0038I Pass   1: (9.21 seconds) suminf.   97.66160 (952) obj. 377.822 iterations 2893
Cbc0038I Pass   2: (9.42 seconds) suminf.   89.73934 (993) obj. 383.22 iterations 394
Cbc0038I Pass   3: (9.47 seconds) suminf.   87.51804 (977) obj. 381.757 iterations 81
Cbc0038I Pass   4: (9.54 seconds) suminf.   86.25660 (983) obj. 380.368 iterations 98
Cbc0038I Pass   5: (9.81 seconds) suminf.   82.55591 (921) obj. 441.375 iterations 547
Cbc0038I Pass   6: (9.84 seconds) suminf.   81.97386 (924) obj. 441.773 iterations 31
Cbc0038I Pass   7: (10.09 seconds) suminf.   76.46321 (918) obj. 446.277 iterations 540
Cbc0038I Pass   8: (10.16 seconds) suminf.   76.20903 (918) obj. 446.123 iterations 107
Cbc0038I Pass   9: (10.26 seconds) suminf.   72.64712 (926) obj. 447.317 iterations 164
Cbc0038I Pass  10: (10.47 seconds) suminf.   69.50864 (962) obj. 444.515 iterations 481
Cbc0038I Pass  11: (10.59 seconds) suminf.   67.42618 (954) obj. 442.766 iterations 185
Cbc0038I Pass  12: (10.74 seconds) suminf.   65.46094 (976) obj. 432.505 iterations 255
Cbc0038I Pass  13: (10.79 seconds) suminf.   64.60769 (978) obj. 432.586 iterations 76
Cbc0038I Pass  14: (11.09 seconds) suminf.   66.31149 (939) obj. 429.159 iterations 634
Cbc0038I Pass  15: (11.28 seconds) suminf.   63.97276 (960) obj. 430.857 iterations 355
Cbc0038I Pass  16: (11.29 seconds) suminf.   64.30425 (961) obj. 430.589 iterations 7
Cbc0038I Pass  17: (11.55 seconds) suminf.   66.29307 (942) obj. 428.357 iterations 558
Cbc0038I Pass  18: (11.73 seconds) suminf.   63.30022 (925) obj. 428.454 iterations 342
Cbc0038I Pass  19: (11.82 seconds) suminf.   62.43994 (920) obj. 428.081 iterations 149
Cbc0038I Pass  20: (12.07 seconds) suminf.   70.06620 (907) obj. 428.494 iterations 531
Cbc0038I Pass  21: (12.12 seconds) suminf.   68.56638 (919) obj. 428.559 iterations 95
Cbc0038I Pass  22: (12.38 seconds) suminf.   69.74445 (890) obj. 430.937 iterations 564
Cbc0038I Pass  23: (12.53 seconds) suminf.   69.91748 (931) obj. 428.188 iterations 227
Cbc0038I Pass  24: (12.76 seconds) suminf.   65.30704 (901) obj. 427.135 iterations 473
Cbc0038I Pass  25: (12.82 seconds) suminf.   63.22815 (921) obj. 427.071 iterations 99
Cbc0038I Pass  26: (12.86 seconds) suminf.   62.92026 (925) obj. 427.059 iterations 56
Cbc0038I Pass  27: (13.02 seconds) suminf.   67.62958 (897) obj. 428.015 iterations 299
Cbc0038I Pass  28: (13.05 seconds) suminf.   67.11947 (899) obj. 427.979 iterations 48
Cbc0038I Pass  29: (13.24 seconds) suminf.   67.46469 (929) obj. 424.976 iterations 387
Cbc0038I Pass  30: (13.38 seconds) suminf.   64.23666 (918) obj. 426.442 iterations 212
Cbc0038I Pass  31: (13.39 seconds) suminf.   63.65462 (919) obj. 427.27 iterations 18
Cbc0038I Pass  32: (13.56 seconds) suminf.   65.08025 (891) obj. 430.033 iterations 325
Cbc0038I Pass  33: (13.59 seconds) suminf.   64.71667 (890) obj. 429.508 iterations 44
Cbc0038I Pass  34: (13.61 seconds) suminf.   64.71842 (893) obj. 429.423 iterations 24
Cbc0038I Pass  35: (13.81 seconds) suminf.   70.34452 (885) obj. 429.697 iterations 414
Cbc0038I Pass  36: (13.88 seconds) suminf.   68.60573 (874) obj. 429.312 iterations 116
Cbc0038I Pass  37: (13.92 seconds) suminf.   68.58161 (874) obj. 429.31 iterations 67
Cbc0038I Pass  38: (14.13 seconds) suminf.   68.28801 (886) obj. 431.389 iterations 443
Cbc0038I Pass  39: (14.21 seconds) suminf.   65.84502 (890) obj. 430.543 iterations 138
Cbc0038I Pass  40: (14.39 seconds) suminf.   66.92586 (886) obj. 430.472 iterations 333
Cbc0038I Pass  41: (14.46 seconds) suminf.   62.62199 (886) obj. 429.977 iterations 127
Cbc0038I Pass  42: (14.48 seconds) suminf.   62.76313 (897) obj. 430.1 iterations 29
Cbc0038I Pass  43: (14.63 seconds) suminf.   66.56141 (861) obj. 430.563 iterations 292
Cbc0038I Pass  44: (14.69 seconds) suminf.   64.40655 (865) obj. 429.704 iterations 110
Cbc0038I Pass  45: (14.72 seconds) suminf.   63.45007 (881) obj. 429.744 iterations 39
Cbc0038I Pass  46: (15.00 seconds) suminf.   68.67707 (855) obj. 496.837 iterations 641
Cbc0038I Pass  47: (15.08 seconds) suminf.   66.62128 (857) obj. 485.685 iterations 130
Cbc0038I Pass  48: (15.23 seconds) suminf.   63.52557 (841) obj. 488.065 iterations 287
Cbc0038I Pass  49: (15.38 seconds) suminf.   69.47712 (839) obj. 493.759 iterations 306
Cbc0038I Pass  50: (15.50 seconds) suminf.   66.45276 (837) obj. 485.568 iterations 198
Cbc0038I Pass  51: (15.53 seconds) suminf.   65.40434 (838) obj. 485.277 iterations 58
Cbc0038I Pass  52: (15.67 seconds) suminf.   68.42384 (856) obj. 485.754 iterations 273
Cbc0038I Pass  53: (15.73 seconds) suminf.   65.96854 (851) obj. 485.386 iterations 100
Cbc0038I Pass  54: (15.76 seconds) suminf.   65.58653 (859) obj. 485.432 iterations 31
Cbc0038I Pass  55: (15.91 seconds) suminf.   68.76287 (830) obj. 496.45 iterations 310
Cbc0038I Pass  56: (16.05 seconds) suminf.   65.72537 (848) obj. 516.982 iterations 221
Cbc0038I Pass  57: (16.11 seconds) suminf.   66.37141 (838) obj. 516.222 iterations 113
Cbc0038I Pass  58: (16.15 seconds) suminf.   65.72313 (848) obj. 511.145 iterations 76
Cbc0038I Pass  59: (16.35 seconds) suminf.   66.05078 (821) obj. 556.197 iterations 426
Cbc0038I Pass  60: (16.49 seconds) suminf.   65.86904 (830) obj. 538.12 iterations 257
Cbc0038I Pass  61: (16.55 seconds) suminf.   62.19665 (835) obj. 530.567 iterations 105
Cbc0038I Pass  62: (16.56 seconds) suminf.   62.19665 (835) obj. 530.567 iterations 3
Cbc0038I Pass  63: (16.68 seconds) suminf.   63.79797 (841) obj. 527.107 iterations 195
Cbc0038I Pass  64: (16.70 seconds) suminf.   63.38583 (836) obj. 526.905 iterations 40
Cbc0038I Pass  65: (16.76 seconds) suminf.   64.06829 (825) obj. 527.248 iterations 121
Cbc0038I Pass  66: (16.82 seconds) suminf.   64.10967 (831) obj. 526.513 iterations 110
Cbc0038I Pass  67: (16.83 seconds) suminf.   64.19835 (833) obj. 526.497 iterations 8
Cbc0038I Pass  68: (17.07 seconds) suminf.   65.98904 (786) obj. 575.54 iterations 574
Cbc0038I Pass  69: (17.21 seconds) suminf.   65.16453 (794) obj. 604.393 iterations 253
Cbc0038I Pass  70: (17.23 seconds) suminf.   65.47121 (795) obj. 604.504 iterations 25
Cbc0038I Pass  71: (17.40 seconds) suminf.   62.97638 (800) obj. 627.261 iterations 386
Cbc0038I Pass  72: (17.44 seconds) suminf.   62.97887 (795) obj. 626.943 iterations 75
Cbc0038I Pass  73: (17.46 seconds) suminf.   62.72758 (798) obj. 626.957 iterations 22
Cbc0038I Pass  74: (17.63 seconds) suminf.   61.44881 (751) obj. 624.943 iterations 343
Cbc0038I Pass  75: (17.69 seconds) suminf.   61.75203 (748) obj. 625.015 iterations 113
Cbc0038I Pass  76: (17.85 seconds) suminf.   63.64901 (760) obj. 625.093 iterations 325
Cbc0038I Pass  77: (17.94 seconds) suminf.   62.91497 (724) obj. 625.584 iterations 148
Cbc0038I Pass  78: (17.96 seconds) suminf.   62.65930 (720) obj. 625.573 iterations 35
Cbc0038I Pass  79: (18.11 seconds) suminf.   64.12778 (749) obj. 625.265 iterations 292
Cbc0038I Pass  80: (18.21 seconds) suminf.   62.55683 (731) obj. 625.944 iterations 173
Cbc0038I Pass  81: (18.24 seconds) suminf.   61.83597 (717) obj. 625.842 iterations 62
Cbc0038I Pass  82: (18.27 seconds) suminf.   61.71855 (704) obj. 625.658 iterations 44
Cbc0038I Pass  83: (18.28 seconds) suminf.   61.71855 (704) obj. 625.658 iterations 2
Cbc0038I Pass  84: (18.47 seconds) suminf.   66.38799 (670) obj. 624.666 iterations 450
Cbc0038I Pass  85: (18.56 seconds) suminf.   63.81740 (691) obj. 625.041 iterations 164
Cbc0038I Pass  86: (18.61 seconds) suminf.   61.80391 (731) obj. 625.622 iterations 101
Cbc0038I Pass  87: (18.67 seconds) suminf.   61.38923 (746) obj. 625.462 iterations 109
Cbc0038I Pass  88: (18.82 seconds) suminf.   61.90545 (687) obj. 625.074 iterations 365
Cbc0038I Pass  89: (18.89 seconds) suminf.   60.34789 (713) obj. 625.233 iterations 117
Cbc0038I Pass  90: (19.07 seconds) suminf.   63.87721 (650) obj. 624.197 iterations 379
Cbc0038I Pass  91: (19.20 seconds) suminf.   59.96059 (646) obj. 624.715 iterations 269
Cbc0038I Pass  92: (19.35 seconds) suminf.   60.92281 (637) obj. 624.648 iterations 348
Cbc0038I Pass  93: (19.40 seconds) suminf.   59.01955 (627) obj. 624.669 iterations 94
Cbc0038I Pass  94: (19.47 seconds) suminf.   58.98735 (628) obj. 624.465 iterations 131
Cbc0038I Pass  95: (19.61 seconds) suminf.   61.41686 (610) obj. 624.302 iterations 276
Cbc0038I Pass  96: (19.73 seconds) suminf.   61.65292 (613) obj. 624.083 iterations 243
Cbc0038I Pass  97: (19.75 seconds) suminf.   61.29625 (614) obj. 624.112 iterations 32
Cbc0038I Pass  98: (19.93 seconds) suminf.   62.39528 (624) obj. 624.793 iterations 390
Cbc0038I Pass  99: (20.07 seconds) suminf.   57.45138 (641) obj. 625.165 iterations 277
Cbc0038I Pass 100: (20.41 seconds) suminf.   84.49830 (632) obj. 568.057 iterations 1053
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 477 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6703 rows 2298 columns, reduced to 4713 rows 1567 columns - too large
Cbc0038I Mini branch and bound did not improve solution (20.83 seconds)
Cbc0038I After 20.83 seconds - Feasibility pump exiting - took 13.10 seconds
Cbc0031I 29 added rows had average density of 15.827586
Cbc0013I At root node, 29 cuts changed objective from 322.49573 to 332 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 141 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 50 row cuts average 222.8 elements, 0 column cuts (0 active)  in 1.426 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 74 row cuts average 27.7 elements, 0 column cuts (0 active)  in 0.586 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 332 (35.29 seconds)
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 332 (277.39 seconds)
Cbc0010I After 200 nodes, 36 on tree, 1e+50 best solution, best possible 332 (408.30 seconds)
Cbc0010I After 300 nodes, 30 on tree, 1e+50 best solution, best possible 332 (507.64 seconds)
Cbc0010I After 400 nodes, 28 on tree, 1e+50 best solution, best possible 332 (652.20 seconds)
Cbc0010I After 500 nodes, 39 on tree, 1e+50 best solution, best possible 332 (821.74 seconds)
Cbc0010I After 600 nodes, 35 on tree, 1e+50 best solution, best possible 332 (955.77 seconds)
Cbc0010I After 700 nodes, 36 on tree, 1e+50 best solution, best possible 332 (1091.15 seconds)
Cbc0010I After 800 nodes, 32 on tree, 1e+50 best solution, best possible 332 (1222.37 seconds)
Cbc0010I After 900 nodes, 37 on tree, 1e+50 best solution, best possible 332 (1328.90 seconds)
Cbc0010I After 1000 nodes, 34 on tree, 1e+50 best solution, best possible 332 (1444.87 seconds)
Cbc0010I After 1100 nodes, 29 on tree, 1e+50 best solution, best possible 332 (1573.06 seconds)
Cbc0010I After 1200 nodes, 39 on tree, 1e+50 best solution, best possible 332 (1725.19 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 332), took 2316077 iterations and 1263 nodes (1803.88 seconds)
Cbc0032I Strong branching done 12382 times (1089136 iterations), fathomed 67 nodes and fixed 673 variables
Cbc0035I Maximum depth 65, 0 variables fixed on reduced cost
Cuts at root node changed objective from 322.496 to 332
Probing was tried 234 times and created 38417 cuts of which 0 were active after adding rounds of cuts (1.622 seconds)
Gomory was tried 193 times and created 197 cuts of which 0 were active after adding rounds of cuts (3.285 seconds)
Knapsack was tried 193 times and created 1090 cuts of which 0 were active after adding rounds of cuts (0.497 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 193 times and created 5085 cuts of which 0 were active after adding rounds of cuts (1.431 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.116 seconds)
ImplicationCuts was tried 18 times and created 373 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    332.000
Enumerated nodes:               1263
Total iterations:               2316077
Time (CPU seconds):             1803.88
Time (Wallclock seconds):       1805.40

Total time (CPU seconds):       1803.93   (Wallclock seconds):       1805.45

