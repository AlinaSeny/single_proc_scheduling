Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_0_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang8_0_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 260.856 - 0.42 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 643 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2628 rows, 916 columns (916 integer (880 of which binary)) and 8555 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 476 integers unsatisfied sum - 110.254
Cbc0038I Pass   1: suminf.   47.35477 (366) obj. 352.743 iterations 1022
Cbc0038I Pass   2: suminf.   45.61699 (375) obj. 346.348 iterations 86
Cbc0038I Pass   3: suminf.   43.99420 (357) obj. 406.696 iterations 179
Cbc0038I Pass   4: suminf.   44.64794 (368) obj. 406.808 iterations 58
Cbc0038I Pass   5: suminf.   43.40236 (362) obj. 406.792 iterations 70
Cbc0038I Pass   6: suminf.   41.01384 (279) obj. 399.763 iterations 260
Cbc0038I Pass   7: suminf.   40.76118 (285) obj. 399.76 iterations 94
Cbc0038I Pass   8: suminf.   39.42776 (288) obj. 399.72 iterations 56
Cbc0038I Pass   9: suminf.   39.24473 (281) obj. 399.715 iterations 9
Cbc0038I Pass  10: suminf.   36.16377 (231) obj. 398.501 iterations 242
Cbc0038I Pass  11: suminf.   31.08757 (198) obj. 401.087 iterations 164
Cbc0038I Pass  12: suminf.   25.18982 (174) obj. 403.301 iterations 232
Cbc0038I Pass  13: suminf.   25.33832 (172) obj. 403.45 iterations 4
Cbc0038I Pass  14: suminf.   24.15053 (162) obj. 402.495 iterations 184
Cbc0038I Pass  15: suminf.   22.06094 (156) obj. 402.852 iterations 81
Cbc0038I Pass  16: suminf.   21.73751 (158) obj. 402.863 iterations 14
Cbc0038I Pass  17: suminf.   17.91631 (139) obj. 398.768 iterations 166
Cbc0038I Pass  18: suminf.   17.57352 (137) obj. 399.311 iterations 36
Cbc0038I Pass  19: suminf.   17.63491 (137) obj. 398.621 iterations 59
Cbc0038I Pass  20: suminf.   13.32825 (111) obj. 345.47 iterations 202
Cbc0038I Pass  21: suminf.   12.81798 (122) obj. 346.079 iterations 65
Cbc0038I Pass  22: suminf.    6.19190 (81) obj. 333.884 iterations 343
Cbc0038I Pass  23: suminf.    5.32396 (73) obj. 333.717 iterations 85
Cbc0038I Pass  24: suminf.    5.72996 (50) obj. 398 iterations 672
Cbc0038I Pass  25: suminf.    1.74471 (37) obj. 398 iterations 75
Cbc0038I Pass  26: suminf.    2.00280 (17) obj. 398 iterations 56
Cbc0038I Pass  27: suminf.    0.81027 (11) obj. 398 iterations 28
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 398 iterations 13
Cbc0038I Solution found of 398
Cbc0038I Cleaned solution of 398
Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 2088 rows 656 columns - 66 fixed gives 1496, 441 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.47 seconds)
Cbc0038I Round again with cutoff of 383.393
Cbc0038I Pass  29: suminf.   47.35477 (366) obj. 352.743 iterations 0
Cbc0038I Pass  30: suminf.   45.61699 (375) obj. 346.348 iterations 108
Cbc0038I Pass  31: suminf.   44.88843 (356) obj. 383.393 iterations 260
Cbc0038I Pass  32: suminf.   43.49633 (365) obj. 383.393 iterations 81
Cbc0038I Pass  33: suminf.   42.41697 (370) obj. 383.393 iterations 69
Cbc0038I Pass  34: suminf.   41.17465 (256) obj. 383.393 iterations 215
Cbc0038I Pass  35: suminf.   38.08222 (241) obj. 383.393 iterations 82
Cbc0038I Pass  36: suminf.   36.41270 (240) obj. 383.393 iterations 115
Cbc0038I Pass  37: suminf.   36.85586 (240) obj. 383.393 iterations 14
Cbc0038I Pass  38: suminf.   34.14218 (234) obj. 383.393 iterations 38
Cbc0038I Pass  39: suminf.   30.24546 (193) obj. 383.393 iterations 125
Cbc0038I Pass  40: suminf.   25.38333 (157) obj. 383.393 iterations 96
Cbc0038I Pass  41: suminf.   23.87526 (146) obj. 383.393 iterations 76
Cbc0038I Pass  42: suminf.   13.84132 (134) obj. 344.907 iterations 269
Cbc0038I Pass  43: suminf.   14.28043 (120) obj. 346.21 iterations 74
Cbc0038I Pass  44: suminf.   12.98540 (120) obj. 346.025 iterations 56
Cbc0038I Pass  45: suminf.    7.62174 (85) obj. 333.552 iterations 359
Cbc0038I Pass  46: suminf.    5.87249 (76) obj. 333.726 iterations 52
Cbc0038I Pass  47: suminf.    5.28967 (77) obj. 335.238 iterations 69
Cbc0038I Pass  48: suminf.    5.32396 (73) obj. 333.717 iterations 57
Cbc0038I Pass  49: suminf.    7.49637 (84) obj. 383.393 iterations 151
Cbc0038I Pass  50: suminf.    3.59572 (74) obj. 383.393 iterations 33
Cbc0038I Pass  51: suminf.    4.75615 (48) obj. 383.393 iterations 121
Cbc0038I Pass  52: suminf.    4.15512 (45) obj. 383.393 iterations 36
Cbc0038I Pass  53: suminf.    2.26327 (23) obj. 335.454 iterations 115
Cbc0038I Pass  54: suminf.    0.00000 (0) obj. 335 iterations 41
Cbc0038I Solution found of 335
Cbc0038I Cleaned solution of 335
Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 2086 rows 655 columns - 219 fixed gives 712, 201 - still too large
Cbc0038I Full problem 2628 rows 916 columns, reduced to 158 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (1.99 seconds)
Cbc0038I Round again with cutoff of 319.385
Cbc0038I Pass  55: suminf.   47.30620 (371) obj. 319 iterations 68
Cbc0038I Pass  56: suminf.   44.57013 (379) obj. 319.385 iterations 152
Cbc0038I Pass  57: suminf.   44.81981 (379) obj. 319.385 iterations 5
Cbc0038I Pass  58: suminf.   46.02634 (363) obj. 319.385 iterations 147
Cbc0038I Pass  59: suminf.   44.80373 (376) obj. 319.385 iterations 128
Cbc0038I Pass  60: suminf.   44.73260 (328) obj. 319.385 iterations 191
Cbc0038I Pass  61: suminf.   42.01102 (333) obj. 319.385 iterations 158
Cbc0038I Pass  62: suminf.   43.06056 (298) obj. 319.385 iterations 159
Cbc0038I Pass  63: suminf.   42.82458 (288) obj. 319.385 iterations 96
Cbc0038I Pass  64: suminf.   42.74414 (282) obj. 319.385 iterations 22
Cbc0038I Pass  65: suminf.   41.13342 (275) obj. 319.385 iterations 68
Cbc0038I Pass  66: suminf.   41.91649 (274) obj. 319.385 iterations 36
Cbc0038I Pass  67: suminf.   33.37888 (237) obj. 319.385 iterations 272
Cbc0038I Pass  68: suminf.   33.52457 (220) obj. 319.385 iterations 86
Cbc0038I Pass  69: suminf.   32.27487 (214) obj. 319.385 iterations 58
Cbc0038I Pass  70: suminf.   31.98953 (210) obj. 319.385 iterations 18
Cbc0038I Pass  71: suminf.   25.32671 (167) obj. 319.385 iterations 188
Cbc0038I Pass  72: suminf.   23.97588 (165) obj. 319.385 iterations 53
Cbc0038I Pass  73: suminf.   23.88418 (166) obj. 319.385 iterations 21
Cbc0038I Pass  74: suminf.   20.41359 (173) obj. 319.385 iterations 132
Cbc0038I Pass  75: suminf.   19.92715 (178) obj. 319.385 iterations 65
Cbc0038I Pass  76: suminf.   21.46564 (160) obj. 319.385 iterations 179
Cbc0038I Pass  77: suminf.   14.81234 (161) obj. 319.385 iterations 162
Cbc0038I Pass  78: suminf.   14.72013 (154) obj. 319.385 iterations 51
Cbc0038I Pass  79: suminf.   17.35406 (153) obj. 319.385 iterations 92
Cbc0038I Pass  80: suminf.   16.14716 (151) obj. 319.385 iterations 36
Cbc0038I Pass  81: suminf.   13.71150 (126) obj. 319.385 iterations 156
Cbc0038I Pass  82: suminf.   12.80961 (140) obj. 319.385 iterations 70
Cbc0038I Pass  83: suminf.   14.90169 (127) obj. 319.385 iterations 103
Cbc0038I Pass  84: suminf.   14.86606 (126) obj. 319.385 iterations 19
Cbc0038I Pass  85: suminf.    8.98420 (82) obj. 319.385 iterations 117
Cbc0038I Pass  86: suminf.    8.92794 (90) obj. 319.385 iterations 33
Cbc0038I Pass  87: suminf.    9.34125 (77) obj. 319.385 iterations 133
Cbc0038I Pass  88: suminf.    8.79551 (90) obj. 319.385 iterations 94
Cbc0038I Pass  89: suminf.   10.43351 (97) obj. 319.385 iterations 94
Cbc0038I Pass  90: suminf.    9.69923 (95) obj. 319.385 iterations 39
Cbc0038I Pass  91: suminf.    9.61274 (89) obj. 319.385 iterations 158
Cbc0038I Pass  92: suminf.    8.84972 (92) obj. 319.385 iterations 152
Cbc0038I Pass  93: suminf.    8.10096 (68) obj. 319.385 iterations 176
Cbc0038I Pass  94: suminf.    8.49140 (60) obj. 319.385 iterations 58
Cbc0038I Pass  95: suminf.    8.03902 (75) obj. 319.385 iterations 48
Cbc0038I Pass  96: suminf.   10.97156 (83) obj. 319.385 iterations 108
Cbc0038I Pass  97: suminf.    8.86034 (78) obj. 319.385 iterations 41
Cbc0038I Pass  98: suminf.    8.86034 (78) obj. 319.385 iterations 5
Cbc0038I Pass  99: suminf.    8.54724 (58) obj. 319.385 iterations 87
Cbc0038I Pass 100: suminf.    8.23478 (78) obj. 319.385 iterations 259
Cbc0038I Pass 101: suminf.    7.78640 (62) obj. 319.385 iterations 238
Cbc0038I Pass 102: suminf.    7.92907 (83) obj. 319.385 iterations 153
Cbc0038I Pass 103: suminf.    8.92160 (72) obj. 319.385 iterations 197
Cbc0038I Pass 104: suminf.    8.03902 (75) obj. 319.385 iterations 131
Cbc0038I Pass 105: suminf.   10.97156 (83) obj. 319.385 iterations 120
Cbc0038I Pass 106: suminf.    8.86034 (78) obj. 319.385 iterations 51
Cbc0038I Pass 107: suminf.    8.86034 (78) obj. 319.385 iterations 3
Cbc0038I Pass 108: suminf.    7.86672 (73) obj. 319.385 iterations 92
Cbc0038I Pass 109: suminf.    8.23478 (78) obj. 319.385 iterations 207
Cbc0038I Pass 110: suminf.   20.81998 (104) obj. 319.385 iterations 171
Cbc0038I Pass 111: suminf.    9.80305 (79) obj. 319.385 iterations 175
Cbc0038I Pass 112: suminf.    8.86034 (78) obj. 319.385 iterations 51
Cbc0038I Pass 113: suminf.    8.62715 (78) obj. 319.385 iterations 178
Cbc0038I Pass 114: suminf.    7.94642 (90) obj. 319.385 iterations 139
Cbc0038I Pass 115: suminf.   17.32876 (104) obj. 319.385 iterations 180
Cbc0038I Pass 116: suminf.   13.50941 (126) obj. 319.385 iterations 83
Cbc0038I Pass 117: suminf.   11.79711 (111) obj. 319.385 iterations 52
Cbc0038I Pass 118: suminf.    7.12326 (75) obj. 319.385 iterations 58
Cbc0038I Pass 119: suminf.    6.06774 (66) obj. 319.385 iterations 23
Cbc0038I Pass 120: suminf.   10.12982 (87) obj. 319.385 iterations 128
Cbc0038I Pass 121: suminf.    5.93487 (70) obj. 319.385 iterations 65
Cbc0038I Pass 122: suminf.    5.92115 (61) obj. 319.385 iterations 5
Cbc0038I Pass 123: suminf.   11.97157 (96) obj. 319.385 iterations 138
Cbc0038I Pass 124: suminf.    5.80339 (68) obj. 319.385 iterations 203
Cbc0038I Pass 125: suminf.    9.91498 (83) obj. 319.385 iterations 99
Cbc0038I Pass 126: suminf.    7.44054 (78) obj. 319.385 iterations 63
Cbc0038I Pass 127: suminf.    6.14222 (66) obj. 319.385 iterations 75
Cbc0038I Pass 128: suminf.    6.14222 (66) obj. 319.385 iterations 1
Cbc0038I Pass 129: suminf.    9.75903 (111) obj. 319.385 iterations 142
Cbc0038I Pass 130: suminf.    8.99864 (75) obj. 319.385 iterations 71
Cbc0038I Pass 131: suminf.    5.87009 (64) obj. 319.385 iterations 33
Cbc0038I Pass 132: suminf.    7.82354 (86) obj. 319.385 iterations 65
Cbc0038I Pass 133: suminf.    6.42217 (77) obj. 319.385 iterations 38
Cbc0038I Pass 134: suminf.    6.08789 (66) obj. 319.385 iterations 35
Cbc0038I Pass 135: suminf.    9.75903 (111) obj. 319.385 iterations 105
Cbc0038I Pass 136: suminf.    8.99864 (75) obj. 319.385 iterations 74
Cbc0038I Pass 137: suminf.    5.87009 (64) obj. 319.385 iterations 45
Cbc0038I Pass 138: suminf.    8.62606 (81) obj. 319.385 iterations 69
Cbc0038I Pass 139: suminf.   44.72812 (238) obj. 319.385 iterations 553
Cbc0038I Pass 140: suminf.   20.92198 (140) obj. 319.385 iterations 433
Cbc0038I Pass 141: suminf.   17.42175 (133) obj. 319.385 iterations 81
Cbc0038I Pass 142: suminf.   17.42175 (133) obj. 319.385 iterations 2
Cbc0038I Pass 143: suminf.   11.36257 (112) obj. 319.385 iterations 119
Cbc0038I Pass 144: suminf.   11.49573 (108) obj. 319.385 iterations 24
Cbc0038I Pass 145: suminf.   11.49573 (108) obj. 319.385 iterations 3
Cbc0038I Pass 146: suminf.   10.87302 (92) obj. 319.385 iterations 126
Cbc0038I Pass 147: suminf.    8.71825 (88) obj. 319.385 iterations 79
Cbc0038I Pass 148: suminf.    8.71825 (88) obj. 319.385 iterations 5
Cbc0038I Pass 149: suminf.   12.64134 (97) obj. 319.385 iterations 144
Cbc0038I Pass 150: suminf.    8.41003 (93) obj. 319.385 iterations 71
Cbc0038I Pass 151: suminf.    7.69198 (84) obj. 319.385 iterations 161
Cbc0038I Pass 152: suminf.    5.10732 (77) obj. 319.385 iterations 78
Cbc0038I Pass 153: suminf.   11.50210 (84) obj. 319.385 iterations 122
Cbc0038I Pass 154: suminf.   53.75038 (291) obj. 319.385 iterations 632
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.18 seconds)
Cbc0038I After 3.18 seconds - Feasibility pump exiting with objective of 335 - took 2.48 seconds
Cbc0012I Integer solution of 335 found by feasibility pump after 0 iterations and 0 nodes (3.18 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1771 rows 500 columns - 203 fixed gives 184, 42 - ok now
Cbc0031I 25 added rows had average density of 34
Cbc0013I At root node, 25 cuts changed objective from 260.92695 to 267.95043 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 58 row cuts average 2.4 elements, 7 column cuts (7 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 65 row cuts average 501.0 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 118 row cuts average 133.6 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 335 best solution, best possible 267.95043 (6.24 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1533 rows 411 columns - 173 fixed gives 20, 9 - ok now
Cbc0010I After 100 nodes, 6 on tree, 335 best solution, best possible 267.95043 (44.46 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1544 rows 414 columns - 188 fixed gives 54, 15 - ok now
Cbc0010I After 200 nodes, 7 on tree, 335 best solution, best possible 267.95043 (71.51 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1716 rows 471 columns - 222 fixed gives 94, 16 - ok now
Cbc0010I After 300 nodes, 4 on tree, 335 best solution, best possible 267.95043 (94.16 seconds)
Cbc0010I After 400 nodes, 13 on tree, 335 best solution, best possible 267.95043 (117.81 seconds)
Cbc0010I After 500 nodes, 7 on tree, 335 best solution, best possible 267.95043 (140.29 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1655 rows 450 columns - 202 fixed gives 47, 12 - ok now
Cbc0010I After 600 nodes, 8 on tree, 335 best solution, best possible 267.95043 (165.73 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1472 rows 393 columns - 169 fixed gives 72, 21 - ok now
Cbc0010I After 700 nodes, 12 on tree, 335 best solution, best possible 267.95043 (190.93 seconds)
Cbc0010I After 800 nodes, 13 on tree, 335 best solution, best possible 267.95043 (213.64 seconds)
Cbc0010I After 900 nodes, 11 on tree, 335 best solution, best possible 267.95043 (236.64 seconds)
Cbc0010I After 1000 nodes, 12 on tree, 335 best solution, best possible 267.95043 (250.12 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1133 rows 320 columns
Cbc0010I After 1100 nodes, 6 on tree, 335 best solution, best possible 267.95043 (263.24 seconds)
Cbc0010I After 1200 nodes, 14 on tree, 335 best solution, best possible 267.95043 (281.67 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 335 best solution, best possible 267.95043 (290.23 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 335 best solution, best possible 267.95043 (302.03 seconds)
Cbc0010I After 1500 nodes, 15 on tree, 335 best solution, best possible 267.95043 (312.23 seconds)
Cbc0010I After 1600 nodes, 16 on tree, 335 best solution, best possible 267.95043 (319.31 seconds)
Cbc0010I After 1700 nodes, 17 on tree, 335 best solution, best possible 267.95043 (327.77 seconds)
Cbc0010I After 1800 nodes, 26 on tree, 335 best solution, best possible 267.95043 (335.31 seconds)
Cbc0010I After 1900 nodes, 16 on tree, 335 best solution, best possible 267.95043 (342.00 seconds)
Cbc0010I After 2000 nodes, 17 on tree, 335 best solution, best possible 267.95043 (352.39 seconds)
Cbc0010I After 2100 nodes, 17 on tree, 335 best solution, best possible 267.95043 (360.22 seconds)
Cbc0010I After 2200 nodes, 15 on tree, 335 best solution, best possible 267.95043 (369.38 seconds)
Cbc0010I After 2300 nodes, 21 on tree, 335 best solution, best possible 267.95043 (379.64 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1445 rows 414 columns - 143 fixed gives 218, 47 - ok now
Cbc0010I After 2400 nodes, 31 on tree, 335 best solution, best possible 267.95043 (389.38 seconds)
Cbc0010I After 2500 nodes, 24 on tree, 335 best solution, best possible 267.95043 (399.70 seconds)
Cbc0010I After 2600 nodes, 26 on tree, 335 best solution, best possible 267.95043 (408.99 seconds)
Cbc0010I After 2700 nodes, 13 on tree, 335 best solution, best possible 267.95043 (420.93 seconds)
Cbc0010I After 2800 nodes, 18 on tree, 335 best solution, best possible 267.95043 (431.24 seconds)
Cbc0010I After 2900 nodes, 11 on tree, 335 best solution, best possible 267.95043 (439.42 seconds)
Cbc0004I Integer solution of 290 found after 1879354 iterations and 2967 nodes (444.87 seconds)
Cbc0010I After 3000 nodes, 5 on tree, 290 best solution, best possible 267.95043 (449.17 seconds)
Cbc0001I Search completed - best objective 290, took 1927274 iterations and 3026 nodes (453.73 seconds)
Cbc0032I Strong branching done 13556 times (1026675 iterations), fathomed 155 nodes and fixed 804 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 260.927 to 267.95
Probing was tried 603 times and created 105480 cuts of which 0 were active after adding rounds of cuts (2.189 seconds)
Gomory was tried 328 times and created 893 cuts of which 0 were active after adding rounds of cuts (1.149 seconds)
Knapsack was tried 328 times and created 2129 cuts of which 0 were active after adding rounds of cuts (0.293 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 328 times and created 7879 cuts of which 0 were active after adding rounds of cuts (0.637 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ImplicationCuts was tried 34 times and created 438 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Optimal solution found

Objective value:                290.00000000
Enumerated nodes:               3026
Total iterations:               1927274
Time (CPU seconds):             453.82
Time (Wallclock seconds):       457.46

Total time (CPU seconds):       453.83   (Wallclock seconds):       457.47

