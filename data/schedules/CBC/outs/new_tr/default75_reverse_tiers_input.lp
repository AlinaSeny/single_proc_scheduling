Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/default75_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/default75_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 62464 - 0.36 seconds
Cgl0002I 4541 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1199 strengthened rows, 26 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 149 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 7997 rows, 2359 columns (2359 integer (2283 of which binary)) and 26731 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2359 objects (2359 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 638 integers unsatisfied sum - 126.529
Cbc0038I Pass   1: (2.35 seconds) suminf.   58.10811 (559) obj. 72791.7 iterations 2195
Cbc0038I Pass   2: (2.43 seconds) suminf.   55.27026 (550) obj. 72036.7 iterations 248
Cbc0038I Pass   3: (2.45 seconds) suminf.   54.52274 (545) obj. 72036.8 iterations 59
Cbc0038I Pass   4: (2.52 seconds) suminf.   49.16843 (542) obj. 72149 iterations 186
Cbc0038I Pass   5: (2.53 seconds) suminf.   49.19978 (543) obj. 72220.6 iterations 23
Cbc0038I Pass   6: (2.64 seconds) suminf.   45.14691 (519) obj. 74125.3 iterations 321
Cbc0038I Pass   7: (2.65 seconds) suminf.   45.11686 (517) obj. 74122.4 iterations 32
Cbc0038I Pass   8: (2.82 seconds) suminf.   45.64599 (518) obj. 72085.4 iterations 604
Cbc0038I Pass   9: (2.98 seconds) suminf.   41.45274 (504) obj. 72083.4 iterations 524
Cbc0038I Pass  10: (3.12 seconds) suminf.   39.40122 (521) obj. 71974.7 iterations 448
Cbc0038I Pass  11: (3.16 seconds) suminf.   38.83955 (535) obj. 71972.3 iterations 117
Cbc0038I Pass  12: (3.32 seconds) suminf.   35.02478 (515) obj. 75620.5 iterations 560
Cbc0038I Pass  13: (3.35 seconds) suminf.   34.99696 (509) obj. 74624.2 iterations 56
Cbc0038I Pass  14: (3.37 seconds) suminf.   33.42103 (516) obj. 74623 iterations 36
Cbc0038I Pass  15: (3.50 seconds) suminf.   35.53516 (472) obj. 74620.2 iterations 420
Cbc0038I Pass  16: (3.58 seconds) suminf.   31.88914 (458) obj. 74620.5 iterations 234
Cbc0038I Pass  17: (3.59 seconds) suminf.   31.76431 (457) obj. 74620.5 iterations 1
Cbc0038I Pass  18: (3.70 seconds) suminf.   35.03042 (485) obj. 92950 iterations 394
Cbc0038I Pass  19: (3.75 seconds) suminf.   33.05302 (474) obj. 92987.5 iterations 144
Cbc0038I Pass  20: (3.83 seconds) suminf.   29.88784 (460) obj. 74618.9 iterations 279
Cbc0038I Pass  21: (3.88 seconds) suminf.   29.85472 (455) obj. 74617.6 iterations 143
Cbc0038I Pass  22: (4.02 seconds) suminf.   32.71291 (448) obj. 74994.9 iterations 529
Cbc0038I Pass  23: (4.10 seconds) suminf.   29.10661 (420) obj. 75026.4 iterations 265
Cbc0038I Pass  24: (4.17 seconds) suminf.   26.69333 (405) obj. 75305 iterations 219
Cbc0038I Pass  25: (4.22 seconds) suminf.   26.39051 (401) obj. 75317.4 iterations 155
Cbc0038I Pass  26: (4.32 seconds) suminf.   26.13653 (387) obj. 82287 iterations 418
Cbc0038I Pass  27: (4.35 seconds) suminf.   24.71057 (391) obj. 82290.3 iterations 68
Cbc0038I Pass  28: (4.37 seconds) suminf.   22.98405 (387) obj. 82227.8 iterations 48
Cbc0038I Pass  29: (4.48 seconds) suminf.   26.03105 (399) obj. 82292.7 iterations 377
Cbc0038I Pass  30: (4.58 seconds) suminf.   23.21721 (396) obj. 82141 iterations 304
Cbc0038I Pass  31: (4.65 seconds) suminf.   24.95746 (371) obj. 82097.7 iterations 213
Cbc0038I Pass  32: (4.69 seconds) suminf.   24.30878 (372) obj. 82288.3 iterations 127
Cbc0038I Pass  33: (4.81 seconds) suminf.   26.60854 (381) obj. 86572.4 iterations 423
Cbc0038I Pass  34: (4.86 seconds) suminf.   26.08165 (386) obj. 87751.7 iterations 152
Cbc0038I Pass  35: (4.95 seconds) suminf.   24.10947 (422) obj. 91173.9 iterations 290
Cbc0038I Pass  36: (5.02 seconds) suminf.   22.98386 (377) obj. 91578.6 iterations 215
Cbc0038I Pass  37: (5.16 seconds) suminf.   24.37088 (379) obj. 82362.6 iterations 532
Cbc0038I Pass  38: (5.22 seconds) suminf.   22.20784 (364) obj. 82162.2 iterations 201
Cbc0038I Pass  39: (5.35 seconds) suminf.   21.26671 (359) obj. 82119.3 iterations 513
Cbc0038I Pass  40: (5.39 seconds) suminf.   20.12965 (366) obj. 82226.3 iterations 150
Cbc0038I Pass  41: (5.53 seconds) suminf.   21.14015 (340) obj. 86194 iterations 501
Cbc0038I Pass  42: (5.61 seconds) suminf.   20.27897 (335) obj. 87619.5 iterations 291
Cbc0038I Pass  43: (5.75 seconds) suminf.   21.94893 (322) obj. 84157.5 iterations 452
Cbc0038I Pass  44: (5.76 seconds) suminf.   21.67022 (324) obj. 84331.7 iterations 33
Cbc0038I Pass  45: (5.82 seconds) suminf.   16.46931 (335) obj. 83067.2 iterations 194
Cbc0038I Pass  46: (5.83 seconds) suminf.   16.41863 (336) obj. 83035.8 iterations 1
Cbc0038I Pass  47: (5.93 seconds) suminf.   18.07799 (315) obj. 84469.7 iterations 350
Cbc0038I Pass  48: (5.97 seconds) suminf.   16.93601 (327) obj. 84622.6 iterations 127
Cbc0038I Pass  49: (6.16 seconds) suminf.   21.43272 (337) obj. 90327.3 iterations 795
Cbc0038I Pass  50: (6.25 seconds) suminf.   19.99941 (307) obj. 88627.7 iterations 318
Cbc0038I Pass  51: (6.29 seconds) suminf.   18.83629 (333) obj. 88819.6 iterations 122
Cbc0038I Pass  52: (6.38 seconds) suminf.   14.23945 (293) obj. 84484.1 iterations 312
Cbc0038I Pass  53: (6.40 seconds) suminf.   13.30394 (285) obj. 84489.3 iterations 76
Cbc0038I Pass  54: (6.50 seconds) suminf.   15.91727 (296) obj. 86639.2 iterations 308
Cbc0038I Pass  55: (6.56 seconds) suminf.   14.43759 (303) obj. 86644.7 iterations 238
Cbc0038I Pass  56: (6.59 seconds) suminf.   13.27001 (311) obj. 86649.5 iterations 95
Cbc0038I Pass  57: (6.65 seconds) suminf.   12.61649 (287) obj. 84736.8 iterations 210
Cbc0038I Pass  58: (6.67 seconds) suminf.   11.92409 (297) obj. 83613.8 iterations 33
Cbc0038I Pass  59: (6.77 seconds) suminf.   14.20223 (308) obj. 82797.8 iterations 351
Cbc0038I Pass  60: (6.82 seconds) suminf.   10.29866 (290) obj. 82788 iterations 151
Cbc0038I Pass  61: (6.95 seconds) suminf.   11.90901 (261) obj. 90745.7 iterations 545
Cbc0038I Pass  62: (6.98 seconds) suminf.   11.30546 (294) obj. 90658.9 iterations 137
Cbc0038I Pass  63: (7.08 seconds) suminf.   15.38458 (303) obj. 90580.7 iterations 360
Cbc0038I Pass  64: (7.12 seconds) suminf.   12.14036 (287) obj. 90643.9 iterations 144
Cbc0038I Pass  65: (7.24 seconds) suminf.   12.57890 (281) obj. 90637.9 iterations 459
Cbc0038I Pass  66: (7.27 seconds) suminf.   12.47775 (292) obj. 90646.4 iterations 139
Cbc0038I Pass  67: (7.40 seconds) suminf.   14.58953 (291) obj. 90909.1 iterations 492
Cbc0038I Pass  68: (7.43 seconds) suminf.   12.41218 (276) obj. 90622.4 iterations 117
Cbc0038I Pass  69: (7.57 seconds) suminf.   14.20790 (272) obj. 89042.9 iterations 605
Cbc0038I Pass  70: (7.60 seconds) suminf.   12.58919 (302) obj. 89883.3 iterations 117
Cbc0038I Pass  71: (7.64 seconds) suminf.   12.06618 (308) obj. 90022.6 iterations 140
Cbc0038I Pass  72: (7.67 seconds) suminf.   11.83156 (305) obj. 90025.2 iterations 75
Cbc0038I Pass  73: (7.72 seconds) suminf.   13.57437 (301) obj. 87269.9 iterations 212
Cbc0038I Pass  74: (7.75 seconds) suminf.   11.17766 (305) obj. 87873.9 iterations 108
Cbc0038I Pass  75: (7.81 seconds) suminf.   12.20515 (287) obj. 82330.7 iterations 223
Cbc0038I Pass  76: (7.86 seconds) suminf.   12.39247 (290) obj. 82827.7 iterations 209
Cbc0038I Pass  77: (7.87 seconds) suminf.   11.85605 (289) obj. 82827 iterations 7
Cbc0038I Pass  78: (7.98 seconds) suminf.   14.24504 (314) obj. 90075.5 iterations 468
Cbc0038I Pass  79: (8.02 seconds) suminf.   12.96765 (291) obj. 90050.9 iterations 116
Cbc0038I Pass  80: (8.12 seconds) suminf.   10.65548 (325) obj. 86824.8 iterations 396
Cbc0038I Pass  81: (8.14 seconds) suminf.   10.90658 (324) obj. 86824.6 iterations 18
Cbc0038I Pass  82: (8.31 seconds) suminf.   13.47364 (284) obj. 87498.8 iterations 754
Cbc0038I Pass  83: (8.34 seconds) suminf.   12.94695 (279) obj. 87180.2 iterations 91
Cbc0038I Pass  84: (8.40 seconds) suminf.   11.81973 (294) obj. 86907.4 iterations 235
Cbc0038I Pass  85: (8.41 seconds) suminf.   10.79233 (296) obj. 84804.9 iterations 23
Cbc0038I Pass  86: (8.56 seconds) suminf.   11.15807 (319) obj. 87466.6 iterations 530
Cbc0038I Pass  87: (8.57 seconds) suminf.   11.15807 (319) obj. 87466.6 iterations 2
Cbc0038I Pass  88: (8.65 seconds) suminf.   11.80151 (275) obj. 86807.7 iterations 285
Cbc0038I Pass  89: (8.71 seconds) suminf.   10.37286 (286) obj. 86271.4 iterations 251
Cbc0038I Pass  90: (8.84 seconds) suminf.   14.89980 (275) obj. 83794.5 iterations 517
Cbc0038I Pass  91: (8.89 seconds) suminf.   12.18575 (294) obj. 84821.7 iterations 182
Cbc0038I Pass  92: (8.99 seconds) suminf.   14.22869 (297) obj. 84500.6 iterations 446
Cbc0038I Pass  93: (9.03 seconds) suminf.   13.62381 (282) obj. 84207.3 iterations 157
Cbc0038I Pass  94: (9.12 seconds) suminf.   12.24537 (274) obj. 84121.3 iterations 389
Cbc0038I Pass  95: (9.16 seconds) suminf.   10.36745 (277) obj. 84791 iterations 154
Cbc0038I Pass  96: (9.27 seconds) suminf.   14.07352 (284) obj. 89695.6 iterations 436
Cbc0038I Pass  97: (9.30 seconds) suminf.   14.47619 (289) obj. 89585.6 iterations 78
Cbc0038I Pass  98: (9.38 seconds) suminf.   12.82302 (273) obj. 82835.5 iterations 326
Cbc0038I Pass  99: (9.40 seconds) suminf.   10.15518 (264) obj. 83220.9 iterations 71
Cbc0038I Pass 100: (9.80 seconds) suminf.   65.74561 (523) obj. 104314 iterations 1601
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1142 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (10.57 seconds)
Cbc0038I After 10.57 seconds - Feasibility pump exiting - took 8.76 seconds
Cbc0031I 44 added rows had average density of 7.3863636
Cbc0013I At root node, 44 cuts changed objective from 62464 to 62464 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 30 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 85 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.359 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 62464 (14.14 seconds)
Cbc0010I After 100 nodes, 35 on tree, 1e+50 best solution, best possible 62464 (57.93 seconds)
Cbc0010I After 200 nodes, 24 on tree, 1e+50 best solution, best possible 62464 (94.35 seconds)
Cbc0010I After 300 nodes, 29 on tree, 1e+50 best solution, best possible 62464 (139.01 seconds)
Cbc0010I After 400 nodes, 31 on tree, 1e+50 best solution, best possible 62464 (177.10 seconds)
Cbc0010I After 500 nodes, 38 on tree, 1e+50 best solution, best possible 62464 (212.85 seconds)
Cbc0010I After 600 nodes, 36 on tree, 1e+50 best solution, best possible 62464 (264.91 seconds)
Cbc0010I After 700 nodes, 43 on tree, 1e+50 best solution, best possible 62464 (286.89 seconds)
Cbc0010I After 800 nodes, 46 on tree, 1e+50 best solution, best possible 62464 (317.98 seconds)
Cbc0010I After 900 nodes, 50 on tree, 1e+50 best solution, best possible 62464 (347.66 seconds)
Cbc0010I After 1000 nodes, 39 on tree, 1e+50 best solution, best possible 62464 (378.23 seconds)
Cbc0010I After 1100 nodes, 27 on tree, 1e+50 best solution, best possible 62464 (411.74 seconds)
Cbc0010I After 1200 nodes, 32 on tree, 1e+50 best solution, best possible 62464 (517.08 seconds)
Cbc0010I After 1300 nodes, 31 on tree, 1e+50 best solution, best possible 62464 (566.31 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 1e+50 best solution, best possible 62464 (603.71 seconds)
Cbc0010I After 1500 nodes, 31 on tree, 1e+50 best solution, best possible 62464 (682.39 seconds)
Cbc0010I After 1600 nodes, 26 on tree, 1e+50 best solution, best possible 62464 (756.82 seconds)
Cbc0010I After 1700 nodes, 21 on tree, 1e+50 best solution, best possible 62464 (856.09 seconds)
Cbc0010I After 1800 nodes, 25 on tree, 1e+50 best solution, best possible 62464 (938.12 seconds)
Cbc0010I After 1900 nodes, 26 on tree, 1e+50 best solution, best possible 62464 (1029.54 seconds)
Cbc0010I After 2000 nodes, 20 on tree, 1e+50 best solution, best possible 62464 (1089.85 seconds)
Cbc0010I After 2100 nodes, 18 on tree, 1e+50 best solution, best possible 62464 (1130.41 seconds)
Cbc0010I After 2200 nodes, 26 on tree, 1e+50 best solution, best possible 62464 (1168.61 seconds)
Cbc0010I After 2300 nodes, 32 on tree, 1e+50 best solution, best possible 62464 (1232.21 seconds)
Cbc0010I After 2400 nodes, 28 on tree, 1e+50 best solution, best possible 62464 (1310.87 seconds)
Cbc0010I After 2500 nodes, 25 on tree, 1e+50 best solution, best possible 62464 (1325.38 seconds)
Cbc0010I After 2600 nodes, 18 on tree, 1e+50 best solution, best possible 62464 (1343.94 seconds)
Cbc0010I After 2700 nodes, 26 on tree, 1e+50 best solution, best possible 62464 (1377.24 seconds)
Cbc0010I After 2800 nodes, 23 on tree, 1e+50 best solution, best possible 62464 (1397.63 seconds)
Cbc0010I After 2900 nodes, 23 on tree, 1e+50 best solution, best possible 62464 (1423.65 seconds)
Cbc0010I After 3000 nodes, 22 on tree, 1e+50 best solution, best possible 62464 (1451.21 seconds)
Cbc0010I After 3100 nodes, 30 on tree, 1e+50 best solution, best possible 62464 (1480.54 seconds)
Cbc0010I After 3200 nodes, 28 on tree, 1e+50 best solution, best possible 62464 (1496.93 seconds)
Cbc0010I After 3300 nodes, 31 on tree, 1e+50 best solution, best possible 62464 (1518.51 seconds)
Cbc0010I After 3400 nodes, 27 on tree, 1e+50 best solution, best possible 62464 (1543.34 seconds)
Cbc0010I After 3500 nodes, 27 on tree, 1e+50 best solution, best possible 62464 (1553.41 seconds)
Cbc0010I After 3600 nodes, 26 on tree, 1e+50 best solution, best possible 62464 (1590.70 seconds)
Cbc0010I After 3700 nodes, 22 on tree, 1e+50 best solution, best possible 62464 (1622.51 seconds)
Cbc0010I After 3800 nodes, 23 on tree, 1e+50 best solution, best possible 62464 (1648.00 seconds)
Cbc0010I After 3900 nodes, 20 on tree, 1e+50 best solution, best possible 62464 (1656.48 seconds)
Cbc0010I After 4000 nodes, 17 on tree, 1e+50 best solution, best possible 62464 (1676.30 seconds)
Cbc0010I After 4100 nodes, 17 on tree, 1e+50 best solution, best possible 62464 (1694.06 seconds)
Cbc0010I After 4200 nodes, 16 on tree, 1e+50 best solution, best possible 62464 (1708.42 seconds)
Cbc0010I After 4300 nodes, 16 on tree, 1e+50 best solution, best possible 62464 (1749.31 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 62464), took 3255479 iterations and 4329 nodes (1802.51 seconds)
Cbc0032I Strong branching done 26690 times (1618668 iterations), fathomed 341 nodes and fixed 1369 variables
Cbc0035I Maximum depth 48, 0 variables fixed on reduced cost
Cuts at root node changed objective from 62464 to 62464
Probing was tried 919 times and created 60057 cuts of which 0 were active after adding rounds of cuts (3.306 seconds)
Gomory was tried 455 times and created 1279 cuts of which 0 were active after adding rounds of cuts (3.080 seconds)
Knapsack was tried 455 times and created 1746 cuts of which 0 were active after adding rounds of cuts (1.157 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
FlowCover was tried 9 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 9 times and created 85 cuts of which 0 were active after adding rounds of cuts (0.359 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    62464.000
Enumerated nodes:               4329
Total iterations:               3255479
Time (CPU seconds):             1802.51
Time (Wallclock seconds):       1803.22

Total time (CPU seconds):       1802.59   (Wallclock seconds):       1803.32

