Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_0_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang7_0_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 305 - 0.07 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 367 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 52 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 1488 rows, 526 columns (526 integer (498 of which binary)) and 4876 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 274 integers unsatisfied sum - 68.0598
Cbc0038I Pass   1: suminf.   27.67880 (160) obj. 367.246 iterations 442
Cbc0038I Pass   2: suminf.   23.88901 (158) obj. 368.447 iterations 94
Cbc0038I Pass   3: suminf.   22.31621 (169) obj. 372.593 iterations 94
Cbc0038I Pass   4: suminf.   21.23610 (145) obj. 387.122 iterations 93
Cbc0038I Pass   5: suminf.   21.14246 (144) obj. 387.122 iterations 17
Cbc0038I Pass   6: suminf.   13.68044 (110) obj. 415.888 iterations 164
Cbc0038I Pass   7: suminf.   10.03302 (95) obj. 453.14 iterations 73
Cbc0038I Pass   8: suminf.   10.35679 (97) obj. 453.213 iterations 8
Cbc0038I Pass   9: suminf.    7.45758 (64) obj. 382.369 iterations 75
Cbc0038I Pass  10: suminf.    5.37265 (63) obj. 382.369 iterations 31
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 382 iterations 53
Cbc0038I Solution found of 382
Cbc0038I Cleaned solution of 382
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I Round again with cutoff of 373.4
Cbc0038I Pass  12: suminf.   27.67880 (160) obj. 367.246 iterations 0
Cbc0038I Pass  13: suminf.   23.88901 (158) obj. 368.447 iterations 69
Cbc0038I Pass  14: suminf.   22.31621 (169) obj. 372.593 iterations 79
Cbc0038I Pass  15: suminf.   21.19609 (143) obj. 373.4 iterations 141
Cbc0038I Pass  16: suminf.   22.38725 (144) obj. 373.4 iterations 41
Cbc0038I Pass  17: suminf.   11.90335 (106) obj. 373.4 iterations 185
Cbc0038I Pass  18: suminf.    7.65308 (88) obj. 373.4 iterations 136
Cbc0038I Pass  19: suminf.    2.37658 (79) obj. 373.4 iterations 135
Cbc0038I Pass  20: suminf.    2.37658 (79) obj. 373.4 iterations 0
Cbc0038I Pass  21: suminf.    8.51997 (98) obj. 373.4 iterations 147
Cbc0038I Pass  22: suminf.    7.85029 (96) obj. 373.4 iterations 26
Cbc0038I Pass  23: suminf.    2.43201 (46) obj. 373.4 iterations 121
Cbc0038I Pass  24: suminf.    0.61411 (33) obj. 373.4 iterations 11
Cbc0038I Pass  25: suminf.    5.47454 (38) obj. 373.4 iterations 67
Cbc0038I Pass  26: suminf.    2.37502 (30) obj. 367 iterations 21
Cbc0038I Pass  27: suminf.    2.37502 (30) obj. 367 iterations 0
Cbc0038I Pass  28: suminf.    1.08266 (27) obj. 367 iterations 125
Cbc0038I Pass  29: suminf.    3.05908 (29) obj. 367 iterations 46
Cbc0038I Pass  30: suminf.    2.41906 (26) obj. 367 iterations 20
Cbc0038I Pass  31: suminf.    1.72098 (26) obj. 373.4 iterations 57
Cbc0038I Pass  32: suminf.    1.80057 (30) obj. 373.4 iterations 8
Cbc0038I Pass  33: suminf.    4.68826 (27) obj. 373.4 iterations 60
Cbc0038I Pass  34: suminf.    4.76637 (34) obj. 373.4 iterations 19
Cbc0038I Pass  35: suminf.    1.21025 (13) obj. 373.4 iterations 56
Cbc0038I Pass  36: suminf.    1.27255 (8) obj. 373.4 iterations 22
Cbc0038I Pass  37: suminf.    0.40010 (1) obj. 373.4 iterations 20
Cbc0038I Solution found of 373.4
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1489 rows 526 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 367
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1488 rows 526 columns, reduced to 1159 rows 365 columns - 120 fixed gives 493, 124 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 56 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I Round again with cutoff of 353.8
Cbc0038I Pass  38: suminf.   27.17251 (159) obj. 353 iterations 13
Cbc0038I Pass  39: suminf.   22.71579 (161) obj. 353.8 iterations 60
Cbc0038I Pass  40: suminf.   22.09505 (166) obj. 353.8 iterations 69
Cbc0038I Pass  41: suminf.   22.35915 (143) obj. 353.8 iterations 134
Cbc0038I Pass  42: suminf.   21.69970 (141) obj. 353.8 iterations 52
Cbc0038I Pass  43: suminf.   21.10752 (121) obj. 353.8 iterations 192
Cbc0038I Pass  44: suminf.   16.50045 (109) obj. 353.8 iterations 128
Cbc0038I Pass  45: suminf.   16.60697 (109) obj. 353.8 iterations 37
Cbc0038I Pass  46: suminf.   10.66581 (88) obj. 353.8 iterations 157
Cbc0038I Pass  47: suminf.    9.89656 (95) obj. 353.8 iterations 42
Cbc0038I Pass  48: suminf.   10.97376 (90) obj. 353.8 iterations 79
Cbc0038I Pass  49: suminf.    9.87318 (92) obj. 353.8 iterations 18
Cbc0038I Pass  50: suminf.    9.00171 (75) obj. 353.8 iterations 122
Cbc0038I Pass  51: suminf.    9.22737 (88) obj. 353.8 iterations 21
Cbc0038I Pass  52: suminf.    7.78144 (49) obj. 353.8 iterations 81
Cbc0038I Pass  53: suminf.    4.14422 (41) obj. 353.8 iterations 40
Cbc0038I Pass  54: suminf.    4.14422 (41) obj. 353.8 iterations 6
Cbc0038I Pass  55: suminf.    9.75659 (61) obj. 353.8 iterations 129
Cbc0038I Pass  56: suminf.    6.23366 (79) obj. 353.8 iterations 45
Cbc0038I Pass  57: suminf.    9.24708 (66) obj. 353.8 iterations 94
Cbc0038I Pass  58: suminf.    9.08612 (85) obj. 353.8 iterations 79
Cbc0038I Pass  59: suminf.    9.22923 (62) obj. 353.8 iterations 179
Cbc0038I Pass  60: suminf.    6.04461 (68) obj. 353.8 iterations 40
Cbc0038I Pass  61: suminf.    5.00432 (62) obj. 353.8 iterations 11
Cbc0038I Pass  62: suminf.    9.34819 (58) obj. 353.8 iterations 89
Cbc0038I Pass  63: suminf.    1.91651 (35) obj. 353.8 iterations 75
Cbc0038I Pass  64: suminf.    7.21527 (54) obj. 353.8 iterations 161
Cbc0038I Pass  65: suminf.    6.76153 (36) obj. 353.8 iterations 108
Cbc0038I Pass  66: suminf.    6.30050 (35) obj. 353.8 iterations 40
Cbc0038I Pass  67: suminf.    6.29940 (35) obj. 353.8 iterations 4
Cbc0038I Pass  68: suminf.    4.43549 (51) obj. 353.8 iterations 53
Cbc0038I Pass  69: suminf.    4.31758 (67) obj. 353.8 iterations 46
Cbc0038I Pass  70: suminf.    7.38551 (46) obj. 353.8 iterations 257
Cbc0038I Pass  71: suminf.    2.70500 (28) obj. 353.8 iterations 91
Cbc0038I Pass  72: suminf.    4.66109 (25) obj. 353.8 iterations 72
Cbc0038I Pass  73: suminf.    1.21643 (23) obj. 353.8 iterations 53
Cbc0038I Pass  74: suminf.    3.50543 (22) obj. 353.8 iterations 85
Cbc0038I Pass  75: suminf.    3.50543 (22) obj. 353.8 iterations 10
Cbc0038I Pass  76: suminf.    4.02139 (32) obj. 353.8 iterations 138
Cbc0038I Pass  77: suminf.    1.95067 (19) obj. 353.8 iterations 16
Cbc0038I Pass  78: suminf.    2.50563 (23) obj. 353.8 iterations 113
Cbc0038I Pass  79: suminf.    2.17041 (23) obj. 353.8 iterations 12
Cbc0038I Pass  80: suminf.    3.89978 (38) obj. 353.8 iterations 86
Cbc0038I Pass  81: suminf.    4.39530 (60) obj. 353.8 iterations 68
Cbc0038I Pass  82: suminf.   12.95595 (96) obj. 353.8 iterations 175
Cbc0038I Pass  83: suminf.   13.35885 (90) obj. 353.8 iterations 10
Cbc0038I Pass  84: suminf.   12.91904 (93) obj. 353.8 iterations 14
Cbc0038I Pass  85: suminf.   11.81748 (91) obj. 353.8 iterations 13
Cbc0038I Pass  86: suminf.    3.14410 (36) obj. 353.8 iterations 87
Cbc0038I Pass  87: suminf.    3.00137 (36) obj. 353.8 iterations 14
Cbc0038I Pass  88: suminf.    9.77539 (70) obj. 353.8 iterations 145
Cbc0038I Pass  89: suminf.    9.74484 (70) obj. 353.8 iterations 17
Cbc0038I Pass  90: suminf.   12.35275 (95) obj. 353.8 iterations 139
Cbc0038I Pass  91: suminf.   12.24166 (114) obj. 353.8 iterations 55
Cbc0038I Pass  92: suminf.   12.21040 (96) obj. 353.8 iterations 31
Cbc0038I Pass  93: suminf.   11.71316 (109) obj. 353.8 iterations 33
Cbc0038I Pass  94: suminf.    7.76721 (85) obj. 353.8 iterations 170
Cbc0038I Pass  95: suminf.    6.78271 (82) obj. 353.8 iterations 58
Cbc0038I Pass  96: suminf.    5.96410 (63) obj. 353.8 iterations 104
Cbc0038I Pass  97: suminf.    5.26230 (68) obj. 353.8 iterations 17
Cbc0038I Pass  98: suminf.    6.56047 (63) obj. 353.8 iterations 101
Cbc0038I Pass  99: suminf.    6.09815 (41) obj. 353.8 iterations 32
Cbc0038I Pass 100: suminf.    6.62488 (51) obj. 353.8 iterations 60
Cbc0038I Pass 101: suminf.    2.39989 (34) obj. 353.8 iterations 42
Cbc0038I Pass 102: suminf.    5.12093 (39) obj. 353.8 iterations 89
Cbc0038I Pass 103: suminf.    5.35610 (51) obj. 353.8 iterations 50
Cbc0038I Pass 104: suminf.   11.70114 (75) obj. 353.8 iterations 134
Cbc0038I Pass 105: suminf.   10.19833 (84) obj. 353.8 iterations 54
Cbc0038I Pass 106: suminf.    9.41334 (82) obj. 353.8 iterations 9
Cbc0038I Pass 107: suminf.    7.65033 (43) obj. 353.8 iterations 152
Cbc0038I Pass 108: suminf.    6.59449 (44) obj. 353.8 iterations 21
Cbc0038I Pass 109: suminf.    8.14045 (31) obj. 353.8 iterations 166
Cbc0038I Pass 110: suminf.    5.47402 (54) obj. 353.8 iterations 206
Cbc0038I Pass 111: suminf.    9.80555 (79) obj. 353.8 iterations 170
Cbc0038I Pass 112: suminf.    9.03853 (82) obj. 353.8 iterations 37
Cbc0038I Pass 113: suminf.    4.63793 (39) obj. 353.8 iterations 87
Cbc0038I Pass 114: suminf.    4.50801 (39) obj. 353.8 iterations 11
Cbc0038I Pass 115: suminf.    5.02824 (45) obj. 353.8 iterations 62
Cbc0038I Pass 116: suminf.    3.21642 (40) obj. 353.8 iterations 33
Cbc0038I Pass 117: suminf.    5.81609 (38) obj. 353.8 iterations 79
Cbc0038I Pass 118: suminf.    4.94242 (50) obj. 353.8 iterations 47
Cbc0038I Pass 119: suminf.    7.74267 (55) obj. 353.8 iterations 87
Cbc0038I Pass 120: suminf.    4.05781 (45) obj. 353.8 iterations 34
Cbc0038I Pass 121: suminf.    4.05781 (45) obj. 353.8 iterations 0
Cbc0038I Pass 122: suminf.    2.81480 (34) obj. 353.8 iterations 57
Cbc0038I Pass 123: suminf.    2.05961 (24) obj. 353.8 iterations 15
Cbc0038I Pass 124: suminf.    4.01242 (42) obj. 353.8 iterations 70
Cbc0038I Pass 125: suminf.    4.12216 (51) obj. 353.8 iterations 24
Cbc0038I Pass 126: suminf.    6.40664 (44) obj. 353.8 iterations 160
Cbc0038I Pass 127: suminf.    4.08666 (35) obj. 353.8 iterations 51
Cbc0038I Pass 128: suminf.    2.70318 (30) obj. 353.8 iterations 46
Cbc0038I Pass 129: suminf.    5.13020 (36) obj. 353.8 iterations 109
Cbc0038I Pass 130: suminf.    2.41021 (26) obj. 353.8 iterations 46
Cbc0038I Pass 131: suminf.    5.66499 (43) obj. 353.8 iterations 80
Cbc0038I Pass 132: suminf.    4.48445 (45) obj. 353.8 iterations 16
Cbc0038I Pass 133: suminf.    9.21624 (66) obj. 353.8 iterations 254
Cbc0038I Pass 134: suminf.    8.31183 (63) obj. 353.8 iterations 53
Cbc0038I Pass 135: suminf.    6.11773 (43) obj. 353.8 iterations 114
Cbc0038I Pass 136: suminf.    4.88339 (38) obj. 353.8 iterations 27
Cbc0038I Pass 137: suminf.   29.04252 (170) obj. 353.8 iterations 311
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1488 rows 526 columns, reduced to 1292 rows 432 columns - 129 fixed gives 683, 185 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.09 seconds)
Cbc0038I After 1.09 seconds - Feasibility pump exiting with objective of 367 - took 0.91 seconds
Cbc0012I Integer solution of 367 found by feasibility pump after 0 iterations and 0 nodes (1.09 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 1002 rows 288 columns - 107 fixed gives 192, 52 - ok now
Cbc0031I 32 added rows had average density of 18.125
Cbc0013I At root node, 32 cuts changed objective from 305.00006 to 321 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 209 row cuts average 2.3 elements, 13 column cuts (13 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 153 row cuts average 180.8 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 255 row cuts average 229.6 elements, 0 column cuts (0 active)  in 0.309 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 367 best solution, best possible 321 (2.97 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 983 rows 277 columns - 111 fixed gives 107, 30 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 922 rows 258 columns - 96 fixed gives 100, 29 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 859 rows 238 columns - 66 fixed gives 237, 61 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 763 rows 229 columns - 71 fixed gives 123, 26 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 474 rows 143 columns
Cbc0038I Full problem 1488 rows 526 columns, reduced to 369 rows 111 columns
Cbc0038I Full problem 1488 rows 526 columns, reduced to 362 rows 110 columns
Cbc0010I After 1000 nodes, 3 on tree, 367 best solution, best possible 339 (44.74 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 889 rows 243 columns - 83 fixed gives 151, 42 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 862 rows 235 columns - 80 fixed gives 151, 46 - ok now
Cbc0038I Full problem 1488 rows 526 columns, reduced to 862 rows 237 columns - 81 fixed gives 119, 37 - ok now
Cbc0010I After 2000 nodes, 19 on tree, 367 best solution, best possible 348 (67.17 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 813 rows 217 columns - 69 fixed gives 103, 33 - ok now
Cbc0010I After 3000 nodes, 2 on tree, 367 best solution, best possible 352 (89.50 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 926 rows 260 columns - 95 fixed gives 49, 15 - ok now
Cbc0010I After 4000 nodes, 8 on tree, 367 best solution, best possible 359 (111.37 seconds)
Cbc0038I Full problem 1488 rows 526 columns, reduced to 910 rows 257 columns - 73 fixed gives 323, 78 - ok now
Cbc0016I Integer solution of 362 found by strong branching after 851081 iterations and 4823 nodes (125.90 seconds)
Cbc0001I Search completed - best objective 362, took 851114 iterations and 4823 nodes (125.90 seconds)
Cbc0032I Strong branching done 12662 times (478175 iterations), fathomed 311 nodes and fixed 867 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 305 to 321
Probing was tried 930 times and created 72481 cuts of which 0 were active after adding rounds of cuts (1.450 seconds)
Gomory was tried 513 times and created 1056 cuts of which 0 were active after adding rounds of cuts (0.670 seconds)
Knapsack was tried 513 times and created 2468 cuts of which 0 were active after adding rounds of cuts (0.258 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 513 times and created 8235 cuts of which 0 were active after adding rounds of cuts (0.822 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ImplicationCuts was tried 44 times and created 915 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                362.00000000
Enumerated nodes:               4823
Total iterations:               851114
Time (CPU seconds):             125.93
Time (Wallclock seconds):       127.01

Total time (CPU seconds):       125.94   (Wallclock seconds):       127.02

