Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump30_down_left_input.lp sec 1800 solve solu solutions/new_tr/jump30_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 29902.8 - 0.16 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 367 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 2424 rows, 772 columns (772 integer (741 of which binary)) and 8173 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 772 objects (772 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 307 integers unsatisfied sum - 75.6915
Cbc0038I Pass   1: suminf.   40.87055 (289) obj. 35954 iterations 870
Cbc0038I Pass   2: suminf.   39.24516 (284) obj. 39716.5 iterations 141
Cbc0038I Pass   3: suminf.   33.08837 (273) obj. 41314.9 iterations 348
Cbc0038I Pass   4: suminf.   35.67042 (273) obj. 43275.6 iterations 142
Cbc0038I Pass   5: suminf.   28.34931 (214) obj. 45716.7 iterations 308
Cbc0038I Pass   6: suminf.   24.96247 (197) obj. 47409 iterations 231
Cbc0038I Pass   7: suminf.   19.53251 (160) obj. 47109.7 iterations 247
Cbc0038I Pass   8: suminf.   19.64545 (164) obj. 47063.6 iterations 131
Cbc0038I Pass   9: suminf.   18.78152 (160) obj. 47949.1 iterations 151
Cbc0038I Pass  10: suminf.   18.48913 (157) obj. 48740.1 iterations 68
Cbc0038I Pass  11: suminf.   18.20697 (162) obj. 47914.8 iterations 61
Cbc0038I Pass  12: suminf.   15.99514 (151) obj. 44102.5 iterations 303
Cbc0038I Pass  13: suminf.   13.79706 (126) obj. 48199.2 iterations 307
Cbc0038I Pass  14: suminf.   14.30736 (129) obj. 48200.4 iterations 132
Cbc0038I Pass  15: suminf.   13.18935 (130) obj. 48199.8 iterations 13
Cbc0038I Pass  16: suminf.   11.53339 (131) obj. 48198.3 iterations 73
Cbc0038I Pass  17: suminf.   13.74869 (123) obj. 47247.1 iterations 197
Cbc0038I Pass  18: suminf.   13.57775 (108) obj. 47880.2 iterations 69
Cbc0038I Pass  19: suminf.    9.96090 (103) obj. 49556.2 iterations 207
Cbc0038I Pass  20: suminf.    9.66828 (104) obj. 49559.9 iterations 62
Cbc0038I Pass  21: suminf.    9.26553 (108) obj. 49557.5 iterations 72
Cbc0038I Pass  22: suminf.    6.87176 (89) obj. 47161.4 iterations 198
Cbc0038I Pass  23: suminf.    6.83251 (89) obj. 47161.4 iterations 9
Cbc0038I Pass  24: suminf.    4.53824 (66) obj. 42891.9 iterations 135
Cbc0038I Pass  25: suminf.    4.53824 (66) obj. 42891.9 iterations 6
Cbc0038I Pass  26: suminf.    2.59760 (36) obj. 42989.8 iterations 142
Cbc0038I Pass  27: suminf.    4.27989 (37) obj. 45169.4 iterations 212
Cbc0038I Pass  28: suminf.    3.42764 (36) obj. 45174 iterations 65
Cbc0038I Pass  29: suminf.    1.91147 (18) obj. 47998.5 iterations 286
Cbc0038I Pass  30: suminf.    1.91147 (18) obj. 47998.5 iterations 21
Cbc0038I Pass  31: suminf.    1.36638 (17) obj. 46080 iterations 80
Cbc0038I Pass  32: suminf.    1.00583 (17) obj. 46080 iterations 112
Cbc0038I Pass  33: suminf.    0.62911 (15) obj. 46080 iterations 325
Cbc0038I Pass  34: suminf.    1.39176 (13) obj. 46080 iterations 162
Cbc0038I Pass  35: suminf.    0.25826 (8) obj. 46080 iterations 44
Cbc0038I Pass  36: suminf.    0.31553 (9) obj. 46080 iterations 37
Cbc0038I Pass  37: suminf.    0.27980 (9) obj. 46080 iterations 5
Cbc0038I Pass  38: suminf.    0.29339 (8) obj. 46080 iterations 41
Cbc0038I Pass  39: suminf.   46.07707 (245) obj. 48796.7 iterations 762
Cbc0038I Pass  40: suminf.   28.58526 (182) obj. 48770.1 iterations 404
Cbc0038I Pass  41: suminf.   25.85351 (165) obj. 48862.7 iterations 92
Cbc0038I Pass  42: suminf.   25.69595 (168) obj. 48874.1 iterations 41
Cbc0038I Pass  43: suminf.   22.28819 (165) obj. 48528.5 iterations 121
Cbc0038I Pass  44: suminf.   20.84951 (157) obj. 48420.9 iterations 29
Cbc0038I Pass  45: suminf.   13.92054 (140) obj. 49548.4 iterations 275
Cbc0038I Pass  46: suminf.   13.04120 (138) obj. 49548.4 iterations 45
Cbc0038I Pass  47: suminf.    9.26747 (105) obj. 46980.2 iterations 179
Cbc0038I Pass  48: suminf.    8.91506 (105) obj. 46161.9 iterations 92
Cbc0038I Pass  49: suminf.   13.00525 (135) obj. 46181.2 iterations 269
Cbc0038I Pass  50: suminf.   11.13102 (135) obj. 46898.2 iterations 47
Cbc0038I Pass  51: suminf.    8.07398 (98) obj. 46162 iterations 157
Cbc0038I Pass  52: suminf.    8.28600 (92) obj. 46161.9 iterations 66
Cbc0038I Pass  53: suminf.    6.39423 (83) obj. 46142.2 iterations 42
Cbc0038I Pass  54: suminf.    1.63982 (20) obj. 46137 iterations 188
Cbc0038I Pass  55: suminf.    1.38275 (20) obj. 46142 iterations 8
Cbc0038I Pass  56: suminf.    0.00000 (0) obj. 50176 iterations 30
Cbc0038I Solution found of 50176
Cbc0038I Cleaned solution of 50176
Cbc0038I Rounding solution of 46080 is better than previous of 50176

Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1891 rows 588 columns - 85 fixed gives 1447, 441 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.61 seconds)
Cbc0038I Round again with cutoff of 44469.7
Cbc0038I Pass  57: suminf.   40.87055 (289) obj. 35954 iterations 0
Cbc0038I Pass  58: suminf.   39.24516 (284) obj. 39716.5 iterations 216
Cbc0038I Pass  59: suminf.   35.27150 (265) obj. 39631.5 iterations 387
Cbc0038I Pass  60: suminf.   35.67042 (273) obj. 43275.6 iterations 168
Cbc0038I Pass  61: suminf.   30.38183 (214) obj. 44469.7 iterations 310
Cbc0038I Pass  62: suminf.   27.79134 (200) obj. 44469.7 iterations 151
Cbc0038I Pass  63: suminf.   26.56179 (197) obj. 44469.7 iterations 15
Cbc0038I Pass  64: suminf.   25.62221 (200) obj. 44469.7 iterations 194
Cbc0038I Pass  65: suminf.   25.36996 (194) obj. 44469.7 iterations 12
Cbc0038I Pass  66: suminf.   20.95532 (176) obj. 44469.7 iterations 169
Cbc0038I Pass  67: suminf.   19.80156 (179) obj. 44469.7 iterations 54
Cbc0038I Pass  68: suminf.   18.71217 (186) obj. 44469.7 iterations 102
Cbc0038I Pass  69: suminf.   19.88410 (190) obj. 44469.7 iterations 134
Cbc0038I Pass  70: suminf.   19.88410 (190) obj. 44469.7 iterations 4
Cbc0038I Pass  71: suminf.   19.14991 (181) obj. 44469.7 iterations 165
Cbc0038I Pass  72: suminf.   19.08994 (180) obj. 44469.7 iterations 16
Cbc0038I Pass  73: suminf.   18.46780 (171) obj. 44469.7 iterations 227
Cbc0038I Pass  74: suminf.   17.98180 (187) obj. 44469.7 iterations 88
Cbc0038I Pass  75: suminf.   18.16387 (185) obj. 44469.7 iterations 48
Cbc0038I Pass  76: suminf.   18.88708 (172) obj. 44469.7 iterations 153
Cbc0038I Pass  77: suminf.   17.45907 (165) obj. 44469.7 iterations 47
Cbc0038I Pass  78: suminf.   18.15944 (142) obj. 44469.7 iterations 223
Cbc0038I Pass  79: suminf.   14.33018 (135) obj. 44469.7 iterations 132
Cbc0038I Pass  80: suminf.   14.10371 (130) obj. 44469.7 iterations 47
Cbc0038I Pass  81: suminf.   14.62182 (114) obj. 44469.7 iterations 213
Cbc0038I Pass  82: suminf.   13.02677 (109) obj. 44469.7 iterations 22
Cbc0038I Pass  83: suminf.   10.13765 (110) obj. 44469.7 iterations 388
Cbc0038I Pass  84: suminf.    9.13368 (109) obj. 44469.7 iterations 126
Cbc0038I Pass  85: suminf.   12.90745 (87) obj. 44469.7 iterations 393
Cbc0038I Pass  86: suminf.    7.45163 (89) obj. 44469.7 iterations 85
Cbc0038I Pass  87: suminf.    6.80608 (81) obj. 44469.7 iterations 66
Cbc0038I Pass  88: suminf.   12.32079 (95) obj. 44469.7 iterations 290
Cbc0038I Pass  89: suminf.    8.99049 (110) obj. 44469.7 iterations 153
Cbc0038I Pass  90: suminf.    5.89983 (85) obj. 44469.7 iterations 574
Cbc0038I Pass  91: suminf.    5.68489 (69) obj. 44469.7 iterations 49
Cbc0038I Pass  92: suminf.    4.11263 (41) obj. 44469.7 iterations 276
Cbc0038I Pass  93: suminf.    3.39762 (25) obj. 44469.7 iterations 171
Cbc0038I Pass  94: suminf.    1.23251 (14) obj. 44469.7 iterations 247
Cbc0038I Pass  95: suminf.    1.23251 (14) obj. 44469.7 iterations 17
Cbc0038I Pass  96: suminf.    0.64873 (16) obj. 44469.7 iterations 316
Cbc0038I Pass  97: suminf.    3.84821 (77) obj. 44469.7 iterations 393
Cbc0038I Pass  98: suminf.    4.63194 (57) obj. 44469.7 iterations 959
Cbc0038I Pass  99: suminf.    4.51636 (62) obj. 44469.7 iterations 117
Cbc0038I Pass 100: suminf.    3.22461 (41) obj. 44469.7 iterations 286
Cbc0038I Pass 101: suminf.    2.85747 (43) obj. 44469.7 iterations 89
Cbc0038I Pass 102: suminf.    2.67467 (33) obj. 44469.7 iterations 576
Cbc0038I Pass 103: suminf.    2.57748 (32) obj. 44469.7 iterations 25
Cbc0038I Pass 104: suminf.    4.86452 (29) obj. 44469.7 iterations 341
Cbc0038I Pass 105: suminf.    4.68218 (30) obj. 44469.7 iterations 15
Cbc0038I Pass 106: suminf.    2.98465 (29) obj. 44469.7 iterations 257
Cbc0038I Pass 107: suminf.    2.96581 (28) obj. 44469.7 iterations 3
Cbc0038I Pass 108: suminf.    2.91235 (20) obj. 44469.7 iterations 108
Cbc0038I Pass 109: suminf.    0.26648 (1) obj. 44469.7 iterations 26
Cbc0038I Solution found of 44469.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2425 rows 772 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 43008
Cbc0038I Before mini branch and bound, 287 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1627 rows 485 columns - 165 fixed gives 783, 185 - ok now
Cbc0038I Full problem 2424 rows 772 columns, reduced to 228 rows 81 columns
Cbc0038I Mini branch and bound improved solution from 43008 to 41984 (2.67 seconds)
Cbc0038I Round again with cutoff of 39583.7
Cbc0038I Pass 110: suminf.   40.87055 (289) obj. 35954 iterations 0
Cbc0038I Pass 111: suminf.   39.13435 (284) obj. 39583.7 iterations 217
Cbc0038I Pass 112: suminf.   33.52263 (274) obj. 39583.7 iterations 353
Cbc0038I Pass 113: suminf.   31.38839 (255) obj. 39583.7 iterations 197
Cbc0038I Pass 114: suminf.   33.75401 (252) obj. 39583.7 iterations 118
Cbc0038I Pass 115: suminf.   33.84142 (252) obj. 39583.7 iterations 68
Cbc0038I Pass 116: suminf.   33.15986 (259) obj. 39583.7 iterations 24
Cbc0038I Pass 117: suminf.   30.99703 (239) obj. 39583.7 iterations 182
Cbc0038I Pass 118: suminf.   28.08885 (230) obj. 39583.7 iterations 88
Cbc0038I Pass 119: suminf.   28.03387 (227) obj. 39583.7 iterations 22
Cbc0038I Pass 120: suminf.   24.84638 (202) obj. 39583.7 iterations 219
Cbc0038I Pass 121: suminf.   22.79682 (205) obj. 39583.7 iterations 94
Cbc0038I Pass 122: suminf.   19.71524 (200) obj. 39583.7 iterations 252
Cbc0038I Pass 123: suminf.   18.72540 (225) obj. 39583.7 iterations 79
Cbc0038I Pass 124: suminf.   19.19826 (179) obj. 39583.7 iterations 139
Cbc0038I Pass 125: suminf.   19.32890 (186) obj. 39583.7 iterations 54
Cbc0038I Pass 126: suminf.   18.89003 (160) obj. 39583.7 iterations 179
Cbc0038I Pass 127: suminf.   17.29575 (158) obj. 39583.7 iterations 41
Cbc0038I Pass 128: suminf.   16.65986 (142) obj. 39583.7 iterations 40
Cbc0038I Pass 129: suminf.   19.07976 (149) obj. 39583.7 iterations 117
Cbc0038I Pass 130: suminf.   15.46171 (149) obj. 39583.7 iterations 77
Cbc0038I Pass 131: suminf.   14.31255 (143) obj. 39583.7 iterations 24
Cbc0038I Pass 132: suminf.   12.56255 (129) obj. 39583.7 iterations 118
Cbc0038I Pass 133: suminf.   12.04298 (129) obj. 39583.7 iterations 15
Cbc0038I Pass 134: suminf.   14.93758 (149) obj. 39583.7 iterations 193
Cbc0038I Pass 135: suminf.   10.10495 (144) obj. 39583.7 iterations 124
Cbc0038I Pass 136: suminf.    9.89563 (123) obj. 39583.7 iterations 258
Cbc0038I Pass 137: suminf.    9.25488 (151) obj. 39583.7 iterations 102
Cbc0038I Pass 138: suminf.    6.43458 (82) obj. 39583.7 iterations 269
Cbc0038I Pass 139: suminf.    6.94645 (106) obj. 39583.7 iterations 165
Cbc0038I Pass 140: suminf.   10.55107 (118) obj. 39583.7 iterations 271
Cbc0038I Pass 141: suminf.    7.33676 (89) obj. 39583.7 iterations 93
Cbc0038I Pass 142: suminf.    8.70008 (57) obj. 39583.7 iterations 584
Cbc0038I Pass 143: suminf.    8.52262 (59) obj. 39583.7 iterations 33
Cbc0038I Pass 144: suminf.    5.41514 (56) obj. 39583.7 iterations 324
Cbc0038I Pass 145: suminf.    5.41514 (56) obj. 39583.7 iterations 0
Cbc0038I Pass 146: suminf.    7.77105 (58) obj. 39583.7 iterations 455
Cbc0038I Pass 147: suminf.    5.32180 (54) obj. 39583.7 iterations 82
Cbc0038I Pass 148: suminf.    4.35114 (40) obj. 39583.7 iterations 444
Cbc0038I Pass 149: suminf.    4.30098 (46) obj. 39583.7 iterations 16
Cbc0038I Pass 150: suminf.    3.45563 (34) obj. 39583.7 iterations 173
Cbc0038I Pass 151: suminf.    2.71431 (49) obj. 39583.7 iterations 153
Cbc0038I Pass 152: suminf.    6.16420 (58) obj. 39583.7 iterations 184
Cbc0038I Pass 153: suminf.    6.16420 (58) obj. 39583.7 iterations 9
Cbc0038I Pass 154: suminf.    8.66664 (78) obj. 39583.7 iterations 296
Cbc0038I Pass 155: suminf.    7.77424 (89) obj. 39583.7 iterations 42
Cbc0038I Pass 156: suminf.    4.65597 (49) obj. 39583.7 iterations 259
Cbc0038I Pass 157: suminf.    1.90100 (33) obj. 39583.7 iterations 338
Cbc0038I Pass 158: suminf.    5.00758 (39) obj. 39583.7 iterations 219
Cbc0038I Pass 159: suminf.    4.53359 (59) obj. 39583.7 iterations 284
Cbc0038I Pass 160: suminf.    3.19901 (49) obj. 39583.7 iterations 123
Cbc0038I Pass 161: suminf.    6.44460 (49) obj. 39583.7 iterations 328
Cbc0038I Pass 162: suminf.    5.43548 (42) obj. 39583.7 iterations 47
Cbc0038I Pass 163: suminf.    4.48730 (54) obj. 39583.7 iterations 211
Cbc0038I Pass 164: suminf.    3.56131 (46) obj. 39583.7 iterations 81
Cbc0038I Pass 165: suminf.    3.05407 (43) obj. 39583.7 iterations 37
Cbc0038I Pass 166: suminf.    5.77669 (65) obj. 39583.7 iterations 315
Cbc0038I Pass 167: suminf.    4.84048 (57) obj. 39583.7 iterations 89
Cbc0038I Pass 168: suminf.    3.42213 (32) obj. 39583.7 iterations 172
Cbc0038I Pass 169: suminf.    3.00540 (45) obj. 39583.7 iterations 209
Cbc0038I Pass 170: suminf.    8.81868 (76) obj. 39583.7 iterations 379
Cbc0038I Pass 171: suminf.    2.96983 (43) obj. 39583.7 iterations 116
Cbc0038I Pass 172: suminf.    6.89558 (87) obj. 39583.7 iterations 266
Cbc0038I Pass 173: suminf.    5.19258 (91) obj. 39583.7 iterations 81
Cbc0038I Pass 174: suminf.   17.25482 (98) obj. 39583.7 iterations 277
Cbc0038I Pass 175: suminf.   10.95446 (78) obj. 39583.7 iterations 46
Cbc0038I Pass 176: suminf.   10.90257 (73) obj. 39583.7 iterations 12
Cbc0038I Pass 177: suminf.    7.82197 (45) obj. 39583.7 iterations 268
Cbc0038I Pass 178: suminf.    6.18482 (47) obj. 39583.7 iterations 119
Cbc0038I Pass 179: suminf.    5.81689 (43) obj. 39583.7 iterations 241
Cbc0038I Pass 180: suminf.    5.63246 (41) obj. 39583.7 iterations 23
Cbc0038I Pass 181: suminf.    7.08730 (56) obj. 39583.7 iterations 225
Cbc0038I Pass 182: suminf.    7.08730 (56) obj. 39583.7 iterations 2
Cbc0038I Pass 183: suminf.    5.00000 (45) obj. 39583.7 iterations 151
Cbc0038I Pass 184: suminf.    1.95841 (32) obj. 39583.7 iterations 121
Cbc0038I Pass 185: suminf.    2.05046 (51) obj. 39583.7 iterations 97
Cbc0038I Pass 186: suminf.    8.98000 (78) obj. 39583.7 iterations 226
Cbc0038I Pass 187: suminf.    3.08252 (41) obj. 39583.7 iterations 103
Cbc0038I Pass 188: suminf.    9.31048 (62) obj. 39583.7 iterations 230
Cbc0038I Pass 189: suminf.    7.49557 (58) obj. 39583.7 iterations 104
Cbc0038I Pass 190: suminf.    7.51393 (58) obj. 39583.7 iterations 186
Cbc0038I Pass 191: suminf.    6.52172 (56) obj. 39583.7 iterations 26
Cbc0038I Pass 192: suminf.    2.63429 (35) obj. 39583.7 iterations 160
Cbc0038I Pass 193: suminf.    2.63429 (35) obj. 39583.7 iterations 0
Cbc0038I Pass 194: suminf.    4.18061 (48) obj. 39583.7 iterations 143
Cbc0038I Pass 195: suminf.    4.12389 (47) obj. 39583.7 iterations 18
Cbc0038I Pass 196: suminf.    6.18454 (45) obj. 39583.7 iterations 126
Cbc0038I Pass 197: suminf.    4.97833 (43) obj. 39583.7 iterations 58
Cbc0038I Pass 198: suminf.    5.48327 (51) obj. 39583.7 iterations 145
Cbc0038I Pass 199: suminf.    5.20995 (49) obj. 39583.7 iterations 10
Cbc0038I Pass 200: suminf.    5.52051 (45) obj. 39583.7 iterations 231
Cbc0038I Pass 201: suminf.    5.54007 (48) obj. 39583.7 iterations 22
Cbc0038I Pass 202: suminf.    6.31448 (46) obj. 39583.7 iterations 254
Cbc0038I Pass 203: suminf.    4.65925 (61) obj. 39583.7 iterations 215
Cbc0038I Pass 204: suminf.    9.27822 (57) obj. 39583.7 iterations 283
Cbc0038I Pass 205: suminf.    7.78168 (63) obj. 39583.7 iterations 111
Cbc0038I Pass 206: suminf.    6.20563 (46) obj. 39583.7 iterations 248
Cbc0038I Pass 207: suminf.    4.65452 (35) obj. 39583.7 iterations 67
Cbc0038I Pass 208: suminf.    6.35089 (49) obj. 36864 iterations 603
Cbc0038I Pass 209: suminf.   58.64209 (265) obj. 39583.7 iterations 644
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 239 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1755 rows 533 columns - 190 fixed gives 827, 199 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.21 seconds)
Cbc0038I After 4.21 seconds - Feasibility pump exiting with objective of 41984 - took 3.61 seconds
Cbc0012I Integer solution of 41984 found by feasibility pump after 0 iterations and 0 nodes (4.21 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 776 rows 228 columns
Cbc0031I 64 added rows had average density of 20.390625
Cbc0013I At root node, 64 cuts changed objective from 29986.334 to 31498.996 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 4.2 elements, 6 column cuts (6 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 161 row cuts average 381.5 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 226 row cuts average 55.7 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 41984 best solution, best possible 31499 (6.98 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 726 rows 214 columns
Cbc0038I Full problem 2424 rows 772 columns, reduced to 955 rows 277 columns
Cbc0010I After 100 nodes, 3 on tree, 41984 best solution, best possible 33793 (30.13 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 480 rows 155 columns
Cbc0010I After 200 nodes, 18 on tree, 41984 best solution, best possible 33798 (44.97 seconds)
Cbc0010I After 300 nodes, 26 on tree, 41984 best solution, best possible 33798 (52.27 seconds)
Cbc0010I After 400 nodes, 20 on tree, 41984 best solution, best possible 33798 (63.91 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 527 rows 163 columns
Cbc0010I After 500 nodes, 24 on tree, 41984 best solution, best possible 33798 (73.47 seconds)
Cbc0010I After 600 nodes, 34 on tree, 41984 best solution, best possible 33798 (85.05 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 549 rows 181 columns
Cbc0038I Full problem 2424 rows 772 columns, reduced to 524 rows 163 columns
Cbc0010I After 700 nodes, 38 on tree, 41984 best solution, best possible 33798 (91.17 seconds)
Cbc0010I After 800 nodes, 37 on tree, 41984 best solution, best possible 33798 (99.10 seconds)
Cbc0010I After 900 nodes, 13 on tree, 41984 best solution, best possible 33798 (112.42 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1387 rows 381 columns - 157 fixed gives 346, 95 - ok now
Cbc0010I After 1000 nodes, 13 on tree, 41984 best solution, best possible 33798 (129.12 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 307 rows 90 columns
Cbc0010I After 1100 nodes, 14 on tree, 41984 best solution, best possible 33798 (142.09 seconds)
Cbc0010I After 1200 nodes, 15 on tree, 41984 best solution, best possible 33798 (150.92 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 486 rows 143 columns
Cbc0010I After 1300 nodes, 16 on tree, 41984 best solution, best possible 33798 (157.96 seconds)
Cbc0010I After 1400 nodes, 17 on tree, 41984 best solution, best possible 33798 (164.22 seconds)
Cbc0010I After 1500 nodes, 17 on tree, 41984 best solution, best possible 33798 (170.04 seconds)
Cbc0010I After 1600 nodes, 18 on tree, 41984 best solution, best possible 33798 (177.03 seconds)
Cbc0010I After 1700 nodes, 18 on tree, 41984 best solution, best possible 33798 (184.44 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 479 rows 144 columns
Cbc0010I After 1800 nodes, 18 on tree, 41984 best solution, best possible 33798 (192.39 seconds)
Cbc0010I After 1900 nodes, 17 on tree, 41984 best solution, best possible 33798 (200.15 seconds)
Cbc0010I After 2000 nodes, 21 on tree, 41984 best solution, best possible 33798 (208.25 seconds)
Cbc0010I After 2100 nodes, 20 on tree, 41984 best solution, best possible 33798 (214.94 seconds)
Cbc0010I After 2200 nodes, 20 on tree, 41984 best solution, best possible 33798 (222.36 seconds)
Cbc0010I After 2300 nodes, 20 on tree, 41984 best solution, best possible 33798 (229.45 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1446 rows 412 columns - 175 fixed gives 459, 99 - ok now
Cbc0010I After 2400 nodes, 20 on tree, 41984 best solution, best possible 33798 (237.33 seconds)
Cbc0010I After 2500 nodes, 25 on tree, 41984 best solution, best possible 33798 (244.45 seconds)
Cbc0010I After 2600 nodes, 25 on tree, 41984 best solution, best possible 33798 (252.15 seconds)
Cbc0010I After 2700 nodes, 29 on tree, 41984 best solution, best possible 33798 (260.49 seconds)
Cbc0010I After 2800 nodes, 31 on tree, 41984 best solution, best possible 33798 (268.82 seconds)
Cbc0010I After 2900 nodes, 32 on tree, 41984 best solution, best possible 33798 (277.60 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1345 rows 385 columns - 153 fixed gives 460, 99 - ok now
Cbc0010I After 3000 nodes, 32 on tree, 41984 best solution, best possible 33798 (286.35 seconds)
Cbc0010I After 3100 nodes, 32 on tree, 41984 best solution, best possible 33798 (295.11 seconds)
Cbc0010I After 3200 nodes, 33 on tree, 41984 best solution, best possible 33798 (304.29 seconds)
Cbc0010I After 3300 nodes, 36 on tree, 41984 best solution, best possible 33798 (312.43 seconds)
Cbc0010I After 3400 nodes, 33 on tree, 41984 best solution, best possible 33798 (321.77 seconds)
Cbc0010I After 3500 nodes, 35 on tree, 41984 best solution, best possible 33798 (330.29 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 691 rows 201 columns
Cbc0010I After 3600 nodes, 42 on tree, 41984 best solution, best possible 33798 (338.25 seconds)
Cbc0010I After 3700 nodes, 43 on tree, 41984 best solution, best possible 33798 (345.53 seconds)
Cbc0010I After 3800 nodes, 43 on tree, 41984 best solution, best possible 33798 (353.39 seconds)
Cbc0010I After 3900 nodes, 48 on tree, 41984 best solution, best possible 33798 (361.41 seconds)
Cbc0010I After 4000 nodes, 50 on tree, 41984 best solution, best possible 33798 (368.67 seconds)
Cbc0010I After 4100 nodes, 53 on tree, 41984 best solution, best possible 33798 (376.96 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 650 rows 193 columns
Cbc0010I After 4200 nodes, 52 on tree, 41984 best solution, best possible 33798 (385.11 seconds)
Cbc0010I After 4300 nodes, 52 on tree, 41984 best solution, best possible 33798 (393.29 seconds)
Cbc0010I After 4400 nodes, 57 on tree, 41984 best solution, best possible 33798 (401.58 seconds)
Cbc0010I After 4500 nodes, 57 on tree, 41984 best solution, best possible 33798 (410.37 seconds)
Cbc0010I After 4600 nodes, 57 on tree, 41984 best solution, best possible 33798 (419.06 seconds)
Cbc0010I After 4700 nodes, 57 on tree, 41984 best solution, best possible 33798 (427.89 seconds)
Cbc0010I After 4800 nodes, 61 on tree, 41984 best solution, best possible 33798 (435.56 seconds)
Cbc0010I After 4900 nodes, 61 on tree, 41984 best solution, best possible 33798 (443.47 seconds)
Cbc0010I After 5000 nodes, 64 on tree, 41984 best solution, best possible 33798 (451.81 seconds)
Cbc0010I After 5100 nodes, 64 on tree, 41984 best solution, best possible 33798 (459.71 seconds)
Cbc0010I After 5200 nodes, 67 on tree, 41984 best solution, best possible 33798 (466.51 seconds)
Cbc0010I After 5300 nodes, 66 on tree, 41984 best solution, best possible 33798 (474.74 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 449 rows 136 columns
Cbc0010I After 5400 nodes, 66 on tree, 41984 best solution, best possible 33798 (482.81 seconds)
Cbc0010I After 5500 nodes, 67 on tree, 41984 best solution, best possible 33798 (490.13 seconds)
Cbc0010I After 5600 nodes, 67 on tree, 41984 best solution, best possible 33798 (497.76 seconds)
Cbc0010I After 5700 nodes, 66 on tree, 41984 best solution, best possible 33798 (505.62 seconds)
Cbc0010I After 5800 nodes, 67 on tree, 41984 best solution, best possible 33798 (514.65 seconds)
Cbc0010I After 5900 nodes, 71 on tree, 41984 best solution, best possible 33798 (522.02 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1299 rows 367 columns - 150 fixed gives 432, 94 - ok now
Cbc0010I After 6000 nodes, 70 on tree, 41984 best solution, best possible 33798 (529.17 seconds)
Cbc0010I After 6100 nodes, 71 on tree, 41984 best solution, best possible 33798 (536.73 seconds)
Cbc0010I After 6200 nodes, 75 on tree, 41984 best solution, best possible 33798 (544.69 seconds)
Cbc0010I After 6300 nodes, 76 on tree, 41984 best solution, best possible 33798 (551.85 seconds)
Cbc0010I After 6400 nodes, 75 on tree, 41984 best solution, best possible 33798 (559.85 seconds)
Cbc0010I After 6500 nodes, 75 on tree, 41984 best solution, best possible 33798 (569.59 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 655 rows 191 columns
Cbc0010I After 6600 nodes, 78 on tree, 41984 best solution, best possible 33798 (577.94 seconds)
Cbc0010I After 6700 nodes, 82 on tree, 41984 best solution, best possible 33798 (584.23 seconds)
Cbc0010I After 6800 nodes, 86 on tree, 41984 best solution, best possible 33798 (591.27 seconds)
Cbc0010I After 6900 nodes, 86 on tree, 41984 best solution, best possible 33798 (597.76 seconds)
Cbc0010I After 7000 nodes, 85 on tree, 41984 best solution, best possible 33798 (604.19 seconds)
Cbc0010I After 7100 nodes, 87 on tree, 41984 best solution, best possible 33798 (610.36 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 365 rows 110 columns
Cbc0010I After 7200 nodes, 86 on tree, 41984 best solution, best possible 33798 (619.23 seconds)
Cbc0010I After 7300 nodes, 85 on tree, 41984 best solution, best possible 33798 (627.38 seconds)
Cbc0010I After 7400 nodes, 86 on tree, 41984 best solution, best possible 33798 (634.18 seconds)
Cbc0010I After 7500 nodes, 89 on tree, 41984 best solution, best possible 33798 (640.90 seconds)
Cbc0010I After 7600 nodes, 90 on tree, 41984 best solution, best possible 33798 (648.08 seconds)
Cbc0010I After 7700 nodes, 88 on tree, 41984 best solution, best possible 33798 (654.77 seconds)
Cbc0010I After 7800 nodes, 93 on tree, 41984 best solution, best possible 33798 (661.41 seconds)
Cbc0010I After 7900 nodes, 92 on tree, 41984 best solution, best possible 33798 (668.37 seconds)
Cbc0010I After 8000 nodes, 93 on tree, 41984 best solution, best possible 33798 (675.02 seconds)
Cbc0010I After 8100 nodes, 93 on tree, 41984 best solution, best possible 33798 (682.82 seconds)
Cbc0010I After 8200 nodes, 96 on tree, 41984 best solution, best possible 33798 (689.42 seconds)
Cbc0010I After 8300 nodes, 95 on tree, 41984 best solution, best possible 33798 (696.86 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 445 rows 135 columns
Cbc0010I After 8400 nodes, 96 on tree, 41984 best solution, best possible 33798 (704.23 seconds)
Cbc0010I After 8500 nodes, 95 on tree, 41984 best solution, best possible 33798 (711.31 seconds)
Cbc0010I After 8600 nodes, 97 on tree, 41984 best solution, best possible 33798 (718.01 seconds)
Cbc0010I After 8700 nodes, 96 on tree, 41984 best solution, best possible 33798 (724.84 seconds)
Cbc0010I After 8800 nodes, 97 on tree, 41984 best solution, best possible 33798 (732.13 seconds)
Cbc0010I After 8900 nodes, 97 on tree, 41984 best solution, best possible 33798 (739.10 seconds)
Cbc0010I After 9000 nodes, 97 on tree, 41984 best solution, best possible 33798 (746.30 seconds)
Cbc0010I After 9100 nodes, 97 on tree, 41984 best solution, best possible 33798 (754.25 seconds)
Cbc0010I After 9200 nodes, 98 on tree, 41984 best solution, best possible 33798 (761.31 seconds)
Cbc0010I After 9300 nodes, 99 on tree, 41984 best solution, best possible 33798 (768.80 seconds)
Cbc0010I After 9400 nodes, 98 on tree, 41984 best solution, best possible 33798 (775.01 seconds)
Cbc0010I After 9500 nodes, 103 on tree, 41984 best solution, best possible 33798 (782.07 seconds)
Cbc0010I After 9600 nodes, 105 on tree, 41984 best solution, best possible 33798 (789.55 seconds)
Cbc0010I After 9700 nodes, 106 on tree, 41984 best solution, best possible 33798 (796.73 seconds)
Cbc0010I After 9800 nodes, 107 on tree, 41984 best solution, best possible 33798 (805.63 seconds)
Cbc0010I After 9900 nodes, 108 on tree, 41984 best solution, best possible 33798 (813.59 seconds)
Cbc0010I After 10000 nodes, 111 on tree, 41984 best solution, best possible 33798 (820.05 seconds)
Cbc0010I After 10100 nodes, 113 on tree, 41984 best solution, best possible 33798 (826.66 seconds)
Cbc0010I After 10200 nodes, 113 on tree, 41984 best solution, best possible 33798 (833.58 seconds)
Cbc0010I After 10300 nodes, 116 on tree, 41984 best solution, best possible 33798 (840.11 seconds)
Cbc0010I After 10400 nodes, 117 on tree, 41984 best solution, best possible 33798 (846.49 seconds)
Cbc0010I After 10500 nodes, 121 on tree, 41984 best solution, best possible 33798 (852.04 seconds)
Cbc0010I After 10600 nodes, 116 on tree, 41984 best solution, best possible 33798 (858.14 seconds)
Cbc0010I After 10700 nodes, 118 on tree, 41984 best solution, best possible 33798 (865.04 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1318 rows 374 columns - 155 fixed gives 426, 92 - ok now
Cbc0010I After 10800 nodes, 116 on tree, 41984 best solution, best possible 33798 (870.30 seconds)
Cbc0010I After 10900 nodes, 116 on tree, 41984 best solution, best possible 33798 (876.75 seconds)
Cbc0010I After 11000 nodes, 117 on tree, 41984 best solution, best possible 33798 (882.92 seconds)
Cbc0010I After 11100 nodes, 88 on tree, 41984 best solution, best possible 34151 (895.78 seconds)
Cbc0010I After 11200 nodes, 65 on tree, 41984 best solution, best possible 34483 (905.04 seconds)
Cbc0010I After 11300 nodes, 44 on tree, 41984 best solution, best possible 34920 (913.24 seconds)
Cbc0010I After 11400 nodes, 18 on tree, 41984 best solution, best possible 35511 (921.96 seconds)
Cbc0010I After 11500 nodes, 4 on tree, 41984 best solution, best possible 35795 (928.27 seconds)
Cbc0010I After 11600 nodes, 1 on tree, 41984 best solution, best possible 35805 (933.57 seconds)
Cbc0010I After 11700 nodes, 2 on tree, 41984 best solution, best possible 35820 (939.68 seconds)
Cbc0010I After 11800 nodes, 3 on tree, 41984 best solution, best possible 35835 (946.03 seconds)
Cbc0010I After 11900 nodes, 9 on tree, 41984 best solution, best possible 35840 (950.43 seconds)
Cbc0016I Integer solution of 35840 found by strong branching after 5436657 iterations and 11940 nodes (951.52 seconds)
Cbc0001I Search completed - best objective 35840, took 5436812 iterations and 11940 nodes (951.56 seconds)
Cbc0032I Strong branching done 23648 times (1549126 iterations), fathomed 721 nodes and fixed 1867 variables
Cbc0035I Maximum depth 2068, 0 variables fixed on reduced cost
Cuts at root node changed objective from 29986.3 to 31499
Probing was tried 1821 times and created 74106 cuts of which 0 were active after adding rounds of cuts (4.148 seconds)
Gomory was tried 1035 times and created 2551 cuts of which 0 were active after adding rounds of cuts (2.664 seconds)
Knapsack was tried 1035 times and created 4047 cuts of which 0 were active after adding rounds of cuts (0.902 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 1035 times and created 13296 cuts of which 0 were active after adding rounds of cuts (1.203 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ImplicationCuts was tried 61 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                35840.00000000
Enumerated nodes:               11940
Total iterations:               5436812
Time (CPU seconds):             951.62
Time (Wallclock seconds):       952.99

Total time (CPU seconds):       951.63   (Wallclock seconds):       953.00

