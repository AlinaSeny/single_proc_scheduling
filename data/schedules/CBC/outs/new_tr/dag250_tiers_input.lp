Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag250_tiers_input.lp sec 1800 solve solu solutions/new_tr/dag250_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 968794 - 8.90 seconds
Cgl0002I 2100 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1221 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 49 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6187 rows, 2002 columns (2002 integer (1945 of which binary)) and 20571 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2002 objects (2002 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 989 integers unsatisfied sum - 258.279
Cbc0038I Pass   1: (12.73 seconds) suminf.  138.87976 (810) obj. 1.5275e+06 iterations 3294
Cbc0038I Pass   2: (13.07 seconds) suminf.  114.02293 (772) obj. 1.47863e+06 iterations 1230
Cbc0038I Pass   3: (13.21 seconds) suminf.  104.44937 (795) obj. 1.50536e+06 iterations 468
Cbc0038I Pass   4: (13.34 seconds) suminf.   99.57855 (789) obj. 1.45054e+06 iterations 391
Cbc0038I Pass   5: (13.47 seconds) suminf.   95.52832 (779) obj. 1.4903e+06 iterations 425
Cbc0038I Pass   6: (13.54 seconds) suminf.   93.31794 (778) obj. 1.49819e+06 iterations 173
Cbc0038I Pass   7: (13.57 seconds) suminf.   93.36544 (780) obj. 1.49563e+06 iterations 55
Cbc0038I Pass   8: (13.71 seconds) suminf.   91.81474 (741) obj. 1.54142e+06 iterations 483
Cbc0038I Pass   9: (13.81 seconds) suminf.   88.64328 (758) obj. 1.54613e+06 iterations 263
Cbc0038I Pass  10: (13.95 seconds) suminf.   86.58562 (741) obj. 1.49479e+06 iterations 460
Cbc0038I Pass  11: (14.02 seconds) suminf.   84.09303 (741) obj. 1.49421e+06 iterations 193
Cbc0038I Pass  12: (14.09 seconds) suminf.   82.63533 (743) obj. 1.4931e+06 iterations 184
Cbc0038I Pass  13: (14.16 seconds) suminf.   83.43183 (737) obj. 1.49536e+06 iterations 175
Cbc0038I Pass  14: (14.17 seconds) suminf.   83.96420 (740) obj. 1.4954e+06 iterations 14
Cbc0038I Pass  15: (14.27 seconds) suminf.   81.43115 (739) obj. 1.49492e+06 iterations 289
Cbc0038I Pass  16: (14.28 seconds) suminf.   81.79037 (739) obj. 1.49464e+06 iterations 15
Cbc0038I Pass  17: (14.36 seconds) suminf.   83.85219 (742) obj. 1.49594e+06 iterations 207
Cbc0038I Pass  18: (14.38 seconds) suminf.   83.74941 (744) obj. 1.49598e+06 iterations 28
Cbc0038I Pass  19: (14.47 seconds) suminf.   82.11356 (746) obj. 1.49501e+06 iterations 265
Cbc0038I Pass  20: (14.57 seconds) suminf.   83.58396 (747) obj. 1.4952e+06 iterations 267
Cbc0038I Pass  21: (14.58 seconds) suminf.   83.84589 (749) obj. 1.49481e+06 iterations 8
Cbc0038I Pass  22: (14.70 seconds) suminf.   83.23564 (745) obj. 1.5014e+06 iterations 367
Cbc0038I Pass  23: (14.72 seconds) suminf.   82.64404 (748) obj. 1.49585e+06 iterations 39
Cbc0038I Pass  24: (14.84 seconds) suminf.   82.99839 (723) obj. 1.50441e+06 iterations 384
Cbc0038I Pass  25: (14.92 seconds) suminf.   82.18216 (739) obj. 1.49665e+06 iterations 225
Cbc0038I Pass  26: (15.01 seconds) suminf.   82.19523 (736) obj. 1.49239e+06 iterations 219
Cbc0038I Pass  27: (15.06 seconds) suminf.   81.87693 (751) obj. 1.49354e+06 iterations 134
Cbc0038I Pass  28: (15.14 seconds) suminf.   82.60560 (739) obj. 1.5e+06 iterations 209
Cbc0038I Pass  29: (15.16 seconds) suminf.   82.54399 (740) obj. 1.49696e+06 iterations 23
Cbc0038I Pass  30: (15.19 seconds) suminf.   82.18216 (739) obj. 1.49665e+06 iterations 99
Cbc0038I Pass  31: (15.29 seconds) suminf.   81.29641 (745) obj. 1.49322e+06 iterations 251
Cbc0038I Pass  32: (15.31 seconds) suminf.   81.10877 (751) obj. 1.4936e+06 iterations 43
Cbc0038I Pass  33: (15.41 seconds) suminf.   82.74978 (739) obj. 1.50102e+06 iterations 287
Cbc0038I Pass  34: (15.42 seconds) suminf.   83.32608 (736) obj. 1.49805e+06 iterations 28
Cbc0038I Pass  35: (15.52 seconds) suminf.   80.95045 (742) obj. 1.49318e+06 iterations 271
Cbc0038I Pass  36: (15.94 seconds) suminf.  114.17489 (752) obj. 2.06966e+06 iterations 1578
Cbc0038I Pass  37: (16.19 seconds) suminf.   80.63248 (680) obj. 2.14945e+06 iterations 995
Cbc0038I Pass  38: (16.28 seconds) suminf.   77.00893 (633) obj. 2.15613e+06 iterations 289
Cbc0038I Pass  39: (16.32 seconds) suminf.   76.42790 (635) obj. 2.15686e+06 iterations 93
Cbc0038I Pass  40: (16.37 seconds) suminf.   77.03166 (643) obj. 2.15588e+06 iterations 91
Cbc0038I Pass  41: (16.48 seconds) suminf.   69.67235 (637) obj. 2.12072e+06 iterations 335
Cbc0038I Pass  42: (16.49 seconds) suminf.   69.48386 (638) obj. 2.1319e+06 iterations 7
Cbc0038I Pass  43: (16.59 seconds) suminf.   65.12485 (623) obj. 2.16986e+06 iterations 319
Cbc0038I Pass  44: (16.62 seconds) suminf.   64.04589 (615) obj. 2.16752e+06 iterations 100
Cbc0038I Pass  45: (16.66 seconds) suminf.   62.49519 (617) obj. 2.16984e+06 iterations 57
Cbc0038I Pass  46: (16.73 seconds) suminf.   64.15006 (615) obj. 2.08685e+06 iterations 205
Cbc0038I Pass  47: (16.75 seconds) suminf.   64.22437 (612) obj. 2.08692e+06 iterations 9
Cbc0038I Pass  48: (16.87 seconds) suminf.   60.93999 (567) obj. 2.11463e+06 iterations 451
Cbc0038I Pass  49: (16.91 seconds) suminf.   60.73107 (565) obj. 2.15917e+06 iterations 118
Cbc0038I Pass  50: (17.00 seconds) suminf.   57.50128 (579) obj. 2.17045e+06 iterations 270
Cbc0038I Pass  51: (17.03 seconds) suminf.   58.02774 (581) obj. 2.17556e+06 iterations 85
Cbc0038I Pass  52: (17.10 seconds) suminf.   56.43745 (579) obj. 2.1607e+06 iterations 145
Cbc0038I Pass  53: (17.13 seconds) suminf.   56.26538 (584) obj. 2.1255e+06 iterations 33
Cbc0038I Pass  54: (17.22 seconds) suminf.   54.96944 (550) obj. 1.88245e+06 iterations 304
Cbc0038I Pass  55: (17.26 seconds) suminf.   53.63610 (559) obj. 1.88012e+06 iterations 127
Cbc0038I Pass  56: (17.27 seconds) suminf.   53.43065 (558) obj. 1.88014e+06 iterations 42
Cbc0038I Pass  57: (17.30 seconds) suminf.   53.21363 (559) obj. 1.87983e+06 iterations 77
Cbc0038I Pass  58: (17.32 seconds) suminf.   53.03882 (559) obj. 1.88015e+06 iterations 30
Cbc0038I Pass  59: (17.38 seconds) suminf.   51.75287 (556) obj. 1.87115e+06 iterations 197
Cbc0038I Pass  60: (17.41 seconds) suminf.   51.24734 (570) obj. 1.87198e+06 iterations 61
Cbc0038I Pass  61: (17.45 seconds) suminf.   53.89009 (552) obj. 1.88334e+06 iterations 123
Cbc0038I Pass  62: (17.46 seconds) suminf.   52.83228 (557) obj. 1.88338e+06 iterations 41
Cbc0038I Pass  63: (17.54 seconds) suminf.   50.30816 (544) obj. 1.84138e+06 iterations 213
Cbc0038I Pass  64: (17.57 seconds) suminf.   50.40428 (539) obj. 1.82238e+06 iterations 93
Cbc0038I Pass  65: (17.58 seconds) suminf.   50.63241 (545) obj. 1.82216e+06 iterations 38
Cbc0038I Pass  66: (17.67 seconds) suminf.   50.34283 (532) obj. 1.85722e+06 iterations 278
Cbc0038I Pass  67: (17.71 seconds) suminf.   49.69438 (523) obj. 1.8174e+06 iterations 132
Cbc0038I Pass  68: (17.80 seconds) suminf.   48.61638 (517) obj. 1.81914e+06 iterations 324
Cbc0038I Pass  69: (17.81 seconds) suminf.   48.69216 (517) obj. 1.81915e+06 iterations 26
Cbc0038I Pass  70: (17.92 seconds) suminf.   45.73127 (501) obj. 1.82219e+06 iterations 406
Cbc0038I Pass  71: (17.95 seconds) suminf.   45.09722 (512) obj. 1.8223e+06 iterations 92
Cbc0038I Pass  72: (18.04 seconds) suminf.   45.78307 (493) obj. 1.81967e+06 iterations 329
Cbc0038I Pass  73: (18.10 seconds) suminf.   43.47392 (476) obj. 1.81822e+06 iterations 192
Cbc0038I Pass  74: (18.12 seconds) suminf.   43.85052 (483) obj. 1.81736e+06 iterations 19
Cbc0038I Pass  75: (18.21 seconds) suminf.   41.28101 (466) obj. 1.81109e+06 iterations 375
Cbc0038I Pass  76: (18.24 seconds) suminf.   40.02643 (497) obj. 1.81137e+06 iterations 93
Cbc0038I Pass  77: (18.28 seconds) suminf.   40.68122 (499) obj. 1.81098e+06 iterations 96
Cbc0038I Pass  78: (18.36 seconds) suminf.   42.05224 (460) obj. 1.80568e+06 iterations 303
Cbc0038I Pass  79: (18.41 seconds) suminf.   40.81921 (455) obj. 1.80567e+06 iterations 189
Cbc0038I Pass  80: (18.51 seconds) suminf.   42.40621 (455) obj. 1.81367e+06 iterations 319
Cbc0038I Pass  81: (18.54 seconds) suminf.   40.39412 (466) obj. 1.8061e+06 iterations 102
Cbc0038I Pass  82: (18.56 seconds) suminf.   39.10789 (458) obj. 1.81372e+06 iterations 82
Cbc0038I Pass  83: (18.67 seconds) suminf.   35.34109 (413) obj. 1.6032e+06 iterations 422
Cbc0038I Pass  84: (18.69 seconds) suminf.   33.86816 (404) obj. 1.6032e+06 iterations 57
Cbc0038I Pass  85: (18.78 seconds) suminf.   36.15673 (420) obj. 1.5931e+06 iterations 374
Cbc0038I Pass  86: (18.80 seconds) suminf.   35.30041 (402) obj. 1.60467e+06 iterations 67
Cbc0038I Pass  87: (18.87 seconds) suminf.   32.52366 (408) obj. 1.60478e+06 iterations 252
Cbc0038I Pass  88: (18.90 seconds) suminf.   30.80494 (413) obj. 1.60545e+06 iterations 96
Cbc0038I Pass  89: (18.97 seconds) suminf.   31.61871 (382) obj. 1.64349e+06 iterations 312
Cbc0038I Pass  90: (18.98 seconds) suminf.   31.61871 (382) obj. 1.64349e+06 iterations 5
Cbc0038I Pass  91: (19.03 seconds) suminf.   29.67652 (388) obj. 1.59361e+06 iterations 211
Cbc0038I Pass  92: (19.06 seconds) suminf.   28.77023 (387) obj. 1.5942e+06 iterations 81
Cbc0038I Pass  93: (19.12 seconds) suminf.   25.43596 (340) obj. 1.59741e+06 iterations 219
Cbc0038I Pass  94: (19.13 seconds) suminf.   25.47491 (344) obj. 1.59741e+06 iterations 41
Cbc0038I Pass  95: (19.17 seconds) suminf.   25.04968 (340) obj. 1.60059e+06 iterations 185
Cbc0038I Pass  96: (19.19 seconds) suminf.   24.16922 (339) obj. 1.59943e+06 iterations 54
Cbc0038I Pass  97: (19.24 seconds) suminf.   26.98867 (346) obj. 1.59353e+06 iterations 211
Cbc0038I Pass  98: (19.26 seconds) suminf.   25.19330 (338) obj. 1.59368e+06 iterations 64
Cbc0038I Pass  99: (19.31 seconds) suminf.   23.93677 (337) obj. 1.59104e+06 iterations 189
Cbc0038I Pass 100: (19.60 seconds) suminf.   79.67710 (481) obj. 1.87742e+06 iterations 1498
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 420 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6187 rows 2002 columns, reduced to 4132 rows 1298 columns - too large
Cbc0038I Mini branch and bound did not improve solution (20.69 seconds)
Cbc0038I After 20.69 seconds - Feasibility pump exiting - took 8.94 seconds
Cbc0031I 34 added rows had average density of 166.35294
Cbc0013I At root node, 34 cuts changed objective from 982911.39 to 983930.8 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.148 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 32 row cuts average 631.4 elements, 0 column cuts (0 active)  in 1.213 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 34 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.455 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 983930.8 (25.54 seconds)
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 983930.8 (97.73 seconds)
Cbc0010I After 200 nodes, 80 on tree, 1e+50 best solution, best possible 983930.8 (164.96 seconds)
Cbc0010I After 300 nodes, 90 on tree, 1e+50 best solution, best possible 983930.8 (444.70 seconds)
Cbc0010I After 400 nodes, 90 on tree, 1e+50 best solution, best possible 983930.8 (793.84 seconds)
Cbc0010I After 500 nodes, 90 on tree, 1e+50 best solution, best possible 983930.8 (1181.50 seconds)
Cbc0010I After 600 nodes, 90 on tree, 1e+50 best solution, best possible 983930.8 (1553.89 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 983930.8), took 4026993 iterations and 666 nodes (1797.68 seconds)
Cbc0032I Strong branching done 2356 times (202588 iterations), fathomed 177 nodes and fixed 3 variables
Cbc0035I Maximum depth 335, 0 variables fixed on reduced cost
Cuts at root node changed objective from 982911 to 983931
Probing was tried 158 times and created 239 cuts of which 0 were active after adding rounds of cuts (0.629 seconds)
Gomory was tried 157 times and created 214 cuts of which 0 were active after adding rounds of cuts (3.396 seconds)
Knapsack was tried 157 times and created 721 cuts of which 0 were active after adding rounds of cuts (0.329 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 11 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.455 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.084 seconds)
ImplicationCuts was tried 22 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    983930.796
Enumerated nodes:               666
Total iterations:               4026993
Time (CPU seconds):             1797.68
Time (Wallclock seconds):       1798.99

Total time (CPU seconds):       1797.72   (Wallclock seconds):       1799.04

