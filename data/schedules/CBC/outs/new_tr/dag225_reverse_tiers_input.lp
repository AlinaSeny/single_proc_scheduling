Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag225_reverse_tiers_input.lp sec 1800 solve solu transitive/dag225_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 903918 - 0.87 seconds
Cgl0002I 610 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 483 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 62 strengthened rows, 0 substitutions
Cgl0004I processed model has 2827 rows, 909 columns (909 integer (874 of which binary)) and 9284 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 909 objects (909 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 484 integers unsatisfied sum - 111.338
Cbc0038I Pass   1: suminf.   66.82071 (434) obj. 1.1521e+06 iterations 1081
Cbc0038I Pass   2: suminf.   65.44868 (437) obj. 1.18707e+06 iterations 238
Cbc0038I Pass   3: suminf.   62.40162 (431) obj. 1.18406e+06 iterations 106
Cbc0038I Pass   4: suminf.   62.46606 (433) obj. 1.21547e+06 iterations 120
Cbc0038I Pass   5: suminf.   61.13083 (426) obj. 1.21204e+06 iterations 56
Cbc0038I Pass   6: suminf.   61.04418 (431) obj. 1.21261e+06 iterations 17
Cbc0038I Pass   7: suminf.   58.12019 (426) obj. 1.2442e+06 iterations 193
Cbc0038I Pass   8: suminf.   57.11517 (444) obj. 1.28275e+06 iterations 93
Cbc0038I Pass   9: suminf.   57.26435 (443) obj. 1.28219e+06 iterations 23
Cbc0038I Pass  10: suminf.   52.27061 (434) obj. 1.26739e+06 iterations 97
Cbc0038I Pass  11: suminf.   51.98819 (449) obj. 1.28054e+06 iterations 70
Cbc0038I Pass  12: suminf.   50.36087 (436) obj. 1.28116e+06 iterations 192
Cbc0038I Pass  13: suminf.   51.37678 (424) obj. 1.45307e+06 iterations 152
Cbc0038I Pass  14: suminf.   51.06533 (423) obj. 1.46151e+06 iterations 16
Cbc0038I Pass  15: suminf.   50.88851 (434) obj. 1.37362e+06 iterations 249
Cbc0038I Pass  16: suminf.   49.76224 (439) obj. 1.33563e+06 iterations 161
Cbc0038I Pass  17: suminf.   48.99323 (436) obj. 1.33494e+06 iterations 16
Cbc0038I Pass  18: suminf.   50.29186 (440) obj. 1.32678e+06 iterations 217
Cbc0038I Pass  19: suminf.   49.51278 (447) obj. 1.32639e+06 iterations 97
Cbc0038I Pass  20: suminf.   49.40267 (437) obj. 1.32593e+06 iterations 19
Cbc0038I Pass  21: suminf.   49.44173 (443) obj. 1.32602e+06 iterations 119
Cbc0038I Pass  22: suminf.   47.87837 (439) obj. 1.32523e+06 iterations 45
Cbc0038I Pass  23: suminf.   47.83826 (447) obj. 1.32501e+06 iterations 19
Cbc0038I Pass  24: suminf.   49.14904 (440) obj. 1.32386e+06 iterations 93
Cbc0038I Pass  25: suminf.   50.78485 (440) obj. 1.32715e+06 iterations 70
Cbc0038I Pass  26: suminf.   48.25259 (437) obj. 1.32435e+06 iterations 69
Cbc0038I Pass  27: suminf.   49.35553 (441) obj. 1.32722e+06 iterations 89
Cbc0038I Pass  28: suminf.   45.84885 (408) obj. 1.32872e+06 iterations 155
Cbc0038I Pass  29: suminf.   47.48194 (424) obj. 1.3371e+06 iterations 109
Cbc0038I Pass  30: suminf.   47.07919 (431) obj. 1.33516e+06 iterations 45
Cbc0038I Pass  31: suminf.   47.87702 (437) obj. 1.26285e+06 iterations 320
Cbc0038I Pass  32: suminf.   46.60785 (434) obj. 1.29542e+06 iterations 129
Cbc0038I Pass  33: suminf.   46.49159 (435) obj. 1.30052e+06 iterations 4
Cbc0038I Pass  34: suminf.   45.42262 (430) obj. 1.32034e+06 iterations 153
Cbc0038I Pass  35: suminf.   43.68532 (436) obj. 1.30433e+06 iterations 162
Cbc0038I Pass  36: suminf.   44.45931 (430) obj. 1.31462e+06 iterations 183
Cbc0038I Pass  37: suminf.   44.20383 (437) obj. 1.29989e+06 iterations 74
Cbc0038I Pass  38: suminf.   43.50394 (433) obj. 1.29896e+06 iterations 41
Cbc0038I Pass  39: suminf.   49.09478 (411) obj. 1.31985e+06 iterations 171
Cbc0038I Pass  40: suminf.   47.92757 (414) obj. 1.3254e+06 iterations 76
Cbc0038I Pass  41: suminf.   47.04751 (411) obj. 1.33052e+06 iterations 15
Cbc0038I Pass  42: suminf.   47.23075 (415) obj. 1.33053e+06 iterations 16
Cbc0038I Pass  43: suminf.   47.06112 (413) obj. 1.31817e+06 iterations 81
Cbc0038I Pass  44: suminf.   44.84872 (414) obj. 1.31532e+06 iterations 46
Cbc0038I Pass  45: suminf.   49.02722 (397) obj. 1.32018e+06 iterations 118
Cbc0038I Pass  46: suminf.   47.92757 (414) obj. 1.3254e+06 iterations 68
Cbc0038I Pass  47: suminf.   47.04751 (411) obj. 1.33052e+06 iterations 14
Cbc0038I Pass  48: suminf.   47.23075 (415) obj. 1.33053e+06 iterations 22
Cbc0038I Pass  49: suminf.   47.94005 (386) obj. 1.32084e+06 iterations 236
Cbc0038I Pass  50: suminf.   46.56957 (400) obj. 1.3199e+06 iterations 137
Cbc0038I Pass  51: suminf.   46.29647 (408) obj. 1.32073e+06 iterations 148
Cbc0038I Pass  52: suminf.   43.95170 (410) obj. 1.30743e+06 iterations 130
Cbc0038I Pass  53: suminf.   44.10459 (406) obj. 1.30625e+06 iterations 47
Cbc0038I Pass  54: suminf.   47.12285 (396) obj. 1.32957e+06 iterations 182
Cbc0038I Pass  55: suminf.   45.85882 (395) obj. 1.32018e+06 iterations 98
Cbc0038I Pass  56: suminf.   48.28092 (379) obj. 1.32253e+06 iterations 162
Cbc0038I Pass  57: suminf.   47.41029 (381) obj. 1.32172e+06 iterations 35
Cbc0038I Pass  58: suminf.   47.66613 (377) obj. 1.32074e+06 iterations 54
Cbc0038I Pass  59: suminf.   47.22820 (379) obj. 1.32084e+06 iterations 46
Cbc0038I Pass  60: suminf.   47.71114 (387) obj. 1.32127e+06 iterations 144
Cbc0038I Pass  61: suminf.   46.88015 (393) obj. 1.32132e+06 iterations 102
Cbc0038I Pass  62: suminf.   46.84983 (375) obj. 1.32467e+06 iterations 172
Cbc0038I Pass  63: suminf.   46.76756 (378) obj. 1.32674e+06 iterations 96
Cbc0038I Pass  64: suminf.   45.65764 (365) obj. 1.32679e+06 iterations 85
Cbc0038I Pass  65: suminf.   44.48941 (330) obj. 1.31228e+06 iterations 295
Cbc0038I Pass  66: suminf.   44.31861 (351) obj. 1.32082e+06 iterations 150
Cbc0038I Pass  67: suminf.   44.48034 (342) obj. 1.31118e+06 iterations 42
Cbc0038I Pass  68: suminf.   44.20268 (338) obj. 1.27384e+06 iterations 211
Cbc0038I Pass  69: suminf.   43.99799 (360) obj. 1.27355e+06 iterations 194
Cbc0038I Pass  70: suminf.   40.11058 (314) obj. 1.2695e+06 iterations 340
Cbc0038I Pass  71: suminf.   38.86325 (302) obj. 1.30664e+06 iterations 184
Cbc0038I Pass  72: suminf.   27.71392 (237) obj. 1.33771e+06 iterations 439
Cbc0038I Pass  73: suminf.   27.35895 (230) obj. 1.34245e+06 iterations 214
Cbc0038I Pass  74: suminf.   22.33154 (218) obj. 1.32871e+06 iterations 197
Cbc0038I Pass  75: suminf.   20.45788 (210) obj. 1.38147e+06 iterations 182
Cbc0038I Pass  76: suminf.   19.82454 (204) obj. 1.38059e+06 iterations 43
Cbc0038I Pass  77: suminf.   18.64292 (199) obj. 1.33842e+06 iterations 527
Cbc0038I Pass  78: suminf.   17.34712 (201) obj. 1.33777e+06 iterations 43
Cbc0038I Pass  79: suminf.   24.02795 (213) obj. 1.37661e+06 iterations 205
Cbc0038I Pass  80: suminf.   20.96383 (183) obj. 1.33014e+06 iterations 174
Cbc0038I Pass  81: suminf.   19.59572 (197) obj. 1.32945e+06 iterations 118
Cbc0038I Pass  82: suminf.   19.93707 (199) obj. 1.36891e+06 iterations 163
Cbc0038I Pass  83: suminf.   17.37271 (203) obj. 1.37064e+06 iterations 203
Cbc0038I Pass  84: suminf.   16.88500 (203) obj. 1.39574e+06 iterations 71
Cbc0038I Pass  85: suminf.   16.18336 (197) obj. 1.39567e+06 iterations 28
Cbc0038I Pass  86: suminf.   21.95057 (186) obj. 1.65664e+06 iterations 375
Cbc0038I Pass  87: suminf.   16.51304 (179) obj. 1.51986e+06 iterations 190
Cbc0038I Pass  88: suminf.   15.80473 (174) obj. 1.51981e+06 iterations 59
Cbc0038I Pass  89: suminf.   14.58790 (176) obj. 1.52567e+06 iterations 165
Cbc0038I Pass  90: suminf.   14.03886 (174) obj. 1.56553e+06 iterations 58
Cbc0038I Pass  91: suminf.   17.51338 (190) obj. 1.65739e+06 iterations 172
Cbc0038I Pass  92: suminf.   16.23612 (189) obj. 1.56383e+06 iterations 115
Cbc0038I Pass  93: suminf.   14.43350 (187) obj. 1.52067e+06 iterations 247
Cbc0038I Pass  94: suminf.   15.24442 (189) obj. 1.51839e+06 iterations 124
Cbc0038I Pass  95: suminf.   13.23636 (168) obj. 1.50895e+06 iterations 411
Cbc0038I Pass  96: suminf.   13.88398 (150) obj. 1.51648e+06 iterations 149
Cbc0038I Pass  97: suminf.   13.67987 (148) obj. 1.47031e+06 iterations 274
Cbc0038I Pass  98: suminf.   13.50332 (144) obj. 1.46691e+06 iterations 136
Cbc0038I Pass  99: suminf.   15.35679 (116) obj. 1.47661e+06 iterations 245
Cbc0038I Pass 100: suminf.   65.93689 (340) obj. 1.65038e+06 iterations 835
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 134 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2827 rows 909 columns, reduced to 2289 rows 708 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.09 seconds)
Cbc0038I After 4.09 seconds - Feasibility pump exiting - took 2.81 seconds
Cbc0031I 58 added rows had average density of 108.96552
Cbc0013I At root node, 58 cuts changed objective from 927667.62 to 962671.8 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 395 row cuts average 559.8 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 212 row cuts average 85.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 962671.8 (12.62 seconds)
Cbc0010I After 100 nodes, 14 on tree, 1e+50 best solution, best possible 962671.8 (52.58 seconds)
Cbc0010I After 200 nodes, 15 on tree, 1e+50 best solution, best possible 962671.8 (87.66 seconds)
Cbc0010I After 300 nodes, 13 on tree, 1e+50 best solution, best possible 962671.8 (128.93 seconds)
Cbc0010I After 400 nodes, 14 on tree, 1e+50 best solution, best possible 962671.8 (183.24 seconds)
Cbc0010I After 500 nodes, 24 on tree, 1e+50 best solution, best possible 962671.8 (215.94 seconds)
Cbc0010I After 600 nodes, 11 on tree, 1e+50 best solution, best possible 962671.8 (250.07 seconds)
Cbc0010I After 700 nodes, 12 on tree, 1e+50 best solution, best possible 962671.8 (296.16 seconds)
Cbc0010I After 800 nodes, 11 on tree, 1e+50 best solution, best possible 962671.8 (339.45 seconds)
Cbc0010I After 900 nodes, 10 on tree, 1e+50 best solution, best possible 962671.8 (384.26 seconds)
Cbc0010I After 1000 nodes, 12 on tree, 1e+50 best solution, best possible 962671.8 (426.95 seconds)
Cbc0010I After 1100 nodes, 14 on tree, 1e+50 best solution, best possible 964906.06 (472.89 seconds)
Cbc0010I After 1200 nodes, 12 on tree, 1e+50 best solution, best possible 964906.06 (526.20 seconds)
Cbc0010I After 1300 nodes, 19 on tree, 1e+50 best solution, best possible 964906.06 (566.61 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 1e+50 best solution, best possible 964906.06 (618.81 seconds)
Cbc0010I After 1500 nodes, 22 on tree, 1e+50 best solution, best possible 964906.06 (667.47 seconds)
Cbc0010I After 1600 nodes, 18 on tree, 1e+50 best solution, best possible 964906.06 (711.08 seconds)
Cbc0010I After 1700 nodes, 27 on tree, 1e+50 best solution, best possible 964906.06 (751.20 seconds)
Cbc0010I After 1800 nodes, 25 on tree, 1e+50 best solution, best possible 964906.06 (789.98 seconds)
Cbc0010I After 1900 nodes, 32 on tree, 1e+50 best solution, best possible 964906.06 (833.40 seconds)
Cbc0010I After 2000 nodes, 42 on tree, 1e+50 best solution, best possible 964906.06 (867.63 seconds)
Cbc0010I After 2100 nodes, 43 on tree, 1e+50 best solution, best possible 964906.06 (900.64 seconds)
Cbc0010I After 2200 nodes, 40 on tree, 1e+50 best solution, best possible 964906.06 (937.01 seconds)
Cbc0010I After 2300 nodes, 58 on tree, 1e+50 best solution, best possible 964906.06 (970.85 seconds)
Cbc0010I After 2400 nodes, 48 on tree, 1e+50 best solution, best possible 964906.06 (1006.70 seconds)
Cbc0010I After 2500 nodes, 55 on tree, 1e+50 best solution, best possible 964906.06 (1037.93 seconds)
Cbc0010I After 2600 nodes, 57 on tree, 1e+50 best solution, best possible 964906.06 (1077.79 seconds)
Cbc0010I After 2700 nodes, 56 on tree, 1e+50 best solution, best possible 964906.06 (1125.03 seconds)
Cbc0010I After 2800 nodes, 65 on tree, 1e+50 best solution, best possible 964906.06 (1165.22 seconds)
Cbc0010I After 2900 nodes, 71 on tree, 1e+50 best solution, best possible 964906.06 (1209.63 seconds)
Cbc0010I After 3000 nodes, 71 on tree, 1e+50 best solution, best possible 964906.06 (1262.93 seconds)
Cbc0010I After 3100 nodes, 78 on tree, 1e+50 best solution, best possible 964906.06 (1307.63 seconds)
Cbc0010I After 3200 nodes, 77 on tree, 1e+50 best solution, best possible 964906.06 (1350.44 seconds)
Cbc0010I After 3300 nodes, 85 on tree, 1e+50 best solution, best possible 964906.06 (1389.90 seconds)
Cbc0010I After 3400 nodes, 91 on tree, 1e+50 best solution, best possible 964906.06 (1434.28 seconds)
Cbc0010I After 3500 nodes, 92 on tree, 1e+50 best solution, best possible 964906.06 (1484.74 seconds)
Cbc0010I After 3600 nodes, 100 on tree, 1e+50 best solution, best possible 964906.06 (1530.66 seconds)
Cbc0010I After 3700 nodes, 107 on tree, 1e+50 best solution, best possible 964906.06 (1571.89 seconds)
Cbc0010I After 3800 nodes, 110 on tree, 1e+50 best solution, best possible 964906.06 (1618.65 seconds)
Cbc0010I After 3900 nodes, 115 on tree, 1e+50 best solution, best possible 964906.06 (1657.13 seconds)
Cbc0010I After 4000 nodes, 116 on tree, 1e+50 best solution, best possible 964906.06 (1705.28 seconds)
Cbc0010I After 4100 nodes, 122 on tree, 1e+50 best solution, best possible 964906.06 (1751.97 seconds)
Cbc0010I After 4200 nodes, 129 on tree, 1e+50 best solution, best possible 964906.06 (1792.86 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 964906.06), took 7318737 iterations and 4217 nodes (1799.85 seconds)
Cbc0032I Strong branching done 19846 times (1609776 iterations), fathomed 715 nodes and fixed 867 variables
Cbc0035I Maximum depth 957, 0 variables fixed on reduced cost
Cuts at root node changed objective from 927668 to 962672
Probing was tried 23 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.121 seconds)
Gomory was tried 764 times and created 2325 cuts of which 0 were active after adding rounds of cuts (4.173 seconds)
Knapsack was tried 764 times and created 4070 cuts of which 0 were active after adding rounds of cuts (0.883 seconds)
Clique was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
MixedIntegerRounding2 was tried 23 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 764 times and created 17470 cuts of which 0 were active after adding rounds of cuts (1.460 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
ImplicationCuts was tried 26 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    964906.057
Enumerated nodes:               4217
Total iterations:               7318737
Time (CPU seconds):             1799.87
Time (Wallclock seconds):       1803.18

Total time (CPU seconds):       1799.88   (Wallclock seconds):       1803.20

