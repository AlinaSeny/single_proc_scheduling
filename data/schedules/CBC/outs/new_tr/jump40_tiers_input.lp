Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump40_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump40_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 40504.7 - 0.71 seconds
Cgl0002I 324 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 494 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 4518 rows, 1324 columns (1324 integer (1283 of which binary)) and 15386 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1324 objects (1324 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 842 integers unsatisfied sum - 256.927
Cbc0038I Pass   1: (1.82 seconds) suminf.   98.13176 (827) obj. 61871.5 iterations 2117
Cbc0038I Pass   2: (2.04 seconds) suminf.   85.07690 (871) obj. 61448.3 iterations 886
Cbc0038I Pass   3: (2.21 seconds) suminf.   72.28422 (841) obj. 64061.9 iterations 624
Cbc0038I Pass   4: (2.28 seconds) suminf.   70.26430 (833) obj. 63988.1 iterations 172
Cbc0038I Pass   5: (2.34 seconds) suminf.   66.02561 (817) obj. 64183.4 iterations 183
Cbc0038I Pass   6: (2.42 seconds) suminf.   63.72578 (795) obj. 64214.4 iterations 267
Cbc0038I Pass   7: (2.45 seconds) suminf.   63.20311 (827) obj. 64198.1 iterations 98
Cbc0038I Pass   8: (2.57 seconds) suminf.   67.88995 (800) obj. 64230.4 iterations 409
Cbc0038I Pass   9: (2.64 seconds) suminf.   67.21985 (813) obj. 64262.8 iterations 197
Cbc0038I Pass  10: (2.68 seconds) suminf.   67.63557 (822) obj. 64234.7 iterations 110
Cbc0038I Pass  11: (2.76 seconds) suminf.   66.32499 (803) obj. 64258.2 iterations 241
Cbc0038I Pass  12: (2.80 seconds) suminf.   65.79503 (799) obj. 64220.8 iterations 108
Cbc0038I Pass  13: (2.90 seconds) suminf.   66.51491 (817) obj. 64235.3 iterations 306
Cbc0038I Pass  14: (2.97 seconds) suminf.   66.49757 (821) obj. 64213.3 iterations 231
Cbc0038I Pass  15: (2.99 seconds) suminf.   66.81589 (824) obj. 64218.3 iterations 32
Cbc0038I Pass  16: (3.12 seconds) suminf.   66.91602 (821) obj. 64121.5 iterations 459
Cbc0038I Pass  17: (3.17 seconds) suminf.   64.37853 (829) obj. 64162.2 iterations 127
Cbc0038I Pass  18: (3.20 seconds) suminf.   63.97762 (833) obj. 64176.2 iterations 87
Cbc0038I Pass  19: (3.37 seconds) suminf.   60.38002 (814) obj. 64323.8 iterations 621
Cbc0038I Pass  20: (3.42 seconds) suminf.   57.07050 (812) obj. 64393.1 iterations 146
Cbc0038I Pass  21: (3.45 seconds) suminf.   55.78387 (804) obj. 64417.7 iterations 60
Cbc0038I Pass  22: (3.61 seconds) suminf.   61.45201 (830) obj. 64819.9 iterations 590
Cbc0038I Pass  23: (3.67 seconds) suminf.   60.69803 (834) obj. 64492.5 iterations 142
Cbc0038I Pass  24: (3.80 seconds) suminf.   61.09169 (822) obj. 64299.9 iterations 478
Cbc0038I Pass  25: (3.86 seconds) suminf.   57.99727 (817) obj. 64368.8 iterations 194
Cbc0038I Pass  26: (3.93 seconds) suminf.   57.76713 (831) obj. 64280.4 iterations 210
Cbc0038I Pass  27: (3.99 seconds) suminf.   56.36507 (826) obj. 64262.3 iterations 153
Cbc0038I Pass  28: (4.12 seconds) suminf.   56.68622 (804) obj. 64341.5 iterations 468
Cbc0038I Pass  29: (4.23 seconds) suminf.   51.16416 (803) obj. 64468.3 iterations 337
Cbc0038I Pass  30: (4.34 seconds) suminf.   53.95913 (806) obj. 64466.1 iterations 369
Cbc0038I Pass  31: (4.42 seconds) suminf.   51.82100 (814) obj. 64444.1 iterations 261
Cbc0038I Pass  32: (4.56 seconds) suminf.   54.59478 (809) obj. 64584.2 iterations 561
Cbc0038I Pass  33: (4.65 seconds) suminf.   52.29735 (805) obj. 64501.1 iterations 268
Cbc0038I Pass  34: (4.78 seconds) suminf.   51.52050 (793) obj. 64529.7 iterations 477
Cbc0038I Pass  35: (4.86 seconds) suminf.   51.45931 (805) obj. 64302.9 iterations 272
Cbc0038I Pass  36: (5.03 seconds) suminf.   53.50384 (825) obj. 64508.8 iterations 647
Cbc0038I Pass  37: (5.12 seconds) suminf.   53.80297 (801) obj. 64502.4 iterations 338
Cbc0038I Pass  38: (5.23 seconds) suminf.   51.05331 (784) obj. 64505.3 iterations 384
Cbc0038I Pass  39: (5.32 seconds) suminf.   50.01739 (811) obj. 64538.9 iterations 316
Cbc0038I Pass  40: (5.44 seconds) suminf.   52.43614 (798) obj. 64542.9 iterations 436
Cbc0038I Pass  41: (5.51 seconds) suminf.   50.24408 (800) obj. 64608.1 iterations 219
Cbc0038I Pass  42: (5.64 seconds) suminf.   49.95307 (802) obj. 67230.2 iterations 498
Cbc0038I Pass  43: (5.75 seconds) suminf.   51.98513 (778) obj. 66353.4 iterations 379
Cbc0038I Pass  44: (5.83 seconds) suminf.   47.47581 (790) obj. 66387.6 iterations 235
Cbc0038I Pass  45: (5.99 seconds) suminf.   48.25532 (790) obj. 70863.2 iterations 664
Cbc0038I Pass  46: (6.07 seconds) suminf.   45.92005 (788) obj. 70955.9 iterations 196
Cbc0038I Pass  47: (6.22 seconds) suminf.   46.56593 (787) obj. 69308 iterations 624
Cbc0038I Pass  48: (6.30 seconds) suminf.   45.37676 (780) obj. 65405.6 iterations 272
Cbc0038I Pass  49: (6.32 seconds) suminf.   44.23571 (786) obj. 65480.9 iterations 60
Cbc0038I Pass  50: (6.46 seconds) suminf.   42.82280 (789) obj. 63917.9 iterations 550
Cbc0038I Pass  51: (6.54 seconds) suminf.   39.66640 (813) obj. 65770.7 iterations 276
Cbc0038I Pass  52: (6.71 seconds) suminf.   43.03214 (796) obj. 65868.8 iterations 684
Cbc0038I Pass  53: (6.81 seconds) suminf.   40.27011 (790) obj. 65466.3 iterations 407
Cbc0038I Pass  54: (6.94 seconds) suminf.   43.86979 (815) obj. 65459.5 iterations 534
Cbc0038I Pass  55: (7.05 seconds) suminf.   38.58466 (773) obj. 65380.6 iterations 420
Cbc0038I Pass  56: (7.13 seconds) suminf.   36.60491 (781) obj. 65339.8 iterations 325
Cbc0038I Pass  57: (7.26 seconds) suminf.   41.30539 (769) obj. 65438.2 iterations 652
Cbc0038I Pass  58: (7.32 seconds) suminf.   40.36797 (776) obj. 65313.4 iterations 178
Cbc0038I Pass  59: (7.38 seconds) suminf.   39.18043 (781) obj. 65296.6 iterations 226
Cbc0038I Pass  60: (7.42 seconds) suminf.   37.10473 (781) obj. 65535.5 iterations 166
Cbc0038I Pass  61: (7.52 seconds) suminf.   38.65997 (785) obj. 65494.3 iterations 481
Cbc0038I Pass  62: (7.59 seconds) suminf.   37.03770 (767) obj. 65329.4 iterations 313
Cbc0038I Pass  63: (7.65 seconds) suminf.   35.28209 (782) obj. 65920.2 iterations 208
Cbc0038I Pass  64: (7.72 seconds) suminf.   37.72299 (787) obj. 66067.9 iterations 378
Cbc0038I Pass  65: (7.80 seconds) suminf.   37.15358 (784) obj. 65881.8 iterations 386
Cbc0038I Pass  66: (7.90 seconds) suminf.   38.40707 (789) obj. 66108 iterations 463
Cbc0038I Pass  67: (8.01 seconds) suminf.   35.62316 (776) obj. 65523.4 iterations 517
Cbc0038I Pass  68: (8.07 seconds) suminf.   38.87785 (782) obj. 65886.7 iterations 324
Cbc0038I Pass  69: (8.13 seconds) suminf.   36.00262 (773) obj. 65877.4 iterations 285
Cbc0038I Pass  70: (8.19 seconds) suminf.   37.19622 (781) obj. 65943.3 iterations 336
Cbc0038I Pass  71: (8.27 seconds) suminf.   35.60249 (771) obj. 65879.2 iterations 335
Cbc0038I Pass  72: (8.35 seconds) suminf.   40.94991 (780) obj. 65891.5 iterations 407
Cbc0038I Pass  73: (8.44 seconds) suminf.   36.07942 (778) obj. 65916.6 iterations 325
Cbc0038I Pass  74: (8.54 seconds) suminf.   41.23910 (776) obj. 66090.6 iterations 406
Cbc0038I Pass  75: (8.61 seconds) suminf.   37.97707 (795) obj. 65930.8 iterations 289
Cbc0038I Pass  76: (8.65 seconds) suminf.   36.66523 (799) obj. 65908 iterations 133
Cbc0038I Pass  77: (8.77 seconds) suminf.   46.84723 (803) obj. 66017.7 iterations 529
Cbc0038I Pass  78: (8.86 seconds) suminf.   40.70344 (763) obj. 65589.8 iterations 411
Cbc0038I Pass  79: (8.91 seconds) suminf.   37.78574 (774) obj. 65449.6 iterations 179
Cbc0038I Pass  80: (9.02 seconds) suminf.   41.85649 (753) obj. 65768.5 iterations 490
Cbc0038I Pass  81: (9.07 seconds) suminf.   39.80627 (783) obj. 65489.1 iterations 241
Cbc0038I Pass  82: (9.11 seconds) suminf.   39.14631 (788) obj. 65400.3 iterations 149
Cbc0038I Pass  83: (9.23 seconds) suminf.   45.22727 (760) obj. 65599.8 iterations 538
Cbc0038I Pass  84: (9.29 seconds) suminf.   43.53962 (768) obj. 65689.7 iterations 251
Cbc0038I Pass  85: (9.34 seconds) suminf.   39.84715 (770) obj. 65479.1 iterations 195
Cbc0038I Pass  86: (9.43 seconds) suminf.   45.57502 (749) obj. 65602.8 iterations 397
Cbc0038I Pass  87: (9.48 seconds) suminf.   43.79789 (777) obj. 65645.6 iterations 211
Cbc0038I Pass  88: (9.51 seconds) suminf.   41.95319 (779) obj. 65543.5 iterations 131
Cbc0038I Pass  89: (9.55 seconds) suminf.   40.48827 (773) obj. 65541.8 iterations 176
Cbc0038I Pass  90: (9.64 seconds) suminf.   45.31674 (757) obj. 65895.5 iterations 405
Cbc0038I Pass  91: (9.70 seconds) suminf.   42.20868 (765) obj. 65600.9 iterations 259
Cbc0038I Pass  92: (9.74 seconds) suminf.   40.55888 (769) obj. 65577.6 iterations 128
Cbc0038I Pass  93: (9.82 seconds) suminf.   45.38138 (753) obj. 65629.5 iterations 392
Cbc0038I Pass  94: (9.87 seconds) suminf.   43.79789 (777) obj. 65645.6 iterations 175
Cbc0038I Pass  95: (9.90 seconds) suminf.   41.95319 (779) obj. 65543.5 iterations 120
Cbc0038I Pass  96: (9.94 seconds) suminf.   40.48827 (773) obj. 65541.8 iterations 143
Cbc0038I Pass  97: (10.01 seconds) suminf.   43.63928 (757) obj. 65838 iterations 355
Cbc0038I Pass  98: (10.06 seconds) suminf.   42.20868 (765) obj. 65600.9 iterations 237
Cbc0038I Pass  99: (10.10 seconds) suminf.   40.55888 (769) obj. 65577.6 iterations 145
Cbc0038I Pass 100: (10.39 seconds) suminf.   74.83886 (791) obj. 74344.9 iterations 1360
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 91 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1324 columns, reduced to 4288 rows 1226 columns - too large
Cbc0038I Mini branch and bound did not improve solution (10.45 seconds)
Cbc0038I After 10.45 seconds - Feasibility pump exiting - took 9.17 seconds
Cbc0031I 35 added rows had average density of 50.342857
Cbc0013I At root node, 35 cuts changed objective from 40504.676 to 41874.995 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 210 row cuts average 193.0 elements, 0 column cuts (0 active)  in 0.585 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 321 row cuts average 131.6 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41875 (33.25 seconds)
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 43097.131 (170.78 seconds)
Cbc0010I After 200 nodes, 23 on tree, 1e+50 best solution, best possible 43097.131 (264.01 seconds)
Cbc0010I After 300 nodes, 17 on tree, 1e+50 best solution, best possible 43309.097 (351.62 seconds)
Cbc0010I After 400 nodes, 20 on tree, 1e+50 best solution, best possible 43309.097 (455.14 seconds)
Cbc0010I After 500 nodes, 21 on tree, 1e+50 best solution, best possible 43309.097 (546.36 seconds)
Cbc0010I After 600 nodes, 20 on tree, 1e+50 best solution, best possible 43309.097 (623.33 seconds)
Cbc0010I After 700 nodes, 17 on tree, 1e+50 best solution, best possible 43309.097 (722.15 seconds)
Cbc0010I After 800 nodes, 31 on tree, 1e+50 best solution, best possible 43309.097 (802.51 seconds)
Cbc0010I After 900 nodes, 41 on tree, 1e+50 best solution, best possible 43309.097 (915.74 seconds)
Cbc0010I After 1000 nodes, 45 on tree, 1e+50 best solution, best possible 43309.097 (1003.05 seconds)
Cbc0010I After 1100 nodes, 48 on tree, 1e+50 best solution, best possible 43310 (1080.93 seconds)
Cbc0010I After 1200 nodes, 43 on tree, 1e+50 best solution, best possible 43310 (1164.15 seconds)
Cbc0010I After 1300 nodes, 44 on tree, 1e+50 best solution, best possible 43310 (1235.35 seconds)
Cbc0010I After 1400 nodes, 43 on tree, 1e+50 best solution, best possible 43310 (1323.22 seconds)
Cbc0010I After 1500 nodes, 38 on tree, 1e+50 best solution, best possible 43310 (1392.32 seconds)
Cbc0010I After 1600 nodes, 41 on tree, 1e+50 best solution, best possible 43310 (1469.51 seconds)
Cbc0010I After 1700 nodes, 40 on tree, 1e+50 best solution, best possible 43310 (1542.19 seconds)
Cbc0010I After 1800 nodes, 38 on tree, 1e+50 best solution, best possible 43310 (1611.84 seconds)
Cbc0010I After 1900 nodes, 39 on tree, 1e+50 best solution, best possible 43310 (1716.68 seconds)
Cbc0010I After 2000 nodes, 43 on tree, 1e+50 best solution, best possible 43310 (1777.58 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 43310), took 3329610 iterations and 2033 nodes (1799.65 seconds)
Cbc0032I Strong branching done 20584 times (1824714 iterations), fathomed 144 nodes and fixed 1190 variables
Cbc0035I Maximum depth 65, 0 variables fixed on reduced cost
Cuts at root node changed objective from 40504.7 to 41875
Probing was tried 537 times and created 76412 cuts of which 0 were active after adding rounds of cuts (4.575 seconds)
Gomory was tried 371 times and created 1788 cuts of which 0 were active after adding rounds of cuts (4.512 seconds)
Knapsack was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 371 times and created 8683 cuts of which 0 were active after adding rounds of cuts (2.066 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
ImplicationCuts was tried 32 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    43310.000
Enumerated nodes:               2033
Total iterations:               3329610
Time (CPU seconds):             1799.65
Time (Wallclock seconds):       1804.55

Total time (CPU seconds):       1799.67   (Wallclock seconds):       1804.57

