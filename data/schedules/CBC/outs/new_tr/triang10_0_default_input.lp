Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_0_default_input.lp sec 1800 solve solu solutions/new_tr/triang10_0_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 444 - 10.63 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1603 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 207 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 6699 rows, 2298 columns (2298 integer (2243 of which binary)) and 21817 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1078 integers unsatisfied sum - 262.753
Cbc0038I Pass   1: (17.02 seconds) suminf.  114.58712 (718) obj. 572.176 iterations 3259
Cbc0038I Pass   2: (17.30 seconds) suminf.  103.17105 (750) obj. 602.637 iterations 710
Cbc0038I Pass   3: (17.38 seconds) suminf.  101.74810 (748) obj. 603.44 iterations 140
Cbc0038I Pass   4: (17.41 seconds) suminf.  100.77917 (748) obj. 603.649 iterations 37
Cbc0038I Pass   5: (17.58 seconds) suminf.   96.08902 (731) obj. 640.145 iterations 345
Cbc0038I Pass   6: (17.67 seconds) suminf.   96.27170 (746) obj. 635.5 iterations 173
Cbc0038I Pass   7: (17.76 seconds) suminf.   95.74675 (767) obj. 636.734 iterations 156
Cbc0038I Pass   8: (17.93 seconds) suminf.   91.98805 (707) obj. 652.593 iterations 359
Cbc0038I Pass   9: (18.06 seconds) suminf.   89.20263 (718) obj. 659.656 iterations 214
Cbc0038I Pass  10: (18.14 seconds) suminf.   88.71829 (746) obj. 661.444 iterations 155
Cbc0038I Pass  11: (18.25 seconds) suminf.   87.40745 (726) obj. 664.145 iterations 174
Cbc0038I Pass  12: (18.28 seconds) suminf.   87.41110 (738) obj. 663.156 iterations 51
Cbc0038I Pass  13: (18.44 seconds) suminf.   90.47437 (711) obj. 654.674 iterations 327
Cbc0038I Pass  14: (18.47 seconds) suminf.   91.08224 (705) obj. 655.541 iterations 44
Cbc0038I Pass  15: (18.50 seconds) suminf.   91.24045 (713) obj. 659.433 iterations 38
Cbc0038I Pass  16: (18.52 seconds) suminf.   91.65288 (707) obj. 660.049 iterations 33
Cbc0038I Pass  17: (18.74 seconds) suminf.   88.75113 (687) obj. 646.282 iterations 511
Cbc0038I Pass  18: (18.85 seconds) suminf.   85.55332 (697) obj. 641.531 iterations 192
Cbc0038I Pass  19: (19.05 seconds) suminf.   85.19520 (677) obj. 695.94 iterations 460
Cbc0038I Pass  20: (19.09 seconds) suminf.   85.41235 (684) obj. 699.033 iterations 71
Cbc0038I Pass  21: (19.13 seconds) suminf.   85.75490 (691) obj. 696.44 iterations 74
Cbc0038I Pass  22: (19.29 seconds) suminf.   87.96733 (690) obj. 722.044 iterations 314
Cbc0038I Pass  23: (19.39 seconds) suminf.   83.79038 (684) obj. 711.908 iterations 195
Cbc0038I Pass  24: (19.44 seconds) suminf.   84.33155 (680) obj. 703.059 iterations 100
Cbc0038I Pass  25: (19.48 seconds) suminf.   82.76837 (682) obj. 703.593 iterations 92
Cbc0038I Pass  26: (19.53 seconds) suminf.   81.55159 (677) obj. 700.215 iterations 95
Cbc0038I Pass  27: (19.54 seconds) suminf.   82.41114 (674) obj. 699.562 iterations 17
Cbc0038I Pass  28: (19.67 seconds) suminf.   78.09710 (668) obj. 700.545 iterations 324
Cbc0038I Pass  29: (19.79 seconds) suminf.   73.87828 (673) obj. 699.16 iterations 274
Cbc0038I Pass  30: (19.82 seconds) suminf.   73.66310 (675) obj. 697.327 iterations 57
Cbc0038I Pass  31: (19.84 seconds) suminf.   73.60937 (675) obj. 697.755 iterations 6
Cbc0038I Pass  32: (19.92 seconds) suminf.   74.68144 (669) obj. 705.28 iterations 172
Cbc0038I Pass  33: (19.97 seconds) suminf.   75.34598 (670) obj. 696.941 iterations 94
Cbc0038I Pass  34: (20.08 seconds) suminf.   75.02274 (672) obj. 697.306 iterations 215
Cbc0038I Pass  35: (20.17 seconds) suminf.   75.96248 (668) obj. 699.832 iterations 190
Cbc0038I Pass  36: (20.28 seconds) suminf.   76.68003 (658) obj. 699.772 iterations 216
Cbc0038I Pass  37: (20.36 seconds) suminf.   74.77536 (670) obj. 691.053 iterations 143
Cbc0038I Pass  38: (20.37 seconds) suminf.   75.08772 (673) obj. 690.711 iterations 25
Cbc0038I Pass  39: (20.56 seconds) suminf.   78.71458 (637) obj. 683.292 iterations 401
Cbc0038I Pass  40: (20.65 seconds) suminf.   77.07558 (630) obj. 657.876 iterations 161
Cbc0038I Pass  41: (20.66 seconds) suminf.   76.64216 (632) obj. 657.007 iterations 18
Cbc0038I Pass  42: (20.81 seconds) suminf.   74.17366 (635) obj. 657.996 iterations 340
Cbc0038I Pass  43: (20.87 seconds) suminf.   72.80521 (644) obj. 648.615 iterations 101
Cbc0038I Pass  44: (20.96 seconds) suminf.   70.75707 (621) obj. 644.247 iterations 169
Cbc0038I Pass  45: (21.02 seconds) suminf.   72.49418 (620) obj. 646.924 iterations 117
Cbc0038I Pass  46: (21.07 seconds) suminf.   71.97232 (607) obj. 640.483 iterations 104
Cbc0038I Pass  47: (21.26 seconds) suminf.   66.28902 (567) obj. 624.507 iterations 523
Cbc0038I Pass  48: (21.31 seconds) suminf.   64.62595 (561) obj. 624.736 iterations 115
Cbc0038I Pass  49: (21.43 seconds) suminf.   59.65937 (548) obj. 631.049 iterations 267
Cbc0038I Pass  50: (21.50 seconds) suminf.   58.78777 (559) obj. 629.304 iterations 153
Cbc0038I Pass  51: (21.64 seconds) suminf.   55.43679 (543) obj. 634.769 iterations 338
Cbc0038I Pass  52: (21.67 seconds) suminf.   55.24313 (541) obj. 633.127 iterations 47
Cbc0038I Pass  53: (21.70 seconds) suminf.   55.38251 (535) obj. 632.451 iterations 74
Cbc0038I Pass  54: (21.87 seconds) suminf.   53.85408 (523) obj. 640.05 iterations 448
Cbc0038I Pass  55: (21.96 seconds) suminf.   50.83050 (519) obj. 639.511 iterations 235
Cbc0038I Pass  56: (21.98 seconds) suminf.   50.02544 (522) obj. 637.192 iterations 49
Cbc0038I Pass  57: (22.01 seconds) suminf.   50.57754 (522) obj. 638.053 iterations 55
Cbc0038I Pass  58: (22.03 seconds) suminf.   50.28142 (509) obj. 635.812 iterations 36
Cbc0038I Pass  59: (22.15 seconds) suminf.   49.09882 (502) obj. 641.938 iterations 298
Cbc0038I Pass  60: (22.19 seconds) suminf.   47.73006 (482) obj. 641.492 iterations 107
Cbc0038I Pass  61: (22.20 seconds) suminf.   47.50891 (482) obj. 641.492 iterations 6
Cbc0038I Pass  62: (22.26 seconds) suminf.   44.79747 (486) obj. 641.866 iterations 131
Cbc0038I Pass  63: (22.28 seconds) suminf.   44.61448 (484) obj. 641.87 iterations 39
Cbc0038I Pass  64: (22.37 seconds) suminf.   43.31850 (457) obj. 631.123 iterations 198
Cbc0038I Pass  65: (22.41 seconds) suminf.   42.11745 (452) obj. 631.109 iterations 84
Cbc0038I Pass  66: (22.45 seconds) suminf.   42.99141 (444) obj. 641.621 iterations 83
Cbc0038I Pass  67: (22.55 seconds) suminf.   44.01375 (442) obj. 631.5 iterations 239
Cbc0038I Pass  68: (22.60 seconds) suminf.   42.33907 (453) obj. 637.246 iterations 150
Cbc0038I Pass  69: (22.78 seconds) suminf.   41.96973 (434) obj. 624.2 iterations 576
Cbc0038I Pass  70: (22.86 seconds) suminf.   39.92687 (446) obj. 624.304 iterations 181
Cbc0038I Pass  71: (23.00 seconds) suminf.   38.97802 (430) obj. 620.395 iterations 459
Cbc0038I Pass  72: (23.04 seconds) suminf.   37.86015 (437) obj. 619.044 iterations 106
Cbc0038I Pass  73: (23.17 seconds) suminf.   37.85499 (428) obj. 627.524 iterations 406
Cbc0038I Pass  74: (23.22 seconds) suminf.   36.51522 (420) obj. 628.035 iterations 143
Cbc0038I Pass  75: (23.24 seconds) suminf.   36.35889 (420) obj. 628.035 iterations 21
Cbc0038I Pass  76: (23.35 seconds) suminf.   36.89803 (398) obj. 611.053 iterations 340
Cbc0038I Pass  77: (23.37 seconds) suminf.   37.02497 (399) obj. 611.054 iterations 67
Cbc0038I Pass  78: (23.50 seconds) suminf.   35.71470 (421) obj. 615.469 iterations 436
Cbc0038I Pass  79: (23.54 seconds) suminf.   34.38236 (420) obj. 615.383 iterations 101
Cbc0038I Pass  80: (23.56 seconds) suminf.   33.73756 (413) obj. 615.384 iterations 46
Cbc0038I Pass  81: (23.66 seconds) suminf.   32.61371 (394) obj. 609.764 iterations 265
Cbc0038I Pass  82: (23.69 seconds) suminf.   31.77249 (396) obj. 609.745 iterations 73
Cbc0038I Pass  83: (23.73 seconds) suminf.   30.08298 (401) obj. 609.746 iterations 94
Cbc0038I Pass  84: (23.78 seconds) suminf.   30.16259 (405) obj. 609.699 iterations 116
Cbc0038I Pass  85: (23.89 seconds) suminf.   31.13399 (384) obj. 609.571 iterations 252
Cbc0038I Pass  86: (23.96 seconds) suminf.   28.82653 (401) obj. 613.211 iterations 201
Cbc0038I Pass  87: (23.98 seconds) suminf.   28.85553 (401) obj. 612.239 iterations 15
Cbc0038I Pass  88: (24.08 seconds) suminf.   29.03860 (388) obj. 609.758 iterations 206
Cbc0038I Pass  89: (24.10 seconds) suminf.   28.90737 (389) obj. 609.76 iterations 52
Cbc0038I Pass  90: (24.22 seconds) suminf.   29.89484 (389) obj. 614.034 iterations 361
Cbc0038I Pass  91: (24.27 seconds) suminf.   27.22545 (383) obj. 614.656 iterations 117
Cbc0038I Pass  92: (24.30 seconds) suminf.   26.55012 (388) obj. 614.756 iterations 97
Cbc0038I Pass  93: (24.42 seconds) suminf.   26.28270 (380) obj. 625.738 iterations 249
Cbc0038I Pass  94: (24.48 seconds) suminf.   25.57947 (379) obj. 630.844 iterations 158
Cbc0038I Pass  95: (24.60 seconds) suminf.   26.13722 (364) obj. 572.714 iterations 310
Cbc0038I Pass  96: (24.66 seconds) suminf.   24.80690 (364) obj. 572.714 iterations 123
Cbc0038I Pass  97: (24.67 seconds) suminf.   24.73291 (364) obj. 572.714 iterations 9
Cbc0038I Pass  98: (24.83 seconds) suminf.   26.29635 (335) obj. 572.568 iterations 493
Cbc0038I Pass  99: (24.88 seconds) suminf.   24.12007 (326) obj. 567.773 iterations 170
Cbc0038I Pass 100: (25.12 seconds) suminf.   51.18829 (420) obj. 595.248 iterations 920
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 793 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 3593 rows 1138 columns - too large
Cbc0038I Mini branch and bound did not improve solution (27.03 seconds)
Cbc0038I After 27.03 seconds - Feasibility pump exiting - took 11.39 seconds
Cbc0031I 33 added rows had average density of 13.636364
Cbc0013I At root node, 33 cuts changed objective from 444 to 452.99988 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 381 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 31.3 elements, 0 column cuts (0 active)  in 1.464 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 44 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 45.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 453 (49.68 seconds)
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 453 (247.37 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 453 (454.99 seconds)
Cbc0010I After 300 nodes, 18 on tree, 1e+50 best solution, best possible 453 (723.77 seconds)
Cbc0010I After 400 nodes, 27 on tree, 1e+50 best solution, best possible 453 (919.20 seconds)
Cbc0010I After 500 nodes, 18 on tree, 1e+50 best solution, best possible 453 (1091.69 seconds)
Cbc0010I After 600 nodes, 23 on tree, 1e+50 best solution, best possible 453 (1307.22 seconds)
Cbc0010I After 700 nodes, 28 on tree, 1e+50 best solution, best possible 453 (1431.21 seconds)
Cbc0010I After 800 nodes, 25 on tree, 1e+50 best solution, best possible 453 (1589.38 seconds)
Cbc0010I After 900 nodes, 23 on tree, 1e+50 best solution, best possible 453 (1703.54 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 453), took 1927327 iterations and 961 nodes (1795.77 seconds)
Cbc0032I Strong branching done 10088 times (881549 iterations), fathomed 63 nodes and fixed 432 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 444 to 453
Probing was tried 175 times and created 11026 cuts of which 0 were active after adding rounds of cuts (0.930 seconds)
Gomory was tried 168 times and created 530 cuts of which 0 were active after adding rounds of cuts (3.665 seconds)
Knapsack was tried 168 times and created 761 cuts of which 0 were active after adding rounds of cuts (0.392 seconds)
Clique was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.045 seconds)
MixedIntegerRounding2 was tried 13 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
FlowCover was tried 13 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
TwoMirCuts was tried 168 times and created 3642 cuts of which 0 were active after adding rounds of cuts (1.300 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.090 seconds)
ImplicationCuts was tried 15 times and created 373 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    453.000
Enumerated nodes:               961
Total iterations:               1927327
Time (CPU seconds):             1795.77
Time (Wallclock seconds):       1796.19

Total time (CPU seconds):       1795.81   (Wallclock seconds):       1796.24

