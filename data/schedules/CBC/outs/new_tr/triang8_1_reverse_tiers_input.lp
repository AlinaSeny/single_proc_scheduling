Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_1_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang8_1_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 275.954 - 0.53 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 279 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 2628 rows, 916 columns (916 integer (880 of which binary)) and 8792 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 450 integers unsatisfied sum - 112.74
Cbc0038I Pass   1: suminf.   29.94499 (207) obj. 337.777 iterations 810
Cbc0038I Pass   2: suminf.   23.14764 (173) obj. 347.831 iterations 202
Cbc0038I Pass   3: suminf.   21.32282 (157) obj. 336.44 iterations 93
Cbc0038I Pass   4: suminf.   20.48405 (160) obj. 335.293 iterations 73
Cbc0038I Pass   5: suminf.   14.09863 (115) obj. 338.544 iterations 246
Cbc0038I Pass   6: suminf.    9.21499 (100) obj. 310.999 iterations 49
Cbc0038I Pass   7: suminf.    9.20624 (89) obj. 311 iterations 5
Cbc0038I Pass   8: suminf.    5.40494 (74) obj. 331.813 iterations 263
Cbc0038I Pass   9: suminf.    5.07158 (67) obj. 331.813 iterations 19
Cbc0038I Pass  10: suminf.    3.84436 (48) obj. 348.164 iterations 174
Cbc0038I Pass  11: suminf.    3.84436 (48) obj. 348.164 iterations 1
Cbc0038I Pass  12: suminf.    2.18750 (22) obj. 326.937 iterations 352
Cbc0038I Pass  13: suminf.    2.18750 (22) obj. 326.937 iterations 2
Cbc0038I Pass  14: suminf.    1.16381 (16) obj. 355.177 iterations 511
Cbc0038I Pass  15: suminf.    1.16381 (16) obj. 355.177 iterations 6
Cbc0038I Pass  16: suminf.    1.27172 (17) obj. 320 iterations 202
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 320 iterations 14
Cbc0038I Solution found of 320
Cbc0038I Cleaned solution of 320
Cbc0038I Before mini branch and bound, 377 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.23 seconds)
Cbc0038I Round again with cutoff of 314.696
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass  18: suminf.   30.40498 (203) obj. 314 iterations 16
Cbc0038I Pass  19: suminf.   21.73763 (169) obj. 314.696 iterations 209
Cbc0038I Pass  20: suminf.   22.27187 (154) obj. 314.696 iterations 96
Cbc0038I Pass  21: suminf.   16.75287 (134) obj. 314.696 iterations 147
Cbc0038I Pass  22: suminf.   16.73681 (133) obj. 314.696 iterations 7
Cbc0038I Pass  23: suminf.   14.35361 (110) obj. 314.696 iterations 136
Cbc0038I Pass  24: suminf.   13.36930 (105) obj. 314.696 iterations 68
Cbc0038I Pass  25: suminf.    8.65649 (91) obj. 314.696 iterations 320
Cbc0038I Pass  26: suminf.    6.55095 (81) obj. 314.696 iterations 54
Cbc0038I Pass  27: suminf.   12.99566 (124) obj. 314.696 iterations 876
Cbc0038I Pass  28: suminf.   12.02692 (127) obj. 314.696 iterations 74
Cbc0038I Pass  29: suminf.   12.69321 (128) obj. 314.696 iterations 42
Cbc0038I Pass  30: suminf.    7.61127 (100) obj. 314.696 iterations 310
Cbc0038I Pass  31: suminf.    4.13228 (57) obj. 314.696 iterations 58
Cbc0038I Pass  32: suminf.    5.97745 (52) obj. 314.696 iterations 431
Cbc0038I Pass  33: suminf.    5.02882 (44) obj. 314.696 iterations 40
Cbc0038I Pass  34: suminf.    4.95744 (43) obj. 314.696 iterations 11
Cbc0038I Pass  35: suminf.    3.02231 (35) obj. 314.696 iterations 121
Cbc0038I Pass  36: suminf.    1.97509 (35) obj. 314.696 iterations 19
Cbc0038I Pass  37: suminf.    1.44084 (30) obj. 314.696 iterations 112
Cbc0038I Pass  38: suminf.    1.44102 (29) obj. 314.696 iterations 2
Cbc0038I Pass  39: suminf.    3.88632 (29) obj. 314.696 iterations 120
Cbc0038I Pass  40: suminf.    3.41698 (30) obj. 314.696 iterations 46
Cbc0038I Pass  41: suminf.    0.35713 (27) obj. 314.696 iterations 76
Cbc0038I Pass  42: suminf.    0.35713 (27) obj. 314.696 iterations 36
Cbc0038I Pass  43: suminf.    5.10272 (42) obj. 314.696 iterations 141
Cbc0038I Pass  44: suminf.    1.47575 (19) obj. 314.696 iterations 153
Cbc0038I Pass  45: suminf.    1.40304 (20) obj. 314.696 iterations 15
Cbc0038I Pass  46: suminf.    1.82482 (17) obj. 314.696 iterations 77
Cbc0038I Pass  47: suminf.    1.40527 (15) obj. 314.696 iterations 18
Cbc0038I Pass  48: suminf.    0.30396 (1) obj. 314.696 iterations 36
Cbc0038I Solution found of 314.696
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2629 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 311
Cbc0038I Before mini branch and bound, 359 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1851 rows 557 columns - 164 fixed gives 1011, 236 - ok now
Cbc0038I Full problem 2628 rows 916 columns, reduced to 67 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (1.78 seconds)
Cbc0038I Round again with cutoff of 303.192
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  49: suminf.   32.47022 (256) obj. 303.192 iterations 66
Cbc0038I Pass  50: suminf.   21.82392 (198) obj. 303.192 iterations 249
Cbc0038I Pass  51: suminf.   22.36266 (182) obj. 303.192 iterations 60
Cbc0038I Pass  52: suminf.   15.68374 (145) obj. 303.192 iterations 243
Cbc0038I Pass  53: suminf.   14.92522 (148) obj. 303.192 iterations 64
Cbc0038I Pass  54: suminf.   13.03009 (113) obj. 303.192 iterations 240
Cbc0038I Pass  55: suminf.   11.68336 (114) obj. 303.192 iterations 94
Cbc0038I Pass  56: suminf.   11.44703 (111) obj. 303.192 iterations 10
Cbc0038I Pass  57: suminf.   13.11210 (158) obj. 303.192 iterations 235
Cbc0038I Pass  58: suminf.   10.74635 (147) obj. 303.192 iterations 102
Cbc0038I Pass  59: suminf.   10.76999 (147) obj. 303.192 iterations 54
Cbc0038I Pass  60: suminf.   11.87280 (113) obj. 303.192 iterations 43
Cbc0038I Pass  61: suminf.   13.88277 (106) obj. 303.192 iterations 164
Cbc0038I Pass  62: suminf.   12.46748 (102) obj. 303.192 iterations 120
Cbc0038I Pass  63: suminf.   12.50067 (111) obj. 303.192 iterations 85
Cbc0038I Pass  64: suminf.   15.72559 (180) obj. 303.192 iterations 361
Cbc0038I Pass  65: suminf.   15.67371 (163) obj. 303.192 iterations 31
Cbc0038I Pass  66: suminf.   13.43773 (150) obj. 303.192 iterations 179
Cbc0038I Pass  67: suminf.   10.77549 (144) obj. 303.192 iterations 81
Cbc0038I Pass  68: suminf.   10.74991 (136) obj. 303.192 iterations 18
Cbc0038I Pass  69: suminf.   11.49484 (185) obj. 303.192 iterations 269
Cbc0038I Pass  70: suminf.   11.49484 (185) obj. 303.192 iterations 5
Cbc0038I Pass  71: suminf.   14.38925 (168) obj. 303.192 iterations 204
Cbc0038I Pass  72: suminf.   13.91044 (170) obj. 303.192 iterations 17
Cbc0038I Pass  73: suminf.   12.79706 (163) obj. 303.192 iterations 128
Cbc0038I Pass  74: suminf.   12.86966 (148) obj. 303.192 iterations 69
Cbc0038I Pass  75: suminf.   14.94680 (154) obj. 303.192 iterations 223
Cbc0038I Pass  76: suminf.   14.38820 (148) obj. 303.192 iterations 33
Cbc0038I Pass  77: suminf.   11.21251 (137) obj. 303.192 iterations 61
Cbc0038I Pass  78: suminf.   10.74991 (136) obj. 303.192 iterations 58
Cbc0038I Pass  79: suminf.   12.11412 (187) obj. 303.192 iterations 303
Cbc0038I Pass  80: suminf.   11.49484 (185) obj. 303.192 iterations 67
Cbc0038I Pass  81: suminf.   12.10996 (101) obj. 303.192 iterations 257
Cbc0038I Pass  82: suminf.   12.08091 (103) obj. 303.192 iterations 18
Cbc0038I Pass  83: suminf.    8.23291 (92) obj. 303.192 iterations 234
Cbc0038I Pass  84: suminf.    8.96713 (88) obj. 303.192 iterations 115
Cbc0038I Pass  85: suminf.    8.27940 (99) obj. 303.192 iterations 71
Cbc0038I Pass  86: suminf.    7.37968 (100) obj. 303.192 iterations 70
Cbc0038I Pass  87: suminf.    9.64362 (89) obj. 303.192 iterations 172
Cbc0038I Pass  88: suminf.    9.71891 (88) obj. 303.192 iterations 76
Cbc0038I Pass  89: suminf.    9.64940 (82) obj. 303.192 iterations 110
Cbc0038I Pass  90: suminf.    8.59278 (84) obj. 303.192 iterations 27
Cbc0038I Pass  91: suminf.    7.74985 (98) obj. 303.192 iterations 62
Cbc0038I Pass  92: suminf.    6.52237 (95) obj. 303.192 iterations 81
Cbc0038I Pass  93: suminf.    6.31917 (100) obj. 303.192 iterations 63
Cbc0038I Pass  94: suminf.   13.02245 (99) obj. 303.192 iterations 209
Cbc0038I Pass  95: suminf.   10.97335 (108) obj. 303.192 iterations 94
Cbc0038I Pass  96: suminf.    9.51096 (116) obj. 303.192 iterations 45
Cbc0038I Pass  97: suminf.    8.74013 (104) obj. 303.192 iterations 68
Cbc0038I Pass  98: suminf.    7.76299 (96) obj. 303.192 iterations 45
Cbc0038I Pass  99: suminf.   11.99417 (76) obj. 303.192 iterations 219
Cbc0038I Pass 100: suminf.   10.01438 (88) obj. 303.192 iterations 115
Cbc0038I Pass 101: suminf.    9.87902 (86) obj. 303.192 iterations 24
Cbc0038I Pass 102: suminf.    8.93282 (85) obj. 303.192 iterations 136
Cbc0038I Pass 103: suminf.    6.67173 (100) obj. 303.192 iterations 110
Cbc0038I Pass 104: suminf.    6.55820 (98) obj. 303.192 iterations 42
Cbc0038I Pass 105: suminf.   10.25125 (83) obj. 303.192 iterations 159
Cbc0038I Pass 106: suminf.    9.71891 (88) obj. 303.192 iterations 42
Cbc0038I Pass 107: suminf.   11.86785 (99) obj. 303.192 iterations 240
Cbc0038I Pass 108: suminf.   10.39154 (111) obj. 303.192 iterations 156
Cbc0038I Pass 109: suminf.    9.91091 (100) obj. 303.192 iterations 45
Cbc0038I Pass 110: suminf.   14.79172 (118) obj. 303.192 iterations 220
Cbc0038I Pass 111: suminf.   10.63038 (106) obj. 303.192 iterations 104
Cbc0038I Pass 112: suminf.    8.88216 (90) obj. 303.192 iterations 221
Cbc0038I Pass 113: suminf.    8.91499 (84) obj. 303.192 iterations 13
Cbc0038I Pass 114: suminf.    6.20834 (99) obj. 303.192 iterations 121
Cbc0038I Pass 115: suminf.    5.92149 (100) obj. 303.192 iterations 48
Cbc0038I Pass 116: suminf.   15.25340 (73) obj. 303.192 iterations 200
Cbc0038I Pass 117: suminf.   10.75092 (77) obj. 303.192 iterations 191
Cbc0038I Pass 118: suminf.   10.20290 (73) obj. 303.192 iterations 45
Cbc0038I Pass 119: suminf.   10.50506 (67) obj. 303.192 iterations 23
Cbc0038I Pass 120: suminf.    8.72047 (60) obj. 303.192 iterations 153
Cbc0038I Pass 121: suminf.    7.69450 (66) obj. 303.192 iterations 41
Cbc0038I Pass 122: suminf.   10.56412 (82) obj. 303.192 iterations 388
Cbc0038I Pass 123: suminf.    8.72250 (72) obj. 303.192 iterations 204
Cbc0038I Pass 124: suminf.    7.55507 (58) obj. 303.192 iterations 325
Cbc0038I Pass 125: suminf.    7.55507 (58) obj. 303.192 iterations 6
Cbc0038I Pass 126: suminf.    6.79689 (57) obj. 303.192 iterations 119
Cbc0038I Pass 127: suminf.    7.80586 (81) obj. 303.192 iterations 242
Cbc0038I Pass 128: suminf.    7.88466 (93) obj. 303.192 iterations 119
Cbc0038I Pass 129: suminf.    6.63366 (67) obj. 303.192 iterations 129
Cbc0038I Pass 130: suminf.    6.41787 (66) obj. 303.192 iterations 36
Cbc0038I Pass 131: suminf.   10.31905 (61) obj. 303.192 iterations 196
Cbc0038I Pass 132: suminf.    8.21114 (62) obj. 303.192 iterations 113
Cbc0038I Pass 133: suminf.    5.76363 (58) obj. 303.192 iterations 105
Cbc0038I Pass 134: suminf.    5.64351 (58) obj. 303.192 iterations 2
Cbc0038I Pass 135: suminf.    6.83106 (66) obj. 303.192 iterations 247
Cbc0038I Pass 136: suminf.    6.69234 (57) obj. 303.192 iterations 104
Cbc0038I Pass 137: suminf.    9.35745 (100) obj. 303.192 iterations 447
Cbc0038I Pass 138: suminf.    7.53317 (71) obj. 303.192 iterations 220
Cbc0038I Pass 139: suminf.    7.47509 (69) obj. 303.192 iterations 6
Cbc0038I Pass 140: suminf.    5.69381 (61) obj. 303.192 iterations 261
Cbc0038I Pass 141: suminf.    5.69381 (61) obj. 303.192 iterations 10
Cbc0038I Pass 142: suminf.   15.29840 (97) obj. 303.192 iterations 448
Cbc0038I Pass 143: suminf.   12.01488 (93) obj. 303.192 iterations 158
Cbc0038I Pass 144: suminf.   13.17199 (69) obj. 303.192 iterations 220
Cbc0038I Pass 145: suminf.    9.69829 (79) obj. 303.192 iterations 136
Cbc0038I Pass 146: suminf.   14.26263 (90) obj. 303.192 iterations 325
Cbc0038I Pass 147: suminf.   10.30836 (85) obj. 303.192 iterations 79
Cbc0038I Pass 148: suminf.   48.16980 (258) obj. 303.192 iterations 627
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 2063 rows 658 columns - 172 fixed gives 1152, 285 - ok now
Cbc0038I Mini branch and bound did not improve solution (3.35 seconds)
Cbc0038I After 3.35 seconds - Feasibility pump exiting with objective of 311 - took 2.48 seconds
Cbc0012I Integer solution of 311 found by feasibility pump after 0 iterations and 0 nodes (3.35 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1620 rows 454 columns - 160 fixed gives 594, 198 - ok now
Cbc0012I Integer solution of 307 found by DiveCoefficient after 6625 iterations and 0 nodes (5.27 seconds)
Cbc0031I 44 added rows had average density of 9.8181818
Cbc0013I At root node, 44 cuts changed objective from 275.95954 to 279 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 2.6 elements, 47 column cuts (47 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 93 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 14 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 307 best solution, best possible 279 (5.28 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 999 rows 301 columns
Cbc0038I Full problem 2628 rows 916 columns, reduced to 873 rows 254 columns
Cbc0010I After 100 nodes, 7 on tree, 307 best solution, best possible 283 (29.83 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 823 rows 243 columns
Cbc0010I After 200 nodes, 14 on tree, 307 best solution, best possible 284 (39.22 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 831 rows 249 columns
Cbc0010I After 300 nodes, 21 on tree, 307 best solution, best possible 284 (47.13 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 821 rows 242 columns
Cbc0010I After 400 nodes, 24 on tree, 307 best solution, best possible 284 (53.95 seconds)
Cbc0010I After 500 nodes, 18 on tree, 307 best solution, best possible 284 (62.59 seconds)
Cbc0010I After 600 nodes, 24 on tree, 307 best solution, best possible 284 (71.39 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 745 rows 221 columns
Cbc0038I Full problem 2628 rows 916 columns, reduced to 813 rows 244 columns
Cbc0010I After 700 nodes, 22 on tree, 307 best solution, best possible 284 (78.95 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 829 rows 255 columns
Cbc0010I After 800 nodes, 17 on tree, 307 best solution, best possible 284 (88.03 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 857 rows 257 columns
Cbc0010I After 900 nodes, 11 on tree, 307 best solution, best possible 284 (95.04 seconds)
Cbc0010I After 1000 nodes, 1 on tree, 307 best solution, best possible 286 (104.28 seconds)
Cbc0010I After 1100 nodes, 10 on tree, 307 best solution, best possible 288 (114.25 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 906 rows 280 columns
Cbc0010I After 1200 nodes, 5 on tree, 307 best solution, best possible 288 (122.68 seconds)
Cbc0010I After 1300 nodes, 2 on tree, 307 best solution, best possible 289 (128.64 seconds)
Cbc0010I After 1400 nodes, 2 on tree, 307 best solution, best possible 289 (134.05 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 307 best solution, best possible 290 (138.72 seconds)
Cbc0010I After 1600 nodes, 12 on tree, 307 best solution, best possible 291 (143.95 seconds)
Cbc0010I After 1700 nodes, 9 on tree, 307 best solution, best possible 291 (148.38 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 703 rows 205 columns
Cbc0010I After 1800 nodes, 11 on tree, 307 best solution, best possible 292 (153.72 seconds)
Cbc0010I After 1900 nodes, 8 on tree, 307 best solution, best possible 292 (160.18 seconds)
Cbc0010I After 2000 nodes, 8 on tree, 307 best solution, best possible 294 (166.40 seconds)
Cbc0010I After 2100 nodes, 12 on tree, 307 best solution, best possible 295 (170.79 seconds)
Cbc0010I After 2200 nodes, 3 on tree, 307 best solution, best possible 295 (177.44 seconds)
Cbc0010I After 2300 nodes, 6 on tree, 307 best solution, best possible 296 (181.41 seconds)
Cbc0010I After 2400 nodes, 8 on tree, 307 best solution, best possible 297 (186.05 seconds)
Cbc0010I After 2500 nodes, 16 on tree, 307 best solution, best possible 297 (191.91 seconds)
Cbc0010I After 2600 nodes, 9 on tree, 307 best solution, best possible 297 (198.05 seconds)
Cbc0010I After 2700 nodes, 8 on tree, 307 best solution, best possible 298 (202.84 seconds)
Cbc0010I After 2800 nodes, 3 on tree, 307 best solution, best possible 298 (209.00 seconds)
Cbc0010I After 2900 nodes, 4 on tree, 307 best solution, best possible 298 (213.32 seconds)
Cbc0010I After 3000 nodes, 10 on tree, 307 best solution, best possible 299 (217.44 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 908 rows 273 columns
Cbc0010I After 3100 nodes, 7 on tree, 307 best solution, best possible 299 (221.85 seconds)
Cbc0010I After 3200 nodes, 2 on tree, 307 best solution, best possible 299 (225.70 seconds)
Cbc0010I After 3300 nodes, 12 on tree, 307 best solution, best possible 300 (229.76 seconds)
Cbc0010I After 3400 nodes, 8 on tree, 307 best solution, best possible 300 (236.93 seconds)
Cbc0010I After 3500 nodes, 21 on tree, 307 best solution, best possible 301 (240.03 seconds)
Cbc0010I After 3600 nodes, 14 on tree, 307 best solution, best possible 301 (244.15 seconds)
Cbc0010I After 3700 nodes, 17 on tree, 307 best solution, best possible 301 (248.78 seconds)
Cbc0010I After 3800 nodes, 14 on tree, 307 best solution, best possible 301 (252.73 seconds)
Cbc0010I After 3900 nodes, 9 on tree, 307 best solution, best possible 301 (255.52 seconds)
Cbc0010I After 4000 nodes, 15 on tree, 307 best solution, best possible 302 (259.23 seconds)
Cbc0010I After 4100 nodes, 18 on tree, 307 best solution, best possible 302 (264.85 seconds)
Cbc0010I After 4200 nodes, 10 on tree, 307 best solution, best possible 302 (269.31 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 730 rows 210 columns
Cbc0010I After 4300 nodes, 10 on tree, 307 best solution, best possible 302 (272.85 seconds)
Cbc0010I After 4400 nodes, 9 on tree, 307 best solution, best possible 303 (276.07 seconds)
Cbc0010I After 4500 nodes, 13 on tree, 307 best solution, best possible 303 (279.81 seconds)
Cbc0010I After 4600 nodes, 18 on tree, 307 best solution, best possible 304 (283.62 seconds)
Cbc0010I After 4700 nodes, 11 on tree, 307 best solution, best possible 304 (287.29 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 789 rows 234 columns
Cbc0010I After 4800 nodes, 5 on tree, 307 best solution, best possible 304 (290.09 seconds)
Cbc0010I After 4900 nodes, 10 on tree, 307 best solution, best possible 304 (293.00 seconds)
Cbc0010I After 5000 nodes, 16 on tree, 307 best solution, best possible 305 (296.09 seconds)
Cbc0010I After 5100 nodes, 26 on tree, 307 best solution, best possible 305 (299.21 seconds)
Cbc0010I After 5200 nodes, 13 on tree, 307 best solution, best possible 305 (303.52 seconds)
Cbc0010I After 5300 nodes, 8 on tree, 307 best solution, best possible 305 (306.54 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 955 rows 291 columns
Cbc0010I After 5400 nodes, 7 on tree, 307 best solution, best possible 305 (309.55 seconds)
Cbc0010I After 5500 nodes, 9 on tree, 307 best solution, best possible 305 (312.77 seconds)
Cbc0010I After 5600 nodes, 15 on tree, 307 best solution, best possible 306 (316.15 seconds)
Cbc0010I After 5700 nodes, 16 on tree, 307 best solution, best possible 306 (321.03 seconds)
Cbc0010I After 5800 nodes, 8 on tree, 307 best solution, best possible 306 (323.74 seconds)
Cbc0010I After 5900 nodes, 10 on tree, 307 best solution, best possible 306 (327.57 seconds)
Cbc0010I After 6000 nodes, 10 on tree, 307 best solution, best possible 306 (331.00 seconds)
Cbc0010I After 6100 nodes, 7 on tree, 307 best solution, best possible 306 (334.18 seconds)
Cbc0010I After 6200 nodes, 4 on tree, 307 best solution, best possible 306 (336.97 seconds)
Cbc0001I Search completed - best objective 307, took 1610989 iterations and 6208 nodes (337.24 seconds)
Cbc0032I Strong branching done 15562 times (758035 iterations), fathomed 234 nodes and fixed 921 variables
Cbc0035I Maximum depth 55, 12 variables fixed on reduced cost
Cuts at root node changed objective from 275.96 to 279
Probing was tried 1405 times and created 119859 cuts of which 0 were active after adding rounds of cuts (3.641 seconds)
Gomory was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.147 seconds)
Knapsack was tried 593 times and created 4044 cuts of which 0 were active after adding rounds of cuts (0.548 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 593 times and created 11146 cuts of which 0 were active after adding rounds of cuts (0.659 seconds)
ZeroHalf was tried 593 times and created 1592 cuts of which 0 were active after adding rounds of cuts (5.022 seconds)
ImplicationCuts was tried 70 times and created 588 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Optimal solution found

Objective value:                307.00000000
Enumerated nodes:               6208
Total iterations:               1610989
Time (CPU seconds):             337.33
Time (Wallclock seconds):       337.61

Total time (CPU seconds):       337.35   (Wallclock seconds):       337.62

