Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_2_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang8_2_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 335.362 - 0.27 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 98 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2619 rows, 916 columns (916 integer (880 of which binary)) and 8601 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 483 integers unsatisfied sum - 104.723
Cbc0038I Pass   1: suminf.   49.69173 (331) obj. 410.061 iterations 890
Cbc0038I Pass   2: suminf.   43.06328 (272) obj. 423.307 iterations 214
Cbc0038I Pass   3: suminf.   43.40091 (281) obj. 424.002 iterations 123
Cbc0038I Pass   4: suminf.   43.93127 (279) obj. 424.241 iterations 77
Cbc0038I Pass   5: suminf.   39.96249 (264) obj. 424.389 iterations 99
Cbc0038I Pass   6: suminf.   39.75089 (263) obj. 424.298 iterations 72
Cbc0038I Pass   7: suminf.   36.43679 (243) obj. 415.945 iterations 225
Cbc0038I Pass   8: suminf.   34.46239 (239) obj. 416.006 iterations 96
Cbc0038I Pass   9: suminf.   22.75195 (173) obj. 418.366 iterations 293
Cbc0038I Pass  10: suminf.   20.74958 (170) obj. 417.509 iterations 132
Cbc0038I Pass  11: suminf.   20.46383 (172) obj. 417.506 iterations 24
Cbc0038I Pass  12: suminf.   12.72673 (109) obj. 403 iterations 177
Cbc0038I Pass  13: suminf.   12.54319 (108) obj. 403 iterations 12
Cbc0038I Pass  14: suminf.   11.70219 (98) obj. 403 iterations 65
Cbc0038I Pass  15: suminf.    9.38612 (93) obj. 403 iterations 34
Cbc0038I Pass  16: suminf.    9.65866 (96) obj. 403 iterations 11
Cbc0038I Pass  17: suminf.    8.91666 (65) obj. 403 iterations 121
Cbc0038I Pass  18: suminf.    7.38641 (74) obj. 403 iterations 91
Cbc0038I Pass  19: suminf.    5.58273 (61) obj. 403 iterations 166
Cbc0038I Pass  20: suminf.    6.16538 (71) obj. 403 iterations 106
Cbc0038I Pass  21: suminf.    8.80789 (58) obj. 403 iterations 272
Cbc0038I Pass  22: suminf.    7.12547 (71) obj. 403 iterations 153
Cbc0038I Pass  23: suminf.    7.12547 (71) obj. 403 iterations 8
Cbc0038I Pass  24: suminf.   14.63376 (91) obj. 426.146 iterations 227
Cbc0038I Pass  25: suminf.    7.65655 (63) obj. 455.139 iterations 42
Cbc0038I Pass  26: suminf.    7.64481 (64) obj. 455.101 iterations 5
Cbc0038I Pass  27: suminf.    3.31340 (30) obj. 403 iterations 256
Cbc0038I Pass  28: suminf.    3.31087 (30) obj. 403 iterations 19
Cbc0038I Pass  29: suminf.    1.82262 (40) obj. 403 iterations 111
Cbc0038I Pass  30: suminf.    1.84402 (41) obj. 403 iterations 6
Cbc0038I Pass  31: suminf.    3.19220 (26) obj. 403 iterations 76
Cbc0038I Pass  32: suminf.    3.67259 (34) obj. 403 iterations 13
Cbc0038I Pass  33: suminf.    1.43581 (33) obj. 403 iterations 173
Cbc0038I Pass  34: suminf.    1.13849 (22) obj. 403 iterations 19
Cbc0038I Pass  35: suminf.    3.59033 (30) obj. 403 iterations 62
Cbc0038I Pass  36: suminf.    2.93336 (28) obj. 403 iterations 37
Cbc0038I Pass  37: suminf.    0.00000 (0) obj. 403 iterations 77
Cbc0038I Solution found of 403
Cbc0038I Cleaned solution of 403
Cbc0038I Before mini branch and bound, 303 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.10 seconds)
Cbc0038I Round again with cutoff of 395.336
Cbc0038I Pass  38: suminf.   49.17552 (346) obj. 395 iterations 91
Cbc0038I Pass  39: suminf.   43.39297 (283) obj. 395.336 iterations 341
Cbc0038I Pass  40: suminf.   41.25795 (279) obj. 395.336 iterations 199
Cbc0038I Pass  41: suminf.   39.39541 (273) obj. 395.336 iterations 127
Cbc0038I Pass  42: suminf.   27.65237 (210) obj. 395.336 iterations 384
Cbc0038I Pass  43: suminf.   24.09679 (187) obj. 395.336 iterations 103
Cbc0038I Pass  44: suminf.   19.93828 (135) obj. 395.336 iterations 258
Cbc0038I Pass  45: suminf.   17.52813 (142) obj. 395.336 iterations 132
Cbc0038I Pass  46: suminf.   15.09892 (110) obj. 395.336 iterations 167
Cbc0038I Pass  47: suminf.   14.32615 (110) obj. 395.336 iterations 21
Cbc0038I Pass  48: suminf.   10.71448 (82) obj. 395.336 iterations 245
Cbc0038I Pass  49: suminf.    7.66536 (76) obj. 395.336 iterations 146
Cbc0038I Pass  50: suminf.    8.83141 (74) obj. 395.336 iterations 256
Cbc0038I Pass  51: suminf.    8.98651 (70) obj. 395.336 iterations 53
Cbc0038I Pass  52: suminf.    6.48977 (51) obj. 395.336 iterations 130
Cbc0038I Pass  53: suminf.    2.98948 (41) obj. 395.336 iterations 113
Cbc0038I Pass  54: suminf.    6.23154 (51) obj. 395.336 iterations 194
Cbc0038I Pass  55: suminf.    6.23154 (51) obj. 395.336 iterations 1
Cbc0038I Pass  56: suminf.    3.63534 (41) obj. 395.336 iterations 83
Cbc0038I Pass  57: suminf.    3.53421 (35) obj. 395.336 iterations 15
Cbc0038I Pass  58: suminf.    7.27241 (54) obj. 395.336 iterations 154
Cbc0038I Pass  59: suminf.    3.52204 (52) obj. 395.336 iterations 103
Cbc0038I Pass  60: suminf.    3.22287 (53) obj. 395.336 iterations 27
Cbc0038I Pass  61: suminf.    9.80746 (63) obj. 395.336 iterations 178
Cbc0038I Pass  62: suminf.    6.41753 (55) obj. 395.336 iterations 73
Cbc0038I Pass  63: suminf.    6.22634 (56) obj. 395.336 iterations 54
Cbc0038I Pass  64: suminf.    1.91212 (34) obj. 395.336 iterations 79
Cbc0038I Pass  65: suminf.    1.94103 (32) obj. 395.336 iterations 17
Cbc0038I Pass  66: suminf.    6.55752 (40) obj. 395.336 iterations 71
Cbc0038I Pass  67: suminf.    3.51058 (40) obj. 395.336 iterations 58
Cbc0038I Pass  68: suminf.    2.66383 (42) obj. 395.336 iterations 26
Cbc0038I Pass  69: suminf.   10.36955 (53) obj. 395.336 iterations 142
Cbc0038I Pass  70: suminf.    7.12502 (38) obj. 395.336 iterations 71
Cbc0038I Pass  71: suminf.    4.48279 (37) obj. 395.336 iterations 29
Cbc0038I Pass  72: suminf.    4.20687 (40) obj. 395.336 iterations 68
Cbc0038I Pass  73: suminf.    6.91246 (40) obj. 395.336 iterations 81
Cbc0038I Pass  74: suminf.    4.82042 (32) obj. 395.336 iterations 131
Cbc0038I Pass  75: suminf.    4.61564 (37) obj. 395.336 iterations 117
Cbc0038I Pass  76: suminf.    4.99302 (42) obj. 395.336 iterations 87
Cbc0038I Pass  77: suminf.    8.20161 (61) obj. 395.336 iterations 188
Cbc0038I Pass  78: suminf.    7.80582 (62) obj. 395.336 iterations 56
Cbc0038I Pass  79: suminf.    7.09107 (49) obj. 395.336 iterations 105
Cbc0038I Pass  80: suminf.    9.16040 (55) obj. 395.336 iterations 99
Cbc0038I Pass  81: suminf.    9.16040 (55) obj. 395.336 iterations 6
Cbc0038I Pass  82: suminf.    9.52567 (49) obj. 395.336 iterations 132
Cbc0038I Pass  83: suminf.    9.55564 (53) obj. 395.336 iterations 12
Cbc0038I Pass  84: suminf.    6.83094 (57) obj. 395.336 iterations 133
Cbc0038I Pass  85: suminf.    6.81863 (47) obj. 395.336 iterations 4
Cbc0038I Pass  86: suminf.   12.27997 (67) obj. 395.336 iterations 175
Cbc0038I Pass  87: suminf.   10.90656 (60) obj. 395.336 iterations 35
Cbc0038I Pass  88: suminf.    7.40481 (69) obj. 395.336 iterations 80
Cbc0038I Pass  89: suminf.    6.29795 (65) obj. 395.336 iterations 20
Cbc0038I Pass  90: suminf.    2.78434 (48) obj. 395.336 iterations 103
Cbc0038I Pass  91: suminf.    2.79090 (59) obj. 395.336 iterations 10
Cbc0038I Pass  92: suminf.    8.10715 (55) obj. 395.336 iterations 316
Cbc0038I Pass  93: suminf.    7.57901 (51) obj. 395.336 iterations 49
Cbc0038I Pass  94: suminf.    5.78065 (45) obj. 395.336 iterations 101
Cbc0038I Pass  95: suminf.    4.67630 (47) obj. 395.336 iterations 62
Cbc0038I Pass  96: suminf.    2.64277 (44) obj. 395.336 iterations 35
Cbc0038I Pass  97: suminf.    7.96163 (71) obj. 395.336 iterations 116
Cbc0038I Pass  98: suminf.    6.79031 (66) obj. 395.336 iterations 65
Cbc0038I Pass  99: suminf.    2.64504 (45) obj. 395.336 iterations 115
Cbc0038I Pass 100: suminf.    9.17792 (70) obj. 395.336 iterations 113
Cbc0038I Pass 101: suminf.    7.97889 (67) obj. 395.336 iterations 47
Cbc0038I Pass 102: suminf.    5.41942 (64) obj. 395.336 iterations 73
Cbc0038I Pass 103: suminf.    3.73610 (55) obj. 395.336 iterations 77
Cbc0038I Pass 104: suminf.    6.88248 (51) obj. 395.336 iterations 118
Cbc0038I Pass 105: suminf.    4.78799 (35) obj. 395.336 iterations 93
Cbc0038I Pass 106: suminf.    6.35150 (67) obj. 395.336 iterations 193
Cbc0038I Pass 107: suminf.    6.03833 (64) obj. 395.336 iterations 29
Cbc0038I Pass 108: suminf.    9.13108 (67) obj. 395.336 iterations 239
Cbc0038I Pass 109: suminf.    9.26030 (74) obj. 395.336 iterations 49
Cbc0038I Pass 110: suminf.    4.55417 (60) obj. 395.336 iterations 146
Cbc0038I Pass 111: suminf.   16.10762 (78) obj. 395.336 iterations 171
Cbc0038I Pass 112: suminf.   10.76135 (68) obj. 395.336 iterations 93
Cbc0038I Pass 113: suminf.   13.02524 (83) obj. 395.336 iterations 146
Cbc0038I Pass 114: suminf.   11.67432 (82) obj. 395.336 iterations 98
Cbc0038I Pass 115: suminf.   10.87469 (81) obj. 395.336 iterations 28
Cbc0038I Pass 116: suminf.   10.38959 (81) obj. 395.336 iterations 44
Cbc0038I Pass 117: suminf.    9.73720 (64) obj. 395.336 iterations 220
Cbc0038I Pass 118: suminf.    7.64291 (59) obj. 395.336 iterations 72
Cbc0038I Pass 119: suminf.    2.49880 (52) obj. 395.336 iterations 88
Cbc0038I Pass 120: suminf.    2.35852 (61) obj. 395.336 iterations 10
Cbc0038I Pass 121: suminf.   11.51490 (68) obj. 395.336 iterations 197
Cbc0038I Pass 122: suminf.    8.91515 (65) obj. 395.336 iterations 109
Cbc0038I Pass 123: suminf.    6.18554 (51) obj. 395.336 iterations 159
Cbc0038I Pass 124: suminf.    2.22375 (38) obj. 395.336 iterations 81
Cbc0038I Pass 125: suminf.    5.59335 (49) obj. 395.336 iterations 120
Cbc0038I Pass 126: suminf.    4.75830 (69) obj. 395.336 iterations 29
Cbc0038I Pass 127: suminf.    6.62959 (35) obj. 395.336 iterations 95
Cbc0038I Pass 128: suminf.    2.04014 (25) obj. 395.336 iterations 55
Cbc0038I Pass 129: suminf.    0.33628 (1) obj. 395.336 iterations 86
Cbc0038I Solution found of 395.336
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2620 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 387
Cbc0038I Before mini branch and bound, 279 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2619 rows 916 columns, reduced to 2036 rows 634 columns - 225 fixed gives 628, 178 - ok now
Cbc0038I Full problem 2619 rows 916 columns, reduced to 237 rows 89 columns
Cbc0038I Mini branch and bound improved solution from 387 to 382 (2.27 seconds)
Cbc0038I Round again with cutoff of 371.872
Cbc0038I Pass 130: suminf.   52.86208 (354) obj. 371.872 iterations 72
Cbc0038I Pass 131: suminf.   47.42962 (319) obj. 371.872 iterations 272
Cbc0038I Pass 132: suminf.   45.70196 (305) obj. 371.872 iterations 108
Cbc0038I Pass 133: suminf.   40.52470 (273) obj. 371.872 iterations 284
Cbc0038I Pass 134: suminf.   40.01206 (295) obj. 371.872 iterations 125
Cbc0038I Pass 135: suminf.   38.96287 (263) obj. 371.872 iterations 156
Cbc0038I Pass 136: suminf.   32.54652 (234) obj. 371.872 iterations 279
Cbc0038I Pass 137: suminf.   29.07096 (232) obj. 371.872 iterations 83
Cbc0038I Pass 138: suminf.   25.91403 (210) obj. 371.872 iterations 116
Cbc0038I Pass 139: suminf.   25.99994 (209) obj. 371.872 iterations 14
Cbc0038I Pass 140: suminf.   21.54077 (148) obj. 371.872 iterations 314
Cbc0038I Pass 141: suminf.   18.90425 (146) obj. 371.872 iterations 209
Cbc0038I Pass 142: suminf.   15.80922 (133) obj. 371.872 iterations 275
Cbc0038I Pass 143: suminf.   15.25600 (126) obj. 371.872 iterations 104
Cbc0038I Pass 144: suminf.   14.12807 (111) obj. 371.872 iterations 92
Cbc0038I Pass 145: suminf.   14.26839 (124) obj. 371.872 iterations 117
Cbc0038I Pass 146: suminf.   14.67414 (123) obj. 371.872 iterations 359
Cbc0038I Pass 147: suminf.   13.85053 (129) obj. 371.872 iterations 57
Cbc0038I Pass 148: suminf.   14.30165 (121) obj. 371.872 iterations 22
Cbc0038I Pass 149: suminf.   15.28294 (121) obj. 371.872 iterations 105
Cbc0038I Pass 150: suminf.   14.85139 (133) obj. 371.872 iterations 43
Cbc0038I Pass 151: suminf.   16.34649 (113) obj. 371.872 iterations 203
Cbc0038I Pass 152: suminf.   14.11329 (128) obj. 371.872 iterations 179
Cbc0038I Pass 153: suminf.   11.70614 (82) obj. 371.872 iterations 245
Cbc0038I Pass 154: suminf.    9.87688 (82) obj. 371.872 iterations 178
Cbc0038I Pass 155: suminf.   13.46562 (110) obj. 371.872 iterations 320
Cbc0038I Pass 156: suminf.    9.76304 (63) obj. 371.872 iterations 114
Cbc0038I Pass 157: suminf.    9.79327 (72) obj. 371.872 iterations 45
Cbc0038I Pass 158: suminf.    8.06723 (66) obj. 371.872 iterations 98
Cbc0038I Pass 159: suminf.    7.63100 (55) obj. 371.872 iterations 72
Cbc0038I Pass 160: suminf.    7.66015 (55) obj. 371.872 iterations 66
Cbc0038I Pass 161: suminf.   12.90365 (85) obj. 371.872 iterations 197
Cbc0038I Pass 162: suminf.    7.91044 (71) obj. 371.872 iterations 181
Cbc0038I Pass 163: suminf.    7.91044 (71) obj. 371.872 iterations 3
Cbc0038I Pass 164: suminf.   10.35222 (61) obj. 371.872 iterations 154
Cbc0038I Pass 165: suminf.    9.76095 (100) obj. 371.872 iterations 151
Cbc0038I Pass 166: suminf.    9.98526 (81) obj. 371.872 iterations 236
Cbc0038I Pass 167: suminf.    9.76304 (63) obj. 371.872 iterations 128
Cbc0038I Pass 168: suminf.    9.79327 (72) obj. 371.872 iterations 52
Cbc0038I Pass 169: suminf.   11.62866 (63) obj. 371.872 iterations 228
Cbc0038I Pass 170: suminf.    9.15826 (75) obj. 371.872 iterations 186
Cbc0038I Pass 171: suminf.    8.76644 (67) obj. 371.872 iterations 154
Cbc0038I Pass 172: suminf.    8.69975 (66) obj. 371.872 iterations 6
Cbc0038I Pass 173: suminf.    8.83519 (70) obj. 371.872 iterations 163
Cbc0038I Pass 174: suminf.    8.66835 (69) obj. 371.872 iterations 109
Cbc0038I Pass 175: suminf.    8.66617 (63) obj. 371.872 iterations 121
Cbc0038I Pass 176: suminf.   44.02853 (254) obj. 371.872 iterations 734
Cbc0038I Pass 177: suminf.   23.25901 (174) obj. 371.872 iterations 543
Cbc0038I Pass 178: suminf.   16.33413 (128) obj. 371.872 iterations 201
Cbc0038I Pass 179: suminf.   16.23648 (129) obj. 371.872 iterations 3
Cbc0038I Pass 180: suminf.   16.55839 (124) obj. 371.872 iterations 87
Cbc0038I Pass 181: suminf.   15.58999 (130) obj. 371.872 iterations 110
Cbc0038I Pass 182: suminf.   14.66864 (136) obj. 371.872 iterations 55
Cbc0038I Pass 183: suminf.   13.94405 (108) obj. 371.872 iterations 175
Cbc0038I Pass 184: suminf.   14.75640 (113) obj. 371.872 iterations 103
Cbc0038I Pass 185: suminf.   12.09033 (108) obj. 371.872 iterations 236
Cbc0038I Pass 186: suminf.   11.52348 (105) obj. 371.872 iterations 34
Cbc0038I Pass 187: suminf.   13.89607 (110) obj. 371.872 iterations 383
Cbc0038I Pass 188: suminf.   10.66811 (97) obj. 371.872 iterations 64
Cbc0038I Pass 189: suminf.   15.43636 (99) obj. 371.872 iterations 234
Cbc0038I Pass 190: suminf.   12.99412 (96) obj. 371.872 iterations 184
Cbc0038I Pass 191: suminf.   10.79780 (86) obj. 371.872 iterations 242
Cbc0038I Pass 192: suminf.   59.60181 (286) obj. 371.872 iterations 591
Cbc0038I Pass 193: suminf.   20.93176 (166) obj. 371.872 iterations 569
Cbc0038I Pass 194: suminf.   18.70240 (143) obj. 371.872 iterations 84
Cbc0038I Pass 195: suminf.   17.10593 (132) obj. 371.872 iterations 89
Cbc0038I Pass 196: suminf.   17.10593 (132) obj. 371.872 iterations 15
Cbc0038I Pass 197: suminf.   16.51479 (128) obj. 371.872 iterations 146
Cbc0038I Pass 198: suminf.   16.37109 (137) obj. 371.872 iterations 48
Cbc0038I Pass 199: suminf.   17.07660 (138) obj. 371.872 iterations 25
Cbc0038I Pass 200: suminf.   14.66325 (125) obj. 371.872 iterations 191
Cbc0038I Pass 201: suminf.   14.44356 (128) obj. 371.872 iterations 69
Cbc0038I Pass 202: suminf.   12.87078 (103) obj. 371.872 iterations 205
Cbc0038I Pass 203: suminf.   10.70443 (90) obj. 371.872 iterations 102
Cbc0038I Pass 204: suminf.    9.64939 (87) obj. 371.872 iterations 156
Cbc0038I Pass 205: suminf.   10.24978 (85) obj. 371.872 iterations 76
Cbc0038I Pass 206: suminf.   10.21675 (81) obj. 371.872 iterations 170
Cbc0038I Pass 207: suminf.    9.37917 (82) obj. 371.872 iterations 95
Cbc0038I Pass 208: suminf.    8.62749 (84) obj. 371.872 iterations 280
Cbc0038I Pass 209: suminf.    7.76548 (75) obj. 371.872 iterations 82
Cbc0038I Pass 210: suminf.    8.45038 (81) obj. 371.872 iterations 185
Cbc0038I Pass 211: suminf.    7.37196 (85) obj. 371.872 iterations 105
Cbc0038I Pass 212: suminf.    7.91497 (75) obj. 371.872 iterations 142
Cbc0038I Pass 213: suminf.    7.84737 (76) obj. 371.872 iterations 58
Cbc0038I Pass 214: suminf.   13.29495 (92) obj. 371.872 iterations 194
Cbc0038I Pass 215: suminf.   10.49278 (85) obj. 371.872 iterations 89
Cbc0038I Pass 216: suminf.   10.56823 (86) obj. 371.872 iterations 45
Cbc0038I Pass 217: suminf.   14.59529 (100) obj. 371.872 iterations 242
Cbc0038I Pass 218: suminf.    9.70414 (79) obj. 371.872 iterations 86
Cbc0038I Pass 219: suminf.    9.44679 (77) obj. 371.872 iterations 12
Cbc0038I Pass 220: suminf.    7.77421 (77) obj. 371.872 iterations 102
Cbc0038I Pass 221: suminf.    7.85623 (76) obj. 371.872 iterations 82
Cbc0038I Pass 222: suminf.   14.65029 (104) obj. 371.872 iterations 216
Cbc0038I Pass 223: suminf.   11.83215 (108) obj. 371.872 iterations 108
Cbc0038I Pass 224: suminf.   11.98742 (105) obj. 371.872 iterations 195
Cbc0038I Pass 225: suminf.    9.89269 (103) obj. 371.872 iterations 117
Cbc0038I Pass 226: suminf.   13.80700 (107) obj. 371.872 iterations 207
Cbc0038I Pass 227: suminf.   10.87422 (91) obj. 371.872 iterations 68
Cbc0038I Pass 228: suminf.   10.28141 (99) obj. 371.872 iterations 157
Cbc0038I Pass 229: suminf.   55.55099 (250) obj. 371.872 iterations 659
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.93 seconds)
Cbc0038I After 3.93 seconds - Feasibility pump exiting with objective of 382 - took 3.40 seconds
Cbc0012I Integer solution of 382 found by feasibility pump after 0 iterations and 0 nodes (3.93 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1767 rows 503 columns - 211 fixed gives 435, 100 - ok now
Cbc0031I 71 added rows had average density of 8.028169
Cbc0013I At root node, 71 cuts changed objective from 335.36191 to 354.46472 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 696 row cuts average 2.4 elements, 46 column cuts (46 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 109 row cuts average 102.4 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 309 row cuts average 39.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 382 best solution, best possible 355 (7.62 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1731 rows 492 columns - 212 fixed gives 358, 93 - ok now
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1603 rows 459 columns - 172 fixed gives 529, 120 - ok now
Cbc0010I After 100 nodes, 9 on tree, 382 best solution, best possible 360 (46.15 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1579 rows 445 columns - 165 fixed gives 382, 98 - ok now
Cbc0010I After 200 nodes, 9 on tree, 382 best solution, best possible 360 (70.36 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1489 rows 416 columns - 153 fixed gives 410, 100 - ok now
Cbc0010I After 300 nodes, 9 on tree, 382 best solution, best possible 360 (90.33 seconds)
Cbc0010I After 400 nodes, 9 on tree, 382 best solution, best possible 360 (103.58 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1532 rows 447 columns - 159 fixed gives 609, 128 - ok now
Cbc0010I After 500 nodes, 11 on tree, 382 best solution, best possible 360 (125.21 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 438 rows 138 columns
Cbc0010I After 600 nodes, 12 on tree, 382 best solution, best possible 360 (143.77 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 447 rows 144 columns
Cbc0010I After 700 nodes, 11 on tree, 382 best solution, best possible 360 (155.00 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 414 rows 136 columns
Cbc0010I After 800 nodes, 15 on tree, 382 best solution, best possible 360 (168.46 seconds)
Cbc0010I After 900 nodes, 12 on tree, 382 best solution, best possible 360 (175.82 seconds)
Cbc0010I After 1000 nodes, 14 on tree, 382 best solution, best possible 360 (186.38 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1437 rows 411 columns - 141 fixed gives 548, 115 - ok now
Cbc0010I After 1100 nodes, 12 on tree, 382 best solution, best possible 360 (203.92 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1384 rows 399 columns - 134 fixed gives 548, 118 - ok now
Cbc0010I After 1200 nodes, 14 on tree, 382 best solution, best possible 360 (219.13 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 382 best solution, best possible 360 (227.45 seconds)
Cbc0010I After 1400 nodes, 23 on tree, 382 best solution, best possible 360 (233.77 seconds)
Cbc0010I After 1500 nodes, 19 on tree, 382 best solution, best possible 360 (239.12 seconds)
Cbc0010I After 1600 nodes, 18 on tree, 382 best solution, best possible 360 (244.58 seconds)
Cbc0010I After 1700 nodes, 18 on tree, 382 best solution, best possible 360 (248.34 seconds)
Cbc0010I After 1800 nodes, 19 on tree, 382 best solution, best possible 360 (252.11 seconds)
Cbc0010I After 1900 nodes, 24 on tree, 382 best solution, best possible 360 (256.02 seconds)
Cbc0010I After 2000 nodes, 21 on tree, 382 best solution, best possible 360 (259.56 seconds)
Cbc0010I After 2100 nodes, 22 on tree, 382 best solution, best possible 360 (263.08 seconds)
Cbc0010I After 2200 nodes, 17 on tree, 382 best solution, best possible 360 (267.15 seconds)
Cbc0010I After 2300 nodes, 16 on tree, 382 best solution, best possible 360 (271.31 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1478 rows 431 columns - 142 fixed gives 713, 165 - ok now
Cbc0010I After 2400 nodes, 12 on tree, 382 best solution, best possible 360 (276.85 seconds)
Cbc0010I After 2500 nodes, 21 on tree, 382 best solution, best possible 360 (282.19 seconds)
Cbc0010I After 2600 nodes, 19 on tree, 382 best solution, best possible 360 (284.26 seconds)
Cbc0010I After 2700 nodes, 10 on tree, 382 best solution, best possible 360 (288.92 seconds)
Cbc0010I After 2800 nodes, 22 on tree, 382 best solution, best possible 360 (296.18 seconds)
Cbc0010I After 2900 nodes, 16 on tree, 382 best solution, best possible 360 (300.15 seconds)
Cbc0010I After 3000 nodes, 19 on tree, 382 best solution, best possible 360 (303.54 seconds)
Cbc0010I After 3100 nodes, 15 on tree, 382 best solution, best possible 360 (305.81 seconds)
Cbc0010I After 3200 nodes, 12 on tree, 382 best solution, best possible 360 (311.64 seconds)
Cbc0010I After 3300 nodes, 16 on tree, 382 best solution, best possible 360 (318.40 seconds)
Cbc0010I After 3400 nodes, 10 on tree, 382 best solution, best possible 360 (325.41 seconds)
Cbc0010I After 3500 nodes, 24 on tree, 382 best solution, best possible 360 (329.27 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 894 rows 272 columns
Cbc0010I After 3600 nodes, 24 on tree, 382 best solution, best possible 360 (331.20 seconds)
Cbc0010I After 3700 nodes, 17 on tree, 382 best solution, best possible 360 (333.67 seconds)
Cbc0010I After 3800 nodes, 13 on tree, 382 best solution, best possible 360 (336.14 seconds)
Cbc0010I After 3900 nodes, 11 on tree, 382 best solution, best possible 360 (340.81 seconds)
Cbc0010I After 4000 nodes, 18 on tree, 382 best solution, best possible 360 (346.93 seconds)
Cbc0010I After 4100 nodes, 9 on tree, 382 best solution, best possible 360 (353.81 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1417 rows 393 columns - 145 fixed gives 556, 116 - ok now
Cbc0010I After 4200 nodes, 16 on tree, 382 best solution, best possible 360 (359.92 seconds)
Cbc0010I After 4300 nodes, 15 on tree, 382 best solution, best possible 360 (365.50 seconds)
Cbc0010I After 4400 nodes, 12 on tree, 382 best solution, best possible 360 (371.36 seconds)
Cbc0010I After 4500 nodes, 18 on tree, 382 best solution, best possible 360 (373.53 seconds)
Cbc0010I After 4600 nodes, 17 on tree, 382 best solution, best possible 360 (376.27 seconds)
Cbc0010I After 4700 nodes, 12 on tree, 382 best solution, best possible 360 (384.61 seconds)
Cbc0010I After 4800 nodes, 13 on tree, 382 best solution, best possible 360 (387.50 seconds)
Cbc0010I After 4900 nodes, 10 on tree, 382 best solution, best possible 360 (393.30 seconds)
Cbc0010I After 5000 nodes, 15 on tree, 382 best solution, best possible 360 (401.56 seconds)
Cbc0010I After 5100 nodes, 13 on tree, 382 best solution, best possible 360 (407.80 seconds)
Cbc0010I After 5200 nodes, 12 on tree, 382 best solution, best possible 360 (413.75 seconds)
Cbc0010I After 5300 nodes, 14 on tree, 382 best solution, best possible 360 (418.44 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1636 rows 485 columns - 170 fixed gives 569, 135 - ok now
Cbc0010I After 5400 nodes, 12 on tree, 382 best solution, best possible 360 (424.41 seconds)
Cbc0010I After 5500 nodes, 14 on tree, 382 best solution, best possible 360 (430.55 seconds)
Cbc0010I After 5600 nodes, 15 on tree, 382 best solution, best possible 360 (435.71 seconds)
Cbc0010I After 5700 nodes, 22 on tree, 382 best solution, best possible 360 (442.95 seconds)
Cbc0010I After 5800 nodes, 21 on tree, 382 best solution, best possible 360 (448.45 seconds)
Cbc0010I After 5900 nodes, 17 on tree, 382 best solution, best possible 360 (453.43 seconds)
Cbc0010I After 6000 nodes, 15 on tree, 382 best solution, best possible 360 (459.19 seconds)
Cbc0010I After 6100 nodes, 18 on tree, 382 best solution, best possible 360 (464.20 seconds)
Cbc0010I After 6200 nodes, 16 on tree, 382 best solution, best possible 360 (469.74 seconds)
Cbc0010I After 6300 nodes, 12 on tree, 382 best solution, best possible 360 (473.23 seconds)
Cbc0010I After 6400 nodes, 17 on tree, 382 best solution, best possible 360 (477.44 seconds)
Cbc0010I After 6500 nodes, 11 on tree, 382 best solution, best possible 360 (483.55 seconds)
Cbc0010I After 6600 nodes, 9 on tree, 382 best solution, best possible 360 (489.53 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1601 rows 474 columns - 174 fixed gives 569, 123 - ok now
Cbc0010I After 6700 nodes, 15 on tree, 382 best solution, best possible 360 (494.68 seconds)
Cbc0010I After 6800 nodes, 11 on tree, 382 best solution, best possible 360 (500.22 seconds)
Cbc0010I After 6900 nodes, 6 on tree, 382 best solution, best possible 360 (505.90 seconds)
Cbc0010I After 7000 nodes, 15 on tree, 382 best solution, best possible 360 (511.57 seconds)
Cbc0010I After 7100 nodes, 12 on tree, 382 best solution, best possible 360 (514.67 seconds)
Cbc0010I After 7200 nodes, 25 on tree, 382 best solution, best possible 360 (519.42 seconds)
Cbc0010I After 7300 nodes, 18 on tree, 382 best solution, best possible 360 (523.93 seconds)
Cbc0010I After 7400 nodes, 24 on tree, 382 best solution, best possible 360 (527.53 seconds)
Cbc0010I After 7500 nodes, 18 on tree, 382 best solution, best possible 360 (530.56 seconds)
Cbc0010I After 7600 nodes, 8 on tree, 382 best solution, best possible 360 (534.80 seconds)
Cbc0010I After 7700 nodes, 16 on tree, 382 best solution, best possible 360 (539.63 seconds)
Cbc0010I After 7800 nodes, 17 on tree, 382 best solution, best possible 360 (543.14 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1370 rows 393 columns - 133 fixed gives 575, 112 - ok now
Cbc0010I After 7900 nodes, 8 on tree, 382 best solution, best possible 360 (545.63 seconds)
Cbc0010I After 8000 nodes, 8 on tree, 382 best solution, best possible 360 (551.80 seconds)
Cbc0010I After 8100 nodes, 12 on tree, 382 best solution, best possible 360 (556.21 seconds)
Cbc0010I After 8200 nodes, 17 on tree, 382 best solution, best possible 360 (558.28 seconds)
Cbc0010I After 8300 nodes, 13 on tree, 382 best solution, best possible 360 (560.46 seconds)
Cbc0010I After 8400 nodes, 11 on tree, 382 best solution, best possible 360 (566.39 seconds)
Cbc0010I After 8500 nodes, 20 on tree, 382 best solution, best possible 360 (572.62 seconds)
Cbc0010I After 8600 nodes, 11 on tree, 382 best solution, best possible 360 (577.77 seconds)
Cbc0010I After 8700 nodes, 15 on tree, 382 best solution, best possible 360 (584.72 seconds)
Cbc0010I After 8800 nodes, 24 on tree, 382 best solution, best possible 360 (591.48 seconds)
Cbc0010I After 8900 nodes, 25 on tree, 382 best solution, best possible 360 (593.06 seconds)
Cbc0010I After 9000 nodes, 17 on tree, 382 best solution, best possible 360 (595.13 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 700 rows 218 columns
Cbc0010I After 9100 nodes, 20 on tree, 382 best solution, best possible 360 (601.56 seconds)
Cbc0010I After 9200 nodes, 12 on tree, 382 best solution, best possible 360 (603.61 seconds)
Cbc0010I After 9300 nodes, 13 on tree, 382 best solution, best possible 360 (609.06 seconds)
Cbc0010I After 9400 nodes, 10 on tree, 382 best solution, best possible 360 (614.51 seconds)
Cbc0010I After 9500 nodes, 11 on tree, 382 best solution, best possible 360 (617.49 seconds)
Cbc0038I Full problem 2619 rows 916 columns, reduced to 1357 rows 388 columns - 122 fixed gives 564, 122 - ok now
Cbc0010I After 9600 nodes, 12 on tree, 382 best solution, best possible 360 (621.31 seconds)
Cbc0010I After 9700 nodes, 11 on tree, 382 best solution, best possible 360 (627.05 seconds)
Cbc0001I Search completed - best objective 382, took 2927531 iterations and 9746 nodes (630.66 seconds)
Cbc0032I Strong branching done 23112 times (1356041 iterations), fathomed 599 nodes and fixed 2617 variables
Cbc0035I Maximum depth 55, 1 variables fixed on reduced cost
Cuts at root node changed objective from 335.362 to 355
Probing was tried 1907 times and created 239232 cuts of which 0 were active after adding rounds of cuts (4.143 seconds)
Gomory was tried 1002 times and created 3533 cuts of which 0 were active after adding rounds of cuts (2.557 seconds)
Knapsack was tried 1002 times and created 5230 cuts of which 0 were active after adding rounds of cuts (0.785 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 1002 times and created 22186 cuts of which 0 were active after adding rounds of cuts (1.277 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
ImplicationCuts was tried 36 times and created 2877 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)

Result - Optimal solution found

Objective value:                382.00000000
Enumerated nodes:               9746
Total iterations:               2927531
Time (CPU seconds):             630.73
Time (Wallclock seconds):       631.12

Total time (CPU seconds):       630.74   (Wallclock seconds):       631.13

