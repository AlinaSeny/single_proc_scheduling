Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_3_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang9_3_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 360.337 - 1.69 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1048 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 398 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 113 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 4312 rows, 1490 columns (1490 integer (1445 of which binary)) and 14403 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 597 integers unsatisfied sum - 196.846
Cbc0038I Pass   1: (2.87 seconds) suminf.   51.32315 (331) obj. 492.175 iterations 1712
Cbc0038I Pass   2: (2.96 seconds) suminf.   36.59806 (293) obj. 494.364 iterations 510
Cbc0038I Pass   3: (3.02 seconds) suminf.   31.54547 (293) obj. 503.093 iterations 300
Cbc0038I Pass   4: (3.07 seconds) suminf.   25.97922 (234) obj. 501.377 iterations 273
Cbc0038I Pass   5: (3.08 seconds) suminf.   24.44130 (228) obj. 501.388 iterations 77
Cbc0038I Pass   6: (3.14 seconds) suminf.   23.13210 (208) obj. 497.66 iterations 359
Cbc0038I Pass   7: (3.20 seconds) suminf.   19.32456 (206) obj. 518.251 iterations 304
Cbc0038I Pass   8: (3.24 seconds) suminf.   17.92259 (198) obj. 523.765 iterations 210
Cbc0038I Pass   9: (3.26 seconds) suminf.   17.91063 (161) obj. 492.685 iterations 153
Cbc0038I Pass  10: (3.29 seconds) suminf.   13.97722 (186) obj. 529.307 iterations 133
Cbc0038I Pass  11: (3.29 seconds) suminf.   13.97722 (186) obj. 529.307 iterations 2
Cbc0038I Pass  12: (3.32 seconds) suminf.   14.96910 (151) obj. 474.375 iterations 147
Cbc0038I Pass  13: (3.33 seconds) suminf.   11.33670 (146) obj. 474.381 iterations 73
Cbc0038I Pass  14: (3.36 seconds) suminf.   10.26101 (136) obj. 475.618 iterations 153
Cbc0038I Pass  15: (3.37 seconds) suminf.    9.41136 (136) obj. 475.449 iterations 37
Cbc0038I Pass  16: (3.39 seconds) suminf.    8.36957 (119) obj. 474.419 iterations 145
Cbc0038I Pass  17: (3.40 seconds) suminf.    8.27368 (108) obj. 474.325 iterations 14
Cbc0038I Pass  18: (3.43 seconds) suminf.    9.22602 (92) obj. 459.42 iterations 207
Cbc0038I Pass  19: (3.44 seconds) suminf.    4.26903 (81) obj. 460.169 iterations 78
Cbc0038I Pass  20: (3.47 seconds) suminf.    2.49341 (27) obj. 458 iterations 120
Cbc0038I Pass  21: (3.48 seconds) suminf.    2.23525 (25) obj. 458 iterations 76
Cbc0038I Pass  22: (3.50 seconds) suminf.    0.00000 (0) obj. 458 iterations 93
Cbc0038I Solution found of 458
Cbc0038I Cleaned solution of 458
Cbc0038I Before mini branch and bound, 712 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.53 seconds)
Cbc0038I Round again with cutoff of 447.339
Cbc0038I Pass  23: (3.55 seconds) suminf.   49.66333 (330) obj. 447 iterations 51
Cbc0038I Pass  24: (3.64 seconds) suminf.   36.58572 (283) obj. 447.339 iterations 550
Cbc0038I Pass  25: (3.66 seconds) suminf.   35.60078 (279) obj. 447.339 iterations 136
Cbc0038I Pass  26: (3.72 seconds) suminf.   23.47097 (220) obj. 447.339 iterations 338
Cbc0038I Pass  27: (3.74 seconds) suminf.   23.45987 (214) obj. 447.339 iterations 128
Cbc0038I Pass  28: (3.76 seconds) suminf.   23.05561 (213) obj. 447.339 iterations 66
Cbc0038I Pass  29: (3.80 seconds) suminf.   20.08772 (214) obj. 447.339 iterations 281
Cbc0038I Pass  30: (3.82 seconds) suminf.   16.93121 (195) obj. 447.339 iterations 77
Cbc0038I Pass  31: (3.88 seconds) suminf.   15.53410 (170) obj. 447.339 iterations 397
Cbc0038I Pass  32: (3.89 seconds) suminf.   14.43981 (167) obj. 447.339 iterations 46
Cbc0038I Pass  33: (3.92 seconds) suminf.   12.58141 (150) obj. 447.339 iterations 207
Cbc0038I Pass  34: (3.96 seconds) suminf.    9.95692 (134) obj. 447.339 iterations 197
Cbc0038I Pass  35: (4.00 seconds) suminf.   13.19771 (133) obj. 447.339 iterations 231
Cbc0038I Pass  36: (4.02 seconds) suminf.   11.43981 (128) obj. 447.339 iterations 90
Cbc0038I Pass  37: (4.03 seconds) suminf.    9.69150 (114) obj. 447.339 iterations 96
Cbc0038I Pass  38: (4.05 seconds) suminf.    8.51147 (113) obj. 447.339 iterations 77
Cbc0038I Pass  39: (4.17 seconds) suminf.    9.60853 (93) obj. 447.339 iterations 772
Cbc0038I Pass  40: (4.20 seconds) suminf.    7.22953 (86) obj. 447.339 iterations 211
Cbc0038I Pass  41: (4.29 seconds) suminf.    1.96721 (20) obj. 447.339 iterations 470
Cbc0038I Pass  42: (4.30 seconds) suminf.    1.96721 (20) obj. 447.339 iterations 66
Cbc0038I Pass  43: (4.36 seconds) suminf.    3.29694 (26) obj. 447.339 iterations 377
Cbc0038I Pass  44: (4.37 seconds) suminf.    3.67797 (25) obj. 447.339 iterations 54
Cbc0038I Pass  45: (4.39 seconds) suminf.    3.38223 (19) obj. 447.339 iterations 116
Cbc0038I Pass  46: (4.40 seconds) suminf.    3.06946 (18) obj. 447.339 iterations 100
Cbc0038I Pass  47: (4.41 seconds) suminf.    3.06946 (18) obj. 447.339 iterations 25
Cbc0038I Pass  48: (4.50 seconds) suminf.    3.03836 (59) obj. 447.339 iterations 531
Cbc0038I Pass  49: (4.50 seconds) suminf.    3.01743 (60) obj. 447.339 iterations 1
Cbc0038I Pass  50: (4.54 seconds) suminf.    9.90714 (87) obj. 447.339 iterations 276
Cbc0038I Pass  51: (4.56 seconds) suminf.    9.51821 (83) obj. 447.339 iterations 106
Cbc0038I Pass  52: (4.67 seconds) suminf.    5.83144 (45) obj. 447.339 iterations 708
Cbc0038I Pass  53: (4.68 seconds) suminf.    5.47269 (33) obj. 447.339 iterations 100
Cbc0038I Pass  54: (4.71 seconds) suminf.    6.82652 (41) obj. 447.339 iterations 183
Cbc0038I Pass  55: (4.72 seconds) suminf.    5.71108 (47) obj. 447.339 iterations 80
Cbc0038I Pass  56: (4.74 seconds) suminf.    5.60359 (43) obj. 447.339 iterations 93
Cbc0038I Pass  57: (4.78 seconds) suminf.   10.05781 (67) obj. 447.339 iterations 270
Cbc0038I Pass  58: (4.80 seconds) suminf.   10.01502 (48) obj. 447.339 iterations 130
Cbc0038I Pass  59: (4.81 seconds) suminf.    9.60881 (47) obj. 447.339 iterations 37
Cbc0038I Pass  60: (4.84 seconds) suminf.    6.06027 (47) obj. 447.339 iterations 203
Cbc0038I Pass  61: (4.85 seconds) suminf.    6.04373 (44) obj. 447.339 iterations 36
Cbc0038I Pass  62: (4.89 seconds) suminf.    8.37532 (52) obj. 447.339 iterations 251
Cbc0038I Pass  63: (4.91 seconds) suminf.    8.14951 (48) obj. 447.339 iterations 117
Cbc0038I Pass  64: (4.94 seconds) suminf.    3.67391 (40) obj. 447.339 iterations 181
Cbc0038I Pass  65: (4.95 seconds) suminf.    3.66346 (31) obj. 447.339 iterations 38
Cbc0038I Pass  66: (5.00 seconds) suminf.   10.61460 (61) obj. 447.339 iterations 330
Cbc0038I Pass  67: (5.02 seconds) suminf.    9.90240 (44) obj. 447.339 iterations 147
Cbc0038I Pass  68: (5.05 seconds) suminf.    5.34670 (35) obj. 447.339 iterations 171
Cbc0038I Pass  69: (5.06 seconds) suminf.    5.32661 (55) obj. 447.339 iterations 58
Cbc0038I Pass  70: (5.08 seconds) suminf.    8.87185 (75) obj. 447.339 iterations 141
Cbc0038I Pass  71: (5.09 seconds) suminf.    8.59292 (74) obj. 447.339 iterations 27
Cbc0038I Pass  72: (5.10 seconds) suminf.    9.00731 (70) obj. 447.339 iterations 36
Cbc0038I Pass  73: (5.11 seconds) suminf.    5.46704 (64) obj. 447.339 iterations 68
Cbc0038I Pass  74: (5.12 seconds) suminf.    5.85980 (60) obj. 447.339 iterations 75
Cbc0038I Pass  75: (5.19 seconds) suminf.    3.71857 (56) obj. 447.339 iterations 384
Cbc0038I Pass  76: (5.20 seconds) suminf.    3.73653 (56) obj. 447.339 iterations 39
Cbc0038I Pass  77: (5.25 seconds) suminf.   10.05512 (92) obj. 447.339 iterations 262
Cbc0038I Pass  78: (5.26 seconds) suminf.    9.80810 (73) obj. 447.339 iterations 106
Cbc0038I Pass  79: (5.32 seconds) suminf.    4.78421 (55) obj. 447.339 iterations 375
Cbc0038I Pass  80: (5.33 seconds) suminf.    4.77550 (39) obj. 447.339 iterations 21
Cbc0038I Pass  81: (5.35 seconds) suminf.    6.05246 (45) obj. 447.339 iterations 141
Cbc0038I Pass  82: (5.37 seconds) suminf.    5.36606 (30) obj. 447.339 iterations 120
Cbc0038I Pass  83: (5.50 seconds) suminf.    8.41183 (60) obj. 447.339 iterations 813
Cbc0038I Pass  84: (5.52 seconds) suminf.    7.92176 (39) obj. 447.339 iterations 168
Cbc0038I Pass  85: (5.56 seconds) suminf.    6.90575 (36) obj. 447.339 iterations 235
Cbc0038I Pass  86: (5.59 seconds) suminf.    6.11143 (67) obj. 447.339 iterations 207
Cbc0038I Pass  87: (5.65 seconds) suminf.   12.64076 (67) obj. 447.339 iterations 405
Cbc0038I Pass  88: (5.67 seconds) suminf.   10.90534 (96) obj. 447.339 iterations 136
Cbc0038I Pass  89: (5.68 seconds) suminf.   10.81207 (104) obj. 447.339 iterations 19
Cbc0038I Pass  90: (5.74 seconds) suminf.    3.71233 (54) obj. 447.339 iterations 405
Cbc0038I Pass  91: (5.76 seconds) suminf.    3.68865 (33) obj. 447.339 iterations 83
Cbc0038I Pass  92: (5.82 seconds) suminf.    8.97799 (30) obj. 447.339 iterations 391
Cbc0038I Pass  93: (5.84 seconds) suminf.    8.22006 (32) obj. 447.339 iterations 106
Cbc0038I Pass  94: (5.85 seconds) suminf.    8.20407 (31) obj. 447.339 iterations 37
Cbc0038I Pass  95: (5.94 seconds) suminf.    4.46500 (66) obj. 447.339 iterations 580
Cbc0038I Pass  96: (5.95 seconds) suminf.    4.28551 (65) obj. 447.339 iterations 42
Cbc0038I Pass  97: (5.98 seconds) suminf.    4.67021 (41) obj. 447.339 iterations 143
Cbc0038I Pass  98: (6.05 seconds) suminf.    6.72765 (37) obj. 447.339 iterations 530
Cbc0038I Pass  99: (6.07 seconds) suminf.    6.42380 (52) obj. 447.339 iterations 95
Cbc0038I Pass 100: (6.10 seconds) suminf.    4.84275 (52) obj. 447.339 iterations 251
Cbc0038I Pass 101: (6.11 seconds) suminf.    4.84275 (52) obj. 447.339 iterations 35
Cbc0038I Pass 102: (6.13 seconds) suminf.    5.49892 (31) obj. 447.339 iterations 120
Cbc0038I Pass 103: (6.15 seconds) suminf.    4.18355 (33) obj. 447.339 iterations 60
Cbc0038I Pass 104: (6.16 seconds) suminf.    3.25529 (32) obj. 447.339 iterations 28
Cbc0038I Pass 105: (6.22 seconds) suminf.    6.20786 (28) obj. 447.339 iterations 383
Cbc0038I Pass 106: (6.23 seconds) suminf.    5.21784 (29) obj. 447.339 iterations 50
Cbc0038I Pass 107: (6.29 seconds) suminf.    8.60878 (62) obj. 447.339 iterations 373
Cbc0038I Pass 108: (6.30 seconds) suminf.    8.41544 (63) obj. 447.339 iterations 54
Cbc0038I Pass 109: (6.33 seconds) suminf.    7.22220 (52) obj. 447.339 iterations 175
Cbc0038I Pass 110: (6.34 seconds) suminf.    6.61296 (56) obj. 447.339 iterations 83
Cbc0038I Pass 111: (6.37 seconds) suminf.   13.59582 (59) obj. 447.339 iterations 210
Cbc0038I Pass 112: (6.40 seconds) suminf.    6.19189 (52) obj. 447.339 iterations 128
Cbc0038I Pass 113: (6.41 seconds) suminf.    7.64615 (43) obj. 447.339 iterations 40
Cbc0038I Pass 114: (6.43 seconds) suminf.    5.86193 (43) obj. 447.339 iterations 142
Cbc0038I Pass 115: (6.47 seconds) suminf.    5.45617 (49) obj. 447.339 iterations 341
Cbc0038I Pass 116: (6.49 seconds) suminf.    3.61086 (44) obj. 447.339 iterations 122
Cbc0038I Pass 117: (6.53 seconds) suminf.    7.87419 (42) obj. 447.339 iterations 307
Cbc0038I Pass 118: (6.55 seconds) suminf.    6.07731 (45) obj. 447.339 iterations 96
Cbc0038I Pass 119: (6.56 seconds) suminf.    6.03678 (44) obj. 447.339 iterations 42
Cbc0038I Pass 120: (6.60 seconds) suminf.    3.68364 (51) obj. 447.339 iterations 259
Cbc0038I Pass 121: (6.61 seconds) suminf.    3.67427 (45) obj. 447.339 iterations 58
Cbc0038I Pass 122: (6.77 seconds) suminf.   53.03736 (326) obj. 447.339 iterations 1066
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 574 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 3001 rows 913 columns - 80 fixed gives 2390, 687 - still too large
Cbc0038I Mini branch and bound did not improve solution (7.27 seconds)
Cbc0038I After 7.27 seconds - Feasibility pump exiting with objective of 458 - took 4.75 seconds
Cbc0012I Integer solution of 458 found by feasibility pump after 0 iterations and 0 nodes (7.27 seconds)
Cbc0031I 11 added rows had average density of 17.727273
Cbc0013I At root node, 11 cuts changed objective from 360.39338 to 360.70872 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 40.2 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 23 row cuts average 24.8 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 458 best solution, best possible 361 (8.04 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1780 rows 497 columns
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1449 rows 409 columns
Cbc0010I After 100 nodes, 6 on tree, 458 best solution, best possible 377 (85.29 seconds)
Cbc0010I After 200 nodes, 1 on tree, 458 best solution, best possible 388 (157.39 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1208 rows 334 columns
Cbc0010I After 300 nodes, 7 on tree, 458 best solution, best possible 395 (260.72 seconds)
Cbc0010I After 400 nodes, 22 on tree, 458 best solution, best possible 395 (312.86 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1680 rows 475 columns
Cbc0010I After 500 nodes, 28 on tree, 458 best solution, best possible 395 (380.75 seconds)
Cbc0010I After 600 nodes, 34 on tree, 458 best solution, best possible 395 (442.15 seconds)
Cbc0010I After 700 nodes, 31 on tree, 458 best solution, best possible 395 (516.02 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1682 rows 484 columns
Cbc0010I After 800 nodes, 26 on tree, 458 best solution, best possible 395 (564.61 seconds)
Cbc0010I After 900 nodes, 29 on tree, 458 best solution, best possible 395 (621.43 seconds)
Cbc0010I After 1000 nodes, 28 on tree, 458 best solution, best possible 395 (682.70 seconds)
Cbc0010I After 1100 nodes, 7 on tree, 458 best solution, best possible 395 (733.57 seconds)
Cbc0010I After 1200 nodes, 8 on tree, 458 best solution, best possible 396 (808.60 seconds)
Cbc0010I After 1300 nodes, 13 on tree, 458 best solution, best possible 396 (864.84 seconds)
Cbc0010I After 1400 nodes, 8 on tree, 458 best solution, best possible 396 (927.79 seconds)
Cbc0010I After 1500 nodes, 4 on tree, 458 best solution, best possible 396 (984.94 seconds)
Cbc0010I After 1600 nodes, 17 on tree, 458 best solution, best possible 397 (1045.23 seconds)
Cbc0010I After 1700 nodes, 8 on tree, 458 best solution, best possible 397 (1110.20 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1273 rows 362 columns
Cbc0010I After 1800 nodes, 9 on tree, 458 best solution, best possible 397 (1160.57 seconds)
Cbc0010I After 1900 nodes, 12 on tree, 458 best solution, best possible 397 (1208.97 seconds)
Cbc0010I After 2000 nodes, 7 on tree, 458 best solution, best possible 397 (1262.27 seconds)
Cbc0010I After 2100 nodes, 4 on tree, 458 best solution, best possible 397 (1340.66 seconds)
Cbc0010I After 2200 nodes, 10 on tree, 458 best solution, best possible 398 (1400.81 seconds)
Cbc0010I After 2300 nodes, 20 on tree, 458 best solution, best possible 398 (1474.28 seconds)
Cbc0010I After 2400 nodes, 21 on tree, 458 best solution, best possible 398 (1515.21 seconds)
Cbc0010I After 2500 nodes, 26 on tree, 458 best solution, best possible 398 (1554.53 seconds)
Cbc0010I After 2600 nodes, 23 on tree, 458 best solution, best possible 398 (1596.05 seconds)
Cbc0010I After 2700 nodes, 19 on tree, 458 best solution, best possible 398 (1636.14 seconds)
Cbc0010I After 2800 nodes, 18 on tree, 458 best solution, best possible 398 (1672.14 seconds)
Cbc0010I After 2900 nodes, 14 on tree, 458 best solution, best possible 398 (1742.00 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1265 rows 358 columns
Cbc0010I After 3000 nodes, 15 on tree, 458 best solution, best possible 398 (1777.61 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 458 (best possible 398), took 4410385 iterations and 3047 nodes (1800.49 seconds)
Cbc0032I Strong branching done 23342 times (1849222 iterations), fathomed 121 nodes and fixed 674 variables
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost
Cuts at root node changed objective from 360.393 to 361
Probing was tried 540 times and created 44554 cuts of which 0 were active after adding rounds of cuts (3.279 seconds)
Gomory was tried 418 times and created 438 cuts of which 0 were active after adding rounds of cuts (2.729 seconds)
Knapsack was tried 418 times and created 2558 cuts of which 0 were active after adding rounds of cuts (0.684 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 3 times and created 23 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
ImplicationCuts was tried 40 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

Objective value:                458.00000000
Lower bound:                    398.000
Gap:                            0.15
Enumerated nodes:               3047
Total iterations:               4410385
Time (CPU seconds):             1800.74
Time (Wallclock seconds):       1801.30

Total time (CPU seconds):       1800.77   (Wallclock seconds):       1801.33

