Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_50_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_3_50_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 53377.3 - 7.67 seconds
Cgl0002I 612 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 680 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 6914 rows, 2008 columns (2008 integer (1957 of which binary)) and 23300 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2008 objects (2008 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1286 integers unsatisfied sum - 335.695
Cbc0038I Pass   1: (30.22 seconds) suminf.  125.45826 (1017) obj. 76245.1 iterations 5291
Cbc0038I Pass   2: (30.81 seconds) suminf.  102.04600 (879) obj. 82612.4 iterations 1634
Cbc0038I Pass   3: (31.04 seconds) suminf.   98.15072 (882) obj. 82758.9 iterations 550
Cbc0038I Pass   4: (31.11 seconds) suminf.   97.56946 (885) obj. 82755.8 iterations 136
Cbc0038I Pass   5: (31.36 seconds) suminf.   93.00751 (838) obj. 82486.1 iterations 595
Cbc0038I Pass   6: (31.49 seconds) suminf.   91.12413 (828) obj. 82569.6 iterations 230
Cbc0038I Pass   7: (31.58 seconds) suminf.   91.23565 (827) obj. 82447.4 iterations 164
Cbc0038I Pass   8: (31.59 seconds) suminf.   90.98166 (822) obj. 82446 iterations 7
Cbc0038I Pass   9: (31.77 seconds) suminf.   94.51543 (832) obj. 82327.9 iterations 411
Cbc0038I Pass  10: (31.91 seconds) suminf.   93.33383 (838) obj. 82366.7 iterations 287
Cbc0038I Pass  11: (31.94 seconds) suminf.   93.08270 (822) obj. 82366.7 iterations 39
Cbc0038I Pass  12: (32.16 seconds) suminf.   92.63925 (823) obj. 82158.2 iterations 535
Cbc0038I Pass  13: (32.22 seconds) suminf.   92.99782 (822) obj. 82090.1 iterations 109
Cbc0038I Pass  14: (32.24 seconds) suminf.   93.38823 (826) obj. 82070.3 iterations 30
Cbc0038I Pass  15: (32.43 seconds) suminf.   89.06783 (836) obj. 82264.7 iterations 419
Cbc0038I Pass  16: (32.62 seconds) suminf.   87.56142 (829) obj. 81877.9 iterations 427
Cbc0038I Pass  17: (32.77 seconds) suminf.   84.32381 (831) obj. 81800.7 iterations 290
Cbc0038I Pass  18: (33.15 seconds) suminf.   74.54424 (825) obj. 79118.3 iterations 998
Cbc0038I Pass  19: (33.28 seconds) suminf.   72.45969 (808) obj. 79252.7 iterations 255
Cbc0038I Pass  20: (33.30 seconds) suminf.   72.64959 (808) obj. 79261.2 iterations 16
Cbc0038I Pass  21: (33.58 seconds) suminf.   67.84116 (839) obj. 79456.8 iterations 737
Cbc0038I Pass  22: (33.73 seconds) suminf.   65.33205 (838) obj. 79581.9 iterations 298
Cbc0038I Pass  23: (33.88 seconds) suminf.   63.49607 (796) obj. 79594.8 iterations 358
Cbc0038I Pass  24: (33.94 seconds) suminf.   64.72705 (781) obj. 79610.4 iterations 101
Cbc0038I Pass  25: (33.98 seconds) suminf.   63.66500 (793) obj. 79593.9 iterations 81
Cbc0038I Pass  26: (34.02 seconds) suminf.   64.80804 (782) obj. 79610.6 iterations 85
Cbc0038I Pass  27: (34.21 seconds) suminf.   64.17659 (779) obj. 79626.2 iterations 433
Cbc0038I Pass  28: (34.36 seconds) suminf.   64.46584 (781) obj. 79654.7 iterations 357
Cbc0038I Pass  29: (34.37 seconds) suminf.   64.54551 (782) obj. 79683.2 iterations 15
Cbc0038I Pass  30: (34.60 seconds) suminf.   64.23974 (774) obj. 79633.1 iterations 600
Cbc0038I Pass  31: (34.71 seconds) suminf.   63.39842 (768) obj. 79645 iterations 210
Cbc0038I Pass  32: (34.74 seconds) suminf.   63.70649 (770) obj. 79653.3 iterations 45
Cbc0038I Pass  33: (34.88 seconds) suminf.   65.26923 (758) obj. 79651.1 iterations 289
Cbc0038I Pass  34: (35.02 seconds) suminf.   64.47602 (762) obj. 79638.5 iterations 311
Cbc0038I Pass  35: (35.07 seconds) suminf.   64.37737 (763) obj. 79627.8 iterations 93
Cbc0038I Pass  36: (35.61 seconds) suminf.   82.57087 (822) obj. 80245.1 iterations 1500
Cbc0038I Pass  37: (36.25 seconds) suminf.   56.71838 (714) obj. 79838.6 iterations 1725
Cbc0038I Pass  38: (36.41 seconds) suminf.   53.55955 (713) obj. 79970.3 iterations 426
Cbc0038I Pass  39: (36.42 seconds) suminf.   53.55955 (713) obj. 79970.3 iterations 4
Cbc0038I Pass  40: (36.64 seconds) suminf.   55.11050 (723) obj. 79857.9 iterations 632
Cbc0038I Pass  41: (36.68 seconds) suminf.   53.88340 (710) obj. 79971 iterations 93
Cbc0038I Pass  42: (36.95 seconds) suminf.   48.99099 (681) obj. 80266 iterations 804
Cbc0038I Pass  43: (37.12 seconds) suminf.   48.01297 (676) obj. 80295.8 iterations 483
Cbc0038I Pass  44: (37.30 seconds) suminf.   45.58485 (672) obj. 82589.3 iterations 464
Cbc0038I Pass  45: (37.77 seconds) suminf.   44.54236 (746) obj. 88381.9 iterations 1379
Cbc0038I Pass  46: (37.99 seconds) suminf.   43.31096 (681) obj. 88504.7 iterations 607
Cbc0038I Pass  47: (38.09 seconds) suminf.   42.90551 (692) obj. 88357.7 iterations 205
Cbc0038I Pass  48: (38.60 seconds) suminf.   45.42934 (667) obj. 87596.2 iterations 1607
Cbc0038I Pass  49: (38.73 seconds) suminf.   41.91054 (651) obj. 87991.9 iterations 295
Cbc0038I Pass  50: (38.85 seconds) suminf.   39.92725 (643) obj. 88170 iterations 257
Cbc0038I Pass  51: (39.06 seconds) suminf.   39.53080 (625) obj. 88374.1 iterations 573
Cbc0038I Pass  52: (39.22 seconds) suminf.   38.48053 (645) obj. 88447.6 iterations 388
Cbc0038I Pass  53: (39.54 seconds) suminf.   40.33406 (615) obj. 89187.3 iterations 838
Cbc0038I Pass  54: (39.74 seconds) suminf.   37.99415 (628) obj. 89273 iterations 552
Cbc0038I Pass  55: (40.03 seconds) suminf.   40.26733 (626) obj. 89051.8 iterations 881
Cbc0038I Pass  56: (40.17 seconds) suminf.   38.13530 (581) obj. 89096.6 iterations 300
Cbc0038I Pass  57: (40.44 seconds) suminf.   38.78517 (528) obj. 90797 iterations 766
Cbc0038I Pass  58: (40.55 seconds) suminf.   37.66169 (552) obj. 90746.1 iterations 240
Cbc0038I Pass  59: (40.72 seconds) suminf.   37.62806 (590) obj. 90807.5 iterations 461
Cbc0038I Pass  60: (40.73 seconds) suminf.   37.64986 (592) obj. 90807.5 iterations 6
Cbc0038I Pass  61: (40.95 seconds) suminf.   39.71887 (531) obj. 95267.3 iterations 592
Cbc0038I Pass  62: (40.98 seconds) suminf.   39.56578 (543) obj. 95266.5 iterations 70
Cbc0038I Pass  63: (41.13 seconds) suminf.   38.95984 (549) obj. 95306 iterations 385
Cbc0038I Pass  64: (41.19 seconds) suminf.   37.56313 (549) obj. 95284.3 iterations 131
Cbc0038I Pass  65: (41.40 seconds) suminf.   36.77475 (512) obj. 95312.5 iterations 567
Cbc0038I Pass  66: (41.48 seconds) suminf.   36.13033 (507) obj. 95303.8 iterations 190
Cbc0038I Pass  67: (41.71 seconds) suminf.   35.20943 (498) obj. 99328 iterations 623
Cbc0038I Pass  68: (41.83 seconds) suminf.   33.52586 (481) obj. 99328 iterations 257
Cbc0038I Pass  69: (42.00 seconds) suminf.   33.27489 (478) obj. 99328 iterations 492
Cbc0038I Pass  70: (42.08 seconds) suminf.   33.16421 (497) obj. 99329.5 iterations 185
Cbc0038I Pass  71: (42.24 seconds) suminf.   32.49126 (505) obj. 99328 iterations 417
Cbc0038I Pass  72: (42.37 seconds) suminf.   32.57013 (474) obj. 99328 iterations 296
Cbc0038I Pass  73: (42.60 seconds) suminf.   33.60864 (502) obj. 99328 iterations 653
Cbc0038I Pass  74: (42.65 seconds) suminf.   32.21617 (462) obj. 99328 iterations 115
Cbc0038I Pass  75: (42.89 seconds) suminf.   31.24699 (448) obj. 99328 iterations 693
Cbc0038I Pass  76: (42.97 seconds) suminf.   30.23777 (443) obj. 99328 iterations 187
Cbc0038I Pass  77: (43.09 seconds) suminf.   29.97807 (436) obj. 99328 iterations 260
Cbc0038I Pass  78: (43.13 seconds) suminf.   30.50876 (451) obj. 99328 iterations 114
Cbc0038I Pass  79: (43.25 seconds) suminf.   28.53776 (451) obj. 99328 iterations 258
Cbc0038I Pass  80: (43.28 seconds) suminf.   28.18243 (439) obj. 99328 iterations 35
Cbc0038I Pass  81: (43.40 seconds) suminf.   28.62794 (429) obj. 99328 iterations 272
Cbc0038I Pass  82: (43.46 seconds) suminf.   26.80763 (409) obj. 99328 iterations 136
Cbc0038I Pass  83: (43.58 seconds) suminf.   26.16560 (389) obj. 99328 iterations 240
Cbc0038I Pass  84: (43.60 seconds) suminf.   25.96744 (388) obj. 99328 iterations 40
Cbc0038I Pass  85: (43.71 seconds) suminf.   25.69463 (382) obj. 99328 iterations 269
Cbc0038I Pass  86: (43.77 seconds) suminf.   24.89914 (399) obj. 99328 iterations 154
Cbc0038I Pass  87: (43.86 seconds) suminf.   22.39127 (384) obj. 99328 iterations 195
Cbc0038I Pass  88: (43.88 seconds) suminf.   22.26816 (387) obj. 99328 iterations 23
Cbc0038I Pass  89: (44.05 seconds) suminf.   20.39860 (315) obj. 99328 iterations 485
Cbc0038I Pass  90: (44.11 seconds) suminf.   18.56506 (308) obj. 99328 iterations 158
Cbc0038I Pass  91: (44.24 seconds) suminf.   17.78547 (308) obj. 99328 iterations 322
Cbc0038I Pass  92: (44.28 seconds) suminf.   17.31058 (311) obj. 99328 iterations 104
Cbc0038I Pass  93: (44.40 seconds) suminf.   15.66128 (288) obj. 99328 iterations 337
Cbc0038I Pass  94: (44.43 seconds) suminf.   15.61830 (289) obj. 99328 iterations 72
Cbc0038I Pass  95: (44.57 seconds) suminf.   14.02423 (249) obj. 99328 iterations 397
Cbc0038I Pass  96: (44.63 seconds) suminf.   12.33415 (241) obj. 99328 iterations 171
Cbc0038I Pass  97: (44.75 seconds) suminf.   10.25074 (191) obj. 99328 iterations 303
Cbc0038I Pass  98: (44.77 seconds) suminf.   10.16699 (188) obj. 99328 iterations 51
Cbc0038I Pass  99: (44.89 seconds) suminf.    7.18626 (162) obj. 99328 iterations 477
Cbc0038I Pass 100: (45.33 seconds) suminf.   81.74054 (461) obj. 98840.6 iterations 1648
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6914 rows 2008 columns, reduced to 5824 rows 1657 columns - too large
Cbc0038I Mini branch and bound did not improve solution (56.85 seconds)
Cbc0038I After 56.85 seconds - Feasibility pump exiting - took 29.00 seconds
Cbc0031I 25 added rows had average density of 79.56
Cbc0013I At root node, 25 cuts changed objective from 53625.709 to 53829.009 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 100.6 elements, 0 column cuts (0 active)  in 1.641 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 47 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.730 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53829.009 (64.42 seconds)
Cbc0010I After 100 nodes, 4 on tree, 1e+50 best solution, best possible 53835 (251.46 seconds)
Cbc0010I After 200 nodes, 4 on tree, 1e+50 best solution, best possible 53835 (447.66 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1e+50 best solution, best possible 53836 (660.52 seconds)
Cbc0010I After 400 nodes, 2 on tree, 1e+50 best solution, best possible 53836 (845.34 seconds)
Cbc0010I After 500 nodes, 3 on tree, 1e+50 best solution, best possible 53836 (1056.01 seconds)
Cbc0010I After 600 nodes, 3 on tree, 1e+50 best solution, best possible 53836 (1258.83 seconds)
Cbc0010I After 700 nodes, 16 on tree, 1e+50 best solution, best possible 53836 (1454.32 seconds)
Cbc0010I After 800 nodes, 14 on tree, 1e+50 best solution, best possible 53836 (1640.77 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53836), took 1828376 iterations and 884 nodes (1780.89 seconds)
Cbc0032I Strong branching done 7062 times (662519 iterations), fathomed 24 nodes and fixed 37 variables
Cbc0035I Maximum depth 118, 0 variables fixed on reduced cost
Cuts at root node changed objective from 53625.7 to 53829
Probing was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.155 seconds)
Gomory was tried 127 times and created 88 cuts of which 0 were active after adding rounds of cuts (4.451 seconds)
Knapsack was tried 127 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.298 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.730 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.143 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53836.000
Enumerated nodes:               884
Total iterations:               1828376
Time (CPU seconds):             1780.89
Time (Wallclock seconds):       1780.99

Total time (CPU seconds):       1780.92   (Wallclock seconds):       1781.03

