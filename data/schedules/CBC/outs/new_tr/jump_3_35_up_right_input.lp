Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_35_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_3_35_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32277.3 - 1.07 seconds
Cgl0002I 266 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 513 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 102 strengthened rows, 0 substitutions
Cgl0004I processed model has 3341 rows, 1060 columns (1060 integer (1024 of which binary)) and 11286 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1060 objects (1060 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 635 integers unsatisfied sum - 147.163
Cbc0038I Pass   1: (2.49 seconds) suminf.   63.61143 (550) obj. 43286.5 iterations 1603
Cbc0038I Pass   2: (2.59 seconds) suminf.   55.74414 (567) obj. 43599 iterations 538
Cbc0038I Pass   3: (2.66 seconds) suminf.   53.92614 (593) obj. 43904.7 iterations 320
Cbc0038I Pass   4: (2.69 seconds) suminf.   53.28210 (581) obj. 43910.2 iterations 145
Cbc0038I Pass   5: (2.78 seconds) suminf.   55.88237 (515) obj. 43021.6 iterations 427
Cbc0038I Pass   6: (2.79 seconds) suminf.   55.30246 (512) obj. 42900.2 iterations 66
Cbc0038I Pass   7: (2.86 seconds) suminf.   49.75914 (503) obj. 44500.9 iterations 348
Cbc0038I Pass   8: (2.87 seconds) suminf.   49.98280 (510) obj. 44523.8 iterations 11
Cbc0038I Pass   9: (2.95 seconds) suminf.   45.64359 (492) obj. 43103.3 iterations 473
Cbc0038I Pass  10: (2.97 seconds) suminf.   44.90335 (506) obj. 43042.2 iterations 52
Cbc0038I Pass  11: (3.01 seconds) suminf.   41.91913 (499) obj. 42983.5 iterations 211
Cbc0038I Pass  12: (3.07 seconds) suminf.   41.34199 (501) obj. 42797.2 iterations 264
Cbc0038I Pass  13: (3.09 seconds) suminf.   41.78495 (505) obj. 42768.5 iterations 57
Cbc0038I Pass  14: (3.17 seconds) suminf.   41.69705 (491) obj. 46856.7 iterations 461
Cbc0038I Pass  15: (3.21 seconds) suminf.   39.43165 (500) obj. 46759.8 iterations 179
Cbc0038I Pass  16: (3.31 seconds) suminf.   38.99326 (428) obj. 46407.2 iterations 570
Cbc0038I Pass  17: (3.36 seconds) suminf.   33.11685 (469) obj. 46597.8 iterations 243
Cbc0038I Pass  18: (3.39 seconds) suminf.   34.30723 (472) obj. 46604.4 iterations 94
Cbc0038I Pass  19: (3.44 seconds) suminf.   34.22394 (474) obj. 46557.4 iterations 242
Cbc0038I Pass  20: (3.49 seconds) suminf.   32.52958 (457) obj. 46472.8 iterations 270
Cbc0038I Pass  21: (3.58 seconds) suminf.   39.44306 (402) obj. 53941.7 iterations 540
Cbc0038I Pass  22: (3.62 seconds) suminf.   34.46254 (400) obj. 56240.6 iterations 192
Cbc0038I Pass  23: (3.67 seconds) suminf.   33.46958 (400) obj. 58867 iterations 181
Cbc0038I Pass  24: (3.75 seconds) suminf.   35.18510 (411) obj. 61426 iterations 510
Cbc0038I Pass  25: (3.79 seconds) suminf.   34.12018 (412) obj. 61913.1 iterations 125
Cbc0038I Pass  26: (3.79 seconds) suminf.   33.46993 (409) obj. 61708.2 iterations 24
Cbc0038I Pass  27: (3.86 seconds) suminf.   36.57096 (409) obj. 58224.1 iterations 354
Cbc0038I Pass  28: (3.88 seconds) suminf.   35.91707 (386) obj. 59489.3 iterations 103
Cbc0038I Pass  29: (3.91 seconds) suminf.   33.42465 (394) obj. 60307.1 iterations 120
Cbc0038I Pass  30: (3.94 seconds) suminf.   32.81912 (402) obj. 60505.3 iterations 112
Cbc0038I Pass  31: (3.98 seconds) suminf.   33.22155 (404) obj. 59719.1 iterations 178
Cbc0038I Pass  32: (4.00 seconds) suminf.   31.65520 (410) obj. 58817.4 iterations 96
Cbc0038I Pass  33: (4.08 seconds) suminf.   37.93796 (335) obj. 67872.3 iterations 471
Cbc0038I Pass  34: (4.10 seconds) suminf.   36.33281 (341) obj. 70148.8 iterations 115
Cbc0038I Pass  35: (4.12 seconds) suminf.   35.24039 (340) obj. 70220.2 iterations 81
Cbc0038I Pass  36: (4.13 seconds) suminf.   34.69777 (341) obj. 70233.9 iterations 5
Cbc0038I Pass  37: (4.20 seconds) suminf.   32.44666 (318) obj. 65214.5 iterations 471
Cbc0038I Pass  38: (4.23 seconds) suminf.   32.48684 (315) obj. 65174.3 iterations 143
Cbc0038I Pass  39: (4.27 seconds) suminf.   35.15031 (321) obj. 64997 iterations 214
Cbc0038I Pass  40: (4.29 seconds) suminf.   34.30142 (319) obj. 65045.4 iterations 52
Cbc0038I Pass  41: (4.34 seconds) suminf.   36.43487 (324) obj. 64966.9 iterations 286
Cbc0038I Pass  42: (4.37 seconds) suminf.   34.87285 (334) obj. 64986.2 iterations 151
Cbc0038I Pass  43: (4.44 seconds) suminf.   34.53465 (304) obj. 65194.3 iterations 404
Cbc0038I Pass  44: (4.46 seconds) suminf.   33.12715 (292) obj. 65643.1 iterations 136
Cbc0038I Pass  45: (4.53 seconds) suminf.   34.48188 (283) obj. 64481.4 iterations 422
Cbc0038I Pass  46: (4.55 seconds) suminf.   32.64218 (272) obj. 64675.3 iterations 115
Cbc0038I Pass  47: (4.57 seconds) suminf.   32.38216 (266) obj. 65315.7 iterations 68
Cbc0038I Pass  48: (4.61 seconds) suminf.   32.94019 (253) obj. 69111.3 iterations 235
Cbc0038I Pass  49: (4.63 seconds) suminf.   30.84372 (253) obj. 70918 iterations 105
Cbc0038I Pass  50: (4.63 seconds) suminf.   31.15617 (252) obj. 70921.4 iterations 4
Cbc0038I Pass  51: (4.67 seconds) suminf.   30.21638 (237) obj. 68218.3 iterations 265
Cbc0038I Pass  52: (4.69 seconds) suminf.   28.77965 (239) obj. 68421.5 iterations 85
Cbc0038I Pass  53: (4.73 seconds) suminf.   29.47716 (222) obj. 72035.7 iterations 225
Cbc0038I Pass  54: (4.76 seconds) suminf.   30.19710 (245) obj. 68903 iterations 139
Cbc0038I Pass  55: (4.77 seconds) suminf.   29.67622 (239) obj. 69339.6 iterations 46
Cbc0038I Pass  56: (4.83 seconds) suminf.   29.82129 (245) obj. 61092.3 iterations 412
Cbc0038I Pass  57: (4.85 seconds) suminf.   28.82701 (246) obj. 61165 iterations 116
Cbc0038I Pass  58: (4.89 seconds) suminf.   29.02627 (223) obj. 61315.9 iterations 187
Cbc0038I Pass  59: (4.90 seconds) suminf.   27.56661 (224) obj. 61338.2 iterations 91
Cbc0038I Pass  60: (4.96 seconds) suminf.   28.90166 (226) obj. 58475.4 iterations 432
Cbc0038I Pass  61: (5.01 seconds) suminf.   25.02526 (240) obj. 55518.3 iterations 291
Cbc0038I Pass  62: (5.05 seconds) suminf.   24.85740 (216) obj. 55191.8 iterations 270
Cbc0038I Pass  63: (5.07 seconds) suminf.   22.67837 (214) obj. 55191.4 iterations 78
Cbc0038I Pass  64: (5.08 seconds) suminf.   22.60763 (218) obj. 55191.2 iterations 48
Cbc0038I Pass  65: (5.11 seconds) suminf.   19.40248 (169) obj. 56695.9 iterations 189
Cbc0038I Pass  66: (5.12 seconds) suminf.   19.82191 (169) obj. 56696.6 iterations 101
Cbc0038I Pass  67: (5.17 seconds) suminf.   14.26916 (139) obj. 56766.4 iterations 369
Cbc0038I Pass  68: (5.18 seconds) suminf.   13.68995 (138) obj. 56768.1 iterations 46
Cbc0038I Pass  69: (5.22 seconds) suminf.   12.72847 (148) obj. 56830.3 iterations 211
Cbc0038I Pass  70: (5.22 seconds) suminf.   12.14833 (145) obj. 56826.8 iterations 36
Cbc0038I Pass  71: (5.24 seconds) suminf.   10.93731 (156) obj. 56831 iterations 61
Cbc0038I Pass  72: (5.27 seconds) suminf.   13.04748 (118) obj. 51533.8 iterations 260
Cbc0038I Pass  73: (5.28 seconds) suminf.   10.26163 (123) obj. 51514.5 iterations 75
Cbc0038I Pass  74: (5.30 seconds) suminf.    9.27022 (123) obj. 51513.2 iterations 71
Cbc0038I Pass  75: (5.34 seconds) suminf.    8.55761 (120) obj. 50014.4 iterations 331
Cbc0038I Pass  76: (5.34 seconds) suminf.    8.55095 (112) obj. 50011.6 iterations 22
Cbc0038I Pass  77: (5.36 seconds) suminf.    6.70794 (113) obj. 51508.3 iterations 139
Cbc0038I Pass  78: (5.37 seconds) suminf.    6.48680 (114) obj. 51508.3 iterations 38
Cbc0038I Pass  79: (5.40 seconds) suminf.    8.34196 (121) obj. 46018.5 iterations 229
Cbc0038I Pass  80: (5.41 seconds) suminf.    7.85144 (114) obj. 46207.8 iterations 67
Cbc0038I Pass  81: (5.44 seconds) suminf.    9.97070 (110) obj. 51474 iterations 231
Cbc0038I Pass  82: (5.45 seconds) suminf.    8.47343 (108) obj. 51509.6 iterations 27
Cbc0038I Pass  83: (5.47 seconds) suminf.   10.10103 (112) obj. 51366.1 iterations 152
Cbc0038I Pass  84: (5.48 seconds) suminf.    9.52772 (112) obj. 51381.2 iterations 40
Cbc0038I Pass  85: (5.51 seconds) suminf.    8.70685 (100) obj. 45870.3 iterations 254
Cbc0038I Pass  86: (5.52 seconds) suminf.    7.89973 (101) obj. 46171.2 iterations 29
Cbc0038I Pass  87: (5.53 seconds) suminf.    7.54553 (103) obj. 46171.2 iterations 43
Cbc0038I Pass  88: (5.56 seconds) suminf.   10.88190 (101) obj. 51491.5 iterations 175
Cbc0038I Pass  89: (5.56 seconds) suminf.    8.04238 (97) obj. 51537.8 iterations 51
Cbc0038I Pass  90: (5.57 seconds) suminf.    8.03852 (99) obj. 51537.8 iterations 18
Cbc0038I Pass  91: (5.60 seconds) suminf.   13.66024 (109) obj. 50737.8 iterations 264
Cbc0038I Pass  92: (5.62 seconds) suminf.    8.19013 (107) obj. 49034.4 iterations 103
Cbc0038I Pass  93: (5.65 seconds) suminf.    5.98170 (60) obj. 51683.5 iterations 250
Cbc0038I Pass  94: (5.66 seconds) suminf.    4.21347 (59) obj. 51683.5 iterations 26
Cbc0038I Pass  95: (5.69 seconds) suminf.    8.34444 (59) obj. 50168.4 iterations 193
Cbc0038I Pass  96: (5.69 seconds) suminf.    6.88210 (40) obj. 50168.3 iterations 20
Cbc0038I Pass  97: (5.74 seconds) suminf.    5.15400 (49) obj. 58856.8 iterations 335
Cbc0038I Pass  98: (5.77 seconds) suminf.    3.69407 (41) obj. 58846.3 iterations 265
Cbc0038I Pass  99: (5.78 seconds) suminf.    2.94667 (39) obj. 58830.1 iterations 22
Cbc0038I Pass 100: (5.93 seconds) suminf.   57.29202 (313) obj. 70499.5 iterations 1208
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 124 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3341 rows 1060 columns, reduced to 2962 rows 907 columns - too large
Cbc0038I Mini branch and bound did not improve solution (6.05 seconds)
Cbc0038I After 6.05 seconds - Feasibility pump exiting - took 3.86 seconds
Cbc0031I 25 added rows had average density of 172.24
Cbc0013I At root node, 25 cuts changed objective from 32307.116 to 32355.58 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 78 row cuts average 544.7 elements, 0 column cuts (0 active)  in 0.295 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 44 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 32356 (7.86 seconds)
Cbc0010I After 100 nodes, 1 on tree, 1e+50 best solution, best possible 32392 (34.84 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 32443.853 (63.54 seconds)
Cbc0010I After 300 nodes, 19 on tree, 1e+50 best solution, best possible 32443.853 (89.22 seconds)
Cbc0010I After 400 nodes, 40 on tree, 1e+50 best solution, best possible 32443.853 (114.05 seconds)
Cbc0010I After 500 nodes, 53 on tree, 1e+50 best solution, best possible 32443.853 (140.70 seconds)
Cbc0010I After 600 nodes, 77 on tree, 1e+50 best solution, best possible 32443.853 (164.43 seconds)
Cbc0010I After 700 nodes, 90 on tree, 1e+50 best solution, best possible 32443.853 (193.71 seconds)
Cbc0010I After 800 nodes, 35 on tree, 1e+50 best solution, best possible 32443.853 (241.61 seconds)
Cbc0010I After 900 nodes, 15 on tree, 1e+50 best solution, best possible 32443.853 (274.64 seconds)
Cbc0010I After 1000 nodes, 29 on tree, 1e+50 best solution, best possible 32443.853 (308.65 seconds)
Cbc0010I After 1100 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (347.76 seconds)
Cbc0010I After 1200 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (388.13 seconds)
Cbc0010I After 1300 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (431.80 seconds)
Cbc0010I After 1400 nodes, 31 on tree, 1e+50 best solution, best possible 32555 (472.30 seconds)
Cbc0010I After 1500 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (510.95 seconds)
Cbc0010I After 1600 nodes, 30 on tree, 1e+50 best solution, best possible 32555 (553.67 seconds)
Cbc0010I After 1700 nodes, 30 on tree, 1e+50 best solution, best possible 32555 (595.97 seconds)
Cbc0010I After 1800 nodes, 30 on tree, 1e+50 best solution, best possible 32555 (634.63 seconds)
Cbc0010I After 1900 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (675.90 seconds)
Cbc0010I After 2000 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (716.23 seconds)
Cbc0010I After 2100 nodes, 31 on tree, 1e+50 best solution, best possible 32555 (755.74 seconds)
Cbc0010I After 2200 nodes, 29 on tree, 1e+50 best solution, best possible 32555 (803.73 seconds)
Cbc0010I After 2300 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (845.32 seconds)
Cbc0010I After 2400 nodes, 31 on tree, 1e+50 best solution, best possible 32555 (887.92 seconds)
Cbc0010I After 2500 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (932.84 seconds)
Cbc0010I After 2600 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (976.73 seconds)
Cbc0010I After 2700 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1019.92 seconds)
Cbc0010I After 2800 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1063.01 seconds)
Cbc0010I After 2900 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1102.76 seconds)
Cbc0010I After 3000 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1144.89 seconds)
Cbc0010I After 3100 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1187.34 seconds)
Cbc0010I After 3200 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1226.57 seconds)
Cbc0010I After 3300 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1265.72 seconds)
Cbc0010I After 3400 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1302.97 seconds)
Cbc0010I After 3500 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1342.04 seconds)
Cbc0010I After 3600 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1382.39 seconds)
Cbc0010I After 3700 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1421.73 seconds)
Cbc0010I After 3800 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1461.79 seconds)
Cbc0010I After 3900 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1499.24 seconds)
Cbc0010I After 4000 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1537.03 seconds)
Cbc0010I After 4100 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1570.84 seconds)
Cbc0010I After 4200 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1606.27 seconds)
Cbc0010I After 4300 nodes, 30 on tree, 1e+50 best solution, best possible 32555 (1643.68 seconds)
Cbc0010I After 4400 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1678.21 seconds)
Cbc0010I After 4500 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1714.73 seconds)
Cbc0010I After 4600 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1754.80 seconds)
Cbc0010I After 4700 nodes, 28 on tree, 1e+50 best solution, best possible 32555 (1793.44 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 32555), took 6157329 iterations and 4714 nodes (1799.23 seconds)
Cbc0032I Strong branching done 17528 times (1475784 iterations), fathomed 678 nodes and fixed 464 variables
Cbc0035I Maximum depth 1272, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32307.1 to 32356
Probing was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Gomory was tried 832 times and created 865 cuts of which 0 were active after adding rounds of cuts (4.999 seconds)
Knapsack was tried 832 times and created 6498 cuts of which 0 were active after adding rounds of cuts (1.129 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 7 times and created 44 cuts of which 0 were active after adding rounds of cuts (0.160 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
ImplicationCuts was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    32555.000
Enumerated nodes:               4714
Total iterations:               6157329
Time (CPU seconds):             1799.23
Time (Wallclock seconds):       1804.64

Total time (CPU seconds):       1799.24   (Wallclock seconds):       1804.66

