Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_15_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_3_15_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20480 - 0.01 seconds
Cgl0002I 58 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 121 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 508 rows, 182 columns (182 integer (166 of which binary)) and 1691 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 182 objects (182 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 90 integers unsatisfied sum - 30.7033
Cbc0038I Pass   1: suminf.    5.82540 (40) obj. 25784.2 iterations 160
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 25600 iterations 67
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 182 columns, reduced to 338 rows 101 columns - 13 fixed gives 232, 64 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 25087.1
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.56686 (39) obj. 25087 iterations 12
Cbc0038I Pass   4: suminf.    0.51749 (6) obj. 25087.1 iterations 69
Cbc0038I Pass   5: suminf.    0.72619 (6) obj. 25087.1 iterations 69
Cbc0038I Pass   6: suminf.   21.51803 (97) obj. 25087.1 iterations 155
Cbc0038I Pass   7: suminf.    5.11775 (26) obj. 25087.1 iterations 157
Cbc0038I Pass   8: suminf.    1.22707 (16) obj. 25087.1 iterations 40
Cbc0038I Pass   9: suminf.    0.72619 (6) obj. 25087.1 iterations 2
Cbc0038I Pass  10: suminf.    0.51749 (6) obj. 25087.1 iterations 34
Cbc0038I Pass  11: suminf.    5.88570 (35) obj. 25087.1 iterations 83
Cbc0038I Pass  12: suminf.    4.10588 (29) obj. 25087.1 iterations 44
Cbc0038I Pass  13: suminf.    3.59067 (27) obj. 25087.1 iterations 98
Cbc0038I Pass  14: suminf.    3.61129 (25) obj. 25087.1 iterations 3
Cbc0038I Pass  15: suminf.    2.00526 (27) obj. 25087.1 iterations 62
Cbc0038I Pass  16: suminf.    3.40361 (25) obj. 25087.1 iterations 124
Cbc0038I Pass  17: suminf.    3.48013 (28) obj. 25087.1 iterations 8
Cbc0038I Pass  18: suminf.    2.95472 (27) obj. 25087.1 iterations 60
Cbc0038I Pass  19: suminf.    2.15781 (27) obj. 25087.1 iterations 17
Cbc0038I Pass  20: suminf.    0.10009 (1) obj. 25087.1 iterations 41
Cbc0038I Solution found of 25087.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 509 rows 182 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 182 columns, reduced to 434 rows 145 columns - 37 fixed gives 240, 72 - ok now
Cbc0038I Full problem 508 rows 182 columns, reduced to 49 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of 23756
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  21: suminf.    7.53464 (47) obj. 23756 iterations 27
Cbc0038I Pass  22: suminf.    3.13477 (31) obj. 23756 iterations 25
Cbc0038I Pass  23: suminf.    1.50073 (6) obj. 23756 iterations 54
Cbc0038I Pass  24: suminf.    2.25106 (6) obj. 23756 iterations 118
Cbc0038I Pass  25: suminf.   13.54841 (66) obj. 23756 iterations 99
Cbc0038I Pass  26: suminf.    3.80684 (24) obj. 23756 iterations 132
Cbc0038I Pass  27: suminf.    1.44149 (12) obj. 23756 iterations 41
Cbc0038I Pass  28: suminf.    0.96102 (11) obj. 23756 iterations 11
Cbc0038I Pass  29: suminf.    1.68510 (14) obj. 23756 iterations 85
Cbc0038I Pass  30: suminf.    2.90047 (13) obj. 23756 iterations 43
Cbc0038I Pass  31: suminf.    1.68510 (14) obj. 23756 iterations 27
Cbc0038I Pass  32: suminf.   11.66389 (54) obj. 23756 iterations 148
Cbc0038I Pass  33: suminf.    8.09612 (45) obj. 23756 iterations 81
Cbc0038I Pass  34: suminf.    6.64191 (45) obj. 23756 iterations 16
Cbc0038I Pass  35: suminf.    6.51236 (47) obj. 23756 iterations 14
Cbc0038I Pass  36: suminf.    5.29549 (32) obj. 23756 iterations 188
Cbc0038I Pass  37: suminf.    2.38191 (23) obj. 23756 iterations 63
Cbc0038I Pass  38: suminf.    5.34398 (26) obj. 23756 iterations 58
Cbc0038I Pass  39: suminf.    4.92447 (24) obj. 23756 iterations 3
Cbc0038I Pass  40: suminf.    1.00551 (15) obj. 23756 iterations 34
Cbc0038I Pass  41: suminf.    1.00551 (15) obj. 23756 iterations 1
Cbc0038I Pass  42: suminf.    2.38647 (19) obj. 23756 iterations 69
Cbc0038I Pass  43: suminf.    2.90047 (13) obj. 23756 iterations 44
Cbc0038I Pass  44: suminf.    1.68510 (14) obj. 23756 iterations 31
Cbc0038I Pass  45: suminf.    1.68510 (14) obj. 23756 iterations 2
Cbc0038I Pass  46: suminf.   13.12916 (60) obj. 23756 iterations 118
Cbc0038I Pass  47: suminf.    4.21865 (26) obj. 23756 iterations 87
Cbc0038I Pass  48: suminf.    4.21865 (26) obj. 23756 iterations 17
Cbc0038I Pass  49: suminf.    3.09292 (16) obj. 23756 iterations 75
Cbc0038I Pass  50: suminf.    2.51834 (16) obj. 23756 iterations 3
Cbc0038I Pass  51: suminf.    2.31793 (16) obj. 23756 iterations 113
Cbc0038I Pass  52: suminf.   15.46525 (74) obj. 23756 iterations 98
Cbc0038I Pass  53: suminf.    4.08564 (21) obj. 23756 iterations 135
Cbc0038I Pass  54: suminf.    3.72036 (21) obj. 23756 iterations 8
Cbc0038I Pass  55: suminf.    5.05941 (22) obj. 23756 iterations 45
Cbc0038I Pass  56: suminf.    3.81681 (12) obj. 23756 iterations 57
Cbc0038I Pass  57: suminf.    1.68510 (14) obj. 23756 iterations 19
Cbc0038I Pass  58: suminf.    2.90047 (13) obj. 23756 iterations 46
Cbc0038I Pass  59: suminf.    1.68510 (14) obj. 23756 iterations 21
Cbc0038I Pass  60: suminf.   12.03751 (52) obj. 23756 iterations 144
Cbc0038I Pass  61: suminf.    3.50383 (24) obj. 23756 iterations 128
Cbc0038I Pass  62: suminf.    3.50383 (24) obj. 23756 iterations 1
Cbc0038I Pass  63: suminf.    5.02053 (26) obj. 23756 iterations 41
Cbc0038I Pass  64: suminf.    3.88497 (22) obj. 23756 iterations 2
Cbc0038I Pass  65: suminf.    3.06711 (20) obj. 23756 iterations 41
Cbc0038I Pass  66: suminf.    3.27285 (19) obj. 23756 iterations 18
Cbc0038I Pass  67: suminf.    1.64827 (17) obj. 23756 iterations 36
Cbc0038I Pass  68: suminf.    1.26723 (17) obj. 23756 iterations 6
Cbc0038I Pass  69: suminf.    3.07138 (18) obj. 23756 iterations 24
Cbc0038I Pass  70: suminf.    3.24170 (20) obj. 23756 iterations 7
Cbc0038I Pass  71: suminf.    3.79074 (14) obj. 23756 iterations 47
Cbc0038I Pass  72: suminf.    3.44307 (15) obj. 23756 iterations 16
Cbc0038I Pass  73: suminf.    4.54249 (14) obj. 23756 iterations 32
Cbc0038I Pass  74: suminf.    0.96102 (11) obj. 23756 iterations 8
Cbc0038I Pass  75: suminf.    1.68510 (14) obj. 23756 iterations 48
Cbc0038I Pass  76: suminf.    2.90047 (13) obj. 23756 iterations 31
Cbc0038I Pass  77: suminf.    1.68510 (14) obj. 23756 iterations 23
Cbc0038I Pass  78: suminf.    8.83741 (38) obj. 23756 iterations 110
Cbc0038I Pass  79: suminf.    4.04638 (24) obj. 23756 iterations 115
Cbc0038I Pass  80: suminf.    1.68921 (18) obj. 23756 iterations 20
Cbc0038I Pass  81: suminf.    2.04054 (20) obj. 23756 iterations 56
Cbc0038I Pass  82: suminf.    5.14058 (21) obj. 23756 iterations 84
Cbc0038I Pass  83: suminf.    4.50422 (19) obj. 23756 iterations 15
Cbc0038I Pass  84: suminf.    2.91865 (21) obj. 23756 iterations 39
Cbc0038I Pass  85: suminf.    2.48004 (17) obj. 23756 iterations 9
Cbc0038I Pass  86: suminf.    3.42533 (21) obj. 23756 iterations 90
Cbc0038I Pass  87: suminf.    2.56764 (21) obj. 23756 iterations 20
Cbc0038I Pass  88: suminf.    1.20125 (13) obj. 23756 iterations 91
Cbc0038I Pass  89: suminf.    0.96102 (11) obj. 23756 iterations 6
Cbc0038I Pass  90: suminf.    1.68510 (14) obj. 23756 iterations 89
Cbc0038I Pass  91: suminf.    2.90047 (13) obj. 23756 iterations 42
Cbc0038I Pass  92: suminf.    1.68510 (14) obj. 23756 iterations 32
Cbc0038I Pass  93: suminf.   11.44672 (68) obj. 23756 iterations 114
Cbc0038I Pass  94: suminf.    5.62964 (37) obj. 23756 iterations 69
Cbc0038I Pass  95: suminf.    5.57914 (25) obj. 23756 iterations 7
Cbc0038I Pass  96: suminf.    1.58813 (17) obj. 23756 iterations 92
Cbc0038I Pass  97: suminf.    1.74961 (19) obj. 23756 iterations 8
Cbc0038I Pass  98: suminf.    3.93178 (21) obj. 23756 iterations 30
Cbc0038I Pass  99: suminf.    3.91536 (20) obj. 23756 iterations 4
Cbc0038I Pass 100: suminf.    1.57548 (17) obj. 23756 iterations 22
Cbc0038I Pass 101: suminf.    3.69132 (20) obj. 23756 iterations 35
Cbc0038I Pass 102: suminf.    2.20084 (22) obj. 23756 iterations 29
Cbc0038I Pass 103: suminf.    2.11335 (21) obj. 23756 iterations 9
Cbc0038I Pass 104: suminf.    3.50267 (18) obj. 23756 iterations 30
Cbc0038I Pass 105: suminf.    1.74961 (19) obj. 23756 iterations 42
Cbc0038I Pass 106: suminf.    3.93178 (21) obj. 23756 iterations 20
Cbc0038I Pass 107: suminf.    3.91536 (20) obj. 23756 iterations 7
Cbc0038I Pass 108: suminf.    1.57548 (17) obj. 23756 iterations 25
Cbc0038I Pass 109: suminf.    3.69132 (20) obj. 23756 iterations 38
Cbc0038I Pass 110: suminf.    2.20084 (22) obj. 23756 iterations 36
Cbc0038I Pass 111: suminf.    2.11335 (21) obj. 23756 iterations 5
Cbc0038I Pass 112: suminf.    3.50267 (18) obj. 23756 iterations 22
Cbc0038I Pass 113: suminf.    1.74961 (19) obj. 23756 iterations 37
Cbc0038I Pass 114: suminf.    3.93178 (21) obj. 23756 iterations 27
Cbc0038I Pass 115: suminf.    3.91536 (20) obj. 23756 iterations 4
Cbc0038I Pass 116: suminf.    1.57548 (17) obj. 23756 iterations 19
Cbc0038I Pass 117: suminf.    3.69132 (20) obj. 23756 iterations 36
Cbc0038I Pass 118: suminf.    2.20084 (22) obj. 23756 iterations 32
Cbc0038I Pass 119: suminf.    2.11335 (21) obj. 23756 iterations 5
Cbc0038I Pass 120: suminf.   10.60846 (60) obj. 23756 iterations 97
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 508 rows 182 columns, reduced to 462 rows 159 columns - 37 fixed gives 276, 87 - still too large
Cbc0038I Full problem 508 rows 182 columns, reduced to 49 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of 24576 - took 0.40 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.44 seconds)
Cbc0038I Full problem 508 rows 182 columns, reduced to 321 rows 93 columns - 35 fixed gives 129, 34 - ok now
Cbc0038I Full problem 508 rows 182 columns, reduced to 12 rows 5 columns
Cbc0031I 4 added rows had average density of 11.25
Cbc0013I At root node, 57 cuts changed objective from 20480 to 27648 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.3 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 13 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0001I Search completed - best objective 24576, took 84 iterations and 0 nodes (0.46 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Cuts at root node changed objective from 20480 to 27648
Probing was tried 1 times and created 54 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 1 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               0
Total iterations:               84
Time (CPU seconds):             0.47
Time (Wallclock seconds):       0.48

Total time (CPU seconds):       0.47   (Wallclock seconds):       0.48

