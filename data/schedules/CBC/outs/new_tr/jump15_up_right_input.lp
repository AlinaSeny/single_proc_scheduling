Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump15_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump15_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 17408 - 0.00 seconds
Cgl0002I 50 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0004I processed model has 476 rows, 167 columns (167 integer (151 of which binary)) and 1610 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 167 objects (167 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 80 integers unsatisfied sum - 28.6702
Cbc0038I Pass   1: suminf.    6.08667 (18) obj. 18882.6 iterations 133
Cbc0038I Pass   2: suminf.    4.64561 (21) obj. 18800.3 iterations 35
Cbc0038I Pass   3: suminf.    1.19273 (14) obj. 27443.2 iterations 75
Cbc0038I Pass   4: suminf.    0.55102 (9) obj. 25600 iterations 17
Cbc0038I Pass   5: suminf.    0.47005 (8) obj. 25600 iterations 13
Cbc0038I Pass   6: suminf.    0.50216 (8) obj. 25600 iterations 12
Cbc0038I Pass   7: suminf.   15.60667 (85) obj. 25645 iterations 149
Cbc0038I Pass   8: suminf.   10.95192 (60) obj. 25672.8 iterations 49
Cbc0038I Pass   9: suminf.   10.47516 (65) obj. 25672.9 iterations 18
Cbc0038I Pass  10: suminf.    4.51378 (42) obj. 26443.3 iterations 86
Cbc0038I Pass  11: suminf.    4.17264 (34) obj. 26350.4 iterations 7
Cbc0038I Pass  12: suminf.    2.74032 (17) obj. 25600 iterations 76
Cbc0038I Pass  13: suminf.    2.59909 (22) obj. 25600 iterations 19
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 25600 iterations 63
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 391 rows 129 columns - 11 fixed gives 327, 105 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of 24779.9
Cbc0038I Pass  15: suminf.    6.08667 (18) obj. 18882.6 iterations 0
Cbc0038I Pass  16: suminf.    4.64561 (21) obj. 18800.3 iterations 24
Cbc0038I Pass  17: suminf.    2.43054 (15) obj. 24779.9 iterations 92
Cbc0038I Pass  18: suminf.    1.17577 (15) obj. 24779.9 iterations 24
Cbc0038I Pass  19: suminf.    1.17577 (15) obj. 24779.9 iterations 5
Cbc0038I Pass  20: suminf.    2.43054 (15) obj. 24779.9 iterations 37
Cbc0038I Pass  21: suminf.    9.78067 (62) obj. 24779.9 iterations 146
Cbc0038I Pass  22: suminf.    8.19668 (59) obj. 24779.9 iterations 44
Cbc0038I Pass  23: suminf.    5.40197 (29) obj. 24779.9 iterations 110
Cbc0038I Pass  24: suminf.    2.68482 (13) obj. 24779.9 iterations 33
Cbc0038I Pass  25: suminf.    0.09991 (1) obj. 24779.9 iterations 4
Cbc0038I Solution found of 24779.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 477 rows 167 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 372 rows 120 columns - 24 fixed gives 203, 62 - ok now
Cbc0038I Full problem 476 rows 167 columns, reduced to 54 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 24576 to 22528 (0.09 seconds)
Cbc0038I Round again with cutoff of 21503.2
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  26: suminf.    6.08667 (18) obj. 18882.6 iterations 0
Cbc0038I Pass  27: suminf.    4.64561 (21) obj. 18800.3 iterations 24
Cbc0038I Pass  28: suminf.    2.50530 (15) obj. 21503.2 iterations 76
Cbc0038I Pass  29: suminf.    0.20008 (1) obj. 21503.2 iterations 9
Cbc0038I Solution found of 21503.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 477 rows 167 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 20480
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 304 rows 90 columns - 19 fixed gives 152, 39 - ok now
Cbc0038I Full problem 476 rows 167 columns, reduced to 26 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of 19557.7
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  30: suminf.    5.28683 (23) obj. 19292.6 iterations 52
Cbc0038I Pass  31: suminf.    2.55164 (6) obj. 19557.7 iterations 53
Cbc0038I Pass  32: suminf.    1.05050 (6) obj. 19557.7 iterations 4
Cbc0038I Pass  33: suminf.   13.54474 (55) obj. 19557.7 iterations 86
Cbc0038I Pass  34: suminf.    5.46508 (31) obj. 19557.7 iterations 60
Cbc0038I Pass  35: suminf.    5.46508 (31) obj. 19557.7 iterations 0
Cbc0038I Pass  36: suminf.    4.01302 (20) obj. 19557.7 iterations 58
Cbc0038I Pass  37: suminf.    3.30221 (11) obj. 19557.7 iterations 16
Cbc0038I Pass  38: suminf.    2.95118 (11) obj. 19557.7 iterations 27
Cbc0038I Pass  39: suminf.   15.26595 (63) obj. 19557.7 iterations 105
Cbc0038I Pass  40: suminf.   10.18364 (56) obj. 19557.7 iterations 87
Cbc0038I Pass  41: suminf.    3.67257 (28) obj. 19557.7 iterations 65
Cbc0038I Pass  42: suminf.    3.22299 (24) obj. 19557.7 iterations 7
Cbc0038I Pass  43: suminf.    6.57172 (23) obj. 19557.7 iterations 34
Cbc0038I Pass  44: suminf.    6.09490 (25) obj. 19557.7 iterations 18
Cbc0038I Pass  45: suminf.    2.85820 (22) obj. 19557.7 iterations 45
Cbc0038I Pass  46: suminf.    2.55164 (6) obj. 19557.7 iterations 40
Cbc0038I Pass  47: suminf.    1.05050 (6) obj. 19557.7 iterations 15
Cbc0038I Pass  48: suminf.   13.92658 (61) obj. 19557.7 iterations 124
Cbc0038I Pass  49: suminf.    7.36009 (41) obj. 19557.7 iterations 56
Cbc0038I Pass  50: suminf.    7.36009 (41) obj. 19557.7 iterations 2
Cbc0038I Pass  51: suminf.    4.31104 (35) obj. 19557.7 iterations 73
Cbc0038I Pass  52: suminf.    7.94999 (37) obj. 19557.7 iterations 52
Cbc0038I Pass  53: suminf.    6.99453 (34) obj. 19557.7 iterations 11
Cbc0038I Pass  54: suminf.    6.36618 (38) obj. 19557.7 iterations 9
Cbc0038I Pass  55: suminf.    8.57768 (35) obj. 19557.7 iterations 70
Cbc0038I Pass  56: suminf.    5.67958 (22) obj. 19557.7 iterations 31
Cbc0038I Pass  57: suminf.    5.67958 (22) obj. 19557.7 iterations 5
Cbc0038I Pass  58: suminf.    3.96631 (23) obj. 19557.7 iterations 49
Cbc0038I Pass  59: suminf.    3.84045 (24) obj. 19557.7 iterations 6
Cbc0038I Pass  60: suminf.    5.46866 (25) obj. 19557.7 iterations 41
Cbc0038I Pass  61: suminf.    5.46866 (25) obj. 19557.7 iterations 9
Cbc0038I Pass  62: suminf.    4.23376 (27) obj. 19557.7 iterations 54
Cbc0038I Pass  63: suminf.    5.01739 (27) obj. 19557.7 iterations 55
Cbc0038I Pass  64: suminf.    4.54333 (31) obj. 19557.7 iterations 25
Cbc0038I Pass  65: suminf.    3.21110 (21) obj. 19557.7 iterations 47
Cbc0038I Pass  66: suminf.    4.91114 (27) obj. 19557.7 iterations 54
Cbc0038I Pass  67: suminf.    4.46860 (26) obj. 19557.7 iterations 24
Cbc0038I Pass  68: suminf.    4.11108 (24) obj. 19557.7 iterations 76
Cbc0038I Pass  69: suminf.   16.09504 (72) obj. 19557.7 iterations 91
Cbc0038I Pass  70: suminf.   11.37219 (52) obj. 19557.7 iterations 72
Cbc0038I Pass  71: suminf.    9.67628 (60) obj. 19557.7 iterations 87
Cbc0038I Pass  72: suminf.    7.72685 (48) obj. 19557.7 iterations 40
Cbc0038I Pass  73: suminf.    7.80936 (47) obj. 19557.7 iterations 10
Cbc0038I Pass  74: suminf.    7.80936 (47) obj. 19557.7 iterations 0
Cbc0038I Pass  75: suminf.   10.36616 (51) obj. 19557.7 iterations 99
Cbc0038I Pass  76: suminf.    9.42669 (50) obj. 19557.7 iterations 21
Cbc0038I Pass  77: suminf.    8.82778 (43) obj. 19557.7 iterations 20
Cbc0038I Pass  78: suminf.    5.84823 (36) obj. 19557.7 iterations 69
Cbc0038I Pass  79: suminf.    5.80177 (35) obj. 19557.7 iterations 17
Cbc0038I Pass  80: suminf.    6.41460 (34) obj. 19557.7 iterations 59
Cbc0038I Pass  81: suminf.    6.08444 (33) obj. 19557.7 iterations 14
Cbc0038I Pass  82: suminf.    7.71458 (42) obj. 19557.7 iterations 37
Cbc0038I Pass  83: suminf.    6.06075 (43) obj. 19557.7 iterations 16
Cbc0038I Pass  84: suminf.   12.18424 (52) obj. 19557.7 iterations 91
Cbc0038I Pass  85: suminf.    5.50265 (35) obj. 19557.7 iterations 42
Cbc0038I Pass  86: suminf.    5.50265 (35) obj. 19557.7 iterations 0
Cbc0038I Pass  87: suminf.    7.30705 (49) obj. 19557.7 iterations 72
Cbc0038I Pass  88: suminf.    4.90905 (40) obj. 19557.7 iterations 20
Cbc0038I Pass  89: suminf.    8.86119 (45) obj. 19557.7 iterations 86
Cbc0038I Pass  90: suminf.    8.19612 (46) obj. 19557.7 iterations 23
Cbc0038I Pass  91: suminf.    2.69140 (13) obj. 19557.7 iterations 130
Cbc0038I Pass  92: suminf.    2.69140 (13) obj. 19557.7 iterations 8
Cbc0038I Pass  93: suminf.    4.73576 (26) obj. 19557.7 iterations 40
Cbc0038I Pass  94: suminf.    5.62217 (24) obj. 19557.7 iterations 91
Cbc0038I Pass  95: suminf.    2.97092 (14) obj. 19557.7 iterations 27
Cbc0038I Pass  96: suminf.    2.69140 (13) obj. 19557.7 iterations 13
Cbc0038I Pass  97: suminf.    4.53599 (26) obj. 19557.7 iterations 31
Cbc0038I Pass  98: suminf.    3.43011 (23) obj. 19557.7 iterations 40
Cbc0038I Pass  99: suminf.    5.48131 (34) obj. 19557.7 iterations 138
Cbc0038I Pass 100: suminf.    6.31077 (40) obj. 19557.7 iterations 81
Cbc0038I Pass 101: suminf.    6.29916 (42) obj. 19557.7 iterations 13
Cbc0038I Pass 102: suminf.    6.95743 (39) obj. 19557.7 iterations 67
Cbc0038I Pass 103: suminf.    6.10833 (36) obj. 19557.7 iterations 65
Cbc0038I Pass 104: suminf.    7.72083 (47) obj. 19557.7 iterations 75
Cbc0038I Pass 105: suminf.    5.95317 (45) obj. 19557.7 iterations 12
Cbc0038I Pass 106: suminf.    5.54050 (44) obj. 19557.7 iterations 16
Cbc0038I Pass 107: suminf.    5.70665 (35) obj. 19557.7 iterations 77
Cbc0038I Pass 108: suminf.    4.54338 (26) obj. 19557.7 iterations 41
Cbc0038I Pass 109: suminf.    4.38362 (28) obj. 19557.7 iterations 70
Cbc0038I Pass 110: suminf.    4.17873 (27) obj. 19557.7 iterations 6
Cbc0038I Pass 111: suminf.    3.62658 (40) obj. 19557.7 iterations 70
Cbc0038I Pass 112: suminf.    3.75160 (24) obj. 19557.7 iterations 40
Cbc0038I Pass 113: suminf.    3.75160 (24) obj. 19557.7 iterations 5
Cbc0038I Pass 114: suminf.    2.64651 (17) obj. 19557.7 iterations 48
Cbc0038I Pass 115: suminf.    1.51610 (11) obj. 19557.7 iterations 21
Cbc0038I Pass 116: suminf.    2.69140 (13) obj. 19557.7 iterations 31
Cbc0038I Pass 117: suminf.    3.43011 (23) obj. 19557.7 iterations 46
Cbc0038I Pass 118: suminf.    5.48131 (34) obj. 19557.7 iterations 100
Cbc0038I Pass 119: suminf.    6.03359 (42) obj. 19557.7 iterations 67
Cbc0038I Pass 120: suminf.    5.82914 (38) obj. 19557.7 iterations 11
Cbc0038I Pass 121: suminf.    7.49994 (54) obj. 19557.7 iterations 83
Cbc0038I Pass 122: suminf.    6.92379 (43) obj. 19557.7 iterations 11
Cbc0038I Pass 123: suminf.    6.56582 (32) obj. 19557.7 iterations 55
Cbc0038I Pass 124: suminf.    2.69640 (25) obj. 19557.7 iterations 30
Cbc0038I Pass 125: suminf.    5.16157 (19) obj. 19557.7 iterations 33
Cbc0038I Pass 126: suminf.    3.26194 (15) obj. 19557.7 iterations 8
Cbc0038I Pass 127: suminf.    3.20836 (22) obj. 19557.7 iterations 49
Cbc0038I Pass 128: suminf.    6.31915 (32) obj. 19557.7 iterations 84
Cbc0038I Pass 129: suminf.   21.82347 (81) obj. 19557.7 iterations 115
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 450 rows 155 columns - 21 fixed gives 340, 113 - still too large
Cbc0038I Full problem 476 rows 167 columns, reduced to 133 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of 20480 - took 0.25 seconds
Cbc0012I Integer solution of 20480 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 476 rows 167 columns, reduced to 298 rows 87 columns - 19 fixed gives 216, 60 - ok now
Cbc0012I Integer solution of 19456 found by DiveCoefficient after 269 iterations and 0 nodes (0.29 seconds)
Cbc0031I 15 added rows had average density of 32.2
Cbc0013I At root node, 15 cuts changed objective from 17408 to 19456 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.9 elements, 24 column cuts (24 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 70 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective 19456, took 269 iterations and 0 nodes (0.30 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Cuts at root node changed objective from 17408 to 19456
Probing was tried 3 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Gomory was tried 3 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 3 times and created 70 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                19456.00000000
Enumerated nodes:               0
Total iterations:               269
Time (CPU seconds):             0.30
Time (Wallclock seconds):       0.31

Total time (CPU seconds):       0.30   (Wallclock seconds):       0.31

