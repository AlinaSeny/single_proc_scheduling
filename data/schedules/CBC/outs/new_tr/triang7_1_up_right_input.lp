Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_1_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang7_1_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 322 - 0.04 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 372 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 167 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1486 rows, 526 columns (526 integer (498 of which binary)) and 5092 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 217 integers unsatisfied sum - 55.432
Cbc0038I Pass   1: suminf.   22.62609 (166) obj. 338.167 iterations 477
Cbc0038I Pass   2: suminf.   20.46309 (154) obj. 340.749 iterations 51
Cbc0038I Pass   3: suminf.   20.60763 (151) obj. 340.402 iterations 26
Cbc0038I Pass   4: suminf.   16.35671 (137) obj. 339 iterations 78
Cbc0038I Pass   5: suminf.   15.59143 (144) obj. 339 iterations 37
Cbc0038I Pass   6: suminf.   14.20870 (119) obj. 410.278 iterations 217
Cbc0038I Pass   7: suminf.   11.70018 (108) obj. 409.342 iterations 87
Cbc0038I Pass   8: suminf.   11.36308 (132) obj. 410.722 iterations 87
Cbc0038I Pass   9: suminf.   10.20044 (131) obj. 410.986 iterations 20
Cbc0038I Pass  10: suminf.   10.20044 (131) obj. 410.986 iterations 2
Cbc0038I Pass  11: suminf.    7.12515 (108) obj. 411.877 iterations 82
Cbc0038I Pass  12: suminf.    7.06078 (105) obj. 411.877 iterations 33
Cbc0038I Pass  13: suminf.    4.71123 (67) obj. 376.143 iterations 210
Cbc0038I Pass  14: suminf.    0.60213 (24) obj. 344 iterations 108
Cbc0038I Pass  15: suminf.    0.43972 (23) obj. 344 iterations 10
Cbc0038I Pass  16: suminf.    1.02212 (33) obj. 344 iterations 155
Cbc0038I Pass  17: suminf.    1.02212 (33) obj. 344 iterations 4
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 344 iterations 32
Cbc0038I Solution found of 344
Cbc0038I Cleaned solution of 344
Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1068 rows 330 columns - 28 fixed gives 855, 238 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I Round again with cutoff of 340.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  19: suminf.   23.12637 (172) obj. 339.504 iterations 14
Cbc0038I Pass  20: suminf.   20.33329 (154) obj. 340.9 iterations 56
Cbc0038I Pass  21: suminf.   20.33084 (151) obj. 340.9 iterations 27
Cbc0038I Pass  22: suminf.   12.11275 (105) obj. 340.9 iterations 199
Cbc0038I Pass  23: suminf.   12.33269 (104) obj. 340.9 iterations 39
Cbc0038I Pass  24: suminf.   10.41349 (108) obj. 340.9 iterations 87
Cbc0038I Pass  25: suminf.    7.90941 (105) obj. 340.9 iterations 59
Cbc0038I Pass  26: suminf.   12.00017 (111) obj. 340.9 iterations 106
Cbc0038I Pass  27: suminf.   12.00017 (111) obj. 340.9 iterations 2
Cbc0038I Pass  28: suminf.    9.20592 (102) obj. 340.9 iterations 167
Cbc0038I Pass  29: suminf.    9.13196 (102) obj. 340.9 iterations 16
Cbc0038I Pass  30: suminf.    9.14278 (106) obj. 340.9 iterations 14
Cbc0038I Pass  31: suminf.    7.27120 (105) obj. 340.9 iterations 34
Cbc0038I Pass  32: suminf.    9.94984 (96) obj. 340.9 iterations 216
Cbc0038I Pass  33: suminf.    9.76889 (91) obj. 340.9 iterations 52
Cbc0038I Pass  34: suminf.    7.04636 (93) obj. 340.9 iterations 143
Cbc0038I Pass  35: suminf.    3.49066 (82) obj. 340.9 iterations 57
Cbc0038I Pass  36: suminf.    5.62372 (81) obj. 340.9 iterations 101
Cbc0038I Pass  37: suminf.    4.67983 (73) obj. 340.9 iterations 7
Cbc0038I Pass  38: suminf.    2.80398 (74) obj. 340.9 iterations 29
Cbc0038I Pass  39: suminf.   12.48413 (79) obj. 340.9 iterations 259
Cbc0038I Pass  40: suminf.   11.14300 (83) obj. 340.9 iterations 35
Cbc0038I Pass  41: suminf.    8.58087 (79) obj. 340.9 iterations 138
Cbc0038I Pass  42: suminf.    6.21494 (73) obj. 340.9 iterations 16
Cbc0038I Pass  43: suminf.    6.09999 (80) obj. 340.9 iterations 26
Cbc0038I Pass  44: suminf.    8.84252 (82) obj. 340.9 iterations 69
Cbc0038I Pass  45: suminf.    7.75738 (92) obj. 340.9 iterations 36
Cbc0038I Pass  46: suminf.   10.79036 (110) obj. 340.9 iterations 93
Cbc0038I Pass  47: suminf.    9.53561 (99) obj. 340.9 iterations 30
Cbc0038I Pass  48: suminf.    5.57941 (82) obj. 340.9 iterations 98
Cbc0038I Pass  49: suminf.    5.54325 (83) obj. 340.9 iterations 10
Cbc0038I Pass  50: suminf.    5.73075 (75) obj. 340.9 iterations 90
Cbc0038I Pass  51: suminf.    3.00318 (73) obj. 340.9 iterations 29
Cbc0038I Pass  52: suminf.   10.37226 (71) obj. 340.9 iterations 61
Cbc0038I Pass  53: suminf.    6.47083 (70) obj. 340.9 iterations 16
Cbc0038I Pass  54: suminf.    5.01639 (70) obj. 340.9 iterations 22
Cbc0038I Pass  55: suminf.   10.81577 (85) obj. 340.9 iterations 133
Cbc0038I Pass  56: suminf.    8.69059 (85) obj. 340.9 iterations 27
Cbc0038I Pass  57: suminf.    8.64744 (87) obj. 340.9 iterations 4
Cbc0038I Pass  58: suminf.   10.34500 (83) obj. 340.9 iterations 126
Cbc0038I Pass  59: suminf.    9.47643 (82) obj. 340.9 iterations 20
Cbc0038I Pass  60: suminf.    8.03331 (59) obj. 340.9 iterations 25
Cbc0038I Pass  61: suminf.    8.03331 (59) obj. 340.9 iterations 0
Cbc0038I Pass  62: suminf.    6.05757 (66) obj. 340.9 iterations 116
Cbc0038I Pass  63: suminf.    5.29038 (60) obj. 340.9 iterations 11
Cbc0038I Pass  64: suminf.    7.39178 (82) obj. 340.9 iterations 192
Cbc0038I Pass  65: suminf.    7.37586 (84) obj. 340.9 iterations 9
Cbc0038I Pass  66: suminf.    8.51675 (85) obj. 340.9 iterations 119
Cbc0038I Pass  67: suminf.    7.93800 (81) obj. 340.9 iterations 10
Cbc0038I Pass  68: suminf.    7.17877 (97) obj. 340.9 iterations 134
Cbc0038I Pass  69: suminf.    6.93777 (81) obj. 340.9 iterations 101
Cbc0038I Pass  70: suminf.    5.08907 (73) obj. 340.9 iterations 31
Cbc0038I Pass  71: suminf.    8.24614 (79) obj. 340.9 iterations 109
Cbc0038I Pass  72: suminf.    7.06031 (87) obj. 340.9 iterations 61
Cbc0038I Pass  73: suminf.    8.03414 (83) obj. 340.9 iterations 122
Cbc0038I Pass  74: suminf.    8.35762 (82) obj. 340.9 iterations 25
Cbc0038I Pass  75: suminf.    5.26116 (59) obj. 340.9 iterations 111
Cbc0038I Pass  76: suminf.    5.09209 (59) obj. 340.9 iterations 6
Cbc0038I Pass  77: suminf.    9.27542 (74) obj. 340.9 iterations 169
Cbc0038I Pass  78: suminf.    7.53732 (69) obj. 340.9 iterations 45
Cbc0038I Pass  79: suminf.    6.23309 (60) obj. 340.9 iterations 92
Cbc0038I Pass  80: suminf.    4.57138 (58) obj. 340.9 iterations 14
Cbc0038I Pass  81: suminf.    9.07727 (84) obj. 340.9 iterations 164
Cbc0038I Pass  82: suminf.    6.79840 (61) obj. 340.9 iterations 35
Cbc0038I Pass  83: suminf.    6.79840 (61) obj. 340.9 iterations 0
Cbc0038I Pass  84: suminf.    5.35534 (91) obj. 340.9 iterations 170
Cbc0038I Pass  85: suminf.    5.35534 (91) obj. 340.9 iterations 9
Cbc0038I Pass  86: suminf.    6.00757 (82) obj. 340.9 iterations 119
Cbc0038I Pass  87: suminf.    5.49091 (83) obj. 340.9 iterations 24
Cbc0038I Pass  88: suminf.    6.44498 (77) obj. 340.9 iterations 88
Cbc0038I Pass  89: suminf.    6.38043 (74) obj. 340.9 iterations 44
Cbc0038I Pass  90: suminf.    6.55431 (79) obj. 340.9 iterations 118
Cbc0038I Pass  91: suminf.    5.72191 (81) obj. 340.9 iterations 12
Cbc0038I Pass  92: suminf.    5.54565 (73) obj. 340.9 iterations 75
Cbc0038I Pass  93: suminf.    3.15246 (80) obj. 340.9 iterations 50
Cbc0038I Pass  94: suminf.    8.55307 (90) obj. 340.9 iterations 74
Cbc0038I Pass  95: suminf.    6.48424 (89) obj. 340.9 iterations 18
Cbc0038I Pass  96: suminf.    3.26967 (77) obj. 340.9 iterations 68
Cbc0038I Pass  97: suminf.   19.78746 (145) obj. 340.9 iterations 271
Cbc0038I Pass  98: suminf.    6.62842 (65) obj. 340.9 iterations 158
Cbc0038I Pass  99: suminf.    0.91194 (35) obj. 340.9 iterations 143
Cbc0038I Pass 100: suminf.    0.91194 (35) obj. 340.9 iterations 18
Cbc0038I Pass 101: suminf.    4.22606 (50) obj. 340.9 iterations 88
Cbc0038I Pass 102: suminf.    3.48213 (46) obj. 340.9 iterations 8
Cbc0038I Pass 103: suminf.    5.51779 (49) obj. 340.9 iterations 80
Cbc0038I Pass 104: suminf.    3.78777 (42) obj. 340.9 iterations 32
Cbc0038I Pass 105: suminf.    2.89173 (41) obj. 340.9 iterations 10
Cbc0038I Pass 106: suminf.    4.81751 (86) obj. 340.9 iterations 191
Cbc0038I Pass 107: suminf.    3.43894 (77) obj. 340.9 iterations 28
Cbc0038I Pass 108: suminf.    6.32671 (63) obj. 340.9 iterations 116
Cbc0038I Pass 109: suminf.    6.32671 (63) obj. 340.9 iterations 8
Cbc0038I Pass 110: suminf.    4.78730 (47) obj. 340.9 iterations 77
Cbc0038I Pass 111: suminf.    4.15374 (63) obj. 340.9 iterations 12
Cbc0038I Pass 112: suminf.    4.06822 (63) obj. 340.9 iterations 4
Cbc0038I Pass 113: suminf.    5.36494 (65) obj. 340.9 iterations 71
Cbc0038I Pass 114: suminf.    4.78713 (65) obj. 340.9 iterations 17
Cbc0038I Pass 115: suminf.    3.49090 (47) obj. 340.9 iterations 110
Cbc0038I Pass 116: suminf.    2.96211 (31) obj. 340.9 iterations 11
Cbc0038I Pass 117: suminf.    4.13141 (61) obj. 340.9 iterations 88
Cbc0038I Pass 118: suminf.   23.72134 (170) obj. 340.9 iterations 288
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1277 rows 429 columns - 36 fixed gives 1013, 307 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.05 seconds)
Cbc0038I After 1.05 seconds - Feasibility pump exiting with objective of 344 - took 0.80 seconds
Cbc0012I Integer solution of 344 found by feasibility pump after 0 iterations and 0 nodes (1.05 seconds)
Cbc0031I 50 added rows had average density of 185.22
Cbc0013I At root node, 50 cuts changed objective from 322 to 322 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 196 row cuts average 2.5 elements, 31 column cuts (31 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 229 row cuts average 304.0 elements, 0 column cuts (0 active)  in 0.364 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 344 best solution, best possible 322 (2.53 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 290 rows 95 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 229 rows 71 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 325 rows 100 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 244 rows 75 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 317 rows 105 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 268 rows 88 columns
Cbc0010I After 1000 nodes, 8 on tree, 344 best solution, best possible 330 (40.90 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 232 rows 77 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 137 rows 51 columns
Cbc0016I Integer solution of 334 found by strong branching after 283481 iterations and 1426 nodes (49.61 seconds)
Cbc0001I Search completed - best objective 334, took 283481 iterations and 1426 nodes (49.61 seconds)
Cbc0032I Strong branching done 9532 times (277638 iterations), fathomed 211 nodes and fixed 292 variables
Cbc0035I Maximum depth 34, 3 variables fixed on reduced cost
Cuts at root node changed objective from 322 to 322
Probing was tried 9 times and created 227 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Gomory was tried 9 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.116 seconds)
Knapsack was tried 9 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 9 times and created 229 cuts of which 0 were active after adding rounds of cuts (0.364 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ImplicationCuts was tried 44 times and created 171 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                334.00000000
Enumerated nodes:               1426
Total iterations:               283481
Time (CPU seconds):             49.64
Time (Wallclock seconds):       49.84

Total time (CPU seconds):       49.65   (Wallclock seconds):       49.85

