Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag250_up_right_input.lp sec 1800 solve solu solutions/new_tr/dag250_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 968794 - 8.84 seconds
Cgl0002I 2100 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1249 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 187 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 6187 rows, 2002 columns (2002 integer (1945 of which binary)) and 20776 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2002 objects (2002 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 985 integers unsatisfied sum - 255.377
Cbc0038I Pass   1: (12.46 seconds) suminf.  119.04844 (859) obj. 1.26259e+06 iterations 3040
Cbc0038I Pass   2: (12.67 seconds) suminf.  107.23569 (840) obj. 1.28103e+06 iterations 667
Cbc0038I Pass   3: (12.78 seconds) suminf.  102.62850 (815) obj. 1.37906e+06 iterations 301
Cbc0038I Pass   4: (12.87 seconds) suminf.  102.23749 (824) obj. 1.38848e+06 iterations 199
Cbc0038I Pass   5: (12.90 seconds) suminf.  100.47979 (825) obj. 1.38579e+06 iterations 85
Cbc0038I Pass   6: (12.94 seconds) suminf.  100.40812 (833) obj. 1.38679e+06 iterations 76
Cbc0038I Pass   7: (13.04 seconds) suminf.   98.46076 (837) obj. 1.38697e+06 iterations 223
Cbc0038I Pass   8: (13.06 seconds) suminf.   98.43233 (840) obj. 1.38682e+06 iterations 52
Cbc0038I Pass   9: (13.11 seconds) suminf.   99.37987 (855) obj. 1.383e+06 iterations 96
Cbc0038I Pass  10: (13.14 seconds) suminf.   97.21797 (857) obj. 1.38553e+06 iterations 65
Cbc0038I Pass  11: (13.22 seconds) suminf.   97.58740 (866) obj. 1.38189e+06 iterations 219
Cbc0038I Pass  12: (13.25 seconds) suminf.   97.01093 (864) obj. 1.38618e+06 iterations 63
Cbc0038I Pass  13: (13.30 seconds) suminf.   96.63676 (861) obj. 1.38607e+06 iterations 132
Cbc0038I Pass  14: (13.32 seconds) suminf.   96.27759 (862) obj. 1.39121e+06 iterations 60
Cbc0038I Pass  15: (13.34 seconds) suminf.   95.94706 (854) obj. 1.39087e+06 iterations 31
Cbc0038I Pass  16: (13.43 seconds) suminf.   96.79092 (857) obj. 1.38908e+06 iterations 234
Cbc0038I Pass  17: (13.51 seconds) suminf.   95.73765 (828) obj. 1.45302e+06 iterations 211
Cbc0038I Pass  18: (13.62 seconds) suminf.   93.86273 (880) obj. 1.45784e+06 iterations 304
Cbc0038I Pass  19: (13.67 seconds) suminf.   93.63783 (865) obj. 1.44905e+06 iterations 133
Cbc0038I Pass  20: (13.73 seconds) suminf.   94.47095 (893) obj. 1.44328e+06 iterations 172
Cbc0038I Pass  21: (13.76 seconds) suminf.   93.66698 (883) obj. 1.44758e+06 iterations 56
Cbc0038I Pass  22: (13.77 seconds) suminf.   94.04223 (883) obj. 1.44694e+06 iterations 15
Cbc0038I Pass  23: (13.87 seconds) suminf.   93.00502 (842) obj. 1.43864e+06 iterations 287
Cbc0038I Pass  24: (13.91 seconds) suminf.   93.32351 (837) obj. 1.44195e+06 iterations 102
Cbc0038I Pass  25: (14.01 seconds) suminf.   90.62677 (834) obj. 1.4503e+06 iterations 268
Cbc0038I Pass  26: (14.06 seconds) suminf.   90.43891 (828) obj. 1.44144e+06 iterations 141
Cbc0038I Pass  27: (14.18 seconds) suminf.   89.99421 (825) obj. 1.42669e+06 iterations 337
Cbc0038I Pass  28: (14.21 seconds) suminf.   90.31697 (834) obj. 1.42458e+06 iterations 68
Cbc0038I Pass  29: (14.25 seconds) suminf.   89.54417 (831) obj. 1.42087e+06 iterations 102
Cbc0038I Pass  30: (14.27 seconds) suminf.   89.85202 (843) obj. 1.42406e+06 iterations 35
Cbc0038I Pass  31: (14.28 seconds) suminf.   89.85375 (845) obj. 1.42267e+06 iterations 12
Cbc0038I Pass  32: (14.31 seconds) suminf.   89.13020 (844) obj. 1.4275e+06 iterations 54
Cbc0038I Pass  33: (14.71 seconds) suminf.  112.55196 (770) obj. 1.93758e+06 iterations 1462
Cbc0038I Pass  34: (15.00 seconds) suminf.   88.05445 (749) obj. 1.92834e+06 iterations 1084
Cbc0038I Pass  35: (15.07 seconds) suminf.   83.95312 (724) obj. 1.96001e+06 iterations 177
Cbc0038I Pass  36: (15.09 seconds) suminf.   83.97279 (725) obj. 1.95916e+06 iterations 39
Cbc0038I Pass  37: (15.16 seconds) suminf.   84.13832 (728) obj. 1.95631e+06 iterations 233
Cbc0038I Pass  38: (15.18 seconds) suminf.   84.26452 (728) obj. 1.96113e+06 iterations 26
Cbc0038I Pass  39: (15.19 seconds) suminf.   84.37156 (728) obj. 1.95789e+06 iterations 8
Cbc0038I Pass  40: (15.25 seconds) suminf.   84.81333 (724) obj. 2.01626e+06 iterations 175
Cbc0038I Pass  41: (15.27 seconds) suminf.   85.13312 (723) obj. 2.01376e+06 iterations 32
Cbc0038I Pass  42: (15.33 seconds) suminf.   85.32773 (728) obj. 2.09285e+06 iterations 184
Cbc0038I Pass  43: (15.35 seconds) suminf.   84.80431 (718) obj. 2.12512e+06 iterations 55
Cbc0038I Pass  44: (15.39 seconds) suminf.   83.27039 (714) obj. 2.21455e+06 iterations 100
Cbc0038I Pass  45: (15.42 seconds) suminf.   83.23046 (715) obj. 2.21511e+06 iterations 71
Cbc0038I Pass  46: (15.45 seconds) suminf.   83.32283 (719) obj. 2.21965e+06 iterations 96
Cbc0038I Pass  47: (15.47 seconds) suminf.   82.88541 (722) obj. 2.21964e+06 iterations 37
Cbc0038I Pass  48: (15.59 seconds) suminf.   80.30539 (723) obj. 2.22049e+06 iterations 411
Cbc0038I Pass  49: (15.64 seconds) suminf.   78.75376 (723) obj. 2.21965e+06 iterations 140
Cbc0038I Pass  50: (15.70 seconds) suminf.   79.56476 (700) obj. 2.22254e+06 iterations 160
Cbc0038I Pass  51: (15.75 seconds) suminf.   77.33983 (711) obj. 2.22143e+06 iterations 111
Cbc0038I Pass  52: (15.80 seconds) suminf.   77.34582 (722) obj. 2.21963e+06 iterations 142
Cbc0038I Pass  53: (15.81 seconds) suminf.   77.51793 (723) obj. 2.2199e+06 iterations 29
Cbc0038I Pass  54: (15.90 seconds) suminf.   75.85945 (681) obj. 2.21655e+06 iterations 274
Cbc0038I Pass  55: (15.94 seconds) suminf.   75.02111 (677) obj. 2.21909e+06 iterations 47
Cbc0038I Pass  56: (16.06 seconds) suminf.   72.15501 (685) obj. 2.20265e+06 iterations 378
Cbc0038I Pass  57: (16.08 seconds) suminf.   71.84065 (681) obj. 2.20252e+06 iterations 63
Cbc0038I Pass  58: (16.11 seconds) suminf.   72.25097 (678) obj. 2.19245e+06 iterations 69
Cbc0038I Pass  59: (16.16 seconds) suminf.   71.13213 (675) obj. 2.2039e+06 iterations 46
Cbc0038I Pass  60: (16.22 seconds) suminf.   69.69190 (687) obj. 2.18015e+06 iterations 148
Cbc0038I Pass  61: (16.25 seconds) suminf.   69.44313 (682) obj. 2.20282e+06 iterations 76
Cbc0038I Pass  62: (16.27 seconds) suminf.   69.78975 (686) obj. 2.20064e+06 iterations 55
Cbc0038I Pass  63: (16.52 seconds) suminf.   92.21337 (676) obj. 2.17585e+06 iterations 970
Cbc0038I Pass  64: (16.76 seconds) suminf.   71.67332 (651) obj. 2.13261e+06 iterations 864
Cbc0038I Pass  65: (16.86 seconds) suminf.   70.72174 (641) obj. 2.13612e+06 iterations 273
Cbc0038I Pass  66: (16.91 seconds) suminf.   70.05754 (650) obj. 2.13606e+06 iterations 96
Cbc0038I Pass  67: (17.02 seconds) suminf.   64.77060 (650) obj. 2.12853e+06 iterations 296
Cbc0038I Pass  68: (17.05 seconds) suminf.   63.26778 (663) obj. 2.1098e+06 iterations 71
Cbc0038I Pass  69: (17.16 seconds) suminf.   65.30320 (652) obj. 2.14113e+06 iterations 307
Cbc0038I Pass  70: (17.24 seconds) suminf.   64.81409 (642) obj. 2.1182e+06 iterations 196
Cbc0038I Pass  71: (17.30 seconds) suminf.   62.83053 (643) obj. 2.11685e+06 iterations 172
Cbc0038I Pass  72: (17.36 seconds) suminf.   62.02517 (630) obj. 2.11141e+06 iterations 182
Cbc0038I Pass  73: (17.56 seconds) suminf.   59.14200 (635) obj. 2.36132e+06 iterations 583
Cbc0038I Pass  74: (17.72 seconds) suminf.   57.49150 (648) obj. 2.49713e+06 iterations 479
Cbc0038I Pass  75: (17.79 seconds) suminf.   56.62850 (635) obj. 2.51543e+06 iterations 134
Cbc0038I Pass  76: (17.96 seconds) suminf.   54.66100 (603) obj. 2.47675e+06 iterations 416
Cbc0038I Pass  77: (18.00 seconds) suminf.   53.07274 (624) obj. 2.43645e+06 iterations 104
Cbc0038I Pass  78: (18.06 seconds) suminf.   53.66821 (613) obj. 2.4369e+06 iterations 20
Cbc0038I Pass  79: (18.21 seconds) suminf.   56.11903 (633) obj. 2.50364e+06 iterations 406
Cbc0038I Pass  80: (18.32 seconds) suminf.   52.78036 (631) obj. 2.4794e+06 iterations 173
Cbc0038I Pass  81: (18.42 seconds) suminf.   51.53608 (602) obj. 2.46851e+06 iterations 253
Cbc0038I Pass  82: (18.56 seconds) suminf.   53.93906 (607) obj. 2.059e+06 iterations 425
Cbc0038I Pass  83: (18.62 seconds) suminf.   53.07285 (606) obj. 2.15585e+06 iterations 113
Cbc0038I Pass  84: (18.66 seconds) suminf.   52.83429 (602) obj. 2.15284e+06 iterations 79
Cbc0038I Pass  85: (18.80 seconds) suminf.   52.54774 (586) obj. 2.19153e+06 iterations 242
Cbc0038I Pass  86: (18.90 seconds) suminf.   51.71026 (582) obj. 2.34336e+06 iterations 177
Cbc0038I Pass  87: (19.01 seconds) suminf.   51.34909 (589) obj. 2.34225e+06 iterations 127
Cbc0038I Pass  88: (19.18 seconds) suminf.   51.52364 (605) obj. 2.40895e+06 iterations 347
Cbc0038I Pass  89: (19.27 seconds) suminf.   50.96574 (596) obj. 2.46933e+06 iterations 181
Cbc0038I Pass  90: (19.38 seconds) suminf.   49.17531 (608) obj. 2.01505e+06 iterations 347
Cbc0038I Pass  91: (19.42 seconds) suminf.   47.79984 (603) obj. 1.99125e+06 iterations 89
Cbc0038I Pass  92: (19.45 seconds) suminf.   46.38367 (591) obj. 1.8127e+06 iterations 94
Cbc0038I Pass  93: (19.45 seconds) suminf.   46.38367 (591) obj. 1.8127e+06 iterations 0
Cbc0038I Pass  94: (19.50 seconds) suminf.   46.95841 (594) obj. 1.81556e+06 iterations 135
Cbc0038I Pass  95: (19.56 seconds) suminf.   46.88236 (589) obj. 1.81276e+06 iterations 130
Cbc0038I Pass  96: (19.68 seconds) suminf.   47.27839 (597) obj. 1.97157e+06 iterations 315
Cbc0038I Pass  97: (19.73 seconds) suminf.   47.36008 (600) obj. 1.9549e+06 iterations 139
Cbc0038I Pass  98: (19.76 seconds) suminf.   46.88227 (600) obj. 2.0214e+06 iterations 49
Cbc0038I Pass  99: (19.94 seconds) suminf.   46.22653 (575) obj. 1.88747e+06 iterations 651
Cbc0038I Pass 100: (20.21 seconds) suminf.   74.80600 (629) obj. 1.85189e+06 iterations 1137
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 413 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6187 rows 2002 columns, reduced to 4151 rows 1313 columns - too large
Cbc0038I Mini branch and bound did not improve solution (24.50 seconds)
Cbc0038I After 24.50 seconds - Feasibility pump exiting - took 12.98 seconds
Cbc0031I 48 added rows had average density of 94.770833
Cbc0013I At root node, 48 cuts changed objective from 981242.16 to 996692.23 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.139 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 297.1 elements, 0 column cuts (0 active)  in 0.933 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 71 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.419 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 17 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 996692.23 (34.59 seconds)
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 1012497.6 (417.38 seconds)
Cbc0010I After 200 nodes, 9 on tree, 1e+50 best solution, best possible 1012497.6 (885.28 seconds)
Cbc0010I After 300 nodes, 12 on tree, 1e+50 best solution, best possible 1012497.6 (1332.33 seconds)
Cbc0010I After 400 nodes, 11 on tree, 1e+50 best solution, best possible 1012497.6 (1601.08 seconds)
Cbc0010I After 500 nodes, 10 on tree, 1e+50 best solution, best possible 1012497.6 (1781.90 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1012497.6), took 3933929 iterations and 510 nodes (1804.75 seconds)
Cbc0032I Strong branching done 3170 times (267650 iterations), fathomed 35 nodes and fixed 75 variables
Cbc0035I Maximum depth 130, 0 variables fixed on reduced cost
Cuts at root node changed objective from 981242 to 996692
Probing was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.139 seconds)
Gomory was tried 188 times and created 461 cuts of which 0 were active after adding rounds of cuts (3.384 seconds)
Knapsack was tried 188 times and created 1641 cuts of which 0 were active after adding rounds of cuts (0.406 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 188 times and created 7395 cuts of which 0 were active after adding rounds of cuts (1.511 seconds)
ZeroHalf was tried 188 times and created 425 cuts of which 0 were active after adding rounds of cuts (13.415 seconds)
ImplicationCuts was tried 38 times and created 16 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1012497.601
Enumerated nodes:               510
Total iterations:               3933929
Time (CPU seconds):             1804.75
Time (Wallclock seconds):       1805.61

Total time (CPU seconds):       1804.79   (Wallclock seconds):       1805.66

