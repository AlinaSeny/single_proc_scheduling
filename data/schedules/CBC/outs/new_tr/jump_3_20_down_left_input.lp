Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_20_down_left_input.lp sec 1800 solve solu solutions/new_tr/jump_3_20_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 23040 - 0.02 seconds
Cgl0002I 110 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 176 strengthened rows, 0 substitutions
Cgl0004I processed model has 1000 rows, 329 columns (329 integer (308 of which binary)) and 3271 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 329 objects (329 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 168 integers unsatisfied sum - 52.5871
Cbc0038I Pass   1: suminf.    6.83180 (41) obj. 24576 iterations 321
Cbc0038I Pass   2: suminf.    6.72129 (34) obj. 24576 iterations 20
Cbc0038I Pass   3: suminf.    3.54508 (19) obj. 24576 iterations 161
Cbc0038I Pass   4: suminf.    3.54508 (19) obj. 24576 iterations 16
Cbc0038I Pass   5: suminf.    2.29670 (14) obj. 24576 iterations 74
Cbc0038I Pass   6: suminf.    2.14404 (15) obj. 24576 iterations 39
Cbc0038I Pass   7: suminf.    0.00000 (0) obj. 24576 iterations 25
Cbc0038I Solution found of 24576
Cbc0038I Cleaned solution of 24576
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1000 rows 329 columns, reduced to 671 rows 181 columns - 17 fixed gives 396, 104 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of 24421.5
Cbc0038I Reduced cost fixing fixed 16 variables on major pass 2
Cbc0038I Pass   8: suminf.    7.87812 (75) obj. 24421 iterations 65
Cbc0038I Pass   9: suminf.    8.11073 (79) obj. 24421.5 iterations 18
Cbc0038I Pass  10: suminf.    3.33626 (58) obj. 24421.5 iterations 120
Cbc0038I Pass  11: suminf.    2.59762 (59) obj. 24421.5 iterations 73
Cbc0038I Pass  12: suminf.    7.43635 (69) obj. 24421.5 iterations 44
Cbc0038I Pass  13: suminf.    2.71119 (68) obj. 24421.5 iterations 77
Cbc0038I Pass  14: suminf.   17.26492 (104) obj. 24421.5 iterations 185
Cbc0038I Pass  15: suminf.    6.25593 (71) obj. 24421.5 iterations 124
Cbc0038I Pass  16: suminf.    6.07673 (69) obj. 24421.5 iterations 9
Cbc0038I Pass  17: suminf.    6.21949 (51) obj. 24421.5 iterations 90
Cbc0038I Pass  18: suminf.    5.31161 (45) obj. 24421.5 iterations 31
Cbc0038I Pass  19: suminf.    2.71200 (56) obj. 24421.5 iterations 85
Cbc0038I Pass  20: suminf.    2.56045 (56) obj. 24421.5 iterations 18
Cbc0038I Pass  21: suminf.    9.42512 (61) obj. 24421.5 iterations 102
Cbc0038I Pass  22: suminf.    3.26648 (56) obj. 24421.5 iterations 46
Cbc0038I Pass  23: suminf.   21.35951 (99) obj. 24421.5 iterations 207
Cbc0038I Pass  24: suminf.   12.68325 (82) obj. 24421.5 iterations 117
Cbc0038I Pass  25: suminf.   12.04489 (81) obj. 24421.5 iterations 18
Cbc0038I Pass  26: suminf.    3.75699 (59) obj. 24421.5 iterations 131
Cbc0038I Pass  27: suminf.    3.78086 (61) obj. 24421.5 iterations 28
Cbc0038I Pass  28: suminf.    5.49214 (56) obj. 24421.5 iterations 127
Cbc0038I Pass  29: suminf.    5.46247 (56) obj. 24421.5 iterations 17
Cbc0038I Pass  30: suminf.    2.51083 (53) obj. 24421.5 iterations 83
Cbc0038I Pass  31: suminf.    2.35928 (53) obj. 24421.5 iterations 16
Cbc0038I Pass  32: suminf.   13.58960 (73) obj. 24421.5 iterations 151
Cbc0038I Pass  33: suminf.    5.04451 (45) obj. 24421.5 iterations 70
Cbc0038I Pass  34: suminf.    5.03081 (46) obj. 24421.5 iterations 27
Cbc0038I Pass  35: suminf.    7.31073 (53) obj. 24421.5 iterations 104
Cbc0038I Pass  36: suminf.    2.25869 (49) obj. 24421.5 iterations 44
Cbc0038I Pass  37: suminf.   15.09648 (75) obj. 24421.5 iterations 155
Cbc0038I Pass  38: suminf.    5.06048 (46) obj. 24421.5 iterations 86
Cbc0038I Pass  39: suminf.    5.03081 (46) obj. 24421.5 iterations 21
Cbc0038I Pass  40: suminf.    2.28476 (49) obj. 24421.5 iterations 55
Cbc0038I Pass  41: suminf.    2.25869 (49) obj. 24421.5 iterations 4
Cbc0038I Pass  42: suminf.    8.48988 (48) obj. 24421.5 iterations 129
Cbc0038I Pass  43: suminf.    5.33965 (53) obj. 24421.5 iterations 62
Cbc0038I Pass  44: suminf.    6.74157 (53) obj. 24421.5 iterations 199
Cbc0038I Pass  45: suminf.    2.45139 (45) obj. 24421.5 iterations 48
Cbc0038I Pass  46: suminf.   10.75673 (50) obj. 24421.5 iterations 114
Cbc0038I Pass  47: suminf.    7.62025 (42) obj. 24421.5 iterations 59
Cbc0038I Pass  48: suminf.    3.61916 (45) obj. 24421.5 iterations 44
Cbc0038I Pass  49: suminf.    2.40504 (47) obj. 24421.5 iterations 21
Cbc0038I Pass  50: suminf.    6.76199 (48) obj. 24421.5 iterations 81
Cbc0038I Pass  51: suminf.    2.64783 (43) obj. 24421.5 iterations 36
Cbc0038I Pass  52: suminf.    5.28087 (40) obj. 24421.5 iterations 38
Cbc0038I Pass  53: suminf.    5.43723 (49) obj. 24421.5 iterations 54
Cbc0038I Pass  54: suminf.    4.89549 (38) obj. 24421.5 iterations 109
Cbc0038I Pass  55: suminf.    4.85804 (41) obj. 24421.5 iterations 48
Cbc0038I Pass  56: suminf.    6.27593 (41) obj. 24421.5 iterations 134
Cbc0038I Pass  57: suminf.    5.05035 (46) obj. 24421.5 iterations 57
Cbc0038I Pass  58: suminf.    5.03081 (46) obj. 24421.5 iterations 8
Cbc0038I Pass  59: suminf.    2.28476 (49) obj. 24421.5 iterations 53
Cbc0038I Pass  60: suminf.    2.25869 (49) obj. 24421.5 iterations 11
Cbc0038I Pass  61: suminf.    9.51839 (54) obj. 24421.5 iterations 140
Cbc0038I Pass  62: suminf.    4.87747 (49) obj. 24421.5 iterations 59
Cbc0038I Pass  63: suminf.    3.74329 (44) obj. 24421.5 iterations 32
Cbc0038I Pass  64: suminf.    7.61898 (44) obj. 24421.5 iterations 66
Cbc0038I Pass  65: suminf.    4.34385 (49) obj. 24421.5 iterations 37
Cbc0038I Pass  66: suminf.    9.46656 (44) obj. 24421.5 iterations 123
Cbc0038I Pass  67: suminf.    5.24138 (41) obj. 24421.5 iterations 49
Cbc0038I Pass  68: suminf.    2.44345 (46) obj. 24421.5 iterations 96
Cbc0038I Pass  69: suminf.    2.40504 (47) obj. 24421.5 iterations 29
Cbc0038I Pass  70: suminf.   16.51384 (73) obj. 24421.5 iterations 139
Cbc0038I Pass  71: suminf.    9.14607 (51) obj. 24421.5 iterations 80
Cbc0038I Pass  72: suminf.    6.08546 (45) obj. 24421.5 iterations 46
Cbc0038I Pass  73: suminf.    4.67514 (47) obj. 24421.5 iterations 41
Cbc0038I Pass  74: suminf.    2.92296 (47) obj. 24421.5 iterations 63
Cbc0038I Pass  75: suminf.    2.03944 (48) obj. 24421.5 iterations 52
Cbc0038I Pass  76: suminf.    5.27708 (49) obj. 24421.5 iterations 39
Cbc0038I Pass  77: suminf.   24.98546 (125) obj. 24421.5 iterations 256
Cbc0038I Pass  78: suminf.   12.00075 (89) obj. 24421.5 iterations 182
Cbc0038I Pass  79: suminf.   10.53016 (84) obj. 24421.5 iterations 12
Cbc0038I Pass  80: suminf.    6.27027 (74) obj. 24421.5 iterations 89
Cbc0038I Pass  81: suminf.    6.27027 (74) obj. 24421.5 iterations 3
Cbc0038I Pass  82: suminf.    8.39181 (66) obj. 24421.5 iterations 64
Cbc0038I Pass  83: suminf.    5.00025 (64) obj. 24421.5 iterations 35
Cbc0038I Pass  84: suminf.    2.73830 (58) obj. 24421.5 iterations 37
Cbc0038I Pass  85: suminf.    2.50230 (55) obj. 24421.5 iterations 25
Cbc0038I Pass  86: suminf.    6.41591 (65) obj. 24421.5 iterations 84
Cbc0038I Pass  87: suminf.    3.13305 (56) obj. 24421.5 iterations 58
Cbc0038I Pass  88: suminf.    3.07813 (55) obj. 24421.5 iterations 27
Cbc0038I Pass  89: suminf.    2.26370 (54) obj. 24421.5 iterations 28
Cbc0038I Pass  90: suminf.    3.41686 (63) obj. 24421.5 iterations 35
Cbc0038I Pass  91: suminf.   17.13267 (117) obj. 24421.5 iterations 179
Cbc0038I Pass  92: suminf.    6.11812 (77) obj. 24421.5 iterations 81
Cbc0038I Pass  93: suminf.    6.11812 (77) obj. 24421.5 iterations 0
Cbc0038I Pass  94: suminf.    6.02414 (60) obj. 24421.5 iterations 51
Cbc0038I Pass  95: suminf.    2.84547 (58) obj. 24421.5 iterations 10
Cbc0038I Pass  96: suminf.    2.73003 (57) obj. 24421.5 iterations 9
Cbc0038I Pass  97: suminf.   10.92025 (77) obj. 24421.5 iterations 112
Cbc0038I Pass  98: suminf.    5.74208 (60) obj. 24421.5 iterations 54
Cbc0038I Pass  99: suminf.    5.46188 (61) obj. 24421.5 iterations 10
Cbc0038I Pass 100: suminf.    6.00285 (53) obj. 24421.5 iterations 63
Cbc0038I Pass 101: suminf.    4.96306 (57) obj. 24421.5 iterations 33
Cbc0038I Pass 102: suminf.   10.35684 (71) obj. 24421.5 iterations 80
Cbc0038I Pass 103: suminf.    5.74208 (60) obj. 24421.5 iterations 33
Cbc0038I Pass 104: suminf.    5.46188 (61) obj. 24421.5 iterations 10
Cbc0038I Pass 105: suminf.    4.98797 (53) obj. 24421.5 iterations 61
Cbc0038I Pass 106: suminf.    4.96306 (57) obj. 24421.5 iterations 30
Cbc0038I Pass 107: suminf.   22.14233 (134) obj. 24421.5 iterations 201
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1000 rows 329 columns, reduced to 895 rows 280 columns - 26 fixed gives 707, 218 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.51 seconds)
Cbc0038I After 0.51 seconds - Feasibility pump exiting with objective of 24576 - took 0.47 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.51 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from 23040 to 23040 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 95 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 24576, took 0 iterations and 0 nodes (0.55 seconds)
Cbc0035I Maximum depth 0, 16 variables fixed on reduced cost
Cuts at root node changed objective from 23040 to 23040
Probing was tried 1 times and created 117 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             0.56
Time (Wallclock seconds):       0.57

Total time (CPU seconds):       0.57   (Wallclock seconds):       0.58

