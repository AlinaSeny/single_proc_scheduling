Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_50_default_input.lp sec 1800 solve solu solutions/new_tr/jump_3_50_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 53377.3 - 11.62 seconds
Cgl0002I 612 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 643 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0004I processed model has 6914 rows, 2008 columns (2008 integer (1957 of which binary)) and 23260 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2008 objects (2008 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1283 integers unsatisfied sum - 335.154
Cbc0038I Pass   1: (16.81 seconds) suminf.  127.36662 (948) obj. 78651.4 iterations 5301
Cbc0038I Pass   2: (17.26 seconds) suminf.  108.96149 (969) obj. 82795.2 iterations 1156
Cbc0038I Pass   3: (17.44 seconds) suminf.  108.41636 (916) obj. 82744.2 iterations 379
Cbc0038I Pass   4: (17.62 seconds) suminf.  104.65385 (942) obj. 82745.8 iterations 377
Cbc0038I Pass   5: (17.86 seconds) suminf.   97.04925 (865) obj. 82486.3 iterations 571
Cbc0038I Pass   6: (18.00 seconds) suminf.   93.19095 (864) obj. 82406 iterations 274
Cbc0038I Pass   7: (18.24 seconds) suminf.   87.44925 (871) obj. 81982.5 iterations 595
Cbc0038I Pass   8: (18.41 seconds) suminf.   85.51854 (801) obj. 81902.4 iterations 407
Cbc0038I Pass   9: (18.50 seconds) suminf.   85.06051 (805) obj. 81892.1 iterations 200
Cbc0038I Pass  10: (18.93 seconds) suminf.   77.22090 (775) obj. 81127.1 iterations 1167
Cbc0038I Pass  11: (19.18 seconds) suminf.   75.88102 (750) obj. 78154.5 iterations 699
Cbc0038I Pass  12: (19.21 seconds) suminf.   75.87806 (752) obj. 78163.6 iterations 43
Cbc0038I Pass  13: (19.48 seconds) suminf.   66.67398 (745) obj. 77729.8 iterations 815
Cbc0038I Pass  14: (19.57 seconds) suminf.   62.50842 (730) obj. 77641.3 iterations 182
Cbc0038I Pass  15: (19.69 seconds) suminf.   61.55953 (720) obj. 77488.3 iterations 243
Cbc0038I Pass  16: (19.78 seconds) suminf.   61.56315 (716) obj. 77762.3 iterations 216
Cbc0038I Pass  17: (20.07 seconds) suminf.   63.42524 (714) obj. 81387.5 iterations 794
Cbc0038I Pass  18: (20.18 seconds) suminf.   62.88382 (735) obj. 82279.6 iterations 244
Cbc0038I Pass  19: (20.50 seconds) suminf.   64.27313 (692) obj. 83880.9 iterations 930
Cbc0038I Pass  20: (20.64 seconds) suminf.   63.08316 (713) obj. 83915.2 iterations 264
Cbc0038I Pass  21: (20.91 seconds) suminf.   55.94199 (701) obj. 88396.2 iterations 750
Cbc0038I Pass  22: (21.04 seconds) suminf.   55.52446 (719) obj. 87977.4 iterations 316
Cbc0038I Pass  23: (21.12 seconds) suminf.   56.36446 (697) obj. 87914.5 iterations 144
Cbc0038I Pass  24: (21.18 seconds) suminf.   55.47585 (697) obj. 87852.1 iterations 135
Cbc0038I Pass  25: (21.25 seconds) suminf.   55.27958 (692) obj. 87894.3 iterations 135
Cbc0038I Pass  26: (21.80 seconds) suminf.   82.13986 (770) obj. 80432.1 iterations 1546
Cbc0038I Pass  27: (22.22 seconds) suminf.   56.54910 (720) obj. 81034.1 iterations 1189
Cbc0038I Pass  28: (22.33 seconds) suminf.   54.71309 (731) obj. 80927.6 iterations 216
Cbc0038I Pass  29: (22.35 seconds) suminf.   54.32868 (735) obj. 80930.9 iterations 34
Cbc0038I Pass  30: (22.59 seconds) suminf.   53.27232 (671) obj. 80525.3 iterations 642
Cbc0038I Pass  31: (22.72 seconds) suminf.   51.16654 (707) obj. 80302.8 iterations 297
Cbc0038I Pass  32: (22.94 seconds) suminf.   52.95588 (698) obj. 80405.3 iterations 584
Cbc0038I Pass  33: (23.00 seconds) suminf.   51.91930 (713) obj. 80405.7 iterations 132
Cbc0038I Pass  34: (23.07 seconds) suminf.   50.02905 (702) obj. 80292.9 iterations 137
Cbc0038I Pass  35: (23.25 seconds) suminf.   53.28641 (703) obj. 84783 iterations 435
Cbc0038I Pass  36: (23.31 seconds) suminf.   53.44648 (709) obj. 84697 iterations 118
Cbc0038I Pass  37: (23.45 seconds) suminf.   50.97514 (726) obj. 84739.7 iterations 335
Cbc0038I Pass  38: (23.48 seconds) suminf.   50.70260 (715) obj. 84773.9 iterations 61
Cbc0038I Pass  39: (23.60 seconds) suminf.   51.76137 (705) obj. 84646.3 iterations 261
Cbc0038I Pass  40: (23.64 seconds) suminf.   51.61894 (745) obj. 84711.6 iterations 75
Cbc0038I Pass  41: (23.76 seconds) suminf.   50.61247 (688) obj. 84845.5 iterations 248
Cbc0038I Pass  42: (23.79 seconds) suminf.   50.37450 (691) obj. 84812.3 iterations 71
Cbc0038I Pass  43: (23.92 seconds) suminf.   49.39662 (672) obj. 84802.3 iterations 297
Cbc0038I Pass  44: (24.05 seconds) suminf.   48.61363 (691) obj. 84828.8 iterations 236
Cbc0038I Pass  45: (24.18 seconds) suminf.   52.52358 (678) obj. 84780.2 iterations 300
Cbc0038I Pass  46: (24.25 seconds) suminf.   50.17062 (722) obj. 84667.4 iterations 155
Cbc0038I Pass  47: (24.42 seconds) suminf.   50.62566 (677) obj. 84684 iterations 425
Cbc0038I Pass  48: (24.45 seconds) suminf.   50.69744 (679) obj. 84677.2 iterations 40
Cbc0038I Pass  49: (24.56 seconds) suminf.   48.90174 (681) obj. 84815.7 iterations 251
Cbc0038I Pass  50: (24.63 seconds) suminf.   49.21534 (671) obj. 84755.4 iterations 142
Cbc0038I Pass  51: (24.77 seconds) suminf.   47.60104 (737) obj. 84646.7 iterations 316
Cbc0038I Pass  52: (24.79 seconds) suminf.   47.09358 (695) obj. 84649.9 iterations 33
Cbc0038I Pass  53: (25.01 seconds) suminf.   53.76081 (660) obj. 84464.4 iterations 587
Cbc0038I Pass  54: (25.09 seconds) suminf.   52.37284 (679) obj. 84289.7 iterations 195
Cbc0038I Pass  55: (25.12 seconds) suminf.   51.97477 (677) obj. 84327.8 iterations 62
Cbc0038I Pass  56: (25.32 seconds) suminf.   51.99114 (644) obj. 89367 iterations 489
Cbc0038I Pass  57: (25.51 seconds) suminf.   48.79749 (635) obj. 91816.4 iterations 438
Cbc0038I Pass  58: (25.71 seconds) suminf.   47.83890 (657) obj. 91691.6 iterations 466
Cbc0038I Pass  59: (25.80 seconds) suminf.   47.67118 (644) obj. 91690.1 iterations 169
Cbc0038I Pass  60: (25.84 seconds) suminf.   46.75482 (645) obj. 91708.6 iterations 55
Cbc0038I Pass  61: (26.05 seconds) suminf.   46.07749 (604) obj. 91793 iterations 503
Cbc0038I Pass  62: (26.21 seconds) suminf.   44.58427 (595) obj. 91749.1 iterations 293
Cbc0038I Pass  63: (26.43 seconds) suminf.   43.28735 (603) obj. 91631.5 iterations 529
Cbc0038I Pass  64: (26.50 seconds) suminf.   44.85207 (590) obj. 91630.5 iterations 134
Cbc0038I Pass  65: (26.71 seconds) suminf.   42.84054 (595) obj. 91473.2 iterations 502
Cbc0038I Pass  66: (26.89 seconds) suminf.   38.30314 (577) obj. 91470.6 iterations 388
Cbc0038I Pass  67: (27.10 seconds) suminf.   39.64261 (550) obj. 91563 iterations 527
Cbc0038I Pass  68: (27.18 seconds) suminf.   39.44299 (546) obj. 91568 iterations 164
Cbc0038I Pass  69: (27.30 seconds) suminf.   38.37360 (532) obj. 91568.5 iterations 268
Cbc0038I Pass  70: (27.40 seconds) suminf.   38.14373 (530) obj. 91567 iterations 209
Cbc0038I Pass  71: (27.57 seconds) suminf.   36.01620 (517) obj. 91595.9 iterations 419
Cbc0038I Pass  72: (27.58 seconds) suminf.   36.15406 (513) obj. 91596.8 iterations 13
Cbc0038I Pass  73: (27.73 seconds) suminf.   39.10433 (532) obj. 96043.4 iterations 361
Cbc0038I Pass  74: (27.79 seconds) suminf.   37.38612 (523) obj. 95650.2 iterations 136
Cbc0038I Pass  75: (27.98 seconds) suminf.   33.56998 (480) obj. 90497.2 iterations 532
Cbc0038I Pass  76: (27.99 seconds) suminf.   33.46520 (482) obj. 90497.2 iterations 27
Cbc0038I Pass  77: (28.18 seconds) suminf.   31.12896 (482) obj. 90499.5 iterations 567
Cbc0038I Pass  78: (28.18 seconds) suminf.   31.12896 (482) obj. 90499.5 iterations 0
Cbc0038I Pass  79: (28.49 seconds) suminf.   30.56989 (468) obj. 90440.5 iterations 954
Cbc0038I Pass  80: (28.62 seconds) suminf.   29.92180 (447) obj. 90442.3 iterations 271
Cbc0038I Pass  81: (28.81 seconds) suminf.   31.61985 (438) obj. 86016 iterations 594
Cbc0038I Pass  82: (28.84 seconds) suminf.   30.91862 (434) obj. 86016 iterations 54
Cbc0038I Pass  83: (29.03 seconds) suminf.   29.58669 (409) obj. 86016 iterations 621
Cbc0038I Pass  84: (29.11 seconds) suminf.   30.06047 (421) obj. 86016 iterations 187
Cbc0038I Pass  85: (29.26 seconds) suminf.   27.47301 (423) obj. 86016 iterations 416
Cbc0038I Pass  86: (29.27 seconds) suminf.   27.55635 (424) obj. 86016 iterations 10
Cbc0038I Pass  87: (29.40 seconds) suminf.   28.65657 (416) obj. 86016 iterations 347
Cbc0038I Pass  88: (29.47 seconds) suminf.   28.99484 (404) obj. 86016 iterations 156
Cbc0038I Pass  89: (29.56 seconds) suminf.   26.12588 (405) obj. 86016 iterations 235
Cbc0038I Pass  90: (29.72 seconds) suminf.   28.31671 (402) obj. 92432.8 iterations 454
Cbc0038I Pass  91: (29.83 seconds) suminf.   27.04825 (391) obj. 93183.4 iterations 243
Cbc0038I Pass  92: (29.86 seconds) suminf.   25.20126 (383) obj. 93182.8 iterations 99
Cbc0038I Pass  93: (30.00 seconds) suminf.   26.59325 (375) obj. 92891.1 iterations 374
Cbc0038I Pass  94: (30.06 seconds) suminf.   26.49329 (366) obj. 93045.5 iterations 162
Cbc0038I Pass  95: (30.15 seconds) suminf.   25.73715 (327) obj. 92814.9 iterations 271
Cbc0038I Pass  96: (30.16 seconds) suminf.   25.80020 (328) obj. 92814.4 iterations 3
Cbc0038I Pass  97: (30.24 seconds) suminf.   22.05970 (301) obj. 92688.3 iterations 210
Cbc0038I Pass  98: (30.25 seconds) suminf.   22.05970 (301) obj. 92688.3 iterations 0
Cbc0038I Pass  99: (30.35 seconds) suminf.   17.69502 (260) obj. 92723.5 iterations 259
Cbc0038I Pass 100: (30.78 seconds) suminf.   81.97677 (483) obj. 93720.2 iterations 1513
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 270 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6914 rows 2008 columns, reduced to 5677 rows 1622 columns - too large
Cbc0038I Mini branch and bound did not improve solution (39.06 seconds)
Cbc0038I After 39.06 seconds - Feasibility pump exiting - took 24.67 seconds
Cbc0031I 34 added rows had average density of 106.11765
Cbc0013I At root node, 34 cuts changed objective from 53625.712 to 53835.327 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 52 row cuts average 114.9 elements, 0 column cuts (0 active)  in 1.865 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 60 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53836 (47.93 seconds)
Cbc0010I After 100 nodes, 29 on tree, 1e+50 best solution, best possible 53838 (223.72 seconds)
Cbc0010I After 200 nodes, 35 on tree, 1e+50 best solution, best possible 53838 (468.75 seconds)
Cbc0010I After 300 nodes, 43 on tree, 1e+50 best solution, best possible 53838 (699.51 seconds)
Cbc0010I After 400 nodes, 43 on tree, 1e+50 best solution, best possible 53838 (906.17 seconds)
Cbc0010I After 500 nodes, 64 on tree, 1e+50 best solution, best possible 53838 (1107.78 seconds)
Cbc0010I After 600 nodes, 69 on tree, 1e+50 best solution, best possible 53838 (1282.90 seconds)
Cbc0010I After 700 nodes, 77 on tree, 1e+50 best solution, best possible 53838 (1479.17 seconds)
Cbc0010I After 800 nodes, 87 on tree, 1e+50 best solution, best possible 53838 (1658.53 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53838), took 1652818 iterations and 871 nodes (1799.39 seconds)
Cbc0032I Strong branching done 8292 times (773016 iterations), fathomed 28 nodes and fixed 63 variables
Cbc0035I Maximum depth 126, 0 variables fixed on reduced cost
Cuts at root node changed objective from 53625.7 to 53836
Probing was tried 12 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.175 seconds)
Gomory was tried 157 times and created 76 cuts of which 0 were active after adding rounds of cuts (5.421 seconds)
Knapsack was tried 157 times and created 173 cuts of which 0 were active after adding rounds of cuts (0.363 seconds)
Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
TwoMirCuts was tried 12 times and created 60 cuts of which 0 were active after adding rounds of cuts (0.723 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.145 seconds)
ImplicationCuts was tried 31 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53838.000
Enumerated nodes:               871
Total iterations:               1652818
Time (CPU seconds):             1799.39
Time (Wallclock seconds):       1799.73

Total time (CPU seconds):       1799.43   (Wallclock seconds):       1799.77

