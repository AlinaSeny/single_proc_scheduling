Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump30_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump30_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 29902.8 - 0.50 seconds
Cgl0002I 155 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 366 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 2424 rows, 772 columns (772 integer (741 of which binary)) and 8172 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 772 objects (772 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 336 integers unsatisfied sum - 78.2986
Cbc0038I Pass   1: suminf.   40.71120 (291) obj. 39337.7 iterations 1041
Cbc0038I Pass   2: suminf.   36.11551 (282) obj. 44635.9 iterations 177
Cbc0038I Pass   3: suminf.   35.80308 (311) obj. 44532.6 iterations 140
Cbc0038I Pass   4: suminf.   34.01584 (335) obj. 43973.1 iterations 133
Cbc0038I Pass   5: suminf.   30.74286 (315) obj. 43858.3 iterations 145
Cbc0038I Pass   6: suminf.   29.48637 (296) obj. 46286 iterations 222
Cbc0038I Pass   7: suminf.   26.89720 (305) obj. 48102.2 iterations 129
Cbc0038I Pass   8: suminf.   26.69698 (299) obj. 48109.4 iterations 30
Cbc0038I Pass   9: suminf.   28.58058 (264) obj. 47646.6 iterations 121
Cbc0038I Pass  10: suminf.   27.51429 (284) obj. 47657 iterations 59
Cbc0038I Pass  11: suminf.   27.88655 (286) obj. 47705.2 iterations 5
Cbc0038I Pass  12: suminf.   27.27656 (273) obj. 47051.6 iterations 194
Cbc0038I Pass  13: suminf.   25.82024 (253) obj. 47140 iterations 31
Cbc0038I Pass  14: suminf.   26.23904 (264) obj. 47245.3 iterations 91
Cbc0038I Pass  15: suminf.   21.70512 (250) obj. 46224.7 iterations 261
Cbc0038I Pass  16: suminf.   19.03315 (235) obj. 47738.7 iterations 137
Cbc0038I Pass  17: suminf.   19.33432 (209) obj. 49153.4 iterations 38
Cbc0038I Pass  18: suminf.   21.08067 (211) obj. 49394.8 iterations 74
Cbc0038I Pass  19: suminf.   20.77921 (215) obj. 49411.8 iterations 16
Cbc0038I Pass  20: suminf.   18.96407 (198) obj. 57890.4 iterations 265
Cbc0038I Pass  21: suminf.   16.27675 (198) obj. 58397 iterations 169
Cbc0038I Pass  22: suminf.   14.21281 (166) obj. 57594.2 iterations 300
Cbc0038I Pass  23: suminf.   12.91383 (154) obj. 57598.2 iterations 73
Cbc0038I Pass  24: suminf.   13.90691 (150) obj. 57304.7 iterations 275
Cbc0038I Pass  25: suminf.   13.90691 (150) obj. 57304.7 iterations 14
Cbc0038I Pass  26: suminf.   12.65036 (136) obj. 57289.9 iterations 97
Cbc0038I Pass  27: suminf.   12.40979 (137) obj. 57284.2 iterations 11
Cbc0038I Pass  28: suminf.   12.70897 (129) obj. 49591 iterations 392
Cbc0038I Pass  29: suminf.   12.00195 (138) obj. 50685.5 iterations 189
Cbc0038I Pass  30: suminf.   11.24027 (152) obj. 51219.2 iterations 159
Cbc0038I Pass  31: suminf.    8.57981 (130) obj. 50219.3 iterations 95
Cbc0038I Pass  32: suminf.    8.55176 (73) obj. 48200.1 iterations 643
Cbc0038I Pass  33: suminf.    5.03663 (87) obj. 52433.9 iterations 335
Cbc0038I Pass  34: suminf.    4.84674 (83) obj. 53318.5 iterations 93
Cbc0038I Pass  35: suminf.    4.31846 (77) obj. 54569.8 iterations 133
Cbc0038I Pass  36: suminf.    3.02979 (60) obj. 54780.5 iterations 64
Cbc0038I Pass  37: suminf.    2.98688 (60) obj. 49043.3 iterations 499
Cbc0038I Pass  38: suminf.    2.86565 (61) obj. 49030.4 iterations 28
Cbc0038I Pass  39: suminf.    3.09298 (67) obj. 50977.1 iterations 556
Cbc0038I Pass  40: suminf.    2.61255 (60) obj. 51200 iterations 86
Cbc0038I Pass  41: suminf.    5.69074 (57) obj. 50869.7 iterations 138
Cbc0038I Pass  42: suminf.    3.25248 (47) obj. 50995.2 iterations 38
Cbc0038I Pass  43: suminf.    3.25248 (47) obj. 50995.2 iterations 1
Cbc0038I Pass  44: suminf.    4.26464 (38) obj. 50995.2 iterations 175
Cbc0038I Pass  45: suminf.    2.16625 (38) obj. 50995.2 iterations 20
Cbc0038I Pass  46: suminf.    0.58997 (13) obj. 51200 iterations 135
Cbc0038I Pass  47: suminf.    0.58997 (13) obj. 51200 iterations 16
Cbc0038I Pass  48: suminf.    0.00000 (0) obj. 51200 iterations 118
Cbc0038I Solution found of 51200
Cbc0038I Cleaned solution of 51200
Cbc0038I Before mini branch and bound, 294 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1623 rows 478 columns - 69 fixed gives 1220, 343 - ok now
Cbc0038I Mini branch and bound did not improve solution (2.51 seconds)
Cbc0038I Round again with cutoff of 49077.7
Cbc0038I Pass  49: suminf.   40.71120 (291) obj. 39337.7 iterations 0
Cbc0038I Pass  50: suminf.   36.11551 (282) obj. 44635.9 iterations 202
Cbc0038I Pass  51: suminf.   35.80308 (311) obj. 44532.6 iterations 78
Cbc0038I Pass  52: suminf.   34.01584 (335) obj. 43973.1 iterations 97
Cbc0038I Pass  53: suminf.   30.74286 (315) obj. 43858.3 iterations 113
Cbc0038I Pass  54: suminf.   27.08381 (305) obj. 44017.9 iterations 199
Cbc0038I Pass  55: suminf.   26.86775 (303) obj. 44006 iterations 27
Cbc0038I Pass  56: suminf.   29.68937 (282) obj. 45477.6 iterations 177
Cbc0038I Pass  57: suminf.   27.48873 (282) obj. 46965.1 iterations 71
Cbc0038I Pass  58: suminf.   26.18373 (251) obj. 44048.3 iterations 218
Cbc0038I Pass  59: suminf.   23.77312 (255) obj. 44696.8 iterations 87
Cbc0038I Pass  60: suminf.   22.75187 (245) obj. 46625.7 iterations 187
Cbc0038I Pass  61: suminf.   21.31483 (229) obj. 48862.1 iterations 66
Cbc0038I Pass  62: suminf.   22.06304 (228) obj. 49077.7 iterations 179
Cbc0038I Pass  63: suminf.   18.88805 (204) obj. 49077.7 iterations 107
Cbc0038I Pass  64: suminf.   18.34323 (181) obj. 49077.7 iterations 104
Cbc0038I Pass  65: suminf.   16.85141 (183) obj. 49077.7 iterations 62
Cbc0038I Pass  66: suminf.   16.48927 (154) obj. 49077.7 iterations 199
Cbc0038I Pass  67: suminf.   16.27368 (159) obj. 49077.7 iterations 59
Cbc0038I Pass  68: suminf.   14.54093 (129) obj. 49077.7 iterations 98
Cbc0038I Pass  69: suminf.   13.83792 (127) obj. 49077.7 iterations 20
Cbc0038I Pass  70: suminf.   11.95954 (109) obj. 49077.7 iterations 111
Cbc0038I Pass  71: suminf.   10.92590 (113) obj. 49077.7 iterations 79
Cbc0038I Pass  72: suminf.   13.51738 (97) obj. 49077.7 iterations 176
Cbc0038I Pass  73: suminf.   11.79438 (91) obj. 49077.7 iterations 61
Cbc0038I Pass  74: suminf.   11.71096 (90) obj. 49077.7 iterations 9
Cbc0038I Pass  75: suminf.    7.88976 (87) obj. 49077.7 iterations 266
Cbc0038I Pass  76: suminf.    7.19410 (70) obj. 49077.7 iterations 34
Cbc0038I Pass  77: suminf.    7.00562 (70) obj. 49077.7 iterations 222
Cbc0038I Pass  78: suminf.    5.84645 (56) obj. 49077.7 iterations 43
Cbc0038I Pass  79: suminf.    4.53837 (59) obj. 49077.7 iterations 20
Cbc0038I Pass  80: suminf.    2.14915 (11) obj. 49077.7 iterations 77
Cbc0038I Pass  81: suminf.    2.14915 (11) obj. 49077.7 iterations 17
Cbc0038I Pass  82: suminf.    0.26510 (1) obj. 49077.7 iterations 62
Cbc0038I Solution found of 49077.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2425 rows 772 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 45056
Cbc0038I Before mini branch and bound, 304 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1596 rows 468 columns - 175 fixed gives 578, 180 - ok now
Cbc0038I Full problem 2424 rows 772 columns, reduced to 289 rows 99 columns
Cbc0038I Mini branch and bound did not improve solution (3.18 seconds)
Cbc0038I Round again with cutoff of 42041.3
Cbc0038I Pass  83: suminf.   40.71120 (291) obj. 39337.7 iterations 0
Cbc0038I Pass  84: suminf.   37.23962 (290) obj. 42041.3 iterations 181
Cbc0038I Pass  85: suminf.   34.08006 (318) obj. 42041.3 iterations 101
Cbc0038I Pass  86: suminf.   30.97358 (311) obj. 42041.3 iterations 110
Cbc0038I Pass  87: suminf.   31.57447 (285) obj. 42041.3 iterations 213
Cbc0038I Pass  88: suminf.   30.01288 (303) obj. 42041.3 iterations 127
Cbc0038I Pass  89: suminf.   30.04870 (303) obj. 42041.3 iterations 16
Cbc0038I Pass  90: suminf.   30.65008 (301) obj. 42041.3 iterations 41
Cbc0038I Pass  91: suminf.   29.78175 (300) obj. 42041.3 iterations 249
Cbc0038I Pass  92: suminf.   28.19459 (296) obj. 42041.3 iterations 83
Cbc0038I Pass  93: suminf.   28.74183 (290) obj. 42041.3 iterations 53
Cbc0038I Pass  94: suminf.   29.09583 (262) obj. 42041.3 iterations 301
Cbc0038I Pass  95: suminf.   27.50472 (259) obj. 42041.3 iterations 120
Cbc0038I Pass  96: suminf.   22.09887 (217) obj. 42041.3 iterations 308
Cbc0038I Pass  97: suminf.   21.27892 (215) obj. 42041.3 iterations 101
Cbc0038I Pass  98: suminf.   21.93065 (175) obj. 42041.3 iterations 432
Cbc0038I Pass  99: suminf.   18.98805 (160) obj. 42041.3 iterations 148
Cbc0038I Pass 100: suminf.   17.64343 (183) obj. 42041.3 iterations 51
Cbc0038I Pass 101: suminf.   15.44083 (169) obj. 42041.3 iterations 194
Cbc0038I Pass 102: suminf.   16.57681 (140) obj. 42041.3 iterations 198
Cbc0038I Pass 103: suminf.   15.94566 (140) obj. 42041.3 iterations 69
Cbc0038I Pass 104: suminf.   15.05784 (155) obj. 42041.3 iterations 45
Cbc0038I Pass 105: suminf.   11.36189 (112) obj. 42041.3 iterations 174
Cbc0038I Pass 106: suminf.   11.09224 (122) obj. 42041.3 iterations 66
Cbc0038I Pass 107: suminf.   14.03285 (116) obj. 42041.3 iterations 195
Cbc0038I Pass 108: suminf.   12.05444 (120) obj. 42041.3 iterations 52
Cbc0038I Pass 109: suminf.   12.05117 (121) obj. 42041.3 iterations 4
Cbc0038I Pass 110: suminf.    9.16223 (98) obj. 42041.3 iterations 174
Cbc0038I Pass 111: suminf.    9.02860 (95) obj. 42041.3 iterations 43
Cbc0038I Pass 112: suminf.    9.25456 (109) obj. 42041.3 iterations 124
Cbc0038I Pass 113: suminf.    8.31232 (109) obj. 42041.3 iterations 6
Cbc0038I Pass 114: suminf.    8.40017 (106) obj. 42041.3 iterations 9
Cbc0038I Pass 115: suminf.    8.17065 (84) obj. 42041.3 iterations 186
Cbc0038I Pass 116: suminf.    7.44666 (81) obj. 42041.3 iterations 108
Cbc0038I Pass 117: suminf.    9.03358 (78) obj. 42041.3 iterations 250
Cbc0038I Pass 118: suminf.    8.49604 (76) obj. 42041.3 iterations 73
Cbc0038I Pass 119: suminf.    8.50578 (76) obj. 42041.3 iterations 34
Cbc0038I Pass 120: suminf.    4.95549 (55) obj. 42041.3 iterations 148
Cbc0038I Pass 121: suminf.    3.59767 (53) obj. 42041.3 iterations 139
Cbc0038I Pass 122: suminf.    5.08669 (57) obj. 42041.3 iterations 150
Cbc0038I Pass 123: suminf.    3.65915 (39) obj. 42041.3 iterations 33
Cbc0038I Pass 124: suminf.    4.62939 (42) obj. 42041.3 iterations 117
Cbc0038I Pass 125: suminf.    2.70638 (22) obj. 42041.3 iterations 74
Cbc0038I Pass 126: suminf.    2.56372 (42) obj. 42041.3 iterations 137
Cbc0038I Pass 127: suminf.    1.87193 (33) obj. 42041.3 iterations 76
Cbc0038I Pass 128: suminf.    8.01290 (42) obj. 42041.3 iterations 87
Cbc0038I Pass 129: suminf.    3.14007 (33) obj. 42041.3 iterations 131
Cbc0038I Pass 130: suminf.    2.22021 (26) obj. 42041.3 iterations 22
Cbc0038I Pass 131: suminf.    2.64236 (28) obj. 42041.3 iterations 100
Cbc0038I Pass 132: suminf.    2.68845 (20) obj. 42041.3 iterations 71
Cbc0038I Pass 133: suminf.    2.19147 (26) obj. 42041.3 iterations 126
Cbc0038I Pass 134: suminf.    1.88755 (34) obj. 42041.3 iterations 72
Cbc0038I Pass 135: suminf.    9.37830 (44) obj. 42041.3 iterations 172
Cbc0038I Pass 136: suminf.    6.99843 (32) obj. 42041.3 iterations 81
Cbc0038I Pass 137: suminf.    6.68211 (31) obj. 42041.3 iterations 11
Cbc0038I Pass 138: suminf.    6.96897 (59) obj. 42041.3 iterations 165
Cbc0038I Pass 139: suminf.    6.96897 (59) obj. 42041.3 iterations 0
Cbc0038I Pass 140: suminf.   11.45784 (79) obj. 42041.3 iterations 210
Cbc0038I Pass 141: suminf.   10.67192 (83) obj. 42041.3 iterations 20
Cbc0038I Pass 142: suminf.    7.02587 (66) obj. 42041.3 iterations 165
Cbc0038I Pass 143: suminf.    5.49363 (43) obj. 42041.3 iterations 142
Cbc0038I Pass 144: suminf.    5.61494 (34) obj. 42041.3 iterations 7
Cbc0038I Pass 145: suminf.    5.80604 (32) obj. 42041.3 iterations 116
Cbc0038I Pass 146: suminf.    5.32281 (28) obj. 42041.3 iterations 147
Cbc0038I Pass 147: suminf.    5.46387 (46) obj. 42041.3 iterations 267
Cbc0038I Pass 148: suminf.    3.08486 (49) obj. 42041.3 iterations 122
Cbc0038I Pass 149: suminf.    2.88550 (10) obj. 42041.3 iterations 117
Cbc0038I Pass 150: suminf.    2.88550 (10) obj. 42041.3 iterations 10
Cbc0038I Pass 151: suminf.    0.91107 (12) obj. 42041.3 iterations 33
Cbc0038I Pass 152: suminf.   48.59047 (265) obj. 42041.3 iterations 638
Cbc0038I Pass 153: suminf.   31.13981 (208) obj. 42041.3 iterations 318
Cbc0038I Pass 154: suminf.   29.76926 (202) obj. 42041.3 iterations 48
Cbc0038I Pass 155: suminf.   29.82278 (200) obj. 42041.3 iterations 12
Cbc0038I Pass 156: suminf.   22.02070 (187) obj. 42041.3 iterations 95
Cbc0038I Pass 157: suminf.   22.13355 (195) obj. 42041.3 iterations 16
Cbc0038I Pass 158: suminf.   18.56958 (160) obj. 42041.3 iterations 198
Cbc0038I Pass 159: suminf.   16.31496 (145) obj. 42041.3 iterations 54
Cbc0038I Pass 160: suminf.   15.28415 (147) obj. 42041.3 iterations 15
Cbc0038I Pass 161: suminf.   16.53673 (141) obj. 42041.3 iterations 81
Cbc0038I Pass 162: suminf.   11.84961 (131) obj. 42041.3 iterations 61
Cbc0038I Pass 163: suminf.   13.16454 (116) obj. 42041.3 iterations 141
Cbc0038I Pass 164: suminf.    9.86468 (114) obj. 42041.3 iterations 61
Cbc0038I Pass 165: suminf.    9.35955 (94) obj. 42041.3 iterations 109
Cbc0038I Pass 166: suminf.    6.95925 (92) obj. 42041.3 iterations 85
Cbc0038I Pass 167: suminf.    6.95925 (92) obj. 42041.3 iterations 5
Cbc0038I Pass 168: suminf.   10.03083 (83) obj. 42041.3 iterations 71
Cbc0038I Pass 169: suminf.    8.45027 (80) obj. 42041.3 iterations 12
Cbc0038I Pass 170: suminf.   11.32262 (96) obj. 42041.3 iterations 116
Cbc0038I Pass 171: suminf.    6.22769 (67) obj. 42041.3 iterations 64
Cbc0038I Pass 172: suminf.    8.73878 (50) obj. 42041.3 iterations 108
Cbc0038I Pass 173: suminf.    3.96362 (38) obj. 42041.3 iterations 58
Cbc0038I Pass 174: suminf.    0.78465 (7) obj. 42041.3 iterations 63
Cbc0038I Pass 175: suminf.    0.78465 (7) obj. 42041.3 iterations 8
Cbc0038I Pass 176: suminf.    2.77836 (7) obj. 42041.3 iterations 20
Cbc0038I Pass 177: suminf.   56.66537 (258) obj. 42041.3 iterations 670
Cbc0038I Pass 178: suminf.   31.52913 (168) obj. 42041.3 iterations 419
Cbc0038I Pass 179: suminf.   28.31733 (153) obj. 42041.3 iterations 137
Cbc0038I Pass 180: suminf.   27.76871 (154) obj. 42041.3 iterations 61
Cbc0038I Pass 181: suminf.   25.36525 (157) obj. 42041.3 iterations 69
Cbc0038I Pass 182: suminf.   60.97680 (356) obj. 42041.3 iterations 771
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 139 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2424 rows 772 columns, reduced to 2020 rows 633 columns - 234 fixed gives 896, 253 - ok now
Cbc0038I Mini branch and bound did not improve solution (4.69 seconds)
Cbc0038I After 4.69 seconds - Feasibility pump exiting with objective of 45056 - took 3.35 seconds
Cbc0012I Integer solution of 45056 found by feasibility pump after 0 iterations and 0 nodes (4.69 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1295 rows 351 columns - 139 fixed gives 264, 61 - ok now
Cbc0031I 76 added rows had average density of 46.105263
Cbc0013I At root node, 76 cuts changed objective from 29986.348 to 31483.894 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 38 row cuts average 9.1 elements, 4 column cuts (4 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 392.6 elements, 0 column cuts (0 active)  in 0.326 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 521 row cuts average 71.2 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 45056 best solution, best possible 31484 (12.29 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1640 rows 482 columns - 201 fixed gives 561, 129 - ok now
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1705 rows 497 columns - 213 fixed gives 544, 121 - ok now
Cbc0010I After 100 nodes, 3 on tree, 45056 best solution, best possible 31964.763 (47.55 seconds)
Cbc0010I After 200 nodes, 4 on tree, 45056 best solution, best possible 31964.763 (61.94 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 522 rows 161 columns
Cbc0010I After 300 nodes, 20 on tree, 45056 best solution, best possible 31964.763 (80.96 seconds)
Cbc0010I After 400 nodes, 15 on tree, 45056 best solution, best possible 31964.763 (99.06 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1338 rows 368 columns - 147 fixed gives 212, 50 - ok now
Cbc0010I After 500 nodes, 4 on tree, 45056 best solution, best possible 31964.763 (113.99 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 848 rows 252 columns
Cbc0010I After 600 nodes, 4 on tree, 45056 best solution, best possible 31964.763 (128.61 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 775 rows 237 columns
Cbc0010I After 700 nodes, 5 on tree, 45056 best solution, best possible 31964.763 (144.35 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1739 rows 505 columns - 224 fixed gives 493, 107 - ok now
Cbc0010I After 800 nodes, 3 on tree, 45056 best solution, best possible 31964.763 (156.54 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 667 rows 203 columns
Cbc0010I After 900 nodes, 5 on tree, 45056 best solution, best possible 31964.763 (171.48 seconds)
Cbc0010I After 1000 nodes, 4 on tree, 45056 best solution, best possible 31964.763 (188.66 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1338 rows 363 columns - 143 fixed gives 299, 76 - ok now
Cbc0010I After 1100 nodes, 7 on tree, 45056 best solution, best possible 31964.763 (204.74 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 633 rows 193 columns
Cbc0010I After 1200 nodes, 15 on tree, 45056 best solution, best possible 31964.763 (217.40 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 45056 best solution, best possible 31964.763 (231.03 seconds)
Cbc0010I After 1400 nodes, 20 on tree, 45056 best solution, best possible 31964.763 (247.10 seconds)
Cbc0010I After 1500 nodes, 23 on tree, 45056 best solution, best possible 31964.763 (266.91 seconds)
Cbc0010I After 1600 nodes, 28 on tree, 45056 best solution, best possible 31964.763 (281.84 seconds)
Cbc0010I After 1700 nodes, 32 on tree, 45056 best solution, best possible 31964.763 (291.31 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1799 rows 518 columns - 236 fixed gives 496, 107 - ok now
Cbc0010I After 1800 nodes, 33 on tree, 45056 best solution, best possible 31964.763 (298.89 seconds)
Cbc0010I After 1900 nodes, 33 on tree, 45056 best solution, best possible 31964.763 (308.55 seconds)
Cbc0010I After 2000 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (317.52 seconds)
Cbc0010I After 2100 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (325.04 seconds)
Cbc0010I After 2200 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (333.53 seconds)
Cbc0010I After 2300 nodes, 37 on tree, 45056 best solution, best possible 31964.763 (342.82 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 806 rows 241 columns
Cbc0010I After 2400 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (353.57 seconds)
Cbc0010I After 2500 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (362.39 seconds)
Cbc0010I After 2600 nodes, 37 on tree, 45056 best solution, best possible 31964.763 (370.97 seconds)
Cbc0010I After 2700 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (380.04 seconds)
Cbc0010I After 2800 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (389.96 seconds)
Cbc0010I After 2900 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (399.54 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 745 rows 224 columns
Cbc0010I After 3000 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (411.17 seconds)
Cbc0010I After 3100 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (421.71 seconds)
Cbc0010I After 3200 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (432.81 seconds)
Cbc0010I After 3300 nodes, 37 on tree, 45056 best solution, best possible 31964.763 (442.19 seconds)
Cbc0010I After 3400 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (451.83 seconds)
Cbc0010I After 3500 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (460.98 seconds)
Cbc0010I After 3600 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (470.14 seconds)
Cbc0010I After 3700 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (478.93 seconds)
Cbc0010I After 3800 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (487.26 seconds)
Cbc0010I After 3900 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (494.84 seconds)
Cbc0010I After 4000 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (504.61 seconds)
Cbc0010I After 4100 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (514.59 seconds)
Cbc0010I After 4200 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (524.60 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1697 rows 493 columns - 220 fixed gives 468, 104 - ok now
Cbc0010I After 4300 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (535.44 seconds)
Cbc0010I After 4400 nodes, 37 on tree, 45056 best solution, best possible 31964.763 (545.18 seconds)
Cbc0010I After 4500 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (553.79 seconds)
Cbc0010I After 4600 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (564.03 seconds)
Cbc0010I After 4700 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (572.27 seconds)
Cbc0010I After 4800 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (581.69 seconds)
Cbc0010I After 4900 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (590.32 seconds)
Cbc0010I After 5000 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (599.42 seconds)
Cbc0010I After 5100 nodes, 37 on tree, 45056 best solution, best possible 31964.763 (609.64 seconds)
Cbc0010I After 5200 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (619.19 seconds)
Cbc0010I After 5300 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (629.45 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 806 rows 241 columns
Cbc0010I After 5400 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (638.57 seconds)
Cbc0010I After 5500 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (645.99 seconds)
Cbc0010I After 5600 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (652.93 seconds)
Cbc0010I After 5700 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (661.08 seconds)
Cbc0010I After 5800 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (668.85 seconds)
Cbc0010I After 5900 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (676.11 seconds)
Cbc0010I After 6000 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (685.11 seconds)
Cbc0010I After 6100 nodes, 35 on tree, 45056 best solution, best possible 31964.763 (693.72 seconds)
Cbc0010I After 6200 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (703.27 seconds)
Cbc0010I After 6300 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (712.90 seconds)
Cbc0010I After 6400 nodes, 34 on tree, 45056 best solution, best possible 31964.763 (722.77 seconds)
Cbc0010I After 6500 nodes, 36 on tree, 45056 best solution, best possible 31964.763 (733.74 seconds)
Cbc0010I After 6600 nodes, 40 on tree, 45056 best solution, best possible 31964.763 (743.54 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1623 rows 473 columns - 206 fixed gives 503, 110 - ok now
Cbc0010I After 6700 nodes, 41 on tree, 45056 best solution, best possible 31964.763 (751.77 seconds)
Cbc0010I After 6800 nodes, 48 on tree, 45056 best solution, best possible 31964.763 (760.80 seconds)
Cbc0010I After 6900 nodes, 50 on tree, 45056 best solution, best possible 31964.763 (767.94 seconds)
Cbc0010I After 7000 nodes, 51 on tree, 45056 best solution, best possible 31964.763 (778.48 seconds)
Cbc0010I After 7100 nodes, 51 on tree, 45056 best solution, best possible 31964.763 (786.24 seconds)
Cbc0010I After 7200 nodes, 52 on tree, 45056 best solution, best possible 31964.763 (794.78 seconds)
Cbc0010I After 7300 nodes, 50 on tree, 45056 best solution, best possible 31964.763 (805.77 seconds)
Cbc0010I After 7400 nodes, 52 on tree, 45056 best solution, best possible 31964.763 (815.87 seconds)
Cbc0010I After 7500 nodes, 55 on tree, 45056 best solution, best possible 31964.763 (825.68 seconds)
Cbc0010I After 7600 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (832.84 seconds)
Cbc0010I After 7700 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (842.34 seconds)
Cbc0010I After 7800 nodes, 56 on tree, 45056 best solution, best possible 31964.763 (849.31 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 760 rows 229 columns
Cbc0010I After 7900 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (856.60 seconds)
Cbc0010I After 8000 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (864.02 seconds)
Cbc0010I After 8100 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (871.68 seconds)
Cbc0010I After 8200 nodes, 60 on tree, 45056 best solution, best possible 31964.763 (880.37 seconds)
Cbc0010I After 8300 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (887.85 seconds)
Cbc0010I After 8400 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (895.64 seconds)
Cbc0010I After 8500 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (903.12 seconds)
Cbc0010I After 8600 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (911.56 seconds)
Cbc0010I After 8700 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (919.21 seconds)
Cbc0010I After 8800 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (926.82 seconds)
Cbc0010I After 8900 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (933.61 seconds)
Cbc0010I After 9000 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (941.03 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 773 rows 232 columns
Cbc0010I After 9100 nodes, 56 on tree, 45056 best solution, best possible 31964.763 (949.17 seconds)
Cbc0010I After 9200 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (957.24 seconds)
Cbc0010I After 9300 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (964.63 seconds)
Cbc0010I After 9400 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (972.85 seconds)
Cbc0010I After 9500 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (980.26 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1743 rows 499 columns - 227 fixed gives 471, 105 - ok now
Cbc0010I After 9600 nodes, 57 on tree, 45056 best solution, best possible 31964.763 (987.10 seconds)
Cbc0010I After 9700 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (994.48 seconds)
Cbc0010I After 9800 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1004.04 seconds)
Cbc0010I After 9900 nodes, 62 on tree, 45056 best solution, best possible 31964.763 (1012.41 seconds)
Cbc0010I After 10000 nodes, 59 on tree, 45056 best solution, best possible 31964.763 (1020.64 seconds)
Cbc0010I After 10100 nodes, 61 on tree, 45056 best solution, best possible 31964.763 (1028.27 seconds)
Cbc0010I After 10200 nodes, 61 on tree, 45056 best solution, best possible 31964.763 (1035.71 seconds)
Cbc0010I After 10300 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1044.05 seconds)
Cbc0010I After 10400 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1052.01 seconds)
Cbc0010I After 10500 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1061.49 seconds)
Cbc0010I After 10600 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1071.36 seconds)
Cbc0010I After 10700 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1079.74 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 638 rows 197 columns
Cbc0010I After 10800 nodes, 63 on tree, 45056 best solution, best possible 31964.763 (1088.47 seconds)
Cbc0010I After 10900 nodes, 58 on tree, 45056 best solution, best possible 31964.763 (1097.25 seconds)
Cbc0010I After 11000 nodes, 60 on tree, 45056 best solution, best possible 31964.763 (1105.11 seconds)
Cbc0010I After 11100 nodes, 47 on tree, 45056 best solution, best possible 33917 (1115.90 seconds)
Cbc0010I After 11200 nodes, 30 on tree, 45056 best solution, best possible 33980 (1128.00 seconds)
Cbc0010I After 11300 nodes, 17 on tree, 45056 best solution, best possible 34696 (1140.58 seconds)
Cbc0010I After 11400 nodes, 4 on tree, 45056 best solution, best possible 35134 (1152.46 seconds)
Cbc0010I After 11500 nodes, 3 on tree, 45056 best solution, best possible 35347 (1161.74 seconds)
Cbc0010I After 11600 nodes, 3 on tree, 45056 best solution, best possible 35361 (1169.75 seconds)
Cbc0010I After 11700 nodes, 1 on tree, 45056 best solution, best possible 35377 (1177.69 seconds)
Cbc0010I After 11800 nodes, 2 on tree, 45056 best solution, best possible 35392 (1185.18 seconds)
Cbc0010I After 11900 nodes, 3 on tree, 45056 best solution, best possible 35409 (1193.95 seconds)
Cbc0010I After 12000 nodes, 4 on tree, 45056 best solution, best possible 35425 (1201.70 seconds)
Cbc0010I After 12100 nodes, 3 on tree, 45056 best solution, best possible 35441 (1209.37 seconds)
Cbc0010I After 12200 nodes, 1 on tree, 45056 best solution, best possible 35458 (1217.08 seconds)
Cbc0010I After 12300 nodes, 2 on tree, 45056 best solution, best possible 35473 (1225.51 seconds)
Cbc0010I After 12400 nodes, 3 on tree, 45056 best solution, best possible 35485 (1234.38 seconds)
Cbc0010I After 12500 nodes, 3 on tree, 45056 best solution, best possible 35498 (1242.50 seconds)
Cbc0010I After 12600 nodes, 1 on tree, 45056 best solution, best possible 35513 (1249.41 seconds)
Cbc0010I After 12700 nodes, 2 on tree, 45056 best solution, best possible 35526 (1258.91 seconds)
Cbc0010I After 12800 nodes, 2 on tree, 45056 best solution, best possible 35540 (1267.36 seconds)
Cbc0010I After 12900 nodes, 2 on tree, 45056 best solution, best possible 35555 (1274.53 seconds)
Cbc0010I After 13000 nodes, 2 on tree, 45056 best solution, best possible 35572 (1283.91 seconds)
Cbc0010I After 13100 nodes, 4 on tree, 45056 best solution, best possible 35588 (1291.65 seconds)
Cbc0010I After 13200 nodes, 3 on tree, 45056 best solution, best possible 35603 (1299.18 seconds)
Cbc0010I After 13300 nodes, 3 on tree, 45056 best solution, best possible 35618 (1306.75 seconds)
Cbc0010I After 13400 nodes, 3 on tree, 45056 best solution, best possible 35634 (1314.64 seconds)
Cbc0010I After 13500 nodes, 2 on tree, 45056 best solution, best possible 35649 (1323.45 seconds)
Cbc0010I After 13600 nodes, 2 on tree, 45056 best solution, best possible 35659 (1332.30 seconds)
Cbc0010I After 13700 nodes, 6 on tree, 45056 best solution, best possible 35659 (1341.31 seconds)
Cbc0010I After 13800 nodes, 7 on tree, 45056 best solution, best possible 35659 (1349.38 seconds)
Cbc0010I After 13900 nodes, 10 on tree, 45056 best solution, best possible 35659 (1356.99 seconds)
Cbc0010I After 14000 nodes, 11 on tree, 45056 best solution, best possible 35659 (1364.79 seconds)
Cbc0010I After 14100 nodes, 3 on tree, 45056 best solution, best possible 35740 (1373.77 seconds)
Cbc0010I After 14200 nodes, 1 on tree, 45056 best solution, best possible 35757 (1381.43 seconds)
Cbc0010I After 14300 nodes, 1 on tree, 45056 best solution, best possible 35772 (1389.41 seconds)
Cbc0038I Full problem 2424 rows 772 columns, reduced to 1566 rows 454 columns - 195 fixed gives 482, 109 - ok now
Cbc0010I After 14400 nodes, 1 on tree, 45056 best solution, best possible 35783 (1399.31 seconds)
Cbc0010I After 14500 nodes, 1 on tree, 45056 best solution, best possible 35797 (1407.69 seconds)
Cbc0010I After 14600 nodes, 1 on tree, 45056 best solution, best possible 35811 (1414.67 seconds)
Cbc0010I After 14700 nodes, 2 on tree, 45056 best solution, best possible 35824 (1423.03 seconds)
Cbc0010I After 14800 nodes, 3 on tree, 45056 best solution, best possible 35838 (1430.80 seconds)
Cbc0004I Integer solution of 35840 found after 7629767 iterations and 14850 nodes (1433.71 seconds)
Cbc0001I Search completed - best objective 35840, took 7629767 iterations and 14850 nodes (1433.73 seconds)
Cbc0032I Strong branching done 26972 times (2182612 iterations), fathomed 476 nodes and fixed 836 variables
Cbc0035I Maximum depth 2150, 0 variables fixed on reduced cost
Cuts at root node changed objective from 29986.3 to 31484
Probing was tried 2009 times and created 83304 cuts of which 0 were active after adding rounds of cuts (5.153 seconds)
Gomory was tried 1155 times and created 3845 cuts of which 0 were active after adding rounds of cuts (3.697 seconds)
Knapsack was tried 14 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 14 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 1155 times and created 15503 cuts of which 0 were active after adding rounds of cuts (1.641 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)

Result - Optimal solution found

Objective value:                35840.00000000
Enumerated nodes:               14850
Total iterations:               7629767
Time (CPU seconds):             1433.82
Time (Wallclock seconds):       1434.49

Total time (CPU seconds):       1433.83   (Wallclock seconds):       1434.50

