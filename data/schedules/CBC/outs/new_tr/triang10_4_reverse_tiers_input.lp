Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_4_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang10_4_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 387 - 0.43 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1600 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 461 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 6698 rows, 2298 columns (2298 integer (2243 of which binary)) and 22013 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 702 integers unsatisfied sum - 123.587
Cbc0038I Pass   1: (3.30 seconds) suminf.   44.16596 (460) obj. 464.73 iterations 2519
Cbc0038I Pass   2: (3.33 seconds) suminf.   42.67916 (449) obj. 465.488 iterations 91
Cbc0038I Pass   3: (3.36 seconds) suminf.   41.90570 (451) obj. 465.923 iterations 41
Cbc0038I Pass   4: (3.44 seconds) suminf.   34.94442 (431) obj. 470.876 iterations 195
Cbc0038I Pass   5: (3.46 seconds) suminf.   34.95832 (430) obj. 470.885 iterations 65
Cbc0038I Pass   6: (3.55 seconds) suminf.   27.59824 (377) obj. 471.019 iterations 236
Cbc0038I Pass   7: (3.56 seconds) suminf.   27.50370 (380) obj. 471.058 iterations 11
Cbc0038I Pass   8: (3.65 seconds) suminf.   24.78023 (353) obj. 458.991 iterations 274
Cbc0038I Pass   9: (3.67 seconds) suminf.   22.85798 (347) obj. 459.932 iterations 50
Cbc0038I Pass  10: (3.69 seconds) suminf.   20.98692 (332) obj. 460.25 iterations 55
Cbc0038I Pass  11: (3.70 seconds) suminf.   20.94765 (331) obj. 460.226 iterations 7
Cbc0038I Pass  12: (3.72 seconds) suminf.   20.75914 (302) obj. 460.358 iterations 37
Cbc0038I Pass  13: (3.74 seconds) suminf.   18.69461 (290) obj. 460.338 iterations 39
Cbc0038I Pass  14: (3.83 seconds) suminf.   15.14786 (251) obj. 532.231 iterations 376
Cbc0038I Pass  15: (3.84 seconds) suminf.   15.14786 (251) obj. 532.231 iterations 33
Cbc0038I Pass  16: (3.87 seconds) suminf.   14.05338 (238) obj. 532.985 iterations 86
Cbc0038I Pass  17: (3.88 seconds) suminf.   14.05338 (238) obj. 532.985 iterations 10
Cbc0038I Pass  18: (3.91 seconds) suminf.   12.19214 (218) obj. 532.205 iterations 130
Cbc0038I Pass  19: (3.92 seconds) suminf.   12.19214 (218) obj. 532.205 iterations 17
Cbc0038I Pass  20: (3.97 seconds) suminf.   11.31044 (197) obj. 533.693 iterations 240
Cbc0038I Pass  21: (3.99 seconds) suminf.    9.30985 (196) obj. 533.698 iterations 92
Cbc0038I Pass  22: (4.07 seconds) suminf.    8.44468 (170) obj. 533.728 iterations 394
Cbc0038I Pass  23: (4.08 seconds) suminf.    8.44468 (170) obj. 533.728 iterations 10
Cbc0038I Pass  24: (4.12 seconds) suminf.    7.52967 (142) obj. 496.212 iterations 221
Cbc0038I Pass  25: (4.14 seconds) suminf.    5.25641 (140) obj. 491 iterations 72
Cbc0038I Pass  26: (4.17 seconds) suminf.    4.59844 (122) obj. 491 iterations 145
Cbc0038I Pass  27: (4.18 seconds) suminf.    4.59844 (122) obj. 491 iterations 14
Cbc0038I Pass  28: (4.19 seconds) suminf.    4.43193 (88) obj. 491 iterations 74
Cbc0038I Pass  29: (4.20 seconds) suminf.    4.43193 (88) obj. 491 iterations 7
Cbc0038I Pass  30: (4.43 seconds) suminf.    2.81824 (83) obj. 491 iterations 1057
Cbc0038I Pass  31: (4.46 seconds) suminf.    0.49174 (47) obj. 491 iterations 75
Cbc0038I Pass  32: (4.48 seconds) suminf.    0.00000 (0) obj. 491 iterations 62
Cbc0038I Solution found of 491
Cbc0038I Cleaned solution of 491
Cbc0038I Before mini branch and bound, 1393 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 1371 rows 432 columns
Cbc0038I Mini branch and bound improved solution from 491 to 427 (6.57 seconds)
Cbc0038I Round again with cutoff of 422.1
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 2
Cbc0038I Pass  33: (6.62 seconds) suminf.   45.12868 (450) obj. 422 iterations 87
Cbc0038I Pass  34: (6.66 seconds) suminf.   44.13920 (454) obj. 422.1 iterations 125
Cbc0038I Pass  35: (6.67 seconds) suminf.   43.64495 (455) obj. 422.1 iterations 14
Cbc0038I Pass  36: (6.74 seconds) suminf.   39.91335 (417) obj. 422.1 iterations 219
Cbc0038I Pass  37: (6.76 seconds) suminf.   39.49844 (421) obj. 422.1 iterations 34
Cbc0038I Pass  38: (6.86 seconds) suminf.   32.87203 (407) obj. 422.1 iterations 366
Cbc0038I Pass  39: (6.88 seconds) suminf.   32.85764 (401) obj. 422.1 iterations 53
Cbc0038I Pass  40: (6.95 seconds) suminf.   29.39708 (384) obj. 419.369 iterations 219
Cbc0038I Pass  41: (6.98 seconds) suminf.   27.87080 (387) obj. 419.544 iterations 93
Cbc0038I Pass  42: (7.03 seconds) suminf.   25.40608 (327) obj. 420.411 iterations 210
Cbc0038I Pass  43: (7.06 seconds) suminf.   23.39712 (321) obj. 422.1 iterations 108
Cbc0038I Pass  44: (7.07 seconds) suminf.   23.39712 (321) obj. 422.1 iterations 5
Cbc0038I Pass  45: (7.14 seconds) suminf.   21.55075 (318) obj. 422.1 iterations 316
Cbc0038I Pass  46: (7.16 seconds) suminf.   21.48253 (313) obj. 422.1 iterations 42
Cbc0038I Pass  47: (7.18 seconds) suminf.   23.72056 (311) obj. 422.1 iterations 72
Cbc0038I Pass  48: (7.19 seconds) suminf.   22.51760 (313) obj. 422.1 iterations 42
Cbc0038I Pass  49: (7.23 seconds) suminf.   20.07066 (315) obj. 422.1 iterations 142
Cbc0038I Pass  50: (7.24 seconds) suminf.   19.91520 (314) obj. 422.1 iterations 16
Cbc0038I Pass  51: (7.26 seconds) suminf.   19.90437 (310) obj. 422.1 iterations 86
Cbc0038I Pass  52: (7.30 seconds) suminf.   20.02808 (299) obj. 422.1 iterations 143
Cbc0038I Pass  53: (7.34 seconds) suminf.   14.57787 (272) obj. 422.1 iterations 187
Cbc0038I Pass  54: (7.36 seconds) suminf.   13.47064 (273) obj. 422.1 iterations 58
Cbc0038I Pass  55: (7.41 seconds) suminf.   15.59104 (225) obj. 422.1 iterations 240
Cbc0038I Pass  56: (7.44 seconds) suminf.   15.01338 (219) obj. 422.1 iterations 84
Cbc0038I Pass  57: (7.49 seconds) suminf.   13.96502 (220) obj. 422.1 iterations 285
Cbc0038I Pass  58: (7.51 seconds) suminf.   14.06125 (241) obj. 422.1 iterations 46
Cbc0038I Pass  59: (7.55 seconds) suminf.   16.79764 (253) obj. 422.1 iterations 177
Cbc0038I Pass  60: (7.57 seconds) suminf.   14.86459 (256) obj. 422.1 iterations 70
Cbc0038I Pass  61: (7.62 seconds) suminf.   13.37517 (219) obj. 422.1 iterations 224
Cbc0038I Pass  62: (7.64 seconds) suminf.   12.22485 (219) obj. 422.1 iterations 52
Cbc0038I Pass  63: (7.66 seconds) suminf.   12.32231 (229) obj. 422.1 iterations 80
Cbc0038I Pass  64: (7.70 seconds) suminf.   10.55642 (202) obj. 422.1 iterations 162
Cbc0038I Pass  65: (7.71 seconds) suminf.   10.47195 (199) obj. 422.1 iterations 9
Cbc0038I Pass  66: (7.75 seconds) suminf.    9.04991 (201) obj. 422.1 iterations 168
Cbc0038I Pass  67: (7.76 seconds) suminf.    8.50616 (200) obj. 422.1 iterations 56
Cbc0038I Pass  68: (7.84 seconds) suminf.    9.46671 (169) obj. 422.1 iterations 346
Cbc0038I Pass  69: (7.86 seconds) suminf.    8.33695 (183) obj. 422.1 iterations 82
Cbc0038I Pass  70: (7.91 seconds) suminf.   10.23914 (174) obj. 422.1 iterations 258
Cbc0038I Pass  71: (7.93 seconds) suminf.    7.14918 (159) obj. 422.1 iterations 60
Cbc0038I Pass  72: (7.96 seconds) suminf.    7.98021 (130) obj. 422.1 iterations 175
Cbc0038I Pass  73: (7.97 seconds) suminf.    7.98021 (130) obj. 422.1 iterations 9
Cbc0038I Pass  74: (8.01 seconds) suminf.    6.51765 (85) obj. 422.1 iterations 211
Cbc0038I Pass  75: (8.01 seconds) suminf.    6.51765 (85) obj. 422.1 iterations 1
Cbc0038I Pass  76: (8.08 seconds) suminf.    5.85043 (77) obj. 422.1 iterations 428
Cbc0038I Pass  77: (8.10 seconds) suminf.    5.53924 (81) obj. 422.1 iterations 56
Cbc0038I Pass  78: (8.17 seconds) suminf.    1.03007 (45) obj. 422.1 iterations 360
Cbc0038I Pass  79: (8.18 seconds) suminf.    1.03556 (61) obj. 422.1 iterations 63
Cbc0038I Pass  80: (8.26 seconds) suminf.    0.94029 (61) obj. 422.1 iterations 506
Cbc0038I Pass  81: (8.28 seconds) suminf.    0.88406 (59) obj. 422.1 iterations 81
Cbc0038I Pass  82: (8.30 seconds) suminf.    3.86249 (52) obj. 422.1 iterations 120
Cbc0038I Pass  83: (8.31 seconds) suminf.    1.21155 (48) obj. 422.1 iterations 35
Cbc0038I Pass  84: (8.35 seconds) suminf.    0.47097 (22) obj. 422.1 iterations 177
Cbc0038I Pass  85: (8.36 seconds) suminf.    0.46973 (22) obj. 422.1 iterations 13
Cbc0038I Pass  86: (8.39 seconds) suminf.    0.37648 (15) obj. 422.1 iterations 155
Cbc0038I Pass  87: (8.40 seconds) suminf.    0.37648 (15) obj. 422.1 iterations 6
Cbc0038I Pass  88: (8.42 seconds) suminf.    0.35118 (29) obj. 422.1 iterations 108
Cbc0038I Pass  89: (8.45 seconds) suminf.    0.91142 (29) obj. 422.1 iterations 138
Cbc0038I Pass  90: (8.47 seconds) suminf.    0.74771 (27) obj. 422.1 iterations 76
Cbc0038I Pass  91: (8.49 seconds) suminf.    0.50065 (19) obj. 422.1 iterations 71
Cbc0038I Pass  92: (8.50 seconds) suminf.    0.42548 (36) obj. 422.1 iterations 51
Cbc0038I Pass  93: (8.53 seconds) suminf.    0.79714 (18) obj. 422.1 iterations 103
Cbc0038I Pass  94: (8.54 seconds) suminf.    0.56555 (19) obj. 422.1 iterations 33
Cbc0038I Pass  95: (8.68 seconds) suminf.    0.62705 (34) obj. 422.1 iterations 718
Cbc0038I Pass  96: (8.69 seconds) suminf.    0.62705 (34) obj. 422.1 iterations 0
Cbc0038I Pass  97: (8.73 seconds) suminf.    3.13369 (43) obj. 422.1 iterations 220
Cbc0038I Pass  98: (8.92 seconds) suminf.    0.69291 (29) obj. 422.1 iterations 719
Cbc0038I Pass  99: (8.94 seconds) suminf.    0.69193 (29) obj. 422.1 iterations 86
Cbc0038I Pass 100: (8.98 seconds) suminf.    0.35241 (14) obj. 422.1 iterations 86
Cbc0038I Pass 101: (8.99 seconds) suminf.    0.10009 (1) obj. 422.1 iterations 37
Cbc0038I Solution found of 422.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 412
Cbc0038I Before mini branch and bound, 1351 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 3468 rows 941 columns - 151 fixed gives 2682, 588 - ok now
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 560 rows 188 columns
Cbc0038I Mini branch and bound did not improve solution (9.93 seconds)
Cbc0038I Round again with cutoff of 406.2
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass 102: (9.97 seconds) suminf.   46.66525 (447) obj. 406.2 iterations 56
Cbc0038I Pass 103: (10.05 seconds) suminf.   45.36155 (426) obj. 406.2 iterations 316
Cbc0038I Pass 104: (10.08 seconds) suminf.   44.19640 (425) obj. 406.2 iterations 101
Cbc0038I Pass 105: (10.14 seconds) suminf.   39.55387 (414) obj. 406.2 iterations 213
Cbc0038I Pass 106: (10.18 seconds) suminf.   38.56112 (417) obj. 406.2 iterations 128
Cbc0038I Pass 107: (10.28 seconds) suminf.   33.21664 (397) obj. 406.2 iterations 419
Cbc0038I Pass 108: (10.29 seconds) suminf.   32.87786 (400) obj. 406.2 iterations 13
Cbc0038I Pass 109: (10.38 seconds) suminf.   29.71947 (369) obj. 406.2 iterations 309
Cbc0038I Pass 110: (10.40 seconds) suminf.   29.44897 (395) obj. 406.2 iterations 58
Cbc0038I Pass 111: (10.47 seconds) suminf.   29.37279 (357) obj. 406.2 iterations 243
Cbc0038I Pass 112: (10.50 seconds) suminf.   27.56594 (384) obj. 406.2 iterations 97
Cbc0038I Pass 113: (10.58 seconds) suminf.   25.71633 (336) obj. 406.2 iterations 284
Cbc0038I Pass 114: (10.61 seconds) suminf.   20.69546 (311) obj. 406.2 iterations 127
Cbc0038I Pass 115: (10.63 seconds) suminf.   19.47929 (302) obj. 406.2 iterations 36
Cbc0038I Pass 116: (10.66 seconds) suminf.   21.58589 (301) obj. 406.2 iterations 115
Cbc0038I Pass 117: (10.68 seconds) suminf.   19.70556 (300) obj. 406.2 iterations 56
Cbc0038I Pass 118: (10.75 seconds) suminf.   21.16205 (290) obj. 406.2 iterations 337
Cbc0038I Pass 119: (10.79 seconds) suminf.   16.86703 (279) obj. 406.2 iterations 235
Cbc0038I Pass 120: (10.87 seconds) suminf.   16.37737 (259) obj. 406.2 iterations 335
Cbc0038I Pass 121: (10.90 seconds) suminf.   15.35065 (261) obj. 406.2 iterations 144
Cbc0038I Pass 122: (11.02 seconds) suminf.    9.06386 (190) obj. 406.2 iterations 569
Cbc0038I Pass 123: (11.04 seconds) suminf.    7.44174 (195) obj. 406.2 iterations 127
Cbc0038I Pass 124: (11.08 seconds) suminf.    9.96998 (186) obj. 406.2 iterations 196
Cbc0038I Pass 125: (11.09 seconds) suminf.    9.62189 (182) obj. 406.2 iterations 14
Cbc0038I Pass 126: (11.15 seconds) suminf.    8.79252 (139) obj. 406.2 iterations 327
Cbc0038I Pass 127: (11.17 seconds) suminf.    5.50189 (150) obj. 406.2 iterations 69
Cbc0038I Pass 128: (11.21 seconds) suminf.   10.42568 (104) obj. 406.2 iterations 225
Cbc0038I Pass 129: (11.23 seconds) suminf.    8.38360 (100) obj. 406.2 iterations 111
Cbc0038I Pass 130: (11.26 seconds) suminf.    8.55198 (120) obj. 406.2 iterations 85
Cbc0038I Pass 131: (11.29 seconds) suminf.    5.99917 (111) obj. 406.2 iterations 197
Cbc0038I Pass 132: (11.32 seconds) suminf.    3.98029 (112) obj. 406.2 iterations 125
Cbc0038I Pass 133: (11.36 seconds) suminf.    9.25432 (119) obj. 406.2 iterations 209
Cbc0038I Pass 134: (11.37 seconds) suminf.    9.48739 (119) obj. 406.2 iterations 40
Cbc0038I Pass 135: (11.42 seconds) suminf.   10.41796 (123) obj. 406.2 iterations 220
Cbc0038I Pass 136: (11.43 seconds) suminf.   10.28760 (121) obj. 406.2 iterations 26
Cbc0038I Pass 137: (11.47 seconds) suminf.    6.29364 (94) obj. 406.2 iterations 204
Cbc0038I Pass 138: (11.48 seconds) suminf.    6.18891 (95) obj. 406.2 iterations 15
Cbc0038I Pass 139: (11.51 seconds) suminf.    6.07423 (100) obj. 406.2 iterations 128
Cbc0038I Pass 140: (11.51 seconds) suminf.    6.07423 (100) obj. 406.2 iterations 5
Cbc0038I Pass 141: (11.60 seconds) suminf.    1.96571 (41) obj. 406.2 iterations 302
Cbc0038I Pass 142: (11.61 seconds) suminf.    1.96571 (41) obj. 406.2 iterations 4
Cbc0038I Pass 143: (11.63 seconds) suminf.    3.82219 (35) obj. 406.2 iterations 65
Cbc0038I Pass 144: (11.75 seconds) suminf.    5.22095 (88) obj. 406.2 iterations 388
Cbc0038I Pass 145: (11.77 seconds) suminf.    4.32744 (79) obj. 406.2 iterations 73
Cbc0038I Pass 146: (11.80 seconds) suminf.    9.54420 (96) obj. 406.2 iterations 227
Cbc0038I Pass 147: (11.82 seconds) suminf.    5.82335 (90) obj. 406.2 iterations 43
Cbc0038I Pass 148: (11.92 seconds) suminf.    4.48298 (76) obj. 406.2 iterations 436
Cbc0038I Pass 149: (11.93 seconds) suminf.    3.72078 (76) obj. 406.2 iterations 24
Cbc0038I Pass 150: (11.96 seconds) suminf.    5.32085 (58) obj. 406.2 iterations 154
Cbc0038I Pass 151: (11.98 seconds) suminf.    4.03700 (72) obj. 406.2 iterations 79
Cbc0038I Pass 152: (12.08 seconds) suminf.    3.47617 (60) obj. 406.2 iterations 491
Cbc0038I Pass 153: (12.10 seconds) suminf.    3.47617 (60) obj. 406.2 iterations 38
Cbc0038I Pass 154: (12.14 seconds) suminf.    6.42910 (60) obj. 406.2 iterations 216
Cbc0038I Pass 155: (12.16 seconds) suminf.    3.59464 (53) obj. 406.2 iterations 57
Cbc0038I Pass 156: (12.27 seconds) suminf.    1.59989 (106) obj. 406.2 iterations 464
Cbc0038I Pass 157: (12.28 seconds) suminf.    1.58783 (103) obj. 406.2 iterations 15
Cbc0038I Pass 158: (12.34 seconds) suminf.    5.81451 (106) obj. 406.2 iterations 236
Cbc0038I Pass 159: (12.35 seconds) suminf.    5.13772 (110) obj. 406.2 iterations 21
Cbc0038I Pass 160: (12.39 seconds) suminf.    3.03117 (73) obj. 406.2 iterations 212
Cbc0038I Pass 161: (12.40 seconds) suminf.    1.62787 (64) obj. 406.2 iterations 21
Cbc0038I Pass 162: (12.48 seconds) suminf.    9.09272 (65) obj. 406.2 iterations 319
Cbc0038I Pass 163: (12.50 seconds) suminf.    8.24073 (71) obj. 406.2 iterations 105
Cbc0038I Pass 164: (12.53 seconds) suminf.    4.77884 (80) obj. 406.2 iterations 174
Cbc0038I Pass 165: (12.55 seconds) suminf.    4.09722 (73) obj. 406.2 iterations 90
Cbc0038I Pass 166: (12.64 seconds) suminf.    8.39612 (63) obj. 406.2 iterations 482
Cbc0038I Pass 167: (12.66 seconds) suminf.    4.36964 (84) obj. 406.2 iterations 113
Cbc0038I Pass 168: (12.68 seconds) suminf.    4.62851 (70) obj. 406.2 iterations 100
Cbc0038I Pass 169: (12.72 seconds) suminf.    6.79611 (52) obj. 406.2 iterations 185
Cbc0038I Pass 170: (12.77 seconds) suminf.    2.44946 (79) obj. 406.2 iterations 238
Cbc0038I Pass 171: (12.82 seconds) suminf.   11.12198 (95) obj. 406.2 iterations 256
Cbc0038I Pass 172: (12.84 seconds) suminf.    8.02539 (92) obj. 406.2 iterations 57
Cbc0038I Pass 173: (12.85 seconds) suminf.    7.59214 (96) obj. 406.2 iterations 39
Cbc0038I Pass 174: (12.88 seconds) suminf.    3.99626 (96) obj. 406.2 iterations 137
Cbc0038I Pass 175: (12.89 seconds) suminf.    3.74630 (78) obj. 406.2 iterations 8
Cbc0038I Pass 176: (12.93 seconds) suminf.   12.13837 (67) obj. 406.2 iterations 196
Cbc0038I Pass 177: (12.99 seconds) suminf.    2.89905 (48) obj. 406.2 iterations 258
Cbc0038I Pass 178: (13.00 seconds) suminf.    2.33009 (48) obj. 406.2 iterations 14
Cbc0038I Pass 179: (13.32 seconds) suminf.    7.14460 (78) obj. 406.2 iterations 1333
Cbc0038I Pass 180: (13.34 seconds) suminf.    2.88726 (75) obj. 406.2 iterations 88
Cbc0038I Pass 181: (13.36 seconds) suminf.    2.63839 (49) obj. 406.2 iterations 80
Cbc0038I Pass 182: (13.53 seconds) suminf.    6.56373 (97) obj. 406.2 iterations 738
Cbc0038I Pass 183: (13.56 seconds) suminf.    5.62651 (94) obj. 406.2 iterations 139
Cbc0038I Pass 184: (13.59 seconds) suminf.    3.64939 (21) obj. 406.2 iterations 146
Cbc0038I Pass 185: (13.72 seconds) suminf.    1.20321 (31) obj. 406.2 iterations 460
Cbc0038I Pass 186: (13.81 seconds) suminf.    3.43753 (55) obj. 406.2 iterations 408
Cbc0038I Pass 187: (13.99 seconds) suminf.    7.08495 (104) obj. 406.2 iterations 751
Cbc0038I Pass 188: (14.02 seconds) suminf.    5.42236 (103) obj. 406.2 iterations 145
Cbc0038I Pass 189: (14.08 seconds) suminf.    4.56153 (49) obj. 406.2 iterations 243
Cbc0038I Pass 190: (14.11 seconds) suminf.    2.82575 (57) obj. 406.2 iterations 131
Cbc0038I Pass 191: (14.20 seconds) suminf.    5.91794 (80) obj. 406.2 iterations 380
Cbc0038I Pass 192: (14.33 seconds) suminf.    2.83524 (88) obj. 406.2 iterations 605
Cbc0038I Pass 193: (14.41 seconds) suminf.   10.01064 (112) obj. 406.2 iterations 300
Cbc0038I Pass 194: (14.58 seconds) suminf.    2.44407 (49) obj. 406.2 iterations 626
Cbc0038I Pass 195: (14.59 seconds) suminf.    2.44407 (49) obj. 406.2 iterations 2
Cbc0038I Pass 196: (14.68 seconds) suminf.    3.39545 (85) obj. 406.2 iterations 292
Cbc0038I Pass 197: (14.71 seconds) suminf.    2.83524 (88) obj. 406.2 iterations 141
Cbc0038I Pass 198: (14.76 seconds) suminf.    4.98425 (86) obj. 406.2 iterations 242
Cbc0038I Pass 199: (14.78 seconds) suminf.    3.84401 (75) obj. 406.2 iterations 73
Cbc0038I Pass 200: (14.83 seconds) suminf.    9.13191 (83) obj. 406.2 iterations 253
Cbc0038I Pass 201: (15.17 seconds) suminf.   69.08916 (442) obj. 406.2 iterations 1449
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1131 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 3950 rows 1164 columns - 173 fixed gives 2972, 713 - ok now
Cbc0038I Mini branch and bound did not improve solution (15.94 seconds)
Cbc0038I After 15.94 seconds - Feasibility pump exiting with objective of 412 - took 13.40 seconds
Cbc0012I Integer solution of 412 found by feasibility pump after 0 iterations and 0 nodes (15.94 seconds)
Cbc0031I 65 added rows had average density of 14.6
Cbc0013I At root node, 65 cuts changed objective from 387 to 387 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 476 row cuts average 2.1 elements, 8 column cuts (8 active)  in 0.229 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.944 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 64 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.379 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 58 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.536 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 412 best solution, best possible 387 (22.56 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 870 rows 257 columns
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 1045 rows 314 columns
Cbc0010I After 100 nodes, 8 on tree, 412 best solution, best possible 387 (185.38 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 822 rows 247 columns
Cbc0010I After 200 nodes, 8 on tree, 412 best solution, best possible 387 (233.08 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 496 rows 153 columns
Cbc0010I After 300 nodes, 12 on tree, 412 best solution, best possible 388 (320.73 seconds)
Cbc0010I After 400 nodes, 25 on tree, 412 best solution, best possible 388 (372.11 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 512 rows 166 columns
Cbc0010I After 500 nodes, 36 on tree, 412 best solution, best possible 388 (446.70 seconds)
Cbc0010I After 600 nodes, 54 on tree, 412 best solution, best possible 388 (497.57 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 721 rows 223 columns
Cbc0010I After 700 nodes, 61 on tree, 412 best solution, best possible 388 (541.31 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 539 rows 171 columns
Cbc0010I After 800 nodes, 73 on tree, 412 best solution, best possible 388 (579.51 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 516 rows 169 columns
Cbc0010I After 900 nodes, 69 on tree, 412 best solution, best possible 388 (616.92 seconds)
Cbc0010I After 1000 nodes, 63 on tree, 412 best solution, best possible 388 (658.95 seconds)
Cbc0010I After 1100 nodes, 59 on tree, 412 best solution, best possible 388 (711.25 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 789 rows 238 columns
Cbc0010I After 1200 nodes, 52 on tree, 412 best solution, best possible 388 (756.28 seconds)
Cbc0010I After 1300 nodes, 51 on tree, 412 best solution, best possible 388 (805.10 seconds)
Cbc0010I After 1400 nodes, 59 on tree, 412 best solution, best possible 388 (846.64 seconds)
Cbc0010I After 1500 nodes, 53 on tree, 412 best solution, best possible 388 (885.99 seconds)
Cbc0010I After 1600 nodes, 25 on tree, 412 best solution, best possible 388 (924.45 seconds)
Cbc0010I After 1700 nodes, 27 on tree, 412 best solution, best possible 388 (997.90 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 491 rows 149 columns
Cbc0010I After 1800 nodes, 16 on tree, 412 best solution, best possible 388 (1047.00 seconds)
Cbc0010I After 1900 nodes, 17 on tree, 412 best solution, best possible 388 (1088.60 seconds)
Cbc0010I After 2000 nodes, 7 on tree, 412 best solution, best possible 388 (1132.20 seconds)
Cbc0010I After 2100 nodes, 12 on tree, 412 best solution, best possible 389 (1174.04 seconds)
Cbc0010I After 2200 nodes, 12 on tree, 412 best solution, best possible 389 (1187.32 seconds)
Cbc0010I After 2300 nodes, 12 on tree, 412 best solution, best possible 389 (1206.23 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 603 rows 185 columns
Cbc0010I After 2400 nodes, 9 on tree, 412 best solution, best possible 389 (1222.74 seconds)
Cbc0010I After 2500 nodes, 20 on tree, 412 best solution, best possible 389 (1269.69 seconds)
Cbc0010I After 2600 nodes, 19 on tree, 412 best solution, best possible 389 (1299.05 seconds)
Cbc0010I After 2700 nodes, 18 on tree, 412 best solution, best possible 389 (1352.46 seconds)
Cbc0010I After 2800 nodes, 18 on tree, 412 best solution, best possible 389 (1382.86 seconds)
Cbc0010I After 2900 nodes, 23 on tree, 412 best solution, best possible 389 (1389.68 seconds)
Cbc0010I After 3000 nodes, 26 on tree, 412 best solution, best possible 389 (1400.58 seconds)
Cbc0010I After 3100 nodes, 31 on tree, 412 best solution, best possible 389 (1412.34 seconds)
Cbc0010I After 3200 nodes, 28 on tree, 412 best solution, best possible 389 (1428.26 seconds)
Cbc0010I After 3300 nodes, 19 on tree, 412 best solution, best possible 389 (1446.49 seconds)
Cbc0010I After 3400 nodes, 18 on tree, 412 best solution, best possible 389 (1468.42 seconds)
Cbc0010I After 3500 nodes, 25 on tree, 412 best solution, best possible 389 (1485.78 seconds)
Cbc0010I After 3600 nodes, 18 on tree, 412 best solution, best possible 389 (1501.63 seconds)
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 727 rows 220 columns
Cbc0010I After 3700 nodes, 21 on tree, 412 best solution, best possible 389 (1540.94 seconds)
Cbc0010I After 3800 nodes, 16 on tree, 412 best solution, best possible 389 (1562.68 seconds)
Cbc0010I After 3900 nodes, 20 on tree, 412 best solution, best possible 389 (1578.64 seconds)
Cbc0010I After 4000 nodes, 18 on tree, 412 best solution, best possible 389 (1590.56 seconds)
Cbc0010I After 4100 nodes, 14 on tree, 412 best solution, best possible 389 (1619.46 seconds)
Cbc0010I After 4200 nodes, 14 on tree, 412 best solution, best possible 389 (1644.13 seconds)
Cbc0010I After 4300 nodes, 13 on tree, 412 best solution, best possible 390 (1692.59 seconds)
Cbc0010I After 4400 nodes, 12 on tree, 412 best solution, best possible 390 (1704.79 seconds)
Cbc0010I After 4500 nodes, 19 on tree, 412 best solution, best possible 390 (1723.50 seconds)
Cbc0010I After 4600 nodes, 21 on tree, 412 best solution, best possible 390 (1744.05 seconds)
Cbc0010I After 4700 nodes, 12 on tree, 412 best solution, best possible 390 (1779.40 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 412 (best possible 390), took 3417923 iterations and 4769 nodes (1798.97 seconds)
Cbc0032I Strong branching done 24556 times (1610522 iterations), fathomed 358 nodes and fixed 1731 variables
Cbc0035I Maximum depth 58, 11 variables fixed on reduced cost
Cuts at root node changed objective from 387 to 387
Probing was tried 1152 times and created 128280 cuts of which 0 were active after adding rounds of cuts (5.424 seconds)
Gomory was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.944 seconds)
Knapsack was tried 569 times and created 4093 cuts of which 0 were active after adding rounds of cuts (1.321 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.379 seconds)
ZeroHalf was tried 10 times and created 58 cuts of which 0 were active after adding rounds of cuts (0.536 seconds)
ImplicationCuts was tried 108 times and created 124 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)

Result - Stopped on time limit

Objective value:                412.00000000
Lower bound:                    390.000
Gap:                            0.06
Enumerated nodes:               4769
Total iterations:               3417923
Time (CPU seconds):             1799.40
Time (Wallclock seconds):       1804.72

Total time (CPU seconds):       1799.45   (Wallclock seconds):       1804.77

