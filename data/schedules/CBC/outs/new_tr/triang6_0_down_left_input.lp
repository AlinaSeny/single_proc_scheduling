Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang6_0_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang6_0_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 246 - 0.01 seconds
Cgl0002I 269 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 199 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 767 rows, 276 columns (276 integer (255 of which binary)) and 2575 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 276 objects (276 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 102 integers unsatisfied sum - 24.0796
Cbc0038I Pass   1: suminf.   14.10102 (80) obj. 260 iterations 176
Cbc0038I Pass   2: suminf.   11.31471 (70) obj. 260 iterations 50
Cbc0038I Pass   3: suminf.   10.16824 (52) obj. 260 iterations 30
Cbc0038I Pass   4: suminf.    9.98021 (51) obj. 260 iterations 19
Cbc0038I Pass   5: suminf.    3.44890 (28) obj. 308.844 iterations 75
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. 298 iterations 40
Cbc0038I Solution found of 298
Cbc0038I Cleaned solution of 298
Cbc0038I Before mini branch and bound, 147 integers at bound fixed and 0 continuous
Cbc0038I Full problem 767 rows 276 columns, reduced to 427 rows 126 columns - 9 fixed gives 311, 84 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of 291.9
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   7: suminf.   14.10102 (80) obj. 260 iterations 0
Cbc0038I Pass   8: suminf.   11.31471 (70) obj. 260 iterations 70
Cbc0038I Pass   9: suminf.   10.16824 (52) obj. 260 iterations 31
Cbc0038I Pass  10: suminf.    9.98021 (51) obj. 260 iterations 15
Cbc0038I Pass  11: suminf.    3.35148 (28) obj. 291.9 iterations 105
Cbc0038I Pass  12: suminf.    0.90461 (17) obj. 291.9 iterations 19
Cbc0038I Pass  13: suminf.    2.51322 (17) obj. 291.9 iterations 30
Cbc0038I Pass  14: suminf.    1.66868 (12) obj. 291.9 iterations 27
Cbc0038I Pass  15: suminf.    0.94286 (14) obj. 291.9 iterations 16
Cbc0038I Pass  16: suminf.    3.41658 (20) obj. 291.9 iterations 30
Cbc0038I Pass  17: suminf.    0.81965 (16) obj. 291.9 iterations 25
Cbc0038I Pass  18: suminf.    3.49540 (23) obj. 291.9 iterations 25
Cbc0038I Pass  19: suminf.    3.76352 (16) obj. 291.9 iterations 44
Cbc0038I Pass  20: suminf.    0.82136 (16) obj. 291.9 iterations 32
Cbc0038I Pass  21: suminf.    2.50575 (17) obj. 291.9 iterations 24
Cbc0038I Pass  22: suminf.    0.09991 (1) obj. 291.9 iterations 14
Cbc0038I Solution found of 291.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 768 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 265
Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 767 rows 276 columns, reduced to 433 rows 129 columns - 55 fixed gives 61, 19 - ok now
Cbc0038I Full problem 767 rows 276 columns, reduced to 6 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of 260.4
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  23: suminf.   13.91142 (75) obj. 260 iterations 42
Cbc0038I Pass  24: suminf.   13.73597 (76) obj. 260.4 iterations 65
Cbc0038I Pass  25: suminf.    9.31968 (50) obj. 260 iterations 41
Cbc0038I Pass  26: suminf.    1.30632 (6) obj. 260.4 iterations 65
Cbc0038I Pass  27: suminf.    1.30632 (6) obj. 260.4 iterations 10
Cbc0038I Pass  28: suminf.    0.40008 (1) obj. 260.4 iterations 14
Cbc0038I Solution found of 260.4
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 768 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 260
Cbc0038I Before mini branch and bound, 141 integers at bound fixed and 0 continuous
Cbc0038I Full problem 767 rows 276 columns, reduced to 440 rows 132 columns - 58 fixed gives 57, 17 - ok now
Cbc0038I Full problem 767 rows 276 columns, reduced to 6 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of 255.1
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 4
Cbc0038I Pass  29: suminf.   13.75847 (76) obj. 255 iterations 12
Cbc0038I Pass  30: suminf.   13.81496 (72) obj. 255.1 iterations 75
Cbc0038I Pass  31: suminf.    6.24390 (54) obj. 255.1 iterations 78
Cbc0038I Pass  32: suminf.    7.11842 (50) obj. 255.1 iterations 15
Cbc0038I Pass  33: suminf.    6.89906 (44) obj. 255.1 iterations 23
Cbc0038I Pass  34: suminf.    4.59091 (28) obj. 255.1 iterations 20
Cbc0038I Pass  35: suminf.    6.41790 (33) obj. 255.1 iterations 65
Cbc0038I Pass  36: suminf.    5.35934 (35) obj. 255.1 iterations 38
Cbc0038I Pass  37: suminf.    6.75025 (44) obj. 255.1 iterations 63
Cbc0038I Pass  38: suminf.    6.06463 (44) obj. 255.1 iterations 39
Cbc0038I Pass  39: suminf.    7.90220 (41) obj. 255.1 iterations 55
Cbc0038I Pass  40: suminf.    6.27225 (39) obj. 255.1 iterations 37
Cbc0038I Pass  41: suminf.    5.65462 (40) obj. 255.1 iterations 3
Cbc0038I Pass  42: suminf.    5.67940 (40) obj. 255.1 iterations 39
Cbc0038I Pass  43: suminf.    5.03541 (36) obj. 255.1 iterations 26
Cbc0038I Pass  44: suminf.    7.62378 (42) obj. 255.1 iterations 52
Cbc0038I Pass  45: suminf.    4.52740 (39) obj. 255.1 iterations 52
Cbc0038I Pass  46: suminf.    4.52740 (39) obj. 255.1 iterations 1
Cbc0038I Pass  47: suminf.    9.03054 (46) obj. 255.1 iterations 44
Cbc0038I Pass  48: suminf.    6.34247 (41) obj. 255.1 iterations 41
Cbc0038I Pass  49: suminf.    5.57850 (41) obj. 255.1 iterations 16
Cbc0038I Pass  50: suminf.    6.66793 (44) obj. 255.1 iterations 85
Cbc0038I Pass  51: suminf.    5.22126 (40) obj. 255.1 iterations 39
Cbc0038I Pass  52: suminf.    7.78605 (43) obj. 255.1 iterations 72
Cbc0038I Pass  53: suminf.    6.15751 (41) obj. 255.1 iterations 31
Cbc0038I Pass  54: suminf.    9.77390 (40) obj. 255.1 iterations 78
Cbc0038I Pass  55: suminf.    8.85041 (39) obj. 255.1 iterations 32
Cbc0038I Pass  56: suminf.    5.96099 (38) obj. 255.1 iterations 73
Cbc0038I Pass  57: suminf.    4.62592 (34) obj. 255.1 iterations 39
Cbc0038I Pass  58: suminf.    4.79849 (23) obj. 255.1 iterations 80
Cbc0038I Pass  59: suminf.    4.06989 (27) obj. 255.1 iterations 40
Cbc0038I Pass  60: suminf.    5.47377 (24) obj. 255.1 iterations 90
Cbc0038I Pass  61: suminf.    5.48382 (23) obj. 255.1 iterations 7
Cbc0038I Pass  62: suminf.    5.57337 (27) obj. 255.1 iterations 61
Cbc0038I Pass  63: suminf.    5.57337 (27) obj. 255.1 iterations 5
Cbc0038I Pass  64: suminf.    2.77383 (29) obj. 255.1 iterations 57
Cbc0038I Pass  65: suminf.    0.66903 (10) obj. 255.1 iterations 12
Cbc0038I Pass  66: suminf.    2.53757 (6) obj. 255.1 iterations 15
Cbc0038I Pass  67: suminf.    0.10007 (1) obj. 255.1 iterations 9
Cbc0038I Solution found of 255.1
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 768 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 254
Cbc0038I Before mini branch and bound, 120 integers at bound fixed and 0 continuous
Cbc0038I Full problem 767 rows 276 columns, reduced to 484 rows 153 columns - 47 fixed gives 256, 72 - ok now
Cbc0038I Full problem 767 rows 276 columns, reduced to 138 rows 52 columns
Cbc0038I Mini branch and bound improved solution from 254 to 253 (0.28 seconds)
Cbc0038I Round again with cutoff of 250.2
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 5
Cbc0038I Pass  68: suminf.   13.96732 (87) obj. 250.2 iterations 11
Cbc0038I Pass  69: suminf.   14.09498 (91) obj. 250.2 iterations 74
Cbc0038I Pass  70: suminf.    6.10481 (50) obj. 250.2 iterations 115
Cbc0038I Pass  71: suminf.    5.98940 (53) obj. 250.2 iterations 5
Cbc0038I Pass  72: suminf.   12.72287 (62) obj. 250.2 iterations 107
Cbc0038I Pass  73: suminf.   10.11133 (60) obj. 250.2 iterations 37
Cbc0038I Pass  74: suminf.    9.69954 (59) obj. 250.2 iterations 32
Cbc0038I Pass  75: suminf.    6.36817 (44) obj. 250.2 iterations 69
Cbc0038I Pass  76: suminf.    5.65825 (41) obj. 250.2 iterations 12
Cbc0038I Pass  77: suminf.    5.23894 (41) obj. 250.2 iterations 19
Cbc0038I Pass  78: suminf.    3.36010 (27) obj. 250.2 iterations 62
Cbc0038I Pass  79: suminf.    3.35869 (27) obj. 250.2 iterations 8
Cbc0038I Pass  80: suminf.    5.05238 (27) obj. 250.2 iterations 62
Cbc0038I Pass  81: suminf.    2.76948 (25) obj. 250.2 iterations 23
Cbc0038I Pass  82: suminf.    2.55464 (19) obj. 250.2 iterations 16
Cbc0038I Pass  83: suminf.    0.30556 (11) obj. 250.2 iterations 15
Cbc0038I Pass  84: suminf.    1.22671 (12) obj. 250.2 iterations 19
Cbc0038I Pass  85: suminf.    1.21823 (11) obj. 250.2 iterations 15
Cbc0038I Pass  86: suminf.    0.31215 (12) obj. 250.2 iterations 26
Cbc0038I Pass  87: suminf.   19.05908 (75) obj. 250.2 iterations 111
Cbc0038I Pass  88: suminf.   13.31692 (69) obj. 250.2 iterations 86
Cbc0038I Pass  89: suminf.   11.78220 (66) obj. 250.2 iterations 26
Cbc0038I Pass  90: suminf.    5.84234 (34) obj. 250.2 iterations 162
Cbc0038I Pass  91: suminf.    2.58337 (19) obj. 250.2 iterations 26
Cbc0038I Pass  92: suminf.    2.26214 (18) obj. 250.2 iterations 90
Cbc0038I Pass  93: suminf.    2.25555 (17) obj. 250.2 iterations 17
Cbc0038I Pass  94: suminf.    1.22671 (12) obj. 250.2 iterations 48
Cbc0038I Pass  95: suminf.    1.21823 (11) obj. 250.2 iterations 17
Cbc0038I Pass  96: suminf.    0.31215 (12) obj. 250.2 iterations 29
Cbc0038I Pass  97: suminf.    0.30556 (11) obj. 250.2 iterations 24
Cbc0038I Pass  98: suminf.   15.72377 (88) obj. 250.2 iterations 139
Cbc0038I Pass  99: suminf.    1.34290 (25) obj. 250.2 iterations 127
Cbc0038I Pass 100: suminf.    0.66745 (17) obj. 250.2 iterations 31
Cbc0038I Pass 101: suminf.    1.22671 (12) obj. 250.2 iterations 29
Cbc0038I Pass 102: suminf.    1.21823 (11) obj. 250.2 iterations 7
Cbc0038I Pass 103: suminf.    0.31215 (12) obj. 250.2 iterations 24
Cbc0038I Pass 104: suminf.    0.30556 (11) obj. 250.2 iterations 11
Cbc0038I Pass 105: suminf.   12.00275 (46) obj. 250.2 iterations 130
Cbc0038I Pass 106: suminf.    7.44440 (54) obj. 250.2 iterations 101
Cbc0038I Pass 107: suminf.    6.29307 (57) obj. 250.2 iterations 12
Cbc0038I Pass 108: suminf.    0.36641 (17) obj. 250.2 iterations 76
Cbc0038I Pass 109: suminf.    0.30556 (11) obj. 250.2 iterations 7
Cbc0038I Pass 110: suminf.    1.22671 (12) obj. 250.2 iterations 29
Cbc0038I Pass 111: suminf.    1.21823 (11) obj. 250.2 iterations 11
Cbc0038I Pass 112: suminf.    0.31215 (12) obj. 250.2 iterations 36
Cbc0038I Pass 113: suminf.   18.46396 (98) obj. 250.2 iterations 163
Cbc0038I Pass 114: suminf.    6.45881 (40) obj. 250.2 iterations 95
Cbc0038I Pass 115: suminf.    0.30556 (11) obj. 250.2 iterations 33
Cbc0038I Pass 116: suminf.    1.22671 (12) obj. 250.2 iterations 27
Cbc0038I Pass 117: suminf.    1.21823 (11) obj. 250.2 iterations 14
Cbc0038I Pass 118: suminf.    0.31215 (12) obj. 250.2 iterations 28
Cbc0038I Pass 119: suminf.    3.51661 (22) obj. 250.2 iterations 86
Cbc0038I Pass 120: suminf.    3.07491 (21) obj. 250.2 iterations 52
Cbc0038I Pass 121: suminf.    3.66020 (30) obj. 250.2 iterations 87
Cbc0038I Pass 122: suminf.    4.32838 (16) obj. 250.2 iterations 9
Cbc0038I Pass 123: suminf.    1.87061 (12) obj. 250.2 iterations 26
Cbc0038I Pass 124: suminf.    1.13263 (10) obj. 250.2 iterations 11
Cbc0038I Pass 125: suminf.    2.36745 (12) obj. 250.2 iterations 22
Cbc0038I Pass 126: suminf.    0.30556 (11) obj. 250.2 iterations 16
Cbc0038I Pass 127: suminf.    1.22671 (12) obj. 250.2 iterations 22
Cbc0038I Pass 128: suminf.    1.21823 (11) obj. 250.2 iterations 19
Cbc0038I Pass 129: suminf.    0.31215 (12) obj. 250.2 iterations 32
Cbc0038I Pass 130: suminf.   14.52752 (83) obj. 250.2 iterations 167
Cbc0038I Pass 131: suminf.    8.35725 (64) obj. 250.2 iterations 97
Cbc0038I Pass 132: suminf.    7.47134 (65) obj. 250.2 iterations 16
Cbc0038I Pass 133: suminf.    4.37947 (40) obj. 250.2 iterations 46
Cbc0038I Pass 134: suminf.   10.36134 (57) obj. 250.2 iterations 71
Cbc0038I Pass 135: suminf.    5.56649 (47) obj. 250.2 iterations 67
Cbc0038I Pass 136: suminf.    4.59359 (46) obj. 250.2 iterations 27
Cbc0038I Pass 137: suminf.    8.10313 (40) obj. 250.2 iterations 55
Cbc0038I Pass 138: suminf.    2.83293 (16) obj. 250.2 iterations 29
Cbc0038I Pass 139: suminf.    0.87884 (8) obj. 250.2 iterations 30
Cbc0038I Pass 140: suminf.    0.87884 (8) obj. 250.2 iterations 7
Cbc0038I Pass 141: suminf.    0.30556 (9) obj. 250.2 iterations 17
Cbc0038I Pass 142: suminf.    1.21851 (12) obj. 250.2 iterations 18
Cbc0038I Pass 143: suminf.    0.30556 (11) obj. 250.2 iterations 17
Cbc0038I Pass 144: suminf.    1.22671 (12) obj. 250.2 iterations 13
Cbc0038I Pass 145: suminf.    1.21823 (11) obj. 250.2 iterations 5
Cbc0038I Pass 146: suminf.    0.31215 (12) obj. 250.2 iterations 24
Cbc0038I Pass 147: suminf.   20.05033 (98) obj. 250.2 iterations 157
Cbc0038I Pass 148: suminf.    8.44453 (59) obj. 250.2 iterations 122
Cbc0038I Pass 149: suminf.    8.26125 (57) obj. 250.2 iterations 23
Cbc0038I Pass 150: suminf.    5.97336 (52) obj. 250.2 iterations 16
Cbc0038I Pass 151: suminf.    0.30556 (11) obj. 250.2 iterations 63
Cbc0038I Pass 152: suminf.    0.30556 (11) obj. 250.2 iterations 3
Cbc0038I Pass 153: suminf.    1.22671 (12) obj. 250.2 iterations 30
Cbc0038I Pass 154: suminf.    1.21823 (11) obj. 250.2 iterations 22
Cbc0038I Pass 155: suminf.    0.31215 (12) obj. 250.2 iterations 27
Cbc0038I Pass 156: suminf.   20.41174 (93) obj. 250.2 iterations 147
Cbc0038I Pass 157: suminf.   10.16338 (74) obj. 250.2 iterations 111
Cbc0038I Pass 158: suminf.   10.04913 (61) obj. 250.2 iterations 40
Cbc0038I Pass 159: suminf.    2.95142 (26) obj. 250.2 iterations 138
Cbc0038I Pass 160: suminf.    0.30556 (9) obj. 250.2 iterations 22
Cbc0038I Pass 161: suminf.    1.21851 (12) obj. 250.2 iterations 13
Cbc0038I Pass 162: suminf.    0.30556 (11) obj. 250.2 iterations 13
Cbc0038I Pass 163: suminf.    1.22671 (12) obj. 250.2 iterations 8
Cbc0038I Pass 164: suminf.    1.21823 (11) obj. 250.2 iterations 3
Cbc0038I Pass 165: suminf.    0.31215 (12) obj. 250.2 iterations 26
Cbc0038I Pass 166: suminf.    6.32143 (46) obj. 250.2 iterations 111
Cbc0038I Pass 167: suminf.   18.67987 (91) obj. 250.2 iterations 191
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 767 rows 276 columns, reduced to 690 rows 240 columns - 68 fixed gives 317, 101 - ok now
Cbc0038I Full problem 767 rows 276 columns, reduced to 181 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.58 seconds)
Cbc0038I After 0.58 seconds - Feasibility pump exiting with objective of 253 - took 0.51 seconds
Cbc0012I Integer solution of 253 found by feasibility pump after 0 iterations and 0 nodes (0.58 seconds)
Cbc0038I Full problem 767 rows 276 columns, reduced to 408 rows 115 columns - 40 fixed gives 166, 41 - ok now
Cbc0038I Full problem 767 rows 276 columns, reduced to 72 rows 26 columns
Cbc0012I Integer solution of 251 found by DiveCoefficient after 334 iterations and 0 nodes (0.63 seconds)
Cbc0031I 12 added rows had average density of 2.4166667
Cbc0013I At root node, 12 cuts changed objective from 246 to 251 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 200 row cuts average 2.1 elements, 55 column cuts (55 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 34 row cuts average 39.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective 251, took 334 iterations and 0 nodes (0.63 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Cuts at root node changed objective from 246 to 251
Probing was tried 4 times and created 255 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Gomory was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 4 times and created 34 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                251.00000000
Enumerated nodes:               0
Total iterations:               334
Time (CPU seconds):             0.64
Time (Wallclock seconds):       0.65

Total time (CPU seconds):       0.64   (Wallclock seconds):       0.66

