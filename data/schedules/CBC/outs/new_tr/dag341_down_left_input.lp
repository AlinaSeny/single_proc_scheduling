Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag341_down_left_input.lp sec 1800 solve solu solutions/new_tr/dag341_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.03219e+06 - 1.06 seconds
Cgl0002I 1954 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1581 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 100 strengthened rows, 0 substitutions
Cgl0004I processed model has 8730 rows, 2792 columns (2792 integer (2731 of which binary)) and 28856 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2792 objects (2792 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 979 integers unsatisfied sum - 223.142
Cbc0038I Pass   1: (2.78 seconds) suminf.  116.81448 (689) obj. 1.185e+06 iterations 3015
Cbc0038I Pass   2: (2.93 seconds) suminf.  112.90513 (677) obj. 1.18601e+06 iterations 448
Cbc0038I Pass   3: (2.96 seconds) suminf.  113.16182 (678) obj. 1.18237e+06 iterations 50
Cbc0038I Pass   4: (3.10 seconds) suminf.  109.66008 (676) obj. 1.17604e+06 iterations 413
Cbc0038I Pass   5: (3.18 seconds) suminf.  106.15061 (679) obj. 1.17464e+06 iterations 180
Cbc0038I Pass   6: (3.22 seconds) suminf.  105.63982 (677) obj. 1.17289e+06 iterations 113
Cbc0038I Pass   7: (3.30 seconds) suminf.  103.20354 (693) obj. 1.17459e+06 iterations 190
Cbc0038I Pass   8: (3.42 seconds) suminf.  102.10613 (677) obj. 1.18546e+06 iterations 301
Cbc0038I Pass   9: (3.50 seconds) suminf.   99.02484 (686) obj. 1.17486e+06 iterations 178
Cbc0038I Pass  10: (3.51 seconds) suminf.   99.05336 (686) obj. 1.17488e+06 iterations 20
Cbc0038I Pass  11: (3.70 seconds) suminf.   97.25821 (684) obj. 1.17457e+06 iterations 510
Cbc0038I Pass  12: (3.72 seconds) suminf.   97.15363 (679) obj. 1.17539e+06 iterations 19
Cbc0038I Pass  13: (3.82 seconds) suminf.   92.23227 (677) obj. 1.17182e+06 iterations 262
Cbc0038I Pass  14: (3.88 seconds) suminf.   91.60627 (674) obj. 1.17488e+06 iterations 142
Cbc0038I Pass  15: (3.92 seconds) suminf.   90.05370 (676) obj. 1.17189e+06 iterations 109
Cbc0038I Pass  16: (4.13 seconds) suminf.   83.89187 (651) obj. 1.1705e+06 iterations 578
Cbc0038I Pass  17: (4.16 seconds) suminf.   82.20137 (655) obj. 1.17042e+06 iterations 78
Cbc0038I Pass  18: (4.19 seconds) suminf.   82.21618 (652) obj. 1.17021e+06 iterations 47
Cbc0038I Pass  19: (4.34 seconds) suminf.   79.68626 (626) obj. 1.18114e+06 iterations 425
Cbc0038I Pass  20: (4.42 seconds) suminf.   80.22837 (627) obj. 1.17235e+06 iterations 201
Cbc0038I Pass  21: (4.65 seconds) suminf.   71.00068 (625) obj. 1.19664e+06 iterations 675
Cbc0038I Pass  22: (4.75 seconds) suminf.   69.16727 (609) obj. 1.18148e+06 iterations 266
Cbc0038I Pass  23: (4.80 seconds) suminf.   68.84547 (606) obj. 1.1809e+06 iterations 140
Cbc0038I Pass  24: (4.82 seconds) suminf.   68.75075 (600) obj. 1.1809e+06 iterations 17
Cbc0038I Pass  25: (5.00 seconds) suminf.   65.21809 (561) obj. 1.18213e+06 iterations 547
Cbc0038I Pass  26: (5.07 seconds) suminf.   64.24311 (579) obj. 1.18334e+06 iterations 186
Cbc0038I Pass  27: (5.09 seconds) suminf.   64.00078 (578) obj. 1.18333e+06 iterations 36
Cbc0038I Pass  28: (5.22 seconds) suminf.   59.47303 (568) obj. 1.17891e+06 iterations 350
Cbc0038I Pass  29: (5.29 seconds) suminf.   57.90753 (565) obj. 1.17841e+06 iterations 176
Cbc0038I Pass  30: (5.49 seconds) suminf.   55.01689 (546) obj. 1.20329e+06 iterations 573
Cbc0038I Pass  31: (5.52 seconds) suminf.   55.40905 (557) obj. 1.20328e+06 iterations 79
Cbc0038I Pass  32: (5.55 seconds) suminf.   55.55636 (553) obj. 1.20209e+06 iterations 64
Cbc0038I Pass  33: (5.68 seconds) suminf.   52.95886 (529) obj. 1.1814e+06 iterations 354
Cbc0038I Pass  34: (5.74 seconds) suminf.   53.05584 (518) obj. 1.18158e+06 iterations 151
Cbc0038I Pass  35: (5.75 seconds) suminf.   53.05584 (518) obj. 1.18158e+06 iterations 11
Cbc0038I Pass  36: (5.87 seconds) suminf.   56.51513 (545) obj. 1.17836e+06 iterations 364
Cbc0038I Pass  37: (5.91 seconds) suminf.   54.49293 (558) obj. 1.17819e+06 iterations 100
Cbc0038I Pass  38: (5.97 seconds) suminf.   54.33230 (513) obj. 1.17823e+06 iterations 151
Cbc0038I Pass  39: (5.99 seconds) suminf.   54.01034 (523) obj. 1.17823e+06 iterations 14
Cbc0038I Pass  40: (6.01 seconds) suminf.   53.44442 (524) obj. 1.17823e+06 iterations 48
Cbc0038I Pass  41: (6.13 seconds) suminf.   50.93562 (494) obj. 1.17821e+06 iterations 323
Cbc0038I Pass  42: (6.18 seconds) suminf.   49.06348 (517) obj. 1.17884e+06 iterations 139
Cbc0038I Pass  43: (6.25 seconds) suminf.   51.83179 (527) obj. 1.17832e+06 iterations 176
Cbc0038I Pass  44: (6.28 seconds) suminf.   52.12492 (535) obj. 1.17841e+06 iterations 41
Cbc0038I Pass  45: (6.33 seconds) suminf.   49.45702 (510) obj. 1.18307e+06 iterations 158
Cbc0038I Pass  46: (6.38 seconds) suminf.   50.39739 (501) obj. 1.1848e+06 iterations 118
Cbc0038I Pass  47: (6.42 seconds) suminf.   48.72473 (514) obj. 1.1828e+06 iterations 104
Cbc0038I Pass  48: (6.48 seconds) suminf.   52.03050 (473) obj. 1.17918e+06 iterations 150
Cbc0038I Pass  49: (6.53 seconds) suminf.   49.47095 (488) obj. 1.17839e+06 iterations 140
Cbc0038I Pass  50: (6.56 seconds) suminf.   49.42226 (514) obj. 1.17833e+06 iterations 41
Cbc0038I Pass  51: (6.64 seconds) suminf.   48.40798 (482) obj. 1.17825e+06 iterations 215
Cbc0038I Pass  52: (6.66 seconds) suminf.   49.36326 (482) obj. 1.17822e+06 iterations 53
Cbc0038I Pass  53: (6.71 seconds) suminf.   46.45685 (459) obj. 1.17902e+06 iterations 147
Cbc0038I Pass  54: (6.73 seconds) suminf.   45.07984 (458) obj. 1.17901e+06 iterations 31
Cbc0038I Pass  55: (6.86 seconds) suminf.   47.00176 (442) obj. 1.17649e+06 iterations 388
Cbc0038I Pass  56: (6.91 seconds) suminf.   44.38204 (441) obj. 1.17636e+06 iterations 120
Cbc0038I Pass  57: (7.02 seconds) suminf.   41.83387 (441) obj. 1.17686e+06 iterations 354
Cbc0038I Pass  58: (7.08 seconds) suminf.   41.85669 (434) obj. 1.17669e+06 iterations 163
Cbc0038I Pass  59: (7.16 seconds) suminf.   37.44680 (418) obj. 1.17747e+06 iterations 233
Cbc0038I Pass  60: (7.21 seconds) suminf.   35.65899 (415) obj. 1.17776e+06 iterations 139
Cbc0038I Pass  61: (7.27 seconds) suminf.   35.94920 (420) obj. 1.17801e+06 iterations 172
Cbc0038I Pass  62: (7.35 seconds) suminf.   36.07981 (408) obj. 1.17794e+06 iterations 245
Cbc0038I Pass  63: (7.39 seconds) suminf.   34.92221 (415) obj. 1.17792e+06 iterations 120
Cbc0038I Pass  64: (7.49 seconds) suminf.   35.62222 (398) obj. 1.21854e+06 iterations 300
Cbc0038I Pass  65: (7.56 seconds) suminf.   33.97583 (399) obj. 1.21845e+06 iterations 219
Cbc0038I Pass  66: (7.63 seconds) suminf.   32.14543 (413) obj. 1.23239e+06 iterations 221
Cbc0038I Pass  67: (7.65 seconds) suminf.   32.17128 (414) obj. 1.23173e+06 iterations 6
Cbc0038I Pass  68: (7.80 seconds) suminf.   36.29063 (397) obj. 1.23352e+06 iterations 545
Cbc0038I Pass  69: (7.88 seconds) suminf.   34.96055 (397) obj. 1.23383e+06 iterations 234
Cbc0038I Pass  70: (8.00 seconds) suminf.   28.45130 (364) obj. 1.20751e+06 iterations 397
Cbc0038I Pass  71: (8.02 seconds) suminf.   28.45130 (364) obj. 1.20751e+06 iterations 13
Cbc0038I Pass  72: (8.17 seconds) suminf.   26.67694 (365) obj. 1.17832e+06 iterations 585
Cbc0038I Pass  73: (8.26 seconds) suminf.   25.86449 (392) obj. 1.17627e+06 iterations 279
Cbc0038I Pass  74: (8.38 seconds) suminf.   26.98691 (397) obj. 1.19318e+06 iterations 418
Cbc0038I Pass  75: (8.42 seconds) suminf.   25.85057 (393) obj. 1.17851e+06 iterations 98
Cbc0038I Pass  76: (8.52 seconds) suminf.   31.30515 (389) obj. 1.19993e+06 iterations 315
Cbc0038I Pass  77: (8.59 seconds) suminf.   28.84790 (383) obj. 1.19993e+06 iterations 193
Cbc0038I Pass  78: (8.63 seconds) suminf.   28.74082 (390) obj. 1.19993e+06 iterations 130
Cbc0038I Pass  79: (8.71 seconds) suminf.   25.31073 (377) obj. 1.17563e+06 iterations 268
Cbc0038I Pass  80: (8.75 seconds) suminf.   23.98248 (384) obj. 1.17585e+06 iterations 99
Cbc0038I Pass  81: (8.88 seconds) suminf.   29.59502 (380) obj. 1.20605e+06 iterations 471
Cbc0038I Pass  82: (8.95 seconds) suminf.   26.75642 (368) obj. 1.20602e+06 iterations 208
Cbc0038I Pass  83: (8.97 seconds) suminf.   26.73565 (368) obj. 1.20602e+06 iterations 38
Cbc0038I Pass  84: (9.14 seconds) suminf.   23.36732 (362) obj. 1.17746e+06 iterations 661
Cbc0038I Pass  85: (9.23 seconds) suminf.   20.80264 (380) obj. 1.17705e+06 iterations 319
Cbc0038I Pass  86: (9.33 seconds) suminf.   20.72084 (344) obj. 1.23193e+06 iterations 342
Cbc0038I Pass  87: (9.36 seconds) suminf.   19.99931 (337) obj. 1.23198e+06 iterations 48
Cbc0038I Pass  88: (9.44 seconds) suminf.   18.82432 (346) obj. 1.23434e+06 iterations 263
Cbc0038I Pass  89: (9.48 seconds) suminf.   19.04489 (330) obj. 1.23484e+06 iterations 114
Cbc0038I Pass  90: (9.60 seconds) suminf.   20.03192 (337) obj. 1.19643e+06 iterations 442
Cbc0038I Pass  91: (9.66 seconds) suminf.   18.08470 (326) obj. 1.21449e+06 iterations 203
Cbc0038I Pass  92: (9.70 seconds) suminf.   17.94465 (328) obj. 1.22665e+06 iterations 124
Cbc0038I Pass  93: (9.95 seconds) suminf.   22.89234 (312) obj. 1.25801e+06 iterations 1012
Cbc0038I Pass  94: (10.04 seconds) suminf.   18.80769 (332) obj. 1.23849e+06 iterations 329
Cbc0038I Pass  95: (10.18 seconds) suminf.   20.55513 (296) obj. 1.26169e+06 iterations 530
Cbc0038I Pass  96: (10.27 seconds) suminf.   18.28035 (306) obj. 1.22939e+06 iterations 327
Cbc0038I Pass  97: (10.34 seconds) suminf.   20.44218 (306) obj. 1.2312e+06 iterations 241
Cbc0038I Pass  98: (10.41 seconds) suminf.   17.10487 (295) obj. 1.23323e+06 iterations 249
Cbc0038I Pass  99: (10.44 seconds) suminf.   17.48561 (310) obj. 1.23334e+06 iterations 75
Cbc0038I Pass 100: (10.68 seconds) suminf.   48.73143 (427) obj. 1.32989e+06 iterations 1052
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1281 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8730 rows 2792 columns, reduced to 2944 rows 911 columns
Cbc0038I Mini branch and bound did not improve solution (12.01 seconds)
Cbc0038I After 12.01 seconds - Feasibility pump exiting - took 10.14 seconds
Cbc0031I 46 added rows had average density of 5.173913
Cbc0013I At root node, 46 cuts changed objective from 1032192 to 1032192 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 28 row cuts average 6.1 elements, 0 column cuts (0 active)  in 1.480 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 112 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.659 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1032192 (21.49 seconds)
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 1032192 (201.71 seconds)
Cbc0010I After 200 nodes, 45 on tree, 1e+50 best solution, best possible 1032192 (450.20 seconds)
Cbc0010I After 300 nodes, 50 on tree, 1e+50 best solution, best possible 1032192 (882.37 seconds)
Cbc0010I After 400 nodes, 77 on tree, 1e+50 best solution, best possible 1032192 (1084.01 seconds)
Cbc0010I After 500 nodes, 98 on tree, 1e+50 best solution, best possible 1032192 (1274.43 seconds)
Cbc0010I After 600 nodes, 119 on tree, 1e+50 best solution, best possible 1032192 (1398.74 seconds)
Cbc0010I After 700 nodes, 134 on tree, 1e+50 best solution, best possible 1032192 (1530.77 seconds)
Cbc0010I After 800 nodes, 160 on tree, 1e+50 best solution, best possible 1032192 (1604.21 seconds)
Cbc0010I After 900 nodes, 160 on tree, 1e+50 best solution, best possible 1032192 (1726.53 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1032192), took 2786977 iterations and 976 nodes (1799.48 seconds)
Cbc0032I Strong branching done 13046 times (992672 iterations), fathomed 113 nodes and fixed 928 variables
Cbc0035I Maximum depth 98, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.03219e+06 to 1.03219e+06
Probing was tried 10 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.210 seconds)
Gomory was tried 177 times and created 556 cuts of which 0 were active after adding rounds of cuts (3.202 seconds)
Knapsack was tried 176 times and created 454 cuts of which 0 were active after adding rounds of cuts (0.459 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
TwoMirCuts was tried 10 times and created 112 cuts of which 0 were active after adding rounds of cuts (0.659 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.109 seconds)
ImplicationCuts was tried 16 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1032192.000
Enumerated nodes:               976
Total iterations:               2786977
Time (CPU seconds):             1799.48
Time (Wallclock seconds):       1805.22

Total time (CPU seconds):       1799.52   (Wallclock seconds):       1805.28

