Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_4_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang9_4_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 300 - 0.76 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1047 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 105 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4317 rows, 1490 columns (1490 integer (1445 of which binary)) and 14048 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 905 integers unsatisfied sum - 159.701
Cbc0038I Pass   1: (1.90 seconds) suminf.  105.45010 (810) obj. 361.655 iterations 1443
Cbc0038I Pass   2: (2.00 seconds) suminf.   99.50425 (815) obj. 358.762 iterations 295
Cbc0038I Pass   3: (2.04 seconds) suminf.   97.86316 (820) obj. 358.02 iterations 83
Cbc0038I Pass   4: (2.16 seconds) suminf.   88.61377 (793) obj. 367.385 iterations 384
Cbc0038I Pass   5: (2.24 seconds) suminf.   82.36739 (808) obj. 366.534 iterations 204
Cbc0038I Pass   6: (2.29 seconds) suminf.   79.20591 (818) obj. 364.143 iterations 126
Cbc0038I Pass   7: (2.36 seconds) suminf.   78.14422 (796) obj. 378.523 iterations 152
Cbc0038I Pass   8: (2.36 seconds) suminf.   78.46990 (797) obj. 378.515 iterations 7
Cbc0038I Pass   9: (2.47 seconds) suminf.   75.40491 (783) obj. 375.144 iterations 290
Cbc0038I Pass  10: (2.49 seconds) suminf.   75.66428 (781) obj. 375.715 iterations 61
Cbc0038I Pass  11: (2.63 seconds) suminf.   73.21175 (759) obj. 421.156 iterations 476
Cbc0038I Pass  12: (2.69 seconds) suminf.   71.66819 (780) obj. 423.034 iterations 147
Cbc0038I Pass  13: (2.73 seconds) suminf.   70.18907 (778) obj. 427.691 iterations 107
Cbc0038I Pass  14: (2.83 seconds) suminf.   69.53843 (807) obj. 431.954 iterations 315
Cbc0038I Pass  15: (2.89 seconds) suminf.   66.96541 (817) obj. 427.476 iterations 158
Cbc0038I Pass  16: (2.98 seconds) suminf.   70.80382 (810) obj. 423.368 iterations 305
Cbc0038I Pass  17: (3.00 seconds) suminf.   71.15616 (813) obj. 424.269 iterations 28
Cbc0038I Pass  18: (3.08 seconds) suminf.   68.30446 (817) obj. 423.969 iterations 228
Cbc0038I Pass  19: (3.15 seconds) suminf.   69.36393 (811) obj. 424.451 iterations 179
Cbc0038I Pass  20: (3.25 seconds) suminf.   71.94688 (795) obj. 423.56 iterations 284
Cbc0038I Pass  21: (3.28 seconds) suminf.   71.32171 (808) obj. 422.818 iterations 78
Cbc0038I Pass  22: (3.32 seconds) suminf.   70.12780 (804) obj. 423.174 iterations 90
Cbc0038I Pass  23: (3.37 seconds) suminf.   68.92727 (820) obj. 429.194 iterations 102
Cbc0038I Pass  24: (3.39 seconds) suminf.   68.11424 (818) obj. 429.508 iterations 49
Cbc0038I Pass  25: (3.48 seconds) suminf.   67.60431 (779) obj. 428.152 iterations 256
Cbc0038I Pass  26: (3.54 seconds) suminf.   68.72759 (810) obj. 430.909 iterations 130
Cbc0038I Pass  27: (3.62 seconds) suminf.   65.22011 (774) obj. 429.078 iterations 208
Cbc0038I Pass  28: (3.70 seconds) suminf.   65.77095 (810) obj. 429.526 iterations 195
Cbc0038I Pass  29: (3.77 seconds) suminf.   66.65492 (781) obj. 426.774 iterations 194
Cbc0038I Pass  30: (3.83 seconds) suminf.   66.61449 (800) obj. 430.77 iterations 137
Cbc0038I Pass  31: (3.90 seconds) suminf.   66.03009 (802) obj. 430.006 iterations 153
Cbc0038I Pass  32: (3.92 seconds) suminf.   66.38231 (808) obj. 429.608 iterations 60
Cbc0038I Pass  33: (4.00 seconds) suminf.   64.52464 (784) obj. 424.195 iterations 198
Cbc0038I Pass  34: (4.29 seconds) suminf.  130.58486 (775) obj. 548.448 iterations 1150
Cbc0038I Pass  35: (4.51 seconds) suminf.   88.08587 (765) obj. 556.273 iterations 780
Cbc0038I Pass  36: (4.59 seconds) suminf.   85.43054 (749) obj. 556.521 iterations 237
Cbc0038I Pass  37: (4.63 seconds) suminf.   84.71618 (759) obj. 556.419 iterations 100
Cbc0038I Pass  38: (4.74 seconds) suminf.   75.75839 (741) obj. 557.924 iterations 318
Cbc0038I Pass  39: (4.77 seconds) suminf.   74.95369 (735) obj. 557.693 iterations 92
Cbc0038I Pass  40: (4.89 seconds) suminf.   72.77140 (728) obj. 559.898 iterations 339
Cbc0038I Pass  41: (4.91 seconds) suminf.   73.41993 (737) obj. 560.091 iterations 46
Cbc0038I Pass  42: (5.02 seconds) suminf.   69.28272 (701) obj. 563.895 iterations 358
Cbc0038I Pass  43: (5.06 seconds) suminf.   67.75977 (718) obj. 563.574 iterations 116
Cbc0038I Pass  44: (5.18 seconds) suminf.   64.99398 (701) obj. 551.405 iterations 385
Cbc0038I Pass  45: (5.25 seconds) suminf.   62.68937 (718) obj. 551.769 iterations 199
Cbc0038I Pass  46: (5.29 seconds) suminf.   62.54961 (706) obj. 551.238 iterations 103
Cbc0038I Pass  47: (5.35 seconds) suminf.   63.70059 (722) obj. 552.059 iterations 147
Cbc0038I Pass  48: (5.42 seconds) suminf.   61.51238 (706) obj. 551.514 iterations 164
Cbc0038I Pass  49: (5.51 seconds) suminf.   63.06855 (723) obj. 552.601 iterations 289
Cbc0038I Pass  50: (5.56 seconds) suminf.   60.75153 (738) obj. 552.469 iterations 126
Cbc0038I Pass  51: (5.60 seconds) suminf.   62.11355 (735) obj. 551.587 iterations 104
Cbc0038I Pass  52: (5.71 seconds) suminf.   61.13807 (771) obj. 556.524 iterations 334
Cbc0038I Pass  53: (5.73 seconds) suminf.   61.00730 (769) obj. 556.058 iterations 53
Cbc0038I Pass  54: (5.84 seconds) suminf.   59.82174 (753) obj. 556.921 iterations 320
Cbc0038I Pass  55: (5.89 seconds) suminf.   60.48594 (748) obj. 556.36 iterations 115
Cbc0038I Pass  56: (5.98 seconds) suminf.   62.47333 (712) obj. 556.708 iterations 288
Cbc0038I Pass  57: (6.02 seconds) suminf.   62.48711 (713) obj. 556.291 iterations 106
Cbc0038I Pass  58: (6.05 seconds) suminf.   61.31338 (726) obj. 556.352 iterations 103
Cbc0038I Pass  59: (6.14 seconds) suminf.   61.56327 (692) obj. 557.224 iterations 284
Cbc0038I Pass  60: (6.21 seconds) suminf.   59.52047 (732) obj. 555.774 iterations 213
Cbc0038I Pass  61: (6.22 seconds) suminf.   59.07186 (736) obj. 555.638 iterations 31
Cbc0038I Pass  62: (6.25 seconds) suminf.   59.26544 (743) obj. 555.484 iterations 64
Cbc0038I Pass  63: (6.33 seconds) suminf.   65.99836 (698) obj. 554.081 iterations 223
Cbc0038I Pass  64: (6.35 seconds) suminf.   64.32268 (690) obj. 553.716 iterations 48
Cbc0038I Pass  65: (6.45 seconds) suminf.   63.86204 (673) obj. 552.796 iterations 334
Cbc0038I Pass  66: (6.52 seconds) suminf.   60.99713 (704) obj. 556.514 iterations 172
Cbc0038I Pass  67: (6.56 seconds) suminf.   59.61791 (702) obj. 556.823 iterations 112
Cbc0038I Pass  68: (6.66 seconds) suminf.   64.20968 (660) obj. 553.943 iterations 295
Cbc0038I Pass  69: (6.69 seconds) suminf.   64.80958 (661) obj. 553.531 iterations 79
Cbc0038I Pass  70: (6.79 seconds) suminf.   60.81357 (664) obj. 550.615 iterations 331
Cbc0038I Pass  71: (6.82 seconds) suminf.   62.87707 (653) obj. 550.947 iterations 76
Cbc0038I Pass  72: (6.84 seconds) suminf.   62.00913 (661) obj. 551.114 iterations 34
Cbc0038I Pass  73: (6.92 seconds) suminf.   61.58956 (640) obj. 552.484 iterations 260
Cbc0038I Pass  74: (6.98 seconds) suminf.   58.59463 (644) obj. 551.912 iterations 161
Cbc0038I Pass  75: (7.09 seconds) suminf.   61.58336 (645) obj. 551.96 iterations 362
Cbc0038I Pass  76: (7.13 seconds) suminf.   58.62540 (650) obj. 552.167 iterations 103
Cbc0038I Pass  77: (7.22 seconds) suminf.   54.15165 (623) obj. 552.565 iterations 286
Cbc0038I Pass  78: (7.23 seconds) suminf.   53.81762 (627) obj. 552.574 iterations 21
Cbc0038I Pass  79: (7.30 seconds) suminf.   53.98899 (623) obj. 549.551 iterations 217
Cbc0038I Pass  80: (7.34 seconds) suminf.   51.95854 (631) obj. 548.917 iterations 114
Cbc0038I Pass  81: (7.35 seconds) suminf.   52.40668 (634) obj. 549.033 iterations 10
Cbc0038I Pass  82: (7.41 seconds) suminf.   54.58662 (622) obj. 547.475 iterations 192
Cbc0038I Pass  83: (7.44 seconds) suminf.   51.44698 (630) obj. 546.758 iterations 84
Cbc0038I Pass  84: (7.50 seconds) suminf.   51.48614 (632) obj. 547.98 iterations 135
Cbc0038I Pass  85: (7.53 seconds) suminf.   50.85516 (630) obj. 548.625 iterations 80
Cbc0038I Pass  86: (7.60 seconds) suminf.   55.09032 (600) obj. 545.698 iterations 227
Cbc0038I Pass  87: (7.63 seconds) suminf.   54.68661 (601) obj. 545.464 iterations 74
Cbc0038I Pass  88: (7.71 seconds) suminf.   54.94300 (576) obj. 542.161 iterations 250
Cbc0038I Pass  89: (7.73 seconds) suminf.   55.13173 (583) obj. 542.204 iterations 56
Cbc0038I Pass  90: (7.80 seconds) suminf.   53.54892 (549) obj. 540.392 iterations 225
Cbc0038I Pass  91: (7.84 seconds) suminf.   51.00095 (555) obj. 540.312 iterations 103
Cbc0038I Pass  92: (7.84 seconds) suminf.   50.31621 (552) obj. 540.748 iterations 11
Cbc0038I Pass  93: (7.87 seconds) suminf.   51.29328 (545) obj. 539.763 iterations 87
Cbc0038I Pass  94: (7.89 seconds) suminf.   50.90773 (541) obj. 539.588 iterations 19
Cbc0038I Pass  95: (7.95 seconds) suminf.   48.37397 (514) obj. 539.656 iterations 192
Cbc0038I Pass  96: (7.98 seconds) suminf.   46.98424 (517) obj. 539.866 iterations 100
Cbc0038I Pass  97: (8.05 seconds) suminf.   52.96348 (487) obj. 536.715 iterations 197
Cbc0038I Pass  98: (8.10 seconds) suminf.   48.56628 (501) obj. 537.879 iterations 145
Cbc0038I Pass  99: (8.17 seconds) suminf.   51.12518 (489) obj. 536.766 iterations 226
Cbc0038I Pass 100: (8.36 seconds) suminf.   81.27851 (585) obj. 498.443 iterations 855
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 125 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4317 rows 1490 columns, reduced to 3824 rows 1300 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.46 seconds)
Cbc0038I After 9.46 seconds - Feasibility pump exiting - took 7.99 seconds
Cbc0031I 47 added rows had average density of 7.2553191
Cbc0013I At root node, 47 cuts changed objective from 300 to 300 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 48 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 126 row cuts average 352.2 elements, 0 column cuts (0 active)  in 0.754 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 99 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.294 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 52.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 300 (15.38 seconds)
Cbc0004I Integer solution of 300 found after 25494 iterations and 28 nodes (28.92 seconds)
Cbc0001I Search completed - best objective 300, took 25494 iterations and 28 nodes (28.92 seconds)
Cbc0032I Strong branching done 512 times (34373 iterations), fathomed 2 nodes and fixed 36 variables
Cbc0035I Maximum depth 20, 0 variables fixed on reduced cost
Cuts at root node changed objective from 300 to 300
Probing was tried 24 times and created 949 cuts of which 0 were active after adding rounds of cuts (0.153 seconds)
Gomory was tried 24 times and created 137 cuts of which 0 were active after adding rounds of cuts (0.845 seconds)
Knapsack was tried 24 times and created 74 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 10 times and created 99 cuts of which 0 were active after adding rounds of cuts (0.294 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
ImplicationCuts was tried 15 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                300.00000000
Enumerated nodes:               28
Total iterations:               25494
Time (CPU seconds):             29.16
Time (Wallclock seconds):       29.23

Total time (CPU seconds):       29.19   (Wallclock seconds):       29.27

