Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_45_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_2_45_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 41270.5 - 2.03 seconds
Cgl0002I 903 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 779 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 118 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 4477 rows, 1374 columns (1374 integer (1328 of which binary)) and 15082 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1374 objects (1374 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 654 integers unsatisfied sum - 124.774
Cbc0038I Pass   1: (3.52 seconds) suminf.   64.41367 (429) obj. 51692.3 iterations 1989
Cbc0038I Pass   2: (3.56 seconds) suminf.   63.50197 (405) obj. 51998.7 iterations 133
Cbc0038I Pass   3: (3.60 seconds) suminf.   62.54562 (445) obj. 52853.4 iterations 130
Cbc0038I Pass   4: (3.64 seconds) suminf.   61.64680 (433) obj. 51579.1 iterations 133
Cbc0038I Pass   5: (3.68 seconds) suminf.   58.85859 (442) obj. 52148.3 iterations 138
Cbc0038I Pass   6: (3.69 seconds) suminf.   58.81796 (444) obj. 52216.8 iterations 18
Cbc0038I Pass   7: (3.79 seconds) suminf.   53.99381 (456) obj. 55827 iterations 442
Cbc0038I Pass   8: (3.81 seconds) suminf.   54.72588 (454) obj. 55764.5 iterations 64
Cbc0038I Pass   9: (3.89 seconds) suminf.   53.68946 (438) obj. 55653.3 iterations 305
Cbc0038I Pass  10: (3.92 seconds) suminf.   52.69957 (447) obj. 55420.1 iterations 94
Cbc0038I Pass  11: (3.94 seconds) suminf.   51.97127 (451) obj. 55430.3 iterations 30
Cbc0038I Pass  12: (4.05 seconds) suminf.   49.60763 (466) obj. 55445.6 iterations 484
Cbc0038I Pass  13: (4.12 seconds) suminf.   47.41622 (453) obj. 55343.6 iterations 213
Cbc0038I Pass  14: (4.18 seconds) suminf.   48.99499 (441) obj. 55523.9 iterations 204
Cbc0038I Pass  15: (4.21 seconds) suminf.   48.59704 (439) obj. 55420 iterations 90
Cbc0038I Pass  16: (4.27 seconds) suminf.   48.49763 (434) obj. 55895.1 iterations 198
Cbc0038I Pass  17: (4.30 seconds) suminf.   48.28567 (430) obj. 55589.2 iterations 111
Cbc0038I Pass  18: (4.31 seconds) suminf.   48.22492 (429) obj. 55588.8 iterations 14
Cbc0038I Pass  19: (4.38 seconds) suminf.   48.50948 (479) obj. 55492.6 iterations 264
Cbc0038I Pass  20: (4.42 seconds) suminf.   46.95595 (461) obj. 55433.9 iterations 141
Cbc0038I Pass  21: (4.43 seconds) suminf.   47.04148 (459) obj. 55393.3 iterations 18
Cbc0038I Pass  22: (4.49 seconds) suminf.   49.03914 (449) obj. 55484.9 iterations 219
Cbc0038I Pass  23: (4.51 seconds) suminf.   49.76238 (432) obj. 55550.1 iterations 53
Cbc0038I Pass  24: (4.52 seconds) suminf.   49.75183 (437) obj. 55564.1 iterations 9
Cbc0038I Pass  25: (4.60 seconds) suminf.   48.61369 (453) obj. 55222.9 iterations 319
Cbc0038I Pass  26: (4.63 seconds) suminf.   48.56080 (457) obj. 55162.4 iterations 80
Cbc0038I Pass  27: (4.72 seconds) suminf.   50.19468 (442) obj. 55337.2 iterations 394
Cbc0038I Pass  28: (4.78 seconds) suminf.   48.91710 (430) obj. 55542.2 iterations 219
Cbc0038I Pass  29: (4.80 seconds) suminf.   49.16664 (432) obj. 55672.3 iterations 54
Cbc0038I Pass  30: (4.83 seconds) suminf.   47.60759 (451) obj. 55543.3 iterations 120
Cbc0038I Pass  31: (4.86 seconds) suminf.   48.12934 (447) obj. 55610.8 iterations 73
Cbc0038I Pass  32: (4.93 seconds) suminf.   48.13119 (407) obj. 55272 iterations 275
Cbc0038I Pass  33: (4.97 seconds) suminf.   47.47390 (407) obj. 55209.3 iterations 150
Cbc0038I Pass  34: (4.98 seconds) suminf.   47.43053 (405) obj. 55211.1 iterations 14
Cbc0038I Pass  35: (5.05 seconds) suminf.   47.60759 (451) obj. 55543.3 iterations 293
Cbc0038I Pass  36: (5.08 seconds) suminf.   48.12934 (447) obj. 55610.8 iterations 96
Cbc0038I Pass  37: (5.16 seconds) suminf.   48.05468 (433) obj. 55276.1 iterations 273
Cbc0038I Pass  38: (5.20 seconds) suminf.   47.47390 (407) obj. 55209.3 iterations 142
Cbc0038I Pass  39: (5.21 seconds) suminf.   47.43053 (405) obj. 55211.1 iterations 11
Cbc0038I Pass  40: (5.27 seconds) suminf.   47.64061 (457) obj. 55570.8 iterations 202
Cbc0038I Pass  41: (5.29 seconds) suminf.   48.12934 (447) obj. 55610.8 iterations 55
Cbc0038I Pass  42: (5.37 seconds) suminf.   47.51924 (433) obj. 55304 iterations 357
Cbc0038I Pass  43: (5.41 seconds) suminf.   47.75641 (396) obj. 55222.4 iterations 152
Cbc0038I Pass  44: (5.42 seconds) suminf.   47.80777 (393) obj. 55222.6 iterations 9
Cbc0038I Pass  45: (5.47 seconds) suminf.   47.32782 (444) obj. 55610.8 iterations 200
Cbc0038I Pass  46: (5.49 seconds) suminf.   47.48265 (445) obj. 55625.9 iterations 38
Cbc0038I Pass  47: (5.53 seconds) suminf.   47.22826 (444) obj. 55549.8 iterations 125
Cbc0038I Pass  48: (5.87 seconds) suminf.   73.64322 (512) obj. 73193.6 iterations 1646
Cbc0038I Pass  49: (6.06 seconds) suminf.   48.32301 (416) obj. 67869.7 iterations 914
Cbc0038I Pass  50: (6.09 seconds) suminf.   47.37204 (412) obj. 67927.1 iterations 121
Cbc0038I Pass  51: (6.12 seconds) suminf.   48.21367 (417) obj. 67870.9 iterations 85
Cbc0038I Pass  52: (6.20 seconds) suminf.   46.86492 (416) obj. 68947.3 iterations 344
Cbc0038I Pass  53: (6.22 seconds) suminf.   46.78067 (411) obj. 68986.2 iterations 62
Cbc0038I Pass  54: (6.28 seconds) suminf.   43.75623 (384) obj. 68866.5 iterations 211
Cbc0038I Pass  55: (6.30 seconds) suminf.   43.57249 (386) obj. 69141.6 iterations 67
Cbc0038I Pass  56: (6.31 seconds) suminf.   43.53802 (386) obj. 69142.3 iterations 3
Cbc0038I Pass  57: (6.40 seconds) suminf.   42.49628 (393) obj. 61911.8 iterations 387
Cbc0038I Pass  58: (6.46 seconds) suminf.   40.07947 (389) obj. 60450.8 iterations 179
Cbc0038I Pass  59: (6.47 seconds) suminf.   38.56395 (392) obj. 60450.9 iterations 24
Cbc0038I Pass  60: (6.56 seconds) suminf.   41.01986 (401) obj. 59633.6 iterations 369
Cbc0038I Pass  61: (6.61 seconds) suminf.   39.12322 (406) obj. 59579 iterations 181
Cbc0038I Pass  62: (6.64 seconds) suminf.   37.81614 (410) obj. 60941.5 iterations 78
Cbc0038I Pass  63: (6.67 seconds) suminf.   35.64764 (418) obj. 61476.9 iterations 95
Cbc0038I Pass  64: (6.69 seconds) suminf.   35.28520 (414) obj. 61891.2 iterations 40
Cbc0038I Pass  65: (6.75 seconds) suminf.   35.31558 (378) obj. 61763.7 iterations 204
Cbc0038I Pass  66: (6.77 seconds) suminf.   35.39776 (391) obj. 61496.5 iterations 85
Cbc0038I Pass  67: (6.88 seconds) suminf.   35.48650 (378) obj. 61781.4 iterations 510
Cbc0038I Pass  68: (6.92 seconds) suminf.   33.01181 (358) obj. 61597.3 iterations 131
Cbc0038I Pass  69: (6.94 seconds) suminf.   32.78852 (356) obj. 61599.3 iterations 59
Cbc0038I Pass  70: (7.03 seconds) suminf.   32.86141 (341) obj. 65146.4 iterations 395
Cbc0038I Pass  71: (7.07 seconds) suminf.   31.14852 (339) obj. 64923.4 iterations 132
Cbc0038I Pass  72: (7.08 seconds) suminf.   31.30048 (341) obj. 64919.3 iterations 54
Cbc0038I Pass  73: (7.15 seconds) suminf.   32.64364 (355) obj. 64936.6 iterations 215
Cbc0038I Pass  74: (7.17 seconds) suminf.   31.08998 (345) obj. 64926.9 iterations 100
Cbc0038I Pass  75: (7.19 seconds) suminf.   30.51493 (344) obj. 64922.9 iterations 56
Cbc0038I Pass  76: (7.29 seconds) suminf.   35.85358 (337) obj. 64934.6 iterations 447
Cbc0038I Pass  77: (7.32 seconds) suminf.   34.04088 (333) obj. 64987.1 iterations 103
Cbc0038I Pass  78: (7.38 seconds) suminf.   32.06043 (351) obj. 65052.1 iterations 237
Cbc0038I Pass  79: (7.42 seconds) suminf.   30.74103 (341) obj. 65053.4 iterations 127
Cbc0038I Pass  80: (7.50 seconds) suminf.   34.37958 (342) obj. 65678.2 iterations 380
Cbc0038I Pass  81: (7.57 seconds) suminf.   29.72347 (330) obj. 65032.2 iterations 245
Cbc0038I Pass  82: (7.58 seconds) suminf.   29.52779 (333) obj. 65033.8 iterations 6
Cbc0038I Pass  83: (7.65 seconds) suminf.   31.64824 (332) obj. 65440.1 iterations 336
Cbc0038I Pass  84: (7.71 seconds) suminf.   30.47885 (336) obj. 65056.9 iterations 193
Cbc0038I Pass  85: (7.77 seconds) suminf.   31.89977 (326) obj. 65120.5 iterations 219
Cbc0038I Pass  86: (7.79 seconds) suminf.   30.08278 (329) obj. 65004.5 iterations 87
Cbc0038I Pass  87: (7.80 seconds) suminf.   29.67572 (330) obj. 65002.1 iterations 5
Cbc0038I Pass  88: (7.87 seconds) suminf.   35.06158 (381) obj. 65480.3 iterations 267
Cbc0038I Pass  89: (7.90 seconds) suminf.   32.58147 (336) obj. 65051 iterations 105
Cbc0038I Pass  90: (7.93 seconds) suminf.   30.00895 (341) obj. 64939.9 iterations 134
Cbc0038I Pass  91: (7.99 seconds) suminf.   31.98248 (322) obj. 64878.5 iterations 245
Cbc0038I Pass  92: (8.02 seconds) suminf.   31.20968 (323) obj. 64746.4 iterations 80
Cbc0038I Pass  93: (8.08 seconds) suminf.   30.50000 (335) obj. 66436.9 iterations 235
Cbc0038I Pass  94: (8.12 seconds) suminf.   28.66087 (335) obj. 64934.9 iterations 142
Cbc0038I Pass  95: (8.17 seconds) suminf.   32.47269 (319) obj. 65188.9 iterations 193
Cbc0038I Pass  96: (8.22 seconds) suminf.   31.48788 (326) obj. 64995.4 iterations 205
Cbc0038I Pass  97: (8.26 seconds) suminf.   29.92817 (330) obj. 68730.5 iterations 141
Cbc0038I Pass  98: (8.28 seconds) suminf.   28.23464 (332) obj. 69464.8 iterations 85
Cbc0038I Pass  99: (8.34 seconds) suminf.   32.49537 (339) obj. 70557.3 iterations 214
Cbc0038I Pass 100: (8.56 seconds) suminf.   66.24179 (432) obj. 71259.8 iterations 1061
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 288 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4477 rows 1374 columns, reduced to 3296 rows 983 columns - too large
Cbc0038I Mini branch and bound did not improve solution (10.72 seconds)
Cbc0038I After 10.72 seconds - Feasibility pump exiting - took 7.67 seconds
Cbc0031I 35 added rows had average density of 70.628571
Cbc0013I At root node, 35 cuts changed objective from 41569.275 to 41779.137 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 93 row cuts average 472.1 elements, 0 column cuts (0 active)  in 0.589 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 74 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.252 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41780 (20.31 seconds)
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 42319.405 (85.78 seconds)
Cbc0010I After 200 nodes, 46 on tree, 1e+50 best solution, best possible 42319.405 (120.51 seconds)
Cbc0010I After 300 nodes, 49 on tree, 1e+50 best solution, best possible 42319.405 (156.38 seconds)
Cbc0010I After 400 nodes, 46 on tree, 1e+50 best solution, best possible 42319.405 (201.18 seconds)
Cbc0010I After 500 nodes, 62 on tree, 1e+50 best solution, best possible 42319.405 (256.91 seconds)
Cbc0010I After 600 nodes, 85 on tree, 1e+50 best solution, best possible 42319.405 (305.23 seconds)
Cbc0010I After 700 nodes, 92 on tree, 1e+50 best solution, best possible 42319.405 (341.34 seconds)
Cbc0010I After 800 nodes, 97 on tree, 1e+50 best solution, best possible 42319.405 (375.51 seconds)
Cbc0010I After 900 nodes, 115 on tree, 1e+50 best solution, best possible 42319.405 (419.28 seconds)
Cbc0010I After 1000 nodes, 141 on tree, 1e+50 best solution, best possible 42319.405 (459.64 seconds)
Cbc0010I After 1100 nodes, 146 on tree, 1e+50 best solution, best possible 42675.655 (489.43 seconds)
Cbc0010I After 1200 nodes, 132 on tree, 1e+50 best solution, best possible 42675.655 (514.78 seconds)
Cbc0010I After 1300 nodes, 127 on tree, 1e+50 best solution, best possible 42675.655 (547.53 seconds)
Cbc0010I After 1400 nodes, 113 on tree, 1e+50 best solution, best possible 42675.655 (582.59 seconds)
Cbc0010I After 1500 nodes, 89 on tree, 1e+50 best solution, best possible 42675.655 (615.19 seconds)
Cbc0010I After 1600 nodes, 81 on tree, 1e+50 best solution, best possible 42675.655 (646.65 seconds)
Cbc0010I After 1700 nodes, 72 on tree, 1e+50 best solution, best possible 42675.655 (675.09 seconds)
Cbc0010I After 1800 nodes, 78 on tree, 1e+50 best solution, best possible 42675.655 (695.18 seconds)
Cbc0010I After 1900 nodes, 71 on tree, 1e+50 best solution, best possible 42675.655 (723.95 seconds)
Cbc0010I After 2000 nodes, 64 on tree, 1e+50 best solution, best possible 42675.655 (747.07 seconds)
Cbc0010I After 2100 nodes, 66 on tree, 1e+50 best solution, best possible 42675.655 (789.05 seconds)
Cbc0010I After 2200 nodes, 49 on tree, 1e+50 best solution, best possible 42675.655 (827.20 seconds)
Cbc0010I After 2300 nodes, 48 on tree, 1e+50 best solution, best possible 42675.655 (849.54 seconds)
Cbc0010I After 2400 nodes, 48 on tree, 1e+50 best solution, best possible 42675.655 (865.74 seconds)
Cbc0010I After 2500 nodes, 46 on tree, 1e+50 best solution, best possible 42675.655 (893.07 seconds)
Cbc0010I After 2600 nodes, 45 on tree, 1e+50 best solution, best possible 42675.655 (933.44 seconds)
Cbc0010I After 2700 nodes, 30 on tree, 1e+50 best solution, best possible 42675.655 (975.13 seconds)
Cbc0010I After 2800 nodes, 28 on tree, 1e+50 best solution, best possible 42675.655 (1039.33 seconds)
Cbc0010I After 2900 nodes, 36 on tree, 1e+50 best solution, best possible 42675.655 (1121.82 seconds)
Cbc0010I After 3000 nodes, 24 on tree, 1e+50 best solution, best possible 42675.655 (1152.32 seconds)
Cbc0010I After 3100 nodes, 16 on tree, 1e+50 best solution, best possible 42675.655 (1185.16 seconds)
Cbc0010I After 3200 nodes, 26 on tree, 1e+50 best solution, best possible 42675.655 (1217.96 seconds)
Cbc0010I After 3300 nodes, 18 on tree, 1e+50 best solution, best possible 42675.655 (1268.60 seconds)
Cbc0010I After 3400 nodes, 11 on tree, 1e+50 best solution, best possible 42675.655 (1319.89 seconds)
Cbc0010I After 3500 nodes, 10 on tree, 1e+50 best solution, best possible 42675.655 (1363.51 seconds)
Cbc0010I After 3600 nodes, 17 on tree, 1e+50 best solution, best possible 42675.655 (1450.25 seconds)
Cbc0010I After 3700 nodes, 10 on tree, 1e+50 best solution, best possible 42675.655 (1592.57 seconds)
Cbc0010I After 3800 nodes, 10 on tree, 1e+50 best solution, best possible 42675.655 (1725.78 seconds)
Cbc0010I After 3900 nodes, 15 on tree, 1e+50 best solution, best possible 42675.655 (1745.01 seconds)
Cbc0010I After 4000 nodes, 14 on tree, 1e+50 best solution, best possible 42675.655 (1756.73 seconds)
Cbc0010I After 4100 nodes, 27 on tree, 1e+50 best solution, best possible 42675.655 (1782.10 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 42675.655), took 4433938 iterations and 4165 nodes (1802.17 seconds)
Cbc0032I Strong branching done 27146 times (1873729 iterations), fathomed 398 nodes and fixed 1986 variables
Cbc0035I Maximum depth 52, 0 variables fixed on reduced cost
Cuts at root node changed objective from 41569.3 to 41780
Probing was tried 11 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.099 seconds)
Gomory was tried 748 times and created 1288 cuts of which 0 were active after adding rounds of cuts (4.180 seconds)
Knapsack was tried 748 times and created 5811 cuts of which 0 were active after adding rounds of cuts (1.370 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
TwoMirCuts was tried 748 times and created 15182 cuts of which 0 were active after adding rounds of cuts (1.761 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
ImplicationCuts was tried 50 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    42675.655
Enumerated nodes:               4165
Total iterations:               4433938
Time (CPU seconds):             1802.17
Time (Wallclock seconds):       1809.92

Total time (CPU seconds):       1802.20   (Wallclock seconds):       1809.95

