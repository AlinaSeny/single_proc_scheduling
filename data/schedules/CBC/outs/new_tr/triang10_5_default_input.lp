Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_5_default_input.lp sec 1800 solve solu solutions/new_tr/triang10_5_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 322.496 - 6.38 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1600 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 6705 rows, 2298 columns (2298 integer (2243 of which binary)) and 21708 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1129 integers unsatisfied sum - 246.842
Cbc0038I Pass   1: (13.36 seconds) suminf.  112.62698 (883) obj. 380.703 iterations 3173
Cbc0038I Pass   2: (13.55 seconds) suminf.  105.60055 (930) obj. 392.012 iterations 427
Cbc0038I Pass   3: (13.69 seconds) suminf.  100.58093 (902) obj. 397.076 iterations 272
Cbc0038I Pass   4: (13.76 seconds) suminf.  107.36494 (926) obj. 393.459 iterations 145
Cbc0038I Pass   5: (13.91 seconds) suminf.  104.31465 (909) obj. 394.334 iterations 255
Cbc0038I Pass   6: (14.02 seconds) suminf.  103.94918 (918) obj. 419.873 iterations 183
Cbc0038I Pass   7: (14.30 seconds) suminf.   98.42495 (932) obj. 445.986 iterations 610
Cbc0038I Pass   8: (14.36 seconds) suminf.   97.56445 (923) obj. 442.318 iterations 100
Cbc0038I Pass   9: (14.40 seconds) suminf.   96.93827 (900) obj. 438.769 iterations 63
Cbc0038I Pass  10: (14.50 seconds) suminf.   95.02046 (926) obj. 433.512 iterations 194
Cbc0038I Pass  11: (14.52 seconds) suminf.   94.57864 (926) obj. 434.248 iterations 22
Cbc0038I Pass  12: (14.69 seconds) suminf.   93.96879 (933) obj. 447.339 iterations 295
Cbc0038I Pass  13: (14.73 seconds) suminf.   93.90854 (933) obj. 447.18 iterations 59
Cbc0038I Pass  14: (14.97 seconds) suminf.   89.49820 (947) obj. 465.245 iterations 516
Cbc0038I Pass  15: (15.07 seconds) suminf.   88.23521 (930) obj. 454.476 iterations 177
Cbc0038I Pass  16: (15.22 seconds) suminf.   88.24183 (920) obj. 454.27 iterations 270
Cbc0038I Pass  17: (15.53 seconds) suminf.   82.92756 (888) obj. 455.041 iterations 703
Cbc0038I Pass  18: (15.69 seconds) suminf.   80.00970 (897) obj. 460.19 iterations 297
Cbc0038I Pass  19: (15.71 seconds) suminf.   80.01949 (900) obj. 460.106 iterations 31
Cbc0038I Pass  20: (15.93 seconds) suminf.   82.62469 (874) obj. 439.505 iterations 446
Cbc0038I Pass  21: (16.06 seconds) suminf.   80.70510 (884) obj. 427.759 iterations 214
Cbc0038I Pass  22: (16.13 seconds) suminf.   81.82584 (883) obj. 426.194 iterations 128
Cbc0038I Pass  23: (16.26 seconds) suminf.   77.58939 (881) obj. 431.994 iterations 208
Cbc0038I Pass  24: (16.27 seconds) suminf.   77.56680 (882) obj. 432.022 iterations 7
Cbc0038I Pass  25: (16.43 seconds) suminf.   80.92808 (844) obj. 440.806 iterations 298
Cbc0038I Pass  26: (16.48 seconds) suminf.   78.62675 (843) obj. 442.703 iterations 88
Cbc0038I Pass  27: (16.51 seconds) suminf.   78.12905 (845) obj. 442.625 iterations 37
Cbc0038I Pass  28: (16.69 seconds) suminf.   79.76103 (857) obj. 439.402 iterations 361
Cbc0038I Pass  29: (16.73 seconds) suminf.   78.47448 (860) obj. 438.02 iterations 71
Cbc0038I Pass  30: (16.77 seconds) suminf.   77.50432 (867) obj. 438.071 iterations 67
Cbc0038I Pass  31: (17.02 seconds) suminf.   77.00486 (841) obj. 446.291 iterations 484
Cbc0038I Pass  32: (17.09 seconds) suminf.   77.02675 (857) obj. 440.796 iterations 120
Cbc0038I Pass  33: (17.29 seconds) suminf.   76.07357 (894) obj. 432.481 iterations 420
Cbc0038I Pass  34: (17.32 seconds) suminf.   76.15205 (888) obj. 433.56 iterations 23
Cbc0038I Pass  35: (17.34 seconds) suminf.   76.85168 (876) obj. 435.042 iterations 39
Cbc0038I Pass  36: (17.55 seconds) suminf.   79.49181 (853) obj. 434.661 iterations 397
Cbc0038I Pass  37: (17.61 seconds) suminf.   76.85167 (860) obj. 436.017 iterations 97
Cbc0038I Pass  38: (17.80 seconds) suminf.   74.19396 (857) obj. 439.171 iterations 384
Cbc0038I Pass  39: (17.87 seconds) suminf.   72.75549 (876) obj. 444.803 iterations 114
Cbc0038I Pass  40: (18.04 seconds) suminf.   74.82463 (868) obj. 448.413 iterations 316
Cbc0038I Pass  41: (18.08 seconds) suminf.   74.55636 (873) obj. 448.387 iterations 62
Cbc0038I Pass  42: (18.22 seconds) suminf.   75.55080 (863) obj. 449.024 iterations 256
Cbc0038I Pass  43: (18.33 seconds) suminf.   73.40386 (870) obj. 438.289 iterations 175
Cbc0038I Pass  44: (18.50 seconds) suminf.   73.93429 (866) obj. 439.471 iterations 316
Cbc0038I Pass  45: (18.52 seconds) suminf.   73.71352 (866) obj. 439.13 iterations 38
Cbc0038I Pass  46: (18.77 seconds) suminf.   75.63009 (830) obj. 445.847 iterations 524
Cbc0038I Pass  47: (18.80 seconds) suminf.   75.45363 (841) obj. 445.295 iterations 53
Cbc0038I Pass  48: (18.97 seconds) suminf.   73.29481 (877) obj. 436.216 iterations 306
Cbc0038I Pass  49: (19.00 seconds) suminf.   73.32625 (882) obj. 436.04 iterations 36
Cbc0038I Pass  50: (19.20 seconds) suminf.   73.71197 (873) obj. 441.868 iterations 425
Cbc0038I Pass  51: (19.23 seconds) suminf.   73.12846 (868) obj. 441.627 iterations 34
Cbc0038I Pass  52: (19.25 seconds) suminf.   72.74021 (869) obj. 441.669 iterations 19
Cbc0038I Pass  53: (19.47 seconds) suminf.   77.56676 (845) obj. 440.627 iterations 465
Cbc0038I Pass  54: (19.60 seconds) suminf.   75.00523 (867) obj. 439.883 iterations 211
Cbc0038I Pass  55: (19.63 seconds) suminf.   75.13944 (853) obj. 439.869 iterations 40
Cbc0038I Pass  56: (19.87 seconds) suminf.   75.41728 (852) obj. 446.426 iterations 468
Cbc0038I Pass  57: (19.92 seconds) suminf.   74.66031 (852) obj. 444.887 iterations 95
Cbc0038I Pass  58: (20.08 seconds) suminf.   73.36652 (879) obj. 449.355 iterations 284
Cbc0038I Pass  59: (20.10 seconds) suminf.   73.28824 (878) obj. 449.326 iterations 27
Cbc0038I Pass  60: (20.17 seconds) suminf.   74.03194 (875) obj. 449.187 iterations 123
Cbc0038I Pass  61: (20.21 seconds) suminf.   72.67361 (878) obj. 449.408 iterations 59
Cbc0038I Pass  62: (20.23 seconds) suminf.   72.77779 (883) obj. 449.455 iterations 21
Cbc0038I Pass  63: (20.40 seconds) suminf.   74.71565 (870) obj. 448.954 iterations 371
Cbc0038I Pass  64: (20.53 seconds) suminf.   74.76900 (859) obj. 435.156 iterations 204
Cbc0038I Pass  65: (20.72 seconds) suminf.   73.10829 (885) obj. 445.026 iterations 376
Cbc0038I Pass  66: (20.74 seconds) suminf.   72.88154 (888) obj. 443.233 iterations 24
Cbc0038I Pass  67: (20.90 seconds) suminf.   73.74774 (864) obj. 439.089 iterations 327
Cbc0038I Pass  68: (20.94 seconds) suminf.   73.71352 (866) obj. 439.13 iterations 58
Cbc0038I Pass  69: (21.14 seconds) suminf.   76.31200 (822) obj. 447.479 iterations 400
Cbc0038I Pass  70: (21.19 seconds) suminf.   75.45363 (841) obj. 445.295 iterations 84
Cbc0038I Pass  71: (21.43 seconds) suminf.   72.85166 (877) obj. 448.764 iterations 544
Cbc0038I Pass  72: (21.47 seconds) suminf.   73.28824 (878) obj. 449.326 iterations 52
Cbc0038I Pass  73: (21.69 seconds) suminf.   75.67688 (840) obj. 437.874 iterations 483
Cbc0038I Pass  74: (21.78 seconds) suminf.   74.86015 (850) obj. 436.063 iterations 159
Cbc0038I Pass  75: (21.99 seconds) suminf.   75.81155 (853) obj. 449.686 iterations 467
Cbc0038I Pass  76: (22.04 seconds) suminf.   75.63340 (853) obj. 450.506 iterations 96
Cbc0038I Pass  77: (22.10 seconds) suminf.   74.69026 (868) obj. 445.701 iterations 95
Cbc0038I Pass  78: (22.27 seconds) suminf.   75.04564 (862) obj. 439.138 iterations 363
Cbc0038I Pass  79: (22.39 seconds) suminf.   74.53305 (868) obj. 445.847 iterations 195
Cbc0038I Pass  80: (22.49 seconds) suminf.   74.35093 (863) obj. 454.253 iterations 169
Cbc0038I Pass  81: (22.63 seconds) suminf.   74.21221 (854) obj. 452.005 iterations 291
Cbc0038I Pass  82: (22.76 seconds) suminf.   73.39254 (873) obj. 453.919 iterations 220
Cbc0038I Pass  83: (22.95 seconds) suminf.   78.63953 (833) obj. 461.414 iterations 384
Cbc0038I Pass  84: (23.09 seconds) suminf.   77.33808 (861) obj. 458.882 iterations 231
Cbc0038I Pass  85: (23.14 seconds) suminf.   75.00358 (877) obj. 458.724 iterations 96
Cbc0038I Pass  86: (23.17 seconds) suminf.   74.11898 (879) obj. 458.992 iterations 34
Cbc0038I Pass  87: (23.37 seconds) suminf.   76.29290 (814) obj. 453.656 iterations 426
Cbc0038I Pass  88: (23.51 seconds) suminf.   74.51407 (852) obj. 454.995 iterations 248
Cbc0038I Pass  89: (23.58 seconds) suminf.   74.14990 (858) obj. 453.86 iterations 105
Cbc0038I Pass  90: (23.80 seconds) suminf.   71.92784 (857) obj. 457.388 iterations 487
Cbc0038I Pass  91: (23.91 seconds) suminf.   68.21925 (826) obj. 456.961 iterations 206
Cbc0038I Pass  92: (24.15 seconds) suminf.   69.42472 (870) obj. 443.31 iterations 522
Cbc0038I Pass  93: (24.30 seconds) suminf.   69.05923 (858) obj. 430.312 iterations 301
Cbc0038I Pass  94: (24.55 seconds) suminf.   63.85863 (853) obj. 457.336 iterations 572
Cbc0038I Pass  95: (24.60 seconds) suminf.   62.61930 (842) obj. 445.633 iterations 82
Cbc0038I Pass  96: (24.66 seconds) suminf.   62.56820 (840) obj. 447.963 iterations 90
Cbc0038I Pass  97: (24.80 seconds) suminf.   60.02817 (832) obj. 459.758 iterations 229
Cbc0038I Pass  98: (25.03 seconds) suminf.   62.94895 (802) obj. 467.778 iterations 520
Cbc0038I Pass  99: (25.17 seconds) suminf.   62.43664 (820) obj. 463.128 iterations 214
Cbc0038I Pass 100: (25.79 seconds) suminf.   95.06697 (800) obj. 591.64 iterations 1618
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 476 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6705 rows 2298 columns, reduced to 5144 rows 1681 columns - too large
Cbc0038I Mini branch and bound did not improve solution (26.43 seconds)
Cbc0038I After 26.43 seconds - Feasibility pump exiting - took 14.62 seconds
Cbc0031I 28 added rows had average density of 8.1428571
Cbc0013I At root node, 28 cuts changed objective from 322.49573 to 332 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 204 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 45 row cuts average 137.8 elements, 0 column cuts (0 active)  in 1.399 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 80 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.581 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 332 (42.37 seconds)
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 332 (284.53 seconds)
Cbc0010I After 200 nodes, 29 on tree, 1e+50 best solution, best possible 332 (473.42 seconds)
Cbc0010I After 300 nodes, 23 on tree, 1e+50 best solution, best possible 332 (718.08 seconds)
Cbc0010I After 400 nodes, 23 on tree, 1e+50 best solution, best possible 332 (913.20 seconds)
Cbc0010I After 500 nodes, 22 on tree, 1e+50 best solution, best possible 332 (1142.42 seconds)
Cbc0010I After 600 nodes, 26 on tree, 1e+50 best solution, best possible 332 (1330.67 seconds)
Cbc0010I After 700 nodes, 23 on tree, 1e+50 best solution, best possible 332 (1498.71 seconds)
Cbc0010I After 800 nodes, 33 on tree, 1e+50 best solution, best possible 332 (1702.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 332), took 2381311 iterations and 877 nodes (1795.37 seconds)
Cbc0032I Strong branching done 9644 times (843988 iterations), fathomed 64 nodes and fixed 557 variables
Cbc0035I Maximum depth 67, 0 variables fixed on reduced cost
Cuts at root node changed objective from 322.496 to 332
Probing was tried 188 times and created 28240 cuts of which 0 were active after adding rounds of cuts (1.073 seconds)
Gomory was tried 155 times and created 397 cuts of which 0 were active after adding rounds of cuts (3.221 seconds)
Knapsack was tried 155 times and created 667 cuts of which 0 were active after adding rounds of cuts (0.373 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.044 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 155 times and created 4175 cuts of which 0 were active after adding rounds of cuts (1.369 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.113 seconds)
ImplicationCuts was tried 17 times and created 215 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    332.000
Enumerated nodes:               877
Total iterations:               2381311
Time (CPU seconds):             1795.37
Time (Wallclock seconds):       1796.65

Total time (CPU seconds):       1795.42   (Wallclock seconds):       1796.70

