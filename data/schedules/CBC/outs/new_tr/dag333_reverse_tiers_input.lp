Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag333_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/dag333_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 839214 - 1.18 seconds
Cgl0002I 878 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 872 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 81 strengthened rows, 0 substitutions
Cgl0004I processed model has 4501 rows, 1498 columns (1498 integer (1455 of which binary)) and 14827 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1498 objects (1498 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 652 integers unsatisfied sum - 176.629
Cbc0038I Pass   1: (2.03 seconds) suminf.   96.13315 (670) obj. 1.03049e+06 iterations 1627
Cbc0038I Pass   2: (2.24 seconds) suminf.   81.03576 (698) obj. 1.06857e+06 iterations 945
Cbc0038I Pass   3: (2.31 seconds) suminf.   79.63843 (719) obj. 1.07967e+06 iterations 230
Cbc0038I Pass   4: (2.34 seconds) suminf.   80.57449 (711) obj. 1.08199e+06 iterations 99
Cbc0038I Pass   5: (2.44 seconds) suminf.   75.28357 (683) obj. 1.11403e+06 iterations 377
Cbc0038I Pass   6: (2.51 seconds) suminf.   74.16428 (678) obj. 1.12009e+06 iterations 229
Cbc0038I Pass   7: (2.64 seconds) suminf.   73.69191 (726) obj. 1.11621e+06 iterations 571
Cbc0038I Pass   8: (2.70 seconds) suminf.   72.39823 (731) obj. 1.12256e+06 iterations 156
Cbc0038I Pass   9: (2.82 seconds) suminf.   65.50235 (742) obj. 1.117e+06 iterations 496
Cbc0038I Pass  10: (2.89 seconds) suminf.   62.45181 (736) obj. 1.11061e+06 iterations 207
Cbc0038I Pass  11: (2.90 seconds) suminf.   61.58970 (732) obj. 1.11042e+06 iterations 18
Cbc0038I Pass  12: (2.99 seconds) suminf.   62.20619 (715) obj. 1.11024e+06 iterations 330
Cbc0038I Pass  13: (3.04 seconds) suminf.   61.75099 (735) obj. 1.11035e+06 iterations 160
Cbc0038I Pass  14: (3.14 seconds) suminf.   61.38254 (735) obj. 1.13315e+06 iterations 365
Cbc0038I Pass  15: (3.18 seconds) suminf.   61.03282 (735) obj. 1.12176e+06 iterations 101
Cbc0038I Pass  16: (3.35 seconds) suminf.   59.06535 (706) obj. 1.25081e+06 iterations 721
Cbc0038I Pass  17: (3.42 seconds) suminf.   58.42443 (718) obj. 1.23899e+06 iterations 243
Cbc0038I Pass  18: (3.44 seconds) suminf.   58.07742 (707) obj. 1.24183e+06 iterations 72
Cbc0038I Pass  19: (3.62 seconds) suminf.   55.26933 (705) obj. 1.11932e+06 iterations 788
Cbc0038I Pass  20: (3.66 seconds) suminf.   55.52806 (695) obj. 1.11987e+06 iterations 130
Cbc0038I Pass  21: (3.69 seconds) suminf.   55.36668 (700) obj. 1.11985e+06 iterations 93
Cbc0038I Pass  22: (3.75 seconds) suminf.   56.25359 (701) obj. 1.11935e+06 iterations 208
Cbc0038I Pass  23: (3.80 seconds) suminf.   55.21227 (696) obj. 1.12004e+06 iterations 140
Cbc0038I Pass  24: (3.83 seconds) suminf.   54.96620 (707) obj. 1.12045e+06 iterations 69
Cbc0038I Pass  25: (3.85 seconds) suminf.   55.47768 (712) obj. 1.1201e+06 iterations 74
Cbc0038I Pass  26: (3.87 seconds) suminf.   54.54307 (710) obj. 1.12023e+06 iterations 34
Cbc0038I Pass  27: (4.00 seconds) suminf.   55.98110 (706) obj. 1.16638e+06 iterations 544
Cbc0038I Pass  28: (4.07 seconds) suminf.   52.48825 (693) obj. 1.17569e+06 iterations 272
Cbc0038I Pass  29: (4.12 seconds) suminf.   51.87336 (694) obj. 1.30487e+06 iterations 154
Cbc0038I Pass  30: (4.23 seconds) suminf.   48.77635 (665) obj. 1.3049e+06 iterations 449
Cbc0038I Pass  31: (4.25 seconds) suminf.   47.94463 (667) obj. 1.30469e+06 iterations 51
Cbc0038I Pass  32: (4.38 seconds) suminf.   46.73817 (659) obj. 1.15301e+06 iterations 527
Cbc0038I Pass  33: (4.40 seconds) suminf.   45.72999 (664) obj. 1.15266e+06 iterations 56
Cbc0038I Pass  34: (4.41 seconds) suminf.   44.76319 (674) obj. 1.16552e+06 iterations 32
Cbc0038I Pass  35: (4.57 seconds) suminf.   49.77275 (673) obj. 1.32742e+06 iterations 706
Cbc0038I Pass  36: (4.63 seconds) suminf.   48.98108 (668) obj. 1.33062e+06 iterations 188
Cbc0038I Pass  37: (4.78 seconds) suminf.   45.54179 (566) obj. 1.33131e+06 iterations 742
Cbc0038I Pass  38: (4.85 seconds) suminf.   41.36812 (555) obj. 1.33506e+06 iterations 293
Cbc0038I Pass  39: (4.92 seconds) suminf.   43.98710 (557) obj. 1.32677e+06 iterations 338
Cbc0038I Pass  40: (4.97 seconds) suminf.   43.76313 (562) obj. 1.33205e+06 iterations 197
Cbc0038I Pass  41: (4.98 seconds) suminf.   43.84027 (561) obj. 1.32964e+06 iterations 5
Cbc0038I Pass  42: (5.08 seconds) suminf.   44.74623 (648) obj. 1.33396e+06 iterations 503
Cbc0038I Pass  43: (5.13 seconds) suminf.   42.97484 (579) obj. 1.33229e+06 iterations 139
Cbc0038I Pass  44: (5.18 seconds) suminf.   43.35982 (644) obj. 1.33192e+06 iterations 171
Cbc0038I Pass  45: (5.33 seconds) suminf.   38.90605 (603) obj. 1.33177e+06 iterations 774
Cbc0038I Pass  46: (5.38 seconds) suminf.   38.79265 (593) obj. 1.33347e+06 iterations 205
Cbc0038I Pass  47: (5.42 seconds) suminf.   38.43178 (604) obj. 1.3309e+06 iterations 130
Cbc0038I Pass  48: (5.51 seconds) suminf.   36.36729 (577) obj. 1.29781e+06 iterations 439
Cbc0038I Pass  49: (5.56 seconds) suminf.   35.60078 (589) obj. 1.29969e+06 iterations 161
Cbc0038I Pass  50: (5.67 seconds) suminf.   37.70418 (559) obj. 1.3092e+06 iterations 520
Cbc0038I Pass  51: (5.70 seconds) suminf.   36.43400 (563) obj. 1.30833e+06 iterations 104
Cbc0038I Pass  52: (5.78 seconds) suminf.   41.41363 (528) obj. 1.30472e+06 iterations 411
Cbc0038I Pass  53: (5.83 seconds) suminf.   40.13880 (539) obj. 1.32214e+06 iterations 179
Cbc0038I Pass  54: (5.92 seconds) suminf.   40.02405 (524) obj. 1.33553e+06 iterations 433
Cbc0038I Pass  55: (5.99 seconds) suminf.   37.91275 (534) obj. 1.33645e+06 iterations 312
Cbc0038I Pass  56: (6.01 seconds) suminf.   38.24327 (539) obj. 1.33663e+06 iterations 30
Cbc0038I Pass  57: (6.12 seconds) suminf.   40.77887 (512) obj. 1.3531e+06 iterations 571
Cbc0038I Pass  58: (6.17 seconds) suminf.   39.04062 (524) obj. 1.38146e+06 iterations 209
Cbc0038I Pass  59: (6.25 seconds) suminf.   37.86966 (520) obj. 1.38127e+06 iterations 382
Cbc0038I Pass  60: (6.27 seconds) suminf.   36.70390 (522) obj. 1.38127e+06 iterations 66
Cbc0038I Pass  61: (6.31 seconds) suminf.   37.38638 (517) obj. 1.38111e+06 iterations 125
Cbc0038I Pass  62: (6.41 seconds) suminf.   36.86290 (522) obj. 1.4024e+06 iterations 456
Cbc0038I Pass  63: (6.46 seconds) suminf.   36.53387 (538) obj. 1.39079e+06 iterations 198
Cbc0038I Pass  64: (6.50 seconds) suminf.   34.75163 (536) obj. 1.39006e+06 iterations 158
Cbc0038I Pass  65: (6.65 seconds) suminf.   36.87159 (512) obj. 1.42685e+06 iterations 797
Cbc0038I Pass  66: (6.70 seconds) suminf.   36.50235 (510) obj. 1.42356e+06 iterations 179
Cbc0038I Pass  67: (6.81 seconds) suminf.   36.76381 (477) obj. 1.44179e+06 iterations 565
Cbc0038I Pass  68: (6.83 seconds) suminf.   36.07289 (480) obj. 1.44243e+06 iterations 105
Cbc0038I Pass  69: (6.96 seconds) suminf.   37.75149 (474) obj. 1.36697e+06 iterations 682
Cbc0038I Pass  70: (7.01 seconds) suminf.   36.88382 (469) obj. 1.36793e+06 iterations 179
Cbc0038I Pass  71: (7.05 seconds) suminf.   36.95050 (469) obj. 1.35734e+06 iterations 174
Cbc0038I Pass  72: (7.17 seconds) suminf.   38.60445 (489) obj. 1.35429e+06 iterations 620
Cbc0038I Pass  73: (7.20 seconds) suminf.   38.20323 (475) obj. 1.35461e+06 iterations 118
Cbc0038I Pass  74: (7.22 seconds) suminf.   38.06596 (454) obj. 1.35826e+06 iterations 97
Cbc0038I Pass  75: (7.25 seconds) suminf.   36.98496 (441) obj. 1.35407e+06 iterations 84
Cbc0038I Pass  76: (7.34 seconds) suminf.   38.75785 (422) obj. 1.37661e+06 iterations 486
Cbc0038I Pass  77: (7.36 seconds) suminf.   38.86438 (454) obj. 1.36331e+06 iterations 126
Cbc0038I Pass  78: (7.43 seconds) suminf.   39.09731 (397) obj. 1.32963e+06 iterations 428
Cbc0038I Pass  79: (7.47 seconds) suminf.   36.77224 (384) obj. 1.32588e+06 iterations 169
Cbc0038I Pass  80: (7.50 seconds) suminf.   34.47102 (382) obj. 1.32041e+06 iterations 121
Cbc0038I Pass  81: (7.50 seconds) suminf.   34.47102 (382) obj. 1.32041e+06 iterations 4
Cbc0038I Pass  82: (7.57 seconds) suminf.   37.67006 (362) obj. 1.36908e+06 iterations 403
Cbc0038I Pass  83: (7.62 seconds) suminf.   33.51096 (382) obj. 1.37198e+06 iterations 275
Cbc0038I Pass  84: (7.63 seconds) suminf.   33.63797 (388) obj. 1.37229e+06 iterations 30
Cbc0038I Pass  85: (7.67 seconds) suminf.   32.87081 (386) obj. 1.36087e+06 iterations 176
Cbc0038I Pass  86: (7.68 seconds) suminf.   33.02318 (391) obj. 1.37047e+06 iterations 32
Cbc0038I Pass  87: (7.69 seconds) suminf.   33.03065 (389) obj. 1.3766e+06 iterations 28
Cbc0038I Pass  88: (7.74 seconds) suminf.   36.63075 (362) obj. 1.34356e+06 iterations 249
Cbc0038I Pass  89: (7.76 seconds) suminf.   36.15819 (367) obj. 1.34972e+06 iterations 71
Cbc0038I Pass  90: (7.80 seconds) suminf.   36.48056 (369) obj. 1.37251e+06 iterations 186
Cbc0038I Pass  91: (7.83 seconds) suminf.   33.82008 (370) obj. 1.37276e+06 iterations 164
Cbc0038I Pass  92: (7.84 seconds) suminf.   33.22316 (370) obj. 1.37764e+06 iterations 8
Cbc0038I Pass  93: (7.89 seconds) suminf.   34.30014 (312) obj. 1.28841e+06 iterations 323
Cbc0038I Pass  94: (7.91 seconds) suminf.   33.33952 (330) obj. 1.321e+06 iterations 74
Cbc0038I Pass  95: (7.92 seconds) suminf.   33.03228 (333) obj. 1.31866e+06 iterations 38
Cbc0038I Pass  96: (7.99 seconds) suminf.   29.87925 (266) obj. 1.28371e+06 iterations 427
Cbc0038I Pass  97: (8.00 seconds) suminf.   29.48354 (263) obj. 1.28286e+06 iterations 46
Cbc0038I Pass  98: (8.05 seconds) suminf.   27.66204 (285) obj. 1.28165e+06 iterations 259
Cbc0038I Pass  99: (8.06 seconds) suminf.   27.58205 (287) obj. 1.28165e+06 iterations 69
Cbc0038I Pass 100: (8.22 seconds) suminf.   71.69687 (459) obj. 1.50849e+06 iterations 1057
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4501 rows 1498 columns, reduced to 3838 rows 1230 columns - too large
Cbc0038I Mini branch and bound did not improve solution (8.35 seconds)
Cbc0038I After 8.35 seconds - Feasibility pump exiting - took 6.67 seconds
Cbc0031I 125 added rows had average density of 31.544
Cbc0013I At root node, 125 cuts changed objective from 839987.34 to 921329.37 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 37 row cuts average 5.3 elements, 0 column cuts (70 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 257 row cuts average 71.8 elements, 0 column cuts (0 active)  in 0.924 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 56 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 12 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 714 row cuts average 111.5 elements, 0 column cuts (0 active)  in 0.516 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 921329.37 (40.03 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 921642.22 (167.03 seconds)
Cbc0010I After 200 nodes, 6 on tree, 1e+50 best solution, best possible 921642.22 (296.95 seconds)
Cbc0010I After 300 nodes, 6 on tree, 1e+50 best solution, best possible 921642.22 (412.46 seconds)
Cbc0010I After 400 nodes, 11 on tree, 1e+50 best solution, best possible 921642.22 (529.27 seconds)
Cbc0010I After 500 nodes, 11 on tree, 1e+50 best solution, best possible 921642.22 (626.21 seconds)
Cbc0010I After 600 nodes, 11 on tree, 1e+50 best solution, best possible 921642.22 (750.61 seconds)
Cbc0010I After 700 nodes, 5 on tree, 1e+50 best solution, best possible 921642.22 (856.50 seconds)
Cbc0010I After 800 nodes, 7 on tree, 1e+50 best solution, best possible 921642.22 (1016.61 seconds)
Cbc0010I After 900 nodes, 8 on tree, 1e+50 best solution, best possible 921642.22 (1148.16 seconds)
Cbc0010I After 1000 nodes, 15 on tree, 1e+50 best solution, best possible 921642.22 (1271.43 seconds)
Cbc0010I After 1100 nodes, 11 on tree, 1e+50 best solution, best possible 921675.58 (1396.37 seconds)
Cbc0010I After 1200 nodes, 19 on tree, 1e+50 best solution, best possible 921675.58 (1493.79 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 1e+50 best solution, best possible 921675.58 (1589.94 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 1e+50 best solution, best possible 921675.58 (1692.43 seconds)
Cbc0010I After 1500 nodes, 23 on tree, 1e+50 best solution, best possible 921675.58 (1786.58 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 921675.58), took 4263889 iterations and 1514 nodes (1800.80 seconds)
Cbc0032I Strong branching done 13262 times (1121059 iterations), fathomed 19 nodes and fixed 241 variables
Cbc0035I Maximum depth 100, 0 variables fixed on reduced cost
Cuts at root node changed objective from 839987 to 921329
Probing was tried 17 times and created 37 cuts of which 70 were active after adding rounds of cuts (0.162 seconds)
Gomory was tried 261 times and created 676 cuts of which 0 were active after adding rounds of cuts (2.845 seconds)
Knapsack was tried 261 times and created 1315 cuts of which 0 were active after adding rounds of cuts (0.411 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
MixedIntegerRounding2 was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 17 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 261 times and created 6167 cuts of which 0 were active after adding rounds of cuts (1.206 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
ImplicationCuts was tried 23 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    921675.583
Enumerated nodes:               1514
Total iterations:               4263889
Time (CPU seconds):             1800.81
Time (Wallclock seconds):       1837.80

Total time (CPU seconds):       1800.83   (Wallclock seconds):       1837.83

