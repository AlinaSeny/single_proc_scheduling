Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/default50_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/default50_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 56320 - 0.09 seconds
Cgl0002I 1801 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 613 strengthened rows, 6 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0004I processed model has 3950 rows, 1190 columns (1190 integer (1139 of which binary)) and 13224 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1190 objects (1190 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 229 integers unsatisfied sum - 44.3857
Cbc0038I Pass   1: (0.42 seconds) suminf.   24.23418 (156) obj. 62500.8 iterations 1007
Cbc0038I Pass   2: (0.47 seconds) suminf.   12.16861 (133) obj. 58208.5 iterations 401
Cbc0038I Pass   3: (0.48 seconds) suminf.   11.76082 (129) obj. 58208.5 iterations 47
Cbc0038I Pass   4: (0.52 seconds) suminf.   11.76895 (101) obj. 86900.9 iterations 317
Cbc0038I Pass   5: (0.53 seconds) suminf.    8.95533 (106) obj. 86900.9 iterations 57
Cbc0038I Pass   6: (0.54 seconds) suminf.    8.12226 (119) obj. 86900.9 iterations 39
Cbc0038I Pass   7: (0.58 seconds) suminf.    8.61157 (104) obj. 66064.1 iterations 302
Cbc0038I Pass   8: (0.60 seconds) suminf.    3.02616 (102) obj. 58291.1 iterations 111
Cbc0038I Pass   9: (0.60 seconds) suminf.    3.02616 (102) obj. 58291.1 iterations 0
Cbc0038I Pass  10: (0.63 seconds) suminf.    6.55367 (102) obj. 59124.3 iterations 244
Cbc0038I Pass  11: (0.65 seconds) suminf.    6.27320 (131) obj. 59124.2 iterations 119
Cbc0038I Pass  12: (0.68 seconds) suminf.    0.97148 (54) obj. 57344 iterations 222
Cbc0038I Pass  13: (0.68 seconds) suminf.    1.03444 (71) obj. 57344 iterations 23
Cbc0038I Pass  14: (0.70 seconds) suminf.    1.26955 (25) obj. 58055.3 iterations 84
Cbc0038I Pass  15: (0.71 seconds) suminf.    1.23668 (31) obj. 58070.3 iterations 16
Cbc0038I Pass  16: (0.73 seconds) suminf.    1.50559 (25) obj. 61788.9 iterations 181
Cbc0038I Pass  17: (0.74 seconds) suminf.    1.55599 (22) obj. 62032.5 iterations 53
Cbc0038I Pass  18: (0.84 seconds) suminf.    2.67823 (130) obj. 65217 iterations 752
Cbc0038I Pass  19: (0.85 seconds) suminf.    2.70394 (130) obj. 65217.9 iterations 9
Cbc0038I Pass  20: (0.89 seconds) suminf.    1.99883 (76) obj. 61846.4 iterations 271
Cbc0038I Pass  21: (0.89 seconds) suminf.    1.68456 (72) obj. 62162.3 iterations 25
Cbc0038I Pass  22: (0.93 seconds) suminf.    1.98618 (38) obj. 64416.7 iterations 223
Cbc0038I Pass  23: (0.95 seconds) suminf.    1.87584 (31) obj. 64422.5 iterations 70
Cbc0038I Pass  24: (0.98 seconds) suminf.    1.22778 (26) obj. 57344 iterations 190
Cbc0038I Pass  25: (0.99 seconds) suminf.    1.23320 (28) obj. 57344 iterations 55
Cbc0038I Pass  26: (1.01 seconds) suminf.    4.34351 (115) obj. 57477.9 iterations 147
Cbc0038I Pass  27: (1.02 seconds) suminf.    3.90533 (116) obj. 60326.3 iterations 44
Cbc0038I Pass  28: (1.08 seconds) suminf.    0.67329 (12) obj. 57344 iterations 442
Cbc0038I Pass  29: (1.10 seconds) suminf.    0.66955 (14) obj. 57344 iterations 36
Cbc0038I Pass  30: (1.11 seconds) suminf.    0.24966 (12) obj. 57344 iterations 16
Cbc0038I Pass  31: (1.29 seconds) suminf.   52.42811 (368) obj. 92465.5 iterations 1269
Cbc0038I Pass  32: (1.36 seconds) suminf.   35.33684 (319) obj. 97235 iterations 331
Cbc0038I Pass  33: (1.36 seconds) suminf.   35.11034 (318) obj. 97176.8 iterations 20
Cbc0038I Pass  34: (1.38 seconds) suminf.   31.62716 (306) obj. 97495.2 iterations 74
Cbc0038I Pass  35: (1.39 seconds) suminf.   31.61580 (302) obj. 97495.2 iterations 9
Cbc0038I Pass  36: (1.41 seconds) suminf.   28.28874 (294) obj. 97342.2 iterations 75
Cbc0038I Pass  37: (1.42 seconds) suminf.   27.50122 (290) obj. 97342 iterations 21
Cbc0038I Pass  38: (1.45 seconds) suminf.   16.63669 (237) obj. 96991.7 iterations 123
Cbc0038I Pass  39: (1.46 seconds) suminf.   15.33123 (220) obj. 97146.5 iterations 27
Cbc0038I Pass  40: (1.49 seconds) suminf.   12.03577 (204) obj. 77866.6 iterations 146
Cbc0038I Pass  41: (1.50 seconds) suminf.   11.16763 (193) obj. 74272.8 iterations 49
Cbc0038I Pass  42: (1.55 seconds) suminf.    9.08449 (187) obj. 75347.9 iterations 276
Cbc0038I Pass  43: (1.55 seconds) suminf.    9.08449 (187) obj. 75347.9 iterations 3
Cbc0038I Pass  44: (1.58 seconds) suminf.    7.09680 (162) obj. 65902.1 iterations 193
Cbc0038I Pass  45: (1.59 seconds) suminf.    7.09180 (160) obj. 65902.1 iterations 8
Cbc0038I Pass  46: (1.60 seconds) suminf.    5.73234 (142) obj. 65832.1 iterations 83
Cbc0038I Pass  47: (1.61 seconds) suminf.    5.80086 (144) obj. 65824.3 iterations 3
Cbc0038I Pass  48: (1.62 seconds) suminf.    7.98554 (136) obj. 66201.7 iterations 125
Cbc0038I Pass  49: (1.63 seconds) suminf.    7.84924 (131) obj. 66197.4 iterations 31
Cbc0038I Pass  50: (1.66 seconds) suminf.    7.64028 (176) obj. 65733.2 iterations 180
Cbc0038I Pass  51: (1.67 seconds) suminf.    7.21228 (169) obj. 65733.2 iterations 25
Cbc0038I Pass  52: (1.71 seconds) suminf.    5.01468 (105) obj. 70189.5 iterations 312
Cbc0038I Pass  53: (1.72 seconds) suminf.    4.85614 (100) obj. 70189.5 iterations 29
Cbc0038I Pass  54: (1.73 seconds) suminf.    4.42734 (77) obj. 70192.9 iterations 113
Cbc0038I Pass  55: (1.74 seconds) suminf.    4.42734 (77) obj. 70192.9 iterations 13
Cbc0038I Pass  56: (1.76 seconds) suminf.    4.55086 (60) obj. 65549.5 iterations 128
Cbc0038I Pass  57: (1.76 seconds) suminf.    3.16788 (60) obj. 65578.6 iterations 31
Cbc0038I Pass  58: (1.78 seconds) suminf.    3.21971 (50) obj. 69669.8 iterations 115
Cbc0038I Pass  59: (1.79 seconds) suminf.    3.02489 (55) obj. 70192.9 iterations 41
Cbc0038I Pass  60: (1.80 seconds) suminf.    2.49282 (45) obj. 65550 iterations 76
Cbc0038I Pass  61: (1.80 seconds) suminf.    2.61094 (45) obj. 65579.2 iterations 14
Cbc0038I Pass  62: (1.83 seconds) suminf.    2.25769 (46) obj. 66808.6 iterations 206
Cbc0038I Pass  63: (1.84 seconds) suminf.    2.25769 (46) obj. 66808.6 iterations 11
Cbc0038I Pass  64: (1.88 seconds) suminf.    2.53038 (55) obj. 68404.2 iterations 258
Cbc0038I Pass  65: (1.90 seconds) suminf.    2.29725 (31) obj. 68421.5 iterations 116
Cbc0038I Pass  66: (1.98 seconds) suminf.    3.46846 (39) obj. 63488 iterations 626
Cbc0038I Pass  67: (1.98 seconds) suminf.    3.46846 (39) obj. 63488 iterations 2
Cbc0038I Pass  68: (2.00 seconds) suminf.    4.18653 (37) obj. 68662.6 iterations 118
Cbc0038I Pass  69: (2.00 seconds) suminf.    1.63511 (27) obj. 68660.6 iterations 30
Cbc0038I Pass  70: (2.02 seconds) suminf.    0.00000 (0) obj. 63488 iterations 116
Cbc0038I Solution found of 63488
Cbc0038I Cleaned solution of 63488
Cbc0038I Rounding solution of 57344 is better than previous of 63488

Cbc0038I Before mini branch and bound, 479 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3950 rows 1190 columns, reduced to 2622 rows 711 columns - 75 fixed gives 2141, 548 - still too large
Cbc0038I Mini branch and bound did not improve solution (2.23 seconds)
Cbc0038I Round again with cutoff of 57240.7
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass  71: (2.26 seconds) suminf.   23.88328 (163) obj. 57240 iterations 113
Cbc0038I Pass  72: (2.27 seconds) suminf.   22.75666 (167) obj. 57240.7 iterations 83
Cbc0038I Pass  73: (2.33 seconds) suminf.   14.77746 (115) obj. 57240.7 iterations 394
Cbc0038I Pass  74: (2.35 seconds) suminf.   12.49354 (103) obj. 57240.7 iterations 131
Cbc0038I Pass  75: (2.38 seconds) suminf.    9.23896 (83) obj. 57240.7 iterations 150
Cbc0038I Pass  76: (2.42 seconds) suminf.    3.87442 (61) obj. 57240.7 iterations 260
Cbc0038I Pass  77: (2.43 seconds) suminf.    0.56370 (11) obj. 57240.7 iterations 132
Cbc0038I Pass  78: (2.44 seconds) suminf.    0.56370 (11) obj. 57240.7 iterations 17
Cbc0038I Pass  79: (2.50 seconds) suminf.    0.59172 (33) obj. 57240.7 iterations 355
Cbc0038I Pass  80: (2.51 seconds) suminf.    1.46854 (37) obj. 57240.7 iterations 45
Cbc0038I Pass  81: (2.52 seconds) suminf.    0.84154 (17) obj. 57240.7 iterations 65
Cbc0038I Pass  82: (2.53 seconds) suminf.    0.77643 (17) obj. 57240.7 iterations 14
Cbc0038I Pass  83: (2.54 seconds) suminf.    0.29991 (1) obj. 57240.7 iterations 84
Cbc0038I Solution found of 57240.7
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3951 rows 1190 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 56320
Cbc0038I Before mini branch and bound, 868 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (2.58 seconds)
Cbc0038I After 2.58 seconds - Feasibility pump exiting with objective of 56320 - took 2.29 seconds
Cbc0012I Integer solution of 56320 found by feasibility pump after 0 iterations and 0 nodes (2.58 seconds)
Cbc0001I Search completed - best objective 56320, took 0 iterations and 0 nodes (2.59 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 56320 to 56320
Probing was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 0 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                56320.00000000
Enumerated nodes:               0
Total iterations:               0
Time (CPU seconds):             2.77
Time (Wallclock seconds):       2.82

Total time (CPU seconds):       2.81   (Wallclock seconds):       2.86

