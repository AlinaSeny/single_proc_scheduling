Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump45_default_input.lp sec 1800 solve solu solutions/new_tr/jump45_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 51067.8 - 7.87 seconds
Cgl0002I 457 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 870 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6076 rows, 1810 columns (1810 integer (1764 of which binary)) and 20365 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1810 objects (1810 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1090 integers unsatisfied sum - 315.37
Cbc0038I Pass   1: (10.50 seconds) suminf.  135.49939 (1127) obj. 71251.1 iterations 3367
Cbc0038I Pass   2: (10.86 seconds) suminf.  106.30226 (1043) obj. 74897.7 iterations 1032
Cbc0038I Pass   3: (11.10 seconds) suminf.   97.91242 (1093) obj. 83427.7 iterations 667
Cbc0038I Pass   4: (11.19 seconds) suminf.   97.13448 (1088) obj. 84193.3 iterations 191
Cbc0038I Pass   5: (11.35 seconds) suminf.   88.80907 (1062) obj. 84015.6 iterations 424
Cbc0038I Pass   6: (11.47 seconds) suminf.   87.25510 (1077) obj. 84159.6 iterations 243
Cbc0038I Pass   7: (11.49 seconds) suminf.   87.28620 (1072) obj. 84163.1 iterations 21
Cbc0038I Pass   8: (11.68 seconds) suminf.   88.62817 (1053) obj. 84043.9 iterations 524
Cbc0038I Pass   9: (11.80 seconds) suminf.   86.86422 (1063) obj. 84292 iterations 274
Cbc0038I Pass  10: (11.88 seconds) suminf.   84.99459 (1026) obj. 84375.3 iterations 170
Cbc0038I Pass  11: (11.89 seconds) suminf.   84.38335 (1031) obj. 84376.8 iterations 10
Cbc0038I Pass  12: (12.15 seconds) suminf.   76.35544 (987) obj. 84623.2 iterations 725
Cbc0038I Pass  13: (12.29 seconds) suminf.   74.11655 (977) obj. 84554.4 iterations 357
Cbc0038I Pass  14: (12.31 seconds) suminf.   75.18832 (984) obj. 84353.2 iterations 56
Cbc0038I Pass  15: (12.55 seconds) suminf.   62.37598 (991) obj. 85027.5 iterations 645
Cbc0038I Pass  16: (12.69 seconds) suminf.   62.85512 (984) obj. 84914.4 iterations 337
Cbc0038I Pass  17: (12.72 seconds) suminf.   62.98274 (985) obj. 84954 iterations 72
Cbc0038I Pass  18: (13.00 seconds) suminf.   63.47042 (990) obj. 84787.9 iterations 792
Cbc0038I Pass  19: (13.12 seconds) suminf.   61.20704 (984) obj. 84810.8 iterations 261
Cbc0038I Pass  20: (13.14 seconds) suminf.   61.63935 (984) obj. 84812.5 iterations 20
Cbc0038I Pass  21: (13.39 seconds) suminf.   59.09157 (997) obj. 85155.1 iterations 700
Cbc0038I Pass  22: (13.45 seconds) suminf.   59.29189 (993) obj. 85023.7 iterations 116
Cbc0038I Pass  23: (13.61 seconds) suminf.   64.24267 (968) obj. 84123.4 iterations 450
Cbc0038I Pass  24: (13.70 seconds) suminf.   62.24527 (980) obj. 84235.8 iterations 181
Cbc0038I Pass  25: (14.11 seconds) suminf.   60.07232 (997) obj. 85085.1 iterations 1203
Cbc0038I Pass  26: (14.25 seconds) suminf.   58.03360 (974) obj. 84909.2 iterations 419
Cbc0038I Pass  27: (14.35 seconds) suminf.   56.79242 (972) obj. 84900.8 iterations 269
Cbc0038I Pass  28: (14.48 seconds) suminf.   56.06465 (970) obj. 84892 iterations 359
Cbc0038I Pass  29: (14.52 seconds) suminf.   56.99607 (985) obj. 85043.2 iterations 113
Cbc0038I Pass  30: (14.57 seconds) suminf.   57.17692 (962) obj. 84770.1 iterations 131
Cbc0038I Pass  31: (14.80 seconds) suminf.   53.06369 (943) obj. 84714.8 iterations 798
Cbc0038I Pass  32: (14.91 seconds) suminf.   53.06190 (946) obj. 84554.2 iterations 245
Cbc0038I Pass  33: (15.12 seconds) suminf.   53.18083 (923) obj. 84580.3 iterations 741
Cbc0038I Pass  34: (15.29 seconds) suminf.   48.80101 (917) obj. 84532 iterations 558
Cbc0038I Pass  35: (15.35 seconds) suminf.   48.89492 (909) obj. 84453 iterations 172
Cbc0038I Pass  36: (15.51 seconds) suminf.   49.61050 (932) obj. 84566.1 iterations 520
Cbc0038I Pass  37: (15.64 seconds) suminf.   50.28128 (930) obj. 84731.3 iterations 450
Cbc0038I Pass  38: (15.67 seconds) suminf.   50.03159 (949) obj. 84687 iterations 56
Cbc0038I Pass  39: (15.90 seconds) suminf.   52.65329 (918) obj. 84192.4 iterations 857
Cbc0038I Pass  40: (16.07 seconds) suminf.   48.62154 (906) obj. 84691.8 iterations 551
Cbc0038I Pass  41: (16.10 seconds) suminf.   48.52246 (904) obj. 84674.2 iterations 78
Cbc0038I Pass  42: (16.24 seconds) suminf.   50.44342 (884) obj. 84086.7 iterations 539
Cbc0038I Pass  43: (16.42 seconds) suminf.   47.40066 (903) obj. 84589 iterations 627
Cbc0038I Pass  44: (16.67 seconds) suminf.   51.76120 (953) obj. 84742.3 iterations 887
Cbc0038I Pass  45: (16.87 seconds) suminf.   49.00264 (903) obj. 84658.1 iterations 615
Cbc0038I Pass  46: (16.96 seconds) suminf.   48.05929 (890) obj. 84668.9 iterations 264
Cbc0038I Pass  47: (17.04 seconds) suminf.   47.05263 (925) obj. 84699.5 iterations 202
Cbc0038I Pass  48: (17.13 seconds) suminf.   44.48474 (915) obj. 84777.1 iterations 217
Cbc0038I Pass  49: (17.15 seconds) suminf.   44.71515 (914) obj. 84789.3 iterations 34
Cbc0038I Pass  50: (17.38 seconds) suminf.   48.35659 (937) obj. 88800.9 iterations 749
Cbc0038I Pass  51: (17.49 seconds) suminf.   48.06656 (925) obj. 88883.4 iterations 204
Cbc0038I Pass  52: (17.58 seconds) suminf.   45.21684 (912) obj. 88083.1 iterations 192
Cbc0038I Pass  53: (17.65 seconds) suminf.   49.04914 (924) obj. 87112.6 iterations 178
Cbc0038I Pass  54: (17.84 seconds) suminf.   45.22333 (963) obj. 88955.8 iterations 552
Cbc0038I Pass  55: (17.98 seconds) suminf.   45.55457 (950) obj. 89033.4 iterations 368
Cbc0038I Pass  56: (18.18 seconds) suminf.   45.57163 (967) obj. 89064.9 iterations 521
Cbc0038I Pass  57: (18.34 seconds) suminf.   46.26885 (934) obj. 88041.7 iterations 372
Cbc0038I Pass  58: (18.55 seconds) suminf.   47.43763 (890) obj. 85557.3 iterations 691
Cbc0038I Pass  59: (18.71 seconds) suminf.   47.71480 (918) obj. 86058.4 iterations 576
Cbc0038I Pass  60: (18.82 seconds) suminf.   48.91821 (915) obj. 86366.4 iterations 267
Cbc0038I Pass  61: (18.90 seconds) suminf.   48.06168 (907) obj. 87964.2 iterations 203
Cbc0038I Pass  62: (19.22 seconds) suminf.   48.41120 (916) obj. 85179.1 iterations 1002
Cbc0038I Pass  63: (19.36 seconds) suminf.   46.74741 (913) obj. 85160.6 iterations 401
Cbc0038I Pass  64: (19.43 seconds) suminf.   47.03434 (909) obj. 85138.3 iterations 153
Cbc0038I Pass  65: (19.54 seconds) suminf.   48.32225 (921) obj. 84824.5 iterations 283
Cbc0038I Pass  66: (19.63 seconds) suminf.   47.18169 (923) obj. 84906.3 iterations 181
Cbc0038I Pass  67: (19.90 seconds) suminf.   53.94060 (901) obj. 85979 iterations 867
Cbc0038I Pass  68: (20.05 seconds) suminf.   50.55843 (920) obj. 85202.5 iterations 420
Cbc0038I Pass  69: (20.17 seconds) suminf.   50.79780 (917) obj. 85027.7 iterations 287
Cbc0038I Pass  70: (20.38 seconds) suminf.   50.23044 (871) obj. 86551.9 iterations 713
Cbc0038I Pass  71: (20.42 seconds) suminf.   49.62735 (868) obj. 86549.1 iterations 86
Cbc0038I Pass  72: (20.71 seconds) suminf.   52.36172 (874) obj. 87851.6 iterations 939
Cbc0038I Pass  73: (20.72 seconds) suminf.   52.24904 (869) obj. 87872.8 iterations 14
Cbc0038I Pass  74: (20.95 seconds) suminf.   48.87915 (871) obj. 88412.3 iterations 765
Cbc0038I Pass  75: (21.07 seconds) suminf.   47.60069 (892) obj. 88266.2 iterations 289
Cbc0038I Pass  76: (21.46 seconds) suminf.   52.58652 (842) obj. 88653.8 iterations 1221
Cbc0038I Pass  77: (21.59 seconds) suminf.   52.74467 (874) obj. 88179.5 iterations 344
Cbc0038I Pass  78: (21.69 seconds) suminf.   49.14197 (872) obj. 87793.4 iterations 196
Cbc0038I Pass  79: (21.98 seconds) suminf.   47.44310 (895) obj. 88536.2 iterations 1114
Cbc0038I Pass  80: (22.09 seconds) suminf.   44.40878 (879) obj. 88460.1 iterations 401
Cbc0038I Pass  81: (22.10 seconds) suminf.   44.77671 (881) obj. 88450.6 iterations 5
Cbc0038I Pass  82: (22.33 seconds) suminf.   48.41674 (875) obj. 88386.9 iterations 874
Cbc0038I Pass  83: (22.47 seconds) suminf.   46.83593 (875) obj. 88789 iterations 534
Cbc0038I Pass  84: (22.68 seconds) suminf.   48.12614 (914) obj. 88335.2 iterations 714
Cbc0038I Pass  85: (22.81 seconds) suminf.   45.96179 (908) obj. 88668.9 iterations 368
Cbc0038I Pass  86: (22.89 seconds) suminf.   45.22650 (884) obj. 88574 iterations 264
Cbc0038I Pass  87: (23.08 seconds) suminf.   49.49953 (857) obj. 88549.7 iterations 702
Cbc0038I Pass  88: (23.23 seconds) suminf.   48.21841 (864) obj. 88947.9 iterations 505
Cbc0038I Pass  89: (23.47 seconds) suminf.   50.15415 (886) obj. 88301.2 iterations 872
Cbc0038I Pass  90: (23.61 seconds) suminf.   48.08100 (872) obj. 88245.7 iterations 538
Cbc0038I Pass  91: (23.65 seconds) suminf.   46.87758 (861) obj. 88243.7 iterations 122
Cbc0038I Pass  92: (23.73 seconds) suminf.   46.04947 (876) obj. 88096.2 iterations 239
Cbc0038I Pass  93: (24.02 seconds) suminf.   49.23099 (864) obj. 88565.3 iterations 1121
Cbc0038I Pass  94: (24.22 seconds) suminf.   43.60586 (877) obj. 88689.3 iterations 669
Cbc0038I Pass  95: (24.31 seconds) suminf.   43.18620 (890) obj. 88559.9 iterations 222
Cbc0038I Pass  96: (24.59 seconds) suminf.   47.42050 (897) obj. 87707 iterations 822
Cbc0038I Pass  97: (24.78 seconds) suminf.   46.07566 (938) obj. 88593.1 iterations 553
Cbc0038I Pass  98: (24.79 seconds) suminf.   45.97858 (937) obj. 88601 iterations 6
Cbc0038I Pass  99: (25.06 seconds) suminf.   49.15749 (900) obj. 87848.7 iterations 841
Cbc0038I Pass 100: (25.82 seconds) suminf.  103.39352 (959) obj. 102494 iterations 2252
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 123 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6076 rows 1810 columns, reduced to 5767 rows 1680 columns - too large
Cbc0038I Mini branch and bound did not improve solution (25.87 seconds)
Cbc0038I After 25.87 seconds - Feasibility pump exiting - took 16.60 seconds
Cbc0031I 39 added rows had average density of 289.53846
Cbc0013I At root node, 39 cuts changed objective from 51067.754 to 51846.213 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 9 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 84 row cuts average 577.8 elements, 0 column cuts (0 active)  in 1.410 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 112 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.588 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 51847 (42.06 seconds)
Cbc0010I After 100 nodes, 38 on tree, 1e+50 best solution, best possible 53306.13 (350.65 seconds)
Cbc0010I After 200 nodes, 88 on tree, 1e+50 best solution, best possible 53306.13 (493.92 seconds)
Cbc0010I After 300 nodes, 134 on tree, 1e+50 best solution, best possible 53306.13 (656.35 seconds)
Cbc0010I After 400 nodes, 184 on tree, 1e+50 best solution, best possible 53306.13 (799.95 seconds)
Cbc0010I After 500 nodes, 234 on tree, 1e+50 best solution, best possible 53306.13 (943.34 seconds)
Cbc0010I After 600 nodes, 283 on tree, 1e+50 best solution, best possible 53306.13 (1094.04 seconds)
Cbc0010I After 700 nodes, 333 on tree, 1e+50 best solution, best possible 53306.13 (1247.55 seconds)
Cbc0010I After 800 nodes, 382 on tree, 1e+50 best solution, best possible 53306.13 (1403.87 seconds)
Cbc0010I After 900 nodes, 432 on tree, 1e+50 best solution, best possible 53306.13 (1565.83 seconds)
Cbc0010I After 1000 nodes, 482 on tree, 1e+50 best solution, best possible 53306.13 (1733.13 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53306.13), took 2777479 iterations and 1029 nodes (1802.75 seconds)
Cbc0032I Strong branching done 9634 times (916395 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 503, 0 variables fixed on reduced cost
Cuts at root node changed objective from 51067.8 to 51847
Probing was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.131 seconds)
Gomory was tried 228 times and created 231 cuts of which 0 were active after adding rounds of cuts (5.325 seconds)
Knapsack was tried 228 times and created 528 cuts of which 0 were active after adding rounds of cuts (0.444 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 228 times and created 4092 cuts of which 0 were active after adding rounds of cuts (2.400 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53306.130
Enumerated nodes:               1029
Total iterations:               2777479
Time (CPU seconds):             1802.75
Time (Wallclock seconds):       1803.24

Total time (CPU seconds):       1802.78   (Wallclock seconds):       1803.27

