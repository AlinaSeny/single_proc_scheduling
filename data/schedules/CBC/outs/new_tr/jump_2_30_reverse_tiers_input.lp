Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_30_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_2_30_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32315.7 - 0.10 seconds
Cgl0002I 307 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 384 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2230 rows, 722 columns (722 integer (691 of which binary)) and 7428 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 722 objects (722 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 380 integers unsatisfied sum - 84.5996
Cbc0038I Pass   1: suminf.   40.57565 (271) obj. 40871.7 iterations 1059
Cbc0038I Pass   2: suminf.   33.87883 (277) obj. 40267.1 iterations 273
Cbc0038I Pass   3: suminf.   32.48164 (264) obj. 40577.9 iterations 101
Cbc0038I Pass   4: suminf.   31.85420 (255) obj. 43653.6 iterations 286
Cbc0038I Pass   5: suminf.   31.94634 (253) obj. 44575.6 iterations 36
Cbc0038I Pass   6: suminf.   26.83280 (228) obj. 43406.4 iterations 307
Cbc0038I Pass   7: suminf.   28.24559 (260) obj. 43684.6 iterations 155
Cbc0038I Pass   8: suminf.   27.37847 (259) obj. 43365.1 iterations 49
Cbc0038I Pass   9: suminf.   25.91128 (220) obj. 43936.5 iterations 238
Cbc0038I Pass  10: suminf.   23.88342 (215) obj. 41145.2 iterations 87
Cbc0038I Pass  11: suminf.   21.14049 (180) obj. 40989.2 iterations 353
Cbc0038I Pass  12: suminf.   21.57486 (172) obj. 40931.1 iterations 65
Cbc0038I Pass  13: suminf.   19.02530 (176) obj. 42060.4 iterations 174
Cbc0038I Pass  14: suminf.   17.76772 (162) obj. 41626 iterations 99
Cbc0038I Pass  15: suminf.   17.05066 (152) obj. 41632.6 iterations 37
Cbc0038I Pass  16: suminf.   14.63196 (120) obj. 41495.4 iterations 253
Cbc0038I Pass  17: suminf.   14.61984 (131) obj. 41495.4 iterations 50
Cbc0038I Pass  18: suminf.   11.89279 (122) obj. 55492.8 iterations 214
Cbc0038I Pass  19: suminf.   10.18913 (120) obj. 53887.8 iterations 102
Cbc0038I Pass  20: suminf.    9.70897 (111) obj. 46422.1 iterations 151
Cbc0038I Pass  21: suminf.    9.15918 (108) obj. 52650.3 iterations 172
Cbc0038I Pass  22: suminf.    9.29345 (94) obj. 52813.7 iterations 622
Cbc0038I Pass  23: suminf.    8.92630 (101) obj. 54698.1 iterations 44
Cbc0038I Pass  24: suminf.    7.66679 (65) obj. 48725.9 iterations 364
Cbc0038I Pass  25: suminf.    7.18927 (60) obj. 48400 iterations 45
Cbc0038I Pass  26: suminf.    4.20450 (44) obj. 45838 iterations 128
Cbc0038I Pass  27: suminf.    2.99184 (58) obj. 45791.2 iterations 137
Cbc0038I Pass  28: suminf.    8.68315 (51) obj. 45311 iterations 216
Cbc0038I Pass  29: suminf.    5.90123 (49) obj. 43814.2 iterations 101
Cbc0038I Pass  30: suminf.    4.48107 (46) obj. 43814.2 iterations 26
Cbc0038I Pass  31: suminf.    0.56464 (9) obj. 46177.3 iterations 160
Cbc0038I Pass  32: suminf.    0.56464 (9) obj. 46177.3 iterations 75
Cbc0038I Pass  33: suminf.    0.72605 (12) obj. 48038.5 iterations 47
Cbc0038I Pass  34: suminf.    1.32200 (14) obj. 52534.9 iterations 109
Cbc0038I Pass  35: suminf.    1.25242 (27) obj. 52606.6 iterations 129
Cbc0038I Pass  36: suminf.    1.35211 (29) obj. 48127.8 iterations 117
Cbc0038I Pass  37: suminf.    0.00000 (0) obj. 48128 iterations 24
Cbc0038I Solution found of 48128
Cbc0038I Cleaned solution of 48128
Cbc0038I Rounding solution of 46177 is better than previous of 48128

Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.98 seconds)
Cbc0038I Round again with cutoff of 44803
Cbc0038I Pass  38: suminf.   40.57565 (271) obj. 40871.7 iterations 0
Cbc0038I Pass  39: suminf.   33.87883 (277) obj. 40267.1 iterations 325
Cbc0038I Pass  40: suminf.   32.48164 (264) obj. 40577.9 iterations 137
Cbc0038I Pass  41: suminf.   31.85420 (255) obj. 43653.6 iterations 211
Cbc0038I Pass  42: suminf.   31.94634 (253) obj. 44575.6 iterations 29
Cbc0038I Pass  43: suminf.   27.37555 (199) obj. 43372.2 iterations 331
Cbc0038I Pass  44: suminf.   25.00325 (219) obj. 43471.6 iterations 204
Cbc0038I Pass  45: suminf.   24.93608 (218) obj. 43625.9 iterations 23
Cbc0038I Pass  46: suminf.   24.54567 (208) obj. 44803 iterations 229
Cbc0038I Pass  47: suminf.   23.66164 (201) obj. 43422.7 iterations 128
Cbc0038I Pass  48: suminf.   23.55888 (200) obj. 43357.8 iterations 4
Cbc0038I Pass  49: suminf.   20.42942 (183) obj. 41297.9 iterations 402
Cbc0038I Pass  50: suminf.   18.90345 (167) obj. 41492.8 iterations 74
Cbc0038I Pass  51: suminf.   20.32242 (153) obj. 44803 iterations 198
Cbc0038I Pass  52: suminf.   16.59978 (149) obj. 44803 iterations 71
Cbc0038I Pass  53: suminf.   17.65109 (140) obj. 44803 iterations 269
Cbc0038I Pass  54: suminf.   17.02066 (138) obj. 44803 iterations 17
Cbc0038I Pass  55: suminf.   16.26838 (134) obj. 44803 iterations 13
Cbc0038I Pass  56: suminf.   15.32006 (131) obj. 44803 iterations 181
Cbc0038I Pass  57: suminf.   11.69760 (124) obj. 44803 iterations 80
Cbc0038I Pass  58: suminf.   11.69924 (123) obj. 44803 iterations 3
Cbc0038I Pass  59: suminf.   10.82657 (118) obj. 44803 iterations 134
Cbc0038I Pass  60: suminf.   10.03822 (113) obj. 44803 iterations 38
Cbc0038I Pass  61: suminf.    8.48868 (98) obj. 44803 iterations 306
Cbc0038I Pass  62: suminf.    7.03213 (92) obj. 44803 iterations 33
Cbc0038I Pass  63: suminf.    6.66580 (77) obj. 44803 iterations 232
Cbc0038I Pass  64: suminf.    6.64988 (74) obj. 44803 iterations 8
Cbc0038I Pass  65: suminf.   11.31005 (67) obj. 44803 iterations 124
Cbc0038I Pass  66: suminf.    7.73161 (60) obj. 44803 iterations 35
Cbc0038I Pass  67: suminf.    5.12933 (64) obj. 44803 iterations 56
Cbc0038I Pass  68: suminf.    5.05019 (51) obj. 44803 iterations 58
Cbc0038I Pass  69: suminf.    6.62252 (32) obj. 44803 iterations 136
Cbc0038I Pass  70: suminf.    0.04361 (1) obj. 44803 iterations 60
Cbc0038I Solution found of 44803
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2231 rows 722 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 44032
Cbc0038I Before mini branch and bound, 221 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1667 rows 501 columns - 155 fixed gives 836, 208 - ok now
Cbc0038I Full problem 2230 rows 722 columns, reduced to 39 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (1.60 seconds)
Cbc0038I Round again with cutoff of 41713.9
Cbc0038I Pass  71: suminf.   40.57565 (271) obj. 40871.7 iterations 0
Cbc0038I Pass  72: suminf.   33.87883 (277) obj. 40267.1 iterations 303
Cbc0038I Pass  73: suminf.   32.48165 (264) obj. 40577.9 iterations 111
Cbc0038I Pass  74: suminf.   32.50395 (256) obj. 41713.9 iterations 246
Cbc0038I Pass  75: suminf.   31.32705 (263) obj. 41713.9 iterations 82
Cbc0038I Pass  76: suminf.   28.23452 (228) obj. 37922.6 iterations 317
Cbc0038I Pass  77: suminf.   27.00852 (239) obj. 37901.4 iterations 77
Cbc0038I Pass  78: suminf.   22.83686 (230) obj. 38447.5 iterations 300
Cbc0038I Pass  79: suminf.   22.39795 (237) obj. 38498.9 iterations 123
Cbc0038I Pass  80: suminf.   20.90279 (208) obj. 39042.5 iterations 267
Cbc0038I Pass  81: suminf.   20.38893 (203) obj. 39038.6 iterations 43
Cbc0038I Pass  82: suminf.   17.34184 (190) obj. 39198.3 iterations 106
Cbc0038I Pass  83: suminf.   16.20615 (185) obj. 39376.1 iterations 89
Cbc0038I Pass  84: suminf.   13.12540 (195) obj. 41291.9 iterations 352
Cbc0038I Pass  85: suminf.   13.09074 (192) obj. 41284.2 iterations 25
Cbc0038I Pass  86: suminf.   17.43266 (176) obj. 41713.9 iterations 361
Cbc0038I Pass  87: suminf.   11.82056 (185) obj. 41713.9 iterations 132
Cbc0038I Pass  88: suminf.   11.06626 (194) obj. 41713.9 iterations 148
Cbc0038I Pass  89: suminf.   11.06626 (194) obj. 41713.9 iterations 1
Cbc0038I Pass  90: suminf.   13.70630 (181) obj. 41713.9 iterations 420
Cbc0038I Pass  91: suminf.   10.91318 (168) obj. 41713.9 iterations 173
Cbc0038I Pass  92: suminf.    9.64292 (162) obj. 41713.9 iterations 90
Cbc0038I Pass  93: suminf.   12.79787 (153) obj. 41713.9 iterations 307
Cbc0038I Pass  94: suminf.   12.81346 (151) obj. 41713.9 iterations 76
Cbc0038I Pass  95: suminf.   12.27797 (156) obj. 41713.9 iterations 57
Cbc0038I Pass  96: suminf.   11.38786 (156) obj. 41713.9 iterations 27
Cbc0038I Pass  97: suminf.   11.16317 (161) obj. 41713.9 iterations 52
Cbc0038I Pass  98: suminf.    9.71037 (129) obj. 41713.9 iterations 200
Cbc0038I Pass  99: suminf.    7.29545 (102) obj. 41713.9 iterations 152
Cbc0038I Pass 100: suminf.    4.65523 (56) obj. 41713.9 iterations 239
Cbc0038I Pass 101: suminf.    4.55993 (52) obj. 41713.9 iterations 19
Cbc0038I Pass 102: suminf.    3.26974 (12) obj. 41713.9 iterations 558
Cbc0038I Pass 103: suminf.    0.08732 (1) obj. 41713.9 iterations 18
Cbc0038I Solution found of 41713.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2231 rows 722 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 40960
Cbc0038I Before mini branch and bound, 180 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1775 rows 542 columns - 150 fixed gives 976, 260 - ok now
Cbc0038I Full problem 2230 rows 722 columns, reduced to 113 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (2.33 seconds)
Cbc0038I Round again with cutoff of 38405
Cbc0038I Pass 104: suminf.   40.08718 (267) obj. 38404 iterations 31
Cbc0038I Pass 105: suminf.   33.80164 (273) obj. 38405 iterations 396
Cbc0038I Pass 106: suminf.   32.65168 (267) obj. 38405 iterations 82
Cbc0038I Pass 107: suminf.   33.49649 (267) obj. 38405 iterations 291
Cbc0038I Pass 108: suminf.   32.75503 (260) obj. 38405 iterations 61
Cbc0038I Pass 109: suminf.   32.38711 (273) obj. 38405 iterations 71
Cbc0038I Pass 110: suminf.   33.05926 (256) obj. 38405 iterations 46
Cbc0038I Pass 111: suminf.   28.71900 (247) obj. 38405 iterations 228
Cbc0038I Pass 112: suminf.   27.72310 (245) obj. 38405 iterations 56
Cbc0038I Pass 113: suminf.   21.99933 (244) obj. 38405 iterations 373
Cbc0038I Pass 114: suminf.   19.55216 (224) obj. 38405 iterations 137
Cbc0038I Pass 115: suminf.   19.03017 (194) obj. 38405 iterations 115
Cbc0038I Pass 116: suminf.   18.67946 (198) obj. 38405 iterations 132
Cbc0038I Pass 117: suminf.   17.33553 (188) obj. 38405 iterations 156
Cbc0038I Pass 118: suminf.   13.67227 (188) obj. 38405 iterations 122
Cbc0038I Pass 119: suminf.   13.97286 (184) obj. 38405 iterations 185
Cbc0038I Pass 120: suminf.   13.55397 (177) obj. 38405 iterations 39
Cbc0038I Pass 121: suminf.   13.57939 (177) obj. 38405 iterations 202
Cbc0038I Pass 122: suminf.   12.12377 (177) obj. 38405 iterations 97
Cbc0038I Pass 123: suminf.   19.02024 (175) obj. 38405 iterations 201
Cbc0038I Pass 124: suminf.   13.62660 (172) obj. 38405 iterations 127
Cbc0038I Pass 125: suminf.   12.36960 (168) obj. 38405 iterations 43
Cbc0038I Pass 126: suminf.   16.78678 (162) obj. 38405 iterations 296
Cbc0038I Pass 127: suminf.   16.04723 (161) obj. 38405 iterations 52
Cbc0038I Pass 128: suminf.   18.30947 (177) obj. 38405 iterations 377
Cbc0038I Pass 129: suminf.   17.59213 (174) obj. 38405 iterations 73
Cbc0038I Pass 130: suminf.   14.85124 (153) obj. 38405 iterations 238
Cbc0038I Pass 131: suminf.   12.35706 (166) obj. 38405 iterations 71
Cbc0038I Pass 132: suminf.   11.87527 (165) obj. 38405 iterations 6
Cbc0038I Pass 133: suminf.   12.54310 (149) obj. 38405 iterations 267
Cbc0038I Pass 134: suminf.   10.18673 (136) obj. 38405 iterations 84
Cbc0038I Pass 135: suminf.   15.07315 (147) obj. 38405 iterations 302
Cbc0038I Pass 136: suminf.   11.70321 (151) obj. 38405 iterations 146
Cbc0038I Pass 137: suminf.   11.70321 (151) obj. 38405 iterations 6
Cbc0038I Pass 138: suminf.   11.19807 (139) obj. 38405 iterations 202
Cbc0038I Pass 139: suminf.    9.91952 (150) obj. 38405 iterations 78
Cbc0038I Pass 140: suminf.    9.80229 (148) obj. 38405 iterations 7
Cbc0038I Pass 141: suminf.   11.45400 (171) obj. 38405 iterations 370
Cbc0038I Pass 142: suminf.    9.18882 (150) obj. 38405 iterations 141
Cbc0038I Pass 143: suminf.    8.67914 (148) obj. 38405 iterations 94
Cbc0038I Pass 144: suminf.   11.04035 (151) obj. 38405 iterations 320
Cbc0038I Pass 145: suminf.    8.41266 (136) obj. 38405 iterations 167
Cbc0038I Pass 146: suminf.    9.13204 (116) obj. 38405 iterations 296
Cbc0038I Pass 147: suminf.    7.89294 (128) obj. 38405 iterations 110
Cbc0038I Pass 148: suminf.    8.14581 (81) obj. 38405 iterations 353
Cbc0038I Pass 149: suminf.    5.38544 (75) obj. 38405 iterations 102
Cbc0038I Pass 150: suminf.    4.78169 (78) obj. 38405 iterations 23
Cbc0038I Pass 151: suminf.    5.24954 (92) obj. 38405 iterations 107
Cbc0038I Pass 152: suminf.    5.24954 (92) obj. 38405 iterations 8
Cbc0038I Pass 153: suminf.    9.04288 (98) obj. 38405 iterations 338
Cbc0038I Pass 154: suminf.    8.57417 (137) obj. 38405 iterations 28
Cbc0038I Pass 155: suminf.    8.50549 (118) obj. 38405 iterations 155
Cbc0038I Pass 156: suminf.    5.65827 (57) obj. 38405 iterations 69
Cbc0038I Pass 157: suminf.    8.57474 (61) obj. 38405 iterations 135
Cbc0038I Pass 158: suminf.    5.95926 (63) obj. 38405 iterations 50
Cbc0038I Pass 159: suminf.    5.82398 (62) obj. 38405 iterations 6
Cbc0038I Pass 160: suminf.    5.34092 (82) obj. 38405 iterations 156
Cbc0038I Pass 161: suminf.    5.32554 (81) obj. 38405 iterations 3
Cbc0038I Pass 162: suminf.    4.71154 (79) obj. 38405 iterations 92
Cbc0038I Pass 163: suminf.    4.51536 (82) obj. 38405 iterations 25
Cbc0038I Pass 164: suminf.    9.15117 (77) obj. 38405 iterations 203
Cbc0038I Pass 165: suminf.    7.10985 (68) obj. 38405 iterations 89
Cbc0038I Pass 166: suminf.    4.35046 (60) obj. 38405 iterations 120
Cbc0038I Pass 167: suminf.    7.31353 (74) obj. 38405 iterations 140
Cbc0038I Pass 168: suminf.    6.98100 (77) obj. 38405 iterations 91
Cbc0038I Pass 169: suminf.    5.55626 (75) obj. 38405 iterations 62
Cbc0038I Pass 170: suminf.    7.81110 (74) obj. 38405 iterations 213
Cbc0038I Pass 171: suminf.    6.28175 (76) obj. 38405 iterations 74
Cbc0038I Pass 172: suminf.    7.88329 (62) obj. 38405 iterations 174
Cbc0038I Pass 173: suminf.    6.31249 (60) obj. 38405 iterations 71
Cbc0038I Pass 174: suminf.    4.82073 (72) obj. 38405 iterations 100
Cbc0038I Pass 175: suminf.    6.59629 (71) obj. 38405 iterations 141
Cbc0038I Pass 176: suminf.    5.80859 (70) obj. 38405 iterations 59
Cbc0038I Pass 177: suminf.    4.51536 (82) obj. 38405 iterations 88
Cbc0038I Pass 178: suminf.    4.51536 (82) obj. 38405 iterations 3
Cbc0038I Pass 179: suminf.    5.82101 (69) obj. 38405 iterations 68
Cbc0038I Pass 180: suminf.   39.29570 (217) obj. 38405 iterations 587
Cbc0038I Pass 181: suminf.   20.88436 (164) obj. 38405 iterations 324
Cbc0038I Pass 182: suminf.   19.21619 (157) obj. 38405 iterations 120
Cbc0038I Pass 183: suminf.   15.93635 (128) obj. 38405 iterations 47
Cbc0038I Pass 184: suminf.   15.80149 (128) obj. 38405 iterations 17
Cbc0038I Pass 185: suminf.   14.23192 (147) obj. 38405 iterations 133
Cbc0038I Pass 186: suminf.   13.12540 (150) obj. 38405 iterations 26
Cbc0038I Pass 187: suminf.   11.42058 (153) obj. 38405 iterations 43
Cbc0038I Pass 188: suminf.   11.18074 (141) obj. 38405 iterations 13
Cbc0038I Pass 189: suminf.   11.70446 (128) obj. 38405 iterations 353
Cbc0038I Pass 190: suminf.   10.29942 (136) obj. 38405 iterations 60
Cbc0038I Pass 191: suminf.    9.30892 (88) obj. 38405 iterations 305
Cbc0038I Pass 192: suminf.    7.85033 (72) obj. 38405 iterations 78
Cbc0038I Pass 193: suminf.    6.13552 (71) obj. 38405 iterations 57
Cbc0038I Pass 194: suminf.    3.85672 (53) obj. 38405 iterations 123
Cbc0038I Pass 195: suminf.    3.85672 (53) obj. 38405 iterations 9
Cbc0038I Pass 196: suminf.    2.35693 (42) obj. 38405 iterations 272
Cbc0038I Pass 197: suminf.    9.88165 (78) obj. 38405 iterations 153
Cbc0038I Pass 198: suminf.    8.23033 (83) obj. 38405 iterations 109
Cbc0038I Pass 199: suminf.    7.26444 (52) obj. 38405 iterations 151
Cbc0038I Pass 200: suminf.    7.31639 (54) obj. 38405 iterations 27
Cbc0038I Pass 201: suminf.    8.05950 (61) obj. 38405 iterations 148
Cbc0038I Pass 202: suminf.    5.30233 (52) obj. 38405 iterations 63
Cbc0038I Pass 203: suminf.   33.62641 (258) obj. 38405 iterations 563
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2230 rows 722 columns, reduced to 2049 rows 648 columns - 165 fixed gives 1129, 319 - ok now
Cbc0038I Full problem 2230 rows 722 columns, reduced to 125 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (3.86 seconds)
Cbc0038I After 3.86 seconds - Feasibility pump exiting with objective of 40960 - took 3.58 seconds
Cbc0012I Integer solution of 40960 found by feasibility pump after 0 iterations and 0 nodes (3.86 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1431 rows 401 columns - 127 fixed gives 809, 195 - ok now
Cbc0038I Full problem 2230 rows 722 columns, reduced to 53 rows 24 columns
Cbc0031I 35 added rows had average density of 98.114286
Cbc0013I At root node, 35 cuts changed objective from 32445.563 to 33792 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 8 row cuts average 3.0 elements, 7 column cuts (7 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 203 row cuts average 446.4 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 258 row cuts average 95.7 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 40960 best solution, best possible 33792 (7.74 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 541 rows 171 columns
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1568 rows 438 columns - 141 fixed gives 561, 165 - ok now
Cbc0010I After 100 nodes, 4 on tree, 40960 best solution, best possible 33796 (30.03 seconds)
Cbc0010I After 200 nodes, 3 on tree, 40960 best solution, best possible 33796 (43.71 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 579 rows 180 columns
Cbc0010I After 300 nodes, 3 on tree, 40960 best solution, best possible 33796 (55.56 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1485 rows 416 columns - 131 fixed gives 551, 159 - ok now
Cbc0010I After 400 nodes, 3 on tree, 40960 best solution, best possible 33796 (66.65 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1496 rows 425 columns - 126 fixed gives 799, 184 - ok now
Cbc0010I After 500 nodes, 3 on tree, 40960 best solution, best possible 33796 (77.85 seconds)
Cbc0010I After 600 nodes, 2 on tree, 40960 best solution, best possible 33796 (89.36 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1308 rows 346 columns - 117 fixed gives 747, 162 - ok now
Cbc0038I Full problem 2230 rows 722 columns, reduced to 60 rows 27 columns
Cbc0010I After 700 nodes, 5 on tree, 40960 best solution, best possible 33796 (100.85 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 592 rows 186 columns
Cbc0010I After 800 nodes, 3 on tree, 40960 best solution, best possible 33796 (113.10 seconds)
Cbc0010I After 900 nodes, 2 on tree, 40960 best solution, best possible 33796 (124.84 seconds)
Cbc0010I After 1000 nodes, 2 on tree, 40960 best solution, best possible 33796 (136.21 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1400 rows 388 columns - 132 fixed gives 507, 145 - ok now
Cbc0010I After 1100 nodes, 8 on tree, 40960 best solution, best possible 33796 (148.00 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1463 rows 403 columns - 128 fixed gives 539, 158 - ok now
Cbc0010I After 1200 nodes, 7 on tree, 40960 best solution, best possible 33796 (157.94 seconds)
Cbc0010I After 1300 nodes, 11 on tree, 40960 best solution, best possible 33796 (166.07 seconds)
Cbc0010I After 1400 nodes, 11 on tree, 40960 best solution, best possible 33796 (173.14 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 40960 best solution, best possible 33796 (178.41 seconds)
Cbc0010I After 1600 nodes, 14 on tree, 40960 best solution, best possible 33796 (185.15 seconds)
Cbc0010I After 1700 nodes, 14 on tree, 40960 best solution, best possible 33796 (190.80 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 40960 best solution, best possible 33796 (199.22 seconds)
Cbc0010I After 1900 nodes, 10 on tree, 40960 best solution, best possible 33796 (207.08 seconds)
Cbc0010I After 2000 nodes, 13 on tree, 40960 best solution, best possible 33796 (213.87 seconds)
Cbc0010I After 2100 nodes, 11 on tree, 40960 best solution, best possible 33796 (221.77 seconds)
Cbc0010I After 2200 nodes, 14 on tree, 40960 best solution, best possible 33796 (228.52 seconds)
Cbc0010I After 2300 nodes, 13 on tree, 40960 best solution, best possible 33796 (235.83 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 554 rows 169 columns
Cbc0010I After 2400 nodes, 13 on tree, 40960 best solution, best possible 33796 (243.51 seconds)
Cbc0010I After 2500 nodes, 12 on tree, 40960 best solution, best possible 33796 (251.29 seconds)
Cbc0010I After 2600 nodes, 19 on tree, 40960 best solution, best possible 33796 (257.18 seconds)
Cbc0010I After 2700 nodes, 27 on tree, 40960 best solution, best possible 33796 (264.10 seconds)
Cbc0010I After 2800 nodes, 29 on tree, 40960 best solution, best possible 33796 (272.09 seconds)
Cbc0010I After 2900 nodes, 31 on tree, 40960 best solution, best possible 33796 (279.40 seconds)
Cbc0010I After 3000 nodes, 32 on tree, 40960 best solution, best possible 33796 (287.81 seconds)
Cbc0010I After 3100 nodes, 32 on tree, 40960 best solution, best possible 33796 (295.34 seconds)
Cbc0010I After 3200 nodes, 35 on tree, 40960 best solution, best possible 33796 (302.46 seconds)
Cbc0010I After 3300 nodes, 35 on tree, 40960 best solution, best possible 33796 (309.33 seconds)
Cbc0010I After 3400 nodes, 34 on tree, 40960 best solution, best possible 33796 (315.96 seconds)
Cbc0010I After 3500 nodes, 34 on tree, 40960 best solution, best possible 33796 (323.01 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 558 rows 172 columns
Cbc0010I After 3600 nodes, 35 on tree, 40960 best solution, best possible 33796 (330.59 seconds)
Cbc0010I After 3700 nodes, 37 on tree, 40960 best solution, best possible 33796 (338.25 seconds)
Cbc0010I After 3800 nodes, 36 on tree, 40960 best solution, best possible 33796 (345.65 seconds)
Cbc0010I After 3900 nodes, 36 on tree, 40960 best solution, best possible 33796 (353.66 seconds)
Cbc0010I After 4000 nodes, 40 on tree, 40960 best solution, best possible 33796 (361.79 seconds)
Cbc0010I After 4100 nodes, 38 on tree, 40960 best solution, best possible 33796 (369.45 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1359 rows 380 columns - 128 fixed gives 485, 141 - ok now
Cbc0010I After 4200 nodes, 35 on tree, 40960 best solution, best possible 33796 (377.95 seconds)
Cbc0010I After 4300 nodes, 37 on tree, 40960 best solution, best possible 33796 (384.82 seconds)
Cbc0010I After 4400 nodes, 37 on tree, 40960 best solution, best possible 33796 (391.97 seconds)
Cbc0010I After 4500 nodes, 38 on tree, 40960 best solution, best possible 33796 (399.91 seconds)
Cbc0010I After 4600 nodes, 38 on tree, 40960 best solution, best possible 33796 (406.92 seconds)
Cbc0010I After 4700 nodes, 39 on tree, 40960 best solution, best possible 33796 (414.33 seconds)
Cbc0010I After 4800 nodes, 42 on tree, 40960 best solution, best possible 33796 (421.38 seconds)
Cbc0010I After 4900 nodes, 41 on tree, 40960 best solution, best possible 33796 (428.55 seconds)
Cbc0010I After 5000 nodes, 42 on tree, 40960 best solution, best possible 33796 (435.59 seconds)
Cbc0010I After 5100 nodes, 42 on tree, 40960 best solution, best possible 33796 (443.98 seconds)
Cbc0010I After 5200 nodes, 44 on tree, 40960 best solution, best possible 33796 (451.01 seconds)
Cbc0010I After 5300 nodes, 44 on tree, 40960 best solution, best possible 33796 (458.12 seconds)
Cbc0010I After 5400 nodes, 46 on tree, 40960 best solution, best possible 33796 (465.41 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1396 rows 390 columns - 127 fixed gives 518, 152 - ok now
Cbc0010I After 5500 nodes, 43 on tree, 40960 best solution, best possible 33796 (474.12 seconds)
Cbc0010I After 5600 nodes, 45 on tree, 40960 best solution, best possible 33796 (481.56 seconds)
Cbc0010I After 5700 nodes, 44 on tree, 40960 best solution, best possible 33796 (488.61 seconds)
Cbc0010I After 5800 nodes, 48 on tree, 40960 best solution, best possible 33796 (496.56 seconds)
Cbc0010I After 5900 nodes, 46 on tree, 40960 best solution, best possible 33796 (504.12 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 443 rows 148 columns
Cbc0010I After 6000 nodes, 47 on tree, 40960 best solution, best possible 33796 (511.42 seconds)
Cbc0010I After 6100 nodes, 48 on tree, 40960 best solution, best possible 33796 (518.63 seconds)
Cbc0010I After 6200 nodes, 47 on tree, 40960 best solution, best possible 33796 (525.43 seconds)
Cbc0010I After 6300 nodes, 48 on tree, 40960 best solution, best possible 33796 (533.07 seconds)
Cbc0010I After 6400 nodes, 54 on tree, 40960 best solution, best possible 33796 (540.92 seconds)
Cbc0010I After 6500 nodes, 56 on tree, 40960 best solution, best possible 33796 (547.84 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1360 rows 380 columns - 127 fixed gives 487, 141 - ok now
Cbc0010I After 6600 nodes, 57 on tree, 40960 best solution, best possible 33796 (555.86 seconds)
Cbc0010I After 6700 nodes, 59 on tree, 40960 best solution, best possible 33796 (563.96 seconds)
Cbc0010I After 6800 nodes, 60 on tree, 40960 best solution, best possible 33796 (571.52 seconds)
Cbc0010I After 6900 nodes, 60 on tree, 40960 best solution, best possible 33796 (579.37 seconds)
Cbc0010I After 7000 nodes, 62 on tree, 40960 best solution, best possible 33796 (587.02 seconds)
Cbc0010I After 7100 nodes, 61 on tree, 40960 best solution, best possible 33796 (595.11 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 564 rows 173 columns
Cbc0010I After 7200 nodes, 61 on tree, 40960 best solution, best possible 33796 (602.62 seconds)
Cbc0010I After 7300 nodes, 60 on tree, 40960 best solution, best possible 33796 (610.47 seconds)
Cbc0010I After 7400 nodes, 61 on tree, 40960 best solution, best possible 33796 (618.40 seconds)
Cbc0010I After 7500 nodes, 61 on tree, 40960 best solution, best possible 33796 (625.99 seconds)
Cbc0010I After 7600 nodes, 60 on tree, 40960 best solution, best possible 33796 (632.98 seconds)
Cbc0010I After 7700 nodes, 60 on tree, 40960 best solution, best possible 33796 (641.10 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 508 rows 160 columns
Cbc0010I After 7800 nodes, 63 on tree, 40960 best solution, best possible 33796 (649.25 seconds)
Cbc0010I After 7900 nodes, 61 on tree, 40960 best solution, best possible 33796 (656.54 seconds)
Cbc0010I After 8000 nodes, 63 on tree, 40960 best solution, best possible 33796 (662.90 seconds)
Cbc0010I After 8100 nodes, 65 on tree, 40960 best solution, best possible 33796 (669.34 seconds)
Cbc0010I After 8200 nodes, 63 on tree, 40960 best solution, best possible 33796 (676.77 seconds)
Cbc0010I After 8300 nodes, 61 on tree, 40960 best solution, best possible 33796 (682.82 seconds)
Cbc0010I After 8400 nodes, 64 on tree, 40960 best solution, best possible 33796 (689.76 seconds)
Cbc0010I After 8500 nodes, 61 on tree, 40960 best solution, best possible 33796 (696.29 seconds)
Cbc0010I After 8600 nodes, 62 on tree, 40960 best solution, best possible 33796 (703.29 seconds)
Cbc0010I After 8700 nodes, 62 on tree, 40960 best solution, best possible 33796 (711.76 seconds)
Cbc0010I After 8800 nodes, 62 on tree, 40960 best solution, best possible 33796 (718.79 seconds)
Cbc0010I After 8900 nodes, 66 on tree, 40960 best solution, best possible 33796 (724.83 seconds)
Cbc0010I After 9000 nodes, 66 on tree, 40960 best solution, best possible 33796 (731.39 seconds)
Cbc0038I Full problem 2230 rows 722 columns, reduced to 1455 rows 403 columns - 129 fixed gives 766, 174 - ok now
Cbc0010I After 9100 nodes, 66 on tree, 40960 best solution, best possible 33796 (739.01 seconds)
Cbc0010I After 9200 nodes, 67 on tree, 40960 best solution, best possible 33796 (745.58 seconds)
Cbc0010I After 9300 nodes, 64 on tree, 40960 best solution, best possible 33796 (751.40 seconds)
Cbc0010I After 9400 nodes, 69 on tree, 40960 best solution, best possible 33796 (757.59 seconds)
Cbc0010I After 9500 nodes, 68 on tree, 40960 best solution, best possible 33796 (764.39 seconds)
Cbc0004I Integer solution of 35840 found after 4777373 iterations and 9557 nodes (767.83 seconds)
Cbc0010I After 9600 nodes, 61 on tree, 35840 best solution, best possible 33796 (771.03 seconds)
Cbc0010I After 9700 nodes, 48 on tree, 35840 best solution, best possible 33796 (778.81 seconds)
Cbc0010I After 9800 nodes, 34 on tree, 35840 best solution, best possible 33796 (786.31 seconds)
Cbc0010I After 9900 nodes, 18 on tree, 35840 best solution, best possible 33796 (794.73 seconds)
Cbc0010I After 10000 nodes, 7 on tree, 35840 best solution, best possible 33796 (802.45 seconds)
Cbc0001I Search completed - best objective 35840, took 5021019 iterations and 10039 nodes (805.59 seconds)
Cbc0032I Strong branching done 18674 times (1279339 iterations), fathomed 875 nodes and fixed 1106 variables
Cbc0035I Maximum depth 1274, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32445.6 to 33792
Probing was tried 1612 times and created 60020 cuts of which 0 were active after adding rounds of cuts (3.328 seconds)
Gomory was tried 1336 times and created 1726 cuts of which 0 were active after adding rounds of cuts (2.608 seconds)
Knapsack was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
TwoMirCuts was tried 1336 times and created 12390 cuts of which 0 were active after adding rounds of cuts (1.172 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
ImplicationCuts was tried 38 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                35840.00000000
Enumerated nodes:               10039
Total iterations:               5021019
Time (CPU seconds):             805.67
Time (Wallclock seconds):       809.65

Total time (CPU seconds):       805.68   (Wallclock seconds):       809.67

