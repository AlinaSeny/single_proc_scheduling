Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang6_5_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang6_5_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 284 - 0.01 seconds
Cgl0002I 269 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 199 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 137 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 58 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 769 rows, 276 columns (276 integer (255 of which binary)) and 2734 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 276 objects (276 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 144 integers unsatisfied sum - 29.0497
Cbc0038I Pass   1: suminf.   21.50546 (132) obj. 308.033 iterations 195
Cbc0038I Pass   2: suminf.   22.18154 (140) obj. 310.242 iterations 28
Cbc0038I Pass   3: suminf.   20.48130 (132) obj. 311.093 iterations 32
Cbc0038I Pass   4: suminf.   20.16771 (132) obj. 308.971 iterations 20
Cbc0038I Pass   5: suminf.   16.46529 (110) obj. 346.107 iterations 113
Cbc0038I Pass   6: suminf.   16.40956 (108) obj. 346.648 iterations 25
Cbc0038I Pass   7: suminf.   10.53112 (88) obj. 346 iterations 105
Cbc0038I Pass   8: suminf.    8.86643 (87) obj. 346 iterations 13
Cbc0038I Pass   9: suminf.    8.88666 (88) obj. 346 iterations 1
Cbc0038I Pass  10: suminf.    5.97115 (31) obj. 346 iterations 118
Cbc0038I Pass  11: suminf.    1.98257 (40) obj. 346 iterations 48
Cbc0038I Pass  12: suminf.    8.93574 (48) obj. 370.354 iterations 74
Cbc0038I Pass  13: suminf.    5.99623 (47) obj. 370.272 iterations 10
Cbc0038I Pass  14: suminf.    5.12754 (40) obj. 370.223 iterations 25
Cbc0038I Pass  15: suminf.    1.42883 (40) obj. 346 iterations 129
Cbc0038I Pass  16: suminf.    1.42865 (40) obj. 346 iterations 6
Cbc0038I Pass  17: suminf.    2.33539 (33) obj. 346 iterations 52
Cbc0038I Pass  18: suminf.    0.86443 (50) obj. 346 iterations 47
Cbc0038I Pass  19: suminf.    0.86443 (50) obj. 346 iterations 1
Cbc0038I Pass  20: suminf.    3.96577 (42) obj. 346 iterations 28
Cbc0038I Pass  21: suminf.    3.96577 (42) obj. 346 iterations 1
Cbc0038I Pass  22: suminf.    1.45115 (26) obj. 346 iterations 56
Cbc0038I Pass  23: suminf.    1.04907 (38) obj. 346 iterations 12
Cbc0038I Pass  24: suminf.    6.38610 (70) obj. 384.117 iterations 118
Cbc0038I Pass  25: suminf.    5.95492 (58) obj. 392.253 iterations 17
Cbc0038I Pass  26: suminf.    4.98661 (60) obj. 420.379 iterations 112
Cbc0038I Pass  27: suminf.    3.06657 (40) obj. 420.379 iterations 11
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 456 iterations 147
Cbc0038I Solution found of 456
Cbc0038I Cleaned solution of 456
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 664 rows 225 columns - 13 fixed gives 577, 186 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I Round again with cutoff of 437.9
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass  29: suminf.   21.50546 (132) obj. 308.033 iterations 0
Cbc0038I Pass  30: suminf.   22.18154 (140) obj. 310.242 iterations 30
Cbc0038I Pass  31: suminf.   20.48130 (132) obj. 311.093 iterations 28
Cbc0038I Pass  32: suminf.   20.16771 (132) obj. 308.971 iterations 22
Cbc0038I Pass  33: suminf.   16.08576 (115) obj. 346.131 iterations 124
Cbc0038I Pass  34: suminf.   16.40956 (108) obj. 346.648 iterations 9
Cbc0038I Pass  35: suminf.   12.55253 (98) obj. 345.752 iterations 75
Cbc0038I Pass  36: suminf.   10.74698 (96) obj. 345.81 iterations 22
Cbc0038I Pass  37: suminf.   10.47485 (96) obj. 345.81 iterations 4
Cbc0038I Pass  38: suminf.    7.57561 (80) obj. 345.801 iterations 72
Cbc0038I Pass  39: suminf.    5.32689 (58) obj. 346 iterations 25
Cbc0038I Pass  40: suminf.    3.74836 (51) obj. 346 iterations 67
Cbc0038I Pass  41: suminf.    3.35787 (37) obj. 346 iterations 5
Cbc0038I Pass  42: suminf.    0.94050 (23) obj. 346 iterations 47
Cbc0038I Pass  43: suminf.    2.25940 (42) obj. 346 iterations 95
Cbc0038I Pass  44: suminf.    2.25940 (42) obj. 346 iterations 0
Cbc0038I Pass  45: suminf.    7.55853 (44) obj. 414.73 iterations 60
Cbc0038I Pass  46: suminf.    4.35545 (41) obj. 414.709 iterations 17
Cbc0038I Pass  47: suminf.    0.00000 (0) obj. 346 iterations 25
Cbc0038I Solution found of 346
Cbc0038I Cleaned solution of 346
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 647 rows 218 columns - 43 fixed gives 415, 124 - still too large
Cbc0038I Full problem 769 rows 276 columns, reduced to 35 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of 332.8
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  48: suminf.   21.50546 (132) obj. 308.033 iterations 0
Cbc0038I Pass  49: suminf.   22.18154 (140) obj. 310.242 iterations 30
Cbc0038I Pass  50: suminf.   20.48130 (132) obj. 311.093 iterations 28
Cbc0038I Pass  51: suminf.   20.16771 (132) obj. 308.971 iterations 22
Cbc0038I Pass  52: suminf.   17.07298 (112) obj. 332.8 iterations 120
Cbc0038I Pass  53: suminf.   17.08428 (115) obj. 332.8 iterations 19
Cbc0038I Pass  54: suminf.   13.02149 (98) obj. 332.8 iterations 89
Cbc0038I Pass  55: suminf.   11.49874 (102) obj. 332.8 iterations 27
Cbc0038I Pass  56: suminf.   11.12067 (98) obj. 332.8 iterations 23
Cbc0038I Pass  57: suminf.    9.76205 (96) obj. 332.8 iterations 70
Cbc0038I Pass  58: suminf.    7.13439 (99) obj. 332.8 iterations 28
Cbc0038I Pass  59: suminf.    9.33484 (82) obj. 332.8 iterations 105
Cbc0038I Pass  60: suminf.    7.76636 (86) obj. 332.8 iterations 30
Cbc0038I Pass  61: suminf.    9.28598 (74) obj. 332.8 iterations 65
Cbc0038I Pass  62: suminf.    9.28598 (74) obj. 332.8 iterations 0
Cbc0038I Pass  63: suminf.    4.17730 (49) obj. 332.8 iterations 101
Cbc0038I Pass  64: suminf.    4.03189 (52) obj. 332.8 iterations 5
Cbc0038I Pass  65: suminf.    0.74468 (27) obj. 332.8 iterations 84
Cbc0038I Pass  66: suminf.    0.74468 (27) obj. 332.8 iterations 5
Cbc0038I Pass  67: suminf.    8.97677 (59) obj. 332.8 iterations 77
Cbc0038I Pass  68: suminf.    7.11954 (65) obj. 332.8 iterations 18
Cbc0038I Pass  69: suminf.    7.11268 (64) obj. 332.8 iterations 2
Cbc0038I Pass  70: suminf.    8.58575 (54) obj. 332.8 iterations 70
Cbc0038I Pass  71: suminf.    7.88085 (57) obj. 332.8 iterations 24
Cbc0038I Pass  72: suminf.    6.69623 (59) obj. 332.8 iterations 20
Cbc0038I Pass  73: suminf.    7.26789 (62) obj. 332.8 iterations 85
Cbc0038I Pass  74: suminf.    6.18148 (67) obj. 332.8 iterations 19
Cbc0038I Pass  75: suminf.   10.50596 (42) obj. 332.8 iterations 64
Cbc0038I Pass  76: suminf.    9.56826 (44) obj. 332.8 iterations 11
Cbc0038I Pass  77: suminf.    9.19368 (51) obj. 332.8 iterations 8
Cbc0038I Pass  78: suminf.    8.02008 (52) obj. 332.8 iterations 15
Cbc0038I Pass  79: suminf.    6.61455 (71) obj. 332.8 iterations 44
Cbc0038I Pass  80: suminf.    5.51332 (44) obj. 332.8 iterations 29
Cbc0038I Pass  81: suminf.    6.67536 (49) obj. 332.8 iterations 15
Cbc0038I Pass  82: suminf.    5.71712 (45) obj. 332.8 iterations 49
Cbc0038I Pass  83: suminf.    6.08045 (64) obj. 332.8 iterations 38
Cbc0038I Pass  84: suminf.   11.36468 (52) obj. 332.8 iterations 84
Cbc0038I Pass  85: suminf.    9.47085 (66) obj. 332.8 iterations 34
Cbc0038I Pass  86: suminf.    4.50130 (64) obj. 332.8 iterations 58
Cbc0038I Pass  87: suminf.   10.02235 (47) obj. 332.8 iterations 114
Cbc0038I Pass  88: suminf.    8.91891 (45) obj. 332.8 iterations 19
Cbc0038I Pass  89: suminf.    7.78279 (44) obj. 332.8 iterations 55
Cbc0038I Pass  90: suminf.    4.02794 (33) obj. 332.8 iterations 25
Cbc0038I Pass  91: suminf.    2.34272 (12) obj. 332.8 iterations 42
Cbc0038I Pass  92: suminf.    1.51126 (7) obj. 332.8 iterations 16
Cbc0038I Pass  93: suminf.    0.19992 (1) obj. 332.8 iterations 7
Cbc0038I Solution found of 332.8
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 770 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 314
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 671 rows 229 columns - 17 fixed gives 567, 192 - still too large
Cbc0038I Full problem 769 rows 276 columns, reduced to 407 rows 140 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I Round again with cutoff of 304.3
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  94: suminf.   21.02091 (141) obj. 304 iterations 20
Cbc0038I Pass  95: suminf.   21.25595 (134) obj. 304.3 iterations 43
Cbc0038I Pass  96: suminf.   20.96205 (141) obj. 304.3 iterations 32
Cbc0038I Pass  97: suminf.   20.14469 (143) obj. 304.3 iterations 10
Cbc0038I Pass  98: suminf.   18.51347 (132) obj. 304.3 iterations 71
Cbc0038I Pass  99: suminf.   18.11614 (129) obj. 304.3 iterations 13
Cbc0038I Pass 100: suminf.   15.14386 (119) obj. 304.3 iterations 98
Cbc0038I Pass 101: suminf.   13.55506 (103) obj. 304.3 iterations 29
Cbc0038I Pass 102: suminf.   12.69962 (59) obj. 304.3 iterations 107
Cbc0038I Pass 103: suminf.    7.62296 (50) obj. 304.3 iterations 30
Cbc0038I Pass 104: suminf.    7.10558 (50) obj. 304.3 iterations 13
Cbc0038I Pass 105: suminf.    8.36712 (49) obj. 304.3 iterations 89
Cbc0038I Pass 106: suminf.    5.12806 (38) obj. 304.3 iterations 63
Cbc0038I Pass 107: suminf.    4.14486 (47) obj. 304.3 iterations 48
Cbc0038I Pass 108: suminf.    4.14495 (46) obj. 304.3 iterations 2
Cbc0038I Pass 109: suminf.    9.29517 (56) obj. 304.3 iterations 61
Cbc0038I Pass 110: suminf.    5.56785 (33) obj. 304.3 iterations 44
Cbc0038I Pass 111: suminf.    6.68181 (53) obj. 304.3 iterations 44
Cbc0038I Pass 112: suminf.    4.28959 (48) obj. 303.705 iterations 34
Cbc0038I Pass 113: suminf.    4.28959 (48) obj. 303.705 iterations 7
Cbc0038I Pass 114: suminf.   12.49978 (58) obj. 304.3 iterations 104
Cbc0038I Pass 115: suminf.   10.78087 (51) obj. 304.3 iterations 32
Cbc0038I Pass 116: suminf.   10.81959 (52) obj. 304.3 iterations 25
Cbc0038I Pass 117: suminf.    9.53519 (51) obj. 304.3 iterations 15
Cbc0038I Pass 118: suminf.    8.32247 (50) obj. 304.3 iterations 83
Cbc0038I Pass 119: suminf.    6.81954 (46) obj. 304.3 iterations 43
Cbc0038I Pass 120: suminf.    7.36702 (48) obj. 304.3 iterations 51
Cbc0038I Pass 121: suminf.    7.36702 (48) obj. 304.3 iterations 3
Cbc0038I Pass 122: suminf.    6.53698 (41) obj. 304.3 iterations 82
Cbc0038I Pass 123: suminf.    3.72169 (40) obj. 304.3 iterations 31
Cbc0038I Pass 124: suminf.   11.30109 (57) obj. 304.3 iterations 94
Cbc0038I Pass 125: suminf.   11.44151 (52) obj. 304.3 iterations 12
Cbc0038I Pass 126: suminf.    7.02375 (32) obj. 304.3 iterations 107
Cbc0038I Pass 127: suminf.    2.35716 (27) obj. 304.3 iterations 17
Cbc0038I Pass 128: suminf.    8.56363 (63) obj. 304.3 iterations 56
Cbc0038I Pass 129: suminf.    6.98486 (58) obj. 304.3 iterations 5
Cbc0038I Pass 130: suminf.   12.44604 (52) obj. 304.3 iterations 85
Cbc0038I Pass 131: suminf.    9.56550 (50) obj. 304.3 iterations 18
Cbc0038I Pass 132: suminf.    9.56550 (50) obj. 304.3 iterations 2
Cbc0038I Pass 133: suminf.   11.73215 (51) obj. 304.3 iterations 60
Cbc0038I Pass 134: suminf.    7.20280 (43) obj. 304.3 iterations 25
Cbc0038I Pass 135: suminf.    5.01564 (40) obj. 304.3 iterations 4
Cbc0038I Pass 136: suminf.    4.81832 (40) obj. 304.3 iterations 7
Cbc0038I Pass 137: suminf.    9.97442 (40) obj. 304.3 iterations 65
Cbc0038I Pass 138: suminf.    6.62324 (37) obj. 304.3 iterations 32
Cbc0038I Pass 139: suminf.   10.47901 (58) obj. 304.3 iterations 79
Cbc0038I Pass 140: suminf.    6.65565 (47) obj. 304.3 iterations 37
Cbc0038I Pass 141: suminf.    6.45416 (50) obj. 304.3 iterations 42
Cbc0038I Pass 142: suminf.    5.83730 (37) obj. 304.3 iterations 33
Cbc0038I Pass 143: suminf.    3.83768 (29) obj. 304.3 iterations 16
Cbc0038I Pass 144: suminf.    9.04366 (52) obj. 304.3 iterations 47
Cbc0038I Pass 145: suminf.    6.54333 (45) obj. 304.3 iterations 27
Cbc0038I Pass 146: suminf.   13.18187 (46) obj. 304.3 iterations 73
Cbc0038I Pass 147: suminf.    7.55640 (50) obj. 304.3 iterations 65
Cbc0038I Pass 148: suminf.    7.67090 (50) obj. 304.3 iterations 8
Cbc0038I Pass 149: suminf.   12.35540 (58) obj. 304.3 iterations 109
Cbc0038I Pass 150: suminf.    8.21929 (40) obj. 304.3 iterations 41
Cbc0038I Pass 151: suminf.    6.24744 (39) obj. 304.3 iterations 20
Cbc0038I Pass 152: suminf.    5.14055 (42) obj. 304.3 iterations 41
Cbc0038I Pass 153: suminf.    3.54789 (29) obj. 304.3 iterations 28
Cbc0038I Pass 154: suminf.    7.56879 (55) obj. 304.3 iterations 74
Cbc0038I Pass 155: suminf.    6.51158 (29) obj. 304.3 iterations 25
Cbc0038I Pass 156: suminf.    6.89463 (55) obj. 304.3 iterations 100
Cbc0038I Pass 157: suminf.    3.76891 (33) obj. 304.3 iterations 30
Cbc0038I Pass 158: suminf.    3.55800 (23) obj. 304.3 iterations 13
Cbc0038I Pass 159: suminf.    3.57137 (22) obj. 304.3 iterations 5
Cbc0038I Pass 160: suminf.    6.53232 (45) obj. 304.3 iterations 43
Cbc0038I Pass 161: suminf.    4.44843 (34) obj. 304.3 iterations 19
Cbc0038I Pass 162: suminf.    6.90292 (35) obj. 304.3 iterations 52
Cbc0038I Pass 163: suminf.    3.14294 (19) obj. 304.3 iterations 27
Cbc0038I Pass 164: suminf.    8.32006 (48) obj. 304.3 iterations 58
Cbc0038I Pass 165: suminf.    6.00659 (38) obj. 304.3 iterations 8
Cbc0038I Pass 166: suminf.    4.72923 (32) obj. 304.3 iterations 18
Cbc0038I Pass 167: suminf.    4.72923 (32) obj. 304.3 iterations 2
Cbc0038I Pass 168: suminf.    8.39909 (52) obj. 304.3 iterations 86
Cbc0038I Pass 169: suminf.    6.31403 (38) obj. 304.3 iterations 46
Cbc0038I Pass 170: suminf.    6.31403 (38) obj. 304.3 iterations 1
Cbc0038I Pass 171: suminf.    7.18080 (55) obj. 304.3 iterations 124
Cbc0038I Pass 172: suminf.    3.84078 (39) obj. 304.3 iterations 29
Cbc0038I Pass 173: suminf.    3.66744 (31) obj. 304.3 iterations 29
Cbc0038I Pass 174: suminf.    3.66744 (31) obj. 304.3 iterations 0
Cbc0038I Pass 175: suminf.    6.02770 (44) obj. 304.3 iterations 67
Cbc0038I Pass 176: suminf.    2.86127 (23) obj. 304.3 iterations 62
Cbc0038I Pass 177: suminf.    3.78565 (23) obj. 304.3 iterations 15
Cbc0038I Pass 178: suminf.    6.95714 (47) obj. 304.3 iterations 41
Cbc0038I Pass 179: suminf.    4.19427 (23) obj. 304.3 iterations 38
Cbc0038I Pass 180: suminf.    4.19427 (23) obj. 304.3 iterations 0
Cbc0038I Pass 181: suminf.    7.35694 (55) obj. 304.3 iterations 75
Cbc0038I Pass 182: suminf.    4.11490 (33) obj. 304.3 iterations 31
Cbc0038I Pass 183: suminf.    4.11490 (33) obj. 304.3 iterations 0
Cbc0038I Pass 184: suminf.    7.03379 (56) obj. 304.3 iterations 111
Cbc0038I Pass 185: suminf.    4.19427 (23) obj. 304.3 iterations 39
Cbc0038I Pass 186: suminf.    4.19427 (23) obj. 304.3 iterations 9
Cbc0038I Pass 187: suminf.    7.35694 (55) obj. 304.3 iterations 57
Cbc0038I Pass 188: suminf.    4.11490 (33) obj. 304.3 iterations 31
Cbc0038I Pass 189: suminf.    4.11490 (33) obj. 304.3 iterations 0
Cbc0038I Pass 190: suminf.    6.95714 (47) obj. 304.3 iterations 42
Cbc0038I Pass 191: suminf.    4.19427 (23) obj. 304.3 iterations 33
Cbc0038I Pass 192: suminf.    4.19427 (23) obj. 304.3 iterations 0
Cbc0038I Pass 193: suminf.   13.29998 (68) obj. 304.3 iterations 107
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 687 rows 236 columns - 17 fixed gives 589, 201 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.63 seconds)
Cbc0038I After 0.63 seconds - Feasibility pump exiting with objective of 314 - took 0.55 seconds
Cbc0012I Integer solution of 314 found by feasibility pump after 0 iterations and 0 nodes (0.63 seconds)
Cbc0038I Full problem 769 rows 276 columns, reduced to 527 rows 160 columns - 16 fixed gives 439, 131 - still too large
Cbc0038I Full problem 769 rows 276 columns, reduced to 202 rows 65 columns
Cbc0031I 40 added rows had average density of 28.125
Cbc0013I At root node, 40 cuts changed objective from 284 to 287 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 297 row cuts average 2.8 elements, 25 column cuts (25 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 78 row cuts average 90.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 487 row cuts average 76.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 7 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 314 best solution, best possible 287 (1.15 seconds)
Cbc0012I Integer solution of 287 found by DiveCoefficient after 5082 iterations and 2 nodes (1.21 seconds)
Cbc0001I Search completed - best objective 287, took 5085 iterations and 2 nodes (1.21 seconds)
Cbc0032I Strong branching done 38 times (499 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 3 variables fixed on reduced cost
Cuts at root node changed objective from 284 to 287
Probing was tried 20 times and created 425 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Gomory was tried 20 times and created 79 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
Knapsack was tried 20 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 20 times and created 564 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
ZeroHalf was tried 17 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
ImplicationCuts was tried 3 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                287.00000000
Enumerated nodes:               2
Total iterations:               5085
Time (CPU seconds):             1.23
Time (Wallclock seconds):       1.26

Total time (CPU seconds):       1.23   (Wallclock seconds):       1.26

