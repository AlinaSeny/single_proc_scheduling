Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump40_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump40_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 40504.7 - 2.65 seconds
Cgl0002I 324 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 653 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 125 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 4518 rows, 1324 columns (1324 integer (1283 of which binary)) and 15627 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1324 objects (1324 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 837 integers unsatisfied sum - 247.866
Cbc0038I Pass   1: (3.98 seconds) suminf.   87.90684 (779) obj. 61915.7 iterations 2605
Cbc0038I Pass   2: (4.14 seconds) suminf.   68.02729 (765) obj. 62507.1 iterations 645
Cbc0038I Pass   3: (4.31 seconds) suminf.   64.66049 (735) obj. 62362.1 iterations 589
Cbc0038I Pass   4: (4.39 seconds) suminf.   63.94516 (759) obj. 62238.5 iterations 228
Cbc0038I Pass   5: (4.52 seconds) suminf.   56.50822 (748) obj. 62897 iterations 417
Cbc0038I Pass   6: (4.60 seconds) suminf.   56.68483 (774) obj. 63960.3 iterations 216
Cbc0038I Pass   7: (4.62 seconds) suminf.   56.23192 (767) obj. 63945.9 iterations 54
Cbc0038I Pass   8: (4.73 seconds) suminf.   53.68299 (763) obj. 64175.3 iterations 341
Cbc0038I Pass   9: (4.81 seconds) suminf.   53.88189 (737) obj. 64949.3 iterations 237
Cbc0038I Pass  10: (4.84 seconds) suminf.   53.84256 (745) obj. 65067.5 iterations 56
Cbc0038I Pass  11: (4.94 seconds) suminf.   53.94549 (735) obj. 64794.7 iterations 316
Cbc0038I Pass  12: (4.97 seconds) suminf.   52.81821 (734) obj. 64789.9 iterations 51
Cbc0038I Pass  13: (5.07 seconds) suminf.   55.39320 (728) obj. 64313 iterations 348
Cbc0038I Pass  14: (5.11 seconds) suminf.   54.03758 (735) obj. 64203.1 iterations 79
Cbc0038I Pass  15: (5.29 seconds) suminf.   49.15125 (695) obj. 63899 iterations 697
Cbc0038I Pass  16: (5.36 seconds) suminf.   48.98654 (693) obj. 63878.3 iterations 180
Cbc0038I Pass  17: (5.57 seconds) suminf.   51.89625 (695) obj. 64242.9 iterations 791
Cbc0038I Pass  18: (5.64 seconds) suminf.   51.71747 (692) obj. 64013.3 iterations 202
Cbc0038I Pass  19: (5.81 seconds) suminf.   49.46609 (700) obj. 68256.9 iterations 618
Cbc0038I Pass  20: (5.91 seconds) suminf.   48.72384 (725) obj. 67008.1 iterations 325
Cbc0038I Pass  21: (6.11 seconds) suminf.   45.41324 (692) obj. 64942.8 iterations 730
Cbc0038I Pass  22: (6.23 seconds) suminf.   43.26530 (684) obj. 64803.5 iterations 359
Cbc0038I Pass  23: (6.28 seconds) suminf.   43.34700 (665) obj. 64752.4 iterations 113
Cbc0038I Pass  24: (6.35 seconds) suminf.   43.17362 (660) obj. 64852.6 iterations 210
Cbc0038I Pass  25: (6.50 seconds) suminf.   44.69845 (661) obj. 65005 iterations 565
Cbc0038I Pass  26: (6.59 seconds) suminf.   41.30006 (662) obj. 64842.1 iterations 284
Cbc0038I Pass  27: (6.65 seconds) suminf.   39.94150 (633) obj. 64786.1 iterations 178
Cbc0038I Pass  28: (6.76 seconds) suminf.   40.65807 (650) obj. 64739.4 iterations 428
Cbc0038I Pass  29: (6.80 seconds) suminf.   40.31361 (646) obj. 64747.4 iterations 124
Cbc0038I Pass  30: (6.89 seconds) suminf.   41.02375 (671) obj. 64842.3 iterations 304
Cbc0038I Pass  31: (6.93 seconds) suminf.   40.16899 (670) obj. 64827.3 iterations 97
Cbc0038I Pass  32: (7.06 seconds) suminf.   45.70389 (654) obj. 69552.3 iterations 442
Cbc0038I Pass  33: (7.11 seconds) suminf.   41.24228 (668) obj. 69556.3 iterations 147
Cbc0038I Pass  34: (7.12 seconds) suminf.   41.76466 (670) obj. 69565.6 iterations 21
Cbc0038I Pass  35: (7.27 seconds) suminf.   45.77971 (663) obj. 65289.6 iterations 523
Cbc0038I Pass  36: (7.36 seconds) suminf.   39.64225 (656) obj. 63640.3 iterations 315
Cbc0038I Pass  37: (7.54 seconds) suminf.   39.39468 (644) obj. 63761.7 iterations 639
Cbc0038I Pass  38: (7.62 seconds) suminf.   38.00325 (658) obj. 63753 iterations 233
Cbc0038I Pass  39: (7.67 seconds) suminf.   37.18116 (659) obj. 63829.1 iterations 134
Cbc0038I Pass  40: (7.78 seconds) suminf.   37.89769 (654) obj. 63524.8 iterations 310
Cbc0038I Pass  41: (7.86 seconds) suminf.   35.83569 (645) obj. 63486.9 iterations 220
Cbc0038I Pass  42: (7.89 seconds) suminf.   35.93569 (648) obj. 63465.6 iterations 91
Cbc0038I Pass  43: (8.02 seconds) suminf.   40.56129 (661) obj. 63549.3 iterations 457
Cbc0038I Pass  44: (8.13 seconds) suminf.   34.97894 (666) obj. 63576.6 iterations 380
Cbc0038I Pass  45: (8.37 seconds) suminf.   34.62091 (665) obj. 63685.9 iterations 897
Cbc0038I Pass  46: (8.46 seconds) suminf.   36.39360 (683) obj. 63700.8 iterations 312
Cbc0038I Pass  47: (8.59 seconds) suminf.   35.52870 (685) obj. 61698 iterations 427
Cbc0038I Pass  48: (8.74 seconds) suminf.   33.24325 (683) obj. 61329 iterations 580
Cbc0038I Pass  49: (8.82 seconds) suminf.   32.42660 (678) obj. 61308.3 iterations 247
Cbc0038I Pass  50: (8.94 seconds) suminf.   35.30996 (674) obj. 61206.1 iterations 429
Cbc0038I Pass  51: (9.06 seconds) suminf.   33.05808 (697) obj. 61368 iterations 462
Cbc0038I Pass  52: (9.27 seconds) suminf.   37.69451 (666) obj. 62959 iterations 815
Cbc0038I Pass  53: (9.34 seconds) suminf.   37.89206 (678) obj. 63119.6 iterations 179
Cbc0038I Pass  54: (9.55 seconds) suminf.   41.60825 (690) obj. 63397.4 iterations 803
Cbc0038I Pass  55: (9.63 seconds) suminf.   40.30416 (647) obj. 63671.6 iterations 322
Cbc0038I Pass  56: (9.69 seconds) suminf.   39.18151 (651) obj. 63533.1 iterations 252
Cbc0038I Pass  57: (9.76 seconds) suminf.   37.85050 (637) obj. 63576.9 iterations 204
Cbc0038I Pass  58: (9.91 seconds) suminf.   40.81246 (678) obj. 63390.4 iterations 663
Cbc0038I Pass  59: (9.97 seconds) suminf.   39.54080 (674) obj. 63374.1 iterations 183
Cbc0038I Pass  60: (10.17 seconds) suminf.   38.01460 (676) obj. 62939.9 iterations 868
Cbc0038I Pass  61: (10.22 seconds) suminf.   36.91869 (674) obj. 62918.9 iterations 151
Cbc0038I Pass  62: (10.37 seconds) suminf.   39.02562 (627) obj. 62999.1 iterations 596
Cbc0038I Pass  63: (10.45 seconds) suminf.   36.07622 (645) obj. 63307 iterations 310
Cbc0038I Pass  64: (10.65 seconds) suminf.   37.14824 (629) obj. 63192.6 iterations 831
Cbc0038I Pass  65: (10.73 seconds) suminf.   35.48943 (635) obj. 63168.6 iterations 247
Cbc0038I Pass  66: (10.86 seconds) suminf.   39.08407 (663) obj. 63057.8 iterations 544
Cbc0038I Pass  67: (10.94 seconds) suminf.   35.27171 (637) obj. 63058 iterations 257
Cbc0038I Pass  68: (11.00 seconds) suminf.   34.18802 (639) obj. 63281.1 iterations 184
Cbc0038I Pass  69: (11.17 seconds) suminf.   36.97694 (645) obj. 63195.4 iterations 681
Cbc0038I Pass  70: (11.24 seconds) suminf.   34.26497 (617) obj. 62859.6 iterations 221
Cbc0038I Pass  71: (11.40 seconds) suminf.   36.88327 (593) obj. 62898.5 iterations 655
Cbc0038I Pass  72: (11.46 seconds) suminf.   34.39235 (593) obj. 62958.3 iterations 227
Cbc0038I Pass  73: (11.62 seconds) suminf.   35.06981 (585) obj. 62858.5 iterations 657
Cbc0038I Pass  74: (11.69 seconds) suminf.   33.47632 (576) obj. 63128.8 iterations 239
Cbc0038I Pass  75: (11.85 seconds) suminf.   33.45788 (563) obj. 62921.8 iterations 682
Cbc0038I Pass  76: (11.93 seconds) suminf.   34.44051 (559) obj. 62936.1 iterations 310
Cbc0038I Pass  77: (12.09 seconds) suminf.   33.37809 (566) obj. 67381.5 iterations 696
Cbc0038I Pass  78: (12.15 seconds) suminf.   33.13572 (568) obj. 67187.2 iterations 154
Cbc0038I Pass  79: (12.27 seconds) suminf.   33.47821 (537) obj. 69067.9 iterations 528
Cbc0038I Pass  80: (12.33 seconds) suminf.   31.78880 (542) obj. 69163.2 iterations 211
Cbc0038I Pass  81: (12.48 seconds) suminf.   34.27626 (511) obj. 69134.7 iterations 647
Cbc0038I Pass  82: (12.54 seconds) suminf.   33.94660 (508) obj. 68873.6 iterations 191
Cbc0038I Pass  83: (12.56 seconds) suminf.   32.33256 (516) obj. 68872.2 iterations 70
Cbc0038I Pass  84: (12.71 seconds) suminf.   39.71534 (507) obj. 68853.6 iterations 643
Cbc0038I Pass  85: (12.81 seconds) suminf.   34.17678 (506) obj. 68729.2 iterations 402
Cbc0038I Pass  86: (12.86 seconds) suminf.   34.71794 (491) obj. 68746.9 iterations 183
Cbc0038I Pass  87: (12.96 seconds) suminf.   33.86702 (457) obj. 68836.7 iterations 388
Cbc0038I Pass  88: (13.01 seconds) suminf.   33.10679 (476) obj. 68600.7 iterations 158
Cbc0038I Pass  89: (13.03 seconds) suminf.   32.58910 (466) obj. 68550.2 iterations 67
Cbc0038I Pass  90: (13.14 seconds) suminf.   31.15054 (467) obj. 72265.4 iterations 435
Cbc0038I Pass  91: (13.18 seconds) suminf.   30.12282 (470) obj. 72251.2 iterations 134
Cbc0038I Pass  92: (13.32 seconds) suminf.   32.29842 (456) obj. 72266.5 iterations 611
Cbc0038I Pass  93: (13.38 seconds) suminf.   29.13721 (435) obj. 71936.8 iterations 185
Cbc0038I Pass  94: (13.39 seconds) suminf.   29.14548 (438) obj. 71559.7 iterations 45
Cbc0038I Pass  95: (13.49 seconds) suminf.   31.10053 (432) obj. 71901.2 iterations 392
Cbc0038I Pass  96: (13.54 seconds) suminf.   30.68368 (435) obj. 72195.7 iterations 184
Cbc0038I Pass  97: (13.64 seconds) suminf.   30.52961 (457) obj. 71225.6 iterations 416
Cbc0038I Pass  98: (13.65 seconds) suminf.   30.41411 (460) obj. 71470.4 iterations 8
Cbc0038I Pass  99: (13.76 seconds) suminf.   30.13483 (423) obj. 72257.8 iterations 504
Cbc0038I Pass 100: (14.07 seconds) suminf.   77.73911 (595) obj. 82031.4 iterations 1360
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1324 columns, reduced to 4318 rows 1234 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.89 seconds)
Cbc0038I After 14.89 seconds - Feasibility pump exiting - took 11.60 seconds
Cbc0031I 26 added rows had average density of 38.269231
Cbc0013I At root node, 26 cuts changed objective from 40504.676 to 41959.074 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 160 row cuts average 143.0 elements, 0 column cuts (0 active)  in 0.539 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 406 row cuts average 138.5 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41959.074 (51.91 seconds)
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 42041.057 (173.79 seconds)
Cbc0010I After 200 nodes, 14 on tree, 1e+50 best solution, best possible 42041.057 (294.86 seconds)
Cbc0010I After 300 nodes, 29 on tree, 1e+50 best solution, best possible 42041.057 (405.44 seconds)
Cbc0010I After 400 nodes, 54 on tree, 1e+50 best solution, best possible 42041.057 (487.57 seconds)
Cbc0010I After 500 nodes, 65 on tree, 1e+50 best solution, best possible 42041.057 (562.00 seconds)
Cbc0010I After 600 nodes, 80 on tree, 1e+50 best solution, best possible 42041.057 (644.62 seconds)
Cbc0010I After 700 nodes, 102 on tree, 1e+50 best solution, best possible 42041.057 (723.07 seconds)
Cbc0010I After 800 nodes, 125 on tree, 1e+50 best solution, best possible 42041.057 (816.76 seconds)
Cbc0010I After 900 nodes, 156 on tree, 1e+50 best solution, best possible 42041.057 (893.21 seconds)
Cbc0010I After 1000 nodes, 189 on tree, 1e+50 best solution, best possible 42041.057 (973.88 seconds)
Cbc0010I After 1100 nodes, 185 on tree, 1e+50 best solution, best possible 43664 (1052.22 seconds)
Cbc0010I After 1200 nodes, 187 on tree, 1e+50 best solution, best possible 43664 (1134.18 seconds)
Cbc0010I After 1300 nodes, 185 on tree, 1e+50 best solution, best possible 43664 (1211.09 seconds)
Cbc0010I After 1400 nodes, 182 on tree, 1e+50 best solution, best possible 43664 (1291.37 seconds)
Cbc0010I After 1500 nodes, 179 on tree, 1e+50 best solution, best possible 43664 (1381.98 seconds)
Cbc0010I After 1600 nodes, 190 on tree, 1e+50 best solution, best possible 43664 (1460.80 seconds)
Cbc0010I After 1700 nodes, 184 on tree, 1e+50 best solution, best possible 43664 (1533.06 seconds)
Cbc0010I After 1800 nodes, 177 on tree, 1e+50 best solution, best possible 43664 (1616.72 seconds)
Cbc0010I After 1900 nodes, 144 on tree, 1e+50 best solution, best possible 43664 (1716.58 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 43664), took 3091169 iterations and 1992 nodes (1799.94 seconds)
Cbc0032I Strong branching done 22478 times (1952301 iterations), fathomed 219 nodes and fixed 1268 variables
Cbc0035I Maximum depth 65, 0 variables fixed on reduced cost
Cuts at root node changed objective from 40504.7 to 41959.1
Probing was tried 10 times and created 22 cuts of which 0 were active after adding rounds of cuts (0.089 seconds)
Gomory was tried 438 times and created 1502 cuts of which 0 were active after adding rounds of cuts (4.940 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 438 times and created 10789 cuts of which 0 were active after adding rounds of cuts (2.082 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
ImplicationCuts was tried 39 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    43664.000
Enumerated nodes:               1992
Total iterations:               3091169
Time (CPU seconds):             1799.95
Time (Wallclock seconds):       1803.93

Total time (CPU seconds):       1799.97   (Wallclock seconds):       1803.95

