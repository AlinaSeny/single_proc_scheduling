Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag322_down_left_input.lp sec 1800 solve solu transitive/dag322_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.39398e+06 - 1.23 seconds
Cgl0002I 2197 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1270 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0004I processed model has 6948 rows, 2249 columns (2249 integer (2189 of which binary)) and 23104 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2249 objects (2249 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 946 integers unsatisfied sum - 208.37
Cbc0038I Pass   1: (2.92 seconds) suminf.  132.55342 (908) obj. 1.60089e+06 iterations 2023
Cbc0038I Pass   2: (2.96 seconds) suminf.  132.24545 (907) obj. 1.60179e+06 iterations 92
Cbc0038I Pass   3: (3.08 seconds) suminf.  127.05680 (900) obj. 1.6332e+06 iterations 306
Cbc0038I Pass   4: (3.14 seconds) suminf.  125.98646 (908) obj. 1.63111e+06 iterations 141
Cbc0038I Pass   5: (3.22 seconds) suminf.  125.63043 (898) obj. 1.63215e+06 iterations 170
Cbc0038I Pass   6: (3.24 seconds) suminf.  125.78280 (902) obj. 1.63259e+06 iterations 30
Cbc0038I Pass   7: (3.38 seconds) suminf.  120.34986 (884) obj. 1.62661e+06 iterations 341
Cbc0038I Pass   8: (3.41 seconds) suminf.  120.02853 (866) obj. 1.62617e+06 iterations 54
Cbc0038I Pass   9: (3.43 seconds) suminf.  120.27394 (863) obj. 1.62625e+06 iterations 12
Cbc0038I Pass  10: (3.58 seconds) suminf.  116.81324 (863) obj. 1.64235e+06 iterations 384
Cbc0038I Pass  11: (3.64 seconds) suminf.  114.91083 (839) obj. 1.63818e+06 iterations 120
Cbc0038I Pass  12: (3.70 seconds) suminf.  114.99218 (846) obj. 1.64207e+06 iterations 111
Cbc0038I Pass  13: (3.83 seconds) suminf.  108.73660 (819) obj. 1.65148e+06 iterations 325
Cbc0038I Pass  14: (3.86 seconds) suminf.  107.36712 (820) obj. 1.63981e+06 iterations 41
Cbc0038I Pass  15: (3.97 seconds) suminf.  103.48290 (798) obj. 1.65151e+06 iterations 246
Cbc0038I Pass  16: (4.03 seconds) suminf.  104.16011 (794) obj. 1.65653e+06 iterations 132
Cbc0038I Pass  17: (4.18 seconds) suminf.  104.25942 (796) obj. 1.6309e+06 iterations 377
Cbc0038I Pass  18: (4.25 seconds) suminf.  101.90836 (793) obj. 1.62237e+06 iterations 146
Cbc0038I Pass  19: (4.27 seconds) suminf.  102.91886 (795) obj. 1.6201e+06 iterations 15
Cbc0038I Pass  20: (4.39 seconds) suminf.   98.10258 (768) obj. 1.62384e+06 iterations 331
Cbc0038I Pass  21: (4.47 seconds) suminf.   96.32046 (782) obj. 1.63184e+06 iterations 199
Cbc0038I Pass  22: (4.60 seconds) suminf.   89.08814 (777) obj. 1.56156e+06 iterations 353
Cbc0038I Pass  23: (4.63 seconds) suminf.   89.02739 (775) obj. 1.56145e+06 iterations 63
Cbc0038I Pass  24: (4.73 seconds) suminf.   89.72428 (760) obj. 1.57498e+06 iterations 219
Cbc0038I Pass  25: (4.80 seconds) suminf.   87.89255 (754) obj. 1.55823e+06 iterations 169
Cbc0038I Pass  26: (4.81 seconds) suminf.   87.89255 (754) obj. 1.55823e+06 iterations 3
Cbc0038I Pass  27: (4.92 seconds) suminf.   88.78840 (745) obj. 1.55745e+06 iterations 292
Cbc0038I Pass  28: (5.02 seconds) suminf.   87.41803 (748) obj. 1.55767e+06 iterations 254
Cbc0038I Pass  29: (5.03 seconds) suminf.   87.41803 (748) obj. 1.55767e+06 iterations 1
Cbc0038I Pass  30: (5.18 seconds) suminf.   85.08218 (768) obj. 1.57144e+06 iterations 390
Cbc0038I Pass  31: (5.23 seconds) suminf.   84.34772 (765) obj. 1.55856e+06 iterations 125
Cbc0038I Pass  32: (5.24 seconds) suminf.   84.62961 (766) obj. 1.55866e+06 iterations 10
Cbc0038I Pass  33: (5.28 seconds) suminf.   85.07234 (764) obj. 1.55781e+06 iterations 89
Cbc0038I Pass  34: (5.32 seconds) suminf.   85.11723 (767) obj. 1.55882e+06 iterations 86
Cbc0038I Pass  35: (5.34 seconds) suminf.   85.03083 (767) obj. 1.5588e+06 iterations 4
Cbc0038I Pass  36: (5.42 seconds) suminf.   85.04739 (776) obj. 1.5756e+06 iterations 171
Cbc0038I Pass  37: (5.53 seconds) suminf.   84.34772 (765) obj. 1.55856e+06 iterations 242
Cbc0038I Pass  38: (5.54 seconds) suminf.   84.62961 (766) obj. 1.55866e+06 iterations 9
Cbc0038I Pass  39: (5.64 seconds) suminf.   86.74861 (761) obj. 1.57532e+06 iterations 216
Cbc0038I Pass  40: (5.76 seconds) suminf.   84.73764 (765) obj. 1.55831e+06 iterations 288
Cbc0038I Pass  41: (5.78 seconds) suminf.   85.03083 (767) obj. 1.5588e+06 iterations 37
Cbc0038I Pass  42: (5.86 seconds) suminf.   84.97858 (768) obj. 1.57115e+06 iterations 168
Cbc0038I Pass  43: (5.93 seconds) suminf.   84.34772 (765) obj. 1.55856e+06 iterations 161
Cbc0038I Pass  44: (5.94 seconds) suminf.   84.62961 (766) obj. 1.55866e+06 iterations 11
Cbc0038I Pass  45: (6.00 seconds) suminf.   85.25307 (762) obj. 1.55656e+06 iterations 121
Cbc0038I Pass  46: (6.05 seconds) suminf.   85.11723 (767) obj. 1.55882e+06 iterations 116
Cbc0038I Pass  47: (6.06 seconds) suminf.   85.03083 (767) obj. 1.5588e+06 iterations 3
Cbc0038I Pass  48: (6.15 seconds) suminf.   85.36550 (776) obj. 1.57448e+06 iterations 191
Cbc0038I Pass  49: (6.23 seconds) suminf.   84.34772 (765) obj. 1.55856e+06 iterations 169
Cbc0038I Pass  50: (6.24 seconds) suminf.   84.62961 (766) obj. 1.55866e+06 iterations 8
Cbc0038I Pass  51: (6.31 seconds) suminf.   85.54876 (767) obj. 1.57169e+06 iterations 166
Cbc0038I Pass  52: (6.38 seconds) suminf.   84.73764 (765) obj. 1.55831e+06 iterations 145
Cbc0038I Pass  53: (6.40 seconds) suminf.   85.03083 (767) obj. 1.5588e+06 iterations 34
Cbc0038I Pass  54: (6.49 seconds) suminf.   85.15717 (770) obj. 1.57104e+06 iterations 196
Cbc0038I Pass  55: (6.57 seconds) suminf.   84.34772 (765) obj. 1.55856e+06 iterations 187
Cbc0038I Pass  56: (6.59 seconds) suminf.   84.62961 (766) obj. 1.55866e+06 iterations 9
Cbc0038I Pass  57: (6.75 seconds) suminf.   88.89315 (745) obj. 1.57748e+06 iterations 451
Cbc0038I Pass  58: (6.85 seconds) suminf.   88.91010 (766) obj. 1.55615e+06 iterations 219
Cbc0038I Pass  59: (6.94 seconds) suminf.   84.90674 (756) obj. 1.55398e+06 iterations 204
Cbc0038I Pass  60: (7.00 seconds) suminf.   84.31937 (761) obj. 1.55899e+06 iterations 148
Cbc0038I Pass  61: (7.02 seconds) suminf.   84.38248 (761) obj. 1.55914e+06 iterations 32
Cbc0038I Pass  62: (7.10 seconds) suminf.   86.13119 (758) obj. 1.5709e+06 iterations 170
Cbc0038I Pass  63: (7.18 seconds) suminf.   84.33925 (760) obj. 1.55913e+06 iterations 206
Cbc0038I Pass  64: (7.73 seconds) suminf.  108.85071 (797) obj. 1.92594e+06 iterations 1732
Cbc0038I Pass  65: (8.06 seconds) suminf.   83.82642 (747) obj. 2.04436e+06 iterations 1151
Cbc0038I Pass  66: (8.13 seconds) suminf.   83.51895 (751) obj. 2.0521e+06 iterations 149
Cbc0038I Pass  67: (8.21 seconds) suminf.   83.80877 (745) obj. 2.02036e+06 iterations 157
Cbc0038I Pass  68: (8.23 seconds) suminf.   84.43913 (747) obj. 2.01875e+06 iterations 45
Cbc0038I Pass  69: (8.37 seconds) suminf.   80.47959 (748) obj. 2.04872e+06 iterations 326
Cbc0038I Pass  70: (8.39 seconds) suminf.   80.17204 (760) obj. 2.05404e+06 iterations 56
Cbc0038I Pass  71: (8.50 seconds) suminf.   77.60514 (741) obj. 2.06051e+06 iterations 259
Cbc0038I Pass  72: (8.54 seconds) suminf.   77.25872 (746) obj. 2.06589e+06 iterations 77
Cbc0038I Pass  73: (8.73 seconds) suminf.   72.76768 (710) obj. 2.05587e+06 iterations 526
Cbc0038I Pass  74: (8.76 seconds) suminf.   73.30956 (711) obj. 2.05593e+06 iterations 57
Cbc0038I Pass  75: (8.88 seconds) suminf.   72.39827 (706) obj. 2.04909e+06 iterations 294
Cbc0038I Pass  76: (8.91 seconds) suminf.   72.63952 (711) obj. 2.0472e+06 iterations 58
Cbc0038I Pass  77: (8.94 seconds) suminf.   73.29268 (706) obj. 2.05892e+06 iterations 58
Cbc0038I Pass  78: (9.02 seconds) suminf.   73.55146 (683) obj. 2.05159e+06 iterations 177
Cbc0038I Pass  79: (9.04 seconds) suminf.   74.35630 (685) obj. 2.0525e+06 iterations 30
Cbc0038I Pass  80: (9.05 seconds) suminf.   75.04468 (683) obj. 2.05285e+06 iterations 11
Cbc0038I Pass  81: (9.17 seconds) suminf.   71.43451 (671) obj. 2.04044e+06 iterations 317
Cbc0038I Pass  82: (9.22 seconds) suminf.   72.26239 (662) obj. 2.05473e+06 iterations 129
Cbc0038I Pass  83: (9.27 seconds) suminf.   72.10499 (668) obj. 2.05768e+06 iterations 119
Cbc0038I Pass  84: (9.39 seconds) suminf.   71.99960 (671) obj. 2.05394e+06 iterations 273
Cbc0038I Pass  85: (9.41 seconds) suminf.   72.60691 (669) obj. 2.05503e+06 iterations 41
Cbc0038I Pass  86: (9.51 seconds) suminf.   69.36573 (674) obj. 2.07131e+06 iterations 261
Cbc0038I Pass  87: (9.54 seconds) suminf.   69.19136 (673) obj. 2.0661e+06 iterations 54
Cbc0038I Pass  88: (9.57 seconds) suminf.   68.25139 (665) obj. 2.06003e+06 iterations 50
Cbc0038I Pass  89: (9.64 seconds) suminf.   66.89195 (657) obj. 2.06321e+06 iterations 181
Cbc0038I Pass  90: (9.70 seconds) suminf.   66.25010 (684) obj. 2.06505e+06 iterations 129
Cbc0038I Pass  91: (9.85 seconds) suminf.   64.02285 (643) obj. 2.05916e+06 iterations 394
Cbc0038I Pass  92: (9.89 seconds) suminf.   63.22822 (641) obj. 2.05873e+06 iterations 96
Cbc0038I Pass  93: (9.91 seconds) suminf.   63.58500 (641) obj. 2.05843e+06 iterations 33
Cbc0038I Pass  94: (10.02 seconds) suminf.   59.30593 (649) obj. 2.0706e+06 iterations 233
Cbc0038I Pass  95: (10.05 seconds) suminf.   58.55647 (653) obj. 2.07039e+06 iterations 63
Cbc0038I Pass  96: (10.19 seconds) suminf.   56.57210 (627) obj. 2.07683e+06 iterations 325
Cbc0038I Pass  97: (10.22 seconds) suminf.   55.73433 (617) obj. 2.07563e+06 iterations 54
Cbc0038I Pass  98: (10.23 seconds) suminf.   55.42742 (613) obj. 2.07548e+06 iterations 22
Cbc0038I Pass  99: (10.32 seconds) suminf.   57.02269 (595) obj. 2.07505e+06 iterations 195
Cbc0038I Pass 100: (10.73 seconds) suminf.   83.34804 (624) obj. 2.1419e+06 iterations 1317
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 728 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6948 rows 2249 columns, reduced to 3437 rows 1088 columns
Cbc0038I Mini branch and bound did not improve solution (12.26 seconds)
Cbc0038I After 12.26 seconds - Feasibility pump exiting - took 9.97 seconds
Cbc0031I 53 added rows had average density of 7.5849057
Cbc0013I At root node, 53 cuts changed objective from 1396416.1 to 1425408 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 8.1 elements, 0 column cuts (0 active)  in 1.004 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 110 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.454 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1425408 (16.42 seconds)
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 1425408 (57.34 seconds)
Cbc0010I After 200 nodes, 27 on tree, 1e+50 best solution, best possible 1425408 (138.10 seconds)
Cbc0010I After 300 nodes, 9 on tree, 1e+50 best solution, best possible 1425408 (265.68 seconds)
Cbc0010I After 400 nodes, 16 on tree, 1e+50 best solution, best possible 1425408 (322.47 seconds)
Cbc0010I After 500 nodes, 32 on tree, 1e+50 best solution, best possible 1425408 (395.72 seconds)
Cbc0010I After 600 nodes, 17 on tree, 1e+50 best solution, best possible 1425408 (455.03 seconds)
Cbc0010I After 700 nodes, 31 on tree, 1e+50 best solution, best possible 1425408 (528.71 seconds)
Cbc0010I After 800 nodes, 61 on tree, 1e+50 best solution, best possible 1425408 (580.61 seconds)
Cbc0010I After 900 nodes, 65 on tree, 1e+50 best solution, best possible 1425408 (619.60 seconds)
Cbc0010I After 1000 nodes, 64 on tree, 1e+50 best solution, best possible 1425408 (649.33 seconds)
Cbc0010I After 1100 nodes, 47 on tree, 1e+50 best solution, best possible 1425408 (698.21 seconds)
Cbc0010I After 1200 nodes, 32 on tree, 1e+50 best solution, best possible 1425408 (743.03 seconds)
Cbc0010I After 1300 nodes, 30 on tree, 1e+50 best solution, best possible 1425408 (812.18 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 1e+50 best solution, best possible 1425408 (878.80 seconds)
Cbc0010I After 1500 nodes, 17 on tree, 1e+50 best solution, best possible 1425408 (956.23 seconds)
Cbc0010I After 1600 nodes, 42 on tree, 1e+50 best solution, best possible 1425408 (1022.01 seconds)
Cbc0010I After 1700 nodes, 42 on tree, 1e+50 best solution, best possible 1425408 (1107.87 seconds)
Cbc0010I After 1800 nodes, 38 on tree, 1e+50 best solution, best possible 1425408 (1169.73 seconds)
Cbc0010I After 1900 nodes, 47 on tree, 1e+50 best solution, best possible 1425408 (1227.19 seconds)
Cbc0010I After 2000 nodes, 50 on tree, 1e+50 best solution, best possible 1425408 (1279.82 seconds)
Cbc0010I After 2100 nodes, 39 on tree, 1e+50 best solution, best possible 1425408 (1321.39 seconds)
Cbc0010I After 2200 nodes, 51 on tree, 1e+50 best solution, best possible 1425408 (1371.75 seconds)
Cbc0010I After 2300 nodes, 51 on tree, 1e+50 best solution, best possible 1425408 (1393.11 seconds)
Cbc0010I After 2400 nodes, 45 on tree, 1e+50 best solution, best possible 1425408 (1417.23 seconds)
Cbc0010I After 2500 nodes, 46 on tree, 1e+50 best solution, best possible 1425408 (1450.20 seconds)
Cbc0010I After 2600 nodes, 44 on tree, 1e+50 best solution, best possible 1425408 (1511.62 seconds)
Cbc0010I After 2700 nodes, 43 on tree, 1e+50 best solution, best possible 1425408 (1602.20 seconds)
Cbc0010I After 2800 nodes, 24 on tree, 1e+50 best solution, best possible 1425408 (1692.70 seconds)
Cbc0010I After 2900 nodes, 23 on tree, 1e+50 best solution, best possible 1425408 (1760.79 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1425408), took 2566043 iterations and 2951 nodes (1799.40 seconds)
Cbc0032I Strong branching done 30982 times (2159457 iterations), fathomed 503 nodes and fixed 2182 variables
Cbc0035I Maximum depth 77, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.39642e+06 to 1.42541e+06
Probing was tried 10 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.165 seconds)
Gomory was tried 543 times and created 1979 cuts of which 0 were active after adding rounds of cuts (4.699 seconds)
Knapsack was tried 543 times and created 2600 cuts of which 0 were active after adding rounds of cuts (1.193 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 543 times and created 13103 cuts of which 0 were active after adding rounds of cuts (1.792 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.081 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1425408.000
Enumerated nodes:               2951
Total iterations:               2566043
Time (CPU seconds):             1799.40
Time (Wallclock seconds):       1800.04

Total time (CPU seconds):       1799.45   (Wallclock seconds):       1800.10

