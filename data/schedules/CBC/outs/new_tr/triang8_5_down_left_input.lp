Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_5_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang8_5_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 376.603 - 0.21 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 81 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2624 rows, 916 columns (916 integer (880 of which binary)) and 8614 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 534 integers unsatisfied sum - 101.829
Cbc0038I Pass   1: suminf.   56.30833 (463) obj. 473.421 iterations 873
Cbc0038I Pass   2: suminf.   48.27657 (488) obj. 508.259 iterations 244
Cbc0038I Pass   3: suminf.   48.59616 (487) obj. 508.133 iterations 5
Cbc0038I Pass   4: suminf.   48.95146 (484) obj. 522.67 iterations 147
Cbc0038I Pass   5: suminf.   47.30531 (472) obj. 523.411 iterations 74
Cbc0038I Pass   6: suminf.   42.90289 (496) obj. 519.584 iterations 324
Cbc0038I Pass   7: suminf.   41.09794 (493) obj. 520.083 iterations 112
Cbc0038I Pass   8: suminf.   41.05012 (492) obj. 520.08 iterations 9
Cbc0038I Pass   9: suminf.   37.67178 (492) obj. 518.362 iterations 208
Cbc0038I Pass  10: suminf.   37.82148 (493) obj. 521.18 iterations 116
Cbc0038I Pass  11: suminf.   35.83472 (486) obj. 522.844 iterations 46
Cbc0038I Pass  12: suminf.   43.33619 (459) obj. 521.077 iterations 224
Cbc0038I Pass  13: suminf.   40.48716 (478) obj. 523.776 iterations 156
Cbc0038I Pass  14: suminf.   39.81118 (481) obj. 523.688 iterations 38
Cbc0038I Pass  15: suminf.   37.69488 (477) obj. 523.019 iterations 183
Cbc0038I Pass  16: suminf.   37.40535 (483) obj. 522.86 iterations 144
Cbc0038I Pass  17: suminf.   39.87408 (474) obj. 524.371 iterations 164
Cbc0038I Pass  18: suminf.   40.96029 (480) obj. 523.657 iterations 150
Cbc0038I Pass  19: suminf.   39.15709 (484) obj. 522.719 iterations 113
Cbc0038I Pass  20: suminf.   36.75459 (471) obj. 523.662 iterations 166
Cbc0038I Pass  21: suminf.   37.22698 (474) obj. 524.784 iterations 150
Cbc0038I Pass  22: suminf.   44.32692 (448) obj. 536.672 iterations 232
Cbc0038I Pass  23: suminf.   40.26798 (481) obj. 529.147 iterations 150
Cbc0038I Pass  24: suminf.   37.43413 (494) obj. 526.238 iterations 111
Cbc0038I Pass  25: suminf.   37.21369 (497) obj. 527.525 iterations 46
Cbc0038I Pass  26: suminf.   40.93209 (461) obj. 533.867 iterations 225
Cbc0038I Pass  27: suminf.   37.42263 (481) obj. 525.227 iterations 119
Cbc0038I Pass  28: suminf.   38.66058 (486) obj. 523.569 iterations 40
Cbc0038I Pass  29: suminf.   41.59530 (498) obj. 522.661 iterations 146
Cbc0038I Pass  30: suminf.   38.30411 (484) obj. 523.74 iterations 124
Cbc0038I Pass  31: suminf.   38.66516 (474) obj. 523.334 iterations 183
Cbc0038I Pass  32: suminf.   37.07020 (494) obj. 521.892 iterations 211
Cbc0038I Pass  33: suminf.   37.18608 (488) obj. 522.801 iterations 39
Cbc0038I Pass  34: suminf.   41.06312 (466) obj. 524.801 iterations 231
Cbc0038I Pass  35: suminf.   37.05116 (477) obj. 521.155 iterations 124
Cbc0038I Pass  36: suminf.   36.79080 (482) obj. 521.873 iterations 44
Cbc0038I Pass  37: suminf.   36.55742 (481) obj. 520.503 iterations 34
Cbc0038I Pass  38: suminf.   40.25445 (480) obj. 540.771 iterations 207
Cbc0038I Pass  39: suminf.   38.96839 (484) obj. 523.946 iterations 157
Cbc0038I Pass  40: suminf.   37.84205 (486) obj. 525.297 iterations 95
Cbc0038I Pass  41: suminf.   39.03080 (464) obj. 526.287 iterations 218
Cbc0038I Pass  42: suminf.   38.05272 (468) obj. 518.546 iterations 170
Cbc0038I Pass  43: suminf.   36.63701 (478) obj. 513.69 iterations 55
Cbc0038I Pass  44: suminf.   36.55742 (481) obj. 520.503 iterations 31
Cbc0038I Pass  45: suminf.   43.44780 (458) obj. 528.146 iterations 203
Cbc0038I Pass  46: suminf.   34.80197 (486) obj. 523.085 iterations 239
Cbc0038I Pass  47: suminf.   38.23625 (479) obj. 530.05 iterations 164
Cbc0038I Pass  48: suminf.   36.25769 (498) obj. 521.785 iterations 164
Cbc0038I Pass  49: suminf.   36.43385 (477) obj. 522.401 iterations 111
Cbc0038I Pass  50: suminf.   76.14850 (510) obj. 550.335 iterations 681
Cbc0038I Pass  51: suminf.   52.91575 (470) obj. 553.878 iterations 410
Cbc0038I Pass  52: suminf.   48.96533 (475) obj. 573.177 iterations 147
Cbc0038I Pass  53: suminf.   45.37704 (477) obj. 572.792 iterations 79
Cbc0038I Pass  54: suminf.   45.01959 (461) obj. 572.384 iterations 50
Cbc0038I Pass  55: suminf.   45.22331 (463) obj. 572.327 iterations 5
Cbc0038I Pass  56: suminf.   42.95772 (467) obj. 571.386 iterations 130
Cbc0038I Pass  57: suminf.   40.98583 (475) obj. 572.185 iterations 71
Cbc0038I Pass  58: suminf.   44.00086 (404) obj. 573.985 iterations 317
Cbc0038I Pass  59: suminf.   41.39754 (404) obj. 593.493 iterations 100
Cbc0038I Pass  60: suminf.   39.66223 (416) obj. 600.803 iterations 60
Cbc0038I Pass  61: suminf.   39.28966 (417) obj. 601.084 iterations 18
Cbc0038I Pass  62: suminf.   39.86452 (403) obj. 571.567 iterations 201
Cbc0038I Pass  63: suminf.   38.13910 (419) obj. 596.021 iterations 80
Cbc0038I Pass  64: suminf.   38.22617 (421) obj. 596.054 iterations 13
Cbc0038I Pass  65: suminf.   40.37207 (418) obj. 581.269 iterations 213
Cbc0038I Pass  66: suminf.   40.22498 (420) obj. 588.036 iterations 72
Cbc0038I Pass  67: suminf.   38.83506 (408) obj. 595.721 iterations 208
Cbc0038I Pass  68: suminf.   38.67356 (434) obj. 596.622 iterations 87
Cbc0038I Pass  69: suminf.   38.79094 (437) obj. 596.888 iterations 6
Cbc0038I Pass  70: suminf.   38.41141 (418) obj. 595.141 iterations 116
Cbc0038I Pass  71: suminf.   38.61840 (414) obj. 595.145 iterations 5
Cbc0038I Pass  72: suminf.   43.93258 (412) obj. 589.578 iterations 175
Cbc0038I Pass  73: suminf.   43.67602 (408) obj. 583.564 iterations 116
Cbc0038I Pass  74: suminf.   43.58386 (405) obj. 584.246 iterations 18
Cbc0038I Pass  75: suminf.   40.15815 (387) obj. 573.974 iterations 203
Cbc0038I Pass  76: suminf.   40.44648 (393) obj. 567.903 iterations 35
Cbc0038I Pass  77: suminf.   40.82595 (389) obj. 567.313 iterations 153
Cbc0038I Pass  78: suminf.   40.40128 (393) obj. 567.067 iterations 44
Cbc0038I Pass  79: suminf.   42.21249 (395) obj. 566.415 iterations 154
Cbc0038I Pass  80: suminf.   39.22093 (394) obj. 567.85 iterations 112
Cbc0038I Pass  81: suminf.   39.42032 (392) obj. 567.759 iterations 11
Cbc0038I Pass  82: suminf.   41.58824 (382) obj. 567.45 iterations 150
Cbc0038I Pass  83: suminf.   41.15295 (388) obj. 567.682 iterations 87
Cbc0038I Pass  84: suminf.   39.53105 (384) obj. 568.33 iterations 157
Cbc0038I Pass  85: suminf.   38.15840 (382) obj. 569.421 iterations 64
Cbc0038I Pass  86: suminf.   38.04329 (384) obj. 569.156 iterations 11
Cbc0038I Pass  87: suminf.   38.14475 (379) obj. 569.395 iterations 39
Cbc0038I Pass  88: suminf.   39.50240 (370) obj. 569.07 iterations 125
Cbc0038I Pass  89: suminf.   37.19614 (377) obj. 569.676 iterations 120
Cbc0038I Pass  90: suminf.   37.40799 (324) obj. 574.753 iterations 177
Cbc0038I Pass  91: suminf.   36.69026 (336) obj. 574.789 iterations 88
Cbc0038I Pass  92: suminf.   39.38620 (315) obj. 559.859 iterations 110
Cbc0038I Pass  93: suminf.   35.18049 (309) obj. 555.119 iterations 67
Cbc0038I Pass  94: suminf.   35.32671 (315) obj. 557.036 iterations 72
Cbc0038I Pass  95: suminf.   33.03426 (299) obj. 556.511 iterations 169
Cbc0038I Pass  96: suminf.   34.09648 (303) obj. 556.45 iterations 57
Cbc0038I Pass  97: suminf.   27.68383 (285) obj. 546.953 iterations 255
Cbc0038I Pass  98: suminf.   28.55455 (279) obj. 551.715 iterations 63
Cbc0038I Pass  99: suminf.   25.57749 (254) obj. 542.695 iterations 260
Cbc0038I Pass 100: suminf.   61.95131 (345) obj. 557.473 iterations 615
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2624 rows 916 columns, reduced to 2282 rows 773 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.72 seconds)
Cbc0038I After 2.72 seconds - Feasibility pump exiting - took 2.29 seconds
Cbc0031I 32 added rows had average density of 22.0625
Cbc0013I At root node, 32 cuts changed objective from 376.60292 to 393 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 220 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 211 row cuts average 372.6 elements, 0 column cuts (0 active)  in 0.244 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 232 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 393 (6.05 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 394 (33.82 seconds)
Cbc0010I After 200 nodes, 11 on tree, 1e+50 best solution, best possible 395 (63.41 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 395 (92.98 seconds)
Cbc0010I After 400 nodes, 13 on tree, 1e+50 best solution, best possible 395 (114.93 seconds)
Cbc0010I After 500 nodes, 11 on tree, 1e+50 best solution, best possible 395 (132.24 seconds)
Cbc0010I After 600 nodes, 21 on tree, 1e+50 best solution, best possible 395 (150.42 seconds)
Cbc0010I After 700 nodes, 18 on tree, 1e+50 best solution, best possible 395 (169.61 seconds)
Cbc0010I After 800 nodes, 16 on tree, 1e+50 best solution, best possible 395 (183.56 seconds)
Cbc0010I After 900 nodes, 7 on tree, 1e+50 best solution, best possible 395 (207.80 seconds)
Cbc0010I After 1000 nodes, 14 on tree, 1e+50 best solution, best possible 395 (228.82 seconds)
Cbc0010I After 1100 nodes, 2 on tree, 1e+50 best solution, best possible 395 (249.38 seconds)
Cbc0010I After 1200 nodes, 3 on tree, 1e+50 best solution, best possible 399 (280.35 seconds)
Cbc0010I After 1300 nodes, 3 on tree, 1e+50 best solution, best possible 402 (303.74 seconds)
Cbc0010I After 1400 nodes, 10 on tree, 1e+50 best solution, best possible 403 (320.68 seconds)
Cbc0010I After 1500 nodes, 7 on tree, 1e+50 best solution, best possible 403 (330.30 seconds)
Cbc0010I After 1600 nodes, 6 on tree, 1e+50 best solution, best possible 403 (338.66 seconds)
Cbc0010I After 1700 nodes, 11 on tree, 1e+50 best solution, best possible 404 (352.56 seconds)
Cbc0010I After 1800 nodes, 11 on tree, 1e+50 best solution, best possible 404 (365.88 seconds)
Cbc0010I After 1900 nodes, 25 on tree, 1e+50 best solution, best possible 405 (376.54 seconds)
Cbc0016I Integer solution of 405 found by strong branching after 1305550 iterations and 1940 nodes (379.79 seconds)
Cbc0001I Search completed - best objective 405, took 1305567 iterations and 1940 nodes (379.79 seconds)
Cbc0032I Strong branching done 14926 times (1024058 iterations), fathomed 135 nodes and fixed 876 variables
Cbc0035I Maximum depth 67, 0 variables fixed on reduced cost
Cuts at root node changed objective from 376.603 to 393
Probing was tried 460 times and created 67432 cuts of which 0 were active after adding rounds of cuts (1.706 seconds)
Gomory was tried 341 times and created 979 cuts of which 0 were active after adding rounds of cuts (1.305 seconds)
Knapsack was tried 341 times and created 1653 cuts of which 0 were active after adding rounds of cuts (0.301 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 341 times and created 6994 cuts of which 0 were active after adding rounds of cuts (0.603 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
ImplicationCuts was tried 113 times and created 1017 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)

Result - Optimal solution found

Objective value:                405.00000000
Enumerated nodes:               1940
Total iterations:               1305567
Time (CPU seconds):             379.88
Time (Wallclock seconds):       383.32

Total time (CPU seconds):       379.90   (Wallclock seconds):       383.33

