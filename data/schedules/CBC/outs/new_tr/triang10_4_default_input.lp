Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_4_default_input.lp sec 1800 solve solu solutions/new_tr/triang10_4_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 387 - 2.31 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1599 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 139 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 6704 rows, 2298 columns (2298 integer (2243 of which binary)) and 21742 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1068 integers unsatisfied sum - 250.49
Cbc0038I Pass   1: (5.31 seconds) suminf.   93.02282 (725) obj. 461.019 iterations 2920
Cbc0038I Pass   2: (5.57 seconds) suminf.   84.47650 (658) obj. 451.364 iterations 638
Cbc0038I Pass   3: (5.70 seconds) suminf.   82.33005 (660) obj. 460.059 iterations 282
Cbc0038I Pass   4: (5.71 seconds) suminf.   82.30817 (657) obj. 460.063 iterations 8
Cbc0038I Pass   5: (5.90 seconds) suminf.   72.80239 (655) obj. 495.63 iterations 470
Cbc0038I Pass   6: (6.00 seconds) suminf.   73.74156 (688) obj. 520.652 iterations 190
Cbc0038I Pass   7: (6.23 seconds) suminf.   64.91433 (659) obj. 524.727 iterations 563
Cbc0038I Pass   8: (6.33 seconds) suminf.   64.74769 (645) obj. 524.69 iterations 202
Cbc0038I Pass   9: (6.49 seconds) suminf.   63.03570 (662) obj. 523.815 iterations 352
Cbc0038I Pass  10: (6.55 seconds) suminf.   63.34622 (649) obj. 523.58 iterations 123
Cbc0038I Pass  11: (6.72 seconds) suminf.   62.32615 (621) obj. 514.648 iterations 361
Cbc0038I Pass  12: (6.77 seconds) suminf.   63.78750 (639) obj. 514.291 iterations 111
Cbc0038I Pass  13: (6.83 seconds) suminf.   64.72628 (628) obj. 524.496 iterations 114
Cbc0038I Pass  14: (7.04 seconds) suminf.   61.45708 (642) obj. 524.334 iterations 483
Cbc0038I Pass  15: (7.17 seconds) suminf.   58.54050 (641) obj. 524.484 iterations 224
Cbc0038I Pass  16: (7.19 seconds) suminf.   58.25892 (645) obj. 522.462 iterations 46
Cbc0038I Pass  17: (7.44 seconds) suminf.   58.54179 (606) obj. 520.235 iterations 681
Cbc0038I Pass  18: (7.52 seconds) suminf.   57.40699 (615) obj. 528.902 iterations 198
Cbc0038I Pass  19: (7.56 seconds) suminf.   57.17143 (621) obj. 539.596 iterations 67
Cbc0038I Pass  20: (7.58 seconds) suminf.   56.75977 (619) obj. 536.989 iterations 34
Cbc0038I Pass  21: (7.70 seconds) suminf.   56.20114 (610) obj. 534.628 iterations 261
Cbc0038I Pass  22: (7.72 seconds) suminf.   55.95478 (612) obj. 538.802 iterations 61
Cbc0038I Pass  23: (7.90 seconds) suminf.   53.33610 (599) obj. 535.941 iterations 474
Cbc0038I Pass  24: (7.93 seconds) suminf.   53.06015 (597) obj. 535.586 iterations 76
Cbc0038I Pass  25: (8.08 seconds) suminf.   49.68948 (634) obj. 528.146 iterations 357
Cbc0038I Pass  26: (8.18 seconds) suminf.   48.11477 (620) obj. 551.081 iterations 226
Cbc0038I Pass  27: (8.31 seconds) suminf.   47.52360 (618) obj. 536.682 iterations 276
Cbc0038I Pass  28: (8.42 seconds) suminf.   48.64225 (641) obj. 531.341 iterations 231
Cbc0038I Pass  29: (8.46 seconds) suminf.   46.96723 (653) obj. 529.9 iterations 102
Cbc0038I Pass  30: (8.50 seconds) suminf.   46.56269 (630) obj. 531.254 iterations 62
Cbc0038I Pass  31: (8.63 seconds) suminf.   47.10206 (636) obj. 538.066 iterations 337
Cbc0038I Pass  32: (8.77 seconds) suminf.   45.13963 (641) obj. 534.448 iterations 294
Cbc0038I Pass  33: (8.88 seconds) suminf.   45.14703 (652) obj. 540.828 iterations 274
Cbc0038I Pass  34: (8.95 seconds) suminf.   46.19002 (639) obj. 536.366 iterations 140
Cbc0038I Pass  35: (9.09 seconds) suminf.   48.52127 (622) obj. 538.739 iterations 327
Cbc0038I Pass  36: (9.22 seconds) suminf.   44.62602 (608) obj. 535.6 iterations 337
Cbc0038I Pass  37: (9.24 seconds) suminf.   44.67755 (608) obj. 535.675 iterations 8
Cbc0038I Pass  38: (9.39 seconds) suminf.   42.01613 (586) obj. 557.083 iterations 396
Cbc0038I Pass  39: (9.51 seconds) suminf.   42.50061 (624) obj. 547.744 iterations 268
Cbc0038I Pass  40: (9.65 seconds) suminf.   37.51017 (613) obj. 545.993 iterations 337
Cbc0038I Pass  41: (9.70 seconds) suminf.   38.25671 (612) obj. 547.374 iterations 114
Cbc0038I Pass  42: (9.82 seconds) suminf.   41.77213 (584) obj. 548.448 iterations 325
Cbc0038I Pass  43: (9.88 seconds) suminf.   39.13297 (536) obj. 553.414 iterations 132
Cbc0038I Pass  44: (9.94 seconds) suminf.   37.82274 (558) obj. 552.334 iterations 138
Cbc0038I Pass  45: (10.10 seconds) suminf.   36.80843 (496) obj. 544.238 iterations 422
Cbc0038I Pass  46: (10.17 seconds) suminf.   36.28966 (489) obj. 567.93 iterations 185
Cbc0038I Pass  47: (10.19 seconds) suminf.   35.24396 (479) obj. 575.368 iterations 52
Cbc0038I Pass  48: (10.31 seconds) suminf.   37.44827 (469) obj. 548.639 iterations 352
Cbc0038I Pass  49: (10.36 seconds) suminf.   36.95416 (501) obj. 550.301 iterations 132
Cbc0038I Pass  50: (10.38 seconds) suminf.   35.67698 (495) obj. 549.993 iterations 40
Cbc0038I Pass  51: (10.48 seconds) suminf.   38.08191 (459) obj. 556.292 iterations 252
Cbc0038I Pass  52: (10.55 seconds) suminf.   34.52395 (483) obj. 547.636 iterations 191
Cbc0038I Pass  53: (10.69 seconds) suminf.   38.67254 (440) obj. 588.652 iterations 412
Cbc0038I Pass  54: (10.72 seconds) suminf.   39.58905 (469) obj. 584.804 iterations 76
Cbc0038I Pass  55: (10.81 seconds) suminf.   40.09950 (436) obj. 591.574 iterations 253
Cbc0038I Pass  56: (10.84 seconds) suminf.   36.06714 (438) obj. 545.865 iterations 117
Cbc0038I Pass  57: (10.87 seconds) suminf.   34.95742 (440) obj. 546.937 iterations 81
Cbc0038I Pass  58: (10.90 seconds) suminf.   34.20995 (471) obj. 554.074 iterations 70
Cbc0038I Pass  59: (11.00 seconds) suminf.   29.79489 (396) obj. 552.785 iterations 281
Cbc0038I Pass  60: (11.04 seconds) suminf.   30.34070 (424) obj. 553.881 iterations 144
Cbc0038I Pass  61: (11.12 seconds) suminf.   29.51887 (363) obj. 584.66 iterations 244
Cbc0038I Pass  62: (11.17 seconds) suminf.   29.77398 (365) obj. 558.845 iterations 159
Cbc0038I Pass  63: (11.21 seconds) suminf.   29.61659 (377) obj. 559.367 iterations 174
Cbc0038I Pass  64: (11.24 seconds) suminf.   29.71522 (380) obj. 559.67 iterations 63
Cbc0038I Pass  65: (11.27 seconds) suminf.   27.71416 (367) obj. 560.569 iterations 116
Cbc0038I Pass  66: (11.29 seconds) suminf.   27.20431 (392) obj. 560.987 iterations 37
Cbc0038I Pass  67: (11.33 seconds) suminf.   25.61748 (359) obj. 625.56 iterations 149
Cbc0038I Pass  68: (11.35 seconds) suminf.   25.80018 (386) obj. 626.464 iterations 48
Cbc0038I Pass  69: (11.42 seconds) suminf.   23.32763 (306) obj. 627.257 iterations 207
Cbc0038I Pass  70: (11.43 seconds) suminf.   22.43544 (305) obj. 627.258 iterations 46
Cbc0038I Pass  71: (11.47 seconds) suminf.   18.91290 (298) obj. 631.311 iterations 143
Cbc0038I Pass  72: (11.48 seconds) suminf.   18.64956 (300) obj. 631.445 iterations 9
Cbc0038I Pass  73: (11.56 seconds) suminf.   15.68258 (278) obj. 584.473 iterations 330
Cbc0038I Pass  74: (11.57 seconds) suminf.   15.68258 (278) obj. 584.473 iterations 9
Cbc0038I Pass  75: (11.63 seconds) suminf.   17.41137 (263) obj. 617.313 iterations 243
Cbc0038I Pass  76: (11.65 seconds) suminf.   15.64149 (253) obj. 616.911 iterations 71
Cbc0038I Pass  77: (11.66 seconds) suminf.   15.64579 (252) obj. 616.912 iterations 2
Cbc0038I Pass  78: (11.70 seconds) suminf.   14.89775 (226) obj. 584.858 iterations 177
Cbc0038I Pass  79: (11.73 seconds) suminf.   10.75413 (215) obj. 586.106 iterations 127
Cbc0038I Pass  80: (11.76 seconds) suminf.    8.17199 (201) obj. 586.193 iterations 92
Cbc0038I Pass  81: (11.80 seconds) suminf.    9.67669 (199) obj. 630.626 iterations 194
Cbc0038I Pass  82: (11.82 seconds) suminf.    7.20634 (187) obj. 630.614 iterations 72
Cbc0038I Pass  83: (11.86 seconds) suminf.    8.88719 (171) obj. 671.797 iterations 183
Cbc0038I Pass  84: (11.87 seconds) suminf.    8.19490 (178) obj. 671.848 iterations 47
Cbc0038I Pass  85: (11.89 seconds) suminf.    6.65408 (157) obj. 670.761 iterations 70
Cbc0038I Pass  86: (11.92 seconds) suminf.    5.99756 (149) obj. 639.223 iterations 183
Cbc0038I Pass  87: (11.94 seconds) suminf.    4.24610 (142) obj. 639.081 iterations 74
Cbc0038I Pass  88: (11.97 seconds) suminf.    4.96594 (130) obj. 590.714 iterations 126
Cbc0038I Pass  89: (11.97 seconds) suminf.    4.96594 (130) obj. 590.714 iterations 1
Cbc0038I Pass  90: (12.01 seconds) suminf.    7.14279 (143) obj. 591.824 iterations 182
Cbc0038I Pass  91: (12.02 seconds) suminf.    5.92737 (129) obj. 591.071 iterations 26
Cbc0038I Pass  92: (12.05 seconds) suminf.    2.02574 (88) obj. 625.671 iterations 142
Cbc0038I Pass  93: (12.06 seconds) suminf.    2.02574 (88) obj. 625.671 iterations 1
Cbc0038I Pass  94: (12.10 seconds) suminf.    1.03804 (43) obj. 593 iterations 188
Cbc0038I Pass  95: (12.11 seconds) suminf.    1.03804 (43) obj. 593 iterations 8
Cbc0038I Pass  96: (12.12 seconds) suminf.    0.30731 (24) obj. 593 iterations 38
Cbc0038I Pass  97: (12.13 seconds) suminf.    0.30731 (24) obj. 593 iterations 2
Cbc0038I Pass  98: (12.21 seconds) suminf.    2.52001 (36) obj. 593 iterations 223
Cbc0038I Pass  99: (12.22 seconds) suminf.    5.18313 (28) obj. 593 iterations 55
Cbc0038I Pass 100: (12.56 seconds) suminf.   70.95687 (500) obj. 717.244 iterations 1478
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 609 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6704 rows 2298 columns, reduced to 4273 rows 1378 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.01 seconds)
Cbc0038I After 14.01 seconds - Feasibility pump exiting - took 9.92 seconds
Cbc0031I 20 added rows had average density of 7.45
Cbc0013I At root node, 20 cuts changed objective from 387 to 387 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 281 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 26 row cuts average 353.8 elements, 0 column cuts (0 active)  in 1.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 33 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.553 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 387 (22.81 seconds)
Cbc0010I After 100 nodes, 34 on tree, 1e+50 best solution, best possible 387 (141.39 seconds)
Cbc0010I After 200 nodes, 32 on tree, 1e+50 best solution, best possible 387 (201.17 seconds)
Cbc0010I After 300 nodes, 28 on tree, 1e+50 best solution, best possible 387 (282.99 seconds)
Cbc0010I After 400 nodes, 31 on tree, 1e+50 best solution, best possible 387 (351.80 seconds)
Cbc0010I After 500 nodes, 27 on tree, 1e+50 best solution, best possible 387 (426.40 seconds)
Cbc0010I After 600 nodes, 37 on tree, 1e+50 best solution, best possible 387 (521.08 seconds)
Cbc0010I After 700 nodes, 39 on tree, 1e+50 best solution, best possible 387 (622.82 seconds)
Cbc0010I After 800 nodes, 31 on tree, 1e+50 best solution, best possible 387 (710.45 seconds)
Cbc0010I After 900 nodes, 29 on tree, 1e+50 best solution, best possible 387 (853.32 seconds)
Cbc0010I After 1000 nodes, 42 on tree, 1e+50 best solution, best possible 387 (958.19 seconds)
Cbc0010I After 1100 nodes, 33 on tree, 1e+50 best solution, best possible 387 (1023.30 seconds)
Cbc0010I After 1200 nodes, 35 on tree, 1e+50 best solution, best possible 387 (1092.95 seconds)
Cbc0010I After 1300 nodes, 38 on tree, 1e+50 best solution, best possible 387 (1155.46 seconds)
Cbc0010I After 1400 nodes, 32 on tree, 1e+50 best solution, best possible 387 (1239.26 seconds)
Cbc0010I After 1500 nodes, 35 on tree, 1e+50 best solution, best possible 387 (1313.88 seconds)
Cbc0010I After 1600 nodes, 33 on tree, 1e+50 best solution, best possible 387 (1404.48 seconds)
Cbc0010I After 1700 nodes, 29 on tree, 1e+50 best solution, best possible 387 (1569.04 seconds)
Cbc0010I After 1800 nodes, 33 on tree, 1e+50 best solution, best possible 387 (1653.90 seconds)
Cbc0010I After 1900 nodes, 35 on tree, 1e+50 best solution, best possible 387 (1747.65 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 387), took 2505597 iterations and 1954 nodes (1798.32 seconds)
Cbc0032I Strong branching done 18932 times (1456355 iterations), fathomed 145 nodes and fixed 1178 variables
Cbc0035I Maximum depth 53, 0 variables fixed on reduced cost
Cuts at root node changed objective from 387 to 387
Probing was tried 411 times and created 64443 cuts of which 0 were active after adding rounds of cuts (2.632 seconds)
Gomory was tried 310 times and created 412 cuts of which 0 were active after adding rounds of cuts (3.922 seconds)
Knapsack was tried 310 times and created 2032 cuts of which 0 were active after adding rounds of cuts (0.731 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 7 times and created 33 cuts of which 0 were active after adding rounds of cuts (0.553 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.107 seconds)
ImplicationCuts was tried 16 times and created 177 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    387.000
Enumerated nodes:               1954
Total iterations:               2505597
Time (CPU seconds):             1798.32
Time (Wallclock seconds):       1799.05

Total time (CPU seconds):       1798.36   (Wallclock seconds):       1799.11

