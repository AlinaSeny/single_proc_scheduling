Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_35_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_2_35_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 38948 - 0.28 seconds
Cgl0002I 347 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 484 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 80 strengthened rows, 0 substitutions
Cgl0004I processed model has 2994 rows, 963 columns (963 integer (927 of which binary)) and 10064 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 963 objects (963 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 540 integers unsatisfied sum - 113.561
Cbc0038I Pass   1: suminf.   50.80885 (306) obj. 45277.2 iterations 1154
Cbc0038I Pass   2: suminf.   45.19132 (299) obj. 44792.4 iterations 82
Cbc0038I Pass   3: suminf.   42.39006 (295) obj. 44418.5 iterations 138
Cbc0038I Pass   4: suminf.   38.17678 (302) obj. 43443.9 iterations 145
Cbc0038I Pass   5: suminf.   39.04500 (301) obj. 42972.8 iterations 72
Cbc0038I Pass   6: suminf.   33.31128 (288) obj. 47632.8 iterations 419
Cbc0038I Pass   7: suminf.   32.59448 (280) obj. 47590.2 iterations 103
Cbc0038I Pass   8: suminf.   28.13147 (239) obj. 46825.4 iterations 292
Cbc0038I Pass   9: suminf.   27.20573 (238) obj. 46798.7 iterations 39
Cbc0038I Pass  10: suminf.   22.09884 (188) obj. 48855.3 iterations 461
Cbc0038I Pass  11: suminf.   19.44504 (184) obj. 48544 iterations 84
Cbc0038I Pass  12: suminf.   19.10313 (189) obj. 47717.1 iterations 50
Cbc0038I Pass  13: suminf.   12.09969 (139) obj. 55354.4 iterations 377
Cbc0038I Pass  14: suminf.   12.09969 (139) obj. 55354.4 iterations 4
Cbc0038I Pass  15: suminf.    8.13939 (114) obj. 54739.2 iterations 251
Cbc0038I Pass  16: suminf.    7.81307 (113) obj. 54739.2 iterations 24
Cbc0038I Pass  17: suminf.    4.98629 (83) obj. 52211.5 iterations 209
Cbc0038I Pass  18: suminf.    4.50088 (76) obj. 52211.5 iterations 21
Cbc0038I Pass  19: suminf.    4.69796 (69) obj. 52046.7 iterations 199
Cbc0038I Pass  20: suminf.    4.02321 (69) obj. 52046.7 iterations 117
Cbc0038I Pass  21: suminf.    3.76938 (65) obj. 52676.5 iterations 452
Cbc0038I Pass  22: suminf.    3.76938 (65) obj. 52676.5 iterations 12
Cbc0038I Pass  23: suminf.    2.51653 (25) obj. 52224 iterations 241
Cbc0038I Pass  24: suminf.    2.37915 (20) obj. 52224 iterations 25
Cbc0038I Pass  25: suminf.    2.39454 (25) obj. 52224 iterations 154
Cbc0038I Pass  26: suminf.    2.36016 (24) obj. 52224 iterations 4
Cbc0038I Pass  27: suminf.    0.81907 (21) obj. 52224 iterations 103
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 52224 iterations 49
Cbc0038I Solution found of 52224
Cbc0038I Cleaned solution of 52224
Cbc0038I Before mini branch and bound, 283 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.28 seconds)
Cbc0038I Round again with cutoff of 50900.9
Cbc0038I Pass  29: suminf.   50.80885 (306) obj. 45277.2 iterations 0
Cbc0038I Pass  30: suminf.   45.19132 (299) obj. 44792.4 iterations 97
Cbc0038I Pass  31: suminf.   42.39006 (295) obj. 44418.5 iterations 175
Cbc0038I Pass  32: suminf.   35.05434 (288) obj. 43834.7 iterations 356
Cbc0038I Pass  33: suminf.   34.75926 (303) obj. 43241.8 iterations 210
Cbc0038I Pass  34: suminf.   31.03155 (262) obj. 42637.8 iterations 325
Cbc0038I Pass  35: suminf.   29.77852 (257) obj. 43307.7 iterations 107
Cbc0038I Pass  36: suminf.   24.88532 (222) obj. 46466.2 iterations 355
Cbc0038I Pass  37: suminf.   23.86597 (229) obj. 46448.8 iterations 68
Cbc0038I Pass  38: suminf.   25.26301 (222) obj. 46458 iterations 92
Cbc0038I Pass  39: suminf.   19.35826 (170) obj. 49219.9 iterations 453
Cbc0038I Pass  40: suminf.   19.35826 (170) obj. 49219.9 iterations 21
Cbc0038I Pass  41: suminf.   16.40888 (147) obj. 50900.9 iterations 380
Cbc0038I Pass  42: suminf.   16.15866 (150) obj. 50900.9 iterations 113
Cbc0038I Pass  43: suminf.   10.63539 (132) obj. 50900.9 iterations 290
Cbc0038I Pass  44: suminf.   10.25329 (133) obj. 50900.9 iterations 14
Cbc0038I Pass  45: suminf.   11.61479 (106) obj. 50900.9 iterations 193
Cbc0038I Pass  46: suminf.   10.58588 (104) obj. 50900.9 iterations 52
Cbc0038I Pass  47: suminf.    5.51624 (102) obj. 50900.9 iterations 115
Cbc0038I Pass  48: suminf.    4.86910 (105) obj. 50900.9 iterations 14
Cbc0038I Pass  49: suminf.    8.34433 (74) obj. 50900.9 iterations 440
Cbc0038I Pass  50: suminf.    7.54122 (74) obj. 50900.9 iterations 74
Cbc0038I Pass  51: suminf.    3.54440 (57) obj. 50900.9 iterations 263
Cbc0038I Pass  52: suminf.    3.45838 (57) obj. 50900.9 iterations 43
Cbc0038I Pass  53: suminf.    0.06462 (1) obj. 50900.9 iterations 187
Cbc0038I Solution found of 50900.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2995 rows 963 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 49152
Cbc0038I Before mini branch and bound, 287 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2272 rows 676 columns - 157 fixed gives 1479, 384 - ok now
Cbc0038I Full problem 2994 rows 963 columns, reduced to 149 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (2.19 seconds)
Cbc0038I Round again with cutoff of 47121.3
Cbc0038I Pass  54: suminf.   50.80885 (306) obj. 45277.2 iterations 0
Cbc0038I Pass  55: suminf.   45.19132 (299) obj. 44792.4 iterations 127
Cbc0038I Pass  56: suminf.   42.39006 (295) obj. 44418.5 iterations 164
Cbc0038I Pass  57: suminf.   36.49660 (288) obj. 43868.8 iterations 284
Cbc0038I Pass  58: suminf.   36.14263 (300) obj. 43181.2 iterations 204
Cbc0038I Pass  59: suminf.   34.91528 (311) obj. 43313 iterations 173
Cbc0038I Pass  60: suminf.   34.69843 (298) obj. 43288.6 iterations 16
Cbc0038I Pass  61: suminf.   28.22431 (254) obj. 43101.3 iterations 430
Cbc0038I Pass  62: suminf.   26.65817 (242) obj. 42713 iterations 103
Cbc0038I Pass  63: suminf.   23.99703 (215) obj. 46595.4 iterations 381
Cbc0038I Pass  64: suminf.   23.61975 (218) obj. 46595 iterations 33
Cbc0038I Pass  65: suminf.   21.57193 (186) obj. 45291.1 iterations 189
Cbc0038I Pass  66: suminf.   19.76412 (177) obj. 45729.4 iterations 173
Cbc0038I Pass  67: suminf.   19.45016 (180) obj. 45789.5 iterations 50
Cbc0038I Pass  68: suminf.   17.53810 (146) obj. 47121.3 iterations 191
Cbc0038I Pass  69: suminf.   16.01135 (157) obj. 47121.3 iterations 62
Cbc0038I Pass  70: suminf.   13.99590 (124) obj. 47121.3 iterations 238
Cbc0038I Pass  71: suminf.   13.77207 (127) obj. 47121.3 iterations 12
Cbc0038I Pass  72: suminf.   11.98319 (126) obj. 45463.6 iterations 174
Cbc0038I Pass  73: suminf.   11.48856 (133) obj. 47121.3 iterations 27
Cbc0038I Pass  74: suminf.    7.95053 (113) obj. 47121.3 iterations 265
Cbc0038I Pass  75: suminf.    7.85872 (111) obj. 47121.3 iterations 33
Cbc0038I Pass  76: suminf.    8.73163 (97) obj. 47121.3 iterations 137
Cbc0038I Pass  77: suminf.    8.78946 (99) obj. 47121.3 iterations 11
Cbc0038I Pass  78: suminf.    6.72824 (94) obj. 47121.3 iterations 127
Cbc0038I Pass  79: suminf.    6.72824 (94) obj. 47121.3 iterations 5
Cbc0038I Pass  80: suminf.    9.24993 (74) obj. 47121.3 iterations 120
Cbc0038I Pass  81: suminf.    9.22366 (91) obj. 47121.3 iterations 15
Cbc0038I Pass  82: suminf.    7.38597 (92) obj. 47121.3 iterations 171
Cbc0038I Pass  83: suminf.    7.37565 (91) obj. 47121.3 iterations 7
Cbc0038I Pass  84: suminf.    6.28112 (84) obj. 47121.3 iterations 127
Cbc0038I Pass  85: suminf.    6.28112 (84) obj. 47121.3 iterations 6
Cbc0038I Pass  86: suminf.    7.66939 (50) obj. 47121.3 iterations 207
Cbc0038I Pass  87: suminf.    7.52143 (43) obj. 47121.3 iterations 29
Cbc0038I Pass  88: suminf.    6.95271 (47) obj. 47121.3 iterations 175
Cbc0038I Pass  89: suminf.    6.96565 (48) obj. 47121.3 iterations 4
Cbc0038I Pass  90: suminf.    4.35671 (29) obj. 47121.3 iterations 173
Cbc0038I Pass  91: suminf.    4.32781 (28) obj. 47121.3 iterations 5
Cbc0038I Pass  92: suminf.    5.37493 (46) obj. 47121.3 iterations 129
Cbc0038I Pass  93: suminf.    5.00470 (42) obj. 47121.3 iterations 83
Cbc0038I Pass  94: suminf.    5.00470 (42) obj. 47121.3 iterations 7
Cbc0038I Pass  95: suminf.    8.07122 (51) obj. 47121.3 iterations 301
Cbc0038I Pass  96: suminf.    8.11701 (59) obj. 47121.3 iterations 112
Cbc0038I Pass  97: suminf.    4.86370 (41) obj. 47121.3 iterations 100
Cbc0038I Pass  98: suminf.    4.58328 (51) obj. 47121.3 iterations 52
Cbc0038I Pass  99: suminf.    6.48489 (28) obj. 47121.3 iterations 74
Cbc0038I Pass 100: suminf.    5.11457 (31) obj. 47121.3 iterations 41
Cbc0038I Pass 101: suminf.    4.16200 (34) obj. 47121.3 iterations 61
Cbc0038I Pass 102: suminf.    5.03610 (45) obj. 47121.3 iterations 94
Cbc0038I Pass 103: suminf.    3.35432 (27) obj. 47121.3 iterations 92
Cbc0038I Pass 104: suminf.    3.85912 (27) obj. 47121.3 iterations 75
Cbc0038I Pass 105: suminf.    3.67339 (27) obj. 47121.3 iterations 21
Cbc0038I Pass 106: suminf.    7.67008 (31) obj. 47121.3 iterations 102
Cbc0038I Pass 107: suminf.    6.16957 (31) obj. 47121.3 iterations 18
Cbc0038I Pass 108: suminf.    4.87388 (33) obj. 47121.3 iterations 2
Cbc0038I Pass 109: suminf.    5.78143 (37) obj. 47121.3 iterations 118
Cbc0038I Pass 110: suminf.    5.48206 (35) obj. 47121.3 iterations 55
Cbc0038I Pass 111: suminf.    7.51505 (40) obj. 47121.3 iterations 164
Cbc0038I Pass 112: suminf.    6.57044 (40) obj. 47121.3 iterations 51
Cbc0038I Pass 113: suminf.    4.64281 (32) obj. 47121.3 iterations 328
Cbc0038I Pass 114: suminf.    5.07937 (42) obj. 47121.3 iterations 92
Cbc0038I Pass 115: suminf.    7.45315 (48) obj. 47121.3 iterations 142
Cbc0038I Pass 116: suminf.    5.30419 (43) obj. 47121.3 iterations 44
Cbc0038I Pass 117: suminf.    9.25042 (119) obj. 47121.3 iterations 214
Cbc0038I Pass 118: suminf.    8.46128 (114) obj. 47121.3 iterations 63
Cbc0038I Pass 119: suminf.    7.00886 (43) obj. 47121.3 iterations 127
Cbc0038I Pass 120: suminf.    6.52061 (43) obj. 47121.3 iterations 129
Cbc0038I Pass 121: suminf.    6.21852 (41) obj. 47121.3 iterations 136
Cbc0038I Pass 122: suminf.    8.79272 (128) obj. 47121.3 iterations 201
Cbc0038I Pass 123: suminf.    6.78759 (47) obj. 47121.3 iterations 51
Cbc0038I Pass 124: suminf.    6.23920 (47) obj. 47121.3 iterations 26
Cbc0038I Pass 125: suminf.    8.23603 (99) obj. 47121.3 iterations 213
Cbc0038I Pass 126: suminf.    7.35341 (40) obj. 47121.3 iterations 171
Cbc0038I Pass 127: suminf.    5.19171 (35) obj. 47121.3 iterations 140
Cbc0038I Pass 128: suminf.    4.00367 (30) obj. 47121.3 iterations 64
Cbc0038I Pass 129: suminf.    4.73917 (26) obj. 47121.3 iterations 94
Cbc0038I Pass 130: suminf.    3.43441 (21) obj. 47121.3 iterations 35
Cbc0038I Pass 131: suminf.    4.68570 (26) obj. 47121.3 iterations 103
Cbc0038I Pass 132: suminf.    4.41862 (25) obj. 47121.3 iterations 6
Cbc0038I Pass 133: suminf.    4.67245 (29) obj. 47121.3 iterations 101
Cbc0038I Pass 134: suminf.    3.83193 (29) obj. 47121.3 iterations 70
Cbc0038I Pass 135: suminf.    5.38139 (26) obj. 47121.3 iterations 103
Cbc0038I Pass 136: suminf.    5.36966 (27) obj. 47121.3 iterations 6
Cbc0038I Pass 137: suminf.    4.18914 (30) obj. 47121.3 iterations 115
Cbc0038I Pass 138: suminf.    4.07638 (46) obj. 47121.3 iterations 155
Cbc0038I Pass 139: suminf.    3.16561 (26) obj. 47121.3 iterations 83
Cbc0038I Pass 140: suminf.    3.16561 (26) obj. 47121.3 iterations 7
Cbc0038I Pass 141: suminf.    4.25474 (39) obj. 47121.3 iterations 85
Cbc0038I Pass 142: suminf.    4.25474 (39) obj. 47121.3 iterations 0
Cbc0038I Pass 143: suminf.    5.18952 (25) obj. 47121.3 iterations 137
Cbc0038I Pass 144: suminf.    3.99345 (24) obj. 47121.3 iterations 20
Cbc0038I Pass 145: suminf.    4.59260 (47) obj. 47121.3 iterations 226
Cbc0038I Pass 146: suminf.    4.59260 (47) obj. 47121.3 iterations 20
Cbc0038I Pass 147: suminf.    3.32681 (29) obj. 47121.3 iterations 138
Cbc0038I Pass 148: suminf.    3.14949 (30) obj. 47121.3 iterations 14
Cbc0038I Pass 149: suminf.    7.21713 (47) obj. 47121.3 iterations 256
Cbc0038I Pass 150: suminf.    6.32030 (46) obj. 47121.3 iterations 92
Cbc0038I Pass 151: suminf.    3.29534 (30) obj. 47121.3 iterations 154
Cbc0038I Pass 152: suminf.    3.18872 (30) obj. 47121.3 iterations 29
Cbc0038I Pass 153: suminf.   44.11149 (261) obj. 47121.3 iterations 771
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 198 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2502 rows 765 columns - 166 fixed gives 1587, 430 - still too large
Cbc0038I Full problem 2994 rows 963 columns, reduced to 161 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (4.07 seconds)
Cbc0038I After 4.07 seconds - Feasibility pump exiting with objective of 49152 - took 3.57 seconds
Cbc0012I Integer solution of 49152 found by feasibility pump after 0 iterations and 0 nodes (4.07 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 1993 rows 556 columns - 151 fixed gives 1275, 305 - ok now
Cbc0038I Full problem 2994 rows 963 columns, reduced to 55 rows 19 columns
Cbc0031I 113 added rows had average density of 8.840708
Cbc0013I At root node, 113 cuts changed objective from 39002.353 to 45055.999 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 139 row cuts average 3.4 elements, 30 column cuts (41 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 421 row cuts average 379.6 elements, 0 column cuts (0 active)  in 0.625 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 79 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 669 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 49152 best solution, best possible 45055.999 (18.36 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 698 rows 208 columns
Cbc0010I After 100 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (44.52 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 791 rows 244 columns
Cbc0010I After 200 nodes, 13 on tree, 49152 best solution, best possible 45055.999 (69.34 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 532 rows 182 columns
Cbc0010I After 300 nodes, 26 on tree, 49152 best solution, best possible 45055.999 (85.68 seconds)
Cbc0010I After 400 nodes, 48 on tree, 49152 best solution, best possible 45055.999 (95.50 seconds)
Cbc0010I After 500 nodes, 55 on tree, 49152 best solution, best possible 45055.999 (110.29 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 477 rows 168 columns
Cbc0010I After 600 nodes, 56 on tree, 49152 best solution, best possible 45055.999 (126.39 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 466 rows 152 columns
Cbc0010I After 700 nodes, 57 on tree, 49152 best solution, best possible 45055.999 (144.42 seconds)
Cbc0010I After 800 nodes, 48 on tree, 49152 best solution, best possible 45055.999 (158.57 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 618 rows 189 columns
Cbc0010I After 900 nodes, 50 on tree, 49152 best solution, best possible 45055.999 (173.13 seconds)
Cbc0010I After 1000 nodes, 46 on tree, 49152 best solution, best possible 45055.999 (184.33 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 667 rows 213 columns
Cbc0010I After 1100 nodes, 20 on tree, 49152 best solution, best possible 45055.999 (200.94 seconds)
Cbc0010I After 1200 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (221.36 seconds)
Cbc0010I After 1300 nodes, 12 on tree, 49152 best solution, best possible 45055.999 (241.75 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 632 rows 191 columns
Cbc0010I After 1400 nodes, 10 on tree, 49152 best solution, best possible 45055.999 (253.38 seconds)
Cbc0010I After 1500 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (265.63 seconds)
Cbc0010I After 1600 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (279.41 seconds)
Cbc0010I After 1700 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (294.20 seconds)
Cbc0010I After 1800 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (306.67 seconds)
Cbc0010I After 1900 nodes, 14 on tree, 49152 best solution, best possible 45055.999 (317.66 seconds)
Cbc0010I After 2000 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (329.17 seconds)
Cbc0010I After 2100 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (353.57 seconds)
Cbc0010I After 2200 nodes, 8 on tree, 49152 best solution, best possible 45055.999 (369.29 seconds)
Cbc0010I After 2300 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (386.24 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 668 rows 201 columns
Cbc0010I After 2400 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (399.22 seconds)
Cbc0010I After 2500 nodes, 7 on tree, 49152 best solution, best possible 45055.999 (410.03 seconds)
Cbc0010I After 2600 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (420.99 seconds)
Cbc0010I After 2700 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (433.87 seconds)
Cbc0010I After 2800 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (447.84 seconds)
Cbc0010I After 2900 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (461.03 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 937 rows 274 columns
Cbc0010I After 3000 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (475.37 seconds)
Cbc0010I After 3100 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (489.90 seconds)
Cbc0010I After 3200 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (503.49 seconds)
Cbc0010I After 3300 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (517.70 seconds)
Cbc0010I After 3400 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (530.44 seconds)
Cbc0010I After 3500 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (543.58 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 782 rows 234 columns
Cbc0010I After 3600 nodes, 7 on tree, 49152 best solution, best possible 45055.999 (561.21 seconds)
Cbc0010I After 3700 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (571.97 seconds)
Cbc0010I After 3800 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (583.54 seconds)
Cbc0010I After 3900 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (596.22 seconds)
Cbc0010I After 4000 nodes, 8 on tree, 49152 best solution, best possible 45055.999 (605.01 seconds)
Cbc0010I After 4100 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (618.01 seconds)
Cbc0010I After 4200 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (627.55 seconds)
Cbc0010I After 4300 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (640.68 seconds)
Cbc0010I After 4400 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (653.64 seconds)
Cbc0010I After 4500 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (665.60 seconds)
Cbc0010I After 4600 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (677.16 seconds)
Cbc0010I After 4700 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (689.75 seconds)
Cbc0010I After 4800 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (702.47 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2194 rows 619 columns - 154 fixed gives 1400, 352 - ok now
Cbc0010I After 4900 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (715.35 seconds)
Cbc0010I After 5000 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (727.15 seconds)
Cbc0010I After 5100 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (740.18 seconds)
Cbc0010I After 5200 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (753.06 seconds)
Cbc0010I After 5300 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (769.97 seconds)
Cbc0010I After 5400 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (781.94 seconds)
Cbc0010I After 5500 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (795.63 seconds)
Cbc0010I After 5600 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (812.58 seconds)
Cbc0010I After 5700 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (826.58 seconds)
Cbc0010I After 5800 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (841.62 seconds)
Cbc0010I After 5900 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (856.09 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 807 rows 237 columns
Cbc0010I After 6000 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (871.28 seconds)
Cbc0010I After 6100 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (885.46 seconds)
Cbc0010I After 6200 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (898.62 seconds)
Cbc0010I After 6300 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (913.02 seconds)
Cbc0010I After 6400 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (926.77 seconds)
Cbc0010I After 6500 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (939.59 seconds)
Cbc0010I After 6600 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (952.42 seconds)
Cbc0010I After 6700 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (964.89 seconds)
Cbc0010I After 6800 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (979.47 seconds)
Cbc0010I After 6900 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (992.92 seconds)
Cbc0010I After 7000 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1006.31 seconds)
Cbc0010I After 7100 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1020.65 seconds)
Cbc0010I After 7200 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1033.03 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2192 rows 618 columns - 156 fixed gives 1384, 348 - ok now
Cbc0010I After 7300 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1049.34 seconds)
Cbc0010I After 7400 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1063.95 seconds)
Cbc0010I After 7500 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1079.53 seconds)
Cbc0010I After 7600 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1091.35 seconds)
Cbc0010I After 7700 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1106.91 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 655 rows 198 columns
Cbc0010I After 7800 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1118.64 seconds)
Cbc0010I After 7900 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1130.76 seconds)
Cbc0010I After 8000 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1144.72 seconds)
Cbc0010I After 8100 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1157.74 seconds)
Cbc0010I After 8200 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1171.46 seconds)
Cbc0010I After 8300 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1183.07 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 810 rows 238 columns
Cbc0010I After 8400 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1194.81 seconds)
Cbc0010I After 8500 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1206.37 seconds)
Cbc0010I After 8600 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1218.57 seconds)
Cbc0010I After 8700 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1230.22 seconds)
Cbc0010I After 8800 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1241.89 seconds)
Cbc0010I After 8900 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1253.76 seconds)
Cbc0010I After 9000 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1265.38 seconds)
Cbc0010I After 9100 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1276.72 seconds)
Cbc0010I After 9200 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1287.59 seconds)
Cbc0010I After 9300 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1297.82 seconds)
Cbc0010I After 9400 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1309.91 seconds)
Cbc0010I After 9500 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1320.94 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 728 rows 215 columns
Cbc0010I After 9600 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1333.06 seconds)
Cbc0010I After 9700 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1342.70 seconds)
Cbc0010I After 9800 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1354.38 seconds)
Cbc0010I After 9900 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1367.40 seconds)
Cbc0010I After 10000 nodes, 5 on tree, 49152 best solution, best possible 45055.999 (1379.28 seconds)
Cbc0010I After 10100 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1390.83 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 760 rows 223 columns
Cbc0010I After 10200 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1403.70 seconds)
Cbc0010I After 10300 nodes, 3 on tree, 49152 best solution, best possible 45055.999 (1415.75 seconds)
Cbc0010I After 10400 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1427.19 seconds)
Cbc0010I After 10500 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1439.82 seconds)
Cbc0010I After 10600 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1451.78 seconds)
Cbc0010I After 10700 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1463.52 seconds)
Cbc0010I After 10800 nodes, 6 on tree, 49152 best solution, best possible 45055.999 (1475.39 seconds)
Cbc0010I After 10900 nodes, 4 on tree, 49152 best solution, best possible 45055.999 (1486.54 seconds)
Cbc0010I After 11000 nodes, 2 on tree, 49152 best solution, best possible 45055.999 (1498.95 seconds)
Cbc0010I After 11100 nodes, 3 on tree, 49152 best solution, best possible 46005 (1511.66 seconds)
Cbc0010I After 11200 nodes, 4 on tree, 49152 best solution, best possible 46015 (1525.74 seconds)
Cbc0010I After 11300 nodes, 3 on tree, 49152 best solution, best possible 46025 (1537.36 seconds)
Cbc0010I After 11400 nodes, 3 on tree, 49152 best solution, best possible 46037 (1550.83 seconds)
Cbc0010I After 11500 nodes, 3 on tree, 49152 best solution, best possible 46049 (1563.74 seconds)
Cbc0010I After 11600 nodes, 1 on tree, 49152 best solution, best possible 46060 (1576.29 seconds)
Cbc0010I After 11700 nodes, 2 on tree, 49152 best solution, best possible 46069 (1587.88 seconds)
Cbc0010I After 11800 nodes, 15 on tree, 49152 best solution, best possible 46080 (1600.44 seconds)
Cbc0004I Integer solution of 46080 found after 6551093 iterations and 11804 nodes (1600.62 seconds)
Cbc0001I Search completed - best objective 46080, took 6551093 iterations and 11804 nodes (1600.64 seconds)
Cbc0032I Strong branching done 25850 times (1656112 iterations), fathomed 438 nodes and fixed 3314 variables
Cbc0035I Maximum depth 1043, 0 variables fixed on reduced cost
Cuts at root node changed objective from 39002.4 to 45056
Probing was tried 8316 times and created 201102 cuts of which 11 were active after adding rounds of cuts (21.519 seconds)
Gomory was tried 6943 times and created 5580 cuts of which 0 were active after adding rounds of cuts (18.503 seconds)
Knapsack was tried 6943 times and created 17865 cuts of which 0 were active after adding rounds of cuts (8.148 seconds)
Clique was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
MixedIntegerRounding2 was tried 19 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
FlowCover was tried 19 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 6943 times and created 55275 cuts of which 0 were active after adding rounds of cuts (7.139 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
ImplicationCuts was tried 89 times and created 69 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Optimal solution found

Objective value:                46080.00000000
Enumerated nodes:               11804
Total iterations:               6551093
Time (CPU seconds):             1600.77
Time (Wallclock seconds):       1603.64

Total time (CPU seconds):       1600.78   (Wallclock seconds):       1603.66

