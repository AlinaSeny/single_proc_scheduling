Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_4_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang10_4_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 387 - 0.42 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1603 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 551 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 118 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 6699 rows, 2298 columns (2298 integer (2243 of which binary)) and 22248 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 505 integers unsatisfied sum - 95.2736
Cbc0038I Pass   1: (3.37 seconds) suminf.   38.00592 (408) obj. 455.655 iterations 2423
Cbc0038I Pass   2: (3.40 seconds) suminf.   36.86206 (401) obj. 465.144 iterations 78
Cbc0038I Pass   3: (3.48 seconds) suminf.   30.97340 (386) obj. 454.578 iterations 254
Cbc0038I Pass   4: (3.52 seconds) suminf.   30.50211 (398) obj. 454.342 iterations 147
Cbc0038I Pass   5: (3.59 seconds) suminf.   24.38319 (341) obj. 432.304 iterations 239
Cbc0038I Pass   6: (3.61 seconds) suminf.   24.70556 (354) obj. 431.711 iterations 36
Cbc0038I Pass   7: (3.68 seconds) suminf.   20.15949 (323) obj. 440.181 iterations 333
Cbc0038I Pass   8: (3.70 seconds) suminf.   18.96207 (315) obj. 434.331 iterations 72
Cbc0038I Pass   9: (3.71 seconds) suminf.   18.96207 (315) obj. 434.331 iterations 4
Cbc0038I Pass  10: (3.76 seconds) suminf.   16.13027 (327) obj. 434.255 iterations 160
Cbc0038I Pass  11: (3.77 seconds) suminf.   16.04828 (333) obj. 434.255 iterations 51
Cbc0038I Pass  12: (3.82 seconds) suminf.   18.89569 (346) obj. 434.59 iterations 171
Cbc0038I Pass  13: (3.83 seconds) suminf.   18.76944 (344) obj. 434.584 iterations 7
Cbc0038I Pass  14: (3.91 seconds) suminf.   20.25112 (302) obj. 490.111 iterations 293
Cbc0038I Pass  15: (3.93 seconds) suminf.   17.57858 (299) obj. 490.115 iterations 59
Cbc0038I Pass  16: (3.97 seconds) suminf.   12.10863 (274) obj. 502.103 iterations 158
Cbc0038I Pass  17: (3.98 seconds) suminf.   12.14155 (268) obj. 501.858 iterations 33
Cbc0038I Pass  18: (4.03 seconds) suminf.   11.47725 (255) obj. 501.768 iterations 203
Cbc0038I Pass  19: (4.11 seconds) suminf.    8.64091 (265) obj. 499.044 iterations 285
Cbc0038I Pass  20: (4.13 seconds) suminf.    7.70295 (238) obj. 499.039 iterations 94
Cbc0038I Pass  21: (4.16 seconds) suminf.   10.18558 (236) obj. 498.475 iterations 137
Cbc0038I Pass  22: (4.18 seconds) suminf.    7.96084 (238) obj. 499.033 iterations 28
Cbc0038I Pass  23: (4.22 seconds) suminf.   11.45542 (220) obj. 498.582 iterations 182
Cbc0038I Pass  24: (4.25 seconds) suminf.    8.67142 (251) obj. 499.692 iterations 139
Cbc0038I Pass  25: (4.26 seconds) suminf.    8.67142 (251) obj. 499.692 iterations 1
Cbc0038I Pass  26: (4.29 seconds) suminf.    6.28248 (206) obj. 499.66 iterations 99
Cbc0038I Pass  27: (4.30 seconds) suminf.    6.28248 (206) obj. 499.66 iterations 4
Cbc0038I Pass  28: (4.35 seconds) suminf.    8.30627 (228) obj. 450.012 iterations 214
Cbc0038I Pass  29: (4.37 seconds) suminf.    6.78803 (228) obj. 445.979 iterations 66
Cbc0038I Pass  30: (4.46 seconds) suminf.    7.95644 (215) obj. 569.592 iterations 369
Cbc0038I Pass  31: (4.47 seconds) suminf.    7.95644 (215) obj. 569.592 iterations 7
Cbc0038I Pass  32: (4.56 seconds) suminf.    6.96435 (233) obj. 445.979 iterations 339
Cbc0038I Pass  33: (4.57 seconds) suminf.    6.59255 (231) obj. 445.979 iterations 4
Cbc0038I Pass  34: (4.67 seconds) suminf.    7.63702 (221) obj. 569.63 iterations 377
Cbc0038I Pass  35: (4.67 seconds) suminf.    7.63702 (221) obj. 569.63 iterations 4
Cbc0038I Pass  36: (4.77 seconds) suminf.    6.19528 (237) obj. 445.98 iterations 368
Cbc0038I Pass  37: (4.79 seconds) suminf.    6.11888 (247) obj. 445.979 iterations 32
Cbc0038I Pass  38: (4.83 seconds) suminf.    5.75668 (212) obj. 478.793 iterations 207
Cbc0038I Pass  39: (4.84 seconds) suminf.    5.72725 (208) obj. 478.793 iterations 6
Cbc0038I Pass  40: (4.90 seconds) suminf.    6.00135 (226) obj. 445.985 iterations 222
Cbc0038I Pass  41: (4.91 seconds) suminf.    5.66600 (224) obj. 445.988 iterations 7
Cbc0038I Pass  42: (4.93 seconds) suminf.    5.77685 (191) obj. 478.953 iterations 100
Cbc0038I Pass  43: (4.94 seconds) suminf.    5.76664 (191) obj. 478.953 iterations 2
Cbc0038I Pass  44: (4.96 seconds) suminf.    5.76706 (188) obj. 483.001 iterations 53
Cbc0038I Pass  45: (4.97 seconds) suminf.    5.76706 (188) obj. 483.001 iterations 1
Cbc0038I Pass  46: (5.01 seconds) suminf.    4.41637 (178) obj. 478.959 iterations 181
Cbc0038I Pass  47: (5.01 seconds) suminf.    4.41637 (178) obj. 478.959 iterations 1
Cbc0038I Pass  48: (5.04 seconds) suminf.    4.16833 (177) obj. 459 iterations 157
Cbc0038I Pass  49: (5.05 seconds) suminf.    4.14854 (177) obj. 459 iterations 6
Cbc0038I Pass  50: (5.11 seconds) suminf.    4.41749 (179) obj. 478.959 iterations 272
Cbc0038I Pass  51: (5.51 seconds) suminf.   63.40226 (432) obj. 571.475 iterations 1648
Cbc0038I Pass  52: (5.76 seconds) suminf.   33.30462 (427) obj. 573.072 iterations 920
Cbc0038I Pass  53: (5.78 seconds) suminf.   33.10330 (423) obj. 573.15 iterations 45
Cbc0038I Pass  54: (5.86 seconds) suminf.   29.07176 (402) obj. 529.249 iterations 310
Cbc0038I Pass  55: (5.88 seconds) suminf.   28.77524 (408) obj. 529.249 iterations 36
Cbc0038I Pass  56: (5.97 seconds) suminf.   26.60536 (385) obj. 529.553 iterations 221
Cbc0038I Pass  57: (5.99 seconds) suminf.   26.57981 (383) obj. 529.553 iterations 35
Cbc0038I Pass  58: (6.07 seconds) suminf.   22.17375 (355) obj. 527.933 iterations 194
Cbc0038I Pass  59: (6.12 seconds) suminf.   20.35783 (347) obj. 527.668 iterations 147
Cbc0038I Pass  60: (6.15 seconds) suminf.   19.54842 (338) obj. 527.674 iterations 77
Cbc0038I Pass  61: (6.22 seconds) suminf.   13.38457 (324) obj. 479.182 iterations 196
Cbc0038I Pass  62: (6.24 seconds) suminf.   12.47327 (323) obj. 479.182 iterations 48
Cbc0038I Pass  63: (6.29 seconds) suminf.   11.47817 (310) obj. 479.181 iterations 130
Cbc0038I Pass  64: (6.31 seconds) suminf.   11.40604 (301) obj. 479.181 iterations 41
Cbc0038I Pass  65: (6.34 seconds) suminf.   10.84119 (276) obj. 494.379 iterations 95
Cbc0038I Pass  66: (6.35 seconds) suminf.   10.82417 (274) obj. 494.377 iterations 11
Cbc0038I Pass  67: (6.43 seconds) suminf.    8.91343 (227) obj. 478.801 iterations 267
Cbc0038I Pass  68: (6.44 seconds) suminf.    6.92745 (224) obj. 478.8 iterations 12
Cbc0038I Pass  69: (6.50 seconds) suminf.    6.20074 (180) obj. 501.253 iterations 218
Cbc0038I Pass  70: (6.51 seconds) suminf.    6.20074 (180) obj. 501.253 iterations 4
Cbc0038I Pass  71: (6.56 seconds) suminf.    6.32342 (165) obj. 577.762 iterations 212
Cbc0038I Pass  72: (6.57 seconds) suminf.    6.32342 (165) obj. 577.762 iterations 3
Cbc0038I Pass  73: (6.72 seconds) suminf.    3.97538 (147) obj. 459.076 iterations 608
Cbc0038I Pass  74: (6.73 seconds) suminf.    3.97538 (147) obj. 459.076 iterations 2
Cbc0038I Pass  75: (6.76 seconds) suminf.    4.30872 (131) obj. 460.256 iterations 113
Cbc0038I Pass  76: (6.77 seconds) suminf.    4.27857 (117) obj. 460.256 iterations 5
Cbc0038I Pass  77: (6.81 seconds) suminf.    2.93443 (130) obj. 459.061 iterations 145
Cbc0038I Pass  78: (6.82 seconds) suminf.    2.93443 (130) obj. 459.061 iterations 6
Cbc0038I Pass  79: (6.96 seconds) suminf.    6.58437 (141) obj. 479.67 iterations 491
Cbc0038I Pass  80: (6.97 seconds) suminf.    6.58437 (141) obj. 479.67 iterations 2
Cbc0038I Pass  81: (7.08 seconds) suminf.    5.34625 (143) obj. 460.256 iterations 472
Cbc0038I Pass  82: (7.09 seconds) suminf.    5.34625 (143) obj. 460.256 iterations 2
Cbc0038I Pass  83: (7.23 seconds) suminf.    8.69926 (156) obj. 459.043 iterations 444
Cbc0038I Pass  84: (7.28 seconds) suminf.    4.39999 (162) obj. 459.056 iterations 166
Cbc0038I Pass  85: (7.36 seconds) suminf.   10.95932 (116) obj. 472.424 iterations 262
Cbc0038I Pass  86: (7.40 seconds) suminf.    1.99550 (40) obj. 460.24 iterations 173
Cbc0038I Pass  87: (7.70 seconds) suminf.    1.95714 (30) obj. 572.2 iterations 1083
Cbc0038I Pass  88: (7.71 seconds) suminf.    1.95714 (30) obj. 572.2 iterations 2
Cbc0038I Pass  89: (7.77 seconds) suminf.    1.78932 (39) obj. 473.989 iterations 249
Cbc0038I Pass  90: (7.78 seconds) suminf.    1.78932 (39) obj. 473.989 iterations 2
Cbc0038I Pass  91: (8.03 seconds) suminf.    1.28281 (42) obj. 457.005 iterations 1039
Cbc0038I Pass  92: (8.06 seconds) suminf.    1.92552 (26) obj. 475.367 iterations 133
Cbc0038I Pass  93: (8.06 seconds) suminf.    1.92552 (26) obj. 475.367 iterations 0
Cbc0038I Pass  94: (8.37 seconds) suminf.    0.91561 (60) obj. 455.001 iterations 1311
Cbc0038I Pass  95: (8.49 seconds) suminf.    3.48414 (76) obj. 455.1 iterations 430
Cbc0038I Pass  96: (8.50 seconds) suminf.    3.48414 (76) obj. 455.1 iterations 6
Cbc0038I Pass  97: (8.53 seconds) suminf.    0.00000 (0) obj. 463 iterations 84
Cbc0038I Solution found of 463
Cbc0038I Cleaned solution of 463
Cbc0038I Before mini branch and bound, 1219 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 3727 rows 1075 columns - 68 fixed gives 3223, 840 - ok now
Cbc0038I Mini branch and bound did not improve solution (9.62 seconds)
Cbc0038I Round again with cutoff of 454.5
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass  98: (9.63 seconds) suminf.   37.66815 (408) obj. 454 iterations 6
Cbc0038I Pass  99: (9.65 seconds) suminf.   37.36177 (404) obj. 454.5 iterations 70
Cbc0038I Pass 100: (9.71 seconds) suminf.   32.37979 (398) obj. 454.5 iterations 213
Cbc0038I Pass 101: (9.74 seconds) suminf.   32.58626 (407) obj. 454.5 iterations 86
Cbc0038I Pass 102: (9.82 seconds) suminf.   26.16009 (346) obj. 454.5 iterations 322
Cbc0038I Pass 103: (9.83 seconds) suminf.   26.49171 (350) obj. 454.5 iterations 41
Cbc0038I Pass 104: (9.90 seconds) suminf.   22.03688 (352) obj. 454.5 iterations 327
Cbc0038I Pass 105: (9.92 seconds) suminf.   21.40027 (346) obj. 454.5 iterations 53
Cbc0038I Pass 106: (9.97 seconds) suminf.   20.76616 (312) obj. 454.5 iterations 203
Cbc0038I Pass 107: (9.99 seconds) suminf.   18.79648 (321) obj. 454.5 iterations 71
Cbc0038I Pass 108: (10.04 seconds) suminf.   18.46510 (337) obj. 454.5 iterations 202
Cbc0038I Pass 109: (10.05 seconds) suminf.   18.09764 (333) obj. 454.5 iterations 10
Cbc0038I Pass 110: (10.09 seconds) suminf.   18.48676 (336) obj. 454.5 iterations 196
Cbc0038I Pass 111: (10.11 seconds) suminf.   16.94786 (334) obj. 454.5 iterations 41
Cbc0038I Pass 112: (10.15 seconds) suminf.   19.88407 (289) obj. 454.5 iterations 160
Cbc0038I Pass 113: (10.17 seconds) suminf.   19.39181 (289) obj. 454.5 iterations 48
Cbc0038I Pass 114: (10.23 seconds) suminf.   14.61007 (296) obj. 454.5 iterations 262
Cbc0038I Pass 115: (10.24 seconds) suminf.   14.59230 (298) obj. 454.5 iterations 12
Cbc0038I Pass 116: (10.34 seconds) suminf.   14.36989 (262) obj. 454.5 iterations 488
Cbc0038I Pass 117: (10.36 seconds) suminf.   12.85781 (253) obj. 454.5 iterations 118
Cbc0038I Pass 118: (10.38 seconds) suminf.   12.04679 (255) obj. 454.5 iterations 52
Cbc0038I Pass 119: (10.42 seconds) suminf.   11.44025 (238) obj. 454.5 iterations 177
Cbc0038I Pass 120: (10.42 seconds) suminf.   11.45790 (238) obj. 454.5 iterations 3
Cbc0038I Pass 121: (10.49 seconds) suminf.   11.71554 (228) obj. 454.5 iterations 287
Cbc0038I Pass 122: (10.51 seconds) suminf.   10.69864 (250) obj. 454.5 iterations 52
Cbc0038I Pass 123: (10.54 seconds) suminf.    9.10768 (239) obj. 454.5 iterations 91
Cbc0038I Pass 124: (10.60 seconds) suminf.   11.19059 (250) obj. 454.5 iterations 269
Cbc0038I Pass 125: (10.62 seconds) suminf.   10.05194 (236) obj. 454.5 iterations 65
Cbc0038I Pass 126: (10.64 seconds) suminf.    8.33802 (225) obj. 454.5 iterations 86
Cbc0038I Pass 127: (10.65 seconds) suminf.    8.33802 (225) obj. 454.5 iterations 1
Cbc0038I Pass 128: (10.68 seconds) suminf.   11.35786 (261) obj. 454.5 iterations 151
Cbc0038I Pass 129: (10.69 seconds) suminf.   11.35786 (261) obj. 454.5 iterations 2
Cbc0038I Pass 130: (10.76 seconds) suminf.    9.02975 (217) obj. 454.5 iterations 360
Cbc0038I Pass 131: (10.77 seconds) suminf.    9.00116 (212) obj. 454.5 iterations 24
Cbc0038I Pass 132: (10.87 seconds) suminf.    8.24477 (200) obj. 454.5 iterations 402
Cbc0038I Pass 133: (10.88 seconds) suminf.    7.54625 (200) obj. 454.5 iterations 10
Cbc0038I Pass 134: (10.92 seconds) suminf.    7.91869 (223) obj. 454.5 iterations 247
Cbc0038I Pass 135: (10.94 seconds) suminf.    7.77450 (206) obj. 454.5 iterations 70
Cbc0038I Pass 136: (11.01 seconds) suminf.   10.14147 (228) obj. 454.5 iterations 314
Cbc0038I Pass 137: (11.03 seconds) suminf.    7.72372 (208) obj. 454.5 iterations 45
Cbc0038I Pass 138: (11.11 seconds) suminf.   13.73519 (248) obj. 454.5 iterations 339
Cbc0038I Pass 139: (11.13 seconds) suminf.   12.62297 (254) obj. 454.5 iterations 29
Cbc0038I Pass 140: (11.14 seconds) suminf.   10.60826 (206) obj. 454.5 iterations 51
Cbc0038I Pass 141: (11.21 seconds) suminf.   11.14780 (232) obj. 454.5 iterations 242
Cbc0038I Pass 142: (11.23 seconds) suminf.    8.53289 (208) obj. 454.5 iterations 65
Cbc0038I Pass 143: (11.32 seconds) suminf.   11.40716 (255) obj. 454.5 iterations 292
Cbc0038I Pass 144: (11.34 seconds) suminf.    9.51778 (254) obj. 454.5 iterations 47
Cbc0038I Pass 145: (11.36 seconds) suminf.    8.31290 (210) obj. 454.5 iterations 102
Cbc0038I Pass 146: (11.43 seconds) suminf.   10.92392 (220) obj. 454.5 iterations 270
Cbc0038I Pass 147: (11.44 seconds) suminf.   10.17323 (220) obj. 454.5 iterations 51
Cbc0038I Pass 148: (11.46 seconds) suminf.    7.54605 (201) obj. 454.5 iterations 40
Cbc0038I Pass 149: (11.53 seconds) suminf.   11.55647 (239) obj. 454.5 iterations 264
Cbc0038I Pass 150: (11.55 seconds) suminf.   10.31364 (239) obj. 454.5 iterations 53
Cbc0038I Pass 151: (11.57 seconds) suminf.    8.82880 (191) obj. 454.5 iterations 49
Cbc0038I Pass 152: (11.62 seconds) suminf.    9.96150 (228) obj. 454.5 iterations 242
Cbc0038I Pass 153: (11.63 seconds) suminf.    7.30298 (207) obj. 454.5 iterations 33
Cbc0038I Pass 154: (11.69 seconds) suminf.   11.89736 (213) obj. 454.5 iterations 255
Cbc0038I Pass 155: (11.71 seconds) suminf.   10.71592 (191) obj. 454.5 iterations 74
Cbc0038I Pass 156: (11.73 seconds) suminf.    9.21575 (188) obj. 454.5 iterations 44
Cbc0038I Pass 157: (11.77 seconds) suminf.   12.59417 (194) obj. 454.5 iterations 207
Cbc0038I Pass 158: (11.80 seconds) suminf.   10.27051 (205) obj. 454.5 iterations 94
Cbc0038I Pass 159: (11.82 seconds) suminf.    9.75321 (212) obj. 454.5 iterations 99
Cbc0038I Pass 160: (11.83 seconds) suminf.    9.66413 (213) obj. 454.5 iterations 18
Cbc0038I Pass 161: (11.88 seconds) suminf.   11.21250 (195) obj. 454.5 iterations 227
Cbc0038I Pass 162: (11.90 seconds) suminf.   10.63484 (202) obj. 454.5 iterations 72
Cbc0038I Pass 163: (11.91 seconds) suminf.   10.66049 (201) obj. 454.5 iterations 18
Cbc0038I Pass 164: (11.94 seconds) suminf.    9.55322 (212) obj. 454.5 iterations 124
Cbc0038I Pass 165: (11.96 seconds) suminf.    8.57777 (206) obj. 454.5 iterations 57
Cbc0038I Pass 166: (11.99 seconds) suminf.    8.98430 (205) obj. 454.5 iterations 136
Cbc0038I Pass 167: (12.02 seconds) suminf.    8.56568 (208) obj. 454.5 iterations 133
Cbc0038I Pass 168: (12.04 seconds) suminf.    8.93983 (205) obj. 454.5 iterations 108
Cbc0038I Pass 169: (12.06 seconds) suminf.    8.40755 (205) obj. 454.5 iterations 66
Cbc0038I Pass 170: (12.10 seconds) suminf.    8.44298 (212) obj. 454.5 iterations 171
Cbc0038I Pass 171: (12.12 seconds) suminf.    8.36699 (210) obj. 454.5 iterations 72
Cbc0038I Pass 172: (12.15 seconds) suminf.    8.88208 (199) obj. 454.5 iterations 126
Cbc0038I Pass 173: (12.16 seconds) suminf.    8.60732 (202) obj. 454.5 iterations 13
Cbc0038I Pass 174: (12.17 seconds) suminf.    8.61804 (202) obj. 454.5 iterations 9
Cbc0038I Pass 175: (12.23 seconds) suminf.   10.99104 (209) obj. 454.5 iterations 239
Cbc0038I Pass 176: (12.25 seconds) suminf.    8.77300 (209) obj. 454.5 iterations 98
Cbc0038I Pass 177: (12.26 seconds) suminf.    8.77300 (209) obj. 454.5 iterations 1
Cbc0038I Pass 178: (12.33 seconds) suminf.   10.63598 (198) obj. 454.5 iterations 296
Cbc0038I Pass 179: (12.35 seconds) suminf.   10.50152 (201) obj. 454.5 iterations 33
Cbc0038I Pass 180: (12.38 seconds) suminf.    9.19044 (187) obj. 454.5 iterations 119
Cbc0038I Pass 181: (12.39 seconds) suminf.    6.95115 (205) obj. 454.5 iterations 37
Cbc0038I Pass 182: (12.42 seconds) suminf.    8.25143 (184) obj. 454.5 iterations 113
Cbc0038I Pass 183: (12.43 seconds) suminf.    7.86173 (184) obj. 454.5 iterations 37
Cbc0038I Pass 184: (12.46 seconds) suminf.    8.57915 (205) obj. 454.5 iterations 147
Cbc0038I Pass 185: (12.49 seconds) suminf.    8.16465 (212) obj. 454.5 iterations 123
Cbc0038I Pass 186: (12.52 seconds) suminf.    8.04461 (184) obj. 454.5 iterations 112
Cbc0038I Pass 187: (12.54 seconds) suminf.    7.44720 (201) obj. 454.5 iterations 78
Cbc0038I Pass 188: (12.60 seconds) suminf.   12.92424 (197) obj. 454.5 iterations 241
Cbc0038I Pass 189: (12.64 seconds) suminf.    6.91222 (181) obj. 454.5 iterations 141
Cbc0038I Pass 190: (12.66 seconds) suminf.    5.12573 (164) obj. 454.5 iterations 103
Cbc0038I Pass 191: (12.67 seconds) suminf.    5.06307 (164) obj. 454.5 iterations 6
Cbc0038I Pass 192: (12.72 seconds) suminf.    5.96731 (194) obj. 454.5 iterations 226
Cbc0038I Pass 193: (12.74 seconds) suminf.    5.77859 (164) obj. 454.5 iterations 59
Cbc0038I Pass 194: (12.84 seconds) suminf.   10.97071 (189) obj. 454.5 iterations 485
Cbc0038I Pass 195: (12.86 seconds) suminf.    8.90216 (182) obj. 454.5 iterations 104
Cbc0038I Pass 196: (12.88 seconds) suminf.    6.91661 (182) obj. 454.5 iterations 34
Cbc0038I Pass 197: (13.22 seconds) suminf.   60.35916 (439) obj. 454.5 iterations 1461
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1278 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 3609 rows 1017 columns - 84 fixed gives 2958, 710 - still too large
Cbc0038I Mini branch and bound did not improve solution (14.34 seconds)
Cbc0038I After 14.34 seconds - Feasibility pump exiting with objective of 463 - took 11.53 seconds
Cbc0012I Integer solution of 463 found by feasibility pump after 0 iterations and 0 nodes (14.35 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 407 rows 139 columns
Cbc0031I 21 added rows had average density of 23.142857
Cbc0013I At root node, 21 cuts changed objective from 387 to 387 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 52 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.362 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 21 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 11 row cuts average 51.5 elements, 0 column cuts (0 active)  in 0.241 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 463 best solution, best possible 387 (16.63 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 311 rows 116 columns
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 353 rows 125 columns
Cbc0010I After 100 nodes, 49 on tree, 463 best solution, best possible 387 (45.56 seconds)
Cbc0010I After 200 nodes, 61 on tree, 463 best solution, best possible 387 (58.84 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 562 rows 170 columns
Cbc0010I After 300 nodes, 50 on tree, 463 best solution, best possible 387 (80.59 seconds)
Cbc0010I After 400 nodes, 63 on tree, 463 best solution, best possible 387 (112.11 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 294 rows 111 columns
Cbc0010I After 500 nodes, 82 on tree, 463 best solution, best possible 387 (127.30 seconds)
Cbc0010I After 600 nodes, 85 on tree, 463 best solution, best possible 387 (146.48 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 242 rows 97 columns
Cbc0010I After 700 nodes, 82 on tree, 463 best solution, best possible 387 (160.39 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 332 rows 120 columns
Cbc0010I After 800 nodes, 93 on tree, 463 best solution, best possible 387 (177.14 seconds)
Cbc0010I After 900 nodes, 124 on tree, 463 best solution, best possible 387 (199.20 seconds)
Cbc0010I After 1000 nodes, 155 on tree, 463 best solution, best possible 387 (213.15 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 227 rows 87 columns
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 240 rows 92 columns
Cbc0010I After 1100 nodes, 142 on tree, 463 best solution, best possible 387 (232.43 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 238 rows 93 columns
Cbc0010I After 1200 nodes, 141 on tree, 463 best solution, best possible 387 (258.13 seconds)
Cbc0010I After 1300 nodes, 135 on tree, 463 best solution, best possible 387 (276.05 seconds)
Cbc0010I After 1400 nodes, 132 on tree, 463 best solution, best possible 387 (303.98 seconds)
Cbc0010I After 1500 nodes, 120 on tree, 463 best solution, best possible 387 (330.51 seconds)
Cbc0010I After 1600 nodes, 113 on tree, 463 best solution, best possible 387 (358.15 seconds)
Cbc0010I After 1700 nodes, 98 on tree, 463 best solution, best possible 387 (380.75 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 194 rows 81 columns
Cbc0010I After 1800 nodes, 108 on tree, 463 best solution, best possible 387 (416.48 seconds)
Cbc0010I After 1900 nodes, 91 on tree, 463 best solution, best possible 387 (486.12 seconds)
Cbc0010I After 2000 nodes, 98 on tree, 463 best solution, best possible 387 (502.87 seconds)
Cbc0010I After 2100 nodes, 90 on tree, 463 best solution, best possible 387 (526.18 seconds)
Cbc0010I After 2200 nodes, 91 on tree, 463 best solution, best possible 387 (538.65 seconds)
Cbc0010I After 2300 nodes, 88 on tree, 463 best solution, best possible 387 (549.44 seconds)
Cbc0010I After 2400 nodes, 88 on tree, 463 best solution, best possible 387 (558.68 seconds)
Cbc0010I After 2500 nodes, 94 on tree, 463 best solution, best possible 387 (568.99 seconds)
Cbc0010I After 2600 nodes, 79 on tree, 463 best solution, best possible 387 (585.35 seconds)
Cbc0010I After 2700 nodes, 81 on tree, 463 best solution, best possible 387 (599.07 seconds)
Cbc0010I After 2800 nodes, 81 on tree, 463 best solution, best possible 387 (626.24 seconds)
Cbc0010I After 2900 nodes, 99 on tree, 463 best solution, best possible 387 (654.95 seconds)
Cbc0010I After 3000 nodes, 86 on tree, 463 best solution, best possible 387 (672.82 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 298 rows 107 columns
Cbc0010I After 3100 nodes, 77 on tree, 463 best solution, best possible 387 (700.53 seconds)
Cbc0010I After 3200 nodes, 72 on tree, 463 best solution, best possible 387 (713.12 seconds)
Cbc0010I After 3300 nodes, 63 on tree, 463 best solution, best possible 387 (741.32 seconds)
Cbc0010I After 3400 nodes, 62 on tree, 463 best solution, best possible 387 (754.17 seconds)
Cbc0010I After 3500 nodes, 68 on tree, 463 best solution, best possible 387 (765.44 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 406 rows 146 columns
Cbc0010I After 3600 nodes, 68 on tree, 463 best solution, best possible 387 (775.87 seconds)
Cbc0010I After 3700 nodes, 73 on tree, 463 best solution, best possible 387 (802.60 seconds)
Cbc0010I After 3800 nodes, 63 on tree, 463 best solution, best possible 387 (840.07 seconds)
Cbc0010I After 3900 nodes, 64 on tree, 463 best solution, best possible 387 (883.14 seconds)
Cbc0010I After 4000 nodes, 62 on tree, 463 best solution, best possible 387 (915.69 seconds)
Cbc0010I After 4100 nodes, 58 on tree, 463 best solution, best possible 387 (954.04 seconds)
Cbc0010I After 4200 nodes, 59 on tree, 463 best solution, best possible 387 (1005.07 seconds)
Cbc0010I After 4300 nodes, 57 on tree, 463 best solution, best possible 387 (1023.80 seconds)
Cbc0010I After 4400 nodes, 58 on tree, 463 best solution, best possible 387 (1051.34 seconds)
Cbc0010I After 4500 nodes, 70 on tree, 463 best solution, best possible 387 (1067.10 seconds)
Cbc0010I After 4600 nodes, 69 on tree, 463 best solution, best possible 387 (1088.29 seconds)
Cbc0010I After 4700 nodes, 60 on tree, 463 best solution, best possible 387 (1108.35 seconds)
Cbc0010I After 4800 nodes, 56 on tree, 463 best solution, best possible 387 (1131.65 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 500 rows 162 columns
Cbc0010I After 4900 nodes, 56 on tree, 463 best solution, best possible 387 (1146.61 seconds)
Cbc0010I After 5000 nodes, 48 on tree, 463 best solution, best possible 387 (1161.90 seconds)
Cbc0010I After 5100 nodes, 45 on tree, 463 best solution, best possible 387 (1181.90 seconds)
Cbc0010I After 5200 nodes, 41 on tree, 463 best solution, best possible 387 (1200.16 seconds)
Cbc0010I After 5300 nodes, 43 on tree, 463 best solution, best possible 387 (1213.42 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 395 rows 133 columns
Cbc0010I After 5400 nodes, 40 on tree, 463 best solution, best possible 387 (1222.69 seconds)
Cbc0010I After 5500 nodes, 35 on tree, 463 best solution, best possible 387 (1231.40 seconds)
Cbc0010I After 5600 nodes, 32 on tree, 463 best solution, best possible 387 (1240.23 seconds)
Cbc0010I After 5700 nodes, 35 on tree, 463 best solution, best possible 387 (1251.45 seconds)
Cbc0010I After 5800 nodes, 38 on tree, 463 best solution, best possible 387 (1262.75 seconds)
Cbc0010I After 5900 nodes, 32 on tree, 463 best solution, best possible 387 (1273.41 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 458 rows 149 columns
Cbc0010I After 6000 nodes, 35 on tree, 463 best solution, best possible 387 (1288.43 seconds)
Cbc0010I After 6100 nodes, 33 on tree, 463 best solution, best possible 387 (1304.96 seconds)
Cbc0010I After 6200 nodes, 35 on tree, 463 best solution, best possible 387 (1313.56 seconds)
Cbc0010I After 6300 nodes, 34 on tree, 463 best solution, best possible 387 (1327.63 seconds)
Cbc0010I After 6400 nodes, 38 on tree, 463 best solution, best possible 387 (1337.80 seconds)
Cbc0010I After 6500 nodes, 43 on tree, 463 best solution, best possible 387 (1350.47 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 426 rows 152 columns
Cbc0010I After 6600 nodes, 36 on tree, 463 best solution, best possible 387 (1361.32 seconds)
Cbc0010I After 6700 nodes, 44 on tree, 463 best solution, best possible 387 (1371.08 seconds)
Cbc0010I After 6800 nodes, 47 on tree, 463 best solution, best possible 387 (1385.85 seconds)
Cbc0010I After 6900 nodes, 47 on tree, 463 best solution, best possible 387 (1399.09 seconds)
Cbc0010I After 7000 nodes, 47 on tree, 463 best solution, best possible 387 (1410.61 seconds)
Cbc0010I After 7100 nodes, 48 on tree, 463 best solution, best possible 387 (1421.45 seconds)
Cbc0010I After 7200 nodes, 47 on tree, 463 best solution, best possible 387 (1429.17 seconds)
Cbc0010I After 7300 nodes, 52 on tree, 463 best solution, best possible 387 (1438.26 seconds)
Cbc0010I After 7400 nodes, 57 on tree, 463 best solution, best possible 387 (1447.89 seconds)
Cbc0010I After 7500 nodes, 50 on tree, 463 best solution, best possible 387 (1455.20 seconds)
Cbc0010I After 7600 nodes, 47 on tree, 463 best solution, best possible 387 (1462.40 seconds)
Cbc0010I After 7700 nodes, 38 on tree, 463 best solution, best possible 387 (1472.80 seconds)
Cbc0010I After 7800 nodes, 37 on tree, 463 best solution, best possible 387 (1486.07 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 556 rows 177 columns
Cbc0010I After 7900 nodes, 34 on tree, 463 best solution, best possible 387 (1495.68 seconds)
Cbc0010I After 8000 nodes, 35 on tree, 463 best solution, best possible 387 (1505.31 seconds)
Cbc0010I After 8100 nodes, 34 on tree, 463 best solution, best possible 387 (1513.18 seconds)
Cbc0010I After 8200 nodes, 32 on tree, 463 best solution, best possible 387 (1520.12 seconds)
Cbc0010I After 8300 nodes, 30 on tree, 463 best solution, best possible 387 (1529.65 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 316 rows 106 columns
Cbc0010I After 8400 nodes, 32 on tree, 463 best solution, best possible 387 (1536.43 seconds)
Cbc0010I After 8500 nodes, 32 on tree, 463 best solution, best possible 387 (1542.78 seconds)
Cbc0010I After 8600 nodes, 30 on tree, 463 best solution, best possible 387 (1549.77 seconds)
Cbc0010I After 8700 nodes, 26 on tree, 463 best solution, best possible 387 (1563.04 seconds)
Cbc0010I After 8800 nodes, 24 on tree, 463 best solution, best possible 387 (1602.04 seconds)
Cbc0010I After 8900 nodes, 32 on tree, 463 best solution, best possible 387 (1621.04 seconds)
Cbc0010I After 9000 nodes, 43 on tree, 463 best solution, best possible 387 (1635.79 seconds)
Cbc0010I After 9100 nodes, 59 on tree, 463 best solution, best possible 387 (1646.24 seconds)
Cbc0010I After 9200 nodes, 58 on tree, 463 best solution, best possible 387 (1660.83 seconds)
Cbc0010I After 9300 nodes, 53 on tree, 463 best solution, best possible 387 (1675.52 seconds)
Cbc0010I After 9400 nodes, 60 on tree, 463 best solution, best possible 387 (1688.18 seconds)
Cbc0010I After 9500 nodes, 67 on tree, 463 best solution, best possible 387 (1705.80 seconds)
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 532 rows 177 columns
Cbc0010I After 9600 nodes, 78 on tree, 463 best solution, best possible 387 (1720.17 seconds)
Cbc0010I After 9700 nodes, 75 on tree, 463 best solution, best possible 387 (1725.34 seconds)
Cbc0010I After 9800 nodes, 72 on tree, 463 best solution, best possible 387 (1733.49 seconds)
Cbc0010I After 9900 nodes, 74 on tree, 463 best solution, best possible 387 (1744.51 seconds)
Cbc0010I After 10000 nodes, 59 on tree, 463 best solution, best possible 387 (1761.20 seconds)
Cbc0010I After 10100 nodes, 63 on tree, 463 best solution, best possible 387 (1781.77 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 463 (best possible 387), took 4668670 iterations and 10194 nodes (1797.90 seconds)
Cbc0032I Strong branching done 30686 times (1558504 iterations), fathomed 728 nodes and fixed 2800 variables
Cbc0035I Maximum depth 61, 5 variables fixed on reduced cost
Cuts at root node changed objective from 387 to 387
Probing was tried 2141 times and created 186558 cuts of which 0 were active after adding rounds of cuts (8.589 seconds)
Gomory was tried 989 times and created 1450 cuts of which 0 were active after adding rounds of cuts (4.385 seconds)
Knapsack was tried 989 times and created 5648 cuts of which 0 were active after adding rounds of cuts (2.171 seconds)
Clique was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 6 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
TwoMirCuts was tried 6 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.267 seconds)
ZeroHalf was tried 6 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.241 seconds)

Result - Stopped on time limit

Objective value:                463.00000000
Lower bound:                    387.000
Gap:                            0.20
Enumerated nodes:               10194
Total iterations:               4668670
Time (CPU seconds):             1798.23
Time (Wallclock seconds):       1800.42

Total time (CPU seconds):       1798.27   (Wallclock seconds):       1800.47

