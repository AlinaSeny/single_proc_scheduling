Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_5_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang9_5_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 336 - 1.64 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1046 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 134 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4312 rows, 1490 columns (1490 integer (1445 of which binary)) and 14064 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 638 integers unsatisfied sum - 146.173
Cbc0038I Pass   1: (3.34 seconds) suminf.   77.22114 (500) obj. 431.867 iterations 1919
Cbc0038I Pass   2: (3.44 seconds) suminf.   64.26669 (459) obj. 436.691 iterations 451
Cbc0038I Pass   3: (3.50 seconds) suminf.   61.44097 (450) obj. 438.556 iterations 222
Cbc0038I Pass   4: (3.52 seconds) suminf.   59.17320 (450) obj. 435.643 iterations 59
Cbc0038I Pass   5: (3.54 seconds) suminf.   57.85196 (446) obj. 436.857 iterations 89
Cbc0038I Pass   6: (3.55 seconds) suminf.   57.71346 (448) obj. 436.925 iterations 9
Cbc0038I Pass   7: (3.59 seconds) suminf.   55.33087 (439) obj. 435.815 iterations 132
Cbc0038I Pass   8: (3.59 seconds) suminf.   55.46910 (444) obj. 435.81 iterations 9
Cbc0038I Pass   9: (3.65 seconds) suminf.   50.84294 (428) obj. 432.102 iterations 200
Cbc0038I Pass  10: (3.67 seconds) suminf.   50.64715 (416) obj. 432.728 iterations 80
Cbc0038I Pass  11: (3.74 seconds) suminf.   47.37583 (333) obj. 453.057 iterations 287
Cbc0038I Pass  12: (3.75 seconds) suminf.   43.39918 (329) obj. 453.477 iterations 73
Cbc0038I Pass  13: (3.81 seconds) suminf.   41.50340 (315) obj. 436.408 iterations 281
Cbc0038I Pass  14: (3.85 seconds) suminf.   38.58437 (300) obj. 456.517 iterations 167
Cbc0038I Pass  15: (3.85 seconds) suminf.   38.58437 (300) obj. 456.517 iterations 5
Cbc0038I Pass  16: (3.88 seconds) suminf.   36.75969 (289) obj. 454.686 iterations 120
Cbc0038I Pass  17: (3.89 seconds) suminf.   36.24446 (281) obj. 454.678 iterations 22
Cbc0038I Pass  18: (3.95 seconds) suminf.   30.04497 (289) obj. 472.959 iterations 317
Cbc0038I Pass  19: (3.96 seconds) suminf.   29.93682 (287) obj. 472.947 iterations 45
Cbc0038I Pass  20: (3.99 seconds) suminf.   27.09426 (258) obj. 458.481 iterations 116
Cbc0038I Pass  21: (4.00 seconds) suminf.   25.50614 (266) obj. 458.26 iterations 59
Cbc0038I Pass  22: (4.02 seconds) suminf.   23.37305 (252) obj. 492.512 iterations 102
Cbc0038I Pass  23: (4.03 seconds) suminf.   21.68633 (243) obj. 494.095 iterations 28
Cbc0038I Pass  24: (4.09 seconds) suminf.   22.72897 (271) obj. 458.914 iterations 272
Cbc0038I Pass  25: (4.10 seconds) suminf.   22.34225 (263) obj. 459.487 iterations 39
Cbc0038I Pass  26: (4.13 seconds) suminf.   20.53160 (251) obj. 457.383 iterations 167
Cbc0038I Pass  27: (4.15 seconds) suminf.   20.42703 (242) obj. 457.368 iterations 63
Cbc0038I Pass  28: (4.16 seconds) suminf.   20.42703 (242) obj. 457.368 iterations 4
Cbc0038I Pass  29: (4.19 seconds) suminf.   20.58047 (244) obj. 459.503 iterations 143
Cbc0038I Pass  30: (4.22 seconds) suminf.   18.94332 (239) obj. 458.433 iterations 146
Cbc0038I Pass  31: (4.26 seconds) suminf.   19.47490 (243) obj. 460.646 iterations 176
Cbc0038I Pass  32: (4.26 seconds) suminf.   18.92379 (244) obj. 460.662 iterations 23
Cbc0038I Pass  33: (4.31 seconds) suminf.   16.04690 (213) obj. 445.491 iterations 234
Cbc0038I Pass  34: (4.32 seconds) suminf.   15.81550 (210) obj. 444.579 iterations 25
Cbc0038I Pass  35: (4.38 seconds) suminf.   14.76318 (149) obj. 429.499 iterations 376
Cbc0038I Pass  36: (4.41 seconds) suminf.   10.05775 (122) obj. 429.61 iterations 205
Cbc0038I Pass  37: (4.47 seconds) suminf.    9.76889 (116) obj. 397.804 iterations 353
Cbc0038I Pass  38: (4.47 seconds) suminf.   10.25553 (109) obj. 397.82 iterations 16
Cbc0038I Pass  39: (4.50 seconds) suminf.    5.32640 (78) obj. 397.796 iterations 186
Cbc0038I Pass  40: (4.51 seconds) suminf.    2.94068 (61) obj. 397.812 iterations 60
Cbc0038I Pass  41: (4.53 seconds) suminf.    1.09354 (43) obj. 403.719 iterations 71
Cbc0038I Pass  42: (4.53 seconds) suminf.    1.09354 (43) obj. 403.719 iterations 10
Cbc0038I Pass  43: (4.54 seconds) suminf.    0.00000 (0) obj. 399 iterations 77
Cbc0038I Solution found of 399
Cbc0038I Cleaned solution of 399
Cbc0038I Before mini branch and bound, 613 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 2912 rows 874 columns - 105 fixed gives 2129, 550 - ok now
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 434 rows 145 columns
Cbc0038I Mini branch and bound improved solution from 399 to 399 (5.09 seconds)
Cbc0038I Round again with cutoff of 391.8
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass  44: (5.14 seconds) suminf.   75.38859 (497) obj. 391 iterations 156
Cbc0038I Pass  45: (5.24 seconds) suminf.   63.25855 (446) obj. 391.8 iterations 496
Cbc0038I Pass  46: (5.29 seconds) suminf.   60.58741 (440) obj. 391.8 iterations 197
Cbc0038I Pass  47: (5.29 seconds) suminf.   60.59097 (438) obj. 391.8 iterations 21
Cbc0038I Pass  48: (5.37 seconds) suminf.   53.75838 (400) obj. 391.8 iterations 369
Cbc0038I Pass  49: (5.40 seconds) suminf.   53.57425 (404) obj. 391.8 iterations 88
Cbc0038I Pass  50: (5.46 seconds) suminf.   49.56814 (392) obj. 391.8 iterations 272
Cbc0038I Pass  51: (5.50 seconds) suminf.   48.01501 (404) obj. 391.8 iterations 171
Cbc0038I Pass  52: (5.54 seconds) suminf.   51.57665 (337) obj. 391.8 iterations 216
Cbc0038I Pass  53: (5.57 seconds) suminf.   51.42533 (353) obj. 391.8 iterations 112
Cbc0038I Pass  54: (5.60 seconds) suminf.   48.74797 (343) obj. 391.8 iterations 124
Cbc0038I Pass  55: (5.63 seconds) suminf.   48.88976 (355) obj. 391.8 iterations 115
Cbc0038I Pass  56: (5.70 seconds) suminf.   44.35099 (331) obj. 391.8 iterations 315
Cbc0038I Pass  57: (5.71 seconds) suminf.   43.22142 (327) obj. 391.8 iterations 21
Cbc0038I Pass  58: (5.71 seconds) suminf.   43.22142 (327) obj. 391.8 iterations 1
Cbc0038I Pass  59: (5.75 seconds) suminf.   39.53438 (305) obj. 391.8 iterations 163
Cbc0038I Pass  60: (5.76 seconds) suminf.   39.21472 (301) obj. 391.8 iterations 22
Cbc0038I Pass  61: (5.78 seconds) suminf.   39.22288 (302) obj. 391.8 iterations 64
Cbc0038I Pass  62: (5.79 seconds) suminf.   38.60288 (302) obj. 391.8 iterations 21
Cbc0038I Pass  63: (5.82 seconds) suminf.   37.53781 (316) obj. 391.8 iterations 162
Cbc0038I Pass  64: (5.84 seconds) suminf.   37.14611 (312) obj. 391.8 iterations 62
Cbc0038I Pass  65: (5.89 seconds) suminf.   36.51998 (317) obj. 391.8 iterations 209
Cbc0038I Pass  66: (5.91 seconds) suminf.   35.76848 (310) obj. 391.8 iterations 82
Cbc0038I Pass  67: (5.96 seconds) suminf.   36.36243 (285) obj. 391.8 iterations 308
Cbc0038I Pass  68: (5.98 seconds) suminf.   32.98271 (274) obj. 391.8 iterations 100
Cbc0038I Pass  69: (6.00 seconds) suminf.   31.39953 (268) obj. 391.8 iterations 92
Cbc0038I Pass  70: (6.03 seconds) suminf.   31.89080 (277) obj. 391.8 iterations 127
Cbc0038I Pass  71: (6.04 seconds) suminf.   31.91533 (279) obj. 391.8 iterations 10
Cbc0038I Pass  72: (6.08 seconds) suminf.   31.96650 (259) obj. 391.8 iterations 189
Cbc0038I Pass  73: (6.10 seconds) suminf.   31.48087 (257) obj. 391.8 iterations 92
Cbc0038I Pass  74: (6.12 seconds) suminf.   30.80100 (260) obj. 391.8 iterations 141
Cbc0038I Pass  75: (6.14 seconds) suminf.   31.10670 (257) obj. 391.8 iterations 54
Cbc0038I Pass  76: (6.20 seconds) suminf.   33.28676 (259) obj. 391.8 iterations 325
Cbc0038I Pass  77: (6.22 seconds) suminf.   31.46619 (258) obj. 391.8 iterations 129
Cbc0038I Pass  78: (6.27 seconds) suminf.   28.79170 (241) obj. 391.8 iterations 260
Cbc0038I Pass  79: (6.29 seconds) suminf.   28.86340 (239) obj. 391.8 iterations 44
Cbc0038I Pass  80: (6.33 seconds) suminf.   31.75951 (260) obj. 391.8 iterations 267
Cbc0038I Pass  81: (6.36 seconds) suminf.   29.15835 (253) obj. 391.8 iterations 145
Cbc0038I Pass  82: (6.41 seconds) suminf.   30.18661 (234) obj. 391.8 iterations 231
Cbc0038I Pass  83: (6.43 seconds) suminf.   29.54774 (239) obj. 391.8 iterations 100
Cbc0038I Pass  84: (6.44 seconds) suminf.   29.20686 (236) obj. 391.8 iterations 24
Cbc0038I Pass  85: (6.48 seconds) suminf.   29.11298 (263) obj. 391.8 iterations 220
Cbc0038I Pass  86: (6.50 seconds) suminf.   29.57294 (260) obj. 391.8 iterations 85
Cbc0038I Pass  87: (6.55 seconds) suminf.   30.31583 (240) obj. 391.8 iterations 291
Cbc0038I Pass  88: (6.58 seconds) suminf.   28.65131 (238) obj. 391.8 iterations 140
Cbc0038I Pass  89: (6.64 seconds) suminf.   34.35203 (223) obj. 391.8 iterations 319
Cbc0038I Pass  90: (6.68 seconds) suminf.   27.24940 (226) obj. 391.8 iterations 198
Cbc0038I Pass  91: (6.72 seconds) suminf.   27.17610 (219) obj. 391.8 iterations 198
Cbc0038I Pass  92: (6.74 seconds) suminf.   26.76465 (216) obj. 391.8 iterations 101
Cbc0038I Pass  93: (6.79 seconds) suminf.   28.66974 (224) obj. 391.8 iterations 331
Cbc0038I Pass  94: (6.83 seconds) suminf.   24.54370 (211) obj. 391.8 iterations 206
Cbc0038I Pass  95: (6.86 seconds) suminf.   23.15786 (208) obj. 391.8 iterations 161
Cbc0038I Pass  96: (6.88 seconds) suminf.   24.65378 (216) obj. 391.8 iterations 156
Cbc0038I Pass  97: (6.90 seconds) suminf.   24.74317 (212) obj. 391.8 iterations 78
Cbc0038I Pass  98: (6.95 seconds) suminf.   25.08720 (220) obj. 391.8 iterations 278
Cbc0038I Pass  99: (6.96 seconds) suminf.   23.93085 (221) obj. 391.8 iterations 82
Cbc0038I Pass 100: (6.97 seconds) suminf.   23.74856 (222) obj. 391.8 iterations 38
Cbc0038I Pass 101: (7.03 seconds) suminf.   26.68057 (195) obj. 391.8 iterations 321
Cbc0038I Pass 102: (7.04 seconds) suminf.   23.75861 (186) obj. 391.8 iterations 104
Cbc0038I Pass 103: (7.08 seconds) suminf.   25.78822 (183) obj. 391.8 iterations 224
Cbc0038I Pass 104: (7.11 seconds) suminf.   22.95492 (189) obj. 391.8 iterations 148
Cbc0038I Pass 105: (7.16 seconds) suminf.   19.41580 (171) obj. 391.8 iterations 290
Cbc0038I Pass 106: (7.17 seconds) suminf.   16.91430 (174) obj. 391.8 iterations 81
Cbc0038I Pass 107: (7.23 seconds) suminf.   19.40379 (179) obj. 391.8 iterations 361
Cbc0038I Pass 108: (7.25 seconds) suminf.   13.30077 (154) obj. 391.8 iterations 118
Cbc0038I Pass 109: (7.27 seconds) suminf.   11.54069 (151) obj. 391.8 iterations 79
Cbc0038I Pass 110: (7.27 seconds) suminf.   11.05383 (151) obj. 391.8 iterations 27
Cbc0038I Pass 111: (7.33 seconds) suminf.    9.25077 (95) obj. 391.8 iterations 334
Cbc0038I Pass 112: (7.35 seconds) suminf.    6.53734 (83) obj. 391.8 iterations 162
Cbc0038I Pass 113: (7.37 seconds) suminf.    6.10160 (72) obj. 391.8 iterations 91
Cbc0038I Pass 114: (7.44 seconds) suminf.   12.21014 (72) obj. 391.8 iterations 463
Cbc0038I Pass 115: (7.46 seconds) suminf.    1.81123 (30) obj. 391.8 iterations 154
Cbc0038I Pass 116: (7.49 seconds) suminf.    4.90854 (42) obj. 391.8 iterations 187
Cbc0038I Pass 117: (7.50 seconds) suminf.    0.93784 (29) obj. 391.8 iterations 85
Cbc0038I Pass 118: (7.53 seconds) suminf.    9.51743 (34) obj. 391.8 iterations 163
Cbc0038I Pass 119: (7.54 seconds) suminf.    7.31121 (33) obj. 391.8 iterations 52
Cbc0038I Pass 120: (7.57 seconds) suminf.    4.27098 (33) obj. 391.8 iterations 177
Cbc0038I Pass 121: (7.58 seconds) suminf.    0.97252 (27) obj. 391.8 iterations 89
Cbc0038I Pass 122: (7.60 seconds) suminf.    4.20160 (33) obj. 391.8 iterations 132
Cbc0038I Pass 123: (7.61 seconds) suminf.    0.93482 (30) obj. 391.8 iterations 61
Cbc0038I Pass 124: (7.65 seconds) suminf.    6.61504 (37) obj. 391.8 iterations 259
Cbc0038I Pass 125: (7.67 seconds) suminf.    4.38920 (29) obj. 391.8 iterations 90
Cbc0038I Pass 126: (7.68 seconds) suminf.    8.50260 (27) obj. 391.8 iterations 104
Cbc0038I Pass 127: (7.69 seconds) suminf.    3.82475 (25) obj. 391.8 iterations 67
Cbc0038I Pass 128: (7.71 seconds) suminf.    6.01345 (30) obj. 391.8 iterations 109
Cbc0038I Pass 129: (7.72 seconds) suminf.    1.07106 (27) obj. 391.8 iterations 91
Cbc0038I Pass 130: (7.74 seconds) suminf.    8.67331 (30) obj. 391.8 iterations 180
Cbc0038I Pass 131: (7.75 seconds) suminf.    8.51236 (29) obj. 391.8 iterations 24
Cbc0038I Pass 132: (7.76 seconds) suminf.    4.87156 (27) obj. 391.8 iterations 47
Cbc0038I Pass 133: (7.77 seconds) suminf.    4.30530 (27) obj. 391.8 iterations 32
Cbc0038I Pass 134: (7.79 seconds) suminf.    5.81531 (36) obj. 391.8 iterations 138
Cbc0038I Pass 135: (7.80 seconds) suminf.    4.18061 (30) obj. 391.8 iterations 77
Cbc0038I Pass 136: (7.82 seconds) suminf.    7.53307 (31) obj. 391.8 iterations 116
Cbc0038I Pass 137: (7.83 seconds) suminf.    3.99593 (27) obj. 391.8 iterations 91
Cbc0038I Pass 138: (7.86 seconds) suminf.    5.52410 (35) obj. 391.8 iterations 158
Cbc0038I Pass 139: (7.86 seconds) suminf.    4.56053 (34) obj. 391.8 iterations 35
Cbc0038I Pass 140: (7.88 seconds) suminf.    5.08721 (39) obj. 391.8 iterations 133
Cbc0038I Pass 141: (7.89 seconds) suminf.    2.01722 (28) obj. 391.8 iterations 44
Cbc0038I Pass 142: (7.90 seconds) suminf.    1.40496 (28) obj. 391.8 iterations 39
Cbc0038I Pass 143: (8.02 seconds) suminf.   50.43101 (266) obj. 391.8 iterations 748
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 515 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 3114 rows 972 columns - 342 fixed gives 870, 228 - ok now
Cbc0038I Mini branch and bound did not improve solution (8.50 seconds)
Cbc0038I After 8.50 seconds - Feasibility pump exiting with objective of 399 - took 5.59 seconds
Cbc0012I Integer solution of 399 found by feasibility pump after 0 iterations and 0 nodes (8.50 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 2472 rows 661 columns - 290 fixed gives 277, 59 - ok now
Cbc0031I 28 added rows had average density of 12.678571
Cbc0013I At root node, 28 cuts changed objective from 336 to 337.9999 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 216 row cuts average 2.1 elements, 22 column cuts (22 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 100 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.849 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 38 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 16 row cuts average 48.1 elements, 0 column cuts (0 active)  in 0.616 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 399 best solution, best possible 338 (17.54 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 2377 rows 650 columns - 267 fixed gives 413, 79 - ok now
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 923 rows 241 columns
Cbc0010I After 100 nodes, 6 on tree, 399 best solution, best possible 342 (98.13 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1021 rows 274 columns
Cbc0010I After 200 nodes, 6 on tree, 399 best solution, best possible 347 (168.91 seconds)
Cbc0010I After 300 nodes, 9 on tree, 399 best solution, best possible 347 (240.87 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1143 rows 312 columns
Cbc0010I After 400 nodes, 5 on tree, 399 best solution, best possible 347 (293.56 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1040 rows 291 columns
Cbc0010I After 500 nodes, 10 on tree, 399 best solution, best possible 347 (347.67 seconds)
Cbc0010I After 600 nodes, 8 on tree, 399 best solution, best possible 347 (410.20 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 2243 rows 603 columns - 252 fixed gives 231, 58 - ok now
Cbc0010I After 700 nodes, 9 on tree, 399 best solution, best possible 347 (460.11 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 878 rows 249 columns
Cbc0010I After 800 nodes, 14 on tree, 399 best solution, best possible 347 (513.89 seconds)
Cbc0010I After 900 nodes, 20 on tree, 399 best solution, best possible 347 (570.55 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1485 rows 429 columns
Cbc0010I After 1000 nodes, 20 on tree, 399 best solution, best possible 347 (615.65 seconds)
Cbc0010I After 1100 nodes, 29 on tree, 399 best solution, best possible 347 (651.29 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1548 rows 457 columns
Cbc0010I After 1200 nodes, 24 on tree, 399 best solution, best possible 347 (693.21 seconds)
Cbc0010I After 1300 nodes, 21 on tree, 399 best solution, best possible 347 (741.24 seconds)
Cbc0010I After 1400 nodes, 22 on tree, 399 best solution, best possible 347 (793.55 seconds)
Cbc0010I After 1500 nodes, 16 on tree, 399 best solution, best possible 347 (830.61 seconds)
Cbc0010I After 1600 nodes, 18 on tree, 399 best solution, best possible 347 (881.27 seconds)
Cbc0010I After 1700 nodes, 12 on tree, 399 best solution, best possible 347 (935.40 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 2389 rows 650 columns - 260 fixed gives 441, 99 - ok now
Cbc0010I After 1800 nodes, 14 on tree, 399 best solution, best possible 347 (989.51 seconds)
Cbc0010I After 1900 nodes, 21 on tree, 399 best solution, best possible 347 (1044.65 seconds)
Cbc0010I After 2000 nodes, 11 on tree, 399 best solution, best possible 347 (1104.03 seconds)
Cbc0010I After 2100 nodes, 18 on tree, 399 best solution, best possible 347 (1159.27 seconds)
Cbc0010I After 2200 nodes, 8 on tree, 399 best solution, best possible 347 (1188.77 seconds)
Cbc0010I After 2300 nodes, 9 on tree, 399 best solution, best possible 347 (1225.79 seconds)
Cbc0010I After 2400 nodes, 14 on tree, 399 best solution, best possible 347 (1252.81 seconds)
Cbc0010I After 2500 nodes, 6 on tree, 399 best solution, best possible 347 (1276.86 seconds)
Cbc0010I After 2600 nodes, 6 on tree, 399 best solution, best possible 347 (1312.20 seconds)
Cbc0010I After 2700 nodes, 3 on tree, 399 best solution, best possible 347 (1347.94 seconds)
Cbc0010I After 2800 nodes, 17 on tree, 399 best solution, best possible 347 (1375.74 seconds)
Cbc0010I After 2900 nodes, 9 on tree, 399 best solution, best possible 347 (1395.22 seconds)
Cbc0010I After 3000 nodes, 13 on tree, 399 best solution, best possible 347 (1413.10 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1177 rows 314 columns
Cbc0010I After 3100 nodes, 12 on tree, 399 best solution, best possible 347 (1439.34 seconds)
Cbc0010I After 3200 nodes, 10 on tree, 399 best solution, best possible 347 (1464.88 seconds)
Cbc0010I After 3300 nodes, 21 on tree, 399 best solution, best possible 347 (1493.73 seconds)
Cbc0010I After 3400 nodes, 17 on tree, 399 best solution, best possible 347 (1523.58 seconds)
Cbc0010I After 3500 nodes, 21 on tree, 399 best solution, best possible 347 (1547.25 seconds)
Cbc0038I Full problem 4312 rows 1490 columns, reduced to 1248 rows 341 columns
Cbc0010I After 3600 nodes, 16 on tree, 399 best solution, best possible 347 (1583.33 seconds)
Cbc0010I After 3700 nodes, 18 on tree, 399 best solution, best possible 347 (1601.75 seconds)
Cbc0010I After 3800 nodes, 20 on tree, 399 best solution, best possible 347 (1629.92 seconds)
Cbc0010I After 3900 nodes, 18 on tree, 399 best solution, best possible 347 (1651.35 seconds)
Cbc0010I After 4000 nodes, 15 on tree, 399 best solution, best possible 347 (1669.51 seconds)
Cbc0010I After 4100 nodes, 14 on tree, 399 best solution, best possible 347 (1685.44 seconds)
Cbc0010I After 4200 nodes, 17 on tree, 399 best solution, best possible 347 (1711.90 seconds)
Cbc0010I After 4300 nodes, 16 on tree, 399 best solution, best possible 347 (1744.18 seconds)
Cbc0010I After 4400 nodes, 17 on tree, 399 best solution, best possible 347 (1765.28 seconds)
Cbc0010I After 4500 nodes, 20 on tree, 399 best solution, best possible 347 (1784.31 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 399 (best possible 347), took 4133132 iterations and 4545 nodes (1799.48 seconds)
Cbc0032I Strong branching done 23558 times (1885209 iterations), fathomed 210 nodes and fixed 957 variables
Cbc0035I Maximum depth 53, 2 variables fixed on reduced cost
Cuts at root node changed objective from 336 to 338
Probing was tried 871 times and created 131313 cuts of which 0 were active after adding rounds of cuts (5.930 seconds)
Gomory was tried 595 times and created 1610 cuts of which 0 were active after adding rounds of cuts (4.660 seconds)
Knapsack was tried 595 times and created 4347 cuts of which 0 were active after adding rounds of cuts (0.997 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
MixedIntegerRounding2 was tried 17 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
TwoMirCuts was tried 595 times and created 16018 cuts of which 0 were active after adding rounds of cuts (1.863 seconds)
ZeroHalf was tried 595 times and created 2742 cuts of which 0 were active after adding rounds of cuts (20.040 seconds)
ImplicationCuts was tried 48 times and created 1046 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)

Result - Stopped on time limit

Objective value:                399.00000000
Lower bound:                    347.000
Gap:                            0.15
Enumerated nodes:               4545
Total iterations:               4133132
Time (CPU seconds):             1799.70
Time (Wallclock seconds):       1807.01

Total time (CPU seconds):       1799.72   (Wallclock seconds):       1807.04

