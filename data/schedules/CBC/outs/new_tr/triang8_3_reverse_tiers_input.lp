Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_3_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang8_3_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 291.729 - 0.37 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 237 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2623 rows, 916 columns (916 integer (880 of which binary)) and 8703 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 389 integers unsatisfied sum - 68.5671
Cbc0038I Pass   1: suminf.   23.99909 (179) obj. 350.85 iterations 735
Cbc0038I Pass   2: suminf.   19.37166 (188) obj. 350.524 iterations 86
Cbc0038I Pass   3: suminf.   19.03486 (190) obj. 350.413 iterations 45
Cbc0038I Pass   4: suminf.   14.41028 (147) obj. 383 iterations 139
Cbc0038I Pass   5: suminf.   14.41028 (147) obj. 383 iterations 4
Cbc0038I Pass   6: suminf.   13.85249 (98) obj. 383 iterations 289
Cbc0038I Pass   7: suminf.   11.58362 (98) obj. 383 iterations 46
Cbc0038I Pass   8: suminf.   11.82480 (108) obj. 383 iterations 37
Cbc0038I Pass   9: suminf.    7.02339 (80) obj. 383 iterations 155
Cbc0038I Pass  10: suminf.    7.01026 (79) obj. 383 iterations 11
Cbc0038I Pass  11: suminf.    2.09105 (12) obj. 383 iterations 161
Cbc0038I Pass  12: suminf.    1.79804 (13) obj. 383 iterations 29
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 383 iterations 16
Cbc0038I Solution found of 383
Cbc0038I Cleaned solution of 383
Cbc0038I Before mini branch and bound, 447 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.90 seconds)
Cbc0038I Round again with cutoff of 372.973
Cbc0038I Pass  14: suminf.   23.99909 (179) obj. 350.85 iterations 0
Cbc0038I Pass  15: suminf.   19.37166 (188) obj. 350.524 iterations 108
Cbc0038I Pass  16: suminf.   19.03486 (190) obj. 350.413 iterations 53
Cbc0038I Pass  17: suminf.   16.09441 (167) obj. 372.973 iterations 292
Cbc0038I Pass  18: suminf.   15.80199 (165) obj. 372.973 iterations 20
Cbc0038I Pass  19: suminf.   17.26446 (128) obj. 372.973 iterations 211
Cbc0038I Pass  20: suminf.   16.03098 (155) obj. 372.973 iterations 123
Cbc0038I Pass  21: suminf.   16.34214 (155) obj. 372.973 iterations 40
Cbc0038I Pass  22: suminf.   13.22767 (100) obj. 372.973 iterations 337
Cbc0038I Pass  23: suminf.   12.85537 (96) obj. 372.973 iterations 51
Cbc0038I Pass  24: suminf.   13.22359 (96) obj. 372.973 iterations 19
Cbc0038I Pass  25: suminf.    9.54595 (95) obj. 372.973 iterations 165
Cbc0038I Pass  26: suminf.    7.72473 (95) obj. 372.973 iterations 62
Cbc0038I Pass  27: suminf.    5.54247 (78) obj. 372.973 iterations 91
Cbc0038I Pass  28: suminf.    4.84578 (67) obj. 372.973 iterations 38
Cbc0038I Pass  29: suminf.    8.97126 (58) obj. 372.973 iterations 139
Cbc0038I Pass  30: suminf.    3.78923 (64) obj. 372.973 iterations 114
Cbc0038I Pass  31: suminf.   14.37154 (87) obj. 365.833 iterations 198
Cbc0038I Pass  32: suminf.   12.03591 (94) obj. 372.973 iterations 101
Cbc0038I Pass  33: suminf.    4.80211 (66) obj. 372.973 iterations 234
Cbc0038I Pass  34: suminf.   48.17803 (252) obj. 372.973 iterations 602
Cbc0038I Pass  35: suminf.   35.03483 (227) obj. 372.973 iterations 347
Cbc0038I Pass  36: suminf.   34.99236 (232) obj. 372.973 iterations 41
Cbc0038I Pass  37: suminf.   33.73511 (237) obj. 372.973 iterations 83
Cbc0038I Pass  38: suminf.   30.27958 (215) obj. 372.973 iterations 174
Cbc0038I Pass  39: suminf.   30.34211 (214) obj. 372.973 iterations 99
Cbc0038I Pass  40: suminf.   24.05139 (196) obj. 372.973 iterations 201
Cbc0038I Pass  41: suminf.   23.34599 (191) obj. 372.973 iterations 65
Cbc0038I Pass  42: suminf.   24.31983 (204) obj. 372.973 iterations 132
Cbc0038I Pass  43: suminf.   23.16297 (205) obj. 372.973 iterations 124
Cbc0038I Pass  44: suminf.   22.98656 (198) obj. 372.973 iterations 24
Cbc0038I Pass  45: suminf.   23.79871 (162) obj. 372.973 iterations 259
Cbc0038I Pass  46: suminf.   23.48631 (181) obj. 372.973 iterations 100
Cbc0038I Pass  47: suminf.   22.32693 (159) obj. 372.973 iterations 125
Cbc0038I Pass  48: suminf.   22.21560 (171) obj. 372.973 iterations 29
Cbc0038I Pass  49: suminf.   18.51276 (153) obj. 372.973 iterations 176
Cbc0038I Pass  50: suminf.   16.29339 (178) obj. 372.973 iterations 58
Cbc0038I Pass  51: suminf.   17.04280 (172) obj. 372.973 iterations 28
Cbc0038I Pass  52: suminf.   11.50444 (110) obj. 372.973 iterations 315
Cbc0038I Pass  53: suminf.   12.41305 (114) obj. 372.973 iterations 120
Cbc0038I Pass  54: suminf.   13.54288 (119) obj. 372.973 iterations 36
Cbc0038I Pass  55: suminf.    8.62966 (102) obj. 372.973 iterations 227
Cbc0038I Pass  56: suminf.    6.92474 (102) obj. 372.973 iterations 66
Cbc0038I Pass  57: suminf.    7.79644 (85) obj. 372.973 iterations 218
Cbc0038I Pass  58: suminf.    7.06573 (80) obj. 372.973 iterations 88
Cbc0038I Pass  59: suminf.    3.86615 (69) obj. 372.973 iterations 135
Cbc0038I Pass  60: suminf.    3.86180 (67) obj. 372.973 iterations 16
Cbc0038I Pass  61: suminf.    9.78914 (77) obj. 369.978 iterations 194
Cbc0038I Pass  62: suminf.    6.39168 (74) obj. 372.973 iterations 86
Cbc0038I Pass  63: suminf.    4.69465 (47) obj. 372.973 iterations 190
Cbc0038I Pass  64: suminf.    3.75033 (63) obj. 372.973 iterations 106
Cbc0038I Pass  65: suminf.   12.56073 (75) obj. 372.973 iterations 255
Cbc0038I Pass  66: suminf.   11.39457 (81) obj. 372.973 iterations 54
Cbc0038I Pass  67: suminf.   11.15542 (77) obj. 372.973 iterations 13
Cbc0038I Pass  68: suminf.    8.31468 (70) obj. 372.973 iterations 123
Cbc0038I Pass  69: suminf.    8.60416 (72) obj. 372.973 iterations 14
Cbc0038I Pass  70: suminf.   10.18519 (78) obj. 357.719 iterations 346
Cbc0038I Pass  71: suminf.    8.15198 (83) obj. 372.973 iterations 121
Cbc0038I Pass  72: suminf.    5.13797 (53) obj. 372.973 iterations 235
Cbc0038I Pass  73: suminf.    3.25747 (42) obj. 372.973 iterations 82
Cbc0038I Pass  74: suminf.   12.36097 (84) obj. 372.973 iterations 333
Cbc0038I Pass  75: suminf.   11.00128 (79) obj. 372.973 iterations 46
Cbc0038I Pass  76: suminf.   10.40840 (79) obj. 372.973 iterations 22
Cbc0038I Pass  77: suminf.    8.56483 (83) obj. 372.973 iterations 282
Cbc0038I Pass  78: suminf.    5.58915 (63) obj. 372.973 iterations 82
Cbc0038I Pass  79: suminf.    5.84296 (66) obj. 372.973 iterations 28
Cbc0038I Pass  80: suminf.   11.80089 (78) obj. 369.955 iterations 379
Cbc0038I Pass  81: suminf.    7.30967 (77) obj. 372.973 iterations 158
Cbc0038I Pass  82: suminf.    4.90416 (65) obj. 372.973 iterations 55
Cbc0038I Pass  83: suminf.    4.79905 (52) obj. 372.973 iterations 68
Cbc0038I Pass  84: suminf.    3.27914 (44) obj. 372.973 iterations 54
Cbc0038I Pass  85: suminf.   11.40022 (72) obj. 372.973 iterations 495
Cbc0038I Pass  86: suminf.   11.57189 (75) obj. 372.973 iterations 62
Cbc0038I Pass  87: suminf.   10.53556 (76) obj. 372.973 iterations 24
Cbc0038I Pass  88: suminf.    8.92444 (64) obj. 372.973 iterations 126
Cbc0038I Pass  89: suminf.    8.92466 (64) obj. 372.973 iterations 19
Cbc0038I Pass  90: suminf.    7.93389 (68) obj. 372.973 iterations 74
Cbc0038I Pass  91: suminf.    6.13032 (60) obj. 372.973 iterations 70
Cbc0038I Pass  92: suminf.    9.27205 (75) obj. 372.973 iterations 202
Cbc0038I Pass  93: suminf.    9.13240 (71) obj. 372.973 iterations 90
Cbc0038I Pass  94: suminf.    8.06241 (76) obj. 372.973 iterations 63
Cbc0038I Pass  95: suminf.    4.36469 (41) obj. 372.973 iterations 130
Cbc0038I Pass  96: suminf.    3.63119 (45) obj. 372.973 iterations 41
Cbc0038I Pass  97: suminf.   15.17270 (87) obj. 372.973 iterations 277
Cbc0038I Pass  98: suminf.   11.55279 (87) obj. 372.973 iterations 48
Cbc0038I Pass  99: suminf.   11.55279 (87) obj. 372.973 iterations 8
Cbc0038I Pass 100: suminf.   10.77856 (103) obj. 372.973 iterations 285
Cbc0038I Pass 101: suminf.    8.24981 (93) obj. 372.973 iterations 79
Cbc0038I Pass 102: suminf.    2.58489 (42) obj. 372.973 iterations 246
Cbc0038I Pass 103: suminf.    2.60697 (43) obj. 372.973 iterations 83
Cbc0038I Pass 104: suminf.    5.90693 (50) obj. 372.973 iterations 116
Cbc0038I Pass 105: suminf.    3.02009 (49) obj. 372.973 iterations 93
Cbc0038I Pass 106: suminf.    3.01874 (47) obj. 372.973 iterations 9
Cbc0038I Pass 107: suminf.   16.06452 (92) obj. 372.973 iterations 265
Cbc0038I Pass 108: suminf.   14.50045 (93) obj. 372.973 iterations 93
Cbc0038I Pass 109: suminf.   12.88770 (102) obj. 372.973 iterations 27
Cbc0038I Pass 110: suminf.   11.22600 (98) obj. 372.973 iterations 73
Cbc0038I Pass 111: suminf.   10.64226 (93) obj. 372.973 iterations 10
Cbc0038I Pass 112: suminf.   10.38748 (86) obj. 372.973 iterations 202
Cbc0038I Pass 113: suminf.   56.73891 (300) obj. 372.973 iterations 613
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2623 rows 916 columns, reduced to 2064 rows 676 columns - 60 fixed gives 1623, 492 - still too large
Cbc0038I Mini branch and bound did not improve solution (2.37 seconds)
Cbc0038I After 2.37 seconds - Feasibility pump exiting with objective of 383 - took 1.68 seconds
Cbc0012I Integer solution of 383 found by feasibility pump after 0 iterations and 0 nodes (2.37 seconds)
Cbc0031I 47 added rows had average density of 27.297872
Cbc0013I At root node, 47 cuts changed objective from 291.72941 to 301 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 89 row cuts average 2.2 elements, 3 column cuts (3 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 147 row cuts average 299.6 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 345 row cuts average 118.8 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 9 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 383 best solution, best possible 301 (6.60 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 915 rows 279 columns
Cbc0038I Full problem 2623 rows 916 columns, reduced to 862 rows 261 columns
Cbc0010I After 100 nodes, 8 on tree, 383 best solution, best possible 301 (26.10 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 755 rows 227 columns
Cbc0010I After 200 nodes, 7 on tree, 383 best solution, best possible 301 (43.27 seconds)
Cbc0010I After 300 nodes, 3 on tree, 383 best solution, best possible 301 (59.56 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 814 rows 256 columns
Cbc0010I After 400 nodes, 16 on tree, 383 best solution, best possible 301 (72.63 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 616 rows 178 columns
Cbc0010I After 500 nodes, 32 on tree, 383 best solution, best possible 301 (81.10 seconds)
Cbc0010I After 600 nodes, 31 on tree, 383 best solution, best possible 301 (86.06 seconds)
Cbc0010I After 700 nodes, 38 on tree, 383 best solution, best possible 301 (94.38 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 744 rows 223 columns
Cbc0038I Full problem 2623 rows 916 columns, reduced to 555 rows 175 columns
Cbc0010I After 800 nodes, 26 on tree, 383 best solution, best possible 301 (105.20 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 563 rows 171 columns
Cbc0010I After 900 nodes, 22 on tree, 383 best solution, best possible 301 (113.56 seconds)
Cbc0010I After 1000 nodes, 17 on tree, 383 best solution, best possible 301 (121.83 seconds)
Cbc0010I After 1100 nodes, 23 on tree, 383 best solution, best possible 301 (129.15 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 696 rows 206 columns
Cbc0010I After 1200 nodes, 11 on tree, 383 best solution, best possible 301 (133.25 seconds)
Cbc0010I After 1300 nodes, 16 on tree, 383 best solution, best possible 301 (138.77 seconds)
Cbc0010I After 1400 nodes, 14 on tree, 383 best solution, best possible 301 (145.26 seconds)
Cbc0010I After 1500 nodes, 12 on tree, 383 best solution, best possible 301 (151.55 seconds)
Cbc0010I After 1600 nodes, 11 on tree, 383 best solution, best possible 301 (157.48 seconds)
Cbc0010I After 1700 nodes, 13 on tree, 383 best solution, best possible 301 (162.95 seconds)
Cbc0010I After 1800 nodes, 13 on tree, 383 best solution, best possible 301 (173.57 seconds)
Cbc0010I After 1900 nodes, 15 on tree, 383 best solution, best possible 301 (182.95 seconds)
Cbc0010I After 2000 nodes, 15 on tree, 383 best solution, best possible 301 (189.76 seconds)
Cbc0010I After 2100 nodes, 21 on tree, 383 best solution, best possible 301 (197.31 seconds)
Cbc0010I After 2200 nodes, 15 on tree, 383 best solution, best possible 301 (205.51 seconds)
Cbc0010I After 2300 nodes, 11 on tree, 383 best solution, best possible 301 (213.41 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 622 rows 208 columns
Cbc0038I Full problem 2623 rows 916 columns, reduced to 645 rows 192 columns
Cbc0010I After 2400 nodes, 16 on tree, 383 best solution, best possible 301 (221.73 seconds)
Cbc0010I After 2500 nodes, 13 on tree, 383 best solution, best possible 301 (227.27 seconds)
Cbc0010I After 2600 nodes, 11 on tree, 383 best solution, best possible 301 (235.07 seconds)
Cbc0010I After 2700 nodes, 11 on tree, 383 best solution, best possible 301 (241.93 seconds)
Cbc0010I After 2800 nodes, 11 on tree, 383 best solution, best possible 301 (249.66 seconds)
Cbc0010I After 2900 nodes, 24 on tree, 383 best solution, best possible 301 (254.09 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 589 rows 186 columns
Cbc0010I After 3000 nodes, 15 on tree, 383 best solution, best possible 301 (256.96 seconds)
Cbc0010I After 3100 nodes, 22 on tree, 383 best solution, best possible 301 (261.81 seconds)
Cbc0010I After 3200 nodes, 24 on tree, 383 best solution, best possible 301 (264.90 seconds)
Cbc0010I After 3300 nodes, 22 on tree, 383 best solution, best possible 301 (268.29 seconds)
Cbc0010I After 3400 nodes, 19 on tree, 383 best solution, best possible 301 (272.63 seconds)
Cbc0010I After 3500 nodes, 17 on tree, 383 best solution, best possible 301 (277.83 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 570 rows 176 columns
Cbc0010I After 3600 nodes, 19 on tree, 383 best solution, best possible 301 (282.69 seconds)
Cbc0010I After 3700 nodes, 19 on tree, 383 best solution, best possible 301 (287.02 seconds)
Cbc0010I After 3800 nodes, 15 on tree, 383 best solution, best possible 301 (292.56 seconds)
Cbc0010I After 3900 nodes, 14 on tree, 383 best solution, best possible 301 (294.61 seconds)
Cbc0010I After 4000 nodes, 8 on tree, 383 best solution, best possible 301 (301.82 seconds)
Cbc0010I After 4100 nodes, 25 on tree, 383 best solution, best possible 301 (307.01 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 638 rows 191 columns
Cbc0010I After 4200 nodes, 19 on tree, 383 best solution, best possible 301 (312.24 seconds)
Cbc0010I After 4300 nodes, 18 on tree, 383 best solution, best possible 301 (317.05 seconds)
Cbc0010I After 4400 nodes, 22 on tree, 383 best solution, best possible 301 (321.40 seconds)
Cbc0010I After 4500 nodes, 18 on tree, 383 best solution, best possible 301 (326.59 seconds)
Cbc0010I After 4600 nodes, 17 on tree, 383 best solution, best possible 301 (335.79 seconds)
Cbc0010I After 4700 nodes, 17 on tree, 383 best solution, best possible 301 (345.15 seconds)
Cbc0010I After 4800 nodes, 16 on tree, 383 best solution, best possible 301 (350.94 seconds)
Cbc0010I After 4900 nodes, 18 on tree, 383 best solution, best possible 301 (357.46 seconds)
Cbc0010I After 5000 nodes, 20 on tree, 383 best solution, best possible 301 (362.08 seconds)
Cbc0010I After 5100 nodes, 23 on tree, 383 best solution, best possible 301 (366.64 seconds)
Cbc0010I After 5200 nodes, 13 on tree, 383 best solution, best possible 301 (374.03 seconds)
Cbc0010I After 5300 nodes, 11 on tree, 383 best solution, best possible 301 (380.97 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 835 rows 256 columns
Cbc0010I After 5400 nodes, 11 on tree, 383 best solution, best possible 301 (386.69 seconds)
Cbc0010I After 5500 nodes, 7 on tree, 383 best solution, best possible 301 (392.01 seconds)
Cbc0010I After 5600 nodes, 15 on tree, 383 best solution, best possible 301 (398.18 seconds)
Cbc0010I After 5700 nodes, 14 on tree, 383 best solution, best possible 301 (403.09 seconds)
Cbc0010I After 5800 nodes, 12 on tree, 383 best solution, best possible 301 (407.47 seconds)
Cbc0010I After 5900 nodes, 18 on tree, 383 best solution, best possible 301 (412.84 seconds)
Cbc0010I After 6000 nodes, 12 on tree, 383 best solution, best possible 301 (419.17 seconds)
Cbc0010I After 6100 nodes, 4 on tree, 383 best solution, best possible 301 (423.95 seconds)
Cbc0010I After 6200 nodes, 14 on tree, 383 best solution, best possible 301 (430.37 seconds)
Cbc0010I After 6300 nodes, 13 on tree, 383 best solution, best possible 301 (434.39 seconds)
Cbc0010I After 6400 nodes, 11 on tree, 383 best solution, best possible 301 (440.51 seconds)
Cbc0010I After 6500 nodes, 17 on tree, 383 best solution, best possible 301 (447.76 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 680 rows 203 columns
Cbc0010I After 6600 nodes, 17 on tree, 383 best solution, best possible 301 (457.88 seconds)
Cbc0010I After 6700 nodes, 4 on tree, 383 best solution, best possible 301 (464.42 seconds)
Cbc0010I After 6800 nodes, 26 on tree, 383 best solution, best possible 301 (469.86 seconds)
Cbc0010I After 6900 nodes, 15 on tree, 383 best solution, best possible 301 (475.64 seconds)
Cbc0010I After 7000 nodes, 10 on tree, 383 best solution, best possible 301 (481.97 seconds)
Cbc0010I After 7100 nodes, 21 on tree, 383 best solution, best possible 301 (488.17 seconds)
Cbc0010I After 7200 nodes, 20 on tree, 383 best solution, best possible 301 (493.47 seconds)
Cbc0010I After 7300 nodes, 15 on tree, 383 best solution, best possible 301 (499.21 seconds)
Cbc0010I After 7400 nodes, 22 on tree, 383 best solution, best possible 301 (502.42 seconds)
Cbc0010I After 7500 nodes, 11 on tree, 383 best solution, best possible 301 (506.18 seconds)
Cbc0010I After 7600 nodes, 8 on tree, 383 best solution, best possible 301 (509.78 seconds)
Cbc0010I After 7700 nodes, 20 on tree, 383 best solution, best possible 301 (513.44 seconds)
Cbc0010I After 7800 nodes, 16 on tree, 383 best solution, best possible 301 (519.24 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 814 rows 242 columns
Cbc0010I After 7900 nodes, 26 on tree, 383 best solution, best possible 301 (524.07 seconds)
Cbc0010I After 8000 nodes, 10 on tree, 383 best solution, best possible 301 (529.55 seconds)
Cbc0010I After 8100 nodes, 14 on tree, 383 best solution, best possible 301 (533.85 seconds)
Cbc0010I After 8200 nodes, 13 on tree, 383 best solution, best possible 301 (537.09 seconds)
Cbc0010I After 8300 nodes, 15 on tree, 383 best solution, best possible 301 (542.70 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 775 rows 231 columns
Cbc0010I After 8400 nodes, 13 on tree, 383 best solution, best possible 301 (547.57 seconds)
Cbc0010I After 8500 nodes, 23 on tree, 383 best solution, best possible 301 (551.25 seconds)
Cbc0010I After 8600 nodes, 14 on tree, 383 best solution, best possible 301 (556.06 seconds)
Cbc0010I After 8700 nodes, 6 on tree, 383 best solution, best possible 301 (561.59 seconds)
Cbc0010I After 8800 nodes, 14 on tree, 383 best solution, best possible 301 (565.76 seconds)
Cbc0010I After 8900 nodes, 15 on tree, 383 best solution, best possible 301 (572.68 seconds)
Cbc0010I After 9000 nodes, 22 on tree, 383 best solution, best possible 301 (576.59 seconds)
Cbc0010I After 9100 nodes, 19 on tree, 383 best solution, best possible 301 (581.13 seconds)
Cbc0010I After 9200 nodes, 22 on tree, 383 best solution, best possible 301 (585.38 seconds)
Cbc0010I After 9300 nodes, 16 on tree, 383 best solution, best possible 301 (588.65 seconds)
Cbc0010I After 9400 nodes, 16 on tree, 383 best solution, best possible 301 (593.27 seconds)
Cbc0010I After 9500 nodes, 18 on tree, 383 best solution, best possible 301 (597.55 seconds)
Cbc0010I After 9600 nodes, 8 on tree, 383 best solution, best possible 301 (601.19 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 771 rows 227 columns
Cbc0010I After 9700 nodes, 15 on tree, 383 best solution, best possible 301 (604.65 seconds)
Cbc0010I After 9800 nodes, 13 on tree, 383 best solution, best possible 301 (607.92 seconds)
Cbc0010I After 9900 nodes, 4 on tree, 383 best solution, best possible 301 (612.00 seconds)
Cbc0010I After 10000 nodes, 15 on tree, 383 best solution, best possible 301 (617.43 seconds)
Cbc0010I After 10100 nodes, 23 on tree, 383 best solution, best possible 301 (622.61 seconds)
Cbc0010I After 10200 nodes, 35 on tree, 383 best solution, best possible 301 (624.66 seconds)
Cbc0010I After 10300 nodes, 20 on tree, 383 best solution, best possible 301 (628.05 seconds)
Cbc0010I After 10400 nodes, 16 on tree, 383 best solution, best possible 301 (634.29 seconds)
Cbc0010I After 10500 nodes, 27 on tree, 383 best solution, best possible 301 (636.53 seconds)
Cbc0010I After 10600 nodes, 27 on tree, 383 best solution, best possible 301 (639.65 seconds)
Cbc0010I After 10700 nodes, 23 on tree, 383 best solution, best possible 301 (643.38 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 626 rows 183 columns
Cbc0010I After 10800 nodes, 25 on tree, 383 best solution, best possible 301 (646.61 seconds)
Cbc0010I After 10900 nodes, 15 on tree, 383 best solution, best possible 301 (651.81 seconds)
Cbc0010I After 11000 nodes, 22 on tree, 383 best solution, best possible 301 (657.30 seconds)
Cbc0010I After 11100 nodes, 27 on tree, 383 best solution, best possible 325 (662.31 seconds)
Cbc0010I After 11200 nodes, 21 on tree, 383 best solution, best possible 325 (666.71 seconds)
Cbc0010I After 11300 nodes, 23 on tree, 383 best solution, best possible 325 (670.04 seconds)
Cbc0010I After 11400 nodes, 23 on tree, 383 best solution, best possible 325 (672.14 seconds)
Cbc0010I After 11500 nodes, 19 on tree, 383 best solution, best possible 325 (678.74 seconds)
Cbc0010I After 11600 nodes, 23 on tree, 383 best solution, best possible 325 (682.10 seconds)
Cbc0010I After 11700 nodes, 24 on tree, 383 best solution, best possible 325 (687.05 seconds)
Cbc0010I After 11800 nodes, 24 on tree, 383 best solution, best possible 325 (692.23 seconds)
Cbc0010I After 11900 nodes, 23 on tree, 383 best solution, best possible 325 (698.27 seconds)
Cbc0010I After 12000 nodes, 29 on tree, 383 best solution, best possible 325 (702.71 seconds)
Cbc0010I After 12100 nodes, 25 on tree, 383 best solution, best possible 325 (711.30 seconds)
Cbc0010I After 12200 nodes, 18 on tree, 383 best solution, best possible 325 (713.71 seconds)
Cbc0010I After 12300 nodes, 6 on tree, 383 best solution, best possible 325 (719.88 seconds)
Cbc0010I After 12400 nodes, 24 on tree, 383 best solution, best possible 326 (723.34 seconds)
Cbc0010I After 12500 nodes, 37 on tree, 383 best solution, best possible 326 (727.63 seconds)
Cbc0010I After 12600 nodes, 35 on tree, 383 best solution, best possible 326 (729.86 seconds)
Cbc0010I After 12700 nodes, 42 on tree, 383 best solution, best possible 326 (733.57 seconds)
Cbc0010I After 12800 nodes, 51 on tree, 383 best solution, best possible 326 (737.66 seconds)
Cbc0010I After 12900 nodes, 54 on tree, 383 best solution, best possible 326 (742.95 seconds)
Cbc0010I After 13000 nodes, 55 on tree, 383 best solution, best possible 326 (745.64 seconds)
Cbc0010I After 13100 nodes, 49 on tree, 383 best solution, best possible 326 (749.88 seconds)
Cbc0010I After 13200 nodes, 43 on tree, 383 best solution, best possible 326 (753.62 seconds)
Cbc0010I After 13300 nodes, 35 on tree, 383 best solution, best possible 326 (759.18 seconds)
Cbc0010I After 13400 nodes, 34 on tree, 383 best solution, best possible 326 (762.11 seconds)
Cbc0010I After 13500 nodes, 29 on tree, 383 best solution, best possible 326 (766.16 seconds)
Cbc0010I After 13600 nodes, 30 on tree, 383 best solution, best possible 326 (768.49 seconds)
Cbc0010I After 13700 nodes, 22 on tree, 383 best solution, best possible 326 (772.77 seconds)
Cbc0010I After 13800 nodes, 16 on tree, 383 best solution, best possible 326 (777.96 seconds)
Cbc0010I After 13900 nodes, 16 on tree, 383 best solution, best possible 326 (780.89 seconds)
Cbc0010I After 14000 nodes, 17 on tree, 383 best solution, best possible 326 (784.03 seconds)
Cbc0010I After 14100 nodes, 16 on tree, 383 best solution, best possible 326 (788.59 seconds)
Cbc0010I After 14200 nodes, 14 on tree, 383 best solution, best possible 326 (791.47 seconds)
Cbc0010I After 14300 nodes, 8 on tree, 383 best solution, best possible 326 (795.45 seconds)
Cbc0038I Full problem 2623 rows 916 columns, reduced to 813 rows 245 columns
Cbc0010I After 14400 nodes, 4 on tree, 383 best solution, best possible 327 (800.84 seconds)
Cbc0010I After 14500 nodes, 31 on tree, 383 best solution, best possible 327 (804.98 seconds)
Cbc0010I After 14600 nodes, 36 on tree, 383 best solution, best possible 327 (809.53 seconds)
Cbc0010I After 14700 nodes, 50 on tree, 383 best solution, best possible 327 (813.67 seconds)
Cbc0010I After 14800 nodes, 79 on tree, 383 best solution, best possible 327 (816.67 seconds)
Cbc0010I After 14900 nodes, 93 on tree, 383 best solution, best possible 327 (820.43 seconds)
Cbc0010I After 15000 nodes, 99 on tree, 383 best solution, best possible 327 (824.34 seconds)
Cbc0010I After 15100 nodes, 103 on tree, 383 best solution, best possible 327 (828.60 seconds)
Cbc0010I After 15200 nodes, 107 on tree, 383 best solution, best possible 327 (831.59 seconds)
Cbc0010I After 15300 nodes, 103 on tree, 383 best solution, best possible 327 (834.80 seconds)
Cbc0010I After 15400 nodes, 103 on tree, 383 best solution, best possible 327 (839.59 seconds)
Cbc0010I After 15500 nodes, 102 on tree, 383 best solution, best possible 327 (842.49 seconds)
Cbc0010I After 15600 nodes, 107 on tree, 383 best solution, best possible 327 (848.36 seconds)
Cbc0010I After 15700 nodes, 89 on tree, 383 best solution, best possible 327 (857.79 seconds)
Cbc0010I After 15800 nodes, 72 on tree, 383 best solution, best possible 327 (866.08 seconds)
Cbc0010I After 15900 nodes, 73 on tree, 383 best solution, best possible 327 (875.29 seconds)
Cbc0010I After 16000 nodes, 75 on tree, 383 best solution, best possible 327 (879.71 seconds)
Cbc0010I After 16100 nodes, 64 on tree, 383 best solution, best possible 327 (885.86 seconds)
Cbc0010I After 16200 nodes, 48 on tree, 383 best solution, best possible 327 (891.98 seconds)
Cbc0010I After 16300 nodes, 33 on tree, 383 best solution, best possible 327 (900.74 seconds)
Cbc0010I After 16400 nodes, 25 on tree, 383 best solution, best possible 327 (908.87 seconds)
Cbc0010I After 16500 nodes, 21 on tree, 383 best solution, best possible 327 (915.08 seconds)
Cbc0010I After 16600 nodes, 17 on tree, 383 best solution, best possible 328 (923.08 seconds)
Cbc0004I Integer solution of 328 found after 5505563 iterations and 16611 nodes (923.30 seconds)
Cbc0001I Search completed - best objective 328, took 5505563 iterations and 16611 nodes (923.30 seconds)
Cbc0032I Strong branching done 24452 times (1334911 iterations), fathomed 805 nodes and fixed 2710 variables
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost
Cuts at root node changed objective from 291.729 to 301
Probing was tried 3148 times and created 256855 cuts of which 0 were active after adding rounds of cuts (7.892 seconds)
Gomory was tried 1773 times and created 1659 cuts of which 0 were active after adding rounds of cuts (3.438 seconds)
Knapsack was tried 1773 times and created 8800 cuts of which 0 were active after adding rounds of cuts (1.571 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 1773 times and created 24626 cuts of which 0 were active after adding rounds of cuts (1.699 seconds)
ZeroHalf was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.154 seconds)
ImplicationCuts was tried 40 times and created 122 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                328.00000000
Enumerated nodes:               16611
Total iterations:               5505563
Time (CPU seconds):             923.38
Time (Wallclock seconds):       924.48

Total time (CPU seconds):       923.39   (Wallclock seconds):       924.50

