Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_2_default_input.lp sec 1800 solve solu solutions/new_tr/triang8_2_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 335.362 - 0.46 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 642 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 99 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 2621 rows, 916 columns (916 integer (880 of which binary)) and 8601 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 474 integers unsatisfied sum - 103.046
Cbc0038I Pass   1: suminf.   41.79300 (306) obj. 412.33 iterations 890
Cbc0038I Pass   2: suminf.   32.91280 (279) obj. 438.165 iterations 191
Cbc0038I Pass   3: suminf.   32.47857 (269) obj. 462.875 iterations 110
Cbc0038I Pass   4: suminf.   30.42270 (239) obj. 442.791 iterations 150
Cbc0038I Pass   5: suminf.   30.67409 (234) obj. 444.356 iterations 33
Cbc0038I Pass   6: suminf.   28.66465 (208) obj. 397.977 iterations 257
Cbc0038I Pass   7: suminf.   25.60231 (202) obj. 438.037 iterations 162
Cbc0038I Pass   8: suminf.   21.77684 (175) obj. 484.658 iterations 262
Cbc0038I Pass   9: suminf.   17.90506 (138) obj. 483.539 iterations 146
Cbc0038I Pass  10: suminf.   14.38665 (123) obj. 508.863 iterations 137
Cbc0038I Pass  11: suminf.   14.61832 (127) obj. 509.501 iterations 67
Cbc0038I Pass  12: suminf.   10.93491 (103) obj. 468.969 iterations 160
Cbc0038I Pass  13: suminf.    9.83972 (104) obj. 471.811 iterations 64
Cbc0038I Pass  14: suminf.    8.03847 (92) obj. 462.417 iterations 33
Cbc0038I Pass  15: suminf.    7.20780 (96) obj. 462.417 iterations 55
Cbc0038I Pass  16: suminf.    4.53877 (71) obj. 462.417 iterations 102
Cbc0038I Pass  17: suminf.    4.22622 (68) obj. 462.417 iterations 60
Cbc0038I Pass  18: suminf.    3.43219 (52) obj. 458.855 iterations 79
Cbc0038I Pass  19: suminf.    3.41449 (50) obj. 458.855 iterations 69
Cbc0038I Pass  20: suminf.    2.89442 (25) obj. 432.077 iterations 203
Cbc0038I Pass  21: suminf.    0.00000 (0) obj. 435 iterations 41
Cbc0038I Solution found of 435
Cbc0038I Cleaned solution of 435
Cbc0038I Before mini branch and bound, 330 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.17 seconds)
Cbc0038I Round again with cutoff of 424.136
Cbc0038I Pass  22: suminf.   41.79300 (306) obj. 412.33 iterations 0
Cbc0038I Pass  23: suminf.   32.90999 (294) obj. 424.136 iterations 241
Cbc0038I Pass  24: suminf.   33.61756 (287) obj. 424.136 iterations 92
Cbc0038I Pass  25: suminf.   32.39626 (290) obj. 424.136 iterations 60
Cbc0038I Pass  26: suminf.   31.02414 (241) obj. 424.136 iterations 147
Cbc0038I Pass  27: suminf.   31.02414 (241) obj. 424.136 iterations 1
Cbc0038I Pass  28: suminf.   29.78151 (229) obj. 424.136 iterations 188
Cbc0038I Pass  29: suminf.   26.21106 (206) obj. 424.136 iterations 83
Cbc0038I Pass  30: suminf.   25.00265 (210) obj. 424.136 iterations 31
Cbc0038I Pass  31: suminf.   25.25840 (185) obj. 422.569 iterations 183
Cbc0038I Pass  32: suminf.   22.76340 (186) obj. 424.136 iterations 121
Cbc0038I Pass  33: suminf.   18.64743 (149) obj. 424.136 iterations 223
Cbc0038I Pass  34: suminf.   18.18227 (168) obj. 424.136 iterations 85
Cbc0038I Pass  35: suminf.   11.81519 (122) obj. 424.136 iterations 171
Cbc0038I Pass  36: suminf.   10.06266 (112) obj. 424.136 iterations 71
Cbc0038I Pass  37: suminf.    7.84645 (66) obj. 424.136 iterations 218
Cbc0038I Pass  38: suminf.    6.86201 (69) obj. 424.136 iterations 103
Cbc0038I Pass  39: suminf.    6.94068 (79) obj. 424.136 iterations 123
Cbc0038I Pass  40: suminf.    2.96785 (48) obj. 424.136 iterations 79
Cbc0038I Pass  41: suminf.    0.00000 (0) obj. 403 iterations 142
Cbc0038I Solution found of 403
Cbc0038I Cleaned solution of 403
Cbc0038I Before mini branch and bound, 330 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2621 rows 916 columns, reduced to 1916 rows 584 columns - 236 fixed gives 616, 128 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.59 seconds)
Cbc0038I Round again with cutoff of 388.672
Cbc0038I Pass  42: suminf.   42.74759 (297) obj. 388 iterations 34
Cbc0038I Pass  43: suminf.   35.41149 (296) obj. 388.672 iterations 265
Cbc0038I Pass  44: suminf.   34.05845 (282) obj. 388.672 iterations 90
Cbc0038I Pass  45: suminf.   29.90148 (224) obj. 388.672 iterations 204
Cbc0038I Pass  46: suminf.   28.91217 (224) obj. 388.672 iterations 109
Cbc0038I Pass  47: suminf.   21.94329 (164) obj. 388.672 iterations 325
Cbc0038I Pass  48: suminf.   20.38661 (161) obj. 388.672 iterations 35
Cbc0038I Pass  49: suminf.   14.17913 (151) obj. 388.672 iterations 348
Cbc0038I Pass  50: suminf.   13.55883 (133) obj. 388.672 iterations 52
Cbc0038I Pass  51: suminf.   10.40017 (101) obj. 388.672 iterations 169
Cbc0038I Pass  52: suminf.   10.22493 (104) obj. 388.672 iterations 28
Cbc0038I Pass  53: suminf.    8.66965 (92) obj. 388.672 iterations 140
Cbc0038I Pass  54: suminf.    6.89575 (78) obj. 388.672 iterations 91
Cbc0038I Pass  55: suminf.    9.69151 (78) obj. 388.672 iterations 250
Cbc0038I Pass  56: suminf.    8.57642 (70) obj. 388.672 iterations 79
Cbc0038I Pass  57: suminf.   10.70204 (86) obj. 388.672 iterations 156
Cbc0038I Pass  58: suminf.    6.51480 (84) obj. 388.672 iterations 143
Cbc0038I Pass  59: suminf.    6.33985 (86) obj. 388.672 iterations 48
Cbc0038I Pass  60: suminf.   12.96532 (110) obj. 388.672 iterations 347
Cbc0038I Pass  61: suminf.    8.10706 (74) obj. 388.672 iterations 112
Cbc0038I Pass  62: suminf.    8.57642 (70) obj. 388.672 iterations 80
Cbc0038I Pass  63: suminf.    7.74034 (81) obj. 388.672 iterations 172
Cbc0038I Pass  64: suminf.    6.33985 (86) obj. 388.672 iterations 102
Cbc0038I Pass  65: suminf.   18.28195 (140) obj. 388.672 iterations 323
Cbc0038I Pass  66: suminf.   15.29237 (113) obj. 388.672 iterations 120
Cbc0038I Pass  67: suminf.    8.40102 (73) obj. 388.672 iterations 249
Cbc0038I Pass  68: suminf.    8.57642 (70) obj. 388.672 iterations 10
Cbc0038I Pass  69: suminf.    7.78988 (80) obj. 388.672 iterations 279
Cbc0038I Pass  70: suminf.    6.33985 (86) obj. 388.672 iterations 117
Cbc0038I Pass  71: suminf.   17.16328 (136) obj. 388.672 iterations 247
Cbc0038I Pass  72: suminf.   11.23034 (80) obj. 388.672 iterations 224
Cbc0038I Pass  73: suminf.    8.57642 (70) obj. 388.672 iterations 61
Cbc0038I Pass  74: suminf.   11.79746 (97) obj. 388.672 iterations 236
Cbc0038I Pass  75: suminf.    4.29629 (29) obj. 388.672 iterations 133
Cbc0038I Pass  76: suminf.    8.98069 (57) obj. 388.672 iterations 159
Cbc0038I Pass  77: suminf.    8.15327 (53) obj. 388.672 iterations 55
Cbc0038I Pass  78: suminf.    5.74844 (52) obj. 388.672 iterations 74
Cbc0038I Pass  79: suminf.    6.59822 (61) obj. 388.672 iterations 103
Cbc0038I Pass  80: suminf.    6.39253 (57) obj. 388.672 iterations 6
Cbc0038I Pass  81: suminf.    6.52412 (50) obj. 388.672 iterations 55
Cbc0038I Pass  82: suminf.    3.72982 (43) obj. 388.672 iterations 46
Cbc0038I Pass  83: suminf.    5.79260 (44) obj. 388.672 iterations 237
Cbc0038I Pass  84: suminf.    4.58134 (41) obj. 388.672 iterations 54
Cbc0038I Pass  85: suminf.    3.50651 (33) obj. 388.672 iterations 64
Cbc0038I Pass  86: suminf.    3.08322 (27) obj. 388.672 iterations 23
Cbc0038I Pass  87: suminf.    7.35975 (62) obj. 388.672 iterations 305
Cbc0038I Pass  88: suminf.    7.31207 (65) obj. 388.672 iterations 35
Cbc0038I Pass  89: suminf.    8.83187 (74) obj. 388.672 iterations 214
Cbc0038I Pass  90: suminf.    5.24684 (58) obj. 388.672 iterations 96
Cbc0038I Pass  91: suminf.   13.31551 (87) obj. 388.672 iterations 263
Cbc0038I Pass  92: suminf.   12.79713 (90) obj. 388.672 iterations 48
Cbc0038I Pass  93: suminf.    6.12116 (46) obj. 388.672 iterations 146
Cbc0038I Pass  94: suminf.    3.06096 (31) obj. 388.672 iterations 28
Cbc0038I Pass  95: suminf.   10.77454 (74) obj. 388.672 iterations 180
Cbc0038I Pass  96: suminf.   10.85803 (72) obj. 388.672 iterations 62
Cbc0038I Pass  97: suminf.   12.63090 (74) obj. 388.672 iterations 82
Cbc0038I Pass  98: suminf.   10.30121 (66) obj. 388.672 iterations 84
Cbc0038I Pass  99: suminf.    9.55628 (63) obj. 388.672 iterations 47
Cbc0038I Pass 100: suminf.    6.41130 (32) obj. 388.672 iterations 175
Cbc0038I Pass 101: suminf.    5.25123 (41) obj. 388.672 iterations 104
Cbc0038I Pass 102: suminf.    9.66881 (67) obj. 388.672 iterations 260
Cbc0038I Pass 103: suminf.    9.15784 (65) obj. 388.672 iterations 39
Cbc0038I Pass 104: suminf.   10.06285 (70) obj. 388.672 iterations 227
Cbc0038I Pass 105: suminf.    8.07018 (77) obj. 388.672 iterations 133
Cbc0038I Pass 106: suminf.    7.58071 (56) obj. 388.672 iterations 118
Cbc0038I Pass 107: suminf.    5.77870 (52) obj. 388.672 iterations 114
Cbc0038I Pass 108: suminf.    6.58402 (77) obj. 388.672 iterations 227
Cbc0038I Pass 109: suminf.    6.52684 (79) obj. 388.672 iterations 12
Cbc0038I Pass 110: suminf.    6.98686 (57) obj. 388.672 iterations 154
Cbc0038I Pass 111: suminf.    6.63855 (47) obj. 388.672 iterations 66
Cbc0038I Pass 112: suminf.    6.60340 (75) obj. 388.672 iterations 273
Cbc0038I Pass 113: suminf.    4.01816 (56) obj. 388.672 iterations 120
Cbc0038I Pass 114: suminf.    4.02652 (55) obj. 388.672 iterations 53
Cbc0038I Pass 115: suminf.    7.72156 (49) obj. 388.672 iterations 133
Cbc0038I Pass 116: suminf.    8.42835 (50) obj. 388.672 iterations 70
Cbc0038I Pass 117: suminf.    5.17057 (38) obj. 388.672 iterations 164
Cbc0038I Pass 118: suminf.    3.02847 (29) obj. 388.672 iterations 44
Cbc0038I Pass 119: suminf.    8.74441 (61) obj. 388.672 iterations 174
Cbc0038I Pass 120: suminf.    8.74441 (61) obj. 388.672 iterations 9
Cbc0038I Pass 121: suminf.    5.00364 (35) obj. 388.672 iterations 212
Cbc0038I Pass 122: suminf.    4.53201 (37) obj. 388.672 iterations 86
Cbc0038I Pass 123: suminf.    8.98776 (47) obj. 388.672 iterations 106
Cbc0038I Pass 124: suminf.    6.66491 (45) obj. 388.672 iterations 59
Cbc0038I Pass 125: suminf.    6.63665 (45) obj. 388.672 iterations 9
Cbc0038I Pass 126: suminf.    3.98803 (35) obj. 388.672 iterations 83
Cbc0038I Pass 127: suminf.    3.98803 (35) obj. 388.672 iterations 11
Cbc0038I Pass 128: suminf.    9.69699 (61) obj. 388.672 iterations 168
Cbc0038I Pass 129: suminf.    5.53131 (50) obj. 388.672 iterations 69
Cbc0038I Pass 130: suminf.    6.15346 (42) obj. 388.672 iterations 103
Cbc0038I Pass 131: suminf.    6.58111 (41) obj. 388.672 iterations 23
Cbc0038I Pass 132: suminf.    5.67377 (37) obj. 388.672 iterations 72
Cbc0038I Pass 133: suminf.    5.06965 (40) obj. 388.672 iterations 41
Cbc0038I Pass 134: suminf.    5.30695 (39) obj. 388.672 iterations 36
Cbc0038I Pass 135: suminf.   11.10500 (61) obj. 388.672 iterations 256
Cbc0038I Pass 136: suminf.    7.99733 (45) obj. 388.672 iterations 60
Cbc0038I Pass 137: suminf.    7.43332 (61) obj. 388.672 iterations 103
Cbc0038I Pass 138: suminf.    6.42391 (63) obj. 388.672 iterations 122
Cbc0038I Pass 139: suminf.    6.42391 (63) obj. 388.672 iterations 2
Cbc0038I Pass 140: suminf.    8.06035 (49) obj. 388.672 iterations 175
Cbc0038I Pass 141: suminf.   43.99071 (220) obj. 388.672 iterations 552
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 228 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2621 rows 916 columns, reduced to 2144 rows 686 columns - 245 fixed gives 822, 209 - still too large
Cbc0038I Full problem 2621 rows 916 columns, reduced to 151 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (3.06 seconds)
Cbc0038I After 3.06 seconds - Feasibility pump exiting with objective of 403 - took 2.29 seconds
Cbc0012I Integer solution of 403 found by feasibility pump after 0 iterations and 0 nodes (3.06 seconds)
Cbc0031I 42 added rows had average density of 10.690476
Cbc0013I At root node, 42 cuts changed objective from 335.36191 to 350.99996 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 276 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 154 row cuts average 283.8 elements, 0 column cuts (0 active)  in 0.215 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 205 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 403 best solution, best possible 351 (8.21 seconds)
Cbc0010I After 100 nodes, 10 on tree, 403 best solution, best possible 353 (41.71 seconds)
Cbc0010I After 200 nodes, 4 on tree, 403 best solution, best possible 353 (63.71 seconds)
Cbc0010I After 300 nodes, 5 on tree, 403 best solution, best possible 353 (84.20 seconds)
Cbc0010I After 400 nodes, 7 on tree, 403 best solution, best possible 353 (108.35 seconds)
Cbc0010I After 500 nodes, 23 on tree, 403 best solution, best possible 353 (131.31 seconds)
Cbc0010I After 600 nodes, 28 on tree, 403 best solution, best possible 353 (144.57 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 792 rows 230 columns
Cbc0010I After 700 nodes, 36 on tree, 403 best solution, best possible 353 (159.42 seconds)
Cbc0010I After 800 nodes, 21 on tree, 403 best solution, best possible 353 (176.99 seconds)
Cbc0010I After 900 nodes, 4 on tree, 403 best solution, best possible 353 (199.39 seconds)
Cbc0010I After 1000 nodes, 17 on tree, 403 best solution, best possible 353 (223.27 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 704 rows 196 columns
Cbc0038I Full problem 2621 rows 916 columns, reduced to 986 rows 292 columns
Cbc0010I After 1100 nodes, 19 on tree, 403 best solution, best possible 353 (238.68 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 1556 rows 439 columns - 194 fixed gives 113, 29 - ok now
Cbc0010I After 1200 nodes, 7 on tree, 403 best solution, best possible 353 (253.37 seconds)
Cbc0010I After 1300 nodes, 20 on tree, 403 best solution, best possible 353 (264.20 seconds)
Cbc0010I After 1400 nodes, 28 on tree, 403 best solution, best possible 353 (275.61 seconds)
Cbc0010I After 1500 nodes, 14 on tree, 403 best solution, best possible 353 (284.73 seconds)
Cbc0010I After 1600 nodes, 16 on tree, 403 best solution, best possible 353 (293.68 seconds)
Cbc0010I After 1700 nodes, 14 on tree, 403 best solution, best possible 353 (302.24 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 520 rows 156 columns
Cbc0010I After 1800 nodes, 27 on tree, 403 best solution, best possible 353 (314.94 seconds)
Cbc0010I After 1900 nodes, 21 on tree, 403 best solution, best possible 353 (321.79 seconds)
Cbc0010I After 2000 nodes, 19 on tree, 403 best solution, best possible 353 (332.70 seconds)
Cbc0010I After 2100 nodes, 26 on tree, 403 best solution, best possible 353 (341.61 seconds)
Cbc0010I After 2200 nodes, 18 on tree, 403 best solution, best possible 353 (350.32 seconds)
Cbc0010I After 2300 nodes, 15 on tree, 403 best solution, best possible 353 (356.94 seconds)
Cbc0010I After 2400 nodes, 19 on tree, 403 best solution, best possible 353 (363.57 seconds)
Cbc0010I After 2500 nodes, 9 on tree, 403 best solution, best possible 353 (380.19 seconds)
Cbc0010I After 2600 nodes, 16 on tree, 403 best solution, best possible 353 (386.39 seconds)
Cbc0010I After 2700 nodes, 17 on tree, 403 best solution, best possible 353 (390.96 seconds)
Cbc0010I After 2800 nodes, 13 on tree, 403 best solution, best possible 353 (394.48 seconds)
Cbc0010I After 2900 nodes, 17 on tree, 403 best solution, best possible 353 (401.22 seconds)
Cbc0010I After 3000 nodes, 28 on tree, 403 best solution, best possible 353 (406.29 seconds)
Cbc0010I After 3100 nodes, 20 on tree, 403 best solution, best possible 353 (408.34 seconds)
Cbc0010I After 3200 nodes, 25 on tree, 403 best solution, best possible 353 (412.98 seconds)
Cbc0010I After 3300 nodes, 23 on tree, 403 best solution, best possible 353 (415.12 seconds)
Cbc0010I After 3400 nodes, 21 on tree, 403 best solution, best possible 353 (419.23 seconds)
Cbc0010I After 3500 nodes, 14 on tree, 403 best solution, best possible 353 (423.59 seconds)
Cbc0010I After 3600 nodes, 18 on tree, 403 best solution, best possible 353 (428.76 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 674 rows 195 columns
Cbc0010I After 3700 nodes, 19 on tree, 403 best solution, best possible 353 (436.27 seconds)
Cbc0010I After 3800 nodes, 18 on tree, 403 best solution, best possible 353 (440.45 seconds)
Cbc0010I After 3900 nodes, 20 on tree, 403 best solution, best possible 353 (443.74 seconds)
Cbc0010I After 4000 nodes, 23 on tree, 403 best solution, best possible 353 (446.08 seconds)
Cbc0010I After 4100 nodes, 19 on tree, 403 best solution, best possible 353 (448.07 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 876 rows 255 columns
Cbc0010I After 4200 nodes, 21 on tree, 403 best solution, best possible 353 (451.00 seconds)
Cbc0010I After 4300 nodes, 22 on tree, 403 best solution, best possible 353 (453.62 seconds)
Cbc0010I After 4400 nodes, 17 on tree, 403 best solution, best possible 353 (455.91 seconds)
Cbc0010I After 4500 nodes, 7 on tree, 403 best solution, best possible 353 (463.13 seconds)
Cbc0010I After 4600 nodes, 10 on tree, 403 best solution, best possible 353 (470.79 seconds)
Cbc0010I After 4700 nodes, 17 on tree, 403 best solution, best possible 353 (474.76 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 1392 rows 408 columns - 159 fixed gives 476, 99 - ok now
Cbc0010I After 4800 nodes, 13 on tree, 403 best solution, best possible 353 (477.06 seconds)
Cbc0010I After 4900 nodes, 22 on tree, 403 best solution, best possible 353 (478.09 seconds)
Cbc0010I After 5000 nodes, 16 on tree, 403 best solution, best possible 353 (479.64 seconds)
Cbc0010I After 5100 nodes, 14 on tree, 403 best solution, best possible 353 (481.30 seconds)
Cbc0010I After 5200 nodes, 15 on tree, 403 best solution, best possible 353 (486.19 seconds)
Cbc0010I After 5300 nodes, 11 on tree, 403 best solution, best possible 353 (495.77 seconds)
Cbc0010I After 5400 nodes, 10 on tree, 403 best solution, best possible 353 (501.35 seconds)
Cbc0010I After 5500 nodes, 24 on tree, 403 best solution, best possible 353 (506.54 seconds)
Cbc0010I After 5600 nodes, 21 on tree, 403 best solution, best possible 353 (508.30 seconds)
Cbc0010I After 5700 nodes, 20 on tree, 403 best solution, best possible 353 (510.42 seconds)
Cbc0010I After 5800 nodes, 23 on tree, 403 best solution, best possible 353 (512.59 seconds)
Cbc0010I After 5900 nodes, 21 on tree, 403 best solution, best possible 353 (515.05 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 632 rows 182 columns
Cbc0010I After 6000 nodes, 21 on tree, 403 best solution, best possible 353 (517.60 seconds)
Cbc0010I After 6100 nodes, 20 on tree, 403 best solution, best possible 353 (519.18 seconds)
Cbc0010I After 6200 nodes, 17 on tree, 403 best solution, best possible 353 (520.93 seconds)
Cbc0010I After 6300 nodes, 14 on tree, 403 best solution, best possible 353 (522.90 seconds)
Cbc0010I After 6400 nodes, 10 on tree, 403 best solution, best possible 353 (527.57 seconds)
Cbc0010I After 6500 nodes, 11 on tree, 403 best solution, best possible 353 (535.50 seconds)
Cbc0010I After 6600 nodes, 16 on tree, 403 best solution, best possible 353 (538.56 seconds)
Cbc0010I After 6700 nodes, 10 on tree, 403 best solution, best possible 353 (540.62 seconds)
Cbc0010I After 6800 nodes, 16 on tree, 403 best solution, best possible 353 (547.28 seconds)
Cbc0010I After 6900 nodes, 24 on tree, 403 best solution, best possible 353 (550.93 seconds)
Cbc0010I After 7000 nodes, 24 on tree, 403 best solution, best possible 353 (552.46 seconds)
Cbc0010I After 7100 nodes, 25 on tree, 403 best solution, best possible 353 (554.11 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 568 rows 166 columns
Cbc0010I After 7200 nodes, 25 on tree, 403 best solution, best possible 353 (555.85 seconds)
Cbc0010I After 7300 nodes, 19 on tree, 403 best solution, best possible 353 (557.52 seconds)
Cbc0010I After 7400 nodes, 25 on tree, 403 best solution, best possible 353 (559.95 seconds)
Cbc0010I After 7500 nodes, 26 on tree, 403 best solution, best possible 353 (562.01 seconds)
Cbc0010I After 7600 nodes, 21 on tree, 403 best solution, best possible 353 (563.63 seconds)
Cbc0010I After 7700 nodes, 20 on tree, 403 best solution, best possible 353 (566.77 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 1439 rows 425 columns - 170 fixed gives 399, 96 - ok now
Cbc0010I After 7800 nodes, 25 on tree, 403 best solution, best possible 353 (570.60 seconds)
Cbc0010I After 7900 nodes, 14 on tree, 403 best solution, best possible 353 (577.36 seconds)
Cbc0010I After 8000 nodes, 20 on tree, 403 best solution, best possible 353 (583.26 seconds)
Cbc0010I After 8100 nodes, 19 on tree, 403 best solution, best possible 353 (589.51 seconds)
Cbc0010I After 8200 nodes, 12 on tree, 403 best solution, best possible 353 (594.63 seconds)
Cbc0010I After 8300 nodes, 25 on tree, 403 best solution, best possible 353 (597.73 seconds)
Cbc0010I After 8400 nodes, 17 on tree, 403 best solution, best possible 353 (599.18 seconds)
Cbc0010I After 8500 nodes, 14 on tree, 403 best solution, best possible 353 (603.15 seconds)
Cbc0010I After 8600 nodes, 17 on tree, 403 best solution, best possible 353 (610.57 seconds)
Cbc0010I After 8700 nodes, 31 on tree, 403 best solution, best possible 353 (615.89 seconds)
Cbc0010I After 8800 nodes, 29 on tree, 403 best solution, best possible 353 (617.89 seconds)
Cbc0010I After 8900 nodes, 28 on tree, 403 best solution, best possible 353 (619.72 seconds)
Cbc0010I After 9000 nodes, 19 on tree, 403 best solution, best possible 353 (622.37 seconds)
Cbc0010I After 9100 nodes, 18 on tree, 403 best solution, best possible 353 (629.73 seconds)
Cbc0010I After 9200 nodes, 27 on tree, 403 best solution, best possible 353 (631.97 seconds)
Cbc0010I After 9300 nodes, 21 on tree, 403 best solution, best possible 353 (634.48 seconds)
Cbc0010I After 9400 nodes, 20 on tree, 403 best solution, best possible 353 (637.59 seconds)
Cbc0010I After 9500 nodes, 22 on tree, 403 best solution, best possible 353 (643.33 seconds)
Cbc0010I After 9600 nodes, 19 on tree, 403 best solution, best possible 353 (647.35 seconds)
Cbc0010I After 9700 nodes, 18 on tree, 403 best solution, best possible 353 (650.72 seconds)
Cbc0010I After 9800 nodes, 19 on tree, 403 best solution, best possible 353 (654.42 seconds)
Cbc0010I After 9900 nodes, 14 on tree, 403 best solution, best possible 353 (659.34 seconds)
Cbc0010I After 10000 nodes, 8 on tree, 403 best solution, best possible 353 (664.58 seconds)
Cbc0010I After 10100 nodes, 22 on tree, 403 best solution, best possible 353 (669.18 seconds)
Cbc0010I After 10200 nodes, 15 on tree, 403 best solution, best possible 353 (671.66 seconds)
Cbc0010I After 10300 nodes, 8 on tree, 403 best solution, best possible 353 (678.43 seconds)
Cbc0010I After 10400 nodes, 16 on tree, 403 best solution, best possible 353 (680.44 seconds)
Cbc0010I After 10500 nodes, 22 on tree, 403 best solution, best possible 353 (683.35 seconds)
Cbc0010I After 10600 nodes, 22 on tree, 403 best solution, best possible 353 (685.00 seconds)
Cbc0010I After 10700 nodes, 16 on tree, 403 best solution, best possible 353 (687.30 seconds)
Cbc0010I After 10800 nodes, 17 on tree, 403 best solution, best possible 353 (689.45 seconds)
Cbc0010I After 10900 nodes, 14 on tree, 403 best solution, best possible 353 (691.13 seconds)
Cbc0010I After 11000 nodes, 8 on tree, 403 best solution, best possible 353 (694.62 seconds)
Cbc0010I After 11100 nodes, 9 on tree, 403 best solution, best possible 364 (709.51 seconds)
Cbc0010I After 11200 nodes, 9 on tree, 403 best solution, best possible 376 (716.58 seconds)
Cbc0010I After 11300 nodes, 10 on tree, 403 best solution, best possible 377 (723.74 seconds)
Cbc0010I After 11400 nodes, 16 on tree, 403 best solution, best possible 377 (726.59 seconds)
Cbc0010I After 11500 nodes, 13 on tree, 403 best solution, best possible 377 (728.76 seconds)
Cbc0010I After 11600 nodes, 15 on tree, 403 best solution, best possible 377 (735.87 seconds)
Cbc0010I After 11700 nodes, 11 on tree, 403 best solution, best possible 377 (740.21 seconds)
Cbc0010I After 11800 nodes, 16 on tree, 403 best solution, best possible 377 (742.32 seconds)
Cbc0010I After 11900 nodes, 13 on tree, 403 best solution, best possible 377 (744.03 seconds)
Cbc0010I After 12000 nodes, 16 on tree, 403 best solution, best possible 377 (749.51 seconds)
Cbc0010I After 12100 nodes, 18 on tree, 403 best solution, best possible 377 (754.01 seconds)
Cbc0010I After 12200 nodes, 13 on tree, 403 best solution, best possible 377 (756.52 seconds)
Cbc0010I After 12300 nodes, 7 on tree, 403 best solution, best possible 377 (763.11 seconds)
Cbc0010I After 12400 nodes, 7 on tree, 403 best solution, best possible 378 (769.32 seconds)
Cbc0010I After 12500 nodes, 16 on tree, 403 best solution, best possible 378 (773.00 seconds)
Cbc0010I After 12600 nodes, 11 on tree, 403 best solution, best possible 378 (776.00 seconds)
Cbc0010I After 12700 nodes, 11 on tree, 403 best solution, best possible 378 (779.73 seconds)
Cbc0010I After 12800 nodes, 14 on tree, 403 best solution, best possible 378 (782.53 seconds)
Cbc0010I After 12900 nodes, 9 on tree, 403 best solution, best possible 378 (785.04 seconds)
Cbc0010I After 13000 nodes, 6 on tree, 403 best solution, best possible 378 (787.79 seconds)
Cbc0010I After 13100 nodes, 11 on tree, 403 best solution, best possible 378 (790.57 seconds)
Cbc0010I After 13200 nodes, 10 on tree, 403 best solution, best possible 378 (793.26 seconds)
Cbc0010I After 13300 nodes, 10 on tree, 403 best solution, best possible 378 (796.35 seconds)
Cbc0010I After 13400 nodes, 10 on tree, 403 best solution, best possible 378 (798.94 seconds)
Cbc0010I After 13500 nodes, 3 on tree, 403 best solution, best possible 379 (806.63 seconds)
Cbc0010I After 13600 nodes, 24 on tree, 403 best solution, best possible 379 (811.13 seconds)
Cbc0010I After 13700 nodes, 18 on tree, 403 best solution, best possible 379 (813.43 seconds)
Cbc0010I After 13800 nodes, 7 on tree, 403 best solution, best possible 379 (820.37 seconds)
Cbc0010I After 13900 nodes, 22 on tree, 403 best solution, best possible 379 (826.02 seconds)
Cbc0010I After 14000 nodes, 18 on tree, 403 best solution, best possible 379 (829.72 seconds)
Cbc0010I After 14100 nodes, 15 on tree, 403 best solution, best possible 379 (832.27 seconds)
Cbc0010I After 14200 nodes, 9 on tree, 403 best solution, best possible 379 (838.40 seconds)
Cbc0010I After 14300 nodes, 12 on tree, 403 best solution, best possible 379 (843.60 seconds)
Cbc0010I After 14400 nodes, 18 on tree, 403 best solution, best possible 379 (845.51 seconds)
Cbc0010I After 14500 nodes, 12 on tree, 403 best solution, best possible 379 (848.21 seconds)
Cbc0010I After 14600 nodes, 9 on tree, 403 best solution, best possible 379 (856.52 seconds)
Cbc0010I After 14700 nodes, 9 on tree, 403 best solution, best possible 380 (864.47 seconds)
Cbc0010I After 14800 nodes, 16 on tree, 403 best solution, best possible 380 (869.75 seconds)
Cbc0010I After 14900 nodes, 25 on tree, 403 best solution, best possible 380 (876.18 seconds)
Cbc0010I After 15000 nodes, 19 on tree, 403 best solution, best possible 380 (882.02 seconds)
Cbc0010I After 15100 nodes, 23 on tree, 403 best solution, best possible 380 (886.95 seconds)
Cbc0010I After 15200 nodes, 21 on tree, 403 best solution, best possible 380 (890.79 seconds)
Cbc0010I After 15300 nodes, 30 on tree, 403 best solution, best possible 380 (897.40 seconds)
Cbc0010I After 15400 nodes, 27 on tree, 403 best solution, best possible 380 (898.74 seconds)
Cbc0010I After 15500 nodes, 21 on tree, 403 best solution, best possible 380 (902.61 seconds)
Cbc0010I After 15600 nodes, 18 on tree, 403 best solution, best possible 380 (904.19 seconds)
Cbc0010I After 15700 nodes, 23 on tree, 403 best solution, best possible 380 (906.76 seconds)
Cbc0010I After 15800 nodes, 20 on tree, 403 best solution, best possible 380 (908.40 seconds)
Cbc0010I After 15900 nodes, 8 on tree, 403 best solution, best possible 380 (913.64 seconds)
Cbc0010I After 16000 nodes, 17 on tree, 403 best solution, best possible 380 (924.65 seconds)
Cbc0010I After 16100 nodes, 13 on tree, 403 best solution, best possible 380 (931.27 seconds)
Cbc0010I After 16200 nodes, 11 on tree, 403 best solution, best possible 380 (935.83 seconds)
Cbc0010I After 16300 nodes, 10 on tree, 403 best solution, best possible 381 (944.60 seconds)
Cbc0010I After 16400 nodes, 12 on tree, 403 best solution, best possible 381 (947.88 seconds)
Cbc0010I After 16500 nodes, 16 on tree, 403 best solution, best possible 381 (953.12 seconds)
Cbc0010I After 16600 nodes, 13 on tree, 403 best solution, best possible 381 (954.27 seconds)
Cbc0010I After 16700 nodes, 18 on tree, 403 best solution, best possible 381 (955.02 seconds)
Cbc0010I After 16800 nodes, 13 on tree, 403 best solution, best possible 381 (956.88 seconds)
Cbc0010I After 16900 nodes, 13 on tree, 403 best solution, best possible 381 (959.90 seconds)
Cbc0010I After 17000 nodes, 8 on tree, 403 best solution, best possible 381 (964.27 seconds)
Cbc0010I After 17100 nodes, 21 on tree, 403 best solution, best possible 381 (972.03 seconds)
Cbc0010I After 17200 nodes, 20 on tree, 403 best solution, best possible 381 (976.44 seconds)
Cbc0010I After 17300 nodes, 13 on tree, 403 best solution, best possible 381 (981.67 seconds)
Cbc0010I After 17400 nodes, 12 on tree, 403 best solution, best possible 381 (988.86 seconds)
Cbc0010I After 17500 nodes, 6 on tree, 403 best solution, best possible 381 (995.29 seconds)
Cbc0010I After 17600 nodes, 6 on tree, 403 best solution, best possible 382 (1002.25 seconds)
Cbc0010I After 17700 nodes, 21 on tree, 403 best solution, best possible 382 (1006.15 seconds)
Cbc0010I After 17800 nodes, 26 on tree, 403 best solution, best possible 382 (1007.43 seconds)
Cbc0010I After 17900 nodes, 29 on tree, 403 best solution, best possible 382 (1008.40 seconds)
Cbc0010I After 18000 nodes, 22 on tree, 403 best solution, best possible 382 (1009.84 seconds)
Cbc0038I Full problem 2621 rows 916 columns, reduced to 833 rows 245 columns
Cbc0010I After 18100 nodes, 24 on tree, 403 best solution, best possible 382 (1011.63 seconds)
Cbc0010I After 18200 nodes, 19 on tree, 403 best solution, best possible 382 (1013.73 seconds)
Cbc0010I After 18300 nodes, 18 on tree, 403 best solution, best possible 382 (1017.12 seconds)
Cbc0010I After 18400 nodes, 21 on tree, 403 best solution, best possible 382 (1019.94 seconds)
Cbc0010I After 18500 nodes, 22 on tree, 403 best solution, best possible 382 (1021.57 seconds)
Cbc0010I After 18600 nodes, 22 on tree, 403 best solution, best possible 382 (1022.55 seconds)
Cbc0010I After 18700 nodes, 18 on tree, 403 best solution, best possible 382 (1023.89 seconds)
Cbc0010I After 18800 nodes, 16 on tree, 403 best solution, best possible 382 (1026.86 seconds)
Cbc0010I After 18900 nodes, 10 on tree, 403 best solution, best possible 382 (1030.48 seconds)
Cbc0010I After 19000 nodes, 11 on tree, 403 best solution, best possible 382 (1036.03 seconds)
Cbc0010I After 19100 nodes, 17 on tree, 403 best solution, best possible 382 (1041.25 seconds)
Cbc0010I After 19200 nodes, 10 on tree, 403 best solution, best possible 382 (1046.76 seconds)
Cbc0004I Integer solution of 382 found after 5403580 iterations and 19256 nodes (1050.47 seconds)
Cbc0001I Search completed - best objective 382, took 5403580 iterations and 19256 nodes (1050.47 seconds)
Cbc0032I Strong branching done 26070 times (1670820 iterations), fathomed 666 nodes and fixed 2782 variables
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost
Cuts at root node changed objective from 335.362 to 351
Probing was tried 4040 times and created 716120 cuts of which 0 were active after adding rounds of cuts (11.249 seconds)
Gomory was tried 1565 times and created 4581 cuts of which 0 were active after adding rounds of cuts (3.957 seconds)
Knapsack was tried 1565 times and created 8691 cuts of which 0 were active after adding rounds of cuts (1.305 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 1565 times and created 38034 cuts of which 0 were active after adding rounds of cuts (1.937 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.018 seconds)
ImplicationCuts was tried 62 times and created 1256 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)

Result - Optimal solution found

Objective value:                382.00000000
Enumerated nodes:               19256
Total iterations:               5403580
Time (CPU seconds):             1050.54
Time (Wallclock seconds):       1053.12

Total time (CPU seconds):       1050.55   (Wallclock seconds):       1053.14

