Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag365_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/dag365_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.01067e+06 - 3.88 seconds
Cgl0002I 1614 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 955 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 104 strengthened rows, 0 substitutions
Cgl0004I processed model has 5076 rows, 1646 columns (1646 integer (1595 of which binary)) and 16759 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1646 objects (1646 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 808 integers unsatisfied sum - 204.277
Cbc0038I Pass   1: (5.42 seconds) suminf.   92.25220 (657) obj. 1.73685e+06 iterations 2485
Cbc0038I Pass   2: (5.58 seconds) suminf.   72.71210 (601) obj. 1.89261e+06 iterations 687
Cbc0038I Pass   3: (5.66 seconds) suminf.   69.03015 (612) obj. 1.89303e+06 iterations 228
Cbc0038I Pass   4: (5.71 seconds) suminf.   68.77578 (596) obj. 1.89355e+06 iterations 172
Cbc0038I Pass   5: (5.75 seconds) suminf.   67.90136 (578) obj. 1.8935e+06 iterations 112
Cbc0038I Pass   6: (5.84 seconds) suminf.   68.99937 (584) obj. 1.88891e+06 iterations 346
Cbc0038I Pass   7: (5.92 seconds) suminf.   68.57774 (616) obj. 1.88727e+06 iterations 269
Cbc0038I Pass   8: (5.93 seconds) suminf.   68.78994 (621) obj. 1.88838e+06 iterations 15
Cbc0038I Pass   9: (5.94 seconds) suminf.   69.35854 (621) obj. 1.88957e+06 iterations 26
Cbc0038I Pass  10: (6.01 seconds) suminf.   68.69992 (622) obj. 1.88929e+06 iterations 215
Cbc0038I Pass  11: (6.03 seconds) suminf.   66.75763 (620) obj. 1.88964e+06 iterations 51
Cbc0038I Pass  12: (6.05 seconds) suminf.   67.07344 (617) obj. 1.89014e+06 iterations 63
Cbc0038I Pass  13: (6.15 seconds) suminf.   61.51249 (593) obj. 1.91809e+06 iterations 349
Cbc0038I Pass  14: (6.19 seconds) suminf.   62.51486 (605) obj. 1.91844e+06 iterations 120
Cbc0038I Pass  15: (6.22 seconds) suminf.   61.26613 (607) obj. 1.92475e+06 iterations 105
Cbc0038I Pass  16: (6.32 seconds) suminf.   63.14913 (577) obj. 1.9148e+06 iterations 361
Cbc0038I Pass  17: (6.37 seconds) suminf.   62.13179 (561) obj. 1.91553e+06 iterations 153
Cbc0038I Pass  18: (6.48 seconds) suminf.   63.59756 (563) obj. 1.91888e+06 iterations 435
Cbc0038I Pass  19: (6.54 seconds) suminf.   63.44043 (533) obj. 1.91979e+06 iterations 190
Cbc0038I Pass  20: (6.56 seconds) suminf.   63.41184 (535) obj. 1.91911e+06 iterations 67
Cbc0038I Pass  21: (6.70 seconds) suminf.   55.77214 (576) obj. 1.9075e+06 iterations 595
Cbc0038I Pass  22: (6.75 seconds) suminf.   54.66407 (569) obj. 1.8997e+06 iterations 147
Cbc0038I Pass  23: (6.76 seconds) suminf.   54.76828 (574) obj. 1.90208e+06 iterations 27
Cbc0038I Pass  24: (6.90 seconds) suminf.   52.57921 (553) obj. 1.86307e+06 iterations 585
Cbc0038I Pass  25: (6.97 seconds) suminf.   52.03399 (554) obj. 1.87081e+06 iterations 202
Cbc0038I Pass  26: (7.01 seconds) suminf.   50.88874 (543) obj. 1.85965e+06 iterations 135
Cbc0038I Pass  27: (7.07 seconds) suminf.   47.91793 (510) obj. 1.84815e+06 iterations 220
Cbc0038I Pass  28: (7.16 seconds) suminf.   46.07222 (567) obj. 1.83407e+06 iterations 323
Cbc0038I Pass  29: (7.21 seconds) suminf.   44.25881 (557) obj. 1.83713e+06 iterations 157
Cbc0038I Pass  30: (7.22 seconds) suminf.   44.18899 (555) obj. 1.83813e+06 iterations 21
Cbc0038I Pass  31: (7.37 seconds) suminf.   41.50958 (474) obj. 1.92171e+06 iterations 691
Cbc0038I Pass  32: (7.45 seconds) suminf.   40.78861 (450) obj. 1.94079e+06 iterations 355
Cbc0038I Pass  33: (7.49 seconds) suminf.   40.16552 (473) obj. 1.92495e+06 iterations 122
Cbc0038I Pass  34: (7.53 seconds) suminf.   40.25113 (445) obj. 1.92348e+06 iterations 145
Cbc0038I Pass  35: (7.64 seconds) suminf.   42.48451 (502) obj. 1.9211e+06 iterations 514
Cbc0038I Pass  36: (7.71 seconds) suminf.   43.38765 (477) obj. 1.924e+06 iterations 262
Cbc0038I Pass  37: (7.80 seconds) suminf.   40.16121 (460) obj. 1.92249e+06 iterations 385
Cbc0038I Pass  38: (7.87 seconds) suminf.   40.86040 (472) obj. 1.92368e+06 iterations 241
Cbc0038I Pass  39: (7.97 seconds) suminf.   39.59189 (457) obj. 1.91972e+06 iterations 445
Cbc0038I Pass  40: (8.02 seconds) suminf.   39.80658 (474) obj. 1.92026e+06 iterations 173
Cbc0038I Pass  41: (8.09 seconds) suminf.   41.69185 (471) obj. 1.92323e+06 iterations 308
Cbc0038I Pass  42: (8.16 seconds) suminf.   40.23751 (461) obj. 1.92688e+06 iterations 251
Cbc0038I Pass  43: (8.25 seconds) suminf.   38.84176 (447) obj. 1.92087e+06 iterations 381
Cbc0038I Pass  44: (8.31 seconds) suminf.   39.65090 (462) obj. 1.92108e+06 iterations 264
Cbc0038I Pass  45: (8.42 seconds) suminf.   40.64143 (439) obj. 1.92217e+06 iterations 459
Cbc0038I Pass  46: (8.50 seconds) suminf.   39.80658 (474) obj. 1.92026e+06 iterations 332
Cbc0038I Pass  47: (8.57 seconds) suminf.   39.13308 (452) obj. 1.92056e+06 iterations 283
Cbc0038I Pass  48: (8.86 seconds) suminf.   86.36348 (565) obj. 1.8389e+06 iterations 1433
Cbc0038I Pass  49: (9.07 seconds) suminf.   53.81828 (490) obj. 2.2092e+06 iterations 1049
Cbc0038I Pass  50: (9.14 seconds) suminf.   51.69721 (477) obj. 2.21036e+06 iterations 238
Cbc0038I Pass  51: (9.22 seconds) suminf.   47.82304 (517) obj. 2.20986e+06 iterations 313
Cbc0038I Pass  52: (9.24 seconds) suminf.   48.14021 (513) obj. 2.2098e+06 iterations 51
Cbc0038I Pass  53: (9.32 seconds) suminf.   43.90430 (493) obj. 2.20954e+06 iterations 330
Cbc0038I Pass  54: (9.38 seconds) suminf.   43.08447 (468) obj. 2.20955e+06 iterations 181
Cbc0038I Pass  55: (9.42 seconds) suminf.   41.18980 (464) obj. 2.20317e+06 iterations 137
Cbc0038I Pass  56: (9.44 seconds) suminf.   42.63711 (483) obj. 2.20375e+06 iterations 82
Cbc0038I Pass  57: (9.57 seconds) suminf.   38.94318 (454) obj. 2.20809e+06 iterations 580
Cbc0038I Pass  58: (9.63 seconds) suminf.   37.13813 (447) obj. 2.20782e+06 iterations 234
Cbc0038I Pass  59: (9.65 seconds) suminf.   36.95809 (454) obj. 2.20784e+06 iterations 36
Cbc0038I Pass  60: (9.71 seconds) suminf.   39.19810 (432) obj. 2.20785e+06 iterations 270
Cbc0038I Pass  61: (9.77 seconds) suminf.   37.98684 (443) obj. 2.20355e+06 iterations 199
Cbc0038I Pass  62: (9.85 seconds) suminf.   42.22013 (458) obj. 2.20497e+06 iterations 351
Cbc0038I Pass  63: (9.90 seconds) suminf.   41.58093 (445) obj. 2.20811e+06 iterations 163
Cbc0038I Pass  64: (9.94 seconds) suminf.   39.97536 (426) obj. 2.20808e+06 iterations 169
Cbc0038I Pass  65: (9.97 seconds) suminf.   39.77568 (425) obj. 2.20807e+06 iterations 84
Cbc0038I Pass  66: (10.03 seconds) suminf.   38.61734 (428) obj. 2.20806e+06 iterations 235
Cbc0038I Pass  67: (10.07 seconds) suminf.   38.07132 (425) obj. 2.20783e+06 iterations 176
Cbc0038I Pass  68: (10.14 seconds) suminf.   41.80338 (442) obj. 2.20813e+06 iterations 236
Cbc0038I Pass  69: (10.19 seconds) suminf.   38.35605 (434) obj. 2.20807e+06 iterations 177
Cbc0038I Pass  70: (10.20 seconds) suminf.   38.75797 (428) obj. 2.20806e+06 iterations 49
Cbc0038I Pass  71: (10.28 seconds) suminf.   38.54636 (438) obj. 2.20814e+06 iterations 397
Cbc0038I Pass  72: (10.34 seconds) suminf.   36.15586 (443) obj. 2.20788e+06 iterations 201
Cbc0038I Pass  73: (10.36 seconds) suminf.   35.84562 (447) obj. 2.20796e+06 iterations 78
Cbc0038I Pass  74: (10.44 seconds) suminf.   35.32724 (450) obj. 2.20826e+06 iterations 336
Cbc0038I Pass  75: (10.47 seconds) suminf.   35.42731 (440) obj. 2.20828e+06 iterations 81
Cbc0038I Pass  76: (10.55 seconds) suminf.   36.39671 (403) obj. 2.19954e+06 iterations 366
Cbc0038I Pass  77: (10.59 seconds) suminf.   35.31497 (392) obj. 2.20243e+06 iterations 185
Cbc0038I Pass  78: (10.60 seconds) suminf.   35.33964 (392) obj. 2.20174e+06 iterations 9
Cbc0038I Pass  79: (10.66 seconds) suminf.   34.75887 (384) obj. 2.20813e+06 iterations 254
Cbc0038I Pass  80: (10.68 seconds) suminf.   34.75866 (388) obj. 2.20812e+06 iterations 68
Cbc0038I Pass  81: (10.71 seconds) suminf.   34.22520 (387) obj. 2.20812e+06 iterations 124
Cbc0038I Pass  82: (10.73 seconds) suminf.   33.79646 (385) obj. 2.20802e+06 iterations 59
Cbc0038I Pass  83: (10.81 seconds) suminf.   37.27646 (419) obj. 2.20811e+06 iterations 345
Cbc0038I Pass  84: (10.85 seconds) suminf.   35.15674 (427) obj. 2.20813e+06 iterations 136
Cbc0038I Pass  85: (10.87 seconds) suminf.   34.82513 (424) obj. 2.20812e+06 iterations 92
Cbc0038I Pass  86: (10.96 seconds) suminf.   33.97427 (403) obj. 2.20808e+06 iterations 340
Cbc0038I Pass  87: (11.01 seconds) suminf.   33.43124 (391) obj. 2.20783e+06 iterations 163
Cbc0038I Pass  88: (11.08 seconds) suminf.   36.54250 (416) obj. 2.20789e+06 iterations 320
Cbc0038I Pass  89: (11.12 seconds) suminf.   33.17989 (404) obj. 2.20719e+06 iterations 140
Cbc0038I Pass  90: (11.13 seconds) suminf.   32.64261 (402) obj. 2.20741e+06 iterations 26
Cbc0038I Pass  91: (11.21 seconds) suminf.   31.95792 (377) obj. 2.2009e+06 iterations 382
Cbc0038I Pass  92: (11.26 seconds) suminf.   30.82522 (383) obj. 2.19415e+06 iterations 188
Cbc0038I Pass  93: (11.30 seconds) suminf.   32.98180 (358) obj. 2.18308e+06 iterations 152
Cbc0038I Pass  94: (11.33 seconds) suminf.   30.56583 (345) obj. 2.1788e+06 iterations 107
Cbc0038I Pass  95: (11.38 seconds) suminf.   28.36261 (336) obj. 2.17052e+06 iterations 212
Cbc0038I Pass  96: (11.40 seconds) suminf.   27.59276 (327) obj. 2.17252e+06 iterations 41
Cbc0038I Pass  97: (11.43 seconds) suminf.   29.14655 (337) obj. 2.17019e+06 iterations 146
Cbc0038I Pass  98: (11.46 seconds) suminf.   27.62399 (324) obj. 2.17403e+06 iterations 112
Cbc0038I Pass  99: (11.52 seconds) suminf.   29.17724 (331) obj. 2.17027e+06 iterations 191
Cbc0038I Pass 100: (11.73 seconds) suminf.   79.24620 (526) obj. 2.31458e+06 iterations 1114
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 283 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5076 rows 1646 columns, reduced to 4028 rows 1268 columns - too large
Cbc0038I Mini branch and bound did not improve solution (12.00 seconds)
Cbc0038I After 12.00 seconds - Feasibility pump exiting - took 7.19 seconds
Cbc0031I 50 added rows had average density of 6.08
Cbc0013I At root node, 50 cuts changed objective from 1024559.9 to 1033296.1 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 117.0 elements, 0 column cuts (0 active)  in 0.851 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 41 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.316 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1033296.1 (15.67 seconds)
Cbc0010I After 100 nodes, 14 on tree, 1e+50 best solution, best possible 1212416 (168.07 seconds)
Cbc0010I After 200 nodes, 24 on tree, 1e+50 best solution, best possible 1212416 (285.94 seconds)
Cbc0010I After 300 nodes, 29 on tree, 1e+50 best solution, best possible 1212416 (430.17 seconds)
Cbc0010I After 400 nodes, 16 on tree, 1e+50 best solution, best possible 1212416 (527.24 seconds)
Cbc0010I After 500 nodes, 11 on tree, 1e+50 best solution, best possible 1212416 (625.52 seconds)
Cbc0010I After 600 nodes, 7 on tree, 1e+50 best solution, best possible 1212416 (749.74 seconds)
Cbc0010I After 700 nodes, 20 on tree, 1e+50 best solution, best possible 1212416 (838.55 seconds)
Cbc0010I After 800 nodes, 27 on tree, 1e+50 best solution, best possible 1212416 (943.09 seconds)
Cbc0010I After 900 nodes, 38 on tree, 1e+50 best solution, best possible 1212416 (1049.60 seconds)
Cbc0010I After 1000 nodes, 39 on tree, 1e+50 best solution, best possible 1212416 (1148.41 seconds)
Cbc0010I After 1100 nodes, 47 on tree, 1e+50 best solution, best possible 1212416 (1261.40 seconds)
Cbc0010I After 1200 nodes, 44 on tree, 1e+50 best solution, best possible 1212416 (1375.30 seconds)
Cbc0010I After 1300 nodes, 53 on tree, 1e+50 best solution, best possible 1212416 (1481.32 seconds)
Cbc0010I After 1400 nodes, 55 on tree, 1e+50 best solution, best possible 1212416 (1578.91 seconds)
Cbc0010I After 1500 nodes, 52 on tree, 1e+50 best solution, best possible 1212416 (1663.64 seconds)
Cbc0010I After 1600 nodes, 53 on tree, 1e+50 best solution, best possible 1212416 (1778.44 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1212416), took 3830597 iterations and 1619 nodes (1801.41 seconds)
Cbc0032I Strong branching done 16222 times (1372161 iterations), fathomed 86 nodes and fixed 586 variables
Cbc0035I Maximum depth 40, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.02456e+06 to 1.0333e+06
Probing was tried 11 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.112 seconds)
Gomory was tried 375 times and created 1180 cuts of which 0 were active after adding rounds of cuts (3.970 seconds)
Knapsack was tried 375 times and created 2556 cuts of which 0 were active after adding rounds of cuts (0.700 seconds)
Clique was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.035 seconds)
MixedIntegerRounding2 was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 11 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
TwoMirCuts was tried 375 times and created 10897 cuts of which 0 were active after adding rounds of cuts (1.548 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.054 seconds)
ImplicationCuts was tried 69 times and created 35 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1212416.000
Enumerated nodes:               1619
Total iterations:               3830597
Time (CPU seconds):             1801.41
Time (Wallclock seconds):       1805.53

Total time (CPU seconds):       1801.45   (Wallclock seconds):       1805.57

