Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_3_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang10_3_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 339 - 10.41 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1601 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 275 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 6699 rows, 2298 columns (2298 integer (2243 of which binary)) and 21894 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1237 integers unsatisfied sum - 227.305
Cbc0038I Pass   1: (15.62 seconds) suminf.  126.35545 (1172) obj. 386.16 iterations 2691
Cbc0038I Pass   2: (15.98 seconds) suminf.  116.18390 (1204) obj. 410.773 iterations 672
Cbc0038I Pass   3: (16.10 seconds) suminf.  117.93000 (1211) obj. 413.104 iterations 160
Cbc0038I Pass   4: (16.46 seconds) suminf.  112.58545 (1198) obj. 451.08 iterations 692
Cbc0038I Pass   5: (16.58 seconds) suminf.  109.31686 (1206) obj. 455.762 iterations 157
Cbc0038I Pass   6: (16.90 seconds) suminf.   94.39170 (1210) obj. 457.782 iterations 547
Cbc0038I Pass   7: (17.00 seconds) suminf.   95.89566 (1233) obj. 456.937 iterations 137
Cbc0038I Pass   8: (17.07 seconds) suminf.   94.54649 (1195) obj. 456.015 iterations 95
Cbc0038I Pass   9: (17.21 seconds) suminf.   95.26771 (1193) obj. 456.334 iterations 179
Cbc0038I Pass  10: (17.31 seconds) suminf.   95.95787 (1190) obj. 456.203 iterations 139
Cbc0038I Pass  11: (17.47 seconds) suminf.   90.89024 (1191) obj. 459.185 iterations 230
Cbc0038I Pass  12: (17.53 seconds) suminf.   91.53882 (1195) obj. 457.82 iterations 72
Cbc0038I Pass  13: (17.68 seconds) suminf.   88.89223 (1162) obj. 460.556 iterations 213
Cbc0038I Pass  14: (17.75 seconds) suminf.   89.11123 (1189) obj. 457.966 iterations 107
Cbc0038I Pass  15: (17.80 seconds) suminf.   87.70348 (1200) obj. 459.392 iterations 52
Cbc0038I Pass  16: (17.96 seconds) suminf.   89.60797 (1196) obj. 460.581 iterations 239
Cbc0038I Pass  17: (18.09 seconds) suminf.   89.37601 (1182) obj. 458.899 iterations 159
Cbc0038I Pass  18: (18.25 seconds) suminf.   92.18772 (1179) obj. 457.689 iterations 258
Cbc0038I Pass  19: (18.37 seconds) suminf.   90.37787 (1189) obj. 458.94 iterations 170
Cbc0038I Pass  20: (18.64 seconds) suminf.   87.02302 (1170) obj. 461.708 iterations 484
Cbc0038I Pass  21: (18.78 seconds) suminf.   90.09247 (1198) obj. 467.853 iterations 183
Cbc0038I Pass  22: (19.19 seconds) suminf.   88.88947 (1211) obj. 461.328 iterations 772
Cbc0038I Pass  23: (19.39 seconds) suminf.   89.96920 (1245) obj. 452.214 iterations 323
Cbc0038I Pass  24: (19.49 seconds) suminf.   88.95102 (1246) obj. 453.199 iterations 133
Cbc0038I Pass  25: (19.70 seconds) suminf.   88.37017 (1187) obj. 456.971 iterations 342
Cbc0038I Pass  26: (19.81 seconds) suminf.   85.62820 (1209) obj. 459.398 iterations 154
Cbc0038I Pass  27: (19.93 seconds) suminf.   83.17118 (1198) obj. 460.055 iterations 179
Cbc0038I Pass  28: (20.11 seconds) suminf.   79.22363 (1141) obj. 468.387 iterations 358
Cbc0038I Pass  29: (20.26 seconds) suminf.   77.03263 (1149) obj. 471.253 iterations 256
Cbc0038I Pass  30: (20.47 seconds) suminf.   78.25409 (1191) obj. 461.067 iterations 390
Cbc0038I Pass  31: (20.54 seconds) suminf.   77.98492 (1183) obj. 464.334 iterations 103
Cbc0038I Pass  32: (20.71 seconds) suminf.   78.59037 (1168) obj. 458.486 iterations 298
Cbc0038I Pass  33: (20.83 seconds) suminf.   77.82870 (1158) obj. 458.372 iterations 175
Cbc0038I Pass  34: (21.07 seconds) suminf.   82.40357 (1154) obj. 470.848 iterations 458
Cbc0038I Pass  35: (21.23 seconds) suminf.   80.98282 (1124) obj. 470.792 iterations 262
Cbc0038I Pass  36: (21.48 seconds) suminf.   80.81482 (1160) obj. 469.607 iterations 437
Cbc0038I Pass  37: (21.58 seconds) suminf.   79.31127 (1153) obj. 470.224 iterations 140
Cbc0038I Pass  38: (21.64 seconds) suminf.   79.07899 (1134) obj. 471.058 iterations 93
Cbc0038I Pass  39: (21.91 seconds) suminf.   79.73492 (1141) obj. 472.691 iterations 544
Cbc0038I Pass  40: (22.09 seconds) suminf.   77.65952 (1110) obj. 473.076 iterations 334
Cbc0038I Pass  41: (22.14 seconds) suminf.   76.94777 (1110) obj. 473.372 iterations 97
Cbc0038I Pass  42: (22.38 seconds) suminf.   81.15517 (1137) obj. 474.9 iterations 419
Cbc0038I Pass  43: (22.47 seconds) suminf.   80.31375 (1140) obj. 477.105 iterations 139
Cbc0038I Pass  44: (22.66 seconds) suminf.   75.59049 (1138) obj. 471.593 iterations 326
Cbc0038I Pass  45: (22.77 seconds) suminf.   77.39662 (1139) obj. 478.253 iterations 146
Cbc0038I Pass  46: (23.00 seconds) suminf.   81.62837 (1159) obj. 476.751 iterations 398
Cbc0038I Pass  47: (23.22 seconds) suminf.   77.33439 (1145) obj. 481.38 iterations 366
Cbc0038I Pass  48: (23.24 seconds) suminf.   76.94133 (1145) obj. 481.003 iterations 7
Cbc0038I Pass  49: (23.45 seconds) suminf.   78.24747 (1118) obj. 489.225 iterations 379
Cbc0038I Pass  50: (23.61 seconds) suminf.   77.16042 (1128) obj. 525.907 iterations 214
Cbc0038I Pass  51: (23.68 seconds) suminf.   77.55328 (1123) obj. 524.457 iterations 99
Cbc0038I Pass  52: (23.88 seconds) suminf.   79.32601 (1121) obj. 524.249 iterations 363
Cbc0038I Pass  53: (24.04 seconds) suminf.   79.03921 (1123) obj. 525.39 iterations 248
Cbc0038I Pass  54: (24.10 seconds) suminf.   78.33007 (1126) obj. 523.634 iterations 101
Cbc0038I Pass  55: (24.43 seconds) suminf.   76.24067 (1146) obj. 517.773 iterations 619
Cbc0038I Pass  56: (24.60 seconds) suminf.   75.47579 (1130) obj. 526.823 iterations 256
Cbc0038I Pass  57: (24.68 seconds) suminf.   75.47595 (1135) obj. 527.397 iterations 112
Cbc0038I Pass  58: (24.85 seconds) suminf.   78.51449 (1110) obj. 522.204 iterations 300
Cbc0038I Pass  59: (24.97 seconds) suminf.   77.01382 (1120) obj. 521.241 iterations 159
Cbc0038I Pass  60: (25.15 seconds) suminf.   75.57574 (1132) obj. 527.502 iterations 311
Cbc0038I Pass  61: (25.74 seconds) suminf.  119.39696 (1051) obj. 548.146 iterations 1284
Cbc0038I Pass  62: (26.19 seconds) suminf.   89.28424 (1114) obj. 541.115 iterations 908
Cbc0038I Pass  63: (26.35 seconds) suminf.   89.77762 (1109) obj. 538.415 iterations 239
Cbc0038I Pass  64: (26.47 seconds) suminf.   87.40748 (1085) obj. 537.43 iterations 164
Cbc0038I Pass  65: (26.56 seconds) suminf.   86.14441 (1088) obj. 537.747 iterations 132
Cbc0038I Pass  66: (26.85 seconds) suminf.   83.37617 (1142) obj. 540.172 iterations 532
Cbc0038I Pass  67: (26.99 seconds) suminf.   82.17294 (1138) obj. 538.732 iterations 185
Cbc0038I Pass  68: (27.27 seconds) suminf.   86.04533 (1094) obj. 538.715 iterations 516
Cbc0038I Pass  69: (27.42 seconds) suminf.   82.97210 (1103) obj. 538.534 iterations 209
Cbc0038I Pass  70: (27.69 seconds) suminf.   87.96321 (1041) obj. 559.766 iterations 557
Cbc0038I Pass  71: (27.87 seconds) suminf.   82.06755 (1044) obj. 582.721 iterations 396
Cbc0038I Pass  72: (28.02 seconds) suminf.   81.59719 (1065) obj. 590.631 iterations 231
Cbc0038I Pass  73: (28.33 seconds) suminf.   80.92449 (1168) obj. 596.26 iterations 596
Cbc0038I Pass  74: (28.49 seconds) suminf.   77.34598 (1124) obj. 598.373 iterations 260
Cbc0038I Pass  75: (28.66 seconds) suminf.   77.78576 (1129) obj. 597.782 iterations 280
Cbc0038I Pass  76: (28.74 seconds) suminf.   76.68768 (1124) obj. 598.408 iterations 118
Cbc0038I Pass  77: (28.84 seconds) suminf.   76.17605 (1117) obj. 597.652 iterations 140
Cbc0038I Pass  78: (29.12 seconds) suminf.   80.80083 (1136) obj. 594.626 iterations 528
Cbc0038I Pass  79: (29.31 seconds) suminf.   78.27748 (1128) obj. 596.505 iterations 294
Cbc0038I Pass  80: (29.63 seconds) suminf.   74.19949 (1139) obj. 594.595 iterations 587
Cbc0038I Pass  81: (29.73 seconds) suminf.   73.55640 (1129) obj. 594.118 iterations 162
Cbc0038I Pass  82: (30.05 seconds) suminf.   83.01167 (1113) obj. 592.583 iterations 601
Cbc0038I Pass  83: (30.07 seconds) suminf.   82.88270 (1106) obj. 592.638 iterations 27
Cbc0038I Pass  84: (30.34 seconds) suminf.   75.17774 (1133) obj. 594.178 iterations 505
Cbc0038I Pass  85: (30.47 seconds) suminf.   70.63775 (1125) obj. 594.734 iterations 200
Cbc0038I Pass  86: (30.71 seconds) suminf.   75.16082 (1134) obj. 595.709 iterations 451
Cbc0038I Pass  87: (30.81 seconds) suminf.   74.26963 (1124) obj. 595.211 iterations 152
Cbc0038I Pass  88: (31.10 seconds) suminf.   78.07666 (1139) obj. 595.412 iterations 573
Cbc0038I Pass  89: (31.33 seconds) suminf.   73.43479 (1111) obj. 596.263 iterations 403
Cbc0038I Pass  90: (31.61 seconds) suminf.   63.34302 (1087) obj. 600.35 iterations 580
Cbc0038I Pass  91: (31.73 seconds) suminf.   64.68695 (1093) obj. 599.756 iterations 176
Cbc0038I Pass  92: (31.98 seconds) suminf.   65.16956 (1102) obj. 603.859 iterations 522
Cbc0038I Pass  93: (32.13 seconds) suminf.   61.17965 (1146) obj. 599.583 iterations 257
Cbc0038I Pass  94: (32.36 seconds) suminf.   69.97298 (1056) obj. 590.326 iterations 485
Cbc0038I Pass  95: (32.57 seconds) suminf.   64.15398 (1117) obj. 600.784 iterations 391
Cbc0038I Pass  96: (32.85 seconds) suminf.   69.50787 (1106) obj. 574.838 iterations 557
Cbc0038I Pass  97: (33.07 seconds) suminf.   61.13932 (1113) obj. 596.992 iterations 420
Cbc0038I Pass  98: (33.10 seconds) suminf.   61.22182 (1110) obj. 597.31 iterations 67
Cbc0038I Pass  99: (33.31 seconds) suminf.   64.51797 (1118) obj. 602.046 iterations 405
Cbc0038I Pass 100: (33.74 seconds) suminf.  103.64990 (1092) obj. 673.662 iterations 1113
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 344 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6699 rows 2298 columns, reduced to 5172 rows 1750 columns - too large
Cbc0038I Mini branch and bound did not improve solution (36.59 seconds)
Cbc0038I After 36.59 seconds - Feasibility pump exiting - took 22.38 seconds
Cbc0031I 53 added rows had average density of 5.8301887
Cbc0013I At root node, 53 cuts changed objective from 339 to 339 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 499 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.198 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 55 row cuts average 74.7 elements, 0 column cuts (0 active)  in 1.530 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 88 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 116 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.617 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 339 (51.02 seconds)
Cbc0010I After 100 nodes, 21 on tree, 1e+50 best solution, best possible 339 (200.98 seconds)
Cbc0010I After 200 nodes, 28 on tree, 1e+50 best solution, best possible 339 (262.35 seconds)
Cbc0010I After 300 nodes, 29 on tree, 1e+50 best solution, best possible 339 (316.53 seconds)
Cbc0010I After 400 nodes, 25 on tree, 1e+50 best solution, best possible 339 (360.53 seconds)
Cbc0010I After 500 nodes, 32 on tree, 1e+50 best solution, best possible 339 (452.49 seconds)
Cbc0010I After 600 nodes, 31 on tree, 1e+50 best solution, best possible 339 (509.09 seconds)
Cbc0010I After 700 nodes, 28 on tree, 1e+50 best solution, best possible 339 (561.98 seconds)
Cbc0010I After 800 nodes, 31 on tree, 1e+50 best solution, best possible 339 (643.50 seconds)
Cbc0010I After 900 nodes, 38 on tree, 1e+50 best solution, best possible 339 (698.62 seconds)
Cbc0010I After 1000 nodes, 34 on tree, 1e+50 best solution, best possible 339 (760.65 seconds)
Cbc0010I After 1100 nodes, 35 on tree, 1e+50 best solution, best possible 339 (813.38 seconds)
Cbc0010I After 1200 nodes, 28 on tree, 1e+50 best solution, best possible 339 (850.24 seconds)
Cbc0010I After 1300 nodes, 34 on tree, 1e+50 best solution, best possible 339 (915.07 seconds)
Cbc0010I After 1400 nodes, 27 on tree, 1e+50 best solution, best possible 339 (965.24 seconds)
Cbc0010I After 1500 nodes, 36 on tree, 1e+50 best solution, best possible 339 (1037.78 seconds)
Cbc0010I After 1600 nodes, 39 on tree, 1e+50 best solution, best possible 339 (1095.64 seconds)
Cbc0010I After 1700 nodes, 35 on tree, 1e+50 best solution, best possible 339 (1144.84 seconds)
Cbc0010I After 1800 nodes, 31 on tree, 1e+50 best solution, best possible 339 (1202.31 seconds)
Cbc0010I After 1900 nodes, 27 on tree, 1e+50 best solution, best possible 339 (1272.77 seconds)
Cbc0010I After 2000 nodes, 25 on tree, 1e+50 best solution, best possible 339 (1380.71 seconds)
Cbc0010I After 2100 nodes, 19 on tree, 1e+50 best solution, best possible 339 (1510.16 seconds)
Cbc0010I After 2200 nodes, 19 on tree, 1e+50 best solution, best possible 339 (1601.03 seconds)
Cbc0010I After 2300 nodes, 28 on tree, 1e+50 best solution, best possible 339 (1686.95 seconds)
Cbc0010I After 2400 nodes, 31 on tree, 1e+50 best solution, best possible 339 (1752.05 seconds)
Cbc0010I After 2500 nodes, 30 on tree, 1e+50 best solution, best possible 339 (1787.35 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 339), took 2761542 iterations and 2530 nodes (1796.54 seconds)
Cbc0032I Strong branching done 23322 times (1707141 iterations), fathomed 207 nodes and fixed 2403 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 339 to 339
Probing was tried 553 times and created 161618 cuts of which 0 were active after adding rounds of cuts (4.357 seconds)
Gomory was tried 332 times and created 574 cuts of which 0 were active after adding rounds of cuts (4.152 seconds)
Knapsack was tried 332 times and created 2897 cuts of which 0 were active after adding rounds of cuts (0.781 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 116 cuts of which 0 were active after adding rounds of cuts (0.617 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.127 seconds)
ImplicationCuts was tried 16 times and created 32 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    339.000
Enumerated nodes:               2530
Total iterations:               2761542
Time (CPU seconds):             1796.54
Time (Wallclock seconds):       1796.96

Total time (CPU seconds):       1796.59   (Wallclock seconds):       1797.02

