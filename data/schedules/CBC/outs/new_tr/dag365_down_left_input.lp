Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag365_down_left_input.lp sec 1800 solve solu solutions/new_tr/dag365_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.01067e+06 - 2.49 seconds
Cgl0002I 1614 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 960 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 91 strengthened rows, 0 substitutions
Cgl0004I processed model has 5076 rows, 1646 columns (1646 integer (1595 of which binary)) and 16761 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1646 objects (1646 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 803 integers unsatisfied sum - 201.699
Cbc0038I Pass   1: (4.09 seconds) suminf.   85.05926 (625) obj. 1.54502e+06 iterations 2546
Cbc0038I Pass   2: (4.19 seconds) suminf.   80.06920 (599) obj. 1.53342e+06 iterations 430
Cbc0038I Pass   3: (4.31 seconds) suminf.   74.17283 (573) obj. 1.66438e+06 iterations 507
Cbc0038I Pass   4: (4.36 seconds) suminf.   72.61301 (596) obj. 1.70491e+06 iterations 153
Cbc0038I Pass   5: (4.48 seconds) suminf.   71.79535 (566) obj. 1.76058e+06 iterations 543
Cbc0038I Pass   6: (4.58 seconds) suminf.   63.95408 (552) obj. 1.81748e+06 iterations 367
Cbc0038I Pass   7: (4.59 seconds) suminf.   64.15823 (562) obj. 1.82615e+06 iterations 15
Cbc0038I Pass   8: (4.70 seconds) suminf.   61.20562 (536) obj. 1.84652e+06 iterations 464
Cbc0038I Pass   9: (4.76 seconds) suminf.   58.63686 (531) obj. 1.82747e+06 iterations 209
Cbc0038I Pass  10: (4.80 seconds) suminf.   58.77443 (530) obj. 1.84813e+06 iterations 100
Cbc0038I Pass  11: (4.90 seconds) suminf.   55.69166 (504) obj. 1.81537e+06 iterations 444
Cbc0038I Pass  12: (4.94 seconds) suminf.   54.70243 (487) obj. 1.82392e+06 iterations 123
Cbc0038I Pass  13: (4.99 seconds) suminf.   51.94376 (498) obj. 1.82653e+06 iterations 170
Cbc0038I Pass  14: (5.03 seconds) suminf.   51.33297 (509) obj. 1.82496e+06 iterations 146
Cbc0038I Pass  15: (5.04 seconds) suminf.   51.12727 (501) obj. 1.82581e+06 iterations 13
Cbc0038I Pass  16: (5.12 seconds) suminf.   51.09122 (465) obj. 1.7827e+06 iterations 329
Cbc0038I Pass  17: (5.17 seconds) suminf.   51.42922 (484) obj. 1.76945e+06 iterations 173
Cbc0038I Pass  18: (5.18 seconds) suminf.   51.36184 (483) obj. 1.76932e+06 iterations 14
Cbc0038I Pass  19: (5.31 seconds) suminf.   50.46301 (484) obj. 1.82616e+06 iterations 614
Cbc0038I Pass  20: (5.40 seconds) suminf.   45.07235 (466) obj. 1.90493e+06 iterations 377
Cbc0038I Pass  21: (5.41 seconds) suminf.   44.59997 (471) obj. 1.88959e+06 iterations 23
Cbc0038I Pass  22: (5.49 seconds) suminf.   47.44400 (488) obj. 1.91006e+06 iterations 361
Cbc0038I Pass  23: (5.52 seconds) suminf.   45.38479 (483) obj. 1.90924e+06 iterations 80
Cbc0038I Pass  24: (5.54 seconds) suminf.   43.37763 (468) obj. 1.91131e+06 iterations 75
Cbc0038I Pass  25: (5.68 seconds) suminf.   42.32706 (469) obj. 1.90523e+06 iterations 675
Cbc0038I Pass  26: (5.74 seconds) suminf.   41.65478 (482) obj. 1.92891e+06 iterations 208
Cbc0038I Pass  27: (5.87 seconds) suminf.   40.18783 (446) obj. 1.90052e+06 iterations 589
Cbc0038I Pass  28: (5.88 seconds) suminf.   40.02463 (446) obj. 1.90013e+06 iterations 23
Cbc0038I Pass  29: (5.97 seconds) suminf.   40.83449 (458) obj. 1.90194e+06 iterations 395
Cbc0038I Pass  30: (6.00 seconds) suminf.   39.62988 (461) obj. 1.90211e+06 iterations 117
Cbc0038I Pass  31: (6.08 seconds) suminf.   39.51773 (437) obj. 1.90509e+06 iterations 353
Cbc0038I Pass  32: (6.14 seconds) suminf.   38.04611 (424) obj. 1.90326e+06 iterations 198
Cbc0038I Pass  33: (6.25 seconds) suminf.   42.60561 (447) obj. 1.91055e+06 iterations 535
Cbc0038I Pass  34: (6.32 seconds) suminf.   39.74888 (464) obj. 1.92449e+06 iterations 253
Cbc0038I Pass  35: (6.43 seconds) suminf.   41.34913 (436) obj. 1.90285e+06 iterations 488
Cbc0038I Pass  36: (6.50 seconds) suminf.   39.08989 (425) obj. 1.92508e+06 iterations 272
Cbc0038I Pass  37: (6.51 seconds) suminf.   39.25314 (442) obj. 1.92491e+06 iterations 58
Cbc0038I Pass  38: (6.59 seconds) suminf.   39.68171 (440) obj. 1.92591e+06 iterations 302
Cbc0038I Pass  39: (6.63 seconds) suminf.   38.89886 (451) obj. 1.92565e+06 iterations 169
Cbc0038I Pass  40: (6.66 seconds) suminf.   38.50814 (452) obj. 1.92511e+06 iterations 106
Cbc0038I Pass  41: (6.73 seconds) suminf.   39.26620 (436) obj. 1.89526e+06 iterations 245
Cbc0038I Pass  42: (6.76 seconds) suminf.   38.46668 (446) obj. 1.89836e+06 iterations 121
Cbc0038I Pass  43: (6.84 seconds) suminf.   39.79170 (443) obj. 1.91157e+06 iterations 307
Cbc0038I Pass  44: (6.86 seconds) suminf.   38.59248 (451) obj. 1.9176e+06 iterations 75
Cbc0038I Pass  45: (6.92 seconds) suminf.   42.70216 (460) obj. 1.8685e+06 iterations 246
Cbc0038I Pass  46: (6.97 seconds) suminf.   41.35732 (460) obj. 1.89516e+06 iterations 165
Cbc0038I Pass  47: (7.05 seconds) suminf.   37.81268 (446) obj. 1.91855e+06 iterations 382
Cbc0038I Pass  48: (7.09 seconds) suminf.   37.16916 (454) obj. 1.91873e+06 iterations 120
Cbc0038I Pass  49: (7.18 seconds) suminf.   36.16849 (419) obj. 1.89114e+06 iterations 416
Cbc0038I Pass  50: (7.23 seconds) suminf.   35.61025 (432) obj. 1.90373e+06 iterations 186
Cbc0038I Pass  51: (7.30 seconds) suminf.   37.69436 (431) obj. 1.88494e+06 iterations 335
Cbc0038I Pass  52: (7.37 seconds) suminf.   36.35409 (440) obj. 1.89884e+06 iterations 226
Cbc0038I Pass  53: (7.40 seconds) suminf.   34.88392 (435) obj. 1.89588e+06 iterations 112
Cbc0038I Pass  54: (7.51 seconds) suminf.   41.65495 (440) obj. 1.86605e+06 iterations 535
Cbc0038I Pass  55: (7.56 seconds) suminf.   39.58479 (448) obj. 1.90239e+06 iterations 206
Cbc0038I Pass  56: (7.60 seconds) suminf.   39.25334 (438) obj. 1.90294e+06 iterations 132
Cbc0038I Pass  57: (7.69 seconds) suminf.   40.07377 (438) obj. 1.86183e+06 iterations 465
Cbc0038I Pass  58: (7.76 seconds) suminf.   37.74524 (446) obj. 1.90326e+06 iterations 229
Cbc0038I Pass  59: (7.86 seconds) suminf.   39.88397 (408) obj. 1.89394e+06 iterations 506
Cbc0038I Pass  60: (7.90 seconds) suminf.   37.69516 (409) obj. 1.89855e+06 iterations 138
Cbc0038I Pass  61: (8.00 seconds) suminf.   37.40619 (418) obj. 1.9414e+06 iterations 492
Cbc0038I Pass  62: (8.03 seconds) suminf.   36.05785 (429) obj. 1.91572e+06 iterations 105
Cbc0038I Pass  63: (8.08 seconds) suminf.   34.14111 (421) obj. 1.90897e+06 iterations 210
Cbc0038I Pass  64: (8.17 seconds) suminf.   40.46090 (390) obj. 1.88881e+06 iterations 401
Cbc0038I Pass  65: (8.22 seconds) suminf.   36.58676 (409) obj. 1.8916e+06 iterations 205
Cbc0038I Pass  66: (8.29 seconds) suminf.   32.95187 (378) obj. 1.89541e+06 iterations 316
Cbc0038I Pass  67: (8.33 seconds) suminf.   32.32340 (370) obj. 1.89993e+06 iterations 136
Cbc0038I Pass  68: (8.35 seconds) suminf.   32.42212 (375) obj. 1.89978e+06 iterations 101
Cbc0038I Pass  69: (8.42 seconds) suminf.   34.98292 (400) obj. 1.89247e+06 iterations 271
Cbc0038I Pass  70: (8.44 seconds) suminf.   35.12437 (392) obj. 1.89626e+06 iterations 79
Cbc0038I Pass  71: (8.51 seconds) suminf.   37.62086 (364) obj. 1.89788e+06 iterations 334
Cbc0038I Pass  72: (8.57 seconds) suminf.   33.73945 (362) obj. 1.92125e+06 iterations 207
Cbc0038I Pass  73: (8.58 seconds) suminf.   33.53344 (362) obj. 1.92125e+06 iterations 13
Cbc0038I Pass  74: (8.63 seconds) suminf.   30.66378 (355) obj. 1.92077e+06 iterations 242
Cbc0038I Pass  75: (8.67 seconds) suminf.   29.13474 (357) obj. 1.91506e+06 iterations 149
Cbc0038I Pass  76: (8.75 seconds) suminf.   33.99711 (356) obj. 1.86696e+06 iterations 393
Cbc0038I Pass  77: (8.79 seconds) suminf.   33.16369 (355) obj. 1.86224e+06 iterations 146
Cbc0038I Pass  78: (8.90 seconds) suminf.   33.86322 (378) obj. 1.87672e+06 iterations 574
Cbc0038I Pass  79: (8.96 seconds) suminf.   35.00741 (368) obj. 1.89285e+06 iterations 231
Cbc0038I Pass  80: (9.05 seconds) suminf.   32.95306 (351) obj. 1.91174e+06 iterations 456
Cbc0038I Pass  81: (9.09 seconds) suminf.   31.11477 (366) obj. 1.91607e+06 iterations 182
Cbc0038I Pass  82: (9.14 seconds) suminf.   30.12834 (374) obj. 2.00365e+06 iterations 193
Cbc0038I Pass  83: (9.21 seconds) suminf.   33.61518 (356) obj. 1.9157e+06 iterations 327
Cbc0038I Pass  84: (9.24 seconds) suminf.   32.77147 (353) obj. 1.91607e+06 iterations 122
Cbc0038I Pass  85: (9.26 seconds) suminf.   32.72817 (362) obj. 1.91141e+06 iterations 50
Cbc0038I Pass  86: (9.33 seconds) suminf.   29.33909 (367) obj. 1.9467e+06 iterations 326
Cbc0038I Pass  87: (9.37 seconds) suminf.   29.10297 (386) obj. 1.94482e+06 iterations 153
Cbc0038I Pass  88: (9.46 seconds) suminf.   25.74531 (344) obj. 2.03035e+06 iterations 420
Cbc0038I Pass  89: (9.49 seconds) suminf.   25.40039 (343) obj. 1.98059e+06 iterations 153
Cbc0038I Pass  90: (9.56 seconds) suminf.   29.41100 (345) obj. 2.02418e+06 iterations 321
Cbc0038I Pass  91: (9.60 seconds) suminf.   26.26519 (337) obj. 1.90488e+06 iterations 176
Cbc0038I Pass  92: (9.62 seconds) suminf.   24.59297 (341) obj. 1.90587e+06 iterations 76
Cbc0038I Pass  93: (9.63 seconds) suminf.   24.59297 (341) obj. 1.90587e+06 iterations 1
Cbc0038I Pass  94: (9.70 seconds) suminf.   25.70215 (343) obj. 1.94547e+06 iterations 325
Cbc0038I Pass  95: (9.73 seconds) suminf.   25.56814 (343) obj. 1.90268e+06 iterations 140
Cbc0038I Pass  96: (9.79 seconds) suminf.   27.14451 (336) obj. 1.89749e+06 iterations 294
Cbc0038I Pass  97: (9.82 seconds) suminf.   24.11606 (323) obj. 1.96235e+06 iterations 80
Cbc0038I Pass  98: (9.85 seconds) suminf.   22.91635 (331) obj. 2.02223e+06 iterations 168
Cbc0038I Pass  99: (9.89 seconds) suminf.   24.99503 (345) obj. 2.05903e+06 iterations 133
Cbc0038I Pass 100: (10.12 seconds) suminf.   83.78388 (560) obj. 2.17996e+06 iterations 1264
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 378 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5076 rows 1646 columns, reduced to 3489 rows 1090 columns - too large
Cbc0038I Mini branch and bound did not improve solution (10.35 seconds)
Cbc0038I After 10.35 seconds - Feasibility pump exiting - took 6.88 seconds
Cbc0031I 63 added rows had average density of 28.380952
Cbc0013I At root node, 63 cuts changed objective from 1025906 to 1035758.7 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 727.2 elements, 0 column cuts (0 active)  in 1.361 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 50 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 76 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.331 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1035758.7 (15.55 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 1035758.7 (141.85 seconds)
Cbc0010I After 200 nodes, 6 on tree, 1e+50 best solution, best possible 1035758.7 (264.11 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1e+50 best solution, best possible 1035758.7 (386.76 seconds)
Cbc0010I After 400 nodes, 4 on tree, 1e+50 best solution, best possible 1035758.7 (502.59 seconds)
Cbc0010I After 500 nodes, 3 on tree, 1e+50 best solution, best possible 1035758.7 (608.51 seconds)
Cbc0010I After 600 nodes, 8 on tree, 1e+50 best solution, best possible 1035758.7 (680.93 seconds)
Cbc0010I After 700 nodes, 9 on tree, 1e+50 best solution, best possible 1035758.7 (746.54 seconds)
Cbc0010I After 800 nodes, 5 on tree, 1e+50 best solution, best possible 1035758.7 (807.76 seconds)
Cbc0010I After 900 nodes, 18 on tree, 1e+50 best solution, best possible 1035758.7 (893.64 seconds)
Cbc0010I After 1000 nodes, 29 on tree, 1e+50 best solution, best possible 1035758.7 (953.32 seconds)
Cbc0010I After 1100 nodes, 30 on tree, 1e+50 best solution, best possible 1163269 (1047.54 seconds)
Cbc0010I After 1200 nodes, 36 on tree, 1e+50 best solution, best possible 1163269 (1137.57 seconds)
Cbc0010I After 1300 nodes, 37 on tree, 1e+50 best solution, best possible 1163269 (1200.92 seconds)
Cbc0010I After 1400 nodes, 35 on tree, 1e+50 best solution, best possible 1163269 (1281.21 seconds)
Cbc0010I After 1500 nodes, 36 on tree, 1e+50 best solution, best possible 1163269 (1368.83 seconds)
Cbc0010I After 1600 nodes, 40 on tree, 1e+50 best solution, best possible 1163269 (1461.15 seconds)
Cbc0010I After 1700 nodes, 42 on tree, 1e+50 best solution, best possible 1163269 (1555.05 seconds)
Cbc0010I After 1800 nodes, 37 on tree, 1e+50 best solution, best possible 1163269 (1651.26 seconds)
Cbc0010I After 1900 nodes, 42 on tree, 1e+50 best solution, best possible 1163269 (1787.80 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1163269), took 3727693 iterations and 1917 nodes (1799.34 seconds)
Cbc0032I Strong branching done 16036 times (1364857 iterations), fathomed 64 nodes and fixed 815 variables
Cbc0035I Maximum depth 185, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.02591e+06 to 1.03576e+06
Probing was tried 16 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.162 seconds)
Gomory was tried 500 times and created 1187 cuts of which 0 were active after adding rounds of cuts (5.689 seconds)
Knapsack was tried 500 times and created 3189 cuts of which 0 were active after adding rounds of cuts (0.905 seconds)
Clique was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
MixedIntegerRounding2 was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 16 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
TwoMirCuts was tried 500 times and created 13722 cuts of which 0 were active after adding rounds of cuts (1.789 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
ImplicationCuts was tried 78 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1163269.000
Enumerated nodes:               1917
Total iterations:               3727693
Time (CPU seconds):             1799.34
Time (Wallclock seconds):       1803.31

Total time (CPU seconds):       1799.38   (Wallclock seconds):       1803.35

