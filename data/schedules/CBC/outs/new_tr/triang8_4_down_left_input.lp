Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_4_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang8_4_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 269 - 0.55 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 108 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 2622 rows, 916 columns (916 integer (880 of which binary)) and 8617 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 315 integers unsatisfied sum - 56.0278
Cbc0038I Pass   1: suminf.   15.59693 (143) obj. 302.086 iterations 900
Cbc0038I Pass   2: suminf.   14.49293 (135) obj. 300.98 iterations 72
Cbc0038I Pass   3: suminf.   11.13328 (97) obj. 312.121 iterations 174
Cbc0038I Pass   4: suminf.    9.24694 (97) obj. 310.975 iterations 56
Cbc0038I Pass   5: suminf.    6.72453 (61) obj. 372 iterations 262
Cbc0038I Pass   6: suminf.    6.72453 (61) obj. 372 iterations 2
Cbc0038I Pass   7: suminf.    1.60261 (21) obj. 372 iterations 105
Cbc0038I Pass   8: suminf.    1.60261 (21) obj. 372 iterations 6
Cbc0038I Pass   9: suminf.    1.66425 (26) obj. 372 iterations 68
Cbc0038I Pass  10: suminf.    1.86612 (34) obj. 372 iterations 91
Cbc0038I Pass  11: suminf.    1.86612 (34) obj. 372 iterations 0
Cbc0038I Pass  12: suminf.    1.74242 (59) obj. 382.037 iterations 345
Cbc0038I Pass  13: suminf.    1.74242 (59) obj. 382.037 iterations 0
Cbc0038I Pass  14: suminf.    2.66953 (43) obj. 372 iterations 197
Cbc0038I Pass  15: suminf.    2.66953 (43) obj. 372 iterations 1
Cbc0038I Pass  16: suminf.    7.17676 (80) obj. 372 iterations 208
Cbc0038I Pass  17: suminf.    5.34023 (63) obj. 372 iterations 20
Cbc0038I Pass  18: suminf.    0.00000 (0) obj. 372 iterations 119
Cbc0038I Solution found of 372
Cbc0038I Cleaned solution of 372
Cbc0038I Before mini branch and bound, 514 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2622 rows 916 columns, reduced to 1437 rows 401 columns - 51 fixed gives 1049, 235 - ok now
Cbc0038I Mini branch and bound did not improve solution (1.23 seconds)
Cbc0038I Round again with cutoff of 360.809
Cbc0038I Pass  19: suminf.   15.59693 (143) obj. 302.086 iterations 0
Cbc0038I Pass  20: suminf.   14.49293 (135) obj. 300.98 iterations 84
Cbc0038I Pass  21: suminf.   11.13328 (97) obj. 312.121 iterations 142
Cbc0038I Pass  22: suminf.   10.02497 (103) obj. 310.975 iterations 46
Cbc0038I Pass  23: suminf.    9.24694 (97) obj. 310.975 iterations 9
Cbc0038I Pass  24: suminf.   11.10442 (99) obj. 333.198 iterations 113
Cbc0038I Pass  25: suminf.    5.73428 (72) obj. 360.809 iterations 128
Cbc0038I Pass  26: suminf.    5.08783 (68) obj. 360.809 iterations 33
Cbc0038I Pass  27: suminf.    3.08181 (45) obj. 360.809 iterations 170
Cbc0038I Pass  28: suminf.    2.86354 (44) obj. 360.809 iterations 32
Cbc0038I Pass  29: suminf.    4.42224 (66) obj. 360.809 iterations 190
Cbc0038I Pass  30: suminf.    0.58524 (33) obj. 360.809 iterations 59
Cbc0038I Pass  31: suminf.    0.58524 (33) obj. 360.809 iterations 5
Cbc0038I Pass  32: suminf.    2.12767 (34) obj. 360.809 iterations 31
Cbc0038I Pass  33: suminf.    1.40169 (29) obj. 360.809 iterations 73
Cbc0038I Pass  34: suminf.    1.36927 (30) obj. 360.809 iterations 10
Cbc0038I Pass  35: suminf.    1.77141 (32) obj. 360.809 iterations 61
Cbc0038I Pass  36: suminf.    1.77141 (32) obj. 360.809 iterations 2
Cbc0038I Pass  37: suminf.    1.67143 (11) obj. 360.809 iterations 67
Cbc0038I Pass  38: suminf.    0.19125 (1) obj. 360.809 iterations 3
Cbc0038I Solution found of 360.809
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2623 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 345
Cbc0038I Before mini branch and bound, 530 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2622 rows 916 columns, reduced to 1408 rows 385 columns - 128 fixed gives 544, 120 - ok now
Cbc0038I Full problem 2622 rows 916 columns, reduced to 136 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (1.45 seconds)
Cbc0038I Round again with cutoff of 329.017
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  39: suminf.   15.75075 (152) obj. 293.767 iterations 73
Cbc0038I Pass  40: suminf.   16.67437 (136) obj. 294.411 iterations 89
Cbc0038I Pass  41: suminf.   16.12087 (129) obj. 322.408 iterations 39
Cbc0038I Pass  42: suminf.   14.38872 (124) obj. 315.524 iterations 56
Cbc0038I Pass  43: suminf.   13.81187 (121) obj. 315.201 iterations 18
Cbc0038I Pass  44: suminf.   11.63116 (108) obj. 312.121 iterations 85
Cbc0038I Pass  45: suminf.   11.83628 (111) obj. 326.602 iterations 34
Cbc0038I Pass  46: suminf.    8.81406 (76) obj. 329.017 iterations 167
Cbc0038I Pass  47: suminf.    6.86711 (75) obj. 329.017 iterations 26
Cbc0038I Pass  48: suminf.    3.78844 (49) obj. 329.017 iterations 346
Cbc0038I Pass  49: suminf.    3.78844 (49) obj. 329.017 iterations 10
Cbc0038I Pass  50: suminf.    2.24534 (13) obj. 329.017 iterations 128
Cbc0038I Pass  51: suminf.    0.41154 (11) obj. 329.017 iterations 53
Cbc0038I Pass  52: suminf.    0.01739 (1) obj. 329.017 iterations 18
Cbc0038I Solution found of 329.017
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2623 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 310
Cbc0038I Before mini branch and bound, 548 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2622 rows 916 columns, reduced to 1396 rows 368 columns - 115 fixed gives 481, 109 - ok now
Cbc0038I Full problem 2622 rows 916 columns, reduced to 133 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (1.66 seconds)
Cbc0038I Round again with cutoff of 297.026
Cbc0038I Reduced cost fixing fixed 9 variables on major pass 4
Cbc0038I Pass  53: suminf.   16.20007 (155) obj. 293.045 iterations 15
Cbc0038I Pass  54: suminf.   16.69911 (141) obj. 296.237 iterations 98
Cbc0038I Pass  55: suminf.   15.71873 (135) obj. 297.026 iterations 37
Cbc0038I Pass  56: suminf.   15.16473 (133) obj. 297.026 iterations 68
Cbc0038I Pass  57: suminf.   13.87009 (132) obj. 297.026 iterations 37
Cbc0038I Pass  58: suminf.   12.41149 (119) obj. 297.026 iterations 133
Cbc0038I Pass  59: suminf.   11.59043 (110) obj. 297.026 iterations 100
Cbc0038I Pass  60: suminf.   12.35653 (93) obj. 297.026 iterations 309
Cbc0038I Pass  61: suminf.   10.88230 (99) obj. 297.026 iterations 113
Cbc0038I Pass  62: suminf.    8.47834 (97) obj. 297.026 iterations 65
Cbc0038I Pass  63: suminf.    8.29132 (94) obj. 297.026 iterations 25
Cbc0038I Pass  64: suminf.   11.31750 (98) obj. 297.026 iterations 79
Cbc0038I Pass  65: suminf.    9.67914 (98) obj. 297.026 iterations 42
Cbc0038I Pass  66: suminf.   13.36968 (108) obj. 297.026 iterations 165
Cbc0038I Pass  67: suminf.   12.32471 (110) obj. 297.026 iterations 91
Cbc0038I Pass  68: suminf.   12.05271 (108) obj. 297.026 iterations 142
Cbc0038I Pass  69: suminf.   11.78687 (108) obj. 297.026 iterations 9
Cbc0038I Pass  70: suminf.   11.50683 (113) obj. 297.026 iterations 49
Cbc0038I Pass  71: suminf.    8.31257 (100) obj. 297.026 iterations 142
Cbc0038I Pass  72: suminf.    8.09531 (101) obj. 297.026 iterations 38
Cbc0038I Pass  73: suminf.    8.51121 (92) obj. 297.026 iterations 76
Cbc0038I Pass  74: suminf.    7.23519 (100) obj. 297.026 iterations 86
Cbc0038I Pass  75: suminf.    6.94290 (76) obj. 297.026 iterations 137
Cbc0038I Pass  76: suminf.    4.46263 (102) obj. 297.026 iterations 89
Cbc0038I Pass  77: suminf.   10.67882 (83) obj. 297.026 iterations 188
Cbc0038I Pass  78: suminf.    6.97985 (83) obj. 297.026 iterations 98
Cbc0038I Pass  79: suminf.    6.80199 (106) obj. 297.026 iterations 98
Cbc0038I Pass  80: suminf.    6.82363 (69) obj. 297.026 iterations 125
Cbc0038I Pass  81: suminf.    3.14269 (55) obj. 297.026 iterations 141
Cbc0038I Pass  82: suminf.   10.07408 (84) obj. 297.026 iterations 240
Cbc0038I Pass  83: suminf.    6.50996 (75) obj. 297.026 iterations 91
Cbc0038I Pass  84: suminf.    6.30303 (44) obj. 297.026 iterations 179
Cbc0038I Pass  85: suminf.    4.94503 (41) obj. 297.026 iterations 83
Cbc0038I Pass  86: suminf.    4.94503 (41) obj. 297.026 iterations 10
Cbc0038I Pass  87: suminf.    5.33534 (37) obj. 297.026 iterations 105
Cbc0038I Pass  88: suminf.    4.15815 (32) obj. 297.026 iterations 32
Cbc0038I Pass  89: suminf.    4.15815 (32) obj. 297.026 iterations 14
Cbc0038I Pass  90: suminf.    7.65751 (37) obj. 297.026 iterations 150
Cbc0038I Pass  91: suminf.    5.35630 (38) obj. 297.026 iterations 113
Cbc0038I Pass  92: suminf.    7.52899 (41) obj. 297.026 iterations 160
Cbc0038I Pass  93: suminf.    4.92020 (29) obj. 297.026 iterations 71
Cbc0038I Pass  94: suminf.    4.35533 (30) obj. 297.026 iterations 39
Cbc0038I Pass  95: suminf.    6.71482 (49) obj. 297.026 iterations 179
Cbc0038I Pass  96: suminf.    5.97060 (51) obj. 297.026 iterations 75
Cbc0038I Pass  97: suminf.    8.19988 (38) obj. 297.026 iterations 94
Cbc0038I Pass  98: suminf.    4.64858 (38) obj. 297.026 iterations 67
Cbc0038I Pass  99: suminf.    5.21078 (42) obj. 297.026 iterations 116
Cbc0038I Pass 100: suminf.    7.74763 (33) obj. 297.026 iterations 125
Cbc0038I Pass 101: suminf.    3.71105 (18) obj. 297.026 iterations 83
Cbc0038I Pass 102: suminf.    3.21598 (25) obj. 297.026 iterations 138
Cbc0038I Pass 103: suminf.    2.78639 (27) obj. 297.026 iterations 79
Cbc0038I Pass 104: suminf.    5.79129 (36) obj. 297.026 iterations 127
Cbc0038I Pass 105: suminf.    4.91578 (35) obj. 297.026 iterations 94
Cbc0038I Pass 106: suminf.    2.45898 (30) obj. 297.026 iterations 59
Cbc0038I Pass 107: suminf.    2.28117 (17) obj. 297.026 iterations 35
Cbc0038I Pass 108: suminf.    4.80889 (30) obj. 297.026 iterations 129
Cbc0038I Pass 109: suminf.    3.69189 (33) obj. 297.026 iterations 41
Cbc0038I Pass 110: suminf.    6.27836 (28) obj. 297.026 iterations 157
Cbc0038I Pass 111: suminf.    3.58461 (19) obj. 297.026 iterations 79
Cbc0038I Pass 112: suminf.    3.71105 (18) obj. 297.026 iterations 43
Cbc0038I Pass 113: suminf.    3.21598 (17) obj. 297.026 iterations 105
Cbc0038I Pass 114: suminf.    2.77258 (26) obj. 297.026 iterations 104
Cbc0038I Pass 115: suminf.    6.97439 (44) obj. 297.026 iterations 162
Cbc0038I Pass 116: suminf.    4.96760 (38) obj. 294.511 iterations 77
Cbc0038I Pass 117: suminf.    3.20659 (27) obj. 297.026 iterations 126
Cbc0038I Pass 118: suminf.    2.61573 (25) obj. 297.026 iterations 64
Cbc0038I Pass 119: suminf.    6.87089 (37) obj. 297.026 iterations 162
Cbc0038I Pass 120: suminf.    5.09859 (34) obj. 297.026 iterations 75
Cbc0038I Pass 121: suminf.    4.54306 (42) obj. 297.026 iterations 156
Cbc0038I Pass 122: suminf.    4.94503 (41) obj. 297.026 iterations 54
Cbc0038I Pass 123: suminf.    5.71767 (30) obj. 297.026 iterations 83
Cbc0038I Pass 124: suminf.    4.52222 (31) obj. 297.026 iterations 32
Cbc0038I Pass 125: suminf.    4.67294 (47) obj. 297.026 iterations 106
Cbc0038I Pass 126: suminf.    4.44419 (37) obj. 297.026 iterations 86
Cbc0038I Pass 127: suminf.    4.04182 (36) obj. 297.026 iterations 10
Cbc0038I Pass 128: suminf.    5.57156 (48) obj. 297.026 iterations 156
Cbc0038I Pass 129: suminf.    3.72956 (38) obj. 297.026 iterations 52
Cbc0038I Pass 130: suminf.    3.57864 (38) obj. 297.026 iterations 18
Cbc0038I Pass 131: suminf.    5.14456 (36) obj. 297.026 iterations 64
Cbc0038I Pass 132: suminf.    2.92226 (25) obj. 297.026 iterations 43
Cbc0038I Pass 133: suminf.    2.83585 (26) obj. 297.026 iterations 43
Cbc0038I Pass 134: suminf.    2.74076 (30) obj. 297.026 iterations 25
Cbc0038I Pass 135: suminf.    7.25667 (50) obj. 297.026 iterations 113
Cbc0038I Pass 136: suminf.    4.63320 (40) obj. 297.026 iterations 67
Cbc0038I Pass 137: suminf.    3.94334 (41) obj. 297.026 iterations 45
Cbc0038I Pass 138: suminf.    6.78683 (39) obj. 297.026 iterations 143
Cbc0038I Pass 139: suminf.    5.40808 (42) obj. 297.026 iterations 136
Cbc0038I Pass 140: suminf.   10.33204 (56) obj. 297.026 iterations 161
Cbc0038I Pass 141: suminf.    3.46563 (21) obj. 297.026 iterations 125
Cbc0038I Pass 142: suminf.    2.74193 (20) obj. 297.026 iterations 22
Cbc0038I Pass 143: suminf.    3.50427 (35) obj. 297.026 iterations 88
Cbc0038I Pass 144: suminf.    4.02468 (36) obj. 297.026 iterations 38
Cbc0038I Pass 145: suminf.    2.71321 (23) obj. 297.026 iterations 63
Cbc0038I Pass 146: suminf.    6.01446 (44) obj. 297.026 iterations 132
Cbc0038I Pass 147: suminf.    3.70057 (39) obj. 297.026 iterations 63
Cbc0038I Pass 148: suminf.    3.96058 (36) obj. 297.026 iterations 55
Cbc0038I Pass 149: suminf.    2.66019 (23) obj. 297.026 iterations 108
Cbc0038I Pass 150: suminf.    2.61573 (25) obj. 297.026 iterations 44
Cbc0038I Pass 151: suminf.    6.84737 (40) obj. 297.026 iterations 103
Cbc0038I Pass 152: suminf.   44.50631 (245) obj. 297.026 iterations 734
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 408 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2622 rows 916 columns, reduced to 1688 rows 508 columns - 153 fixed gives 687, 155 - ok now
Cbc0038I Full problem 2622 rows 916 columns, reduced to 183 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (2.62 seconds)
Cbc0038I After 2.62 seconds - Feasibility pump exiting with objective of 310 - took 1.79 seconds
Cbc0012I Integer solution of 310 found by feasibility pump after 0 iterations and 0 nodes (2.62 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 401 rows 121 columns
Cbc0031I 31 added rows had average density of 24.129032
Cbc0013I At root node, 31 cuts changed objective from 269.08655 to 271.10599 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 45 row cuts average 3.1 elements, 44 column cuts (44 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 123 row cuts average 91.7 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 310 best solution, best possible 271.10599 (3.94 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 296 rows 85 columns
Cbc0038I Full problem 2622 rows 916 columns, reduced to 462 rows 131 columns
Cbc0010I After 100 nodes, 4 on tree, 310 best solution, best possible 272.68048 (25.56 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 355 rows 107 columns
Cbc0010I After 200 nodes, 3 on tree, 310 best solution, best possible 272.68048 (43.29 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 505 rows 149 columns
Cbc0010I After 300 nodes, 5 on tree, 310 best solution, best possible 272.68048 (65.40 seconds)
Cbc0010I After 400 nodes, 10 on tree, 310 best solution, best possible 272.68048 (81.60 seconds)
Cbc0010I After 500 nodes, 5 on tree, 310 best solution, best possible 272.68048 (96.27 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 583 rows 171 columns
Cbc0038I Full problem 2622 rows 916 columns, reduced to 472 rows 147 columns
Cbc0010I After 600 nodes, 11 on tree, 310 best solution, best possible 272.68048 (113.96 seconds)
Cbc0010I After 700 nodes, 23 on tree, 310 best solution, best possible 272.68048 (127.72 seconds)
Cbc0010I After 800 nodes, 22 on tree, 310 best solution, best possible 272.68048 (139.54 seconds)
Cbc0010I After 900 nodes, 21 on tree, 310 best solution, best possible 272.68048 (151.10 seconds)
Cbc0010I After 1000 nodes, 15 on tree, 310 best solution, best possible 272.68048 (163.87 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 843 rows 261 columns
Cbc0010I After 1100 nodes, 10 on tree, 310 best solution, best possible 272.68048 (181.97 seconds)
Cbc0010I After 1200 nodes, 13 on tree, 310 best solution, best possible 272.68048 (197.71 seconds)
Cbc0010I After 1300 nodes, 16 on tree, 310 best solution, best possible 272.68048 (203.59 seconds)
Cbc0010I After 1400 nodes, 14 on tree, 310 best solution, best possible 272.68048 (211.39 seconds)
Cbc0010I After 1500 nodes, 10 on tree, 310 best solution, best possible 272.68048 (217.51 seconds)
Cbc0010I After 1600 nodes, 9 on tree, 310 best solution, best possible 272.68048 (227.23 seconds)
Cbc0010I After 1700 nodes, 10 on tree, 310 best solution, best possible 272.68048 (235.19 seconds)
Cbc0010I After 1800 nodes, 14 on tree, 310 best solution, best possible 272.68048 (243.02 seconds)
Cbc0010I After 1900 nodes, 6 on tree, 310 best solution, best possible 272.68048 (251.20 seconds)
Cbc0010I After 2000 nodes, 16 on tree, 310 best solution, best possible 272.68048 (258.07 seconds)
Cbc0010I After 2100 nodes, 14 on tree, 310 best solution, best possible 272.68048 (262.40 seconds)
Cbc0010I After 2200 nodes, 12 on tree, 310 best solution, best possible 272.68048 (270.60 seconds)
Cbc0010I After 2300 nodes, 10 on tree, 310 best solution, best possible 272.68048 (274.66 seconds)
Cbc0010I After 2400 nodes, 16 on tree, 310 best solution, best possible 272.68048 (276.99 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 452 rows 141 columns
Cbc0010I After 2500 nodes, 16 on tree, 310 best solution, best possible 272.68048 (279.34 seconds)
Cbc0010I After 2600 nodes, 12 on tree, 310 best solution, best possible 272.68048 (281.27 seconds)
Cbc0010I After 2700 nodes, 11 on tree, 310 best solution, best possible 272.68048 (283.58 seconds)
Cbc0016I Integer solution of 296 found by strong branching after 1427120 iterations and 2772 nodes (285.35 seconds)
Cbc0001I Search completed - best objective 296, took 1427313 iterations and 2773 nodes (285.37 seconds)
Cbc0032I Strong branching done 13708 times (800236 iterations), fathomed 264 nodes and fixed 639 variables
Cbc0035I Maximum depth 48, 9 variables fixed on reduced cost
Cuts at root node changed objective from 269.087 to 271.106
Probing was tried 521 times and created 37856 cuts of which 0 were active after adding rounds of cuts (1.053 seconds)
Gomory was tried 302 times and created 325 cuts of which 0 were active after adding rounds of cuts (0.634 seconds)
Knapsack was tried 302 times and created 1930 cuts of which 0 were active after adding rounds of cuts (0.267 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 302 times and created 4715 cuts of which 0 were active after adding rounds of cuts (0.381 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
ImplicationCuts was tried 32 times and created 164 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                296.00000000
Enumerated nodes:               2773
Total iterations:               1427313
Time (CPU seconds):             285.45
Time (Wallclock seconds):       285.55

Total time (CPU seconds):       285.47   (Wallclock seconds):       285.56

