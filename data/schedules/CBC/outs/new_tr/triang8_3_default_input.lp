Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_3_default_input.lp sec 1800 solve solu solutions/new_tr/triang8_3_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 291.729 - 0.61 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 100 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2622 rows, 916 columns (916 integer (880 of which binary)) and 8583 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 395 integers unsatisfied sum - 74.3249
Cbc0038I Pass   1: suminf.   23.43649 (175) obj. 348.698 iterations 799
Cbc0038I Pass   2: suminf.   21.81821 (153) obj. 375 iterations 174
Cbc0038I Pass   3: suminf.   19.21495 (152) obj. 375 iterations 30
Cbc0038I Pass   4: suminf.   14.89875 (126) obj. 382.125 iterations 127
Cbc0038I Pass   5: suminf.   13.78396 (107) obj. 383 iterations 30
Cbc0038I Pass   6: suminf.   11.90815 (91) obj. 383 iterations 225
Cbc0038I Pass   7: suminf.    8.68301 (90) obj. 383 iterations 85
Cbc0038I Pass   8: suminf.    7.60293 (35) obj. 383 iterations 165
Cbc0038I Pass   9: suminf.    1.04825 (22) obj. 383 iterations 77
Cbc0038I Pass  10: suminf.    0.49005 (16) obj. 383 iterations 25
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 383 iterations 31
Cbc0038I Solution found of 383
Cbc0038I Cleaned solution of 383
Cbc0038I Before mini branch and bound, 457 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.43 seconds)
Cbc0038I Round again with cutoff of 372.973
Cbc0038I Pass  12: suminf.   23.43649 (175) obj. 348.698 iterations 0
Cbc0038I Pass  13: suminf.   21.91052 (157) obj. 372.973 iterations 135
Cbc0038I Pass  14: suminf.   19.56587 (163) obj. 372.973 iterations 42
Cbc0038I Pass  15: suminf.   16.76853 (131) obj. 372.973 iterations 150
Cbc0038I Pass  16: suminf.   16.25667 (130) obj. 372.973 iterations 90
Cbc0038I Pass  17: suminf.   12.00971 (106) obj. 372.973 iterations 230
Cbc0038I Pass  18: suminf.    7.45417 (119) obj. 372.973 iterations 104
Cbc0038I Pass  19: suminf.    6.80820 (38) obj. 372.973 iterations 215
Cbc0038I Pass  20: suminf.    2.75804 (35) obj. 372.973 iterations 78
Cbc0038I Pass  21: suminf.   10.28650 (54) obj. 372.973 iterations 252
Cbc0038I Pass  22: suminf.    6.95131 (57) obj. 372.973 iterations 128
Cbc0038I Pass  23: suminf.    5.53601 (59) obj. 372.973 iterations 37
Cbc0038I Pass  24: suminf.    8.84608 (79) obj. 372.973 iterations 140
Cbc0038I Pass  25: suminf.    8.16089 (79) obj. 372.973 iterations 66
Cbc0038I Pass  26: suminf.    8.10846 (82) obj. 372.973 iterations 18
Cbc0038I Pass  27: suminf.    5.81936 (56) obj. 372.973 iterations 153
Cbc0038I Pass  28: suminf.    5.63126 (50) obj. 372.973 iterations 15
Cbc0038I Pass  29: suminf.   14.94686 (75) obj. 372.973 iterations 187
Cbc0038I Pass  30: suminf.    9.26122 (61) obj. 372.973 iterations 119
Cbc0038I Pass  31: suminf.    9.32554 (62) obj. 372.973 iterations 35
Cbc0038I Pass  32: suminf.    3.87589 (47) obj. 372.973 iterations 170
Cbc0038I Pass  33: suminf.    2.60320 (33) obj. 372.973 iterations 92
Cbc0038I Pass  34: suminf.    7.32239 (58) obj. 372.973 iterations 125
Cbc0038I Pass  35: suminf.    3.90660 (29) obj. 372.973 iterations 77
Cbc0038I Pass  36: suminf.    2.74486 (32) obj. 372.973 iterations 34
Cbc0038I Pass  37: suminf.    8.24839 (33) obj. 372.973 iterations 72
Cbc0038I Pass  38: suminf.    2.64597 (29) obj. 372.973 iterations 93
Cbc0038I Pass  39: suminf.    8.04448 (60) obj. 372.973 iterations 220
Cbc0038I Pass  40: suminf.    5.56075 (52) obj. 372.973 iterations 70
Cbc0038I Pass  41: suminf.    8.05762 (57) obj. 372.973 iterations 149
Cbc0038I Pass  42: suminf.    3.67774 (43) obj. 372.973 iterations 89
Cbc0038I Pass  43: suminf.    2.59982 (31) obj. 372.973 iterations 20
Cbc0038I Pass  44: suminf.   11.01155 (79) obj. 372.973 iterations 244
Cbc0038I Pass  45: suminf.    8.76522 (60) obj. 372.973 iterations 89
Cbc0038I Pass  46: suminf.   12.97948 (78) obj. 372.973 iterations 297
Cbc0038I Pass  47: suminf.    7.70292 (71) obj. 372.973 iterations 90
Cbc0038I Pass  48: suminf.    6.33644 (57) obj. 372.973 iterations 67
Cbc0038I Pass  49: suminf.    8.46216 (69) obj. 372.973 iterations 183
Cbc0038I Pass  50: suminf.    7.33726 (66) obj. 372.973 iterations 94
Cbc0038I Pass  51: suminf.    6.27698 (54) obj. 372.973 iterations 28
Cbc0038I Pass  52: suminf.    7.12504 (48) obj. 366.925 iterations 136
Cbc0038I Pass  53: suminf.    3.68116 (45) obj. 372.973 iterations 88
Cbc0038I Pass  54: suminf.    2.60320 (33) obj. 372.973 iterations 24
Cbc0038I Pass  55: suminf.   10.61066 (75) obj. 372.973 iterations 189
Cbc0038I Pass  56: suminf.    7.39668 (61) obj. 372.973 iterations 112
Cbc0038I Pass  57: suminf.    6.08303 (66) obj. 372.973 iterations 68
Cbc0038I Pass  58: suminf.   15.96893 (98) obj. 372.973 iterations 325
Cbc0038I Pass  59: suminf.   12.05401 (92) obj. 372.973 iterations 135
Cbc0038I Pass  60: suminf.    9.32772 (81) obj. 372.973 iterations 48
Cbc0038I Pass  61: suminf.    9.61761 (75) obj. 372.973 iterations 29
Cbc0038I Pass  62: suminf.    9.11852 (61) obj. 372.973 iterations 123
Cbc0038I Pass  63: suminf.    6.69480 (72) obj. 372.973 iterations 186
Cbc0038I Pass  64: suminf.    7.08669 (78) obj. 372.973 iterations 10
Cbc0038I Pass  65: suminf.    8.21746 (69) obj. 372.973 iterations 99
Cbc0038I Pass  66: suminf.    7.16066 (104) obj. 372.973 iterations 268
Cbc0038I Pass  67: suminf.    8.10388 (75) obj. 372.973 iterations 97
Cbc0038I Pass  68: suminf.    7.08103 (69) obj. 372.973 iterations 47
Cbc0038I Pass  69: suminf.    7.03791 (58) obj. 372.973 iterations 29
Cbc0038I Pass  70: suminf.    7.90392 (65) obj. 372.973 iterations 122
Cbc0038I Pass  71: suminf.    6.75829 (69) obj. 372.973 iterations 72
Cbc0038I Pass  72: suminf.    6.75829 (69) obj. 372.973 iterations 17
Cbc0038I Pass  73: suminf.    7.60342 (68) obj. 372.973 iterations 215
Cbc0038I Pass  74: suminf.    7.91072 (76) obj. 372.973 iterations 125
Cbc0038I Pass  75: suminf.    6.90986 (72) obj. 372.973 iterations 54
Cbc0038I Pass  76: suminf.    8.59593 (69) obj. 372.973 iterations 161
Cbc0038I Pass  77: suminf.    6.58999 (59) obj. 372.973 iterations 89
Cbc0038I Pass  78: suminf.   10.64513 (76) obj. 372.973 iterations 138
Cbc0038I Pass  79: suminf.    9.29542 (78) obj. 372.973 iterations 52
Cbc0038I Pass  80: suminf.    9.38213 (102) obj. 372.973 iterations 55
Cbc0038I Pass  81: suminf.    9.10950 (58) obj. 372.973 iterations 192
Cbc0038I Pass  82: suminf.    7.14712 (61) obj. 372.973 iterations 70
Cbc0038I Pass  83: suminf.    7.14712 (61) obj. 372.973 iterations 5
Cbc0038I Pass  84: suminf.    7.95704 (80) obj. 372.973 iterations 131
Cbc0038I Pass  85: suminf.    6.31403 (102) obj. 372.973 iterations 75
Cbc0038I Pass  86: suminf.    6.31403 (102) obj. 372.973 iterations 13
Cbc0038I Pass  87: suminf.    9.16241 (71) obj. 372.973 iterations 120
Cbc0038I Pass  88: suminf.    7.73798 (59) obj. 372.973 iterations 68
Cbc0038I Pass  89: suminf.    9.45672 (70) obj. 372.973 iterations 115
Cbc0038I Pass  90: suminf.    6.75829 (69) obj. 372.973 iterations 104
Cbc0038I Pass  91: suminf.    6.75829 (69) obj. 372.973 iterations 6
Cbc0038I Pass  92: suminf.   13.19070 (78) obj. 372.973 iterations 210
Cbc0038I Pass  93: suminf.   10.09401 (66) obj. 372.973 iterations 104
Cbc0038I Pass  94: suminf.    8.93900 (77) obj. 372.973 iterations 81
Cbc0038I Pass  95: suminf.   10.89799 (79) obj. 372.973 iterations 169
Cbc0038I Pass  96: suminf.    7.44989 (66) obj. 372.973 iterations 85
Cbc0038I Pass  97: suminf.    7.09660 (66) obj. 372.973 iterations 17
Cbc0038I Pass  98: suminf.    7.58385 (65) obj. 372.973 iterations 214
Cbc0038I Pass  99: suminf.    7.33726 (66) obj. 372.973 iterations 120
Cbc0038I Pass 100: suminf.    6.27698 (54) obj. 372.973 iterations 40
Cbc0038I Pass 101: suminf.   12.52920 (62) obj. 372.973 iterations 184
Cbc0038I Pass 102: suminf.    3.90660 (29) obj. 372.973 iterations 173
Cbc0038I Pass 103: suminf.    2.74486 (32) obj. 372.973 iterations 53
Cbc0038I Pass 104: suminf.    9.04573 (45) obj. 372.973 iterations 135
Cbc0038I Pass 105: suminf.    3.80714 (27) obj. 372.973 iterations 105
Cbc0038I Pass 106: suminf.    2.64597 (29) obj. 372.973 iterations 43
Cbc0038I Pass 107: suminf.    7.90784 (54) obj. 372.973 iterations 185
Cbc0038I Pass 108: suminf.    5.56075 (52) obj. 372.973 iterations 104
Cbc0038I Pass 109: suminf.    9.03927 (58) obj. 372.973 iterations 105
Cbc0038I Pass 110: suminf.    6.58311 (70) obj. 372.973 iterations 83
Cbc0038I Pass 111: suminf.   50.02872 (298) obj. 372.973 iterations 615
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 314 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.50 seconds)
Cbc0038I After 2.50 seconds - Feasibility pump exiting with objective of 383 - took 1.27 seconds
Cbc0012I Integer solution of 383 found by feasibility pump after 0 iterations and 0 nodes (2.50 seconds)
Cbc0012I Integer solution of 376 found by DiveCoefficient after 0 iterations and 0 nodes (2.67 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 1450 rows 393 columns - 134 fixed gives 400, 89 - ok now
Cbc0031I 28 added rows had average density of 52.285714
Cbc0013I At root node, 28 cuts changed objective from 291.73175 to 297.15356 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.0 elements, 4 column cuts (4 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 120 row cuts average 515.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 116.5 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 68 row cuts average 48.4 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 376 best solution, best possible 298 (4.50 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 760 rows 217 columns
Cbc0038I Full problem 2622 rows 916 columns, reduced to 815 rows 235 columns
Cbc0010I After 100 nodes, 3 on tree, 376 best solution, best possible 307 (29.62 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 888 rows 267 columns
Cbc0010I After 200 nodes, 7 on tree, 376 best solution, best possible 315 (45.65 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 938 rows 280 columns
Cbc0010I After 300 nodes, 14 on tree, 376 best solution, best possible 315 (55.46 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 875 rows 260 columns
Cbc0010I After 400 nodes, 8 on tree, 376 best solution, best possible 315 (70.36 seconds)
Cbc0010I After 500 nodes, 10 on tree, 376 best solution, best possible 315 (79.68 seconds)
Cbc0010I After 600 nodes, 10 on tree, 376 best solution, best possible 315 (90.44 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 622 rows 179 columns
Cbc0038I Full problem 2622 rows 916 columns, reduced to 711 rows 202 columns
Cbc0010I After 700 nodes, 9 on tree, 376 best solution, best possible 315 (97.84 seconds)
Cbc0010I After 800 nodes, 8 on tree, 376 best solution, best possible 315 (105.85 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 634 rows 185 columns
Cbc0010I After 900 nodes, 23 on tree, 376 best solution, best possible 318 (115.14 seconds)
Cbc0010I After 1000 nodes, 20 on tree, 376 best solution, best possible 318 (122.00 seconds)
Cbc0010I After 1100 nodes, 21 on tree, 376 best solution, best possible 318 (130.70 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 625 rows 182 columns
Cbc0038I Full problem 2622 rows 916 columns, reduced to 655 rows 189 columns
Cbc0010I After 1200 nodes, 19 on tree, 376 best solution, best possible 318 (142.59 seconds)
Cbc0010I After 1300 nodes, 18 on tree, 376 best solution, best possible 318 (153.86 seconds)
Cbc0010I After 1400 nodes, 20 on tree, 376 best solution, best possible 318 (166.24 seconds)
Cbc0010I After 1500 nodes, 15 on tree, 376 best solution, best possible 318 (176.28 seconds)
Cbc0010I After 1600 nodes, 14 on tree, 376 best solution, best possible 318 (185.63 seconds)
Cbc0010I After 1700 nodes, 15 on tree, 376 best solution, best possible 318 (195.16 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 733 rows 210 columns
Cbc0010I After 1800 nodes, 16 on tree, 376 best solution, best possible 318 (206.64 seconds)
Cbc0010I After 1900 nodes, 14 on tree, 376 best solution, best possible 318 (219.67 seconds)
Cbc0010I After 2000 nodes, 11 on tree, 376 best solution, best possible 318 (226.50 seconds)
Cbc0010I After 2100 nodes, 5 on tree, 376 best solution, best possible 318 (242.88 seconds)
Cbc0010I After 2200 nodes, 11 on tree, 376 best solution, best possible 318 (253.13 seconds)
Cbc0010I After 2300 nodes, 9 on tree, 376 best solution, best possible 318 (263.69 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 946 rows 279 columns
Cbc0010I After 2400 nodes, 7 on tree, 376 best solution, best possible 318 (273.77 seconds)
Cbc0010I After 2500 nodes, 4 on tree, 376 best solution, best possible 318 (288.54 seconds)
Cbc0010I After 2600 nodes, 13 on tree, 376 best solution, best possible 318 (298.06 seconds)
Cbc0010I After 2700 nodes, 8 on tree, 376 best solution, best possible 318 (306.41 seconds)
Cbc0010I After 2800 nodes, 15 on tree, 376 best solution, best possible 318 (313.77 seconds)
Cbc0010I After 2900 nodes, 8 on tree, 376 best solution, best possible 318 (321.85 seconds)
Cbc0010I After 3000 nodes, 13 on tree, 376 best solution, best possible 318 (329.31 seconds)
Cbc0010I After 3100 nodes, 16 on tree, 376 best solution, best possible 318 (337.03 seconds)
Cbc0010I After 3200 nodes, 6 on tree, 376 best solution, best possible 318 (343.32 seconds)
Cbc0010I After 3300 nodes, 11 on tree, 376 best solution, best possible 318 (351.12 seconds)
Cbc0010I After 3400 nodes, 25 on tree, 376 best solution, best possible 318 (357.76 seconds)
Cbc0010I After 3500 nodes, 20 on tree, 376 best solution, best possible 318 (362.86 seconds)
Cbc0010I After 3600 nodes, 12 on tree, 376 best solution, best possible 318 (373.03 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 946 rows 284 columns
Cbc0010I After 3700 nodes, 16 on tree, 376 best solution, best possible 318 (383.55 seconds)
Cbc0010I After 3800 nodes, 6 on tree, 376 best solution, best possible 318 (392.96 seconds)
Cbc0010I After 3900 nodes, 9 on tree, 376 best solution, best possible 319 (401.64 seconds)
Cbc0010I After 4000 nodes, 9 on tree, 376 best solution, best possible 319 (408.13 seconds)
Cbc0010I After 4100 nodes, 10 on tree, 376 best solution, best possible 319 (417.65 seconds)
Cbc0010I After 4200 nodes, 4 on tree, 376 best solution, best possible 319 (421.77 seconds)
Cbc0010I After 4300 nodes, 12 on tree, 376 best solution, best possible 320 (434.46 seconds)
Cbc0010I After 4400 nodes, 10 on tree, 376 best solution, best possible 320 (442.60 seconds)
Cbc0010I After 4500 nodes, 13 on tree, 376 best solution, best possible 320 (448.21 seconds)
Cbc0010I After 4600 nodes, 17 on tree, 376 best solution, best possible 320 (453.62 seconds)
Cbc0010I After 4700 nodes, 10 on tree, 376 best solution, best possible 321 (461.05 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 540 rows 166 columns
Cbc0010I After 4800 nodes, 7 on tree, 376 best solution, best possible 321 (467.17 seconds)
Cbc0010I After 4900 nodes, 11 on tree, 376 best solution, best possible 321 (475.87 seconds)
Cbc0010I After 5000 nodes, 20 on tree, 376 best solution, best possible 321 (486.22 seconds)
Cbc0010I After 5100 nodes, 19 on tree, 376 best solution, best possible 321 (494.51 seconds)
Cbc0010I After 5200 nodes, 10 on tree, 376 best solution, best possible 321 (500.41 seconds)
Cbc0010I After 5300 nodes, 19 on tree, 376 best solution, best possible 321 (506.04 seconds)
Cbc0010I After 5400 nodes, 12 on tree, 376 best solution, best possible 321 (510.96 seconds)
Cbc0010I After 5500 nodes, 7 on tree, 376 best solution, best possible 321 (515.93 seconds)
Cbc0010I After 5600 nodes, 8 on tree, 376 best solution, best possible 321 (520.81 seconds)
Cbc0010I After 5700 nodes, 11 on tree, 376 best solution, best possible 322 (528.90 seconds)
Cbc0010I After 5800 nodes, 12 on tree, 376 best solution, best possible 322 (535.17 seconds)
Cbc0010I After 5900 nodes, 14 on tree, 376 best solution, best possible 322 (547.47 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 844 rows 251 columns
Cbc0010I After 6000 nodes, 13 on tree, 376 best solution, best possible 322 (554.33 seconds)
Cbc0010I After 6100 nodes, 8 on tree, 376 best solution, best possible 322 (561.77 seconds)
Cbc0010I After 6200 nodes, 14 on tree, 376 best solution, best possible 322 (574.71 seconds)
Cbc0010I After 6300 nodes, 7 on tree, 376 best solution, best possible 323 (581.89 seconds)
Cbc0010I After 6400 nodes, 8 on tree, 376 best solution, best possible 323 (588.73 seconds)
Cbc0010I After 6500 nodes, 14 on tree, 376 best solution, best possible 323 (595.10 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 730 rows 209 columns
Cbc0010I After 6600 nodes, 15 on tree, 376 best solution, best possible 323 (602.13 seconds)
Cbc0010I After 6700 nodes, 15 on tree, 376 best solution, best possible 323 (609.18 seconds)
Cbc0010I After 6800 nodes, 6 on tree, 376 best solution, best possible 323 (616.74 seconds)
Cbc0010I After 6900 nodes, 17 on tree, 376 best solution, best possible 323 (621.76 seconds)
Cbc0010I After 7000 nodes, 16 on tree, 376 best solution, best possible 323 (630.01 seconds)
Cbc0010I After 7100 nodes, 15 on tree, 376 best solution, best possible 323 (634.97 seconds)
Cbc0010I After 7200 nodes, 18 on tree, 376 best solution, best possible 324 (640.55 seconds)
Cbc0010I After 7300 nodes, 18 on tree, 376 best solution, best possible 324 (644.73 seconds)
Cbc0010I After 7400 nodes, 18 on tree, 376 best solution, best possible 324 (649.68 seconds)
Cbc0010I After 7500 nodes, 16 on tree, 376 best solution, best possible 324 (659.35 seconds)
Cbc0010I After 7600 nodes, 18 on tree, 376 best solution, best possible 324 (666.22 seconds)
Cbc0010I After 7700 nodes, 9 on tree, 376 best solution, best possible 324 (676.59 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 687 rows 186 columns
Cbc0010I After 7800 nodes, 7 on tree, 376 best solution, best possible 325 (684.27 seconds)
Cbc0010I After 7900 nodes, 18 on tree, 376 best solution, best possible 325 (691.26 seconds)
Cbc0010I After 8000 nodes, 6 on tree, 376 best solution, best possible 325 (699.10 seconds)
Cbc0010I After 8100 nodes, 12 on tree, 376 best solution, best possible 325 (704.06 seconds)
Cbc0010I After 8200 nodes, 15 on tree, 376 best solution, best possible 325 (708.65 seconds)
Cbc0010I After 8300 nodes, 11 on tree, 376 best solution, best possible 325 (714.07 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 754 rows 217 columns
Cbc0010I After 8400 nodes, 7 on tree, 376 best solution, best possible 325 (719.42 seconds)
Cbc0010I After 8500 nodes, 10 on tree, 376 best solution, best possible 325 (725.33 seconds)
Cbc0010I After 8600 nodes, 8 on tree, 376 best solution, best possible 325 (730.35 seconds)
Cbc0010I After 8700 nodes, 24 on tree, 376 best solution, best possible 326 (735.55 seconds)
Cbc0010I After 8800 nodes, 18 on tree, 376 best solution, best possible 326 (741.98 seconds)
Cbc0010I After 8900 nodes, 14 on tree, 376 best solution, best possible 326 (745.16 seconds)
Cbc0010I After 9000 nodes, 20 on tree, 376 best solution, best possible 326 (749.60 seconds)
Cbc0010I After 9100 nodes, 32 on tree, 376 best solution, best possible 326 (754.86 seconds)
Cbc0010I After 9200 nodes, 25 on tree, 376 best solution, best possible 326 (760.63 seconds)
Cbc0010I After 9300 nodes, 23 on tree, 376 best solution, best possible 326 (767.22 seconds)
Cbc0010I After 9400 nodes, 34 on tree, 376 best solution, best possible 326 (773.07 seconds)
Cbc0010I After 9500 nodes, 28 on tree, 376 best solution, best possible 326 (778.33 seconds)
Cbc0038I Full problem 2622 rows 916 columns, reduced to 671 rows 201 columns
Cbc0010I After 9600 nodes, 25 on tree, 376 best solution, best possible 326 (782.94 seconds)
Cbc0010I After 9700 nodes, 25 on tree, 376 best solution, best possible 326 (786.30 seconds)
Cbc0010I After 9800 nodes, 21 on tree, 376 best solution, best possible 326 (790.47 seconds)
Cbc0010I After 9900 nodes, 21 on tree, 376 best solution, best possible 326 (800.36 seconds)
Cbc0010I After 10000 nodes, 18 on tree, 376 best solution, best possible 326 (817.25 seconds)
Cbc0010I After 10100 nodes, 28 on tree, 376 best solution, best possible 326 (825.23 seconds)
Cbc0010I After 10200 nodes, 16 on tree, 376 best solution, best possible 326 (832.25 seconds)
Cbc0010I After 10300 nodes, 12 on tree, 376 best solution, best possible 326 (840.83 seconds)
Cbc0010I After 10400 nodes, 7 on tree, 376 best solution, best possible 326 (847.80 seconds)
Cbc0010I After 10500 nodes, 6 on tree, 376 best solution, best possible 326 (854.62 seconds)
Cbc0010I After 10600 nodes, 19 on tree, 376 best solution, best possible 327 (862.61 seconds)
Cbc0010I After 10700 nodes, 12 on tree, 376 best solution, best possible 327 (867.47 seconds)
Cbc0010I After 10800 nodes, 8 on tree, 376 best solution, best possible 327 (873.64 seconds)
Cbc0010I After 10900 nodes, 16 on tree, 376 best solution, best possible 327 (883.03 seconds)
Cbc0010I After 11000 nodes, 16 on tree, 376 best solution, best possible 327 (894.45 seconds)
Cbc0010I After 11100 nodes, 29 on tree, 376 best solution, best possible 327 (906.38 seconds)
Cbc0010I After 11200 nodes, 18 on tree, 376 best solution, best possible 327 (916.39 seconds)
Cbc0010I After 11300 nodes, 17 on tree, 376 best solution, best possible 327 (924.73 seconds)
Cbc0010I After 11400 nodes, 18 on tree, 376 best solution, best possible 327 (933.35 seconds)
Cbc0010I After 11500 nodes, 18 on tree, 376 best solution, best possible 327 (938.78 seconds)
Cbc0010I After 11600 nodes, 15 on tree, 376 best solution, best possible 327 (944.70 seconds)
Cbc0010I After 11700 nodes, 14 on tree, 376 best solution, best possible 327 (952.33 seconds)
Cbc0010I After 11800 nodes, 7 on tree, 376 best solution, best possible 327 (962.72 seconds)
Cbc0010I After 11900 nodes, 9 on tree, 376 best solution, best possible 328 (971.16 seconds)
Cbc0010I After 12000 nodes, 8 on tree, 376 best solution, best possible 328 (976.82 seconds)
Cbc0010I After 12100 nodes, 14 on tree, 376 best solution, best possible 328 (980.52 seconds)
Cbc0010I After 12200 nodes, 14 on tree, 376 best solution, best possible 328 (985.10 seconds)
Cbc0010I After 12300 nodes, 13 on tree, 376 best solution, best possible 328 (991.44 seconds)
Cbc0010I After 12400 nodes, 6 on tree, 376 best solution, best possible 328 (996.15 seconds)
Cbc0016I Integer solution of 328 found by strong branching after 5409235 iterations and 12471 nodes (999.96 seconds)
Cbc0001I Search completed - best objective 328, took 5409235 iterations and 12471 nodes (999.96 seconds)
Cbc0032I Strong branching done 24784 times (1346925 iterations), fathomed 604 nodes and fixed 2256 variables
Cbc0035I Maximum depth 75, 0 variables fixed on reduced cost
Cuts at root node changed objective from 291.732 to 298
Probing was tried 2547 times and created 323049 cuts of which 0 were active after adding rounds of cuts (7.799 seconds)
Gomory was tried 1292 times and created 2234 cuts of which 0 were active after adding rounds of cuts (3.235 seconds)
Knapsack was tried 1292 times and created 5660 cuts of which 0 were active after adding rounds of cuts (1.105 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 1292 times and created 21439 cuts of which 0 were active after adding rounds of cuts (1.557 seconds)
ZeroHalf was tried 1292 times and created 2616 cuts of which 0 were active after adding rounds of cuts (12.791 seconds)
ImplicationCuts was tried 41 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Optimal solution found

Objective value:                328.00000000
Enumerated nodes:               12471
Total iterations:               5409235
Time (CPU seconds):             1000.04
Time (Wallclock seconds):       1001.07

Total time (CPU seconds):       1000.05   (Wallclock seconds):       1001.08

