Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag265_down_left_input.lp sec 1800 solve solu transitive/dag265_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 655617 - 0.13 seconds
Cgl0002I 1350 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 691 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 76 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 3767 rows, 1210 columns (1210 integer (1165 of which binary)) and 12424 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1210 objects (1210 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 524 integers unsatisfied sum - 105.371
Cbc0038I Pass   1: (1.28 seconds) suminf.   55.05207 (376) obj. 844836 iterations 1614
Cbc0038I Pass   2: (1.31 seconds) suminf.   51.35701 (368) obj. 860891 iterations 128
Cbc0038I Pass   3: (1.34 seconds) suminf.   46.90926 (331) obj. 856784 iterations 133
Cbc0038I Pass   4: (1.40 seconds) suminf.   42.18210 (352) obj. 877368 iterations 341
Cbc0038I Pass   5: (1.40 seconds) suminf.   42.22863 (352) obj. 877357 iterations 5
Cbc0038I Pass   6: (1.46 seconds) suminf.   35.30190 (313) obj. 879856 iterations 325
Cbc0038I Pass   7: (1.50 seconds) suminf.   35.80525 (333) obj. 877015 iterations 276
Cbc0038I Pass   8: (1.51 seconds) suminf.   35.43125 (334) obj. 877015 iterations 6
Cbc0038I Pass   9: (1.56 seconds) suminf.   34.30117 (316) obj. 876976 iterations 318
Cbc0038I Pass  10: (1.57 seconds) suminf.   34.30961 (314) obj. 876963 iterations 25
Cbc0038I Pass  11: (1.60 seconds) suminf.   35.28879 (331) obj. 878252 iterations 179
Cbc0038I Pass  12: (1.62 seconds) suminf.   34.99296 (316) obj. 878420 iterations 101
Cbc0038I Pass  13: (1.65 seconds) suminf.   34.09530 (332) obj. 878749 iterations 147
Cbc0038I Pass  14: (1.68 seconds) suminf.   34.03275 (330) obj. 876835 iterations 119
Cbc0038I Pass  15: (1.68 seconds) suminf.   34.09055 (336) obj. 876841 iterations 13
Cbc0038I Pass  16: (1.74 seconds) suminf.   36.24512 (330) obj. 877944 iterations 388
Cbc0038I Pass  17: (1.75 seconds) suminf.   36.04871 (325) obj. 879018 iterations 59
Cbc0038I Pass  18: (1.80 seconds) suminf.   33.35498 (319) obj. 874860 iterations 299
Cbc0038I Pass  19: (1.83 seconds) suminf.   34.15662 (324) obj. 878488 iterations 130
Cbc0038I Pass  20: (1.85 seconds) suminf.   33.90075 (310) obj. 966891 iterations 100
Cbc0038I Pass  21: (1.87 seconds) suminf.   32.19412 (309) obj. 968698 iterations 132
Cbc0038I Pass  22: (1.88 seconds) suminf.   32.79069 (308) obj. 969763 iterations 13
Cbc0038I Pass  23: (1.91 seconds) suminf.   33.43128 (329) obj. 963009 iterations 204
Cbc0038I Pass  24: (1.94 seconds) suminf.   32.29647 (334) obj. 979445 iterations 118
Cbc0038I Pass  25: (2.00 seconds) suminf.   30.94652 (314) obj. 999585 iterations 407
Cbc0038I Pass  26: (2.03 seconds) suminf.   29.74634 (300) obj. 997158 iterations 133
Cbc0038I Pass  27: (2.03 seconds) suminf.   29.19346 (306) obj. 997158 iterations 13
Cbc0038I Pass  28: (2.07 seconds) suminf.   30.59084 (297) obj. 950361 iterations 221
Cbc0038I Pass  29: (2.09 seconds) suminf.   30.80315 (306) obj. 950462 iterations 109
Cbc0038I Pass  30: (2.15 seconds) suminf.   31.04531 (294) obj. 952718 iterations 380
Cbc0038I Pass  31: (2.20 seconds) suminf.   27.81983 (291) obj. 992074 iterations 330
Cbc0038I Pass  32: (2.20 seconds) suminf.   27.81983 (291) obj. 992074 iterations 5
Cbc0038I Pass  33: (2.22 seconds) suminf.   29.20233 (291) obj. 1.10644e+06 iterations 99
Cbc0038I Pass  34: (2.24 seconds) suminf.   28.70299 (287) obj. 1.10703e+06 iterations 105
Cbc0038I Pass  35: (2.28 seconds) suminf.   30.58126 (278) obj. 1.10703e+06 iterations 156
Cbc0038I Pass  36: (2.30 seconds) suminf.   29.16293 (283) obj. 1.10673e+06 iterations 123
Cbc0038I Pass  37: (2.33 seconds) suminf.   30.00750 (269) obj. 1.08897e+06 iterations 171
Cbc0038I Pass  38: (2.36 seconds) suminf.   27.64370 (301) obj. 1.10569e+06 iterations 160
Cbc0038I Pass  39: (2.39 seconds) suminf.   27.30932 (274) obj. 1.1058e+06 iterations 166
Cbc0038I Pass  40: (2.41 seconds) suminf.   27.02318 (286) obj. 1.10572e+06 iterations 99
Cbc0038I Pass  41: (2.43 seconds) suminf.   28.94619 (261) obj. 1.07503e+06 iterations 88
Cbc0038I Pass  42: (2.61 seconds) suminf.   90.95784 (506) obj. 1.14211e+06 iterations 1274
Cbc0038I Pass  43: (2.71 seconds) suminf.   66.61809 (425) obj. 1.14818e+06 iterations 643
Cbc0038I Pass  44: (2.73 seconds) suminf.   64.32212 (415) obj. 1.15385e+06 iterations 58
Cbc0038I Pass  45: (2.75 seconds) suminf.   64.15913 (416) obj. 1.14779e+06 iterations 71
Cbc0038I Pass  46: (2.79 seconds) suminf.   56.13178 (377) obj. 1.14014e+06 iterations 252
Cbc0038I Pass  47: (2.82 seconds) suminf.   54.88787 (369) obj. 1.13863e+06 iterations 124
Cbc0038I Pass  48: (2.87 seconds) suminf.   50.86405 (361) obj. 1.11312e+06 iterations 269
Cbc0038I Pass  49: (2.88 seconds) suminf.   50.18568 (385) obj. 1.11047e+06 iterations 81
Cbc0038I Pass  50: (2.92 seconds) suminf.   47.93282 (362) obj. 1.10482e+06 iterations 203
Cbc0038I Pass  51: (2.94 seconds) suminf.   46.20652 (349) obj. 1.10151e+06 iterations 81
Cbc0038I Pass  52: (2.98 seconds) suminf.   47.01556 (362) obj. 1.10615e+06 iterations 165
Cbc0038I Pass  53: (2.99 seconds) suminf.   46.91756 (362) obj. 1.09956e+06 iterations 56
Cbc0038I Pass  54: (3.05 seconds) suminf.   37.97226 (336) obj. 1.12667e+06 iterations 367
Cbc0038I Pass  55: (3.06 seconds) suminf.   36.95198 (333) obj. 1.14655e+06 iterations 73
Cbc0038I Pass  56: (3.11 seconds) suminf.   33.15484 (323) obj. 1.14677e+06 iterations 221
Cbc0038I Pass  57: (3.12 seconds) suminf.   32.16016 (313) obj. 1.14743e+06 iterations 29
Cbc0038I Pass  58: (3.16 seconds) suminf.   32.61795 (314) obj. 1.15938e+06 iterations 211
Cbc0038I Pass  59: (3.17 seconds) suminf.   30.70189 (303) obj. 1.14858e+06 iterations 88
Cbc0038I Pass  60: (3.21 seconds) suminf.   30.43981 (308) obj. 1.15784e+06 iterations 196
Cbc0038I Pass  61: (3.22 seconds) suminf.   28.49440 (308) obj. 1.15087e+06 iterations 52
Cbc0038I Pass  62: (3.27 seconds) suminf.   27.87101 (308) obj. 1.15041e+06 iterations 266
Cbc0038I Pass  63: (3.29 seconds) suminf.   24.13972 (291) obj. 1.14068e+06 iterations 117
Cbc0038I Pass  64: (3.33 seconds) suminf.   24.21628 (295) obj. 1.13304e+06 iterations 176
Cbc0038I Pass  65: (3.33 seconds) suminf.   23.78470 (282) obj. 1.1334e+06 iterations 22
Cbc0038I Pass  66: (3.39 seconds) suminf.   26.29434 (320) obj. 1.088e+06 iterations 366
Cbc0038I Pass  67: (3.42 seconds) suminf.   23.63513 (304) obj. 1.08854e+06 iterations 133
Cbc0038I Pass  68: (3.45 seconds) suminf.   25.83376 (294) obj. 1.07925e+06 iterations 153
Cbc0038I Pass  69: (3.47 seconds) suminf.   24.64534 (301) obj. 1.06846e+06 iterations 113
Cbc0038I Pass  70: (3.50 seconds) suminf.   25.05681 (277) obj. 1.08265e+06 iterations 160
Cbc0038I Pass  71: (3.52 seconds) suminf.   23.00885 (286) obj. 1.08778e+06 iterations 75
Cbc0038I Pass  72: (3.57 seconds) suminf.   27.02156 (296) obj. 1.08941e+06 iterations 370
Cbc0038I Pass  73: (3.61 seconds) suminf.   23.06556 (292) obj. 1.0888e+06 iterations 196
Cbc0038I Pass  74: (3.69 seconds) suminf.   25.78312 (303) obj. 1.11004e+06 iterations 538
Cbc0038I Pass  75: (3.72 seconds) suminf.   23.51797 (281) obj. 1.10655e+06 iterations 150
Cbc0038I Pass  76: (3.77 seconds) suminf.   22.38673 (262) obj. 1.06777e+06 iterations 345
Cbc0038I Pass  77: (3.79 seconds) suminf.   22.41649 (256) obj. 1.07366e+06 iterations 85
Cbc0038I Pass  78: (3.81 seconds) suminf.   21.25852 (265) obj. 1.0751e+06 iterations 126
Cbc0038I Pass  79: (3.83 seconds) suminf.   20.63399 (265) obj. 1.07533e+06 iterations 93
Cbc0038I Pass  80: (3.89 seconds) suminf.   22.98728 (273) obj. 1.06856e+06 iterations 332
Cbc0038I Pass  81: (3.90 seconds) suminf.   23.41257 (292) obj. 1.06893e+06 iterations 75
Cbc0038I Pass  82: (3.96 seconds) suminf.   20.87663 (260) obj. 1.05692e+06 iterations 353
Cbc0038I Pass  83: (4.00 seconds) suminf.   19.99580 (237) obj. 1.063e+06 iterations 167
Cbc0038I Pass  84: (4.06 seconds) suminf.   19.62213 (236) obj. 1.06624e+06 iterations 415
Cbc0038I Pass  85: (4.07 seconds) suminf.   19.47921 (234) obj. 1.06564e+06 iterations 66
Cbc0038I Pass  86: (4.09 seconds) suminf.   20.26498 (247) obj. 1.06645e+06 iterations 81
Cbc0038I Pass  87: (4.11 seconds) suminf.   16.22331 (225) obj. 1.06644e+06 iterations 68
Cbc0038I Pass  88: (4.11 seconds) suminf.   16.22331 (225) obj. 1.06644e+06 iterations 2
Cbc0038I Pass  89: (4.22 seconds) suminf.   15.99201 (218) obj. 1.06728e+06 iterations 723
Cbc0038I Pass  90: (4.29 seconds) suminf.   13.07758 (196) obj. 1.06291e+06 iterations 417
Cbc0038I Pass  91: (4.35 seconds) suminf.   13.49591 (205) obj. 1.12629e+06 iterations 452
Cbc0038I Pass  92: (4.38 seconds) suminf.   10.82792 (180) obj. 1.10722e+06 iterations 166
Cbc0038I Pass  93: (4.44 seconds) suminf.   10.20648 (184) obj. 1.08485e+06 iterations 431
Cbc0038I Pass  94: (4.45 seconds) suminf.    9.78482 (180) obj. 1.08485e+06 iterations 63
Cbc0038I Pass  95: (4.51 seconds) suminf.   11.23857 (188) obj. 920907 iterations 466
Cbc0038I Pass  96: (4.54 seconds) suminf.    9.59054 (214) obj. 906503 iterations 196
Cbc0038I Pass  97: (4.56 seconds) suminf.    8.90533 (174) obj. 906503 iterations 110
Cbc0038I Pass  98: (4.66 seconds) suminf.    9.48943 (94) obj. 953007 iterations 859
Cbc0038I Pass  99: (4.69 seconds) suminf.    7.31915 (109) obj. 954060 iterations 152
Cbc0038I Pass 100: (4.87 seconds) suminf.   72.30455 (461) obj. 1.23976e+06 iterations 1232
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 181 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3767 rows 1210 columns, reduced to 2940 rows 923 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.15 seconds)
Cbc0038I After 5.15 seconds - Feasibility pump exiting - took 4.12 seconds
Cbc0031I 35 added rows had average density of 10.8
Cbc0013I At root node, 35 cuts changed objective from 655935.88 to 671744 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 25 row cuts average 242.8 elements, 0 column cuts (0 active)  in 0.324 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 128 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 671744 (10.42 seconds)
Cbc0016I Integer solution of 671744 found by strong branching after 22677 iterations and 24 nodes (16.17 seconds)
Cbc0001I Search completed - best objective 671744, took 22743 iterations and 24 nodes (16.19 seconds)
Cbc0032I Strong branching done 440 times (23110 iterations), fathomed 3 nodes and fixed 28 variables
Cbc0035I Maximum depth 18, 0 variables fixed on reduced cost
Cuts at root node changed objective from 655936 to 671744
Probing was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Gomory was tried 24 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.365 seconds)
Knapsack was tried 24 times and created 97 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 24 times and created 264 cuts of which 0 were active after adding rounds of cuts (0.198 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)

Result - Optimal solution found

Objective value:                671744.00000000
Enumerated nodes:               24
Total iterations:               22743
Time (CPU seconds):             16.42
Time (Wallclock seconds):       16.49

Total time (CPU seconds):       16.44   (Wallclock seconds):       16.52

