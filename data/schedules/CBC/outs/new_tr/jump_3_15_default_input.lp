Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_15_default_input.lp sec 1800 solve solu solutions/new_tr/jump_3_15_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 20480 - 0.00 seconds
Cgl0002I 58 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 113 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 507 rows, 182 columns (182 integer (166 of which binary)) and 1687 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 182 objects (182 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 102 integers unsatisfied sum - 24.3286
Cbc0038I Pass   1: suminf.    2.94118 (13) obj. 22347.3 iterations 201
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 25600 iterations 31
Cbc0038I Solution found of 25600
Cbc0038I Cleaned solution of 25600
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 182 columns, reduced to 364 rows 108 columns - 13 fixed gives 143, 42 - ok now
Cbc0038I Full problem 507 rows 182 columns, reduced to 57 rows 20 columns
Cbc0038I Mini branch and bound improved solution from 25600 to 24576 (0.06 seconds)
Cbc0038I Round again with cutoff of 24165.5
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.94118 (13) obj. 22347.3 iterations 0
Cbc0038I Pass   4: suminf.    2.36775 (8) obj. 24165.5 iterations 36
Cbc0038I Pass   5: suminf.    1.66731 (6) obj. 24165.5 iterations 9
Cbc0038I Pass   6: suminf.    2.25101 (6) obj. 24165.5 iterations 56
Cbc0038I Pass   7: suminf.    0.98096 (11) obj. 24165.5 iterations 17
Cbc0038I Pass   8: suminf.    1.82296 (11) obj. 24165.5 iterations 63
Cbc0038I Pass   9: suminf.    2.43632 (11) obj. 24165.5 iterations 22
Cbc0038I Pass  10: suminf.    1.66731 (6) obj. 24165.5 iterations 6
Cbc0038I Pass  11: suminf.    1.77774 (12) obj. 24165.5 iterations 27
Cbc0038I Pass  12: suminf.    3.24440 (13) obj. 24165.5 iterations 37
Cbc0038I Pass  13: suminf.    1.82296 (11) obj. 24165.5 iterations 30
Cbc0038I Pass  14: suminf.    1.82296 (11) obj. 24165.5 iterations 1
Cbc0038I Pass  15: suminf.    2.43632 (11) obj. 24165.5 iterations 16
Cbc0038I Pass  16: suminf.    1.66731 (6) obj. 24165.5 iterations 5
Cbc0038I Pass  17: suminf.    1.77774 (12) obj. 24165.5 iterations 44
Cbc0038I Pass  18: suminf.    3.24440 (13) obj. 24165.5 iterations 33
Cbc0038I Pass  19: suminf.    1.82296 (11) obj. 24165.5 iterations 26
Cbc0038I Pass  20: suminf.    1.82296 (11) obj. 24165.5 iterations 3
Cbc0038I Pass  21: suminf.    2.43632 (11) obj. 24165.5 iterations 20
Cbc0038I Pass  22: suminf.    1.66731 (6) obj. 24165.5 iterations 3
Cbc0038I Pass  23: suminf.    1.77774 (12) obj. 24165.5 iterations 45
Cbc0038I Pass  24: suminf.    3.24440 (13) obj. 24165.5 iterations 47
Cbc0038I Pass  25: suminf.    1.82296 (11) obj. 24165.5 iterations 31
Cbc0038I Pass  26: suminf.    1.82296 (11) obj. 24165.5 iterations 4
Cbc0038I Pass  27: suminf.    2.43632 (11) obj. 24165.5 iterations 23
Cbc0038I Pass  28: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  29: suminf.    1.77774 (12) obj. 24165.5 iterations 40
Cbc0038I Pass  30: suminf.    3.24440 (13) obj. 24165.5 iterations 31
Cbc0038I Pass  31: suminf.    1.82296 (11) obj. 24165.5 iterations 30
Cbc0038I Pass  32: suminf.    1.82296 (11) obj. 24165.5 iterations 4
Cbc0038I Pass  33: suminf.    2.43632 (11) obj. 24165.5 iterations 23
Cbc0038I Pass  34: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  35: suminf.    1.77774 (12) obj. 24165.5 iterations 60
Cbc0038I Pass  36: suminf.    3.24440 (13) obj. 24165.5 iterations 39
Cbc0038I Pass  37: suminf.    1.82296 (11) obj. 24165.5 iterations 27
Cbc0038I Pass  38: suminf.    1.82296 (11) obj. 24165.5 iterations 3
Cbc0038I Pass  39: suminf.    2.43632 (11) obj. 24165.5 iterations 33
Cbc0038I Pass  40: suminf.    1.66731 (6) obj. 24165.5 iterations 11
Cbc0038I Pass  41: suminf.    1.77774 (12) obj. 24165.5 iterations 45
Cbc0038I Pass  42: suminf.    3.24440 (13) obj. 24165.5 iterations 54
Cbc0038I Pass  43: suminf.    1.82296 (11) obj. 24165.5 iterations 39
Cbc0038I Pass  44: suminf.    1.82296 (11) obj. 24165.5 iterations 1
Cbc0038I Pass  45: suminf.    2.43632 (11) obj. 24165.5 iterations 20
Cbc0038I Pass  46: suminf.    1.66731 (6) obj. 24165.5 iterations 8
Cbc0038I Pass  47: suminf.    1.77774 (12) obj. 24165.5 iterations 49
Cbc0038I Pass  48: suminf.    3.24440 (13) obj. 24165.5 iterations 54
Cbc0038I Pass  49: suminf.    1.82296 (11) obj. 24165.5 iterations 30
Cbc0038I Pass  50: suminf.    1.82296 (11) obj. 24165.5 iterations 8
Cbc0038I Pass  51: suminf.    2.43632 (11) obj. 24165.5 iterations 34
Cbc0038I Pass  52: suminf.    1.66731 (6) obj. 24165.5 iterations 5
Cbc0038I Pass  53: suminf.    1.77774 (12) obj. 24165.5 iterations 40
Cbc0038I Pass  54: suminf.    3.24440 (13) obj. 24165.5 iterations 48
Cbc0038I Pass  55: suminf.    1.82296 (11) obj. 24165.5 iterations 29
Cbc0038I Pass  56: suminf.    1.82296 (11) obj. 24165.5 iterations 3
Cbc0038I Pass  57: suminf.    2.43632 (11) obj. 24165.5 iterations 25
Cbc0038I Pass  58: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  59: suminf.    1.77774 (12) obj. 24165.5 iterations 31
Cbc0038I Pass  60: suminf.    3.24440 (13) obj. 24165.5 iterations 51
Cbc0038I Pass  61: suminf.    1.82296 (11) obj. 24165.5 iterations 36
Cbc0038I Pass  62: suminf.    1.82296 (11) obj. 24165.5 iterations 2
Cbc0038I Pass  63: suminf.    2.43632 (11) obj. 24165.5 iterations 24
Cbc0038I Pass  64: suminf.    1.66731 (6) obj. 24165.5 iterations 5
Cbc0038I Pass  65: suminf.    1.77774 (12) obj. 24165.5 iterations 32
Cbc0038I Pass  66: suminf.    3.24440 (13) obj. 24165.5 iterations 61
Cbc0038I Pass  67: suminf.    1.82296 (11) obj. 24165.5 iterations 32
Cbc0038I Pass  68: suminf.    1.82296 (11) obj. 24165.5 iterations 2
Cbc0038I Pass  69: suminf.    2.43632 (11) obj. 24165.5 iterations 28
Cbc0038I Pass  70: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  71: suminf.    1.77774 (12) obj. 24165.5 iterations 41
Cbc0038I Pass  72: suminf.    3.24440 (13) obj. 24165.5 iterations 55
Cbc0038I Pass  73: suminf.    1.82296 (11) obj. 24165.5 iterations 33
Cbc0038I Pass  74: suminf.    1.82296 (11) obj. 24165.5 iterations 13
Cbc0038I Pass  75: suminf.    2.43632 (11) obj. 24165.5 iterations 42
Cbc0038I Pass  76: suminf.    1.66731 (6) obj. 24165.5 iterations 3
Cbc0038I Pass  77: suminf.    1.77774 (12) obj. 24165.5 iterations 52
Cbc0038I Pass  78: suminf.    3.24440 (13) obj. 24165.5 iterations 37
Cbc0038I Pass  79: suminf.    1.82296 (11) obj. 24165.5 iterations 30
Cbc0038I Pass  80: suminf.    1.82296 (11) obj. 24165.5 iterations 7
Cbc0038I Pass  81: suminf.    2.43632 (11) obj. 24165.5 iterations 34
Cbc0038I Pass  82: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  83: suminf.    1.77774 (12) obj. 24165.5 iterations 30
Cbc0038I Pass  84: suminf.    3.24440 (13) obj. 24165.5 iterations 57
Cbc0038I Pass  85: suminf.    1.82296 (11) obj. 24165.5 iterations 33
Cbc0038I Pass  86: suminf.    1.82296 (11) obj. 24165.5 iterations 1
Cbc0038I Pass  87: suminf.    2.43632 (11) obj. 24165.5 iterations 19
Cbc0038I Pass  88: suminf.    1.66731 (6) obj. 24165.5 iterations 4
Cbc0038I Pass  89: suminf.    1.77774 (12) obj. 24165.5 iterations 42
Cbc0038I Pass  90: suminf.    3.24440 (13) obj. 24165.5 iterations 58
Cbc0038I Pass  91: suminf.    1.82296 (11) obj. 24165.5 iterations 32
Cbc0038I Pass  92: suminf.    1.82296 (11) obj. 24165.5 iterations 3
Cbc0038I Pass  93: suminf.    2.43632 (11) obj. 24165.5 iterations 27
Cbc0038I Pass  94: suminf.    1.66731 (6) obj. 24165.5 iterations 7
Cbc0038I Pass  95: suminf.    1.77774 (12) obj. 24165.5 iterations 53
Cbc0038I Pass  96: suminf.    3.24440 (13) obj. 24165.5 iterations 55
Cbc0038I Pass  97: suminf.    1.82296 (11) obj. 24165.5 iterations 33
Cbc0038I Pass  98: suminf.    1.82296 (11) obj. 24165.5 iterations 2
Cbc0038I Pass  99: suminf.    2.43632 (11) obj. 24165.5 iterations 32
Cbc0038I Pass 100: suminf.    1.66731 (6) obj. 24165.5 iterations 8
Cbc0038I Pass 101: suminf.    1.77774 (12) obj. 24165.5 iterations 51
Cbc0038I Pass 102: suminf.   15.81835 (76) obj. 24165.5 iterations 118
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 182 columns, reduced to 405 rows 129 columns - 35 fixed gives 159, 51 - ok now
Cbc0038I Full problem 507 rows 182 columns, reduced to 74 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of 24576 - took 0.29 seconds
Cbc0012I Integer solution of 24576 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 507 rows 182 columns, reduced to 362 rows 107 columns - 33 fixed gives 80, 26 - ok now
Cbc0031I 5 added rows had average density of 3
Cbc0013I At root node, 83 cuts changed objective from 20480 to 24575 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 50 row cuts average 2.1 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 27 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 5 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective 24576, took 330 iterations and 0 nodes (0.37 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Cuts at root node changed objective from 20480 to 24575
Probing was tried 1 times and created 64 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Knapsack was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 27 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                24576.00000000
Enumerated nodes:               0
Total iterations:               330
Time (CPU seconds):             0.37
Time (Wallclock seconds):       0.41

Total time (CPU seconds):       0.38   (Wallclock seconds):       0.41

