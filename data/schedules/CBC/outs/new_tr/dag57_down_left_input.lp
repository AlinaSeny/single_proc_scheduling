Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag57_down_left_input.lp sec 1800 solve solu solutions/new_tr/dag57_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.27895e+06 - 0.16 seconds
Cgl0002I 1284 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 800 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 112 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 4181 rows, 1365 columns (1365 integer (1319 of which binary)) and 13898 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1365 objects (1365 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 585 integers unsatisfied sum - 132.188
Cbc0038I Pass   1: (1.06 seconds) suminf.   78.01929 (512) obj. 1.40906e+06 iterations 1062
Cbc0038I Pass   2: (1.13 seconds) suminf.   72.63785 (515) obj. 1.4079e+06 iterations 350
Cbc0038I Pass   3: (1.16 seconds) suminf.   72.57220 (504) obj. 1.40756e+06 iterations 108
Cbc0038I Pass   4: (1.18 seconds) suminf.   68.70793 (511) obj. 1.4057e+06 iterations 84
Cbc0038I Pass   5: (1.20 seconds) suminf.   69.25857 (504) obj. 1.405e+06 iterations 78
Cbc0038I Pass   6: (1.26 seconds) suminf.   63.88473 (468) obj. 1.40349e+06 iterations 246
Cbc0038I Pass   7: (1.28 seconds) suminf.   63.80942 (472) obj. 1.40338e+06 iterations 92
Cbc0038I Pass   8: (1.35 seconds) suminf.   57.48586 (450) obj. 1.36784e+06 iterations 350
Cbc0038I Pass   9: (1.39 seconds) suminf.   53.33402 (437) obj. 1.37626e+06 iterations 229
Cbc0038I Pass  10: (1.46 seconds) suminf.   54.06631 (418) obj. 1.37626e+06 iterations 322
Cbc0038I Pass  11: (1.48 seconds) suminf.   53.62288 (427) obj. 1.37626e+06 iterations 95
Cbc0038I Pass  12: (1.49 seconds) suminf.   53.43280 (430) obj. 1.37626e+06 iterations 9
Cbc0038I Pass  13: (1.55 seconds) suminf.   50.76421 (416) obj. 1.37706e+06 iterations 359
Cbc0038I Pass  14: (1.58 seconds) suminf.   50.27714 (424) obj. 1.37708e+06 iterations 138
Cbc0038I Pass  15: (1.65 seconds) suminf.   47.44399 (426) obj. 1.377e+06 iterations 333
Cbc0038I Pass  16: (1.66 seconds) suminf.   47.09076 (438) obj. 1.37699e+06 iterations 60
Cbc0038I Pass  17: (1.71 seconds) suminf.   45.89804 (444) obj. 1.37694e+06 iterations 193
Cbc0038I Pass  18: (1.72 seconds) suminf.   45.39260 (435) obj. 1.37693e+06 iterations 45
Cbc0038I Pass  19: (1.78 seconds) suminf.   48.35085 (428) obj. 1.37698e+06 iterations 346
Cbc0038I Pass  20: (1.83 seconds) suminf.   44.68165 (417) obj. 1.40786e+06 iterations 188
Cbc0038I Pass  21: (1.84 seconds) suminf.   44.61890 (410) obj. 1.42004e+06 iterations 63
Cbc0038I Pass  22: (1.85 seconds) suminf.   44.86653 (416) obj. 1.42065e+06 iterations 35
Cbc0038I Pass  23: (1.88 seconds) suminf.   45.61481 (426) obj. 1.42021e+06 iterations 121
Cbc0038I Pass  24: (1.91 seconds) suminf.   44.10766 (436) obj. 1.41876e+06 iterations 110
Cbc0038I Pass  25: (1.94 seconds) suminf.   40.86089 (414) obj. 1.41508e+06 iterations 144
Cbc0038I Pass  26: (1.95 seconds) suminf.   40.14604 (417) obj. 1.41544e+06 iterations 49
Cbc0038I Pass  27: (1.99 seconds) suminf.   40.87156 (435) obj. 1.41213e+06 iterations 169
Cbc0038I Pass  28: (2.01 seconds) suminf.   40.24269 (442) obj. 1.41577e+06 iterations 110
Cbc0038I Pass  29: (2.03 seconds) suminf.   40.02338 (440) obj. 1.41398e+06 iterations 48
Cbc0038I Pass  30: (2.09 seconds) suminf.   42.38446 (431) obj. 1.46682e+06 iterations 386
Cbc0038I Pass  31: (2.11 seconds) suminf.   41.66234 (440) obj. 1.46683e+06 iterations 92
Cbc0038I Pass  32: (2.12 seconds) suminf.   41.09148 (445) obj. 1.46685e+06 iterations 15
Cbc0038I Pass  33: (2.13 seconds) suminf.   41.03791 (445) obj. 1.4668e+06 iterations 13
Cbc0038I Pass  34: (2.19 seconds) suminf.   39.04464 (399) obj. 1.45476e+06 iterations 339
Cbc0038I Pass  35: (2.21 seconds) suminf.   37.40539 (412) obj. 1.46831e+06 iterations 93
Cbc0038I Pass  36: (2.22 seconds) suminf.   37.12432 (412) obj. 1.46845e+06 iterations 33
Cbc0038I Pass  37: (2.23 seconds) suminf.   36.81549 (409) obj. 1.46847e+06 iterations 44
Cbc0038I Pass  38: (2.32 seconds) suminf.   40.36904 (424) obj. 1.4623e+06 iterations 536
Cbc0038I Pass  39: (2.37 seconds) suminf.   37.60469 (452) obj. 1.46396e+06 iterations 254
Cbc0038I Pass  40: (2.38 seconds) suminf.   37.17683 (459) obj. 1.46417e+06 iterations 40
Cbc0038I Pass  41: (2.39 seconds) suminf.   37.22255 (455) obj. 1.46392e+06 iterations 31
Cbc0038I Pass  42: (2.45 seconds) suminf.   42.02296 (406) obj. 1.45261e+06 iterations 340
Cbc0038I Pass  43: (2.51 seconds) suminf.   37.46310 (400) obj. 1.45028e+06 iterations 284
Cbc0038I Pass  44: (2.51 seconds) suminf.   36.86289 (389) obj. 1.45037e+06 iterations 19
Cbc0038I Pass  45: (2.52 seconds) suminf.   37.24053 (383) obj. 1.45029e+06 iterations 25
Cbc0038I Pass  46: (2.57 seconds) suminf.   38.54989 (390) obj. 1.45123e+06 iterations 270
Cbc0038I Pass  47: (2.58 seconds) suminf.   37.97055 (393) obj. 1.45071e+06 iterations 26
Cbc0038I Pass  48: (2.61 seconds) suminf.   38.96944 (390) obj. 1.45061e+06 iterations 128
Cbc0038I Pass  49: (2.66 seconds) suminf.   36.45775 (389) obj. 1.45141e+06 iterations 319
Cbc0038I Pass  50: (2.68 seconds) suminf.   35.93601 (400) obj. 1.44992e+06 iterations 70
Cbc0038I Pass  51: (2.75 seconds) suminf.   36.46699 (395) obj. 1.56238e+06 iterations 433
Cbc0038I Pass  52: (2.78 seconds) suminf.   36.18055 (391) obj. 1.56925e+06 iterations 147
Cbc0038I Pass  53: (2.82 seconds) suminf.   35.94949 (393) obj. 1.56809e+06 iterations 203
Cbc0038I Pass  54: (2.83 seconds) suminf.   35.74263 (388) obj. 1.56835e+06 iterations 27
Cbc0038I Pass  55: (2.89 seconds) suminf.   35.47389 (398) obj. 1.59193e+06 iterations 377
Cbc0038I Pass  56: (2.91 seconds) suminf.   33.89402 (392) obj. 1.56466e+06 iterations 96
Cbc0038I Pass  57: (2.97 seconds) suminf.   34.33155 (386) obj. 1.5576e+06 iterations 313
Cbc0038I Pass  58: (2.99 seconds) suminf.   33.83807 (386) obj. 1.59193e+06 iterations 97
Cbc0038I Pass  59: (3.00 seconds) suminf.   33.20891 (385) obj. 1.58482e+06 iterations 53
Cbc0038I Pass  60: (3.07 seconds) suminf.   33.84353 (362) obj. 1.5867e+06 iterations 443
Cbc0038I Pass  61: (3.12 seconds) suminf.   30.74584 (358) obj. 1.55741e+06 iterations 228
Cbc0038I Pass  62: (3.16 seconds) suminf.   31.54354 (355) obj. 1.59939e+06 iterations 236
Cbc0038I Pass  63: (3.20 seconds) suminf.   29.38689 (374) obj. 1.58392e+06 iterations 179
Cbc0038I Pass  64: (3.24 seconds) suminf.   30.47621 (349) obj. 1.59715e+06 iterations 219
Cbc0038I Pass  65: (3.26 seconds) suminf.   28.11133 (343) obj. 1.5817e+06 iterations 108
Cbc0038I Pass  66: (3.27 seconds) suminf.   27.83228 (340) obj. 1.57298e+06 iterations 31
Cbc0038I Pass  67: (3.34 seconds) suminf.   32.78608 (358) obj. 1.56905e+06 iterations 396
Cbc0038I Pass  68: (3.37 seconds) suminf.   28.97505 (376) obj. 1.60905e+06 iterations 191
Cbc0038I Pass  69: (3.39 seconds) suminf.   28.32161 (379) obj. 1.60983e+06 iterations 47
Cbc0038I Pass  70: (3.43 seconds) suminf.   30.73834 (359) obj. 1.63019e+06 iterations 240
Cbc0038I Pass  71: (3.48 seconds) suminf.   28.23882 (370) obj. 1.59801e+06 iterations 249
Cbc0038I Pass  72: (3.56 seconds) suminf.   31.58033 (324) obj. 1.77296e+06 iterations 532
Cbc0038I Pass  73: (3.59 seconds) suminf.   30.46033 (339) obj. 1.77281e+06 iterations 168
Cbc0038I Pass  74: (3.60 seconds) suminf.   30.32951 (342) obj. 1.77242e+06 iterations 32
Cbc0038I Pass  75: (3.66 seconds) suminf.   30.24583 (380) obj. 1.75567e+06 iterations 348
Cbc0038I Pass  76: (3.68 seconds) suminf.   30.12229 (375) obj. 1.75234e+06 iterations 66
Cbc0038I Pass  77: (3.75 seconds) suminf.   28.03571 (349) obj. 1.67959e+06 iterations 393
Cbc0038I Pass  78: (3.77 seconds) suminf.   27.20009 (359) obj. 1.69219e+06 iterations 79
Cbc0038I Pass  79: (3.85 seconds) suminf.   27.48839 (397) obj. 1.37626e+06 iterations 534
Cbc0038I Pass  80: (3.88 seconds) suminf.   27.39077 (391) obj. 1.37626e+06 iterations 140
Cbc0038I Pass  81: (3.96 seconds) suminf.   28.53949 (335) obj. 1.39735e+06 iterations 425
Cbc0038I Pass  82: (3.97 seconds) suminf.   28.33052 (330) obj. 1.40323e+06 iterations 65
Cbc0038I Pass  83: (4.04 seconds) suminf.   27.07706 (318) obj. 1.42243e+06 iterations 400
Cbc0038I Pass  84: (4.06 seconds) suminf.   24.42754 (293) obj. 1.42243e+06 iterations 136
Cbc0038I Pass  85: (4.14 seconds) suminf.   27.20723 (332) obj. 1.38676e+06 iterations 473
Cbc0038I Pass  86: (4.16 seconds) suminf.   26.08822 (362) obj. 1.38343e+06 iterations 72
Cbc0038I Pass  87: (4.17 seconds) suminf.   25.57342 (363) obj. 1.38347e+06 iterations 40
Cbc0038I Pass  88: (4.24 seconds) suminf.   29.63362 (316) obj. 1.38868e+06 iterations 417
Cbc0038I Pass  89: (4.28 seconds) suminf.   26.15641 (341) obj. 1.40131e+06 iterations 248
Cbc0038I Pass  90: (4.35 seconds) suminf.   26.15311 (322) obj. 1.39296e+06 iterations 422
Cbc0038I Pass  91: (4.37 seconds) suminf.   23.90978 (318) obj. 1.38752e+06 iterations 87
Cbc0038I Pass  92: (4.44 seconds) suminf.   24.21114 (307) obj. 1.47561e+06 iterations 452
Cbc0038I Pass  93: (4.48 seconds) suminf.   23.59267 (315) obj. 1.47768e+06 iterations 169
Cbc0038I Pass  94: (4.49 seconds) suminf.   23.97034 (321) obj. 1.47774e+06 iterations 70
Cbc0038I Pass  95: (4.54 seconds) suminf.   25.90993 (328) obj. 1.42141e+06 iterations 278
Cbc0038I Pass  96: (4.56 seconds) suminf.   24.90020 (332) obj. 1.39518e+06 iterations 108
Cbc0038I Pass  97: (4.62 seconds) suminf.   24.10105 (305) obj. 1.47665e+06 iterations 337
Cbc0038I Pass  98: (4.64 seconds) suminf.   23.14800 (299) obj. 1.47691e+06 iterations 107
Cbc0038I Pass  99: (4.66 seconds) suminf.   23.15724 (296) obj. 1.47785e+06 iterations 87
Cbc0038I Pass 100: (4.79 seconds) suminf.   60.33042 (409) obj. 1.47564e+06 iterations 903
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 325 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4181 rows 1365 columns, reduced to 2509 rows 782 columns - too large
Cbc0038I Mini branch and bound did not improve solution (5.31 seconds)
Cbc0038I After 5.31 seconds - Feasibility pump exiting - took 4.42 seconds
Cbc0031I 62 added rows had average density of 31.451613
Cbc0013I At root node, 62 cuts changed objective from 1278951 to 1310720 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 35 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 226 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1310720 (9.26 seconds)
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 1310720 (44.42 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 1310720 (68.11 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 1310720 (80.11 seconds)
Cbc0010I After 400 nodes, 17 on tree, 1e+50 best solution, best possible 1310720 (97.57 seconds)
Cbc0010I After 500 nodes, 13 on tree, 1e+50 best solution, best possible 1310720 (121.96 seconds)
Cbc0010I After 600 nodes, 16 on tree, 1e+50 best solution, best possible 1310720 (189.82 seconds)
Cbc0010I After 700 nodes, 29 on tree, 1e+50 best solution, best possible 1310720 (288.13 seconds)
Cbc0010I After 800 nodes, 38 on tree, 1e+50 best solution, best possible 1310720 (348.31 seconds)
Cbc0010I After 900 nodes, 24 on tree, 1e+50 best solution, best possible 1310720 (469.29 seconds)
Cbc0010I After 1000 nodes, 25 on tree, 1e+50 best solution, best possible 1310720 (569.20 seconds)
Cbc0010I After 1100 nodes, 39 on tree, 1e+50 best solution, best possible 1310720 (620.58 seconds)
Cbc0010I After 1200 nodes, 33 on tree, 1e+50 best solution, best possible 1310720 (665.73 seconds)
Cbc0010I After 1300 nodes, 36 on tree, 1e+50 best solution, best possible 1310720 (697.71 seconds)
Cbc0010I After 1400 nodes, 45 on tree, 1e+50 best solution, best possible 1310720 (724.04 seconds)
Cbc0010I After 1500 nodes, 43 on tree, 1e+50 best solution, best possible 1310720 (746.74 seconds)
Cbc0010I After 1600 nodes, 38 on tree, 1e+50 best solution, best possible 1310720 (774.05 seconds)
Cbc0010I After 1700 nodes, 36 on tree, 1e+50 best solution, best possible 1310720 (796.96 seconds)
Cbc0010I After 1800 nodes, 39 on tree, 1e+50 best solution, best possible 1310720 (823.53 seconds)
Cbc0010I After 1900 nodes, 35 on tree, 1e+50 best solution, best possible 1310720 (862.97 seconds)
Cbc0010I After 2000 nodes, 40 on tree, 1e+50 best solution, best possible 1310720 (882.68 seconds)
Cbc0010I After 2100 nodes, 38 on tree, 1e+50 best solution, best possible 1310720 (905.14 seconds)
Cbc0010I After 2200 nodes, 37 on tree, 1e+50 best solution, best possible 1310720 (926.07 seconds)
Cbc0010I After 2300 nodes, 36 on tree, 1e+50 best solution, best possible 1310720 (951.98 seconds)
Cbc0010I After 2400 nodes, 25 on tree, 1e+50 best solution, best possible 1310720 (993.09 seconds)
Cbc0010I After 2500 nodes, 20 on tree, 1e+50 best solution, best possible 1310720 (1103.04 seconds)
Cbc0010I After 2600 nodes, 20 on tree, 1e+50 best solution, best possible 1310720 (1187.13 seconds)
Cbc0010I After 2700 nodes, 19 on tree, 1e+50 best solution, best possible 1310720 (1305.38 seconds)
Cbc0010I After 2800 nodes, 40 on tree, 1e+50 best solution, best possible 1310720 (1379.08 seconds)
Cbc0010I After 2900 nodes, 42 on tree, 1e+50 best solution, best possible 1310720 (1418.46 seconds)
Cbc0010I After 3000 nodes, 43 on tree, 1e+50 best solution, best possible 1310720 (1455.31 seconds)
Cbc0010I After 3100 nodes, 50 on tree, 1e+50 best solution, best possible 1310720 (1491.20 seconds)
Cbc0010I After 3200 nodes, 51 on tree, 1e+50 best solution, best possible 1310720 (1506.10 seconds)
Cbc0010I After 3300 nodes, 45 on tree, 1e+50 best solution, best possible 1310720 (1522.48 seconds)
Cbc0010I After 3400 nodes, 58 on tree, 1e+50 best solution, best possible 1310720 (1543.22 seconds)
Cbc0010I After 3500 nodes, 62 on tree, 1e+50 best solution, best possible 1310720 (1557.44 seconds)
Cbc0010I After 3600 nodes, 63 on tree, 1e+50 best solution, best possible 1310720 (1571.48 seconds)
Cbc0010I After 3700 nodes, 50 on tree, 1e+50 best solution, best possible 1310720 (1593.73 seconds)
Cbc0010I After 3800 nodes, 55 on tree, 1e+50 best solution, best possible 1310720 (1619.94 seconds)
Cbc0010I After 3900 nodes, 49 on tree, 1e+50 best solution, best possible 1310720 (1646.18 seconds)
Cbc0010I After 4000 nodes, 42 on tree, 1e+50 best solution, best possible 1310720 (1665.68 seconds)
Cbc0010I After 4100 nodes, 57 on tree, 1e+50 best solution, best possible 1310720 (1686.04 seconds)
Cbc0010I After 4200 nodes, 31 on tree, 1e+50 best solution, best possible 1310720 (1719.12 seconds)
Cbc0010I After 4300 nodes, 32 on tree, 1e+50 best solution, best possible 1310720 (1772.33 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1310720), took 3845258 iterations and 4325 nodes (1802.23 seconds)
Cbc0032I Strong branching done 27266 times (1783493 iterations), fathomed 289 nodes and fixed 1492 variables
Cbc0035I Maximum depth 80, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.27895e+06 to 1.31072e+06
Probing was tried 798 times and created 159161 cuts of which 0 were active after adding rounds of cuts (4.163 seconds)
Gomory was tried 473 times and created 475 cuts of which 0 were active after adding rounds of cuts (2.429 seconds)
Knapsack was tried 473 times and created 1597 cuts of which 0 were active after adding rounds of cuts (0.675 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 473 times and created 7438 cuts of which 0 were active after adding rounds of cuts (0.949 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
ImplicationCuts was tried 39 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1310720.000
Enumerated nodes:               4325
Total iterations:               3845258
Time (CPU seconds):             1802.23
Time (Wallclock seconds):       1806.02

Total time (CPU seconds):       1802.26   (Wallclock seconds):       1806.05

