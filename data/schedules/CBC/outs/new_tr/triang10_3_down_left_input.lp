Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang10_3_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang10_3_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 339 - 2.06 seconds
Cgl0002I 1778 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1601 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 259 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 6698 rows, 2298 columns (2298 integer (2243 of which binary)) and 21881 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2298 objects (2298 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1112 integers unsatisfied sum - 237.73
Cbc0038I Pass   1: (7.85 seconds) suminf.  135.10619 (1116) obj. 404.118 iterations 2493
Cbc0038I Pass   2: (8.08 seconds) suminf.  126.04824 (1140) obj. 435.048 iterations 412
Cbc0038I Pass   3: (8.30 seconds) suminf.  121.16374 (1153) obj. 441.501 iterations 378
Cbc0038I Pass   4: (8.36 seconds) suminf.  119.27427 (1129) obj. 438.057 iterations 102
Cbc0038I Pass   5: (8.42 seconds) suminf.  119.19073 (1135) obj. 438.743 iterations 75
Cbc0038I Pass   6: (8.67 seconds) suminf.  110.10359 (1149) obj. 439.595 iterations 449
Cbc0038I Pass   7: (8.80 seconds) suminf.  108.44936 (1145) obj. 440.536 iterations 196
Cbc0038I Pass   8: (8.82 seconds) suminf.  108.40645 (1149) obj. 440.214 iterations 12
Cbc0038I Pass   9: (8.96 seconds) suminf.  109.46481 (1145) obj. 443.022 iterations 183
Cbc0038I Pass  10: (9.00 seconds) suminf.  109.35703 (1140) obj. 441.99 iterations 58
Cbc0038I Pass  11: (9.11 seconds) suminf.  110.52315 (1142) obj. 443.964 iterations 156
Cbc0038I Pass  12: (9.17 seconds) suminf.  108.03044 (1134) obj. 443.701 iterations 86
Cbc0038I Pass  13: (9.27 seconds) suminf.  110.76543 (1138) obj. 442.165 iterations 144
Cbc0038I Pass  14: (9.34 seconds) suminf.  106.87460 (1136) obj. 445.499 iterations 101
Cbc0038I Pass  15: (9.36 seconds) suminf.  106.92091 (1136) obj. 444.322 iterations 16
Cbc0038I Pass  16: (9.48 seconds) suminf.  112.42801 (1133) obj. 443.415 iterations 174
Cbc0038I Pass  17: (9.56 seconds) suminf.  110.19507 (1124) obj. 443.421 iterations 118
Cbc0038I Pass  18: (9.74 seconds) suminf.  108.49878 (1102) obj. 442.671 iterations 274
Cbc0038I Pass  19: (9.81 seconds) suminf.  105.88004 (1095) obj. 443.776 iterations 115
Cbc0038I Pass  20: (10.04 seconds) suminf.  108.01758 (1110) obj. 440.99 iterations 420
Cbc0038I Pass  21: (10.20 seconds) suminf.  101.96639 (1113) obj. 442.576 iterations 266
Cbc0038I Pass  22: (10.37 seconds) suminf.   95.50430 (1101) obj. 442.983 iterations 279
Cbc0038I Pass  23: (10.50 seconds) suminf.   94.94038 (1090) obj. 442.606 iterations 201
Cbc0038I Pass  24: (10.67 seconds) suminf.   95.23501 (1056) obj. 442.466 iterations 268
Cbc0038I Pass  25: (10.75 seconds) suminf.   94.60364 (1078) obj. 441.496 iterations 133
Cbc0038I Pass  26: (10.92 seconds) suminf.   96.30798 (1070) obj. 440.967 iterations 289
Cbc0038I Pass  27: (11.00 seconds) suminf.   94.83720 (1068) obj. 446.199 iterations 112
Cbc0038I Pass  28: (11.12 seconds) suminf.   97.22991 (1067) obj. 447.243 iterations 181
Cbc0038I Pass  29: (11.40 seconds) suminf.   93.05128 (1003) obj. 439.177 iterations 543
Cbc0038I Pass  30: (11.46 seconds) suminf.   93.16944 (1017) obj. 438.964 iterations 89
Cbc0038I Pass  31: (11.68 seconds) suminf.   90.56458 (1011) obj. 442.249 iterations 439
Cbc0038I Pass  32: (11.83 seconds) suminf.   91.06527 (1011) obj. 444.48 iterations 254
Cbc0038I Pass  33: (11.89 seconds) suminf.   92.77177 (1013) obj. 443.454 iterations 98
Cbc0038I Pass  34: (12.07 seconds) suminf.   85.46601 (995) obj. 446.339 iterations 329
Cbc0038I Pass  35: (12.12 seconds) suminf.   86.72081 (1014) obj. 446.197 iterations 73
Cbc0038I Pass  36: (12.32 seconds) suminf.   85.31458 (1007) obj. 446.012 iterations 392
Cbc0038I Pass  37: (12.46 seconds) suminf.   82.10672 (1004) obj. 444.17 iterations 227
Cbc0038I Pass  38: (12.51 seconds) suminf.   80.35435 (991) obj. 444.469 iterations 84
Cbc0038I Pass  39: (12.76 seconds) suminf.   81.02607 (1000) obj. 441.69 iterations 482
Cbc0038I Pass  40: (12.91 seconds) suminf.   80.72980 (1049) obj. 450.598 iterations 241
Cbc0038I Pass  41: (12.97 seconds) suminf.   81.14361 (1055) obj. 452.606 iterations 94
Cbc0038I Pass  42: (13.20 seconds) suminf.   77.75210 (1028) obj. 465.446 iterations 452
Cbc0038I Pass  43: (13.35 seconds) suminf.   77.61443 (1065) obj. 459.12 iterations 207
Cbc0038I Pass  44: (13.43 seconds) suminf.   77.95545 (1051) obj. 457.366 iterations 123
Cbc0038I Pass  45: (13.46 seconds) suminf.   77.32983 (1057) obj. 455.927 iterations 31
Cbc0038I Pass  46: (13.72 seconds) suminf.   79.23531 (1060) obj. 464.49 iterations 496
Cbc0038I Pass  47: (13.89 seconds) suminf.   79.96785 (1080) obj. 467.461 iterations 263
Cbc0038I Pass  48: (14.08 seconds) suminf.   79.26724 (1035) obj. 468.028 iterations 333
Cbc0038I Pass  49: (14.16 seconds) suminf.   78.34058 (1069) obj. 468.375 iterations 118
Cbc0038I Pass  50: (14.39 seconds) suminf.   77.57676 (1023) obj. 465.703 iterations 403
Cbc0038I Pass  51: (14.47 seconds) suminf.   74.00693 (1045) obj. 465.942 iterations 122
Cbc0038I Pass  52: (14.68 seconds) suminf.   74.59453 (1066) obj. 455.094 iterations 361
Cbc0038I Pass  53: (14.74 seconds) suminf.   75.32910 (1073) obj. 454.569 iterations 82
Cbc0038I Pass  54: (15.08 seconds) suminf.   70.79539 (1087) obj. 475.06 iterations 673
Cbc0038I Pass  55: (15.20 seconds) suminf.   69.37607 (1067) obj. 482.862 iterations 196
Cbc0038I Pass  56: (15.29 seconds) suminf.   69.45124 (1073) obj. 481.832 iterations 150
Cbc0038I Pass  57: (15.48 seconds) suminf.   70.49623 (1076) obj. 477.55 iterations 345
Cbc0038I Pass  58: (15.58 seconds) suminf.   70.03219 (1069) obj. 482.827 iterations 173
Cbc0038I Pass  59: (15.63 seconds) suminf.   70.14745 (1064) obj. 484.116 iterations 70
Cbc0038I Pass  60: (15.75 seconds) suminf.   70.87046 (1061) obj. 482.642 iterations 203
Cbc0038I Pass  61: (15.86 seconds) suminf.   70.02730 (1056) obj. 484.817 iterations 164
Cbc0038I Pass  62: (15.89 seconds) suminf.   69.44509 (1065) obj. 482.635 iterations 48
Cbc0038I Pass  63: (16.04 seconds) suminf.   71.90600 (1100) obj. 477.551 iterations 270
Cbc0038I Pass  64: (16.17 seconds) suminf.   69.27335 (1085) obj. 488.128 iterations 192
Cbc0038I Pass  65: (16.18 seconds) suminf.   69.27335 (1085) obj. 488.128 iterations 6
Cbc0038I Pass  66: (16.57 seconds) suminf.   65.69461 (1074) obj. 466.899 iterations 808
Cbc0038I Pass  67: (16.66 seconds) suminf.   66.53635 (1071) obj. 469.973 iterations 145
Cbc0038I Pass  68: (17.03 seconds) suminf.   68.14814 (1024) obj. 473.316 iterations 715
Cbc0038I Pass  69: (17.26 seconds) suminf.   67.20785 (1051) obj. 472.955 iterations 459
Cbc0038I Pass  70: (17.28 seconds) suminf.   67.32387 (1052) obj. 472.711 iterations 25
Cbc0038I Pass  71: (17.57 seconds) suminf.   66.24306 (1013) obj. 468.026 iterations 580
Cbc0038I Pass  72: (17.60 seconds) suminf.   65.85813 (1027) obj. 469.248 iterations 62
Cbc0038I Pass  73: (17.91 seconds) suminf.   65.62582 (1017) obj. 470.139 iterations 631
Cbc0038I Pass  74: (18.10 seconds) suminf.   64.58096 (1005) obj. 465.263 iterations 335
Cbc0038I Pass  75: (18.17 seconds) suminf.   63.12310 (1005) obj. 464.26 iterations 108
Cbc0038I Pass  76: (18.24 seconds) suminf.   63.51305 (1007) obj. 455.375 iterations 99
Cbc0038I Pass  77: (18.46 seconds) suminf.   64.73202 (998) obj. 479.648 iterations 475
Cbc0038I Pass  78: (18.63 seconds) suminf.   62.39161 (998) obj. 465.725 iterations 301
Cbc0038I Pass  79: (18.77 seconds) suminf.   62.43828 (1003) obj. 444.624 iterations 215
Cbc0038I Pass  80: (18.95 seconds) suminf.   63.67012 (1014) obj. 451.138 iterations 365
Cbc0038I Pass  81: (19.13 seconds) suminf.   60.86447 (1025) obj. 445.244 iterations 331
Cbc0038I Pass  82: (19.23 seconds) suminf.   60.35819 (1033) obj. 444.408 iterations 155
Cbc0038I Pass  83: (19.52 seconds) suminf.   62.99864 (953) obj. 440.248 iterations 676
Cbc0038I Pass  84: (19.65 seconds) suminf.   61.27131 (958) obj. 439.803 iterations 303
Cbc0038I Pass  85: (19.83 seconds) suminf.   59.78445 (975) obj. 438.569 iterations 384
Cbc0038I Pass  86: (19.99 seconds) suminf.   59.00199 (973) obj. 434.255 iterations 261
Cbc0038I Pass  87: (20.23 seconds) suminf.   65.42424 (947) obj. 444.68 iterations 551
Cbc0038I Pass  88: (20.40 seconds) suminf.   63.31176 (969) obj. 442.086 iterations 312
Cbc0038I Pass  89: (20.42 seconds) suminf.   63.41332 (997) obj. 442.951 iterations 36
Cbc0038I Pass  90: (20.69 seconds) suminf.   55.32693 (941) obj. 444.28 iterations 666
Cbc0038I Pass  91: (20.77 seconds) suminf.   56.81765 (975) obj. 441.697 iterations 141
Cbc0038I Pass  92: (21.02 seconds) suminf.   60.98300 (934) obj. 438.297 iterations 638
Cbc0038I Pass  93: (21.19 seconds) suminf.   62.76113 (996) obj. 439.79 iterations 321
Cbc0038I Pass  94: (21.26 seconds) suminf.   62.60435 (981) obj. 437.463 iterations 109
Cbc0038I Pass  95: (21.46 seconds) suminf.   59.69115 (928) obj. 434.94 iterations 417
Cbc0038I Pass  96: (21.59 seconds) suminf.   59.04892 (933) obj. 435.145 iterations 261
Cbc0038I Pass  97: (21.87 seconds) suminf.   59.82924 (912) obj. 439.126 iterations 703
Cbc0038I Pass  98: (22.01 seconds) suminf.   57.14131 (911) obj. 437.014 iterations 234
Cbc0038I Pass  99: (22.09 seconds) suminf.   56.58808 (932) obj. 438.093 iterations 147
Cbc0038I Pass 100: (22.59 seconds) suminf.   87.36483 (1006) obj. 529.911 iterations 1204
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 438 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6698 rows 2298 columns, reduced to 5031 rows 1701 columns - too large
Cbc0038I Mini branch and bound did not improve solution (23.18 seconds)
Cbc0038I After 23.18 seconds - Feasibility pump exiting - took 16.57 seconds
Cbc0031I 36 added rows had average density of 55.055556
Cbc0013I At root node, 36 cuts changed objective from 339 to 339 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 390 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 142.3 elements, 0 column cuts (0 active)  in 1.404 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 44 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 3 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 62 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.563 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 339 (35.45 seconds)
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 339 (219.25 seconds)
Cbc0010I After 200 nodes, 36 on tree, 1e+50 best solution, best possible 339 (395.75 seconds)
Cbc0010I After 300 nodes, 30 on tree, 1e+50 best solution, best possible 339 (476.10 seconds)
Cbc0010I After 400 nodes, 37 on tree, 1e+50 best solution, best possible 339 (553.70 seconds)
Cbc0010I After 500 nodes, 40 on tree, 1e+50 best solution, best possible 339 (618.27 seconds)
Cbc0010I After 600 nodes, 48 on tree, 1e+50 best solution, best possible 339 (676.10 seconds)
Cbc0010I After 700 nodes, 46 on tree, 1e+50 best solution, best possible 339 (727.63 seconds)
Cbc0010I After 800 nodes, 45 on tree, 1e+50 best solution, best possible 339 (776.44 seconds)
Cbc0010I After 900 nodes, 41 on tree, 1e+50 best solution, best possible 339 (851.57 seconds)
Cbc0010I After 1000 nodes, 34 on tree, 1e+50 best solution, best possible 339 (924.04 seconds)
Cbc0010I After 1100 nodes, 24 on tree, 1e+50 best solution, best possible 339 (994.46 seconds)
Cbc0010I After 1200 nodes, 32 on tree, 1e+50 best solution, best possible 339 (1049.12 seconds)
Cbc0010I After 1300 nodes, 29 on tree, 1e+50 best solution, best possible 339 (1133.20 seconds)
Cbc0010I After 1400 nodes, 33 on tree, 1e+50 best solution, best possible 339 (1196.82 seconds)
Cbc0010I After 1500 nodes, 28 on tree, 1e+50 best solution, best possible 339 (1248.07 seconds)
Cbc0010I After 1600 nodes, 25 on tree, 1e+50 best solution, best possible 339 (1325.46 seconds)
Cbc0010I After 1700 nodes, 20 on tree, 1e+50 best solution, best possible 339 (1399.56 seconds)
Cbc0010I After 1800 nodes, 20 on tree, 1e+50 best solution, best possible 339 (1478.22 seconds)
Cbc0010I After 1900 nodes, 20 on tree, 1e+50 best solution, best possible 339 (1622.40 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 339), took 2567566 iterations and 2000 nodes (1795.64 seconds)
Cbc0032I Strong branching done 19448 times (1597424 iterations), fathomed 122 nodes and fixed 933 variables
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost
Cuts at root node changed objective from 339 to 339
Probing was tried 496 times and created 124491 cuts of which 0 were active after adding rounds of cuts (3.699 seconds)
Gomory was tried 246 times and created 255 cuts of which 0 were active after adding rounds of cuts (3.463 seconds)
Knapsack was tried 246 times and created 1993 cuts of which 0 were active after adding rounds of cuts (0.604 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
MixedIntegerRounding2 was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.563 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.112 seconds)
ImplicationCuts was tried 16 times and created 214 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    339.000
Enumerated nodes:               2000
Total iterations:               2567566
Time (CPU seconds):             1795.64
Time (Wallclock seconds):       1796.10

Total time (CPU seconds):       1795.69   (Wallclock seconds):       1796.16

