Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump40_default_input.lp sec 1800 solve solu solutions/new_tr/jump40_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 40504.7 - 3.55 seconds
Cgl0002I 324 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 506 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 4518 rows, 1324 columns (1324 integer (1283 of which binary)) and 15402 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1324 objects (1324 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 840 integers unsatisfied sum - 251.135
Cbc0038I Pass   1: (4.39 seconds) suminf.  123.15031 (813) obj. 63450.3 iterations 1977
Cbc0038I Pass   2: (4.62 seconds) suminf.   87.71431 (801) obj. 63030.5 iterations 878
Cbc0038I Pass   3: (4.69 seconds) suminf.   85.91700 (793) obj. 63167.2 iterations 232
Cbc0038I Pass   4: (4.76 seconds) suminf.   85.72106 (776) obj. 63349.9 iterations 194
Cbc0038I Pass   5: (4.83 seconds) suminf.   82.18260 (775) obj. 63181.5 iterations 191
Cbc0038I Pass   6: (4.87 seconds) suminf.   83.42265 (754) obj. 63107.6 iterations 95
Cbc0038I Pass   7: (4.96 seconds) suminf.   77.80251 (750) obj. 63427 iterations 322
Cbc0038I Pass   8: (5.03 seconds) suminf.   77.89042 (760) obj. 63366.7 iterations 222
Cbc0038I Pass   9: (5.06 seconds) suminf.   76.54163 (787) obj. 63369.4 iterations 118
Cbc0038I Pass  10: (5.13 seconds) suminf.   73.75736 (783) obj. 63163.7 iterations 224
Cbc0038I Pass  11: (5.15 seconds) suminf.   72.89664 (756) obj. 63268.9 iterations 42
Cbc0038I Pass  12: (5.20 seconds) suminf.   72.03602 (751) obj. 63104.5 iterations 135
Cbc0038I Pass  13: (5.24 seconds) suminf.   70.40846 (763) obj. 63126.4 iterations 130
Cbc0038I Pass  14: (5.40 seconds) suminf.   60.09356 (804) obj. 63471.3 iterations 612
Cbc0038I Pass  15: (5.46 seconds) suminf.   55.68715 (801) obj. 63108.9 iterations 170
Cbc0038I Pass  16: (5.50 seconds) suminf.   54.49636 (804) obj. 63080.9 iterations 119
Cbc0038I Pass  17: (5.68 seconds) suminf.   60.77479 (809) obj. 63699.7 iterations 707
Cbc0038I Pass  18: (5.75 seconds) suminf.   60.73450 (831) obj. 63491 iterations 189
Cbc0038I Pass  19: (5.80 seconds) suminf.   60.03339 (816) obj. 63540.4 iterations 158
Cbc0038I Pass  20: (5.94 seconds) suminf.   58.39200 (814) obj. 63081.9 iterations 525
Cbc0038I Pass  21: (6.02 seconds) suminf.   52.79121 (820) obj. 63539.7 iterations 285
Cbc0038I Pass  22: (6.09 seconds) suminf.   52.46359 (820) obj. 63507.2 iterations 182
Cbc0038I Pass  23: (6.20 seconds) suminf.   52.58343 (797) obj. 63378.8 iterations 428
Cbc0038I Pass  24: (6.28 seconds) suminf.   51.16575 (804) obj. 63530.4 iterations 275
Cbc0038I Pass  25: (6.48 seconds) suminf.   61.94053 (818) obj. 66663.5 iterations 826
Cbc0038I Pass  26: (6.56 seconds) suminf.   60.22100 (822) obj. 68370.1 iterations 274
Cbc0038I Pass  27: (6.62 seconds) suminf.   59.24721 (833) obj. 68802 iterations 172
Cbc0038I Pass  28: (6.77 seconds) suminf.   59.97947 (827) obj. 63764.4 iterations 589
Cbc0038I Pass  29: (6.85 seconds) suminf.   55.82549 (836) obj. 63884.1 iterations 276
Cbc0038I Pass  30: (6.92 seconds) suminf.   52.39578 (842) obj. 63832.2 iterations 243
Cbc0038I Pass  31: (7.02 seconds) suminf.   59.12322 (833) obj. 62855.2 iterations 361
Cbc0038I Pass  32: (7.07 seconds) suminf.   57.86882 (827) obj. 63219.9 iterations 155
Cbc0038I Pass  33: (7.12 seconds) suminf.   57.73626 (820) obj. 63926 iterations 126
Cbc0038I Pass  34: (7.32 seconds) suminf.   59.77507 (819) obj. 61172.2 iterations 867
Cbc0038I Pass  35: (7.42 seconds) suminf.   53.89822 (840) obj. 61147.4 iterations 354
Cbc0038I Pass  36: (7.49 seconds) suminf.   50.55453 (829) obj. 61094.3 iterations 229
Cbc0038I Pass  37: (7.52 seconds) suminf.   50.91563 (818) obj. 61121.4 iterations 75
Cbc0038I Pass  38: (7.68 seconds) suminf.   54.73719 (835) obj. 60709.2 iterations 657
Cbc0038I Pass  39: (7.75 seconds) suminf.   52.26468 (840) obj. 60471.8 iterations 236
Cbc0038I Pass  40: (7.78 seconds) suminf.   52.32267 (846) obj. 60713.5 iterations 106
Cbc0038I Pass  41: (7.87 seconds) suminf.   54.53205 (811) obj. 61115.8 iterations 373
Cbc0038I Pass  42: (7.96 seconds) suminf.   51.12667 (796) obj. 61170.3 iterations 376
Cbc0038I Pass  43: (7.97 seconds) suminf.   51.20869 (796) obj. 61174.7 iterations 4
Cbc0038I Pass  44: (8.08 seconds) suminf.   52.70662 (807) obj. 61285.9 iterations 501
Cbc0038I Pass  45: (8.16 seconds) suminf.   51.41410 (799) obj. 61315.3 iterations 286
Cbc0038I Pass  46: (8.34 seconds) suminf.   48.83668 (826) obj. 62439.7 iterations 789
Cbc0038I Pass  47: (8.42 seconds) suminf.   48.66190 (838) obj. 61213.5 iterations 314
Cbc0038I Pass  48: (8.53 seconds) suminf.   52.88466 (838) obj. 60936.7 iterations 439
Cbc0038I Pass  49: (8.63 seconds) suminf.   49.61320 (840) obj. 60825.5 iterations 430
Cbc0038I Pass  50: (8.66 seconds) suminf.   49.76343 (818) obj. 60815.7 iterations 121
Cbc0038I Pass  51: (8.80 seconds) suminf.   49.55293 (822) obj. 61330.4 iterations 628
Cbc0038I Pass  52: (8.89 seconds) suminf.   47.95761 (815) obj. 62516.3 iterations 297
Cbc0038I Pass  53: (8.90 seconds) suminf.   47.49180 (817) obj. 62478.1 iterations 35
Cbc0038I Pass  54: (8.96 seconds) suminf.   48.02491 (820) obj. 62510.4 iterations 168
Cbc0038I Pass  55: (9.10 seconds) suminf.   51.63519 (808) obj. 60959.8 iterations 608
Cbc0038I Pass  56: (9.17 seconds) suminf.   49.60847 (808) obj. 61031 iterations 272
Cbc0038I Pass  57: (9.21 seconds) suminf.   50.13062 (803) obj. 61155.5 iterations 135
Cbc0038I Pass  58: (9.32 seconds) suminf.   52.14189 (791) obj. 60815.7 iterations 530
Cbc0038I Pass  59: (9.36 seconds) suminf.   51.66027 (797) obj. 60827.4 iterations 149
Cbc0038I Pass  60: (9.48 seconds) suminf.   51.57477 (835) obj. 60758.1 iterations 527
Cbc0038I Pass  61: (9.55 seconds) suminf.   50.00839 (822) obj. 61221.5 iterations 249
Cbc0038I Pass  62: (9.60 seconds) suminf.   48.73087 (814) obj. 60926.9 iterations 169
Cbc0038I Pass  63: (9.64 seconds) suminf.   49.23929 (816) obj. 60932 iterations 133
Cbc0038I Pass  64: (9.73 seconds) suminf.   51.71341 (820) obj. 61860.2 iterations 441
Cbc0038I Pass  65: (9.84 seconds) suminf.   49.04788 (814) obj. 60815.7 iterations 460
Cbc0038I Pass  66: (9.86 seconds) suminf.   48.45016 (817) obj. 60815.7 iterations 77
Cbc0038I Pass  67: (9.94 seconds) suminf.   51.16091 (831) obj. 60696.6 iterations 288
Cbc0038I Pass  68: (10.00 seconds) suminf.   48.90898 (820) obj. 60981 iterations 258
Cbc0038I Pass  69: (10.12 seconds) suminf.   50.07408 (822) obj. 60883.6 iterations 527
Cbc0038I Pass  70: (10.18 seconds) suminf.   51.62521 (830) obj. 61308.1 iterations 182
Cbc0038I Pass  71: (10.23 seconds) suminf.   48.73604 (828) obj. 61856.2 iterations 164
Cbc0038I Pass  72: (10.34 seconds) suminf.   50.79829 (820) obj. 61800.6 iterations 441
Cbc0038I Pass  73: (10.40 seconds) suminf.   49.76688 (839) obj. 60799.4 iterations 214
Cbc0038I Pass  74: (10.45 seconds) suminf.   49.00055 (833) obj. 60796.2 iterations 153
Cbc0038I Pass  75: (10.57 seconds) suminf.   50.92524 (825) obj. 60815 iterations 577
Cbc0038I Pass  76: (10.66 seconds) suminf.   48.08778 (821) obj. 61103.7 iterations 368
Cbc0038I Pass  77: (10.74 seconds) suminf.   47.57118 (807) obj. 61215.6 iterations 304
Cbc0038I Pass  78: (10.83 seconds) suminf.   52.23092 (816) obj. 62048.1 iterations 381
Cbc0038I Pass  79: (10.91 seconds) suminf.   47.54613 (809) obj. 60984 iterations 355
Cbc0038I Pass  80: (10.94 seconds) suminf.   48.05398 (811) obj. 61023.2 iterations 81
Cbc0038I Pass  81: (11.04 seconds) suminf.   49.40242 (821) obj. 61668.3 iterations 455
Cbc0038I Pass  82: (11.14 seconds) suminf.   48.17863 (821) obj. 60508.2 iterations 387
Cbc0038I Pass  83: (11.17 seconds) suminf.   47.46149 (820) obj. 60508.2 iterations 103
Cbc0038I Pass  84: (11.26 seconds) suminf.   49.26309 (804) obj. 60522.6 iterations 430
Cbc0038I Pass  85: (11.35 seconds) suminf.   47.66208 (800) obj. 60651.6 iterations 381
Cbc0038I Pass  86: (11.51 seconds) suminf.   50.59104 (839) obj. 60845.5 iterations 702
Cbc0038I Pass  87: (11.58 seconds) suminf.   49.25877 (843) obj. 60711.2 iterations 208
Cbc0038I Pass  88: (11.71 seconds) suminf.   51.51674 (808) obj. 61446.3 iterations 518
Cbc0038I Pass  89: (11.80 seconds) suminf.   48.70613 (833) obj. 61325.6 iterations 329
Cbc0038I Pass  90: (11.90 seconds) suminf.   50.69068 (835) obj. 61480.3 iterations 381
Cbc0038I Pass  91: (11.99 seconds) suminf.   48.88205 (840) obj. 60829.3 iterations 343
Cbc0038I Pass  92: (12.09 seconds) suminf.   52.30277 (815) obj. 64784.5 iterations 447
Cbc0038I Pass  93: (12.18 seconds) suminf.   49.32679 (802) obj. 66586.8 iterations 414
Cbc0038I Pass  94: (12.20 seconds) suminf.   49.60885 (808) obj. 66436.6 iterations 57
Cbc0038I Pass  95: (12.28 seconds) suminf.   49.92665 (824) obj. 65577.6 iterations 312
Cbc0038I Pass  96: (12.37 seconds) suminf.   48.93292 (799) obj. 65955.4 iterations 354
Cbc0038I Pass  97: (12.43 seconds) suminf.   50.13514 (816) obj. 66354.8 iterations 273
Cbc0038I Pass  98: (12.50 seconds) suminf.   49.99827 (803) obj. 66455.5 iterations 226
Cbc0038I Pass  99: (12.53 seconds) suminf.   49.36412 (808) obj. 66037.8 iterations 122
Cbc0038I Pass 100: (12.89 seconds) suminf.   84.89224 (834) obj. 79103.8 iterations 1464
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4518 rows 1324 columns, reduced to 4294 rows 1226 columns - too large
Cbc0038I Mini branch and bound did not improve solution (14.21 seconds)
Cbc0038I After 14.21 seconds - Feasibility pump exiting - took 10.31 seconds
Cbc0031I 52 added rows had average density of 84.269231
Cbc0013I At root node, 52 cuts changed objective from 40504.676 to 41872.116 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 21 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 206 row cuts average 262.7 elements, 0 column cuts (0 active)  in 0.684 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 321 row cuts average 101.5 elements, 0 column cuts (0 active)  in 0.505 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 34 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.605 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 41872.116 (35.82 seconds)
Cbc0010I After 100 nodes, 25 on tree, 1e+50 best solution, best possible 41927.646 (190.77 seconds)
Cbc0010I After 200 nodes, 18 on tree, 1e+50 best solution, best possible 41927.646 (299.25 seconds)
Cbc0010I After 300 nodes, 24 on tree, 1e+50 best solution, best possible 41927.646 (411.30 seconds)
Cbc0010I After 400 nodes, 40 on tree, 1e+50 best solution, best possible 41927.646 (489.15 seconds)
Cbc0010I After 500 nodes, 48 on tree, 1e+50 best solution, best possible 41927.646 (557.79 seconds)
Cbc0010I After 600 nodes, 45 on tree, 1e+50 best solution, best possible 41927.646 (632.50 seconds)
Cbc0010I After 700 nodes, 42 on tree, 1e+50 best solution, best possible 41927.646 (694.27 seconds)
Cbc0010I After 800 nodes, 39 on tree, 1e+50 best solution, best possible 41927.646 (767.97 seconds)
Cbc0010I After 900 nodes, 44 on tree, 1e+50 best solution, best possible 41927.646 (846.18 seconds)
Cbc0010I After 1000 nodes, 58 on tree, 1e+50 best solution, best possible 41927.646 (935.23 seconds)
Cbc0010I After 1100 nodes, 62 on tree, 1e+50 best solution, best possible 41984 (1010.25 seconds)
Cbc0010I After 1200 nodes, 57 on tree, 1e+50 best solution, best possible 41984 (1080.43 seconds)
Cbc0010I After 1300 nodes, 59 on tree, 1e+50 best solution, best possible 41984 (1145.70 seconds)
Cbc0010I After 1400 nodes, 51 on tree, 1e+50 best solution, best possible 41984 (1210.28 seconds)
Cbc0010I After 1500 nodes, 52 on tree, 1e+50 best solution, best possible 41984 (1281.06 seconds)
Cbc0010I After 1600 nodes, 47 on tree, 1e+50 best solution, best possible 41984 (1354.02 seconds)
Cbc0010I After 1700 nodes, 50 on tree, 1e+50 best solution, best possible 41984 (1425.83 seconds)
Cbc0010I After 1800 nodes, 45 on tree, 1e+50 best solution, best possible 41984 (1496.17 seconds)
Cbc0010I After 1900 nodes, 39 on tree, 1e+50 best solution, best possible 41984 (1572.52 seconds)
Cbc0010I After 2000 nodes, 51 on tree, 1e+50 best solution, best possible 41984 (1637.02 seconds)
Cbc0010I After 2100 nodes, 48 on tree, 1e+50 best solution, best possible 41984 (1697.70 seconds)
Cbc0010I After 2200 nodes, 40 on tree, 1e+50 best solution, best possible 41984 (1757.97 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 41984), took 3215407 iterations and 2269 nodes (1799.67 seconds)
Cbc0032I Strong branching done 21574 times (1957892 iterations), fathomed 161 nodes and fixed 1001 variables
Cbc0035I Maximum depth 54, 0 variables fixed on reduced cost
Cuts at root node changed objective from 40504.7 to 41872.1
Probing was tried 10 times and created 21 cuts of which 0 were active after adding rounds of cuts (0.086 seconds)
Gomory was tried 414 times and created 986 cuts of which 0 were active after adding rounds of cuts (5.123 seconds)
Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 414 times and created 9108 cuts of which 0 were active after adding rounds of cuts (2.130 seconds)
ZeroHalf was tried 414 times and created 917 cuts of which 0 were active after adding rounds of cuts (24.572 seconds)
ImplicationCuts was tried 36 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    41984.000
Enumerated nodes:               2269
Total iterations:               3215407
Time (CPU seconds):             1799.67
Time (Wallclock seconds):       1801.04

Total time (CPU seconds):       1799.70   (Wallclock seconds):       1801.07

