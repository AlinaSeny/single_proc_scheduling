Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag412_down_left_input.lp sec 1800 solve solu solutions/new_tr/dag412_down_left_input.lp (default strategy 1)
### CoinLpIO::is_invalid_name(): Name 6384 should not start with a number
### CoinLpIO::are_invalid_names(): Invalid name: vnames[4486]: 6384
### CoinLpIO::readLp(): Invalid column names
Now using default column names.
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.06134e+06 - 15.44 seconds
Cgl0002I 2525 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1774 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 227 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 9296 rows, 2982 columns (2982 integer (2916 of which binary)) and 31068 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2982 objects (2982 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1612 integers unsatisfied sum - 377.554
Cbc0038I Pass   1: (27.50 seconds) suminf.  208.38525 (1537) obj. 1.40574e+06 iterations 5377
Cbc0038I Pass   2: (28.25 seconds) suminf.  196.53478 (1466) obj. 1.48103e+06 iterations 1401
Cbc0038I Pass   3: (28.91 seconds) suminf.  185.27186 (1426) obj. 1.50727e+06 iterations 1179
Cbc0038I Pass   4: (29.22 seconds) suminf.  181.16199 (1396) obj. 1.53502e+06 iterations 517
Cbc0038I Pass   5: (29.25 seconds) suminf.  181.34902 (1391) obj. 1.53605e+06 iterations 25
Cbc0038I Pass   6: (29.66 seconds) suminf.  173.94861 (1328) obj. 1.58221e+06 iterations 760
Cbc0038I Pass   7: (30.09 seconds) suminf.  160.80639 (1311) obj. 1.54986e+06 iterations 839
Cbc0038I Pass   8: (30.35 seconds) suminf.  161.96467 (1297) obj. 1.55038e+06 iterations 450
Cbc0038I Pass   9: (30.66 seconds) suminf.  154.29687 (1264) obj. 1.5641e+06 iterations 614
Cbc0038I Pass  10: (30.74 seconds) suminf.  153.23030 (1268) obj. 1.58797e+06 iterations 128
Cbc0038I Pass  11: (31.01 seconds) suminf.  151.94173 (1264) obj. 1.59161e+06 iterations 506
Cbc0038I Pass  12: (31.08 seconds) suminf.  152.07608 (1261) obj. 1.58812e+06 iterations 104
Cbc0038I Pass  13: (31.10 seconds) suminf.  152.20019 (1261) obj. 1.58812e+06 iterations 9
Cbc0038I Pass  14: (31.32 seconds) suminf.  149.64546 (1256) obj. 1.58405e+06 iterations 381
Cbc0038I Pass  15: (31.42 seconds) suminf.  148.87265 (1260) obj. 1.58887e+06 iterations 155
Cbc0038I Pass  16: (31.70 seconds) suminf.  147.44055 (1260) obj. 1.56075e+06 iterations 513
Cbc0038I Pass  17: (31.89 seconds) suminf.  146.93753 (1238) obj. 1.54842e+06 iterations 316
Cbc0038I Pass  18: (32.29 seconds) suminf.  146.40168 (1230) obj. 1.57604e+06 iterations 807
Cbc0038I Pass  19: (32.40 seconds) suminf.  144.57632 (1258) obj. 1.58793e+06 iterations 158
Cbc0038I Pass  20: (32.60 seconds) suminf.  146.03728 (1232) obj. 1.59117e+06 iterations 311
Cbc0038I Pass  21: (32.68 seconds) suminf.  145.06493 (1250) obj. 1.59116e+06 iterations 126
Cbc0038I Pass  22: (32.74 seconds) suminf.  145.14639 (1250) obj. 1.58738e+06 iterations 89
Cbc0038I Pass  23: (32.78 seconds) suminf.  144.86384 (1251) obj. 1.58648e+06 iterations 49
Cbc0038I Pass  24: (32.92 seconds) suminf.  147.45775 (1237) obj. 1.65267e+06 iterations 206
Cbc0038I Pass  25: (33.03 seconds) suminf.  147.17890 (1258) obj. 1.64635e+06 iterations 169
Cbc0038I Pass  26: (33.28 seconds) suminf.  147.26949 (1246) obj. 1.74365e+06 iterations 420
Cbc0038I Pass  27: (33.39 seconds) suminf.  146.37685 (1272) obj. 1.74618e+06 iterations 154
Cbc0038I Pass  28: (33.41 seconds) suminf.  147.14803 (1269) obj. 1.74658e+06 iterations 10
Cbc0038I Pass  29: (33.49 seconds) suminf.  147.92006 (1250) obj. 1.744e+06 iterations 104
Cbc0038I Pass  30: (33.57 seconds) suminf.  145.95815 (1263) obj. 1.74816e+06 iterations 128
Cbc0038I Pass  31: (33.66 seconds) suminf.  147.15586 (1254) obj. 1.74108e+06 iterations 135
Cbc0038I Pass  32: (33.72 seconds) suminf.  146.34433 (1260) obj. 1.74761e+06 iterations 78
Cbc0038I Pass  33: (33.83 seconds) suminf.  145.95491 (1227) obj. 1.74776e+06 iterations 162
Cbc0038I Pass  34: (34.00 seconds) suminf.  145.13738 (1292) obj. 1.74767e+06 iterations 245
Cbc0038I Pass  35: (34.14 seconds) suminf.  145.05335 (1274) obj. 1.74187e+06 iterations 196
Cbc0038I Pass  36: (34.21 seconds) suminf.  144.22383 (1302) obj. 1.74469e+06 iterations 85
Cbc0038I Pass  37: (34.29 seconds) suminf.  145.21998 (1282) obj. 1.74653e+06 iterations 119
Cbc0038I Pass  38: (34.34 seconds) suminf.  145.26302 (1286) obj. 1.74815e+06 iterations 58
Cbc0038I Pass  39: (34.47 seconds) suminf.  145.86538 (1278) obj. 1.74007e+06 iterations 191
Cbc0038I Pass  40: (34.55 seconds) suminf.  144.80601 (1302) obj. 1.7451e+06 iterations 118
Cbc0038I Pass  41: (34.63 seconds) suminf.  144.85265 (1271) obj. 1.74619e+06 iterations 112
Cbc0038I Pass  42: (34.70 seconds) suminf.  144.45179 (1292) obj. 1.74756e+06 iterations 87
Cbc0038I Pass  43: (34.86 seconds) suminf.  145.71910 (1278) obj. 1.74054e+06 iterations 228
Cbc0038I Pass  44: (34.92 seconds) suminf.  145.22257 (1285) obj. 1.74733e+06 iterations 92
Cbc0038I Pass  45: (35.04 seconds) suminf.  146.44800 (1254) obj. 1.74836e+06 iterations 162
Cbc0038I Pass  46: (35.14 seconds) suminf.  145.26302 (1286) obj. 1.74815e+06 iterations 150
Cbc0038I Pass  47: (35.28 seconds) suminf.  146.41225 (1275) obj. 1.74049e+06 iterations 201
Cbc0038I Pass  48: (36.67 seconds) suminf.  170.52714 (1290) obj. 1.96338e+06 iterations 2824
Cbc0038I Pass  49: (37.58 seconds) suminf.  125.41663 (1138) obj. 2.00742e+06 iterations 1988
Cbc0038I Pass  50: (37.73 seconds) suminf.  123.58036 (1138) obj. 2.0074e+06 iterations 229
Cbc0038I Pass  51: (37.78 seconds) suminf.  123.76557 (1141) obj. 2.00439e+06 iterations 81
Cbc0038I Pass  52: (38.06 seconds) suminf.  120.04371 (1142) obj. 2.01423e+06 iterations 544
Cbc0038I Pass  53: (38.11 seconds) suminf.  121.52341 (1149) obj. 2.01219e+06 iterations 70
Cbc0038I Pass  54: (38.33 seconds) suminf.  116.32630 (1121) obj. 2.02016e+06 iterations 365
Cbc0038I Pass  55: (38.39 seconds) suminf.  117.04865 (1125) obj. 2.01295e+06 iterations 89
Cbc0038I Pass  56: (38.50 seconds) suminf.  116.14614 (1133) obj. 2.01766e+06 iterations 175
Cbc0038I Pass  57: (38.56 seconds) suminf.  115.78711 (1118) obj. 2.01575e+06 iterations 98
Cbc0038I Pass  58: (38.77 seconds) suminf.  112.41451 (1109) obj. 2.01986e+06 iterations 362
Cbc0038I Pass  59: (38.83 seconds) suminf.  113.62718 (1105) obj. 2.01974e+06 iterations 99
Cbc0038I Pass  60: (39.07 seconds) suminf.  109.30891 (1095) obj. 1.84476e+06 iterations 427
Cbc0038I Pass  61: (39.18 seconds) suminf.  110.70458 (1089) obj. 1.84396e+06 iterations 176
Cbc0038I Pass  62: (39.27 seconds) suminf.  108.76025 (1073) obj. 1.84606e+06 iterations 146
Cbc0038I Pass  63: (39.33 seconds) suminf.  109.74120 (1070) obj. 1.84452e+06 iterations 96
Cbc0038I Pass  64: (39.49 seconds) suminf.  107.38431 (1076) obj. 1.84442e+06 iterations 247
Cbc0038I Pass  65: (39.54 seconds) suminf.  107.97630 (1071) obj. 1.84417e+06 iterations 64
Cbc0038I Pass  66: (39.64 seconds) suminf.  107.85120 (1064) obj. 1.90377e+06 iterations 167
Cbc0038I Pass  67: (39.67 seconds) suminf.  107.56516 (1066) obj. 1.89862e+06 iterations 30
Cbc0038I Pass  68: (39.73 seconds) suminf.  106.14060 (1072) obj. 1.89849e+06 iterations 96
Cbc0038I Pass  69: (39.77 seconds) suminf.  106.25784 (1069) obj. 1.89839e+06 iterations 59
Cbc0038I Pass  70: (39.95 seconds) suminf.  102.64206 (1065) obj. 1.84135e+06 iterations 303
Cbc0038I Pass  71: (39.99 seconds) suminf.  103.22970 (1065) obj. 1.84122e+06 iterations 65
Cbc0038I Pass  72: (40.12 seconds) suminf.  102.93328 (1078) obj. 1.8431e+06 iterations 211
Cbc0038I Pass  73: (40.32 seconds) suminf.  102.22636 (1078) obj. 1.84518e+06 iterations 348
Cbc0038I Pass  74: (40.55 seconds) suminf.  102.89651 (1053) obj. 1.85477e+06 iterations 438
Cbc0038I Pass  75: (40.69 seconds) suminf.  101.15179 (1060) obj. 1.85381e+06 iterations 226
Cbc0038I Pass  76: (40.80 seconds) suminf.  100.65403 (1060) obj. 1.85447e+06 iterations 187
Cbc0038I Pass  77: (40.86 seconds) suminf.  100.59482 (1096) obj. 1.85336e+06 iterations 91
Cbc0038I Pass  78: (41.11 seconds) suminf.  102.47390 (1059) obj. 1.85018e+06 iterations 450
Cbc0038I Pass  79: (41.18 seconds) suminf.  101.41485 (1057) obj. 1.85038e+06 iterations 116
Cbc0038I Pass  80: (41.30 seconds) suminf.  102.85651 (1066) obj. 1.84781e+06 iterations 195
Cbc0038I Pass  81: (41.37 seconds) suminf.  102.16222 (1060) obj. 1.84758e+06 iterations 103
Cbc0038I Pass  82: (41.56 seconds) suminf.   99.64987 (1075) obj. 1.83976e+06 iterations 324
Cbc0038I Pass  83: (41.67 seconds) suminf.   99.72543 (1082) obj. 1.82772e+06 iterations 190
Cbc0038I Pass  84: (41.81 seconds) suminf.   99.65730 (1059) obj. 1.82806e+06 iterations 211
Cbc0038I Pass  85: (41.89 seconds) suminf.   99.28423 (1064) obj. 1.82778e+06 iterations 114
Cbc0038I Pass  86: (41.99 seconds) suminf.   99.78717 (1057) obj. 1.82746e+06 iterations 166
Cbc0038I Pass  87: (42.09 seconds) suminf.   99.42318 (1074) obj. 1.82744e+06 iterations 147
Cbc0038I Pass  88: (42.13 seconds) suminf.   99.28431 (1066) obj. 1.8275e+06 iterations 65
Cbc0038I Pass  89: (42.19 seconds) suminf.   99.09953 (1072) obj. 1.82753e+06 iterations 72
Cbc0038I Pass  90: (42.24 seconds) suminf.   98.41968 (1068) obj. 1.82643e+06 iterations 86
Cbc0038I Pass  91: (43.61 seconds) suminf.  137.15156 (1153) obj. 1.72698e+06 iterations 2913
Cbc0038I Pass  92: (44.45 seconds) suminf.  103.71573 (1066) obj. 1.78155e+06 iterations 1886
Cbc0038I Pass  93: (44.67 seconds) suminf.   99.31902 (1072) obj. 1.77721e+06 iterations 408
Cbc0038I Pass  94: (44.74 seconds) suminf.   98.83521 (1076) obj. 1.77707e+06 iterations 112
Cbc0038I Pass  95: (44.75 seconds) suminf.   98.83521 (1076) obj. 1.77707e+06 iterations 3
Cbc0038I Pass  96: (44.83 seconds) suminf.   99.20157 (1080) obj. 1.77847e+06 iterations 114
Cbc0038I Pass  97: (44.87 seconds) suminf.   99.01387 (1075) obj. 1.77854e+06 iterations 55
Cbc0038I Pass  98: (45.18 seconds) suminf.   94.68355 (1032) obj. 1.77588e+06 iterations 612
Cbc0038I Pass  99: (45.24 seconds) suminf.   94.71621 (1040) obj. 1.77176e+06 iterations 103
Cbc0038I Pass 100: (46.33 seconds) suminf.  122.42141 (1107) obj. 2.03417e+06 iterations 2409
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 446 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9296 rows 2982 columns, reduced to 7882 rows 2421 columns - too large
Cbc0038I Mini branch and bound did not improve solution (47.01 seconds)
Cbc0038I After 47.01 seconds - Feasibility pump exiting - took 22.76 seconds
Cbc0031I 158 added rows had average density of 30.791139
Cbc0013I At root node, 158 cuts changed objective from 1099736 to 1140108.2 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 159 row cuts average 2.6 elements, 2 column cuts (2 active)  in 0.474 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 609 row cuts average 38.5 elements, 0 column cuts (0 active)  in 4.941 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 102 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 8 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 788 row cuts average 79.0 elements, 0 column cuts (0 active)  in 1.581 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 36 row cuts average 49.7 elements, 0 column cuts (0 active)  in 3.997 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1140108.2 (246.11 seconds)
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 1144174.2 (1723.90 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1144174.2), took 2041268 iterations and 105 nodes (1846.39 seconds)
Cbc0032I Strong branching done 1102 times (105093 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.09974e+06 to 1.14011e+06
Probing was tried 49 times and created 469 cuts of which 0 were active after adding rounds of cuts (0.610 seconds)
Gomory was tried 49 times and created 665 cuts of which 0 were active after adding rounds of cuts (5.931 seconds)
Knapsack was tried 49 times and created 177 cuts of which 0 were active after adding rounds of cuts (0.154 seconds)
Clique was tried 19 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.158 seconds)
MixedIntegerRounding2 was tried 19 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.072 seconds)
FlowCover was tried 19 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
TwoMirCuts was tried 49 times and created 2121 cuts of which 0 were active after adding rounds of cuts (3.069 seconds)
ZeroHalf was tried 19 times and created 36 cuts of which 0 were active after adding rounds of cuts (3.997 seconds)
ImplicationCuts was tried 24 times and created 342 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1144174.216
Enumerated nodes:               105
Total iterations:               2041268
Time (CPU seconds):             1846.40
Time (Wallclock seconds):       1846.72

Total time (CPU seconds):       1846.46   (Wallclock seconds):       1846.79

