Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag316_tiers_input.lp sec 1800 solve solu solutions/new_tr/dag316_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 689006 - 0.03 seconds
Cgl0002I 757 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 338 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 1803 rows, 584 columns (584 integer (551 of which binary)) and 5987 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 584 objects (584 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 167 integers unsatisfied sum - 42.346
Cbc0038I Pass   1: suminf.   28.52509 (179) obj. 843934 iterations 446
Cbc0038I Pass   2: suminf.   26.35876 (175) obj. 850620 iterations 120
Cbc0038I Pass   3: suminf.   20.89906 (146) obj. 847062 iterations 124
Cbc0038I Pass   4: suminf.   18.97491 (146) obj. 846729 iterations 45
Cbc0038I Pass   5: suminf.   10.19478 (126) obj. 847218 iterations 250
Cbc0038I Pass   6: suminf.   10.09223 (123) obj. 847191 iterations 9
Cbc0038I Pass   7: suminf.    8.20342 (90) obj. 837619 iterations 160
Cbc0038I Pass   8: suminf.    7.28012 (83) obj. 839075 iterations 40
Cbc0038I Pass   9: suminf.    7.28012 (83) obj. 839075 iterations 1
Cbc0038I Pass  10: suminf.    3.50345 (50) obj. 837576 iterations 91
Cbc0038I Pass  11: suminf.    3.38290 (49) obj. 837583 iterations 48
Cbc0038I Pass  12: suminf.    1.61269 (18) obj. 737280 iterations 143
Cbc0038I Pass  13: suminf.    1.61269 (18) obj. 737280 iterations 6
Cbc0038I Pass  14: suminf.    0.00000 (0) obj. 737280 iterations 207
Cbc0038I Solution found of 737280
Cbc0038I Cleaned solution of 737280
Cbc0038I Before mini branch and bound, 299 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 1803 rows 584 columns, reduced to 948 rows 282 columns - 29 fixed gives 711, 206 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I Round again with cutoff of 732539
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 2
Cbc0038I Pass  15: suminf.   29.96376 (172) obj. 732539 iterations 37
Cbc0038I Pass  16: suminf.   25.54684 (158) obj. 732539 iterations 166
Cbc0038I Pass  17: suminf.   20.61545 (145) obj. 732539 iterations 147
Cbc0038I Pass  18: suminf.   12.25334 (127) obj. 732539 iterations 266
Cbc0038I Pass  19: suminf.   10.85168 (124) obj. 732539 iterations 23
Cbc0038I Pass  20: suminf.    6.90864 (78) obj. 732539 iterations 198
Cbc0038I Pass  21: suminf.    4.24297 (75) obj. 732539 iterations 41
Cbc0038I Pass  22: suminf.    3.58736 (53) obj. 732539 iterations 10
Cbc0038I Pass  23: suminf.    6.83314 (77) obj. 732539 iterations 232
Cbc0038I Pass  24: suminf.    7.26669 (65) obj. 732539 iterations 14
Cbc0038I Pass  25: suminf.    3.31337 (44) obj. 732539 iterations 312
Cbc0038I Pass  26: suminf.    3.31337 (44) obj. 732539 iterations 3
Cbc0038I Pass  27: suminf.    5.65224 (56) obj. 732539 iterations 268
Cbc0038I Pass  28: suminf.    4.96315 (51) obj. 732539 iterations 5
Cbc0038I Pass  29: suminf.    3.18893 (72) obj. 732539 iterations 90
Cbc0038I Pass  30: suminf.    1.52044 (27) obj. 732539 iterations 164
Cbc0038I Pass  31: suminf.    5.74444 (45) obj. 732539 iterations 83
Cbc0038I Pass  32: suminf.    5.13023 (47) obj. 732539 iterations 106
Cbc0038I Pass  33: suminf.   41.49084 (213) obj. 732539 iterations 407
Cbc0038I Pass  34: suminf.   22.81978 (163) obj. 732539 iterations 287
Cbc0038I Pass  35: suminf.   21.17780 (150) obj. 732539 iterations 53
Cbc0038I Pass  36: suminf.    9.99603 (90) obj. 732539 iterations 99
Cbc0038I Pass  37: suminf.    8.42474 (88) obj. 732539 iterations 5
Cbc0038I Pass  38: suminf.    9.74851 (83) obj. 732539 iterations 181
Cbc0038I Pass  39: suminf.    8.53141 (83) obj. 732539 iterations 22
Cbc0038I Pass  40: suminf.    8.41535 (86) obj. 732539 iterations 7
Cbc0038I Pass  41: suminf.    7.12088 (77) obj. 732539 iterations 95
Cbc0038I Pass  42: suminf.    5.92928 (71) obj. 732539 iterations 58
Cbc0038I Pass  43: suminf.    5.47552 (71) obj. 732539 iterations 17
Cbc0038I Pass  44: suminf.    6.06851 (67) obj. 732539 iterations 113
Cbc0038I Pass  45: suminf.    6.06851 (67) obj. 732539 iterations 3
Cbc0038I Pass  46: suminf.    5.82899 (79) obj. 732539 iterations 116
Cbc0038I Pass  47: suminf.    6.08991 (78) obj. 732539 iterations 20
Cbc0038I Pass  48: suminf.    3.82619 (52) obj. 732539 iterations 113
Cbc0038I Pass  49: suminf.    3.99867 (63) obj. 732539 iterations 5
Cbc0038I Pass  50: suminf.    7.59399 (55) obj. 732539 iterations 219
Cbc0038I Pass  51: suminf.    7.59399 (55) obj. 732539 iterations 6
Cbc0038I Pass  52: suminf.    8.68303 (67) obj. 732539 iterations 181
Cbc0038I Pass  53: suminf.    8.63000 (67) obj. 732539 iterations 7
Cbc0038I Pass  54: suminf.    2.97294 (49) obj. 732539 iterations 181
Cbc0038I Pass  55: suminf.    3.01263 (49) obj. 732539 iterations 5
Cbc0038I Pass  56: suminf.    6.87510 (48) obj. 732539 iterations 270
Cbc0038I Pass  57: suminf.    4.75925 (63) obj. 732539 iterations 106
Cbc0038I Pass  58: suminf.    1.58716 (25) obj. 732539 iterations 698
Cbc0038I Pass  59: suminf.    1.51915 (32) obj. 732539 iterations 90
Cbc0038I Pass  60: suminf.    6.04666 (27) obj. 732539 iterations 84
Cbc0038I Pass  61: suminf.    3.32196 (42) obj. 732539 iterations 159
Cbc0038I Pass  62: suminf.    6.35498 (47) obj. 732539 iterations 258
Cbc0038I Pass  63: suminf.    4.42950 (39) obj. 732539 iterations 48
Cbc0038I Pass  64: suminf.    5.26929 (77) obj. 732539 iterations 138
Cbc0038I Pass  65: suminf.    5.24713 (76) obj. 732539 iterations 7
Cbc0038I Pass  66: suminf.    5.80231 (44) obj. 732539 iterations 110
Cbc0038I Pass  67: suminf.    4.51659 (44) obj. 732539 iterations 280
Cbc0038I Pass  68: suminf.    5.47510 (77) obj. 732539 iterations 129
Cbc0038I Pass  69: suminf.   41.22809 (176) obj. 732539 iterations 327
Cbc0038I Pass  70: suminf.   21.69556 (144) obj. 732539 iterations 216
Cbc0038I Pass  71: suminf.   21.39088 (143) obj. 732539 iterations 9
Cbc0038I Pass  72: suminf.   19.97502 (131) obj. 732539 iterations 117
Cbc0038I Pass  73: suminf.   14.78438 (134) obj. 732539 iterations 100
Cbc0038I Pass  74: suminf.   14.84623 (138) obj. 732539 iterations 118
Cbc0038I Pass  75: suminf.   14.94823 (137) obj. 732539 iterations 31
Cbc0038I Pass  76: suminf.   16.99666 (131) obj. 732539 iterations 195
Cbc0038I Pass  77: suminf.   14.62262 (121) obj. 732539 iterations 82
Cbc0038I Pass  78: suminf.   14.43270 (115) obj. 732539 iterations 21
Cbc0038I Pass  79: suminf.   12.14340 (109) obj. 732539 iterations 26
Cbc0038I Pass  80: suminf.   12.14340 (109) obj. 732539 iterations 0
Cbc0038I Pass  81: suminf.   15.03049 (116) obj. 732539 iterations 236
Cbc0038I Pass  82: suminf.   12.02105 (107) obj. 732539 iterations 74
Cbc0038I Pass  83: suminf.   12.01893 (106) obj. 732539 iterations 6
Cbc0038I Pass  84: suminf.   12.13822 (103) obj. 732539 iterations 106
Cbc0038I Pass  85: suminf.    8.93305 (107) obj. 732539 iterations 25
Cbc0038I Pass  86: suminf.   11.61585 (107) obj. 732539 iterations 114
Cbc0038I Pass  87: suminf.   11.55037 (106) obj. 732539 iterations 22
Cbc0038I Pass  88: suminf.   10.59991 (109) obj. 732539 iterations 171
Cbc0038I Pass  89: suminf.    8.84324 (106) obj. 732539 iterations 104
Cbc0038I Pass  90: suminf.   14.42144 (116) obj. 732539 iterations 141
Cbc0038I Pass  91: suminf.   13.69413 (116) obj. 732539 iterations 12
Cbc0038I Pass  92: suminf.    9.56556 (91) obj. 732539 iterations 214
Cbc0038I Pass  93: suminf.    7.53397 (97) obj. 732539 iterations 60
Cbc0038I Pass  94: suminf.    6.06417 (49) obj. 732539 iterations 156
Cbc0038I Pass  95: suminf.    2.74518 (38) obj. 732539 iterations 38
Cbc0038I Pass  96: suminf.    6.09797 (38) obj. 732539 iterations 65
Cbc0038I Pass  97: suminf.    5.66205 (60) obj. 732539 iterations 37
Cbc0038I Pass  98: suminf.    5.29757 (55) obj. 732539 iterations 248
Cbc0038I Pass  99: suminf.    3.49909 (47) obj. 732539 iterations 27
Cbc0038I Pass 100: suminf.    5.29519 (53) obj. 732539 iterations 92
Cbc0038I Pass 101: suminf.    4.63215 (48) obj. 732539 iterations 5
Cbc0038I Pass 102: suminf.    4.35625 (44) obj. 732539 iterations 15
Cbc0038I Pass 103: suminf.    3.22624 (28) obj. 732539 iterations 275
Cbc0038I Pass 104: suminf.    2.29518 (21) obj. 732539 iterations 10
Cbc0038I Pass 105: suminf.    5.03699 (30) obj. 732539 iterations 62
Cbc0038I Pass 106: suminf.    4.61672 (29) obj. 732539 iterations 3
Cbc0038I Pass 107: suminf.    3.67442 (38) obj. 732539 iterations 320
Cbc0038I Pass 108: suminf.    1.97162 (32) obj. 732539 iterations 14
Cbc0038I Pass 109: suminf.    4.73648 (32) obj. 732539 iterations 151
Cbc0038I Pass 110: suminf.    4.71768 (31) obj. 732539 iterations 3
Cbc0038I Pass 111: suminf.    3.54896 (48) obj. 732539 iterations 198
Cbc0038I Pass 112: suminf.    2.09397 (43) obj. 732539 iterations 23
Cbc0038I Pass 113: suminf.    7.91904 (43) obj. 732539 iterations 122
Cbc0038I Pass 114: suminf.   39.01785 (208) obj. 732539 iterations 456
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 128 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1803 rows 584 columns, reduced to 1471 rows 456 columns - 54 fixed gives 1117, 326 - still too large
Cbc0038I Full problem 1803 rows 584 columns, reduced to 326 rows 114 columns
Cbc0038I Mini branch and bound did not improve solution (1.31 seconds)
Cbc0038I After 1.31 seconds - Feasibility pump exiting with objective of 737280 - took 1.17 seconds
Cbc0012I Integer solution of 737280 found by feasibility pump after 0 iterations and 0 nodes (1.31 seconds)
Cbc0038I Full problem 1803 rows 584 columns, reduced to 252 rows 89 columns
Cbc0031I 45 added rows had average density of 136.15556
Cbc0013I At root node, 45 cuts changed objective from 689883.43 to 704512 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 225 row cuts average 3.3 elements, 25 column cuts (25 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 260 row cuts average 262.7 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 737280 best solution, best possible 704512 (2.69 seconds)
Cbc0012I Integer solution of 704512 found by DiveCoefficient after 7149 iterations and 11 nodes (4.49 seconds)
Cbc0001I Search completed - best objective 704512, took 7149 iterations and 11 nodes (4.49 seconds)
Cbc0032I Strong branching done 248 times (10702 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 7 variables fixed on reduced cost
Cuts at root node changed objective from 689883 to 704512
Probing was tried 21 times and created 401 cuts of which 0 were active after adding rounds of cuts (0.059 seconds)
Gomory was tried 10 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Knapsack was tried 21 times and created 28 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 21 times and created 297 cuts of which 0 were active after adding rounds of cuts (0.322 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 14 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                704512.00000000
Enumerated nodes:               11
Total iterations:               7149
Time (CPU seconds):             4.52
Time (Wallclock seconds):       4.56

Total time (CPU seconds):       4.54   (Wallclock seconds):       4.58

