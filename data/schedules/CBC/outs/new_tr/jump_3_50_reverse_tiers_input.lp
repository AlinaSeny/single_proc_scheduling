Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_50_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_3_50_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 53377.3 - 9.44 seconds
Cgl0002I 612 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 857 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 116 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6914 rows, 2008 columns (2008 integer (1957 of which binary)) and 23554 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2008 objects (2008 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1304 integers unsatisfied sum - 337.031
Cbc0038I Pass   1: (24.60 seconds) suminf.  120.50665 (1084) obj. 78453.8 iterations 5338
Cbc0038I Pass   2: (25.11 seconds) suminf.  101.78512 (1004) obj. 84541.2 iterations 1189
Cbc0038I Pass   3: (25.33 seconds) suminf.   97.48444 (1026) obj. 84818.5 iterations 490
Cbc0038I Pass   4: (25.54 seconds) suminf.   95.14983 (1021) obj. 85855.2 iterations 463
Cbc0038I Pass   5: (25.67 seconds) suminf.   93.70850 (1025) obj. 85064.1 iterations 263
Cbc0038I Pass   6: (25.73 seconds) suminf.   93.36562 (1023) obj. 85457.1 iterations 105
Cbc0038I Pass   7: (25.95 seconds) suminf.   87.32355 (982) obj. 87211.5 iterations 491
Cbc0038I Pass   8: (26.01 seconds) suminf.   87.11856 (1010) obj. 87528.3 iterations 92
Cbc0038I Pass   9: (26.20 seconds) suminf.   85.69869 (989) obj. 84509.6 iterations 441
Cbc0038I Pass  10: (26.33 seconds) suminf.   85.38160 (980) obj. 85930.5 iterations 244
Cbc0038I Pass  11: (26.61 seconds) suminf.   81.64914 (978) obj. 86283.5 iterations 661
Cbc0038I Pass  12: (26.72 seconds) suminf.   83.64971 (970) obj. 85859.5 iterations 204
Cbc0038I Pass  13: (26.89 seconds) suminf.   85.07689 (994) obj. 84830.9 iterations 367
Cbc0038I Pass  14: (27.02 seconds) suminf.   85.89339 (942) obj. 84841.8 iterations 209
Cbc0038I Pass  15: (27.25 seconds) suminf.   82.79955 (987) obj. 85041.6 iterations 534
Cbc0038I Pass  16: (27.35 seconds) suminf.   81.33710 (969) obj. 85024.8 iterations 175
Cbc0038I Pass  17: (27.44 seconds) suminf.   81.01932 (978) obj. 84998.8 iterations 151
Cbc0038I Pass  18: (27.79 seconds) suminf.   81.83019 (972) obj. 88698.6 iterations 820
Cbc0038I Pass  19: (28.08 seconds) suminf.   78.37475 (928) obj. 93212.9 iterations 660
Cbc0038I Pass  20: (28.25 seconds) suminf.   76.19922 (921) obj. 93173.6 iterations 335
Cbc0038I Pass  21: (28.28 seconds) suminf.   75.88797 (919) obj. 93173.8 iterations 50
Cbc0038I Pass  22: (28.49 seconds) suminf.   75.93005 (996) obj. 93648.5 iterations 468
Cbc0038I Pass  23: (28.68 seconds) suminf.   72.81801 (939) obj. 93631.2 iterations 393
Cbc0038I Pass  24: (28.70 seconds) suminf.   72.91360 (934) obj. 93627.4 iterations 18
Cbc0038I Pass  25: (28.77 seconds) suminf.   72.65705 (942) obj. 93713.6 iterations 132
Cbc0038I Pass  26: (29.76 seconds) suminf.   97.43732 (827) obj. 103989 iterations 2737
Cbc0038I Pass  27: (30.35 seconds) suminf.   67.86894 (833) obj. 102668 iterations 1678
Cbc0038I Pass  28: (30.47 seconds) suminf.   66.57985 (833) obj. 102645 iterations 252
Cbc0038I Pass  29: (30.64 seconds) suminf.   67.25507 (824) obj. 102407 iterations 390
Cbc0038I Pass  30: (30.96 seconds) suminf.   64.01038 (799) obj. 99972.9 iterations 871
Cbc0038I Pass  31: (31.12 seconds) suminf.   61.04287 (780) obj. 95943.8 iterations 372
Cbc0038I Pass  32: (31.29 seconds) suminf.   61.64238 (786) obj. 98127.8 iterations 395
Cbc0038I Pass  33: (31.37 seconds) suminf.   59.64066 (777) obj. 97961.9 iterations 168
Cbc0038I Pass  34: (31.57 seconds) suminf.   59.38397 (766) obj. 97198.7 iterations 478
Cbc0038I Pass  35: (31.64 seconds) suminf.   58.87252 (747) obj. 96911.2 iterations 145
Cbc0038I Pass  36: (31.95 seconds) suminf.   57.45948 (713) obj. 98805.7 iterations 835
Cbc0038I Pass  37: (32.16 seconds) suminf.   56.41311 (685) obj. 98286.8 iterations 540
Cbc0038I Pass  38: (32.39 seconds) suminf.   53.90377 (693) obj. 96697 iterations 577
Cbc0038I Pass  39: (32.56 seconds) suminf.   53.04670 (705) obj. 91377.5 iterations 415
Cbc0038I Pass  40: (32.59 seconds) suminf.   52.95780 (706) obj. 91317.3 iterations 64
Cbc0038I Pass  41: (32.84 seconds) suminf.   51.81836 (730) obj. 91859.2 iterations 635
Cbc0038I Pass  42: (32.87 seconds) suminf.   51.36357 (728) obj. 91862.1 iterations 39
Cbc0038I Pass  43: (33.03 seconds) suminf.   52.79134 (738) obj. 91826.7 iterations 373
Cbc0038I Pass  44: (33.08 seconds) suminf.   52.85616 (740) obj. 91826.7 iterations 95
Cbc0038I Pass  45: (33.35 seconds) suminf.   49.88245 (718) obj. 89704.1 iterations 683
Cbc0038I Pass  46: (33.40 seconds) suminf.   49.80539 (714) obj. 89698.7 iterations 98
Cbc0038I Pass  47: (33.53 seconds) suminf.   50.30107 (728) obj. 89610.2 iterations 295
Cbc0038I Pass  48: (33.61 seconds) suminf.   49.88207 (724) obj. 89496 iterations 155
Cbc0038I Pass  49: (33.64 seconds) suminf.   50.05281 (722) obj. 89516.2 iterations 52
Cbc0038I Pass  50: (33.78 seconds) suminf.   48.87566 (718) obj. 89516.9 iterations 319
Cbc0038I Pass  51: (33.84 seconds) suminf.   48.68051 (705) obj. 89541.5 iterations 117
Cbc0038I Pass  52: (34.09 seconds) suminf.   47.98925 (720) obj. 89697.9 iterations 695
Cbc0038I Pass  53: (34.15 seconds) suminf.   47.22697 (730) obj. 89673.4 iterations 132
Cbc0038I Pass  54: (34.43 seconds) suminf.   45.81847 (696) obj. 87979.8 iterations 736
Cbc0038I Pass  55: (34.52 seconds) suminf.   44.53069 (700) obj. 88081.5 iterations 191
Cbc0038I Pass  56: (34.56 seconds) suminf.   44.57216 (700) obj. 88131.5 iterations 80
Cbc0038I Pass  57: (34.89 seconds) suminf.   45.65216 (651) obj. 87968.2 iterations 930
Cbc0038I Pass  58: (35.05 seconds) suminf.   40.61739 (646) obj. 87313.1 iterations 412
Cbc0038I Pass  59: (35.10 seconds) suminf.   40.00225 (665) obj. 87336 iterations 99
Cbc0038I Pass  60: (35.34 seconds) suminf.   38.23312 (622) obj. 87746.3 iterations 652
Cbc0038I Pass  61: (35.43 seconds) suminf.   38.13079 (621) obj. 87967.6 iterations 209
Cbc0038I Pass  62: (35.62 seconds) suminf.   35.83037 (615) obj. 87066.2 iterations 506
Cbc0038I Pass  63: (35.70 seconds) suminf.   35.15634 (607) obj. 86662.1 iterations 193
Cbc0038I Pass  64: (35.83 seconds) suminf.   37.06988 (583) obj. 86379.2 iterations 332
Cbc0038I Pass  65: (35.88 seconds) suminf.   37.37265 (582) obj. 86301.8 iterations 114
Cbc0038I Pass  66: (36.02 seconds) suminf.   40.22229 (577) obj. 86493.9 iterations 367
Cbc0038I Pass  67: (36.08 seconds) suminf.   40.02426 (561) obj. 86429.1 iterations 150
Cbc0038I Pass  68: (36.15 seconds) suminf.   37.58604 (578) obj. 86346.2 iterations 166
Cbc0038I Pass  69: (36.31 seconds) suminf.   36.75049 (562) obj. 87693 iterations 428
Cbc0038I Pass  70: (36.37 seconds) suminf.   36.55130 (546) obj. 87686.2 iterations 161
Cbc0038I Pass  71: (36.47 seconds) suminf.   36.86519 (566) obj. 87682 iterations 222
Cbc0038I Pass  72: (36.56 seconds) suminf.   35.12462 (560) obj. 87708.8 iterations 240
Cbc0038I Pass  73: (36.59 seconds) suminf.   35.21343 (554) obj. 87705.1 iterations 69
Cbc0038I Pass  74: (36.74 seconds) suminf.   36.60376 (560) obj. 87384.6 iterations 390
Cbc0038I Pass  75: (36.82 seconds) suminf.   34.45939 (556) obj. 87370.9 iterations 190
Cbc0038I Pass  76: (37.00 seconds) suminf.   38.46614 (542) obj. 86877.3 iterations 461
Cbc0038I Pass  77: (37.10 seconds) suminf.   36.02293 (525) obj. 88877.2 iterations 203
Cbc0038I Pass  78: (37.17 seconds) suminf.   35.22094 (518) obj. 87853.6 iterations 164
Cbc0038I Pass  79: (37.34 seconds) suminf.   37.61358 (541) obj. 87563.7 iterations 404
Cbc0038I Pass  80: (37.40 seconds) suminf.   35.57504 (531) obj. 88091.7 iterations 140
Cbc0038I Pass  81: (37.42 seconds) suminf.   33.40804 (516) obj. 88266.7 iterations 44
Cbc0038I Pass  82: (37.58 seconds) suminf.   35.31140 (526) obj. 87598.5 iterations 401
Cbc0038I Pass  83: (37.69 seconds) suminf.   34.43970 (515) obj. 87657.1 iterations 249
Cbc0038I Pass  84: (37.73 seconds) suminf.   35.29678 (520) obj. 87719.6 iterations 81
Cbc0038I Pass  85: (37.90 seconds) suminf.   34.01216 (507) obj. 88565.4 iterations 460
Cbc0038I Pass  86: (38.00 seconds) suminf.   35.12239 (524) obj. 88133.8 iterations 235
Cbc0038I Pass  87: (38.18 seconds) suminf.   37.23315 (524) obj. 89160.5 iterations 439
Cbc0038I Pass  88: (38.34 seconds) suminf.   34.06471 (527) obj. 89447.3 iterations 375
Cbc0038I Pass  89: (38.57 seconds) suminf.   37.80445 (510) obj. 88584.8 iterations 616
Cbc0038I Pass  90: (38.71 seconds) suminf.   34.05853 (506) obj. 89060.6 iterations 335
Cbc0038I Pass  91: (38.87 seconds) suminf.   35.00655 (493) obj. 87915.2 iterations 367
Cbc0038I Pass  92: (39.02 seconds) suminf.   29.81938 (479) obj. 88668.2 iterations 384
Cbc0038I Pass  93: (39.25 seconds) suminf.   34.91066 (478) obj. 88895.2 iterations 647
Cbc0038I Pass  94: (39.32 seconds) suminf.   33.10452 (464) obj. 91648.3 iterations 167
Cbc0038I Pass  95: (39.37 seconds) suminf.   32.11481 (469) obj. 91731.2 iterations 97
Cbc0038I Pass  96: (39.41 seconds) suminf.   31.11585 (464) obj. 91735.2 iterations 96
Cbc0038I Pass  97: (39.60 seconds) suminf.   31.23740 (459) obj. 90705.4 iterations 549
Cbc0038I Pass  98: (39.69 seconds) suminf.   28.37658 (457) obj. 89277.4 iterations 206
Cbc0038I Pass  99: (39.84 seconds) suminf.   29.82483 (448) obj. 88955.6 iterations 410
Cbc0038I Pass 100: (40.48 seconds) suminf.   95.18388 (661) obj. 90642.1 iterations 1843
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 237 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6914 rows 2008 columns, reduced to 5864 rows 1677 columns - too large
Cbc0038I Mini branch and bound did not improve solution (40.95 seconds)
Cbc0038I After 40.95 seconds - Feasibility pump exiting - took 18.73 seconds
Cbc0031I 28 added rows had average density of 11.321429
Cbc0013I At root node, 28 cuts changed objective from 53625.654 to 53809.696 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.156 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 48 row cuts average 21.5 elements, 0 column cuts (0 active)  in 1.694 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 62 row cuts average 28.5 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53809.696 (48.78 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 53809.696 (214.29 seconds)
Cbc0010I After 200 nodes, 3 on tree, 1e+50 best solution, best possible 53809.696 (431.04 seconds)
Cbc0010I After 300 nodes, 4 on tree, 1e+50 best solution, best possible 53809.696 (641.12 seconds)
Cbc0010I After 400 nodes, 2 on tree, 1e+50 best solution, best possible 53809.696 (863.27 seconds)
Cbc0010I After 500 nodes, 2 on tree, 1e+50 best solution, best possible 53809.696 (1061.92 seconds)
Cbc0010I After 600 nodes, 2 on tree, 1e+50 best solution, best possible 53809.696 (1255.44 seconds)
Cbc0010I After 700 nodes, 7 on tree, 1e+50 best solution, best possible 53809.696 (1450.23 seconds)
Cbc0010I After 800 nodes, 12 on tree, 1e+50 best solution, best possible 53809.696 (1640.53 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53809.696), took 1825309 iterations and 881 nodes (1789.14 seconds)
Cbc0032I Strong branching done 6744 times (629797 iterations), fathomed 11 nodes and fixed 34 variables
Cbc0035I Maximum depth 135, 0 variables fixed on reduced cost
Cuts at root node changed objective from 53625.7 to 53809.7
Probing was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.156 seconds)
Gomory was tried 117 times and created 86 cuts of which 0 were active after adding rounds of cuts (4.375 seconds)
Knapsack was tried 117 times and created 66 cuts of which 0 were active after adding rounds of cuts (0.283 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.063 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 10 times and created 62 cuts of which 0 were active after adding rounds of cuts (0.756 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.147 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53809.696
Enumerated nodes:               881
Total iterations:               1825309
Time (CPU seconds):             1789.14
Time (Wallclock seconds):       1789.21

Total time (CPU seconds):       1789.18   (Wallclock seconds):       1789.25

