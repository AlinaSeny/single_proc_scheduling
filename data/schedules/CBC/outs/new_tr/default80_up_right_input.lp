Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/default80_up_right_input.lp sec 1800 solve solu solutions/new_tr/default80_up_right_input.lp (default strategy 1)
### CoinLpIO::readLp(): Variable y_13_23 does not appear in objective function or constraints
### CoinLpIO::readLp(): Variable y_13_16 does not appear in objective function or constraints
### CoinLpIO::readLp(): Variable y_13_13 does not appear in objective function or constraints
seconds was changed from 1e+100 to 1800
Continuous objective value is 29725.6 - 0.31 seconds
Cgl0002I 5587 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1282 strengthened rows, 4 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 231 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 8301 rows, 2454 columns (2454 integer (2373 of which binary)) and 25867 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2454 objects (2454 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 992 integers unsatisfied sum - 192.605
Cbc0038I Pass   1: (1.49 seconds) suminf.  124.88875 (904) obj. 37555.9 iterations 1640
Cbc0038I Pass   2: (1.58 seconds) suminf.  121.32625 (905) obj. 37608.5 iterations 165
Cbc0038I Pass   3: (1.75 seconds) suminf.  116.35979 (908) obj. 42914.3 iterations 442
Cbc0038I Pass   4: (1.76 seconds) suminf.  116.31748 (908) obj. 42953.9 iterations 17
Cbc0038I Pass   5: (1.86 seconds) suminf.  110.28680 (891) obj. 48098.6 iterations 196
Cbc0038I Pass   6: (1.91 seconds) suminf.  109.90557 (871) obj. 48186.2 iterations 82
Cbc0038I Pass   7: (1.97 seconds) suminf.  107.52180 (866) obj. 48181.7 iterations 121
Cbc0038I Pass   8: (1.99 seconds) suminf.  108.01484 (867) obj. 48181.7 iterations 16
Cbc0038I Pass   9: (2.08 seconds) suminf.   99.25323 (854) obj. 48181.8 iterations 172
Cbc0038I Pass  10: (2.11 seconds) suminf.   98.59848 (834) obj. 48181.8 iterations 50
Cbc0038I Pass  11: (2.19 seconds) suminf.   94.35411 (831) obj. 48275.8 iterations 145
Cbc0038I Pass  12: (2.26 seconds) suminf.   94.43877 (838) obj. 48220.5 iterations 154
Cbc0038I Pass  13: (2.37 seconds) suminf.   92.29915 (802) obj. 48242.4 iterations 193
Cbc0038I Pass  14: (2.40 seconds) suminf.   92.33566 (808) obj. 48242.2 iterations 58
Cbc0038I Pass  15: (2.50 seconds) suminf.   86.80370 (793) obj. 48293.9 iterations 185
Cbc0038I Pass  16: (2.52 seconds) suminf.   87.12850 (799) obj. 48293.9 iterations 29
Cbc0038I Pass  17: (2.63 seconds) suminf.   78.04568 (806) obj. 48289.4 iterations 203
Cbc0038I Pass  18: (2.66 seconds) suminf.   78.17572 (802) obj. 48289.4 iterations 48
Cbc0038I Pass  19: (2.78 seconds) suminf.   74.61149 (792) obj. 48290.6 iterations 223
Cbc0038I Pass  20: (2.81 seconds) suminf.   72.43300 (784) obj. 48290.6 iterations 53
Cbc0038I Pass  21: (2.86 seconds) suminf.   67.88425 (774) obj. 48290.8 iterations 85
Cbc0038I Pass  22: (2.87 seconds) suminf.   67.15755 (770) obj. 48290.8 iterations 20
Cbc0038I Pass  23: (2.93 seconds) suminf.   65.97396 (735) obj. 48345.9 iterations 98
Cbc0038I Pass  24: (2.96 seconds) suminf.   65.31765 (734) obj. 48344.3 iterations 60
Cbc0038I Pass  25: (3.08 seconds) suminf.   63.25818 (748) obj. 48348.2 iterations 248
Cbc0038I Pass  26: (3.10 seconds) suminf.   61.68692 (754) obj. 48348.2 iterations 34
Cbc0038I Pass  27: (3.12 seconds) suminf.   61.67878 (755) obj. 48348.2 iterations 10
Cbc0038I Pass  28: (3.31 seconds) suminf.   61.19373 (711) obj. 48347.8 iterations 506
Cbc0038I Pass  29: (3.41 seconds) suminf.   55.13427 (718) obj. 48347.8 iterations 250
Cbc0038I Pass  30: (3.42 seconds) suminf.   54.65570 (721) obj. 48347.8 iterations 3
Cbc0038I Pass  31: (3.50 seconds) suminf.   56.20239 (724) obj. 48347.9 iterations 155
Cbc0038I Pass  32: (3.52 seconds) suminf.   55.14062 (722) obj. 48348.8 iterations 41
Cbc0038I Pass  33: (3.64 seconds) suminf.   53.92745 (677) obj. 48343.1 iterations 268
Cbc0038I Pass  34: (3.71 seconds) suminf.   50.45505 (693) obj. 48345.9 iterations 142
Cbc0038I Pass  35: (3.72 seconds) suminf.   50.23416 (697) obj. 48345.9 iterations 12
Cbc0038I Pass  36: (3.85 seconds) suminf.   50.02943 (667) obj. 48343.9 iterations 305
Cbc0038I Pass  37: (3.88 seconds) suminf.   48.60130 (693) obj. 48343.4 iterations 59
Cbc0038I Pass  38: (3.90 seconds) suminf.   48.05482 (692) obj. 48343.4 iterations 23
Cbc0038I Pass  39: (3.96 seconds) suminf.   49.66317 (672) obj. 48346 iterations 111
Cbc0038I Pass  40: (4.00 seconds) suminf.   47.36665 (690) obj. 48348.2 iterations 79
Cbc0038I Pass  41: (4.12 seconds) suminf.   48.34182 (672) obj. 48403.3 iterations 276
Cbc0038I Pass  42: (4.15 seconds) suminf.   47.71768 (694) obj. 48357.4 iterations 36
Cbc0038I Pass  43: (4.25 seconds) suminf.   49.79722 (686) obj. 51957.6 iterations 207
Cbc0038I Pass  44: (4.29 seconds) suminf.   47.11032 (686) obj. 51957.6 iterations 81
Cbc0038I Pass  45: (4.42 seconds) suminf.   46.97470 (655) obj. 56928.1 iterations 349
Cbc0038I Pass  46: (4.45 seconds) suminf.   45.80733 (657) obj. 56928.1 iterations 56
Cbc0038I Pass  47: (4.55 seconds) suminf.   44.96087 (654) obj. 56928.2 iterations 224
Cbc0038I Pass  48: (4.60 seconds) suminf.   43.57734 (657) obj. 56928.1 iterations 130
Cbc0038I Pass  49: (4.71 seconds) suminf.   45.76282 (666) obj. 56928.1 iterations 242
Cbc0038I Pass  50: (4.74 seconds) suminf.   44.91525 (659) obj. 56928.2 iterations 65
Cbc0038I Pass  51: (4.87 seconds) suminf.   42.91804 (666) obj. 56928.2 iterations 337
Cbc0038I Pass  52: (4.89 seconds) suminf.   42.10587 (664) obj. 56928.2 iterations 44
Cbc0038I Pass  53: (5.02 seconds) suminf.   46.51650 (686) obj. 56926.8 iterations 321
Cbc0038I Pass  54: (5.06 seconds) suminf.   46.45117 (683) obj. 56926.8 iterations 74
Cbc0038I Pass  55: (5.18 seconds) suminf.   44.64896 (679) obj. 56925.2 iterations 288
Cbc0038I Pass  56: (5.20 seconds) suminf.   43.87056 (676) obj. 56925.2 iterations 34
Cbc0038I Pass  57: (5.32 seconds) suminf.   42.98396 (653) obj. 56926.7 iterations 275
Cbc0038I Pass  58: (5.34 seconds) suminf.   42.49317 (659) obj. 56926.7 iterations 46
Cbc0038I Pass  59: (5.42 seconds) suminf.   41.94150 (656) obj. 56925.2 iterations 177
Cbc0038I Pass  60: (5.44 seconds) suminf.   41.26442 (654) obj. 56925.2 iterations 26
Cbc0038I Pass  61: (5.47 seconds) suminf.   42.74223 (656) obj. 56925.2 iterations 75
Cbc0038I Pass  62: (5.49 seconds) suminf.   42.26310 (655) obj. 56925.2 iterations 28
Cbc0038I Pass  63: (5.60 seconds) suminf.   44.58078 (662) obj. 56926.8 iterations 233
Cbc0038I Pass  64: (5.62 seconds) suminf.   44.04611 (660) obj. 56926.8 iterations 25
Cbc0038I Pass  65: (5.69 seconds) suminf.   42.82111 (657) obj. 56925.2 iterations 155
Cbc0038I Pass  66: (5.70 seconds) suminf.   42.22057 (657) obj. 56925.2 iterations 26
Cbc0038I Pass  67: (5.82 seconds) suminf.   44.91500 (663) obj. 56926.7 iterations 251
Cbc0038I Pass  68: (5.84 seconds) suminf.   44.53012 (650) obj. 56926.7 iterations 50
Cbc0038I Pass  69: (5.95 seconds) suminf.   42.01358 (647) obj. 56925.2 iterations 235
Cbc0038I Pass  70: (5.97 seconds) suminf.   40.72221 (648) obj. 56925.2 iterations 41
Cbc0038I Pass  71: (6.06 seconds) suminf.   42.14335 (643) obj. 56926.6 iterations 193
Cbc0038I Pass  72: (6.08 seconds) suminf.   41.56661 (639) obj. 56926.6 iterations 42
Cbc0038I Pass  73: (6.19 seconds) suminf.   44.65432 (669) obj. 56925.2 iterations 241
Cbc0038I Pass  74: (6.20 seconds) suminf.   43.86047 (668) obj. 56925.2 iterations 9
Cbc0038I Pass  75: (6.29 seconds) suminf.   42.18723 (668) obj. 56926.7 iterations 199
Cbc0038I Pass  76: (6.40 seconds) suminf.   40.73443 (639) obj. 56925.2 iterations 249
Cbc0038I Pass  77: (6.41 seconds) suminf.   40.73443 (639) obj. 56925.2 iterations 1
Cbc0038I Pass  78: (6.55 seconds) suminf.   41.31937 (655) obj. 56926.7 iterations 336
Cbc0038I Pass  79: (6.66 seconds) suminf.   41.73145 (636) obj. 56925.2 iterations 220
Cbc0038I Pass  80: (6.68 seconds) suminf.   39.27210 (631) obj. 56925.2 iterations 50
Cbc0038I Pass  81: (6.72 seconds) suminf.   37.39486 (629) obj. 56925.2 iterations 61
Cbc0038I Pass  82: (6.73 seconds) suminf.   37.33833 (629) obj. 56925.2 iterations 3
Cbc0038I Pass  83: (6.86 seconds) suminf.   39.41150 (618) obj. 56925.5 iterations 333
Cbc0038I Pass  84: (6.88 seconds) suminf.   39.32305 (619) obj. 56925.5 iterations 11
Cbc0038I Pass  85: (7.00 seconds) suminf.   37.40288 (618) obj. 56924.3 iterations 264
Cbc0038I Pass  86: (7.01 seconds) suminf.   37.36378 (618) obj. 56924.3 iterations 5
Cbc0038I Pass  87: (7.14 seconds) suminf.   40.25396 (617) obj. 56925.5 iterations 327
Cbc0038I Pass  88: (7.17 seconds) suminf.   37.99789 (616) obj. 56925.5 iterations 45
Cbc0038I Pass  89: (7.17 seconds) suminf.   37.99789 (616) obj. 56925.5 iterations 0
Cbc0038I Pass  90: (7.26 seconds) suminf.   35.69906 (618) obj. 56924.3 iterations 191
Cbc0038I Pass  91: (7.27 seconds) suminf.   35.65923 (618) obj. 56924.3 iterations 7
Cbc0038I Pass  92: (7.38 seconds) suminf.   38.75879 (629) obj. 56925.4 iterations 241
Cbc0038I Pass  93: (7.39 seconds) suminf.   38.75879 (629) obj. 56925.4 iterations 0
Cbc0038I Pass  94: (7.54 seconds) suminf.   36.24241 (620) obj. 56924.3 iterations 386
Cbc0038I Pass  95: (7.55 seconds) suminf.   34.79002 (620) obj. 56924.3 iterations 10
Cbc0038I Pass  96: (7.55 seconds) suminf.   34.79002 (620) obj. 56924.3 iterations 0
Cbc0038I Pass  97: (7.61 seconds) suminf.   36.19348 (621) obj. 56924.3 iterations 119
Cbc0038I Pass  98: (7.67 seconds) suminf.   35.38898 (620) obj. 56924.3 iterations 112
Cbc0038I Pass  99: (7.73 seconds) suminf.   35.54666 (620) obj. 56924.3 iterations 139
Cbc0038I Pass 100: (8.04 seconds) suminf.   65.18180 (621) obj. 57474.9 iterations 881
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 984 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8301 rows 2454 columns, reduced to 3004 rows 909 columns
Cbc0038I Mini branch and bound did not improve solution (8.37 seconds)
Cbc0038I After 8.37 seconds - Feasibility pump exiting - took 7.35 seconds
Cbc0031I 78 added rows had average density of 34.833333
Cbc0013I At root node, 78 cuts changed objective from 29954.021 to 31322.992 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 74 row cuts average 2.5 elements, 0 column cuts (43 active)  in 0.375 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 707 row cuts average 221.7 elements, 0 column cuts (0 active)  in 2.278 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 557 row cuts average 133.9 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 31323 (25.61 seconds)
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 31958.109 (270.10 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 31958.109 (414.62 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 31958.109 (512.48 seconds)
Cbc0010I After 400 nodes, 9 on tree, 1e+50 best solution, best possible 31958.109 (637.94 seconds)
Cbc0010I After 500 nodes, 14 on tree, 1e+50 best solution, best possible 31958.109 (732.07 seconds)
Cbc0010I After 600 nodes, 29 on tree, 1e+50 best solution, best possible 31958.109 (806.06 seconds)
Cbc0010I After 700 nodes, 11 on tree, 1e+50 best solution, best possible 31958.109 (916.32 seconds)
Cbc0010I After 800 nodes, 12 on tree, 1e+50 best solution, best possible 31958.109 (1001.94 seconds)
Cbc0010I After 900 nodes, 13 on tree, 1e+50 best solution, best possible 31958.109 (1070.47 seconds)
Cbc0010I After 1000 nodes, 32 on tree, 1e+50 best solution, best possible 31958.109 (1135.85 seconds)
Cbc0010I After 1100 nodes, 65 on tree, 1e+50 best solution, best possible 32069.055 (1182.70 seconds)
Cbc0010I After 1200 nodes, 64 on tree, 1e+50 best solution, best possible 32069.055 (1238.37 seconds)
Cbc0010I After 1300 nodes, 97 on tree, 1e+50 best solution, best possible 32069.055 (1283.43 seconds)
Cbc0010I After 1400 nodes, 99 on tree, 1e+50 best solution, best possible 32069.055 (1346.77 seconds)
Cbc0010I After 1500 nodes, 113 on tree, 1e+50 best solution, best possible 32069.055 (1387.46 seconds)
Cbc0010I After 1600 nodes, 131 on tree, 1e+50 best solution, best possible 32069.055 (1435.32 seconds)
Cbc0010I After 1700 nodes, 130 on tree, 1e+50 best solution, best possible 32069.055 (1499.34 seconds)
Cbc0010I After 1800 nodes, 137 on tree, 1e+50 best solution, best possible 32069.055 (1554.46 seconds)
Cbc0010I After 1900 nodes, 164 on tree, 1e+50 best solution, best possible 32069.055 (1598.60 seconds)
Cbc0010I After 2000 nodes, 164 on tree, 1e+50 best solution, best possible 32069.055 (1674.42 seconds)
Cbc0010I After 2100 nodes, 166 on tree, 1e+50 best solution, best possible 32069.055 (1732.91 seconds)
Cbc0010I After 2200 nodes, 191 on tree, 1e+50 best solution, best possible 32069.055 (1782.15 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 32069.055), took 3394634 iterations and 2245 nodes (1799.34 seconds)
Cbc0032I Strong branching done 11596 times (512107 iterations), fathomed 32 nodes and fixed 154 variables
Cbc0035I Maximum depth 675, 0 variables fixed on reduced cost
Cuts at root node changed objective from 29954 to 31323
Probing was tried 600 times and created 16358 cuts of which 43 were active after adding rounds of cuts (3.477 seconds)
Gomory was tried 513 times and created 1859 cuts of which 0 were active after adding rounds of cuts (9.448 seconds)
Knapsack was tried 513 times and created 3426 cuts of which 0 were active after adding rounds of cuts (1.267 seconds)
Clique was tried 25 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.072 seconds)
MixedIntegerRounding2 was tried 25 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.080 seconds)
FlowCover was tried 25 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
TwoMirCuts was tried 513 times and created 7242 cuts of which 0 were active after adding rounds of cuts (2.966 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.097 seconds)
ImplicationCuts was tried 30 times and created 220 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    32069.055
Enumerated nodes:               2245
Total iterations:               3394634
Time (CPU seconds):             1799.36
Time (Wallclock seconds):       1800.08

Total time (CPU seconds):       1799.46   (Wallclock seconds):       1800.27

