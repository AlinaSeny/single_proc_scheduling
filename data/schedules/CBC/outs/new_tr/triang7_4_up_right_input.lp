Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_4_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang7_4_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 316.632 - 0.11 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 371 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 176 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1486 rows, 526 columns (526 integer (498 of which binary)) and 5026 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 217 integers unsatisfied sum - 56.6402
Cbc0038I Pass   1: suminf.   29.26486 (177) obj. 371.271 iterations 406
Cbc0038I Pass   2: suminf.   22.22148 (151) obj. 371.241 iterations 95
Cbc0038I Pass   3: suminf.   21.52024 (162) obj. 371.385 iterations 54
Cbc0038I Pass   4: suminf.   16.97274 (138) obj. 403.195 iterations 66
Cbc0038I Pass   5: suminf.   16.70998 (143) obj. 403.308 iterations 10
Cbc0038I Pass   6: suminf.   14.60226 (144) obj. 418.257 iterations 136
Cbc0038I Pass   7: suminf.   13.96855 (136) obj. 404.064 iterations 68
Cbc0038I Pass   8: suminf.   14.59634 (134) obj. 377.267 iterations 229
Cbc0038I Pass   9: suminf.   13.19994 (144) obj. 377.384 iterations 66
Cbc0038I Pass  10: suminf.   12.50204 (139) obj. 379.708 iterations 256
Cbc0038I Pass  11: suminf.   10.34253 (131) obj. 381.414 iterations 64
Cbc0038I Pass  12: suminf.   10.61189 (134) obj. 384.252 iterations 129
Cbc0038I Pass  13: suminf.    9.31036 (141) obj. 375.094 iterations 56
Cbc0038I Pass  14: suminf.    6.92134 (119) obj. 387.758 iterations 146
Cbc0038I Pass  15: suminf.    5.86178 (110) obj. 390.08 iterations 58
Cbc0038I Pass  16: suminf.   14.32253 (127) obj. 410.273 iterations 166
Cbc0038I Pass  17: suminf.    7.01227 (132) obj. 394.086 iterations 91
Cbc0038I Pass  18: suminf.    6.81738 (136) obj. 392.423 iterations 43
Cbc0038I Pass  19: suminf.    8.97768 (118) obj. 409.687 iterations 165
Cbc0038I Pass  20: suminf.    8.62074 (127) obj. 396.11 iterations 42
Cbc0038I Pass  21: suminf.    7.99695 (96) obj. 416.447 iterations 116
Cbc0038I Pass  22: suminf.    4.79586 (96) obj. 403.974 iterations 122
Cbc0038I Pass  23: suminf.    4.77061 (47) obj. 403 iterations 290
Cbc0038I Pass  24: suminf.    3.43383 (65) obj. 372 iterations 128
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. 372 iterations 286
Cbc0038I Solution found of 372
Cbc0038I Cleaned solution of 372
Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.58 seconds)
Cbc0038I Round again with cutoff of 365.563
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass  26: suminf.   29.21170 (177) obj. 365 iterations 1
Cbc0038I Pass  27: suminf.   22.57692 (153) obj. 365.563 iterations 130
Cbc0038I Pass  28: suminf.   21.65949 (163) obj. 365.563 iterations 43
Cbc0038I Pass  29: suminf.   18.08325 (128) obj. 365.563 iterations 121
Cbc0038I Pass  30: suminf.   17.14734 (130) obj. 365.563 iterations 45
Cbc0038I Pass  31: suminf.   13.03378 (126) obj. 365.563 iterations 154
Cbc0038I Pass  32: suminf.   12.88173 (132) obj. 365.563 iterations 20
Cbc0038I Pass  33: suminf.    8.78018 (82) obj. 365.563 iterations 302
Cbc0038I Pass  34: suminf.    7.72244 (88) obj. 365.563 iterations 77
Cbc0038I Pass  35: suminf.    8.03179 (93) obj. 365.563 iterations 28
Cbc0038I Pass  36: suminf.    7.70882 (86) obj. 365.563 iterations 65
Cbc0038I Pass  37: suminf.    4.87299 (59) obj. 365.563 iterations 26
Cbc0038I Pass  38: suminf.    4.22485 (53) obj. 365.563 iterations 17
Cbc0038I Pass  39: suminf.    3.99978 (54) obj. 365.563 iterations 19
Cbc0038I Pass  40: suminf.    8.74515 (86) obj. 365.563 iterations 96
Cbc0038I Pass  41: suminf.    5.89854 (81) obj. 365.563 iterations 35
Cbc0038I Pass  42: suminf.    5.15923 (45) obj. 365.563 iterations 115
Cbc0038I Pass  43: suminf.    5.15923 (45) obj. 365.563 iterations 1
Cbc0038I Pass  44: suminf.    3.95071 (37) obj. 365.563 iterations 141
Cbc0038I Pass  45: suminf.    2.87719 (20) obj. 365.563 iterations 65
Cbc0038I Pass  46: suminf.    0.43675 (1) obj. 365.563 iterations 52
Cbc0038I Solution found of 365.563
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1487 rows 526 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 358
Cbc0038I Before mini branch and bound, 205 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1034 rows 320 columns - 66 fixed gives 721, 177 - ok now
Cbc0038I Full problem 1486 rows 526 columns, reduced to 91 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.76 seconds)
Cbc0038I Round again with cutoff of 348.926
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  47: suminf.   29.88374 (181) obj. 348.926 iterations 12
Cbc0038I Pass  48: suminf.   24.47253 (156) obj. 348.926 iterations 162
Cbc0038I Pass  49: suminf.   21.13874 (140) obj. 348.926 iterations 158
Cbc0038I Pass  50: suminf.   18.04833 (151) obj. 348.926 iterations 67
Cbc0038I Pass  51: suminf.   17.93206 (148) obj. 348.926 iterations 4
Cbc0038I Pass  52: suminf.   15.74201 (143) obj. 348.926 iterations 122
Cbc0038I Pass  53: suminf.   15.31556 (141) obj. 348.926 iterations 21
Cbc0038I Pass  54: suminf.   12.63698 (126) obj. 348.926 iterations 81
Cbc0038I Pass  55: suminf.   12.30158 (132) obj. 348.926 iterations 25
Cbc0038I Pass  56: suminf.   13.40368 (128) obj. 348.926 iterations 16
Cbc0038I Pass  57: suminf.   12.90167 (130) obj. 348.926 iterations 16
Cbc0038I Pass  58: suminf.    8.98468 (110) obj. 348.926 iterations 210
Cbc0038I Pass  59: suminf.    8.98468 (110) obj. 348.926 iterations 1
Cbc0038I Pass  60: suminf.    7.74289 (110) obj. 348.926 iterations 142
Cbc0038I Pass  61: suminf.    7.41664 (109) obj. 348.926 iterations 41
Cbc0038I Pass  62: suminf.    9.94164 (81) obj. 348.926 iterations 133
Cbc0038I Pass  63: suminf.    5.03768 (75) obj. 348.926 iterations 53
Cbc0038I Pass  64: suminf.    5.08773 (73) obj. 348.926 iterations 20
Cbc0038I Pass  65: suminf.    6.15106 (66) obj. 348.926 iterations 194
Cbc0038I Pass  66: suminf.    5.20893 (57) obj. 348.926 iterations 46
Cbc0038I Pass  67: suminf.    4.66174 (62) obj. 348.926 iterations 32
Cbc0038I Pass  68: suminf.    4.31377 (56) obj. 348.926 iterations 30
Cbc0038I Pass  69: suminf.    7.20446 (70) obj. 348.926 iterations 98
Cbc0038I Pass  70: suminf.    5.27682 (66) obj. 348.926 iterations 27
Cbc0038I Pass  71: suminf.    5.21258 (64) obj. 348.926 iterations 18
Cbc0038I Pass  72: suminf.    6.16817 (82) obj. 348.926 iterations 120
Cbc0038I Pass  73: suminf.    6.11475 (78) obj. 348.926 iterations 17
Cbc0038I Pass  74: suminf.    5.34490 (66) obj. 348.926 iterations 35
Cbc0038I Pass  75: suminf.    4.94427 (32) obj. 348.926 iterations 148
Cbc0038I Pass  76: suminf.    1.33160 (32) obj. 348.926 iterations 100
Cbc0038I Pass  77: suminf.    7.26744 (38) obj. 348.926 iterations 117
Cbc0038I Pass  78: suminf.    6.59201 (45) obj. 348.926 iterations 15
Cbc0038I Pass  79: suminf.    7.60142 (53) obj. 348.926 iterations 119
Cbc0038I Pass  80: suminf.    6.79526 (65) obj. 348.926 iterations 48
Cbc0038I Pass  81: suminf.    9.92419 (79) obj. 348.926 iterations 122
Cbc0038I Pass  82: suminf.    7.58069 (81) obj. 348.926 iterations 88
Cbc0038I Pass  83: suminf.    9.34452 (66) obj. 348.926 iterations 106
Cbc0038I Pass  84: suminf.    8.15593 (66) obj. 348.926 iterations 52
Cbc0038I Pass  85: suminf.    8.12239 (66) obj. 348.926 iterations 25
Cbc0038I Pass  86: suminf.    8.11110 (66) obj. 348.926 iterations 6
Cbc0038I Pass  87: suminf.    7.01090 (56) obj. 348.926 iterations 87
Cbc0038I Pass  88: suminf.    7.05889 (54) obj. 348.926 iterations 3
Cbc0038I Pass  89: suminf.   10.41166 (43) obj. 348.926 iterations 99
Cbc0038I Pass  90: suminf.    6.76515 (45) obj. 348.926 iterations 82
Cbc0038I Pass  91: suminf.    6.71271 (46) obj. 348.926 iterations 5
Cbc0038I Pass  92: suminf.    7.97787 (53) obj. 348.926 iterations 107
Cbc0038I Pass  93: suminf.    5.96408 (57) obj. 348.926 iterations 81
Cbc0038I Pass  94: suminf.   12.14828 (60) obj. 348.926 iterations 102
Cbc0038I Pass  95: suminf.    9.19884 (64) obj. 348.926 iterations 58
Cbc0038I Pass  96: suminf.    8.53497 (77) obj. 348.926 iterations 44
Cbc0038I Pass  97: suminf.    6.94574 (59) obj. 348.926 iterations 122
Cbc0038I Pass  98: suminf.    6.53961 (63) obj. 348.926 iterations 51
Cbc0038I Pass  99: suminf.    8.48909 (53) obj. 348.926 iterations 139
Cbc0038I Pass 100: suminf.    7.00090 (62) obj. 348.926 iterations 77
Cbc0038I Pass 101: suminf.    6.46176 (52) obj. 348.926 iterations 14
Cbc0038I Pass 102: suminf.    6.51262 (36) obj. 348.926 iterations 43
Cbc0038I Pass 103: suminf.    5.56794 (35) obj. 348.926 iterations 27
Cbc0038I Pass 104: suminf.    5.71789 (43) obj. 348.926 iterations 40
Cbc0038I Pass 105: suminf.    7.04720 (44) obj. 348.926 iterations 185
Cbc0038I Pass 106: suminf.    2.82529 (40) obj. 348.926 iterations 49
Cbc0038I Pass 107: suminf.    1.93594 (22) obj. 348.926 iterations 45
Cbc0038I Pass 108: suminf.    5.03290 (38) obj. 348.926 iterations 100
Cbc0038I Pass 109: suminf.    4.78675 (43) obj. 348.926 iterations 12
Cbc0038I Pass 110: suminf.    8.42148 (58) obj. 348.926 iterations 131
Cbc0038I Pass 111: suminf.    7.84469 (56) obj. 348.926 iterations 52
Cbc0038I Pass 112: suminf.    6.91673 (59) obj. 348.926 iterations 8
Cbc0038I Pass 113: suminf.    5.67958 (41) obj. 348.926 iterations 261
Cbc0038I Pass 114: suminf.    5.67958 (41) obj. 348.926 iterations 2
Cbc0038I Pass 115: suminf.    8.89833 (30) obj. 348.926 iterations 66
Cbc0038I Pass 116: suminf.    4.85363 (27) obj. 348.926 iterations 48
Cbc0038I Pass 117: suminf.    4.13339 (34) obj. 348.926 iterations 48
Cbc0038I Pass 118: suminf.    7.45627 (43) obj. 348.926 iterations 108
Cbc0038I Pass 119: suminf.    6.50730 (37) obj. 348.926 iterations 18
Cbc0038I Pass 120: suminf.    2.02498 (31) obj. 348.926 iterations 57
Cbc0038I Pass 121: suminf.    5.39952 (63) obj. 348.926 iterations 145
Cbc0038I Pass 122: suminf.    4.36938 (39) obj. 348.926 iterations 50
Cbc0038I Pass 123: suminf.    9.72227 (61) obj. 348.926 iterations 128
Cbc0038I Pass 124: suminf.    7.67817 (61) obj. 348.926 iterations 12
Cbc0038I Pass 125: suminf.    7.67817 (61) obj. 348.926 iterations 2
Cbc0038I Pass 126: suminf.    7.44771 (46) obj. 348.926 iterations 122
Cbc0038I Pass 127: suminf.    7.06762 (52) obj. 348.926 iterations 17
Cbc0038I Pass 128: suminf.    8.03294 (58) obj. 348.926 iterations 95
Cbc0038I Pass 129: suminf.    6.25785 (49) obj. 348.926 iterations 30
Cbc0038I Pass 130: suminf.    6.81806 (49) obj. 348.926 iterations 20
Cbc0038I Pass 131: suminf.    9.86846 (67) obj. 348.926 iterations 117
Cbc0038I Pass 132: suminf.    6.46952 (60) obj. 348.926 iterations 23
Cbc0038I Pass 133: suminf.    6.27768 (62) obj. 348.926 iterations 16
Cbc0038I Pass 134: suminf.    9.63422 (48) obj. 348.926 iterations 69
Cbc0038I Pass 135: suminf.    8.83068 (37) obj. 348.926 iterations 31
Cbc0038I Pass 136: suminf.    7.64005 (44) obj. 348.926 iterations 21
Cbc0038I Pass 137: suminf.    6.16071 (41) obj. 348.926 iterations 28
Cbc0038I Pass 138: suminf.    8.48923 (45) obj. 348.926 iterations 89
Cbc0038I Pass 139: suminf.    5.22070 (51) obj. 348.926 iterations 57
Cbc0038I Pass 140: suminf.    5.22070 (51) obj. 348.926 iterations 2
Cbc0038I Pass 141: suminf.    9.87088 (65) obj. 348.926 iterations 151
Cbc0038I Pass 142: suminf.    7.72714 (48) obj. 348.926 iterations 59
Cbc0038I Pass 143: suminf.    5.63021 (41) obj. 348.926 iterations 91
Cbc0038I Pass 144: suminf.    4.62612 (41) obj. 348.926 iterations 51
Cbc0038I Pass 145: suminf.    6.90480 (40) obj. 348.926 iterations 201
Cbc0038I Pass 146: suminf.   27.29248 (138) obj. 348.926 iterations 364
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 142 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1486 rows 526 columns, reduced to 1166 rows 383 columns - 76 fixed gives 766, 199 - ok now
Cbc0038I Full problem 1486 rows 526 columns, reduced to 89 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (1.34 seconds)
Cbc0038I After 1.34 seconds - Feasibility pump exiting with objective of 358 - took 1.02 seconds
Cbc0012I Integer solution of 358 found by feasibility pump after 0 iterations and 0 nodes (1.34 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 859 rows 233 columns - 55 fixed gives 526, 109 - ok now
Cbc0031I 45 added rows had average density of 67.8
Cbc0013I At root node, 45 cuts changed objective from 316.63158 to 324 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 616 row cuts average 2.3 elements, 33 column cuts (33 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 255 row cuts average 269.4 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 358 best solution, best possible 324 (3.16 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 118 rows 42 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 242 rows 79 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 245 rows 85 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 150 rows 53 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 166 rows 61 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 319 rows 106 columns
Cbc0010I After 1000 nodes, 11 on tree, 358 best solution, best possible 345 (25.51 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 247 rows 84 columns
Cbc0038I Full problem 1486 rows 526 columns, reduced to 220 rows 71 columns
Cbc0010I After 2000 nodes, 16 on tree, 358 best solution, best possible 350 (37.30 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 170 rows 56 columns
Cbc0010I After 3000 nodes, 6 on tree, 358 best solution, best possible 353 (49.73 seconds)
Cbc0038I Full problem 1486 rows 526 columns, reduced to 355 rows 115 columns
Cbc0010I After 4000 nodes, 10 on tree, 358 best solution, best possible 357 (60.68 seconds)
Cbc0001I Search completed - best objective 358, took 447274 iterations and 4376 nodes (63.42 seconds)
Cbc0032I Strong branching done 10506 times (293491 iterations), fathomed 312 nodes and fixed 756 variables
Cbc0035I Maximum depth 50, 4 variables fixed on reduced cost
Cuts at root node changed objective from 316.632 to 324
Probing was tried 906 times and created 38626 cuts of which 0 were active after adding rounds of cuts (0.862 seconds)
Gomory was tried 10 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.106 seconds)
Knapsack was tried 381 times and created 1762 cuts of which 0 were active after adding rounds of cuts (0.199 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 381 times and created 3726 cuts of which 0 were active after adding rounds of cuts (0.589 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
ImplicationCuts was tried 55 times and created 877 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)

Result - Optimal solution found

Objective value:                358.00000000
Enumerated nodes:               4376
Total iterations:               447274
Time (CPU seconds):             63.45
Time (Wallclock seconds):       63.84

Total time (CPU seconds):       63.46   (Wallclock seconds):       63.85

