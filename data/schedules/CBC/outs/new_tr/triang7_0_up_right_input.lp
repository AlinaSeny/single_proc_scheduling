Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_0_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang7_0_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 305 - 0.09 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 371 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 172 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 55 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 1485 rows, 526 columns (526 integer (498 of which binary)) and 5032 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 230 integers unsatisfied sum - 58.773
Cbc0038I Pass   1: suminf.   26.41702 (152) obj. 384.786 iterations 449
Cbc0038I Pass   2: suminf.   24.20771 (139) obj. 381.918 iterations 110
Cbc0038I Pass   3: suminf.   22.24870 (146) obj. 373.804 iterations 73
Cbc0038I Pass   4: suminf.   19.68360 (144) obj. 380.409 iterations 53
Cbc0038I Pass   5: suminf.   19.77762 (150) obj. 379.927 iterations 51
Cbc0038I Pass   6: suminf.   13.43391 (118) obj. 393.308 iterations 193
Cbc0038I Pass   7: suminf.   12.42165 (121) obj. 393.308 iterations 20
Cbc0038I Pass   8: suminf.   12.09485 (121) obj. 393.308 iterations 18
Cbc0038I Pass   9: suminf.   12.36365 (114) obj. 392.847 iterations 134
Cbc0038I Pass  10: suminf.   10.43894 (115) obj. 391.2 iterations 58
Cbc0038I Pass  11: suminf.    9.72798 (115) obj. 391.199 iterations 40
Cbc0038I Pass  12: suminf.   11.39542 (110) obj. 396.013 iterations 122
Cbc0038I Pass  13: suminf.   11.86866 (126) obj. 394.112 iterations 67
Cbc0038I Pass  14: suminf.   13.31166 (108) obj. 391.03 iterations 150
Cbc0038I Pass  15: suminf.   10.86054 (113) obj. 387.878 iterations 54
Cbc0038I Pass  16: suminf.    8.44684 (114) obj. 387.88 iterations 25
Cbc0038I Pass  17: suminf.   11.51461 (89) obj. 386.974 iterations 123
Cbc0038I Pass  18: suminf.    6.43086 (84) obj. 416.657 iterations 110
Cbc0038I Pass  19: suminf.    6.50871 (67) obj. 387.042 iterations 124
Cbc0038I Pass  20: suminf.    3.88537 (74) obj. 386.815 iterations 92
Cbc0038I Pass  21: suminf.    3.49575 (45) obj. 387.435 iterations 120
Cbc0038I Pass  22: suminf.    1.77848 (48) obj. 387.435 iterations 43
Cbc0038I Pass  23: suminf.    3.44878 (67) obj. 387.94 iterations 235
Cbc0038I Pass  24: suminf.    3.44029 (76) obj. 387.95 iterations 18
Cbc0038I Pass  25: suminf.    8.00895 (75) obj. 414.993 iterations 73
Cbc0038I Pass  26: suminf.    7.01699 (75) obj. 430.052 iterations 17
Cbc0038I Pass  27: suminf.    7.04340 (74) obj. 424.866 iterations 6
Cbc0038I Pass  28: suminf.    0.00000 (0) obj. 406 iterations 219
Cbc0038I Solution found of 406
Cbc0038I Cleaned solution of 406
Cbc0038I Before mini branch and bound, 203 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1040 rows 321 columns - 23 fixed gives 892, 259 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.52 seconds)
Cbc0038I Round again with cutoff of 395
Cbc0038I Pass  29: suminf.   26.41702 (152) obj. 384.786 iterations 0
Cbc0038I Pass  30: suminf.   24.20771 (139) obj. 381.918 iterations 88
Cbc0038I Pass  31: suminf.   22.24870 (146) obj. 373.804 iterations 66
Cbc0038I Pass  32: suminf.   19.68360 (144) obj. 380.409 iterations 71
Cbc0038I Pass  33: suminf.   19.77762 (150) obj. 379.927 iterations 35
Cbc0038I Pass  34: suminf.   14.33675 (123) obj. 387.95 iterations 121
Cbc0038I Pass  35: suminf.   13.74776 (128) obj. 393.268 iterations 45
Cbc0038I Pass  36: suminf.   11.74600 (115) obj. 395 iterations 155
Cbc0038I Pass  37: suminf.    7.70707 (115) obj. 395 iterations 78
Cbc0038I Pass  38: suminf.   10.92258 (118) obj. 395 iterations 109
Cbc0038I Pass  39: suminf.    9.08096 (118) obj. 395 iterations 95
Cbc0038I Pass  40: suminf.    8.89723 (117) obj. 395 iterations 21
Cbc0038I Pass  41: suminf.    5.46797 (47) obj. 395 iterations 201
Cbc0038I Pass  42: suminf.    4.73978 (40) obj. 395 iterations 19
Cbc0038I Pass  43: suminf.    2.39623 (14) obj. 380 iterations 128
Cbc0038I Pass  44: suminf.    0.00000 (0) obj. 380 iterations 8
Cbc0038I Solution found of 380
Cbc0038I Cleaned solution of 380
Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 996 rows 300 columns - 55 fixed gives 701, 181 - still too large
Cbc0038I Full problem 1485 rows 526 columns, reduced to 102 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.70 seconds)
Cbc0038I Round again with cutoff of 364.2
Cbc0038I Pass  45: suminf.   24.24154 (146) obj. 364 iterations 47
Cbc0038I Pass  46: suminf.   21.20178 (140) obj. 364.2 iterations 89
Cbc0038I Pass  47: suminf.   21.32917 (132) obj. 364.2 iterations 22
Cbc0038I Pass  48: suminf.   21.26901 (141) obj. 364.2 iterations 46
Cbc0038I Pass  49: suminf.   18.67303 (133) obj. 364.2 iterations 182
Cbc0038I Pass  50: suminf.   17.57363 (146) obj. 364.2 iterations 74
Cbc0038I Pass  51: suminf.   16.34838 (140) obj. 364.2 iterations 77
Cbc0038I Pass  52: suminf.   16.38509 (149) obj. 364.2 iterations 25
Cbc0038I Pass  53: suminf.   17.86437 (152) obj. 364.2 iterations 236
Cbc0038I Pass  54: suminf.   13.40994 (143) obj. 364.2 iterations 121
Cbc0038I Pass  55: suminf.   13.89200 (133) obj. 364.2 iterations 188
Cbc0038I Pass  56: suminf.   12.62343 (146) obj. 364.2 iterations 85
Cbc0038I Pass  57: suminf.   12.11415 (95) obj. 364.2 iterations 262
Cbc0038I Pass  58: suminf.    9.90324 (99) obj. 364.2 iterations 76
Cbc0038I Pass  59: suminf.   13.31200 (111) obj. 364.2 iterations 242
Cbc0038I Pass  60: suminf.   10.52273 (109) obj. 364.2 iterations 40
Cbc0038I Pass  61: suminf.   11.35613 (94) obj. 364.2 iterations 139
Cbc0038I Pass  62: suminf.   10.21144 (103) obj. 364.2 iterations 156
Cbc0038I Pass  63: suminf.   10.41318 (104) obj. 364.2 iterations 2
Cbc0038I Pass  64: suminf.    6.68428 (85) obj. 364.2 iterations 143
Cbc0038I Pass  65: suminf.    3.53558 (72) obj. 364.2 iterations 115
Cbc0038I Pass  66: suminf.    2.65909 (53) obj. 364.2 iterations 173
Cbc0038I Pass  67: suminf.    2.39058 (53) obj. 364.2 iterations 11
Cbc0038I Pass  68: suminf.    6.62897 (54) obj. 364.2 iterations 156
Cbc0038I Pass  69: suminf.    8.11257 (57) obj. 364.2 iterations 232
Cbc0038I Pass  70: suminf.    7.47234 (52) obj. 364.2 iterations 39
Cbc0038I Pass  71: suminf.    5.26899 (49) obj. 364.2 iterations 47
Cbc0038I Pass  72: suminf.    5.14633 (49) obj. 364.2 iterations 21
Cbc0038I Pass  73: suminf.    7.81695 (40) obj. 364.2 iterations 138
Cbc0038I Pass  74: suminf.    0.20009 (1) obj. 364.2 iterations 89
Cbc0038I Solution found of 364.2
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1486 rows 526 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 362
Cbc0038I Before mini branch and bound, 169 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1112 rows 355 columns - 45 fixed gives 855, 252 - still too large
Cbc0038I Full problem 1485 rows 526 columns, reduced to 385 rows 124 columns
Cbc0038I Mini branch and bound did not improve solution (1.01 seconds)
Cbc0038I Round again with cutoff of 344.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  75: suminf.   24.23675 (138) obj. 344.2 iterations 42
Cbc0038I Pass  76: suminf.   23.69814 (135) obj. 344.2 iterations 95
Cbc0038I Pass  77: suminf.   18.83813 (124) obj. 344.2 iterations 225
Cbc0038I Pass  78: suminf.   16.90784 (134) obj. 344.2 iterations 103
Cbc0038I Pass  79: suminf.   15.72037 (127) obj. 344.2 iterations 50
Cbc0038I Pass  80: suminf.   16.21035 (128) obj. 344.2 iterations 56
Cbc0038I Pass  81: suminf.   15.95025 (120) obj. 344.2 iterations 48
Cbc0038I Pass  82: suminf.   19.14668 (121) obj. 344.2 iterations 129
Cbc0038I Pass  83: suminf.   18.48630 (142) obj. 344.2 iterations 66
Cbc0038I Pass  84: suminf.   16.81622 (136) obj. 344.2 iterations 43
Cbc0038I Pass  85: suminf.   16.41661 (145) obj. 344.2 iterations 31
Cbc0038I Pass  86: suminf.   17.63076 (122) obj. 344.2 iterations 158
Cbc0038I Pass  87: suminf.   17.58046 (121) obj. 344.2 iterations 92
Cbc0038I Pass  88: suminf.   15.36301 (130) obj. 344.2 iterations 118
Cbc0038I Pass  89: suminf.   14.37126 (134) obj. 344.2 iterations 51
Cbc0038I Pass  90: suminf.   10.91987 (102) obj. 329.612 iterations 262
Cbc0038I Pass  91: suminf.    7.36651 (97) obj. 344.2 iterations 134
Cbc0038I Pass  92: suminf.    4.64846 (43) obj. 344.2 iterations 272
Cbc0038I Pass  93: suminf.    3.17131 (55) obj. 344.2 iterations 28
Cbc0038I Pass  94: suminf.   13.06157 (85) obj. 344.2 iterations 262
Cbc0038I Pass  95: suminf.   10.01964 (88) obj. 344.2 iterations 60
Cbc0038I Pass  96: suminf.    3.71840 (39) obj. 344.2 iterations 91
Cbc0038I Pass  97: suminf.    7.92731 (53) obj. 344.2 iterations 203
Cbc0038I Pass  98: suminf.    4.00360 (52) obj. 344.2 iterations 89
Cbc0038I Pass  99: suminf.    3.47244 (36) obj. 344.2 iterations 200
Cbc0038I Pass 100: suminf.    3.20486 (43) obj. 344.2 iterations 70
Cbc0038I Pass 101: suminf.    8.48005 (48) obj. 344.2 iterations 103
Cbc0038I Pass 102: suminf.    6.25523 (56) obj. 344.2 iterations 73
Cbc0038I Pass 103: suminf.    6.17647 (42) obj. 344.2 iterations 95
Cbc0038I Pass 104: suminf.    3.24903 (49) obj. 344.2 iterations 95
Cbc0038I Pass 105: suminf.    8.72223 (62) obj. 344.2 iterations 88
Cbc0038I Pass 106: suminf.    7.20375 (58) obj. 344.2 iterations 116
Cbc0038I Pass 107: suminf.    5.74133 (45) obj. 344.2 iterations 67
Cbc0038I Pass 108: suminf.    5.07958 (53) obj. 344.2 iterations 27
Cbc0038I Pass 109: suminf.    4.59842 (35) obj. 344.2 iterations 91
Cbc0038I Pass 110: suminf.    3.20493 (46) obj. 344.2 iterations 56
Cbc0038I Pass 111: suminf.   10.14157 (65) obj. 344.2 iterations 168
Cbc0038I Pass 112: suminf.    6.60169 (49) obj. 344.2 iterations 112
Cbc0038I Pass 113: suminf.    5.03938 (55) obj. 344.2 iterations 44
Cbc0038I Pass 114: suminf.   11.10316 (42) obj. 344.2 iterations 85
Cbc0038I Pass 115: suminf.    3.27252 (49) obj. 344.2 iterations 88
Cbc0038I Pass 116: suminf.   11.98995 (97) obj. 344.2 iterations 146
Cbc0038I Pass 117: suminf.   11.98995 (97) obj. 344.2 iterations 7
Cbc0038I Pass 118: suminf.    3.85864 (39) obj. 344.2 iterations 184
Cbc0038I Pass 119: suminf.    3.08157 (46) obj. 344.2 iterations 45
Cbc0038I Pass 120: suminf.   11.20309 (71) obj. 344.2 iterations 176
Cbc0038I Pass 121: suminf.   10.13243 (61) obj. 344.2 iterations 78
Cbc0038I Pass 122: suminf.    9.01221 (70) obj. 344.2 iterations 50
Cbc0038I Pass 123: suminf.    8.65746 (57) obj. 344.2 iterations 102
Cbc0038I Pass 124: suminf.    5.40243 (39) obj. 344.2 iterations 113
Cbc0038I Pass 125: suminf.    5.13669 (39) obj. 344.2 iterations 45
Cbc0038I Pass 126: suminf.    4.45165 (47) obj. 344.2 iterations 17
Cbc0038I Pass 127: suminf.    9.41194 (58) obj. 344.2 iterations 154
Cbc0038I Pass 128: suminf.    5.57518 (56) obj. 344.2 iterations 120
Cbc0038I Pass 129: suminf.    5.57518 (56) obj. 344.2 iterations 2
Cbc0038I Pass 130: suminf.    7.23038 (50) obj. 344.2 iterations 115
Cbc0038I Pass 131: suminf.    4.13437 (31) obj. 344.2 iterations 28
Cbc0038I Pass 132: suminf.    6.62628 (57) obj. 344.2 iterations 188
Cbc0038I Pass 133: suminf.    6.19035 (58) obj. 344.2 iterations 34
Cbc0038I Pass 134: suminf.    4.39171 (47) obj. 344.2 iterations 11
Cbc0038I Pass 135: suminf.    4.46774 (46) obj. 344.2 iterations 22
Cbc0038I Pass 136: suminf.    6.13350 (52) obj. 344.2 iterations 58
Cbc0038I Pass 137: suminf.    4.29509 (37) obj. 344.2 iterations 44
Cbc0038I Pass 138: suminf.    9.27890 (43) obj. 344.2 iterations 141
Cbc0038I Pass 139: suminf.    4.99522 (38) obj. 344.2 iterations 65
Cbc0038I Pass 140: suminf.    4.89095 (38) obj. 344.2 iterations 32
Cbc0038I Pass 141: suminf.    5.48789 (34) obj. 344.2 iterations 120
Cbc0038I Pass 142: suminf.    3.23481 (34) obj. 344.2 iterations 91
Cbc0038I Pass 143: suminf.    8.98264 (59) obj. 344.2 iterations 193
Cbc0038I Pass 144: suminf.    8.07239 (60) obj. 344.2 iterations 90
Cbc0038I Pass 145: suminf.    5.84267 (49) obj. 344.2 iterations 33
Cbc0038I Pass 146: suminf.    4.57566 (54) obj. 344.2 iterations 32
Cbc0038I Pass 147: suminf.    5.74165 (61) obj. 344.2 iterations 102
Cbc0038I Pass 148: suminf.    5.77081 (62) obj. 344.2 iterations 30
Cbc0038I Pass 149: suminf.   10.54306 (58) obj. 344.2 iterations 193
Cbc0038I Pass 150: suminf.    8.89166 (58) obj. 344.2 iterations 69
Cbc0038I Pass 151: suminf.    5.40835 (50) obj. 344.2 iterations 83
Cbc0038I Pass 152: suminf.    5.06067 (48) obj. 344.2 iterations 27
Cbc0038I Pass 153: suminf.    7.75213 (66) obj. 344.2 iterations 129
Cbc0038I Pass 154: suminf.    7.45847 (53) obj. 344.2 iterations 29
Cbc0038I Pass 155: suminf.    4.89034 (48) obj. 344.2 iterations 39
Cbc0038I Pass 156: suminf.    4.60760 (48) obj. 344.2 iterations 6
Cbc0038I Pass 157: suminf.    4.36366 (52) obj. 344.2 iterations 41
Cbc0038I Pass 158: suminf.    4.35870 (53) obj. 344.2 iterations 34
Cbc0038I Pass 159: suminf.    6.83691 (60) obj. 344.2 iterations 139
Cbc0038I Pass 160: suminf.    4.25427 (55) obj. 344.2 iterations 55
Cbc0038I Pass 161: suminf.    3.66448 (48) obj. 344.2 iterations 31
Cbc0038I Pass 162: suminf.    3.85846 (60) obj. 344.2 iterations 33
Cbc0038I Pass 163: suminf.   14.49618 (97) obj. 344.2 iterations 161
Cbc0038I Pass 164: suminf.   10.49240 (86) obj. 344.2 iterations 54
Cbc0038I Pass 165: suminf.    8.76673 (90) obj. 344.2 iterations 54
Cbc0038I Pass 166: suminf.    5.89034 (60) obj. 344.2 iterations 107
Cbc0038I Pass 167: suminf.    5.66815 (63) obj. 344.2 iterations 49
Cbc0038I Pass 168: suminf.   10.26166 (54) obj. 344.2 iterations 121
Cbc0038I Pass 169: suminf.    6.57481 (52) obj. 344.2 iterations 81
Cbc0038I Pass 170: suminf.    6.13963 (51) obj. 344.2 iterations 34
Cbc0038I Pass 171: suminf.   10.77171 (57) obj. 344.2 iterations 143
Cbc0038I Pass 172: suminf.    3.51506 (40) obj. 344.2 iterations 57
Cbc0038I Pass 173: suminf.    3.67841 (38) obj. 344.2 iterations 62
Cbc0038I Pass 174: suminf.   31.99550 (166) obj. 344.2 iterations 325
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1171 rows 380 columns - 48 fixed gives 884, 264 - still too large
Cbc0038I Full problem 1485 rows 526 columns, reduced to 409 rows 133 columns
Cbc0038I Mini branch and bound did not improve solution (1.67 seconds)
Cbc0038I After 1.67 seconds - Feasibility pump exiting with objective of 362 - took 1.42 seconds
Cbc0012I Integer solution of 362 found by feasibility pump after 0 iterations and 0 nodes (1.67 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 870 rows 239 columns - 39 fixed gives 674, 166 - ok now
Cbc0038I Full problem 1485 rows 526 columns, reduced to 179 rows 61 columns
Cbc0031I 57 added rows had average density of 81.526316
Cbc0013I At root node, 57 cuts changed objective from 305.00006 to 316.99998 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 240 row cuts average 2.6 elements, 11 column cuts (11 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 72 row cuts average 109.1 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 378 row cuts average 167.8 elements, 0 column cuts (0 active)  in 0.310 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 362 best solution, best possible 316.99998 (4.22 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 382 rows 117 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 330 rows 97 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 335 rows 99 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 377 rows 113 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 336 rows 100 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 331 rows 96 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 486 rows 143 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 231 rows 68 columns
Cbc0010I After 1000 nodes, 6 on tree, 362 best solution, best possible 316.99998 (36.45 seconds)
Cbc0010I After 2000 nodes, 11 on tree, 362 best solution, best possible 316.99998 (51.99 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 271 rows 84 columns
Cbc0001I Search completed - best objective 362, took 353636 iterations and 2298 nodes (58.57 seconds)
Cbc0032I Strong branching done 6760 times (257013 iterations), fathomed 166 nodes and fixed 412 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 305 to 317
Probing was tried 523 times and created 16367 cuts of which 0 were active after adding rounds of cuts (0.619 seconds)
Gomory was tried 253 times and created 236 cuts of which 0 were active after adding rounds of cuts (0.334 seconds)
Knapsack was tried 253 times and created 1177 cuts of which 0 were active after adding rounds of cuts (0.145 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 253 times and created 2900 cuts of which 0 were active after adding rounds of cuts (0.578 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
ImplicationCuts was tried 36 times and created 217 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Optimal solution found

Objective value:                362.00000000
Enumerated nodes:               2298
Total iterations:               353636
Time (CPU seconds):             58.60
Time (Wallclock seconds):       58.77

Total time (CPU seconds):       58.61   (Wallclock seconds):       58.78

