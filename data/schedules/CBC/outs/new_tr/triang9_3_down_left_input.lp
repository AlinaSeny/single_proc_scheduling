Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_3_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang9_3_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 360.337 - 1.94 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1044 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 137 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 36 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4310 rows, 1490 columns (1490 integer (1445 of which binary)) and 14131 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 606 integers unsatisfied sum - 196.095
Cbc0038I Pass   1: (3.04 seconds) suminf.   50.07075 (309) obj. 509.85 iterations 1670
Cbc0038I Pass   2: (3.09 seconds) suminf.   45.02312 (314) obj. 506.584 iterations 255
Cbc0038I Pass   3: (3.11 seconds) suminf.   44.52984 (327) obj. 506.494 iterations 96
Cbc0038I Pass   4: (3.17 seconds) suminf.   41.55473 (286) obj. 510.798 iterations 266
Cbc0038I Pass   5: (3.19 seconds) suminf.   40.55640 (282) obj. 511.599 iterations 98
Cbc0038I Pass   6: (3.26 seconds) suminf.   33.18877 (281) obj. 540.476 iterations 394
Cbc0038I Pass   7: (3.31 seconds) suminf.   29.66697 (267) obj. 520.278 iterations 262
Cbc0038I Pass   8: (3.36 seconds) suminf.   27.02672 (233) obj. 522.269 iterations 223
Cbc0038I Pass   9: (3.39 seconds) suminf.   19.83956 (220) obj. 519.029 iterations 197
Cbc0038I Pass  10: (3.42 seconds) suminf.   18.37492 (225) obj. 520.282 iterations 132
Cbc0038I Pass  11: (3.48 seconds) suminf.   11.65207 (167) obj. 515.277 iterations 296
Cbc0038I Pass  12: (3.49 seconds) suminf.   11.46037 (166) obj. 515.276 iterations 22
Cbc0038I Pass  13: (3.53 seconds) suminf.   10.92885 (165) obj. 459.63 iterations 249
Cbc0038I Pass  14: (3.54 seconds) suminf.   10.34646 (160) obj. 459.63 iterations 24
Cbc0038I Pass  15: (3.55 seconds) suminf.    9.94250 (160) obj. 459.63 iterations 22
Cbc0038I Pass  16: (3.57 seconds) suminf.   13.79465 (158) obj. 470.227 iterations 164
Cbc0038I Pass  17: (3.59 seconds) suminf.    9.97621 (154) obj. 470.241 iterations 107
Cbc0038I Pass  18: (3.60 seconds) suminf.    9.57225 (154) obj. 470.241 iterations 30
Cbc0038I Pass  19: (3.63 seconds) suminf.    9.58823 (133) obj. 470.227 iterations 166
Cbc0038I Pass  20: (3.64 seconds) suminf.    6.86345 (128) obj. 470.241 iterations 83
Cbc0038I Pass  21: (3.67 seconds) suminf.    7.91928 (114) obj. 460.5 iterations 196
Cbc0038I Pass  22: (3.69 seconds) suminf.    5.17799 (92) obj. 460.5 iterations 108
Cbc0038I Pass  23: (3.75 seconds) suminf.    4.14295 (76) obj. 505.783 iterations 362
Cbc0038I Pass  24: (3.76 seconds) suminf.    1.43118 (42) obj. 505.782 iterations 93
Cbc0038I Pass  25: (3.77 seconds) suminf.    0.00000 (0) obj. 499 iterations 43
Cbc0038I Solution found of 499
Cbc0038I Cleaned solution of 499
Cbc0038I Before mini branch and bound, 717 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.81 seconds)
Cbc0038I Round again with cutoff of 484.24
Cbc0038I Pass  26: (3.82 seconds) suminf.   50.53325 (317) obj. 484 iterations 40
Cbc0038I Pass  27: (3.87 seconds) suminf.   46.43204 (313) obj. 484.24 iterations 249
Cbc0038I Pass  28: (3.89 seconds) suminf.   44.87976 (311) obj. 484.24 iterations 76
Cbc0038I Pass  29: (3.93 seconds) suminf.   38.97133 (297) obj. 484.24 iterations 190
Cbc0038I Pass  30: (3.95 seconds) suminf.   39.37290 (286) obj. 484.24 iterations 94
Cbc0038I Pass  31: (4.00 seconds) suminf.   36.70721 (291) obj. 484.24 iterations 325
Cbc0038I Pass  32: (4.01 seconds) suminf.   36.75629 (291) obj. 484.24 iterations 21
Cbc0038I Pass  33: (4.06 seconds) suminf.   35.62453 (278) obj. 484.24 iterations 233
Cbc0038I Pass  34: (4.08 seconds) suminf.   35.49528 (291) obj. 484.24 iterations 95
Cbc0038I Pass  35: (4.13 seconds) suminf.   26.33252 (240) obj. 484.24 iterations 329
Cbc0038I Pass  36: (4.17 seconds) suminf.   25.40328 (244) obj. 484.24 iterations 186
Cbc0038I Pass  37: (4.19 seconds) suminf.   24.15079 (241) obj. 484.24 iterations 128
Cbc0038I Pass  38: (4.20 seconds) suminf.   23.71681 (243) obj. 484.24 iterations 35
Cbc0038I Pass  39: (4.21 seconds) suminf.   23.83790 (243) obj. 484.24 iterations 42
Cbc0038I Pass  40: (4.26 seconds) suminf.   19.40328 (212) obj. 484.24 iterations 275
Cbc0038I Pass  41: (4.28 seconds) suminf.   17.39355 (216) obj. 484.24 iterations 98
Cbc0038I Pass  42: (4.29 seconds) suminf.   17.36962 (216) obj. 484.24 iterations 14
Cbc0038I Pass  43: (4.30 seconds) suminf.   18.76646 (210) obj. 484.24 iterations 60
Cbc0038I Pass  44: (4.32 seconds) suminf.   17.20704 (225) obj. 484.24 iterations 67
Cbc0038I Pass  45: (4.36 seconds) suminf.   19.63587 (214) obj. 484.24 iterations 242
Cbc0038I Pass  46: (4.37 seconds) suminf.   17.87255 (212) obj. 484.24 iterations 61
Cbc0038I Pass  47: (4.39 seconds) suminf.   17.03894 (219) obj. 484.24 iterations 89
Cbc0038I Pass  48: (4.42 seconds) suminf.   18.47780 (218) obj. 484.24 iterations 173
Cbc0038I Pass  49: (4.44 seconds) suminf.   17.43869 (221) obj. 484.24 iterations 47
Cbc0038I Pass  50: (4.45 seconds) suminf.   17.20704 (225) obj. 484.24 iterations 41
Cbc0038I Pass  51: (4.50 seconds) suminf.   19.86412 (200) obj. 484.24 iterations 311
Cbc0038I Pass  52: (4.52 seconds) suminf.   16.11637 (185) obj. 484.24 iterations 151
Cbc0038I Pass  53: (4.53 seconds) suminf.   15.04424 (191) obj. 484.24 iterations 32
Cbc0038I Pass  54: (4.57 seconds) suminf.   18.39364 (198) obj. 484.24 iterations 214
Cbc0038I Pass  55: (4.59 seconds) suminf.   14.43689 (196) obj. 484.24 iterations 81
Cbc0038I Pass  56: (4.60 seconds) suminf.   14.15932 (188) obj. 484.24 iterations 38
Cbc0038I Pass  57: (4.63 seconds) suminf.   15.47657 (195) obj. 484.24 iterations 207
Cbc0038I Pass  58: (4.65 seconds) suminf.   12.75627 (197) obj. 484.24 iterations 95
Cbc0038I Pass  59: (4.66 seconds) suminf.   12.47871 (189) obj. 484.24 iterations 55
Cbc0038I Pass  60: (4.71 seconds) suminf.   14.13185 (198) obj. 484.24 iterations 307
Cbc0038I Pass  61: (4.73 seconds) suminf.   11.08941 (178) obj. 484.24 iterations 127
Cbc0038I Pass  62: (4.75 seconds) suminf.   10.72507 (170) obj. 484.24 iterations 53
Cbc0038I Pass  63: (4.77 seconds) suminf.   11.96731 (177) obj. 484.24 iterations 162
Cbc0038I Pass  64: (4.79 seconds) suminf.    9.96217 (164) obj. 484.24 iterations 67
Cbc0038I Pass  65: (4.80 seconds) suminf.    9.68461 (156) obj. 484.24 iterations 46
Cbc0038I Pass  66: (4.86 seconds) suminf.   12.34213 (147) obj. 484.24 iterations 375
Cbc0038I Pass  67: (4.88 seconds) suminf.    8.85539 (130) obj. 484.24 iterations 127
Cbc0038I Pass  68: (4.89 seconds) suminf.    8.66801 (130) obj. 484.24 iterations 22
Cbc0038I Pass  69: (4.92 seconds) suminf.    9.28612 (127) obj. 484.24 iterations 187
Cbc0038I Pass  70: (4.93 seconds) suminf.    5.30898 (110) obj. 484.24 iterations 73
Cbc0038I Pass  71: (4.94 seconds) suminf.    5.28007 (111) obj. 484.24 iterations 28
Cbc0038I Pass  72: (4.96 seconds) suminf.    9.19255 (105) obj. 484.24 iterations 172
Cbc0038I Pass  73: (4.99 seconds) suminf.    5.73353 (85) obj. 484.24 iterations 123
Cbc0038I Pass  74: (5.04 seconds) suminf.   12.15927 (112) obj. 484.24 iterations 412
Cbc0038I Pass  75: (5.06 seconds) suminf.    9.38073 (102) obj. 484.24 iterations 125
Cbc0038I Pass  76: (5.10 seconds) suminf.   14.61458 (119) obj. 484.24 iterations 247
Cbc0038I Pass  77: (5.12 seconds) suminf.   11.75265 (107) obj. 484.24 iterations 98
Cbc0038I Pass  78: (5.15 seconds) suminf.   11.42445 (108) obj. 484.24 iterations 253
Cbc0038I Pass  79: (5.17 seconds) suminf.    9.00557 (100) obj. 484.24 iterations 98
Cbc0038I Pass  80: (5.19 seconds) suminf.    7.85578 (87) obj. 484.24 iterations 121
Cbc0038I Pass  81: (5.20 seconds) suminf.    6.09110 (83) obj. 484.24 iterations 41
Cbc0038I Pass  82: (5.20 seconds) suminf.    5.66458 (77) obj. 484.24 iterations 7
Cbc0038I Pass  83: (5.26 seconds) suminf.    6.90225 (67) obj. 484.24 iterations 431
Cbc0038I Pass  84: (5.28 seconds) suminf.    2.92766 (28) obj. 484.24 iterations 108
Cbc0038I Pass  85: (5.31 seconds) suminf.    2.75205 (36) obj. 484.24 iterations 191
Cbc0038I Pass  86: (5.32 seconds) suminf.    0.23950 (1) obj. 484.24 iterations 38
Cbc0038I Solution found of 484.24
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4311 rows 1490 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 482
Cbc0038I Before mini branch and bound, 689 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 2781 rows 799 columns - 288 fixed gives 744, 164 - ok now
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 75 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (5.76 seconds)
Cbc0038I Round again with cutoff of 456.879
Cbc0038I Pass  87: (5.78 seconds) suminf.   53.70715 (325) obj. 456.879 iterations 72
Cbc0038I Pass  88: (5.84 seconds) suminf.   48.15292 (312) obj. 456.879 iterations 306
Cbc0038I Pass  89: (5.87 seconds) suminf.   46.29733 (307) obj. 456.879 iterations 164
Cbc0038I Pass  90: (5.90 seconds) suminf.   45.45560 (298) obj. 456.879 iterations 168
Cbc0038I Pass  91: (5.96 seconds) suminf.   41.01376 (289) obj. 456.879 iterations 300
Cbc0038I Pass  92: (5.99 seconds) suminf.   37.69870 (288) obj. 456.879 iterations 165
Cbc0038I Pass  93: (6.06 seconds) suminf.   35.28775 (305) obj. 456.879 iterations 377
Cbc0038I Pass  94: (6.08 seconds) suminf.   33.88263 (285) obj. 456.879 iterations 91
Cbc0038I Pass  95: (6.10 seconds) suminf.   33.35964 (288) obj. 456.879 iterations 67
Cbc0038I Pass  96: (6.14 seconds) suminf.   33.37104 (281) obj. 456.879 iterations 198
Cbc0038I Pass  97: (6.14 seconds) suminf.   33.37104 (281) obj. 456.879 iterations 1
Cbc0038I Pass  98: (6.19 seconds) suminf.   29.58622 (269) obj. 456.879 iterations 197
Cbc0038I Pass  99: (6.21 seconds) suminf.   27.46674 (244) obj. 456.879 iterations 128
Cbc0038I Pass 100: (6.23 seconds) suminf.   27.15769 (248) obj. 456.879 iterations 66
Cbc0038I Pass 101: (6.28 seconds) suminf.   19.81450 (228) obj. 456.879 iterations 349
Cbc0038I Pass 102: (6.30 seconds) suminf.   19.31659 (229) obj. 456.879 iterations 83
Cbc0038I Pass 103: (6.35 seconds) suminf.   13.04152 (169) obj. 456.879 iterations 330
Cbc0038I Pass 104: (6.37 seconds) suminf.   10.17083 (167) obj. 456.879 iterations 101
Cbc0038I Pass 105: (6.39 seconds) suminf.   12.39724 (151) obj. 456.879 iterations 140
Cbc0038I Pass 106: (6.41 seconds) suminf.    7.27248 (137) obj. 456.879 iterations 93
Cbc0038I Pass 107: (6.43 seconds) suminf.    8.99291 (136) obj. 456.879 iterations 116
Cbc0038I Pass 108: (6.44 seconds) suminf.    6.27726 (133) obj. 456.879 iterations 95
Cbc0038I Pass 109: (6.47 seconds) suminf.   13.08562 (146) obj. 456.879 iterations 171
Cbc0038I Pass 110: (6.49 seconds) suminf.    7.08797 (136) obj. 456.879 iterations 118
Cbc0038I Pass 111: (6.52 seconds) suminf.   15.34401 (147) obj. 456.879 iterations 210
Cbc0038I Pass 112: (6.54 seconds) suminf.    9.48348 (142) obj. 456.879 iterations 98
Cbc0038I Pass 113: (6.57 seconds) suminf.   11.93631 (155) obj. 456.879 iterations 194
Cbc0038I Pass 114: (6.71 seconds) suminf.   58.07481 (311) obj. 456.879 iterations 952
Cbc0038I Pass 115: (6.81 seconds) suminf.   26.56568 (264) obj. 456.879 iterations 586
Cbc0038I Pass 116: (6.82 seconds) suminf.   25.72916 (261) obj. 456.879 iterations 30
Cbc0038I Pass 117: (6.84 seconds) suminf.   23.74978 (246) obj. 456.879 iterations 117
Cbc0038I Pass 118: (6.85 seconds) suminf.   22.05606 (239) obj. 456.879 iterations 42
Cbc0038I Pass 119: (6.87 seconds) suminf.   21.84521 (237) obj. 456.879 iterations 47
Cbc0038I Pass 120: (6.91 seconds) suminf.   14.66343 (198) obj. 456.879 iterations 241
Cbc0038I Pass 121: (6.92 seconds) suminf.   14.87102 (197) obj. 456.879 iterations 33
Cbc0038I Pass 122: (6.96 seconds) suminf.   18.39534 (185) obj. 456.879 iterations 230
Cbc0038I Pass 123: (7.01 seconds) suminf.   12.84050 (194) obj. 456.879 iterations 269
Cbc0038I Pass 124: (7.02 seconds) suminf.   12.84055 (193) obj. 456.879 iterations 21
Cbc0038I Pass 125: (7.06 seconds) suminf.   13.99710 (197) obj. 456.879 iterations 259
Cbc0038I Pass 126: (7.08 seconds) suminf.   12.53245 (189) obj. 456.879 iterations 97
Cbc0038I Pass 127: (7.12 seconds) suminf.   18.14236 (191) obj. 456.879 iterations 233
Cbc0038I Pass 128: (7.15 seconds) suminf.   12.44731 (187) obj. 456.879 iterations 144
Cbc0038I Pass 129: (7.15 seconds) suminf.   12.44731 (187) obj. 456.879 iterations 8
Cbc0038I Pass 130: (7.19 seconds) suminf.   13.45318 (190) obj. 456.879 iterations 194
Cbc0038I Pass 131: (7.21 seconds) suminf.   12.29708 (185) obj. 456.879 iterations 112
Cbc0038I Pass 132: (7.21 seconds) suminf.   12.24848 (185) obj. 456.879 iterations 16
Cbc0038I Pass 133: (7.25 seconds) suminf.   13.60248 (157) obj. 456.879 iterations 231
Cbc0038I Pass 134: (7.27 seconds) suminf.   10.66628 (160) obj. 456.879 iterations 88
Cbc0038I Pass 135: (7.30 seconds) suminf.   10.96386 (142) obj. 456.879 iterations 187
Cbc0038I Pass 136: (7.31 seconds) suminf.    7.18488 (138) obj. 456.879 iterations 85
Cbc0038I Pass 137: (7.33 seconds) suminf.    8.82054 (130) obj. 456.879 iterations 108
Cbc0038I Pass 138: (7.34 seconds) suminf.    6.16700 (140) obj. 456.879 iterations 73
Cbc0038I Pass 139: (7.36 seconds) suminf.    9.87729 (140) obj. 456.879 iterations 121
Cbc0038I Pass 140: (7.45 seconds) suminf.   53.79025 (287) obj. 456.879 iterations 618
Cbc0038I Pass 141: (7.52 seconds) suminf.   20.94021 (192) obj. 456.879 iterations 469
Cbc0038I Pass 142: (7.54 seconds) suminf.   17.97652 (183) obj. 456.879 iterations 57
Cbc0038I Pass 143: (7.54 seconds) suminf.   17.96094 (183) obj. 456.879 iterations 5
Cbc0038I Pass 144: (7.58 seconds) suminf.    9.61401 (144) obj. 456.879 iterations 184
Cbc0038I Pass 145: (7.58 seconds) suminf.    8.98443 (147) obj. 456.879 iterations 24
Cbc0038I Pass 146: (7.60 seconds) suminf.    8.20020 (140) obj. 456.879 iterations 94
Cbc0038I Pass 147: (7.61 seconds) suminf.    6.61792 (142) obj. 456.879 iterations 48
Cbc0038I Pass 148: (7.63 seconds) suminf.    9.00945 (128) obj. 456.879 iterations 154
Cbc0038I Pass 149: (7.65 seconds) suminf.    5.36522 (118) obj. 456.879 iterations 97
Cbc0038I Pass 150: (7.68 seconds) suminf.    6.25331 (129) obj. 456.879 iterations 158
Cbc0038I Pass 151: (7.68 seconds) suminf.    4.45535 (126) obj. 456.879 iterations 37
Cbc0038I Pass 152: (7.71 seconds) suminf.    5.15798 (96) obj. 456.879 iterations 121
Cbc0038I Pass 153: (7.72 seconds) suminf.    2.77447 (92) obj. 456.879 iterations 57
Cbc0038I Pass 154: (7.74 seconds) suminf.    1.65744 (54) obj. 456.879 iterations 138
Cbc0038I Pass 155: (7.76 seconds) suminf.    1.10596 (63) obj. 456.879 iterations 126
Cbc0038I Pass 156: (7.78 seconds) suminf.    6.95525 (88) obj. 456.879 iterations 127
Cbc0038I Pass 157: (7.79 seconds) suminf.    3.06021 (62) obj. 456.879 iterations 73
Cbc0038I Pass 158: (7.82 seconds) suminf.   11.14063 (93) obj. 456.879 iterations 225
Cbc0038I Pass 159: (7.84 seconds) suminf.    6.77027 (65) obj. 456.879 iterations 108
Cbc0038I Pass 160: (7.85 seconds) suminf.    6.77027 (65) obj. 456.879 iterations 1
Cbc0038I Pass 161: (7.88 seconds) suminf.    7.39862 (51) obj. 456.879 iterations 246
Cbc0038I Pass 162: (7.89 seconds) suminf.    2.86400 (26) obj. 456.879 iterations 40
Cbc0038I Pass 163: (7.90 seconds) suminf.    2.29870 (18) obj. 456.879 iterations 52
Cbc0038I Pass 164: (7.91 seconds) suminf.    0.21076 (19) obj. 456.879 iterations 26
Cbc0038I Pass 165: (8.05 seconds) suminf.   55.69906 (291) obj. 456.879 iterations 952
Cbc0038I Pass 166: (8.13 seconds) suminf.   27.27208 (220) obj. 456.879 iterations 521
Cbc0038I Pass 167: (8.14 seconds) suminf.   27.31887 (216) obj. 456.879 iterations 25
Cbc0038I Pass 168: (8.19 seconds) suminf.   19.56817 (190) obj. 456.879 iterations 275
Cbc0038I Pass 169: (8.20 seconds) suminf.   19.31832 (188) obj. 456.879 iterations 10
Cbc0038I Pass 170: (8.24 seconds) suminf.   15.69387 (151) obj. 456.879 iterations 242
Cbc0038I Pass 171: (8.25 seconds) suminf.   14.12461 (153) obj. 456.879 iterations 92
Cbc0038I Pass 172: (8.29 seconds) suminf.   10.28872 (139) obj. 456.879 iterations 182
Cbc0038I Pass 173: (8.29 seconds) suminf.   10.28872 (139) obj. 456.879 iterations 14
Cbc0038I Pass 174: (8.33 seconds) suminf.    9.05262 (117) obj. 456.879 iterations 257
Cbc0038I Pass 175: (8.35 seconds) suminf.    8.46004 (121) obj. 456.879 iterations 106
Cbc0038I Pass 176: (8.39 seconds) suminf.    4.72398 (104) obj. 456.879 iterations 246
Cbc0038I Pass 177: (8.41 seconds) suminf.    3.17405 (84) obj. 456.879 iterations 76
Cbc0038I Pass 178: (8.43 seconds) suminf.    1.05717 (47) obj. 456.879 iterations 122
Cbc0038I Pass 179: (8.43 seconds) suminf.    1.05717 (47) obj. 456.879 iterations 10
Cbc0038I Pass 180: (8.45 seconds) suminf.    2.93883 (48) obj. 456.879 iterations 94
Cbc0038I Pass 181: (8.46 seconds) suminf.    0.88957 (52) obj. 456.879 iterations 54
Cbc0038I Pass 182: (8.49 seconds) suminf.    5.23325 (41) obj. 456.879 iterations 153
Cbc0038I Pass 183: (8.50 seconds) suminf.    0.80679 (34) obj. 456.879 iterations 57
Cbc0038I Pass 184: (8.51 seconds) suminf.    3.77910 (33) obj. 456.879 iterations 83
Cbc0038I Pass 185: (8.52 seconds) suminf.    1.96143 (29) obj. 456.879 iterations 45
Cbc0038I Pass 186: (8.66 seconds) suminf.   68.69913 (349) obj. 456.879 iterations 924
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 366 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 3468 rows 1121 columns - 361 fixed gives 1371, 351 - ok now
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 344 rows 117 columns
Cbc0038I Mini branch and bound did not improve solution (9.13 seconds)
Cbc0038I After 9.13 seconds - Feasibility pump exiting with objective of 482 - took 6.43 seconds
Cbc0012I Integer solution of 482 found by feasibility pump after 0 iterations and 0 nodes (9.14 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 2307 rows 627 columns - 273 fixed gives 329, 71 - ok now
Cbc0031I 11 added rows had average density of 11.181818
Cbc0013I At root node, 11 cuts changed objective from 360.39414 to 360.65783 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 5 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 17 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 482 best solution, best possible 361 (10.35 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1222 rows 320 columns
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1558 rows 443 columns
Cbc0010I After 100 nodes, 17 on tree, 482 best solution, best possible 376 (104.06 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1464 rows 394 columns
Cbc0010I After 200 nodes, 11 on tree, 482 best solution, best possible 376 (171.22 seconds)
Cbc0010I After 300 nodes, 15 on tree, 482 best solution, best possible 376 (242.14 seconds)
Cbc0010I After 400 nodes, 20 on tree, 482 best solution, best possible 376 (305.20 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1428 rows 392 columns
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1506 rows 408 columns
Cbc0010I After 500 nodes, 25 on tree, 482 best solution, best possible 376 (365.96 seconds)
Cbc0010I After 600 nodes, 20 on tree, 482 best solution, best possible 376 (436.86 seconds)
Cbc0010I After 700 nodes, 28 on tree, 482 best solution, best possible 376 (498.05 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1660 rows 459 columns
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1140 rows 295 columns
Cbc0010I After 800 nodes, 35 on tree, 482 best solution, best possible 376 (566.03 seconds)
Cbc0010I After 900 nodes, 42 on tree, 482 best solution, best possible 376 (626.88 seconds)
Cbc0010I After 1000 nodes, 43 on tree, 482 best solution, best possible 376 (679.66 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1475 rows 420 columns
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 1413 rows 397 columns
Cbc0010I After 1100 nodes, 31 on tree, 482 best solution, best possible 376 (730.97 seconds)
Cbc0010I After 1200 nodes, 22 on tree, 482 best solution, best possible 376 (795.51 seconds)
Cbc0010I After 1300 nodes, 12 on tree, 482 best solution, best possible 376 (853.39 seconds)
Cbc0010I After 1400 nodes, 11 on tree, 482 best solution, best possible 376 (918.36 seconds)
Cbc0010I After 1500 nodes, 9 on tree, 482 best solution, best possible 376 (977.85 seconds)
Cbc0010I After 1600 nodes, 23 on tree, 482 best solution, best possible 376 (1029.81 seconds)
Cbc0010I After 1700 nodes, 19 on tree, 482 best solution, best possible 376 (1086.39 seconds)
Cbc0010I After 1800 nodes, 14 on tree, 482 best solution, best possible 376 (1149.63 seconds)
Cbc0010I After 1900 nodes, 21 on tree, 482 best solution, best possible 376 (1212.00 seconds)
Cbc0010I After 2000 nodes, 28 on tree, 482 best solution, best possible 376 (1257.01 seconds)
Cbc0010I After 2100 nodes, 25 on tree, 482 best solution, best possible 376 (1308.80 seconds)
Cbc0010I After 2200 nodes, 34 on tree, 482 best solution, best possible 376 (1371.00 seconds)
Cbc0038I Full problem 4310 rows 1490 columns, reduced to 2514 rows 677 columns - 281 fixed gives 181, 42 - ok now
Cbc0010I After 2300 nodes, 19 on tree, 482 best solution, best possible 376 (1434.62 seconds)
Cbc0010I After 2400 nodes, 14 on tree, 482 best solution, best possible 376 (1496.43 seconds)
Cbc0010I After 2500 nodes, 21 on tree, 482 best solution, best possible 376 (1549.93 seconds)
Cbc0010I After 2600 nodes, 13 on tree, 482 best solution, best possible 376 (1610.52 seconds)
Cbc0010I After 2700 nodes, 29 on tree, 482 best solution, best possible 376 (1711.38 seconds)
Cbc0010I After 2800 nodes, 31 on tree, 482 best solution, best possible 376 (1762.37 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 482 (best possible 376), took 4214999 iterations and 2861 nodes (1799.86 seconds)
Cbc0032I Strong branching done 23646 times (1892032 iterations), fathomed 106 nodes and fixed 827 variables
Cbc0035I Maximum depth 53, 0 variables fixed on reduced cost
Cuts at root node changed objective from 360.394 to 361
Probing was tried 457 times and created 52748 cuts of which 0 were active after adding rounds of cuts (2.827 seconds)
Gomory was tried 360 times and created 455 cuts of which 0 were active after adding rounds of cuts (2.570 seconds)
Knapsack was tried 360 times and created 2057 cuts of which 0 were active after adding rounds of cuts (0.578 seconds)
Clique was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
FlowCover was tried 3 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 3 times and created 17 cuts of which 0 were active after adding rounds of cuts (0.097 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
ImplicationCuts was tried 42 times and created 26 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Stopped on time limit

Objective value:                482.00000000
Lower bound:                    376.000
Gap:                            0.28
Enumerated nodes:               2861
Total iterations:               4214999
Time (CPU seconds):             1800.12
Time (Wallclock seconds):       1800.55

Total time (CPU seconds):       1800.15   (Wallclock seconds):       1800.58

