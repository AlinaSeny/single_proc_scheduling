Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/default25_down_left_input.lp sec 1800 solve solu solutions/new_tr/default25_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 29803.8 - 0.01 seconds
Cgl0002I 334 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 166 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1010 rows, 337 columns (337 integer (311 of which binary)) and 3336 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 337 objects (337 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 98 integers unsatisfied sum - 17.7279
Cbc0038I Pass   1: suminf.    2.41584 (15) obj. 35840 iterations 253
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 35840 iterations 22
Cbc0038I Solution found of 35840
Cbc0038I Cleaned solution of 35840
Cbc0038I Before mini branch and bound, 236 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 1010 rows 337 columns, reduced to 127 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 35840 to 35840 (0.06 seconds)
Cbc0038I Round again with cutoff of 35235.5
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.61279 (18) obj. 35235 iterations 24
Cbc0038I Pass   4: suminf.    0.83325 (4) obj. 35235.5 iterations 48
Cbc0038I Pass   5: suminf.    0.67582 (4) obj. 35235.5 iterations 21
Cbc0038I Pass   6: suminf.   21.70492 (114) obj. 35235.5 iterations 231
Cbc0038I Pass   7: suminf.    9.49102 (64) obj. 35235.5 iterations 138
Cbc0038I Pass   8: suminf.    8.68424 (61) obj. 35235.5 iterations 35
Cbc0038I Pass   9: suminf.    1.33498 (15) obj. 35235.5 iterations 69
Cbc0038I Pass  10: suminf.    1.33498 (15) obj. 35235.5 iterations 16
Cbc0038I Pass  11: suminf.    1.18474 (15) obj. 35235.5 iterations 32
Cbc0038I Pass  12: suminf.   27.87385 (132) obj. 35235.5 iterations 175
Cbc0038I Pass  13: suminf.   12.59165 (79) obj. 35235.5 iterations 122
Cbc0038I Pass  14: suminf.    6.83277 (43) obj. 35235.5 iterations 81
Cbc0038I Pass  15: suminf.    6.83277 (43) obj. 35235.5 iterations 11
Cbc0038I Pass  16: suminf.    4.83325 (12) obj. 35235.5 iterations 98
Cbc0038I Pass  17: suminf.    3.40201 (21) obj. 35235.5 iterations 25
Cbc0038I Pass  18: suminf.    5.56220 (37) obj. 35235.5 iterations 97
Cbc0038I Pass  19: suminf.    5.72931 (44) obj. 35235.5 iterations 115
Cbc0038I Pass  20: suminf.    3.33349 (30) obj. 35235.5 iterations 36
Cbc0038I Pass  21: suminf.    2.55302 (30) obj. 35235.5 iterations 58
Cbc0038I Pass  22: suminf.    2.45581 (30) obj. 35235.5 iterations 12
Cbc0038I Pass  23: suminf.    3.31797 (34) obj. 35235.5 iterations 73
Cbc0038I Pass  24: suminf.    3.18026 (32) obj. 35235.5 iterations 19
Cbc0038I Pass  25: suminf.    1.25274 (12) obj. 35235.5 iterations 39
Cbc0038I Pass  26: suminf.    1.17527 (13) obj. 35235.5 iterations 3
Cbc0038I Pass  27: suminf.    1.32972 (13) obj. 35235.5 iterations 26
Cbc0038I Pass  28: suminf.   27.27783 (123) obj. 35235.5 iterations 222
Cbc0038I Pass  29: suminf.   13.53391 (84) obj. 35235.5 iterations 124
Cbc0038I Pass  30: suminf.   13.18195 (81) obj. 35235.5 iterations 38
Cbc0038I Pass  31: suminf.    7.30140 (58) obj. 35235.5 iterations 59
Cbc0038I Pass  32: suminf.    7.43836 (60) obj. 35235.5 iterations 5
Cbc0038I Pass  33: suminf.    2.16863 (16) obj. 35235.5 iterations 61
Cbc0038I Pass  34: suminf.    0.67582 (4) obj. 35235.5 iterations 5
Cbc0038I Pass  35: suminf.    0.83325 (4) obj. 35235.5 iterations 16
Cbc0038I Pass  36: suminf.   17.97709 (107) obj. 35235.5 iterations 163
Cbc0038I Pass  37: suminf.    6.71214 (57) obj. 35235.5 iterations 180
Cbc0038I Pass  38: suminf.    2.98712 (15) obj. 35235.5 iterations 51
Cbc0038I Pass  39: suminf.    0.67582 (4) obj. 35235.5 iterations 22
Cbc0038I Pass  40: suminf.    0.83325 (4) obj. 35235.5 iterations 10
Cbc0038I Pass  41: suminf.   21.91804 (102) obj. 35235.5 iterations 234
Cbc0038I Pass  42: suminf.   10.57436 (74) obj. 35235.5 iterations 108
Cbc0038I Pass  43: suminf.    7.71525 (40) obj. 35235.5 iterations 159
Cbc0038I Pass  44: suminf.    6.90557 (38) obj. 35235.5 iterations 38
Cbc0038I Pass  45: suminf.    8.52075 (44) obj. 35235.5 iterations 245
Cbc0038I Pass  46: suminf.    2.95588 (23) obj. 35235.5 iterations 70
Cbc0038I Pass  47: suminf.    5.85679 (28) obj. 35235.5 iterations 107
Cbc0038I Pass  48: suminf.    6.05037 (22) obj. 35235.5 iterations 22
Cbc0038I Pass  49: suminf.    0.67582 (4) obj. 35235.5 iterations 190
Cbc0038I Pass  50: suminf.    0.67582 (4) obj. 35235.5 iterations 1
Cbc0038I Pass  51: suminf.    0.83325 (4) obj. 35235.5 iterations 9
Cbc0038I Pass  52: suminf.   26.30659 (125) obj. 35235.5 iterations 253
Cbc0038I Pass  53: suminf.   18.97596 (112) obj. 35235.5 iterations 164
Cbc0038I Pass  54: suminf.   18.47916 (106) obj. 35235.5 iterations 44
Cbc0038I Pass  55: suminf.    9.33791 (64) obj. 35235.5 iterations 314
Cbc0038I Pass  56: suminf.    7.38066 (54) obj. 35235.5 iterations 80
Cbc0038I Pass  57: suminf.    6.35950 (42) obj. 35235.5 iterations 45
Cbc0038I Pass  58: suminf.    0.83325 (4) obj. 35235.5 iterations 111
Cbc0038I Pass  59: suminf.    0.83325 (4) obj. 35235.5 iterations 9
Cbc0038I Pass  60: suminf.    0.67582 (4) obj. 35235.5 iterations 16
Cbc0038I Pass  61: suminf.   28.53361 (138) obj. 35235.5 iterations 238
Cbc0038I Pass  62: suminf.   13.99756 (94) obj. 35235.5 iterations 137
Cbc0038I Pass  63: suminf.    8.99335 (79) obj. 35235.5 iterations 95
Cbc0038I Pass  64: suminf.    8.23910 (75) obj. 35235.5 iterations 26
Cbc0038I Pass  65: suminf.    2.25386 (42) obj. 35235.5 iterations 47
Cbc0038I Pass  66: suminf.    2.25261 (42) obj. 35235.5 iterations 8
Cbc0038I Pass  67: suminf.    3.79581 (36) obj. 35235.5 iterations 99
Cbc0038I Pass  68: suminf.    5.95644 (44) obj. 35235.5 iterations 77
Cbc0038I Pass  69: suminf.    5.23306 (35) obj. 35235.5 iterations 20
Cbc0038I Pass  70: suminf.    3.52889 (33) obj. 35235.5 iterations 142
Cbc0038I Pass  71: suminf.    5.01546 (42) obj. 35235.5 iterations 84
Cbc0038I Pass  72: suminf.    4.98664 (42) obj. 35235.5 iterations 4
Cbc0038I Pass  73: suminf.    1.66479 (23) obj. 35235.5 iterations 39
Cbc0038I Pass  74: suminf.    2.23491 (16) obj. 35235.5 iterations 49
Cbc0038I Pass  75: suminf.    1.47874 (13) obj. 35235.5 iterations 35
Cbc0038I Pass  76: suminf.    1.47874 (13) obj. 35235.5 iterations 2
Cbc0038I Pass  77: suminf.    0.83325 (4) obj. 35235.5 iterations 32
Cbc0038I Pass  78: suminf.    0.67582 (4) obj. 35235.5 iterations 12
Cbc0038I Pass  79: suminf.   18.90218 (102) obj. 35235.5 iterations 213
Cbc0038I Pass  80: suminf.   11.99961 (66) obj. 35235.5 iterations 96
Cbc0038I Pass  81: suminf.   11.13090 (64) obj. 35235.5 iterations 10
Cbc0038I Pass  82: suminf.    8.99827 (49) obj. 35235.5 iterations 34
Cbc0038I Pass  83: suminf.    8.12169 (53) obj. 35235.5 iterations 16
Cbc0038I Pass  84: suminf.    7.16339 (37) obj. 35235.5 iterations 116
Cbc0038I Pass  85: suminf.    6.20785 (38) obj. 35235.5 iterations 22
Cbc0038I Pass  86: suminf.   10.23380 (43) obj. 35235.5 iterations 117
Cbc0038I Pass  87: suminf.    7.39305 (56) obj. 35235.5 iterations 55
Cbc0038I Pass  88: suminf.    6.50008 (39) obj. 35235.5 iterations 14
Cbc0038I Pass  89: suminf.    7.97796 (35) obj. 35235.5 iterations 63
Cbc0038I Pass  90: suminf.    5.00410 (43) obj. 35235.5 iterations 30
Cbc0038I Pass  91: suminf.    3.35962 (47) obj. 35235.5 iterations 33
Cbc0038I Pass  92: suminf.    5.30049 (24) obj. 35235.5 iterations 85
Cbc0038I Pass  93: suminf.    1.34021 (9) obj. 35235.5 iterations 78
Cbc0038I Pass  94: suminf.    1.34021 (9) obj. 35235.5 iterations 5
Cbc0038I Pass  95: suminf.    3.09711 (8) obj. 35235.5 iterations 61
Cbc0038I Pass  96: suminf.    0.83325 (4) obj. 35235.5 iterations 13
Cbc0038I Pass  97: suminf.    0.67582 (4) obj. 35235.5 iterations 7
Cbc0038I Pass  98: suminf.   24.72384 (121) obj. 35235.5 iterations 191
Cbc0038I Pass  99: suminf.   10.79976 (84) obj. 35235.5 iterations 153
Cbc0038I Pass 100: suminf.    9.04732 (61) obj. 35235.5 iterations 30
Cbc0038I Pass 101: suminf.    5.62924 (66) obj. 35235.5 iterations 174
Cbc0038I Pass 102: suminf.   23.39530 (129) obj. 35235.5 iterations 254
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1010 rows 337 columns, reduced to 944 rows 313 columns - 131 fixed gives 207, 59 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.44 seconds)
Cbc0038I After 0.44 seconds - Feasibility pump exiting with objective of 35840 - took 0.40 seconds
Cbc0012I Integer solution of 35840 found by feasibility pump after 0 iterations and 0 nodes (0.44 seconds)
Cbc0038I Full problem 1010 rows 337 columns, reduced to 117 rows 35 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 6 added rows had average density of 18.333333
Cbc0013I At root node, 10 cuts changed objective from 29803.789 to 32768 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 44 row cuts average 2.7 elements, 52 column cuts (52 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 51 row cuts average 57.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective 35840, took 445 iterations and 0 nodes (0.49 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Cuts at root node changed objective from 29803.8 to 32768
Probing was tried 2 times and created 96 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 51 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                35840.00000000
Enumerated nodes:               0
Total iterations:               445
Time (CPU seconds):             0.50
Time (Wallclock seconds):       0.51

Total time (CPU seconds):       0.51   (Wallclock seconds):       0.52

