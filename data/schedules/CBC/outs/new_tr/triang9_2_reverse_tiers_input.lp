Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang9_2_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang9_2_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 365.024 - 0.85 seconds
Cgl0002I 1201 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1044 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 383 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 4319 rows, 1490 columns (1490 integer (1445 of which binary)) and 14322 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1490 objects (1490 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 540 integers unsatisfied sum - 161.395
Cbc0038I Pass   1: (3.87 seconds) suminf.   36.21444 (210) obj. 434.399 iterations 1944
Cbc0038I Pass   2: (3.94 seconds) suminf.   21.34450 (138) obj. 460.918 iterations 484
Cbc0038I Pass   3: (3.96 seconds) suminf.   20.10147 (135) obj. 471.062 iterations 93
Cbc0038I Pass   4: (3.98 seconds) suminf.   16.60724 (132) obj. 484 iterations 112
Cbc0038I Pass   5: (3.99 seconds) suminf.   15.79354 (120) obj. 484 iterations 47
Cbc0038I Pass   6: (4.01 seconds) suminf.   15.59558 (130) obj. 484 iterations 143
Cbc0038I Pass   7: (4.02 seconds) suminf.   15.56734 (132) obj. 484 iterations 26
Cbc0038I Pass   8: (4.07 seconds) suminf.    8.87514 (93) obj. 484 iterations 319
Cbc0038I Pass   9: (4.08 seconds) suminf.    8.87514 (93) obj. 484 iterations 10
Cbc0038I Pass  10: (4.10 seconds) suminf.    7.35301 (78) obj. 484 iterations 127
Cbc0038I Pass  11: (4.11 seconds) suminf.    6.07443 (80) obj. 484 iterations 42
Cbc0038I Pass  12: (4.12 seconds) suminf.    4.86580 (67) obj. 484.392 iterations 52
Cbc0038I Pass  13: (4.22 seconds) suminf.    2.97982 (28) obj. 484 iterations 615
Cbc0038I Pass  14: (4.23 seconds) suminf.    2.97982 (28) obj. 484 iterations 19
Cbc0038I Pass  15: (4.30 seconds) suminf.    0.00000 (0) obj. 488 iterations 443
Cbc0038I Solution found of 488
Cbc0038I Cleaned solution of 488
Cbc0038I Before mini branch and bound, 873 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1442 rows 422 columns
Cbc0038I Mini branch and bound improved solution from 488 to 471 (5.12 seconds)
Cbc0038I Round again with cutoff of 459.506
Cbc0038I Pass  16: (5.13 seconds) suminf.   36.21444 (210) obj. 434.399 iterations 0
Cbc0038I Pass  17: (5.19 seconds) suminf.   21.78750 (138) obj. 459.506 iterations 432
Cbc0038I Pass  18: (5.21 seconds) suminf.   21.34886 (139) obj. 459.506 iterations 166
Cbc0038I Pass  19: (5.26 seconds) suminf.   15.81296 (151) obj. 459.506 iterations 337
Cbc0038I Pass  20: (5.27 seconds) suminf.   14.67440 (147) obj. 459.506 iterations 6
Cbc0038I Pass  21: (5.28 seconds) suminf.   14.67440 (147) obj. 459.506 iterations 4
Cbc0038I Pass  22: (5.32 seconds) suminf.    7.02261 (87) obj. 458.32 iterations 291
Cbc0038I Pass  23: (5.33 seconds) suminf.    4.56506 (55) obj. 459.506 iterations 85
Cbc0038I Pass  24: (5.34 seconds) suminf.    4.56506 (55) obj. 459.506 iterations 1
Cbc0038I Pass  25: (5.43 seconds) suminf.    4.09051 (54) obj. 459.506 iterations 594
Cbc0038I Pass  26: (5.44 seconds) suminf.    4.09051 (54) obj. 459.506 iterations 14
Cbc0038I Pass  27: (5.46 seconds) suminf.    4.26955 (47) obj. 459.506 iterations 153
Cbc0038I Pass  28: (5.47 seconds) suminf.    3.77755 (42) obj. 459.506 iterations 84
Cbc0038I Pass  29: (5.50 seconds) suminf.    9.10061 (58) obj. 459.506 iterations 150
Cbc0038I Pass  30: (5.51 seconds) suminf.    6.56598 (39) obj. 459.506 iterations 80
Cbc0038I Pass  31: (5.54 seconds) suminf.    6.29427 (40) obj. 459.506 iterations 214
Cbc0038I Pass  32: (5.57 seconds) suminf.    3.77435 (37) obj. 459.506 iterations 160
Cbc0038I Pass  33: (5.61 seconds) suminf.   10.49516 (68) obj. 459.506 iterations 243
Cbc0038I Pass  34: (5.63 seconds) suminf.    7.77798 (41) obj. 459.506 iterations 153
Cbc0038I Pass  35: (5.65 seconds) suminf.    6.82976 (58) obj. 459.506 iterations 98
Cbc0038I Pass  36: (5.65 seconds) suminf.    5.96063 (42) obj. 459.506 iterations 26
Cbc0038I Pass  37: (5.66 seconds) suminf.    4.10272 (43) obj. 459.506 iterations 79
Cbc0038I Pass  38: (5.71 seconds) suminf.    7.30144 (59) obj. 459.506 iterations 277
Cbc0038I Pass  39: (5.72 seconds) suminf.    3.95909 (58) obj. 459.506 iterations 119
Cbc0038I Pass  40: (5.74 seconds) suminf.    7.79498 (62) obj. 459.506 iterations 87
Cbc0038I Pass  41: (5.75 seconds) suminf.    5.25972 (38) obj. 459.506 iterations 98
Cbc0038I Pass  42: (5.76 seconds) suminf.    4.42663 (49) obj. 459.506 iterations 39
Cbc0038I Pass  43: (5.83 seconds) suminf.   10.70888 (77) obj. 459.506 iterations 479
Cbc0038I Pass  44: (5.84 seconds) suminf.    7.77798 (41) obj. 459.506 iterations 90
Cbc0038I Pass  45: (5.85 seconds) suminf.    7.77798 (41) obj. 459.506 iterations 1
Cbc0038I Pass  46: (5.88 seconds) suminf.   10.92234 (63) obj. 459.506 iterations 186
Cbc0038I Pass  47: (5.90 seconds) suminf.    5.96063 (42) obj. 459.506 iterations 175
Cbc0038I Pass  48: (5.91 seconds) suminf.    4.10272 (43) obj. 459.506 iterations 66
Cbc0038I Pass  49: (5.95 seconds) suminf.    7.02929 (54) obj. 459.506 iterations 214
Cbc0038I Pass  50: (5.96 seconds) suminf.    4.42374 (56) obj. 459.506 iterations 105
Cbc0038I Pass  51: (5.99 seconds) suminf.   10.50668 (71) obj. 459.506 iterations 171
Cbc0038I Pass  52: (6.00 seconds) suminf.    7.31897 (40) obj. 459.506 iterations 77
Cbc0038I Pass  53: (6.01 seconds) suminf.    7.02409 (43) obj. 459.506 iterations 57
Cbc0038I Pass  54: (6.07 seconds) suminf.   10.76621 (55) obj. 459.506 iterations 358
Cbc0038I Pass  55: (6.09 seconds) suminf.    7.70709 (46) obj. 459.506 iterations 166
Cbc0038I Pass  56: (6.17 seconds) suminf.    5.21258 (53) obj. 459.506 iterations 518
Cbc0038I Pass  57: (6.22 seconds) suminf.   18.17149 (91) obj. 437.427 iterations 404
Cbc0038I Pass  58: (6.33 seconds) suminf.    4.15995 (32) obj. 459.506 iterations 704
Cbc0038I Pass  59: (6.39 seconds) suminf.   10.99655 (81) obj. 459.506 iterations 422
Cbc0038I Pass  60: (6.41 seconds) suminf.    4.41553 (65) obj. 459.506 iterations 108
Cbc0038I Pass  61: (6.44 seconds) suminf.   13.78954 (62) obj. 459.506 iterations 194
Cbc0038I Pass  62: (6.47 seconds) suminf.    7.79587 (53) obj. 459.506 iterations 248
Cbc0038I Pass  63: (6.52 seconds) suminf.    5.17948 (54) obj. 446.893 iterations 255
Cbc0038I Pass  64: (6.63 seconds) suminf.   61.61633 (288) obj. 459.506 iterations 836
Cbc0038I Pass  65: (6.73 seconds) suminf.   39.21839 (235) obj. 459.506 iterations 601
Cbc0038I Pass  66: (6.74 seconds) suminf.   36.53927 (230) obj. 459.506 iterations 52
Cbc0038I Pass  67: (6.76 seconds) suminf.   36.40830 (217) obj. 459.506 iterations 62
Cbc0038I Pass  68: (6.79 seconds) suminf.   34.21245 (222) obj. 459.506 iterations 164
Cbc0038I Pass  69: (6.81 seconds) suminf.   29.57101 (218) obj. 459.506 iterations 79
Cbc0038I Pass  70: (6.85 seconds) suminf.   25.99854 (183) obj. 459.506 iterations 196
Cbc0038I Pass  71: (6.86 seconds) suminf.   24.25941 (189) obj. 459.506 iterations 89
Cbc0038I Pass  72: (6.91 seconds) suminf.   22.86958 (212) obj. 459.506 iterations 244
Cbc0038I Pass  73: (6.93 seconds) suminf.   21.54758 (214) obj. 459.506 iterations 145
Cbc0038I Pass  74: (6.97 seconds) suminf.   21.06677 (230) obj. 459.506 iterations 201
Cbc0038I Pass  75: (6.99 seconds) suminf.   18.37524 (224) obj. 459.506 iterations 134
Cbc0038I Pass  76: (7.02 seconds) suminf.   17.72101 (224) obj. 459.506 iterations 131
Cbc0038I Pass  77: (7.03 seconds) suminf.   17.50070 (218) obj. 459.506 iterations 59
Cbc0038I Pass  78: (7.04 seconds) suminf.   17.37295 (220) obj. 459.506 iterations 18
Cbc0038I Pass  79: (7.08 seconds) suminf.   18.78624 (195) obj. 444.196 iterations 231
Cbc0038I Pass  80: (7.10 seconds) suminf.   18.81353 (206) obj. 459.506 iterations 83
Cbc0038I Pass  81: (7.11 seconds) suminf.   17.95308 (219) obj. 459.506 iterations 47
Cbc0038I Pass  82: (7.13 seconds) suminf.   17.08114 (217) obj. 459.506 iterations 59
Cbc0038I Pass  83: (7.14 seconds) suminf.   18.34475 (218) obj. 459.506 iterations 50
Cbc0038I Pass  84: (7.25 seconds) suminf.   54.75007 (324) obj. 459.506 iterations 708
Cbc0038I Pass  85: (7.35 seconds) suminf.   34.52669 (277) obj. 459.506 iterations 620
Cbc0038I Pass  86: (7.36 seconds) suminf.   33.34014 (281) obj. 459.506 iterations 63
Cbc0038I Pass  87: (7.38 seconds) suminf.   33.34106 (275) obj. 459.506 iterations 58
Cbc0038I Pass  88: (7.40 seconds) suminf.   32.90573 (265) obj. 459.506 iterations 90
Cbc0038I Pass  89: (7.42 seconds) suminf.   32.72735 (269) obj. 459.506 iterations 98
Cbc0038I Pass  90: (7.48 seconds) suminf.   28.12023 (260) obj. 459.506 iterations 302
Cbc0038I Pass  91: (7.51 seconds) suminf.   21.22685 (238) obj. 459.506 iterations 178
Cbc0038I Pass  92: (7.53 seconds) suminf.   20.48391 (251) obj. 459.506 iterations 100
Cbc0038I Pass  93: (7.56 seconds) suminf.   18.72220 (242) obj. 459.506 iterations 160
Cbc0038I Pass  94: (7.58 seconds) suminf.   16.65911 (216) obj. 459.506 iterations 111
Cbc0038I Pass  95: (7.62 seconds) suminf.   17.61997 (217) obj. 459.506 iterations 174
Cbc0038I Pass  96: (7.63 seconds) suminf.   18.01367 (218) obj. 459.506 iterations 33
Cbc0038I Pass  97: (7.66 seconds) suminf.   16.79874 (235) obj. 459.506 iterations 166
Cbc0038I Pass  98: (7.68 seconds) suminf.   15.70286 (210) obj. 459.506 iterations 82
Cbc0038I Pass  99: (7.72 seconds) suminf.   10.44979 (177) obj. 459.506 iterations 255
Cbc0038I Pass 100: (7.73 seconds) suminf.    9.75137 (173) obj. 459.506 iterations 47
Cbc0038I Pass 101: (7.76 seconds) suminf.   11.40114 (148) obj. 459.506 iterations 133
Cbc0038I Pass 102: (7.77 seconds) suminf.    9.70614 (160) obj. 459.506 iterations 58
Cbc0038I Pass 103: (7.80 seconds) suminf.   11.97871 (156) obj. 451.468 iterations 152
Cbc0038I Pass 104: (7.82 seconds) suminf.    8.24632 (151) obj. 459.506 iterations 114
Cbc0038I Pass 105: (7.86 seconds) suminf.    9.07650 (133) obj. 459.506 iterations 245
Cbc0038I Pass 106: (7.87 seconds) suminf.    6.72241 (108) obj. 459.506 iterations 43
Cbc0038I Pass 107: (7.89 seconds) suminf.    9.67534 (86) obj. 459.506 iterations 171
Cbc0038I Pass 108: (7.91 seconds) suminf.    4.82899 (78) obj. 459.506 iterations 119
Cbc0038I Pass 109: (7.97 seconds) suminf.   10.22297 (85) obj. 459.506 iterations 315
Cbc0038I Pass 110: (7.98 seconds) suminf.    7.51598 (83) obj. 459.506 iterations 79
Cbc0038I Pass 111: (8.00 seconds) suminf.    6.52162 (86) obj. 459.506 iterations 100
Cbc0038I Pass 112: (8.04 seconds) suminf.    6.65947 (70) obj. 459.506 iterations 261
Cbc0038I Pass 113: (8.05 seconds) suminf.    3.46015 (64) obj. 459.506 iterations 101
Cbc0038I Pass 114: (8.06 seconds) suminf.    5.94662 (56) obj. 459.506 iterations 74
Cbc0038I Pass 115: (8.18 seconds) suminf.   46.53894 (282) obj. 459.506 iterations 855
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 528 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 3039 rows 960 columns - 226 fixed gives 1402, 440 - ok now
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 321 rows 114 columns
Cbc0038I Mini branch and bound did not improve solution (8.67 seconds)
Cbc0038I After 8.67 seconds - Feasibility pump exiting with objective of 471 - took 5.18 seconds
Cbc0012I Integer solution of 471 found by feasibility pump after 0 iterations and 0 nodes (8.67 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1235 rows 335 columns
Cbc0031I 20 added rows had average density of 14.75
Cbc0013I At root node, 20 cuts changed objective from 365.06335 to 365.14731 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 70 row cuts average 2.1 elements, 3 column cuts (3 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 580.1 elements, 0 column cuts (0 active)  in 0.364 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 30 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 471 best solution, best possible 365.14731 (10.78 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1138 rows 316 columns
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1166 rows 328 columns
Cbc0010I After 100 nodes, 1 on tree, 471 best solution, best possible 377 (70.53 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 895 rows 253 columns
Cbc0010I After 200 nodes, 5 on tree, 471 best solution, best possible 381 (134.17 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1019 rows 292 columns
Cbc0010I After 300 nodes, 5 on tree, 471 best solution, best possible 384 (207.00 seconds)
Cbc0010I After 400 nodes, 6 on tree, 471 best solution, best possible 385 (278.48 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 945 rows 270 columns
Cbc0010I After 500 nodes, 6 on tree, 471 best solution, best possible 388 (361.57 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1135 rows 330 columns
Cbc0010I After 600 nodes, 6 on tree, 471 best solution, best possible 390 (431.47 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1056 rows 298 columns
Cbc0010I After 700 nodes, 32 on tree, 471 best solution, best possible 390 (472.75 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1123 rows 324 columns
Cbc0010I After 800 nodes, 38 on tree, 471 best solution, best possible 390 (527.60 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1269 rows 368 columns
Cbc0010I After 900 nodes, 48 on tree, 471 best solution, best possible 390 (572.54 seconds)
Cbc0010I After 1000 nodes, 53 on tree, 471 best solution, best possible 390 (615.94 seconds)
Cbc0010I After 1100 nodes, 46 on tree, 471 best solution, best possible 390 (654.63 seconds)
Cbc0010I After 1200 nodes, 35 on tree, 471 best solution, best possible 390 (698.42 seconds)
Cbc0010I After 1300 nodes, 24 on tree, 471 best solution, best possible 390 (743.65 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 471 best solution, best possible 390 (786.49 seconds)
Cbc0010I After 1500 nodes, 14 on tree, 471 best solution, best possible 390 (847.57 seconds)
Cbc0010I After 1600 nodes, 5 on tree, 471 best solution, best possible 390 (946.04 seconds)
Cbc0010I After 1700 nodes, 3 on tree, 471 best solution, best possible 392 (1012.97 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1093 rows 309 columns
Cbc0010I After 1800 nodes, 3 on tree, 471 best solution, best possible 393 (1071.33 seconds)
Cbc0010I After 1900 nodes, 14 on tree, 471 best solution, best possible 393 (1117.50 seconds)
Cbc0010I After 2000 nodes, 16 on tree, 471 best solution, best possible 393 (1162.36 seconds)
Cbc0010I After 2100 nodes, 5 on tree, 471 best solution, best possible 393 (1201.38 seconds)
Cbc0010I After 2200 nodes, 11 on tree, 471 best solution, best possible 393 (1254.46 seconds)
Cbc0010I After 2300 nodes, 7 on tree, 471 best solution, best possible 394 (1310.22 seconds)
Cbc0010I After 2400 nodes, 8 on tree, 471 best solution, best possible 395 (1376.41 seconds)
Cbc0010I After 2500 nodes, 6 on tree, 471 best solution, best possible 395 (1419.33 seconds)
Cbc0010I After 2600 nodes, 10 on tree, 471 best solution, best possible 396 (1465.10 seconds)
Cbc0010I After 2700 nodes, 9 on tree, 471 best solution, best possible 396 (1520.87 seconds)
Cbc0010I After 2800 nodes, 4 on tree, 471 best solution, best possible 397 (1561.01 seconds)
Cbc0010I After 2900 nodes, 18 on tree, 471 best solution, best possible 397 (1612.01 seconds)
Cbc0010I After 3000 nodes, 6 on tree, 471 best solution, best possible 397 (1644.78 seconds)
Cbc0038I Full problem 4319 rows 1490 columns, reduced to 1129 rows 324 columns
Cbc0010I After 3100 nodes, 5 on tree, 471 best solution, best possible 397 (1682.48 seconds)
Cbc0010I After 3200 nodes, 9 on tree, 471 best solution, best possible 398 (1735.45 seconds)
Cbc0010I After 3300 nodes, 8 on tree, 471 best solution, best possible 399 (1794.97 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 471 (best possible 399), took 4778632 iterations and 3312 nodes (1798.09 seconds)
Cbc0032I Strong branching done 20086 times (1533135 iterations), fathomed 107 nodes and fixed 603 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 365.063 to 365.147
Probing was tried 599 times and created 50592 cuts of which 0 were active after adding rounds of cuts (3.447 seconds)
Gomory was tried 469 times and created 308 cuts of which 0 were active after adding rounds of cuts (3.014 seconds)
Knapsack was tried 469 times and created 3022 cuts of which 0 were active after adding rounds of cuts (0.782 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
TwoMirCuts was tried 10 times and created 30 cuts of which 0 were active after adding rounds of cuts (0.179 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
ImplicationCuts was tried 34 times and created 81 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)

Result - Stopped on time limit

Objective value:                471.00000000
Lower bound:                    399.000
Gap:                            0.18
Enumerated nodes:               3312
Total iterations:               4778632
Time (CPU seconds):             1798.33
Time (Wallclock seconds):       1801.26

Total time (CPU seconds):       1798.36   (Wallclock seconds):       1801.29

