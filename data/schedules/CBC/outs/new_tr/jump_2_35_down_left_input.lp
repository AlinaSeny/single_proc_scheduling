Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_35_down_left_input.lp sec 1800 solve solu solutions/new_tr/jump_2_35_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 38948 - 0.26 seconds
Cgl0002I 347 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 400 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 2994 rows, 963 columns (963 integer (927 of which binary)) and 9947 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 963 objects (963 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 534 integers unsatisfied sum - 116.577
Cbc0038I Pass   1: suminf.   65.27132 (388) obj. 49994.1 iterations 1144
Cbc0038I Pass   2: suminf.   50.47787 (306) obj. 49860.7 iterations 557
Cbc0038I Pass   3: suminf.   41.86504 (282) obj. 49808.9 iterations 320
Cbc0038I Pass   4: suminf.   38.42039 (282) obj. 49820 iterations 170
Cbc0038I Pass   5: suminf.   33.20337 (280) obj. 49828.7 iterations 172
Cbc0038I Pass   6: suminf.   31.55517 (258) obj. 49871.2 iterations 107
Cbc0038I Pass   7: suminf.   30.69950 (253) obj. 50088.1 iterations 37
Cbc0038I Pass   8: suminf.   29.76239 (255) obj. 50085.3 iterations 114
Cbc0038I Pass   9: suminf.   27.34511 (226) obj. 50099.1 iterations 298
Cbc0038I Pass  10: suminf.   27.61094 (229) obj. 51872 iterations 48
Cbc0038I Pass  11: suminf.   27.49656 (231) obj. 52003.8 iterations 38
Cbc0038I Pass  12: suminf.   21.42974 (192) obj. 61123.6 iterations 244
Cbc0038I Pass  13: suminf.   20.70661 (193) obj. 63509 iterations 42
Cbc0038I Pass  14: suminf.   18.81273 (175) obj. 57241.8 iterations 85
Cbc0038I Pass  15: suminf.   17.59113 (180) obj. 56768 iterations 30
Cbc0038I Pass  16: suminf.   18.27685 (165) obj. 56637.3 iterations 181
Cbc0038I Pass  17: suminf.   17.49652 (153) obj. 54631.8 iterations 68
Cbc0038I Pass  18: suminf.   15.74091 (153) obj. 54552.2 iterations 10
Cbc0038I Pass  19: suminf.   15.46335 (154) obj. 54615.8 iterations 22
Cbc0038I Pass  20: suminf.   14.53236 (138) obj. 54421.3 iterations 353
Cbc0038I Pass  21: suminf.   12.19755 (142) obj. 54068.3 iterations 123
Cbc0038I Pass  22: suminf.   11.69661 (143) obj. 54064.9 iterations 37
Cbc0038I Pass  23: suminf.    9.08260 (99) obj. 57434.1 iterations 364
Cbc0038I Pass  24: suminf.    4.22031 (93) obj. 61403.5 iterations 96
Cbc0038I Pass  25: suminf.    6.24717 (49) obj. 52091.8 iterations 891
Cbc0038I Pass  26: suminf.    6.47075 (52) obj. 52091.8 iterations 20
Cbc0038I Pass  27: suminf.    3.13044 (39) obj. 52224 iterations 667
Cbc0038I Pass  28: suminf.    1.68524 (32) obj. 52224 iterations 11
Cbc0038I Pass  29: suminf.    3.10792 (45) obj. 52095.9 iterations 131
Cbc0038I Pass  30: suminf.    3.10792 (45) obj. 52095.9 iterations 0
Cbc0038I Pass  31: suminf.    5.11062 (35) obj. 53923.8 iterations 116
Cbc0038I Pass  32: suminf.    1.62962 (20) obj. 53771.6 iterations 23
Cbc0038I Pass  33: suminf.    0.00000 (0) obj. 52224 iterations 128
Cbc0038I Solution found of 52224
Cbc0038I Cleaned solution of 52224
Cbc0038I Before mini branch and bound, 274 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (1.43 seconds)
Cbc0038I Round again with cutoff of 50900.9
Cbc0038I Pass  34: suminf.   65.27132 (388) obj. 49994.1 iterations 0
Cbc0038I Pass  35: suminf.   50.47787 (306) obj. 49860.7 iterations 582
Cbc0038I Pass  36: suminf.   41.86504 (282) obj. 49808.9 iterations 332
Cbc0038I Pass  37: suminf.   38.42039 (282) obj. 49820 iterations 170
Cbc0038I Pass  38: suminf.   33.20337 (280) obj. 49828.7 iterations 152
Cbc0038I Pass  39: suminf.   31.55517 (258) obj. 49871.2 iterations 132
Cbc0038I Pass  40: suminf.   30.69950 (253) obj. 50088.1 iterations 32
Cbc0038I Pass  41: suminf.   29.76239 (255) obj. 50085.3 iterations 139
Cbc0038I Pass  42: suminf.   28.38981 (229) obj. 49983.8 iterations 331
Cbc0038I Pass  43: suminf.   27.67452 (225) obj. 50900.9 iterations 38
Cbc0038I Pass  44: suminf.   25.78446 (218) obj. 50900.9 iterations 257
Cbc0038I Pass  45: suminf.   24.13653 (227) obj. 50900.9 iterations 82
Cbc0038I Pass  46: suminf.   23.90528 (228) obj. 50900.9 iterations 45
Cbc0038I Pass  47: suminf.   22.68658 (201) obj. 50900.9 iterations 259
Cbc0038I Pass  48: suminf.   21.76799 (199) obj. 50900.9 iterations 49
Cbc0038I Pass  49: suminf.   21.76799 (199) obj. 50900.9 iterations 1
Cbc0038I Pass  50: suminf.   17.75857 (190) obj. 50900.9 iterations 212
Cbc0038I Pass  51: suminf.   17.90642 (186) obj. 50900.9 iterations 71
Cbc0038I Pass  52: suminf.   19.19205 (163) obj. 50900.9 iterations 235
Cbc0038I Pass  53: suminf.   17.81853 (168) obj. 50900.9 iterations 139
Cbc0038I Pass  54: suminf.   16.68688 (173) obj. 50900.9 iterations 85
Cbc0038I Pass  55: suminf.   18.06864 (158) obj. 50900.9 iterations 277
Cbc0038I Pass  56: suminf.   17.99586 (196) obj. 50900.9 iterations 128
Cbc0038I Pass  57: suminf.   18.06938 (156) obj. 50900.9 iterations 239
Cbc0038I Pass  58: suminf.   16.53966 (158) obj. 50900.9 iterations 163
Cbc0038I Pass  59: suminf.   15.89502 (175) obj. 50900.9 iterations 73
Cbc0038I Pass  60: suminf.   16.51765 (138) obj. 50900.9 iterations 206
Cbc0038I Pass  61: suminf.   10.69732 (122) obj. 50900.9 iterations 192
Cbc0038I Pass  62: suminf.   10.67058 (117) obj. 50900.9 iterations 33
Cbc0038I Pass  63: suminf.   12.88326 (117) obj. 50900.9 iterations 133
Cbc0038I Pass  64: suminf.   10.73234 (116) obj. 50900.9 iterations 160
Cbc0038I Pass  65: suminf.   11.90130 (140) obj. 50900.9 iterations 200
Cbc0038I Pass  66: suminf.   10.96166 (132) obj. 50900.9 iterations 79
Cbc0038I Pass  67: suminf.   10.03168 (129) obj. 50900.9 iterations 16
Cbc0038I Pass  68: suminf.    9.25556 (117) obj. 50900.9 iterations 181
Cbc0038I Pass  69: suminf.    9.20282 (124) obj. 50900.9 iterations 19
Cbc0038I Pass  70: suminf.    6.99103 (111) obj. 50900.9 iterations 296
Cbc0038I Pass  71: suminf.    6.63484 (102) obj. 50900.9 iterations 81
Cbc0038I Pass  72: suminf.    5.93651 (98) obj. 50900.9 iterations 25
Cbc0038I Pass  73: suminf.    9.24634 (70) obj. 50900.9 iterations 186
Cbc0038I Pass  74: suminf.    9.24256 (71) obj. 50900.9 iterations 29
Cbc0038I Pass  75: suminf.    3.96469 (37) obj. 50900.9 iterations 220
Cbc0038I Pass  76: suminf.    1.91762 (27) obj. 50900.9 iterations 11
Cbc0038I Pass  77: suminf.    0.06462 (1) obj. 50900.9 iterations 43
Cbc0038I Solution found of 50900.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2995 rows 963 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 50176
Cbc0038I Before mini branch and bound, 264 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2369 rows 699 columns - 265 fixed gives 789, 182 - ok now
Cbc0038I Full problem 2994 rows 963 columns, reduced to 119 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (2.66 seconds)
Cbc0038I Round again with cutoff of 47940.5
Cbc0038I Pass  78: suminf.   64.95885 (387) obj. 47940 iterations 50
Cbc0038I Pass  79: suminf.   50.95213 (309) obj. 47940.5 iterations 687
Cbc0038I Pass  80: suminf.   42.77345 (278) obj. 47940.5 iterations 294
Cbc0038I Pass  81: suminf.   39.36390 (287) obj. 47940.5 iterations 166
Cbc0038I Pass  82: suminf.   38.15979 (282) obj. 47940.5 iterations 53
Cbc0038I Pass  83: suminf.   30.60998 (249) obj. 47940.5 iterations 277
Cbc0038I Pass  84: suminf.   27.74288 (231) obj. 47940.5 iterations 131
Cbc0038I Pass  85: suminf.   27.72604 (230) obj. 47940.5 iterations 22
Cbc0038I Pass  86: suminf.   29.12089 (248) obj. 47940.5 iterations 109
Cbc0038I Pass  87: suminf.   28.42342 (256) obj. 47940.5 iterations 60
Cbc0038I Pass  88: suminf.   24.49568 (214) obj. 47940.5 iterations 402
Cbc0038I Pass  89: suminf.   24.09927 (224) obj. 47940.5 iterations 87
Cbc0038I Pass  90: suminf.   22.98991 (195) obj. 47940.5 iterations 290
Cbc0038I Pass  91: suminf.   19.30116 (178) obj. 47940.5 iterations 94
Cbc0038I Pass  92: suminf.   19.10993 (185) obj. 47940.5 iterations 24
Cbc0038I Pass  93: suminf.   19.10993 (185) obj. 47940.5 iterations 3
Cbc0038I Pass  94: suminf.   20.02566 (157) obj. 47940.5 iterations 181
Cbc0038I Pass  95: suminf.   18.98301 (204) obj. 47940.5 iterations 149
Cbc0038I Pass  96: suminf.   18.96725 (193) obj. 47940.5 iterations 96
Cbc0038I Pass  97: suminf.   24.36267 (171) obj. 47940.5 iterations 189
Cbc0038I Pass  98: suminf.   17.55180 (174) obj. 47940.5 iterations 177
Cbc0038I Pass  99: suminf.   17.07741 (175) obj. 47940.5 iterations 26
Cbc0038I Pass 100: suminf.   17.10647 (175) obj. 47940.5 iterations 10
Cbc0038I Pass 101: suminf.   22.87513 (167) obj. 47940.5 iterations 151
Cbc0038I Pass 102: suminf.   20.33784 (161) obj. 47940.5 iterations 80
Cbc0038I Pass 103: suminf.   19.83882 (162) obj. 47940.5 iterations 28
Cbc0038I Pass 104: suminf.   19.67383 (159) obj. 47940.5 iterations 23
Cbc0038I Pass 105: suminf.   19.66873 (159) obj. 47940.5 iterations 5
Cbc0038I Pass 106: suminf.   19.14013 (163) obj. 47940.5 iterations 247
Cbc0038I Pass 107: suminf.   17.05638 (170) obj. 47940.5 iterations 126
Cbc0038I Pass 108: suminf.   17.06248 (172) obj. 47940.5 iterations 11
Cbc0038I Pass 109: suminf.   17.55783 (156) obj. 47940.5 iterations 112
Cbc0038I Pass 110: suminf.   17.46007 (175) obj. 47940.5 iterations 97
Cbc0038I Pass 111: suminf.   17.46007 (175) obj. 47940.5 iterations 5
Cbc0038I Pass 112: suminf.   20.93678 (156) obj. 47940.5 iterations 169
Cbc0038I Pass 113: suminf.   20.50903 (166) obj. 47940.5 iterations 145
Cbc0038I Pass 114: suminf.   17.76862 (170) obj. 47940.5 iterations 74
Cbc0038I Pass 115: suminf.   17.64737 (167) obj. 47940.5 iterations 61
Cbc0038I Pass 116: suminf.   17.25137 (150) obj. 47940.5 iterations 441
Cbc0038I Pass 117: suminf.   17.40078 (144) obj. 47940.5 iterations 38
Cbc0038I Pass 118: suminf.   17.02281 (154) obj. 47940.5 iterations 32
Cbc0038I Pass 119: suminf.   14.40611 (129) obj. 47940.5 iterations 255
Cbc0038I Pass 120: suminf.   11.82218 (118) obj. 47940.5 iterations 124
Cbc0038I Pass 121: suminf.   14.75308 (131) obj. 47940.5 iterations 379
Cbc0038I Pass 122: suminf.   10.56073 (138) obj. 47940.5 iterations 183
Cbc0038I Pass 123: suminf.   10.42639 (135) obj. 47940.5 iterations 22
Cbc0038I Pass 124: suminf.   10.47637 (123) obj. 47940.5 iterations 302
Cbc0038I Pass 125: suminf.    9.82459 (123) obj. 47940.5 iterations 71
Cbc0038I Pass 126: suminf.   12.07899 (117) obj. 47940.5 iterations 438
Cbc0038I Pass 127: suminf.   10.33162 (117) obj. 47940.5 iterations 133
Cbc0038I Pass 128: suminf.   10.50706 (122) obj. 47940.5 iterations 33
Cbc0038I Pass 129: suminf.   14.87874 (128) obj. 47940.5 iterations 437
Cbc0038I Pass 130: suminf.   14.52532 (140) obj. 47940.5 iterations 48
Cbc0038I Pass 131: suminf.   17.73306 (136) obj. 47940.5 iterations 335
Cbc0038I Pass 132: suminf.   17.85695 (125) obj. 47940.5 iterations 176
Cbc0038I Pass 133: suminf.   14.39855 (124) obj. 47940.5 iterations 190
Cbc0038I Pass 134: suminf.   11.81994 (124) obj. 47940.5 iterations 87
Cbc0038I Pass 135: suminf.   14.80315 (113) obj. 47940.5 iterations 307
Cbc0038I Pass 136: suminf.   12.89467 (116) obj. 47940.5 iterations 104
Cbc0038I Pass 137: suminf.   12.57171 (113) obj. 47940.5 iterations 16
Cbc0038I Pass 138: suminf.   11.98778 (119) obj. 47940.5 iterations 220
Cbc0038I Pass 139: suminf.    9.90904 (115) obj. 47940.5 iterations 136
Cbc0038I Pass 140: suminf.    9.67440 (113) obj. 47940.5 iterations 92
Cbc0038I Pass 141: suminf.   10.96288 (123) obj. 47940.5 iterations 351
Cbc0038I Pass 142: suminf.   10.22034 (101) obj. 47940.5 iterations 105
Cbc0038I Pass 143: suminf.    9.76957 (102) obj. 47940.5 iterations 58
Cbc0038I Pass 144: suminf.   12.71231 (113) obj. 47940.5 iterations 249
Cbc0038I Pass 145: suminf.   11.59399 (106) obj. 47940.5 iterations 117
Cbc0038I Pass 146: suminf.   10.43066 (95) obj. 47940.5 iterations 45
Cbc0038I Pass 147: suminf.    7.87833 (86) obj. 47940.5 iterations 355
Cbc0038I Pass 148: suminf.    6.73302 (89) obj. 47940.5 iterations 29
Cbc0038I Pass 149: suminf.    6.56174 (84) obj. 47940.5 iterations 10
Cbc0038I Pass 150: suminf.    8.42404 (71) obj. 47940.5 iterations 572
Cbc0038I Pass 151: suminf.    8.27633 (74) obj. 47940.5 iterations 13
Cbc0038I Pass 152: suminf.    8.29112 (73) obj. 47940.5 iterations 95
Cbc0038I Pass 153: suminf.    6.14848 (71) obj. 47940.5 iterations 441
Cbc0038I Pass 154: suminf.    5.49160 (62) obj. 47940.5 iterations 79
Cbc0038I Pass 155: suminf.    4.71305 (76) obj. 47940.5 iterations 212
Cbc0038I Pass 156: suminf.    8.10957 (49) obj. 47940.5 iterations 750
Cbc0038I Pass 157: suminf.    6.64967 (39) obj. 47940.5 iterations 69
Cbc0038I Pass 158: suminf.    9.95077 (39) obj. 47940.5 iterations 218
Cbc0038I Pass 159: suminf.    6.76021 (43) obj. 47940.5 iterations 334
Cbc0038I Pass 160: suminf.   11.22243 (54) obj. 47940.5 iterations 462
Cbc0038I Pass 161: suminf.    7.88667 (43) obj. 47940.5 iterations 108
Cbc0038I Pass 162: suminf.    7.83419 (41) obj. 47940.5 iterations 109
Cbc0038I Pass 163: suminf.    4.15604 (44) obj. 47940.5 iterations 393
Cbc0038I Pass 164: suminf.    4.77944 (43) obj. 47940.5 iterations 24
Cbc0038I Pass 165: suminf.   10.85666 (53) obj. 47940.5 iterations 257
Cbc0038I Pass 166: suminf.    6.88018 (41) obj. 47940.5 iterations 301
Cbc0038I Pass 167: suminf.    6.63609 (38) obj. 47940.5 iterations 312
Cbc0038I Pass 168: suminf.    3.98855 (41) obj. 47940.5 iterations 407
Cbc0038I Pass 169: suminf.   15.91344 (76) obj. 47940.5 iterations 305
Cbc0038I Pass 170: suminf.   11.87361 (64) obj. 47940.5 iterations 138
Cbc0038I Pass 171: suminf.   11.87361 (64) obj. 47940.5 iterations 8
Cbc0038I Pass 172: suminf.    8.58046 (54) obj. 47940.5 iterations 171
Cbc0038I Pass 173: suminf.    8.45357 (54) obj. 47940.5 iterations 5
Cbc0038I Pass 174: suminf.    6.70139 (38) obj. 47940.5 iterations 229
Cbc0038I Pass 175: suminf.    7.10533 (37) obj. 47940.5 iterations 83
Cbc0038I Pass 176: suminf.    7.53761 (39) obj. 47940.5 iterations 215
Cbc0038I Pass 177: suminf.   54.29680 (282) obj. 47940.5 iterations 881
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 200 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2512 rows 763 columns - 273 fixed gives 969, 235 - ok now
Cbc0038I Full problem 2994 rows 963 columns, reduced to 190 rows 70 columns
Cbc0038I Mini branch and bound did not improve solution (5.31 seconds)
Cbc0038I After 5.31 seconds - Feasibility pump exiting with objective of 50176 - took 4.89 seconds
Cbc0012I Integer solution of 50176 found by feasibility pump after 0 iterations and 0 nodes (5.31 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2049 rows 568 columns - 233 fixed gives 489, 109 - ok now
Cbc0031I 88 added rows had average density of 13.056818
Cbc0013I At root node, 88 cuts changed objective from 39002.353 to 43021.999 in 23 passes
Cbc0014I Cut generator 0 (Probing) - 69 row cuts average 3.1 elements, 11 column cuts (12 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 642 row cuts average 337.2 elements, 0 column cuts (0 active)  in 0.787 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 956 row cuts average 41.0 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 15 row cuts average 17.4 elements, 0 column cuts (0 active)  in 0.631 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 50176 best solution, best possible 43022 (28.66 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2213 rows 624 columns - 241 fixed gives 662, 133 - ok now
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2101 rows 590 columns - 240 fixed gives 524, 123 - ok now
Cbc0010I After 100 nodes, 4 on tree, 50176 best solution, best possible 43047 (69.85 seconds)
Cbc0010I After 200 nodes, 5 on tree, 50176 best solution, best possible 43049 (110.42 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2041 rows 563 columns - 240 fixed gives 409, 80 - ok now
Cbc0010I After 300 nodes, 5 on tree, 50176 best solution, best possible 43050 (148.79 seconds)
Cbc0010I After 400 nodes, 6 on tree, 50176 best solution, best possible 43050 (186.95 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2222 rows 623 columns - 245 fixed gives 650, 129 - ok now
Cbc0010I After 500 nodes, 7 on tree, 50176 best solution, best possible 43050 (217.55 seconds)
Cbc0010I After 600 nodes, 6 on tree, 50176 best solution, best possible 43050 (248.68 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2072 rows 579 columns - 244 fixed gives 333, 78 - ok now
Cbc0010I After 700 nodes, 9 on tree, 50176 best solution, best possible 43050 (279.74 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2195 rows 616 columns - 240 fixed gives 650, 129 - ok now
Cbc0010I After 800 nodes, 6 on tree, 50176 best solution, best possible 43050 (314.81 seconds)
Cbc0010I After 900 nodes, 8 on tree, 50176 best solution, best possible 43050 (346.56 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2199 rows 616 columns - 240 fixed gives 651, 129 - ok now
Cbc0010I After 1000 nodes, 4 on tree, 50176 best solution, best possible 43050 (377.20 seconds)
Cbc0010I After 1100 nodes, 12 on tree, 50176 best solution, best possible 43050 (405.45 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2084 rows 582 columns - 240 fixed gives 472, 95 - ok now
Cbc0010I After 1200 nodes, 27 on tree, 50176 best solution, best possible 43050 (431.58 seconds)
Cbc0010I After 1300 nodes, 36 on tree, 50176 best solution, best possible 43050 (458.95 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2175 rows 608 columns - 236 fixed gives 650, 129 - ok now
Cbc0010I After 1400 nodes, 47 on tree, 50176 best solution, best possible 43050 (484.80 seconds)
Cbc0010I After 1500 nodes, 59 on tree, 50176 best solution, best possible 43050 (513.78 seconds)
Cbc0010I After 1600 nodes, 71 on tree, 50176 best solution, best possible 43050 (539.45 seconds)
Cbc0010I After 1700 nodes, 82 on tree, 50176 best solution, best possible 43050 (565.01 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2195 rows 613 columns - 242 fixed gives 652, 129 - ok now
Cbc0010I After 1800 nodes, 91 on tree, 50176 best solution, best possible 43050 (590.45 seconds)
Cbc0010I After 1900 nodes, 103 on tree, 50176 best solution, best possible 43050 (616.35 seconds)
Cbc0010I After 2000 nodes, 107 on tree, 50176 best solution, best possible 43050 (644.42 seconds)
Cbc0010I After 2100 nodes, 106 on tree, 50176 best solution, best possible 43050 (673.07 seconds)
Cbc0010I After 2200 nodes, 120 on tree, 50176 best solution, best possible 43050 (703.94 seconds)
Cbc0010I After 2300 nodes, 107 on tree, 50176 best solution, best possible 43050 (739.28 seconds)
Cbc0010I After 2400 nodes, 106 on tree, 50176 best solution, best possible 43050 (774.30 seconds)
Cbc0010I After 2500 nodes, 121 on tree, 50176 best solution, best possible 43050 (807.51 seconds)
Cbc0010I After 2600 nodes, 122 on tree, 50176 best solution, best possible 43050 (845.89 seconds)
Cbc0010I After 2700 nodes, 137 on tree, 50176 best solution, best possible 43050 (877.78 seconds)
Cbc0010I After 2800 nodes, 149 on tree, 50176 best solution, best possible 43050 (909.94 seconds)
Cbc0010I After 2900 nodes, 166 on tree, 50176 best solution, best possible 43050 (939.27 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2214 rows 615 columns - 246 fixed gives 588, 114 - ok now
Cbc0010I After 3000 nodes, 183 on tree, 50176 best solution, best possible 43050 (966.98 seconds)
Cbc0010I After 3100 nodes, 198 on tree, 50176 best solution, best possible 43050 (993.59 seconds)
Cbc0010I After 3200 nodes, 212 on tree, 50176 best solution, best possible 43050 (1022.09 seconds)
Cbc0010I After 3300 nodes, 218 on tree, 50176 best solution, best possible 43050 (1052.53 seconds)
Cbc0010I After 3400 nodes, 244 on tree, 50176 best solution, best possible 43050 (1078.38 seconds)
Cbc0010I After 3500 nodes, 262 on tree, 50176 best solution, best possible 43050 (1106.34 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2190 rows 605 columns - 240 fixed gives 586, 111 - ok now
Cbc0010I After 3600 nodes, 281 on tree, 50176 best solution, best possible 43050 (1134.76 seconds)
Cbc0010I After 3700 nodes, 292 on tree, 50176 best solution, best possible 43050 (1166.04 seconds)
Cbc0010I After 3800 nodes, 294 on tree, 50176 best solution, best possible 43050 (1200.11 seconds)
Cbc0010I After 3900 nodes, 301 on tree, 50176 best solution, best possible 43050 (1231.64 seconds)
Cbc0010I After 4000 nodes, 313 on tree, 50176 best solution, best possible 43050 (1260.90 seconds)
Cbc0010I After 4100 nodes, 324 on tree, 50176 best solution, best possible 43050 (1289.42 seconds)
Cbc0010I After 4200 nodes, 330 on tree, 50176 best solution, best possible 43050 (1321.51 seconds)
Cbc0010I After 4300 nodes, 349 on tree, 50176 best solution, best possible 43050 (1346.98 seconds)
Cbc0010I After 4400 nodes, 363 on tree, 50176 best solution, best possible 43050 (1375.49 seconds)
Cbc0010I After 4500 nodes, 371 on tree, 50176 best solution, best possible 43050 (1400.33 seconds)
Cbc0010I After 4600 nodes, 371 on tree, 50176 best solution, best possible 43050 (1426.98 seconds)
Cbc0010I After 4700 nodes, 372 on tree, 50176 best solution, best possible 43050 (1456.78 seconds)
Cbc0010I After 4800 nodes, 372 on tree, 50176 best solution, best possible 43050 (1482.73 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2164 rows 599 columns - 236 fixed gives 585, 111 - ok now
Cbc0010I After 4900 nodes, 372 on tree, 50176 best solution, best possible 43050 (1506.91 seconds)
Cbc0010I After 5000 nodes, 371 on tree, 50176 best solution, best possible 43050 (1533.20 seconds)
Cbc0010I After 5100 nodes, 370 on tree, 50176 best solution, best possible 43050 (1557.23 seconds)
Cbc0010I After 5200 nodes, 371 on tree, 50176 best solution, best possible 43050 (1583.96 seconds)
Cbc0010I After 5300 nodes, 371 on tree, 50176 best solution, best possible 43050 (1612.12 seconds)
Cbc0010I After 5400 nodes, 370 on tree, 50176 best solution, best possible 43050 (1638.47 seconds)
Cbc0010I After 5500 nodes, 375 on tree, 50176 best solution, best possible 43050 (1664.58 seconds)
Cbc0010I After 5600 nodes, 384 on tree, 50176 best solution, best possible 43050 (1689.16 seconds)
Cbc0010I After 5700 nodes, 383 on tree, 50176 best solution, best possible 43050 (1715.97 seconds)
Cbc0010I After 5800 nodes, 384 on tree, 50176 best solution, best possible 43050 (1742.96 seconds)
Cbc0010I After 5900 nodes, 383 on tree, 50176 best solution, best possible 43050 (1770.96 seconds)
Cbc0038I Full problem 2994 rows 963 columns, reduced to 2136 rows 586 columns - 232 fixed gives 549, 105 - ok now
Cbc0010I After 6000 nodes, 383 on tree, 50176 best solution, best possible 43050 (1799.55 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 50176 (best possible 43050), took 6361124 iterations and 6001 nodes (1799.93 seconds)
Cbc0032I Strong branching done 22158 times (1738043 iterations), fathomed 1006 nodes and fixed 1881 variables
Cbc0035I Maximum depth 1972, 0 variables fixed on reduced cost
Cuts at root node changed objective from 39002.4 to 43022
Probing was tried 5088 times and created 116585 cuts of which 1 were active after adding rounds of cuts (10.202 seconds)
Gomory was tried 4305 times and created 12543 cuts of which 0 were active after adding rounds of cuts (23.662 seconds)
Knapsack was tried 4305 times and created 19935 cuts of which 0 were active after adding rounds of cuts (4.997 seconds)
Clique was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
MixedIntegerRounding2 was tried 23 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 23 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
TwoMirCuts was tried 4305 times and created 66920 cuts of which 0 were active after adding rounds of cuts (7.923 seconds)
ZeroHalf was tried 23 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.631 seconds)
ImplicationCuts was tried 31 times and created 45 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

Objective value:                50176.00000000
Lower bound:                    43050.000
Gap:                            0.17
Enumerated nodes:               6001
Total iterations:               6361124
Time (CPU seconds):             1800.04
Time (Wallclock seconds):       1816.77

Total time (CPU seconds):       1800.05   (Wallclock seconds):       1816.79

