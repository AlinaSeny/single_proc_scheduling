Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_30_default_input.lp sec 1800 solve solu solutions/new_tr/jump_3_30_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 32401.8 - 0.15 seconds
Cgl0002I 304 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 340 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 2124 rows, 682 columns (682 integer (651 of which binary)) and 6993 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 682 objects (682 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 396 integers unsatisfied sum - 99.8015
Cbc0038I Pass   1: suminf.   29.88215 (212) obj. 40124.1 iterations 872
Cbc0038I Pass   2: suminf.   24.28188 (158) obj. 40060.6 iterations 246
Cbc0038I Pass   3: suminf.   24.17355 (169) obj. 40083.9 iterations 6
Cbc0038I Pass   4: suminf.   12.84578 (94) obj. 42828.1 iterations 469
Cbc0038I Pass   5: suminf.   13.13926 (96) obj. 43764.5 iterations 95
Cbc0038I Pass   6: suminf.    6.72081 (64) obj. 44889.8 iterations 249
Cbc0038I Pass   7: suminf.    4.76269 (52) obj. 44951.6 iterations 51
Cbc0038I Pass   8: suminf.    4.13145 (57) obj. 44955.9 iterations 31
Cbc0038I Pass   9: suminf.    0.89830 (17) obj. 48128 iterations 181
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 48128 iterations 16
Cbc0038I Solution found of 48128
Cbc0038I Cleaned solution of 48128
Cbc0038I Before mini branch and bound, 221 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I Round again with cutoff of 46554.5
Cbc0038I Pass  11: suminf.   29.88215 (212) obj. 40124.1 iterations 0
Cbc0038I Pass  12: suminf.   24.28188 (158) obj. 40060.6 iterations 186
Cbc0038I Pass  13: suminf.   24.17355 (169) obj. 40083.9 iterations 3
Cbc0038I Pass  14: suminf.   13.01727 (96) obj. 39994 iterations 390
Cbc0038I Pass  15: suminf.   16.04248 (97) obj. 40236.3 iterations 161
Cbc0038I Pass  16: suminf.   16.82601 (127) obj. 40172.5 iterations 236
Cbc0038I Pass  17: suminf.   11.41400 (84) obj. 44671 iterations 312
Cbc0038I Pass  18: suminf.   11.57830 (86) obj. 44402 iterations 20
Cbc0038I Pass  19: suminf.    6.70549 (59) obj. 46554.5 iterations 121
Cbc0038I Pass  20: suminf.    4.92789 (62) obj. 46554.5 iterations 53
Cbc0038I Pass  21: suminf.    6.16377 (58) obj. 44779.2 iterations 229
Cbc0038I Pass  22: suminf.    6.69640 (50) obj. 46554.5 iterations 182
Cbc0038I Pass  23: suminf.    5.80957 (47) obj. 46554.5 iterations 30
Cbc0038I Pass  24: suminf.    5.72472 (37) obj. 46554.5 iterations 108
Cbc0038I Pass  25: suminf.    4.86056 (28) obj. 46554.5 iterations 7
Cbc0038I Pass  26: suminf.    6.08869 (38) obj. 46554.5 iterations 190
Cbc0038I Pass  27: suminf.    4.61219 (42) obj. 46554.5 iterations 14
Cbc0038I Pass  28: suminf.    7.73206 (40) obj. 43031.8 iterations 191
Cbc0038I Pass  29: suminf.    6.79741 (41) obj. 42277.3 iterations 33
Cbc0038I Pass  30: suminf.    6.01473 (38) obj. 46554.5 iterations 979
Cbc0038I Pass  31: suminf.    4.12888 (34) obj. 46554.5 iterations 62
Cbc0038I Pass  32: suminf.    3.23132 (33) obj. 46554.5 iterations 3
Cbc0038I Pass  33: suminf.    3.73628 (28) obj. 46554.5 iterations 70
Cbc0038I Pass  34: suminf.    3.78091 (28) obj. 46554.5 iterations 35
Cbc0038I Pass  35: suminf.    1.74323 (13) obj. 46554.5 iterations 110
Cbc0038I Pass  36: suminf.    0.47703 (1) obj. 46554.5 iterations 79
Cbc0038I Solution found of 46554.5
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2125 rows 682 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 43008
Cbc0038I Before mini branch and bound, 211 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1623 rows 471 columns - 222 fixed gives 515, 114 - ok now
Cbc0038I Full problem 2124 rows 682 columns, reduced to 127 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (1.00 seconds)
Cbc0038I Round again with cutoff of 40886
Cbc0038I Pass  37: suminf.   29.88215 (212) obj. 40124.1 iterations 0
Cbc0038I Pass  38: suminf.   24.28188 (158) obj. 40060.6 iterations 187
Cbc0038I Pass  39: suminf.   24.17355 (169) obj. 40083.9 iterations 3
Cbc0038I Pass  40: suminf.   17.54861 (157) obj. 40886 iterations 284
Cbc0038I Pass  41: suminf.   16.37367 (143) obj. 39676.1 iterations 146
Cbc0038I Pass  42: suminf.   16.37630 (139) obj. 39659.9 iterations 59
Cbc0038I Pass  43: suminf.   13.77377 (98) obj. 40886 iterations 291
Cbc0038I Pass  44: suminf.   11.05410 (97) obj. 40886 iterations 82
Cbc0038I Pass  45: suminf.   10.52172 (91) obj. 40886 iterations 32
Cbc0038I Pass  46: suminf.    5.94837 (45) obj. 40886 iterations 206
Cbc0038I Pass  47: suminf.    6.20707 (52) obj. 40886 iterations 57
Cbc0038I Pass  48: suminf.    5.27145 (47) obj. 40886 iterations 98
Cbc0038I Pass  49: suminf.    4.22857 (18) obj. 40886 iterations 111
Cbc0038I Pass  50: suminf.    2.98597 (15) obj. 40886 iterations 36
Cbc0038I Pass  51: suminf.    3.59804 (16) obj. 40886 iterations 104
Cbc0038I Pass  52: suminf.    2.11659 (18) obj. 40886 iterations 48
Cbc0038I Pass  53: suminf.    5.93768 (26) obj. 40886 iterations 97
Cbc0038I Pass  54: suminf.    5.03836 (27) obj. 40886 iterations 63
Cbc0038I Pass  55: suminf.    7.75980 (42) obj. 40886 iterations 197
Cbc0038I Pass  56: suminf.    6.06591 (43) obj. 40886 iterations 46
Cbc0038I Pass  57: suminf.    5.14076 (42) obj. 40886 iterations 35
Cbc0038I Pass  58: suminf.    5.70400 (36) obj. 40886 iterations 73
Cbc0038I Pass  59: suminf.    4.67655 (36) obj. 40886 iterations 40
Cbc0038I Pass  60: suminf.    4.06171 (36) obj. 40886 iterations 21
Cbc0038I Pass  61: suminf.    5.46054 (52) obj. 40886 iterations 146
Cbc0038I Pass  62: suminf.    4.03107 (28) obj. 40082.9 iterations 81
Cbc0038I Pass  63: suminf.    6.75470 (33) obj. 40886 iterations 163
Cbc0038I Pass  64: suminf.    3.17136 (29) obj. 40886 iterations 112
Cbc0038I Pass  65: suminf.    7.63909 (38) obj. 40886 iterations 377
Cbc0038I Pass  66: suminf.    7.14731 (39) obj. 39698.6 iterations 76
Cbc0038I Pass  67: suminf.    5.52856 (33) obj. 39742.7 iterations 60
Cbc0038I Pass  68: suminf.    6.47201 (24) obj. 40886 iterations 112
Cbc0038I Pass  69: suminf.    4.03245 (26) obj. 40886 iterations 81
Cbc0038I Pass  70: suminf.    7.46683 (99) obj. 40886 iterations 303
Cbc0038I Pass  71: suminf.    5.05649 (36) obj. 38735.2 iterations 72
Cbc0038I Pass  72: suminf.    5.85910 (27) obj. 40886 iterations 79
Cbc0038I Pass  73: suminf.    2.31138 (22) obj. 40886 iterations 73
Cbc0038I Pass  74: suminf.    4.59429 (24) obj. 40886 iterations 112
Cbc0038I Pass  75: suminf.    4.87155 (28) obj. 40886 iterations 52
Cbc0038I Pass  76: suminf.    8.32527 (95) obj. 40886 iterations 225
Cbc0038I Pass  77: suminf.    8.28781 (40) obj. 40886 iterations 42
Cbc0038I Pass  78: suminf.    5.30868 (30) obj. 40886 iterations 94
Cbc0038I Pass  79: suminf.    2.87355 (19) obj. 40886 iterations 62
Cbc0038I Pass  80: suminf.    2.57555 (19) obj. 40886 iterations 26
Cbc0038I Pass  81: suminf.    3.89403 (20) obj. 40886 iterations 51
Cbc0038I Pass  82: suminf.    3.12804 (24) obj. 39439.7 iterations 43
Cbc0038I Pass  83: suminf.    6.64859 (61) obj. 40886 iterations 133
Cbc0038I Pass  84: suminf.    6.11328 (32) obj. 40886 iterations 37
Cbc0038I Pass  85: suminf.    7.37620 (40) obj. 40886 iterations 253
Cbc0038I Pass  86: suminf.    6.74212 (36) obj. 40886 iterations 98
Cbc0038I Pass  87: suminf.    6.04616 (38) obj. 40886 iterations 282
Cbc0038I Pass  88: suminf.    5.67491 (61) obj. 40886 iterations 65
Cbc0038I Pass  89: suminf.    5.08700 (55) obj. 40886 iterations 39
Cbc0038I Pass  90: suminf.    6.55408 (62) obj. 40886 iterations 259
Cbc0038I Pass  91: suminf.    7.64049 (84) obj. 40886 iterations 90
Cbc0038I Pass  92: suminf.    6.64212 (71) obj. 40886 iterations 151
Cbc0038I Pass  93: suminf.    3.53686 (44) obj. 40886 iterations 110
Cbc0038I Pass  94: suminf.    5.30398 (42) obj. 40886 iterations 93
Cbc0038I Pass  95: suminf.    4.56754 (44) obj. 39335.9 iterations 91
Cbc0038I Pass  96: suminf.    6.62060 (43) obj. 40886 iterations 174
Cbc0038I Pass  97: suminf.    2.68194 (41) obj. 40886 iterations 61
Cbc0038I Pass  98: suminf.    2.57659 (37) obj. 40886 iterations 14
Cbc0038I Pass  99: suminf.    4.71158 (17) obj. 40886 iterations 110
Cbc0038I Pass 100: suminf.    3.65189 (22) obj. 40886 iterations 41
Cbc0038I Pass 101: suminf.    3.65189 (22) obj. 40886 iterations 15
Cbc0038I Pass 102: suminf.    6.90741 (40) obj. 40886 iterations 313
Cbc0038I Pass 103: suminf.    5.67958 (36) obj. 39367.1 iterations 43
Cbc0038I Pass 104: suminf.    3.20098 (31) obj. 39284.4 iterations 68
Cbc0038I Pass 105: suminf.    2.68776 (32) obj. 39284.4 iterations 72
Cbc0038I Pass 106: suminf.    5.59828 (36) obj. 40886 iterations 90
Cbc0038I Pass 107: suminf.    3.82935 (34) obj. 40886 iterations 44
Cbc0038I Pass 108: suminf.    5.66119 (39) obj. 40886 iterations 393
Cbc0038I Pass 109: suminf.    3.15232 (33) obj. 39284.4 iterations 56
Cbc0038I Pass 110: suminf.    2.68776 (32) obj. 39284.4 iterations 35
Cbc0038I Pass 111: suminf.    9.12342 (42) obj. 40886 iterations 241
Cbc0038I Pass 112: suminf.    6.03073 (35) obj. 40886 iterations 69
Cbc0038I Pass 113: suminf.    5.37284 (39) obj. 40886 iterations 23
Cbc0038I Pass 114: suminf.    8.47088 (41) obj. 40886 iterations 166
Cbc0038I Pass 115: suminf.    3.58630 (38) obj. 40272.5 iterations 120
Cbc0038I Pass 116: suminf.    8.11690 (41) obj. 40886 iterations 253
Cbc0038I Pass 117: suminf.    2.89799 (20) obj. 40886 iterations 110
Cbc0038I Pass 118: suminf.    5.90177 (22) obj. 40886 iterations 154
Cbc0038I Pass 119: suminf.    4.78678 (23) obj. 40886 iterations 54
Cbc0038I Pass 120: suminf.    4.49036 (26) obj. 40886 iterations 182
Cbc0038I Pass 121: suminf.    2.87493 (28) obj. 39519.4 iterations 164
Cbc0038I Pass 122: suminf.    5.94016 (29) obj. 40886 iterations 125
Cbc0038I Pass 123: suminf.    4.83423 (30) obj. 40886 iterations 26
Cbc0038I Pass 124: suminf.    4.37460 (29) obj. 40886 iterations 92
Cbc0038I Pass 125: suminf.    3.03743 (26) obj. 40886 iterations 52
Cbc0038I Pass 126: suminf.    4.45362 (22) obj. 40886 iterations 55
Cbc0038I Pass 127: suminf.    3.15109 (25) obj. 40886 iterations 56
Cbc0038I Pass 128: suminf.    5.24373 (25) obj. 40886 iterations 138
Cbc0038I Pass 129: suminf.    2.31843 (25) obj. 40886 iterations 73
Cbc0038I Pass 130: suminf.    5.00715 (28) obj. 40886 iterations 95
Cbc0038I Pass 131: suminf.    3.55268 (29) obj. 40886 iterations 24
Cbc0038I Pass 132: suminf.    6.59366 (31) obj. 40886 iterations 158
Cbc0038I Pass 133: suminf.    4.48528 (31) obj. 40886 iterations 40
Cbc0038I Pass 134: suminf.    4.38067 (31) obj. 40886 iterations 27
Cbc0038I Pass 135: suminf.    5.30544 (25) obj. 40886 iterations 76
Cbc0038I Pass 136: suminf.   47.06479 (215) obj. 40886 iterations 604
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 155 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1753 rows 527 columns - 238 fixed gives 547, 125 - ok now
Cbc0038I Mini branch and bound did not improve solution (2.15 seconds)
Cbc0038I After 2.15 seconds - Feasibility pump exiting with objective of 43008 - took 1.88 seconds
Cbc0012I Integer solution of 43008 found by feasibility pump after 0 iterations and 0 nodes (2.15 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1498 rows 414 columns - 219 fixed gives 186, 40 - ok now
Cbc0031I 35 added rows had average density of 35
Cbc0013I At root node, 35 cuts changed objective from 32401.769 to 36804.193 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 136 row cuts average 3.6 elements, 9 column cuts (9 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 494 row cuts average 290.1 elements, 0 column cuts (0 active)  in 0.293 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 386 row cuts average 42.1 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 43008 best solution, best possible 36804.193 (7.86 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1584 rows 455 columns - 216 fixed gives 236, 59 - ok now
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1511 rows 431 columns - 209 fixed gives 236, 59 - ok now
Cbc0010I After 100 nodes, 2 on tree, 43008 best solution, best possible 36853 (28.22 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1564 rows 446 columns - 220 fixed gives 262, 64 - ok now
Cbc0010I After 200 nodes, 3 on tree, 43008 best solution, best possible 36853 (43.55 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1560 rows 444 columns - 223 fixed gives 160, 39 - ok now
Cbc0010I After 300 nodes, 3 on tree, 43008 best solution, best possible 36853 (52.77 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1552 rows 442 columns - 221 fixed gives 160, 39 - ok now
Cbc0010I After 400 nodes, 3 on tree, 43008 best solution, best possible 36853 (61.43 seconds)
Cbc0010I After 500 nodes, 3 on tree, 43008 best solution, best possible 36853 (70.67 seconds)
Cbc0010I After 600 nodes, 4 on tree, 43008 best solution, best possible 36853 (79.47 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1535 rows 437 columns - 218 fixed gives 160, 39 - ok now
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1548 rows 441 columns - 221 fixed gives 160, 39 - ok now
Cbc0010I After 700 nodes, 3 on tree, 43008 best solution, best possible 36853 (89.37 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1540 rows 439 columns - 219 fixed gives 160, 39 - ok now
Cbc0010I After 800 nodes, 3 on tree, 43008 best solution, best possible 36853 (98.88 seconds)
Cbc0010I After 900 nodes, 4 on tree, 43008 best solution, best possible 36853 (108.17 seconds)
Cbc0010I After 1000 nodes, 4 on tree, 43008 best solution, best possible 36853 (117.95 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1544 rows 441 columns - 220 fixed gives 160, 39 - ok now
Cbc0010I After 1100 nodes, 8 on tree, 43008 best solution, best possible 36853 (130.13 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1564 rows 441 columns - 224 fixed gives 239, 59 - ok now
Cbc0010I After 1200 nodes, 15 on tree, 43008 best solution, best possible 36853 (139.76 seconds)
Cbc0010I After 1300 nodes, 21 on tree, 43008 best solution, best possible 36853 (149.55 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 43008 best solution, best possible 36853 (158.49 seconds)
Cbc0010I After 1500 nodes, 33 on tree, 43008 best solution, best possible 36853 (167.74 seconds)
Cbc0010I After 1600 nodes, 34 on tree, 43008 best solution, best possible 36853 (178.10 seconds)
Cbc0010I After 1700 nodes, 42 on tree, 43008 best solution, best possible 36853 (188.02 seconds)
Cbc0010I After 1800 nodes, 48 on tree, 43008 best solution, best possible 36853 (198.86 seconds)
Cbc0010I After 1900 nodes, 49 on tree, 43008 best solution, best possible 36853 (209.97 seconds)
Cbc0010I After 2000 nodes, 50 on tree, 43008 best solution, best possible 36853 (221.74 seconds)
Cbc0010I After 2100 nodes, 52 on tree, 43008 best solution, best possible 36853 (236.60 seconds)
Cbc0010I After 2200 nodes, 63 on tree, 43008 best solution, best possible 36853 (250.17 seconds)
Cbc0010I After 2300 nodes, 67 on tree, 43008 best solution, best possible 36853 (265.83 seconds)
Cbc0010I After 2400 nodes, 70 on tree, 43008 best solution, best possible 36853 (285.03 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1522 rows 428 columns - 213 fixed gives 256, 61 - ok now
Cbc0010I After 2500 nodes, 75 on tree, 43008 best solution, best possible 36853 (302.70 seconds)
Cbc0010I After 2600 nodes, 79 on tree, 43008 best solution, best possible 36853 (319.22 seconds)
Cbc0010I After 2700 nodes, 81 on tree, 43008 best solution, best possible 36853 (338.14 seconds)
Cbc0010I After 2800 nodes, 87 on tree, 43008 best solution, best possible 36853 (356.96 seconds)
Cbc0010I After 2900 nodes, 92 on tree, 43008 best solution, best possible 36853 (376.31 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1526 rows 429 columns - 216 fixed gives 256, 61 - ok now
Cbc0010I After 3000 nodes, 99 on tree, 43008 best solution, best possible 36853 (395.48 seconds)
Cbc0010I After 3100 nodes, 104 on tree, 43008 best solution, best possible 36853 (415.24 seconds)
Cbc0010I After 3200 nodes, 107 on tree, 43008 best solution, best possible 36853 (437.79 seconds)
Cbc0010I After 3300 nodes, 108 on tree, 43008 best solution, best possible 36853 (459.38 seconds)
Cbc0010I After 3400 nodes, 112 on tree, 43008 best solution, best possible 36853 (479.46 seconds)
Cbc0010I After 3500 nodes, 115 on tree, 43008 best solution, best possible 36853 (501.41 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1526 rows 429 columns - 216 fixed gives 256, 61 - ok now
Cbc0010I After 3600 nodes, 119 on tree, 43008 best solution, best possible 36853 (521.39 seconds)
Cbc0010I After 3700 nodes, 120 on tree, 43008 best solution, best possible 36853 (544.02 seconds)
Cbc0010I After 3800 nodes, 125 on tree, 43008 best solution, best possible 36853 (564.96 seconds)
Cbc0010I After 3900 nodes, 126 on tree, 43008 best solution, best possible 36853 (586.38 seconds)
Cbc0010I After 4000 nodes, 129 on tree, 43008 best solution, best possible 36853 (606.89 seconds)
Cbc0010I After 4100 nodes, 133 on tree, 43008 best solution, best possible 36853 (627.32 seconds)
Cbc0010I After 4200 nodes, 134 on tree, 43008 best solution, best possible 36853 (649.63 seconds)
Cbc0010I After 4300 nodes, 135 on tree, 43008 best solution, best possible 36853 (671.46 seconds)
Cbc0010I After 4400 nodes, 139 on tree, 43008 best solution, best possible 36853 (690.94 seconds)
Cbc0010I After 4500 nodes, 141 on tree, 43008 best solution, best possible 36853 (709.62 seconds)
Cbc0010I After 4600 nodes, 143 on tree, 43008 best solution, best possible 36853 (727.31 seconds)
Cbc0010I After 4700 nodes, 144 on tree, 43008 best solution, best possible 36853 (746.58 seconds)
Cbc0010I After 4800 nodes, 148 on tree, 43008 best solution, best possible 36853 (764.81 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1490 rows 418 columns - 209 fixed gives 257, 61 - ok now
Cbc0010I After 4900 nodes, 155 on tree, 43008 best solution, best possible 36853 (784.35 seconds)
Cbc0010I After 5000 nodes, 151 on tree, 43008 best solution, best possible 36853 (804.75 seconds)
Cbc0010I After 5100 nodes, 150 on tree, 43008 best solution, best possible 36853 (824.28 seconds)
Cbc0010I After 5200 nodes, 154 on tree, 43008 best solution, best possible 36853 (836.73 seconds)
Cbc0010I After 5300 nodes, 154 on tree, 43008 best solution, best possible 36853 (848.25 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1431 rows 391 columns - 203 fixed gives 141, 39 - ok now
Cbc0010I After 5400 nodes, 155 on tree, 43008 best solution, best possible 36853 (860.60 seconds)
Cbc0010I After 5500 nodes, 152 on tree, 43008 best solution, best possible 36853 (874.90 seconds)
Cbc0010I After 5600 nodes, 160 on tree, 43008 best solution, best possible 36853 (885.78 seconds)
Cbc0010I After 5700 nodes, 159 on tree, 43008 best solution, best possible 36853 (898.94 seconds)
Cbc0010I After 5800 nodes, 156 on tree, 43008 best solution, best possible 36853 (912.71 seconds)
Cbc0010I After 5900 nodes, 153 on tree, 43008 best solution, best possible 36853 (923.80 seconds)
Cbc0010I After 6000 nodes, 160 on tree, 43008 best solution, best possible 36853 (935.07 seconds)
Cbc0010I After 6100 nodes, 157 on tree, 43008 best solution, best possible 36853 (946.40 seconds)
Cbc0010I After 6200 nodes, 161 on tree, 43008 best solution, best possible 36853 (958.54 seconds)
Cbc0010I After 6300 nodes, 156 on tree, 43008 best solution, best possible 36853 (972.05 seconds)
Cbc0010I After 6400 nodes, 160 on tree, 43008 best solution, best possible 36853 (983.88 seconds)
Cbc0010I After 6500 nodes, 160 on tree, 43008 best solution, best possible 36853 (996.05 seconds)
Cbc0010I After 6600 nodes, 162 on tree, 43008 best solution, best possible 36853 (1008.31 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1523 rows 426 columns - 216 fixed gives 166, 44 - ok now
Cbc0010I After 6700 nodes, 159 on tree, 43008 best solution, best possible 36853 (1021.35 seconds)
Cbc0010I After 6800 nodes, 162 on tree, 43008 best solution, best possible 36853 (1032.42 seconds)
Cbc0010I After 6900 nodes, 161 on tree, 43008 best solution, best possible 36853 (1046.08 seconds)
Cbc0010I After 7000 nodes, 166 on tree, 43008 best solution, best possible 36853 (1057.31 seconds)
Cbc0010I After 7100 nodes, 167 on tree, 43008 best solution, best possible 36853 (1070.65 seconds)
Cbc0010I After 7200 nodes, 172 on tree, 43008 best solution, best possible 36853 (1083.50 seconds)
Cbc0010I After 7300 nodes, 161 on tree, 43008 best solution, best possible 36853 (1096.63 seconds)
Cbc0010I After 7400 nodes, 166 on tree, 43008 best solution, best possible 36853 (1107.40 seconds)
Cbc0010I After 7500 nodes, 174 on tree, 43008 best solution, best possible 36853 (1118.16 seconds)
Cbc0010I After 7600 nodes, 164 on tree, 43008 best solution, best possible 36853 (1131.95 seconds)
Cbc0010I After 7700 nodes, 174 on tree, 43008 best solution, best possible 36853 (1143.89 seconds)
Cbc0010I After 7800 nodes, 164 on tree, 43008 best solution, best possible 36853 (1154.50 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1462 rows 407 columns - 207 fixed gives 225, 54 - ok now
Cbc0010I After 7900 nodes, 178 on tree, 43008 best solution, best possible 36853 (1165.50 seconds)
Cbc0010I After 8000 nodes, 175 on tree, 43008 best solution, best possible 36853 (1176.87 seconds)
Cbc0010I After 8100 nodes, 176 on tree, 43008 best solution, best possible 36853 (1185.28 seconds)
Cbc0010I After 8200 nodes, 177 on tree, 43008 best solution, best possible 36853 (1192.83 seconds)
Cbc0010I After 8300 nodes, 182 on tree, 43008 best solution, best possible 36853 (1202.46 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1476 rows 403 columns - 219 fixed gives 75, 20 - ok now
Cbc0010I After 8400 nodes, 163 on tree, 43008 best solution, best possible 36853 (1213.48 seconds)
Cbc0010I After 8500 nodes, 169 on tree, 43008 best solution, best possible 36853 (1224.70 seconds)
Cbc0010I After 8600 nodes, 178 on tree, 43008 best solution, best possible 36853 (1237.65 seconds)
Cbc0010I After 8700 nodes, 182 on tree, 43008 best solution, best possible 36853 (1248.08 seconds)
Cbc0010I After 8800 nodes, 162 on tree, 43008 best solution, best possible 36853 (1261.09 seconds)
Cbc0010I After 8900 nodes, 164 on tree, 43008 best solution, best possible 36853 (1273.64 seconds)
Cbc0010I After 9000 nodes, 170 on tree, 43008 best solution, best possible 36853 (1285.03 seconds)
Cbc0010I After 9100 nodes, 165 on tree, 43008 best solution, best possible 36853 (1299.25 seconds)
Cbc0010I After 9200 nodes, 179 on tree, 43008 best solution, best possible 36853 (1310.21 seconds)
Cbc0010I After 9300 nodes, 166 on tree, 43008 best solution, best possible 36853 (1320.76 seconds)
Cbc0010I After 9400 nodes, 179 on tree, 43008 best solution, best possible 36853 (1330.02 seconds)
Cbc0010I After 9500 nodes, 163 on tree, 43008 best solution, best possible 36853 (1341.00 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1489 rows 410 columns - 218 fixed gives 168, 41 - ok now
Cbc0010I After 9600 nodes, 165 on tree, 43008 best solution, best possible 36853 (1351.03 seconds)
Cbc0010I After 9700 nodes, 164 on tree, 43008 best solution, best possible 36853 (1361.05 seconds)
Cbc0010I After 9800 nodes, 170 on tree, 43008 best solution, best possible 36853 (1370.98 seconds)
Cbc0010I After 9900 nodes, 168 on tree, 43008 best solution, best possible 36853 (1383.09 seconds)
Cbc0010I After 10000 nodes, 177 on tree, 43008 best solution, best possible 36853 (1397.67 seconds)
Cbc0010I After 10100 nodes, 164 on tree, 43008 best solution, best possible 36853 (1411.78 seconds)
Cbc0010I After 10200 nodes, 162 on tree, 43008 best solution, best possible 36853 (1422.83 seconds)
Cbc0010I After 10300 nodes, 163 on tree, 43008 best solution, best possible 36853 (1436.14 seconds)
Cbc0010I After 10400 nodes, 166 on tree, 43008 best solution, best possible 36853 (1447.96 seconds)
Cbc0010I After 10500 nodes, 163 on tree, 43008 best solution, best possible 36853 (1459.39 seconds)
Cbc0010I After 10600 nodes, 167 on tree, 43008 best solution, best possible 36853 (1471.27 seconds)
Cbc0010I After 10700 nodes, 166 on tree, 43008 best solution, best possible 36853 (1485.15 seconds)
Cbc0038I Full problem 2124 rows 682 columns, reduced to 1501 rows 413 columns - 221 fixed gives 127, 34 - ok now
Cbc0010I After 10800 nodes, 169 on tree, 43008 best solution, best possible 36853 (1496.57 seconds)
Cbc0010I After 10900 nodes, 174 on tree, 43008 best solution, best possible 36853 (1507.98 seconds)
Cbc0010I After 11000 nodes, 169 on tree, 43008 best solution, best possible 36853 (1521.03 seconds)
Cbc0010I After 11100 nodes, 73 on tree, 43008 best solution, best possible 38387 (1546.59 seconds)
Cbc0010I After 11200 nodes, 36 on tree, 43008 best solution, best possible 38757 (1567.38 seconds)
Cbc0010I After 11300 nodes, 21 on tree, 43008 best solution, best possible 38965 (1583.14 seconds)
Cbc0010I After 11400 nodes, 14 on tree, 43008 best solution, best possible 39041 (1595.48 seconds)
Cbc0010I After 11500 nodes, 8 on tree, 43008 best solution, best possible 39111 (1609.61 seconds)
Cbc0010I After 11600 nodes, 6 on tree, 43008 best solution, best possible 39126 (1621.05 seconds)
Cbc0010I After 11700 nodes, 4 on tree, 43008 best solution, best possible 39132 (1632.80 seconds)
Cbc0010I After 11800 nodes, 4 on tree, 43008 best solution, best possible 39137 (1644.77 seconds)
Cbc0010I After 11900 nodes, 4 on tree, 43008 best solution, best possible 39144 (1657.84 seconds)
Cbc0010I After 12000 nodes, 4 on tree, 43008 best solution, best possible 39150 (1671.21 seconds)
Cbc0010I After 12100 nodes, 1 on tree, 43008 best solution, best possible 39156 (1682.21 seconds)
Cbc0010I After 12200 nodes, 3 on tree, 43008 best solution, best possible 39161 (1694.60 seconds)
Cbc0010I After 12300 nodes, 3 on tree, 43008 best solution, best possible 39167 (1706.39 seconds)
Cbc0010I After 12400 nodes, 4 on tree, 43008 best solution, best possible 39172 (1719.13 seconds)
Cbc0010I After 12500 nodes, 4 on tree, 43008 best solution, best possible 39178 (1731.34 seconds)
Cbc0010I After 12600 nodes, 2 on tree, 43008 best solution, best possible 39184 (1744.74 seconds)
Cbc0010I After 12700 nodes, 1 on tree, 43008 best solution, best possible 39190 (1757.05 seconds)
Cbc0010I After 12800 nodes, 6 on tree, 43008 best solution, best possible 39195 (1769.43 seconds)
Cbc0010I After 12900 nodes, 2 on tree, 43008 best solution, best possible 39201 (1782.49 seconds)
Cbc0010I After 13000 nodes, 6 on tree, 43008 best solution, best possible 39207 (1796.00 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 43008 (best possible 39207), took 10532645 iterations and 13030 nodes (1799.92 seconds)
Cbc0032I Strong branching done 17460 times (1358421 iterations), fathomed 405 nodes and fixed 907 variables
Cbc0035I Maximum depth 2357, 0 variables fixed on reduced cost
Cuts at root node changed objective from 32401.8 to 36804.2
Probing was tried 10068 times and created 393158 cuts of which 0 were active after adding rounds of cuts (26.223 seconds)
Gomory was tried 7745 times and created 8660 cuts of which 0 were active after adding rounds of cuts (21.625 seconds)
Knapsack was tried 7745 times and created 22610 cuts of which 0 were active after adding rounds of cuts (6.815 seconds)
Clique was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
MixedIntegerRounding2 was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.017 seconds)
FlowCover was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
TwoMirCuts was tried 7745 times and created 82513 cuts of which 0 were active after adding rounds of cuts (8.580 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
ImplicationCuts was tried 21 times and created 82 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

Objective value:                43008.00000000
Lower bound:                    39207.000
Gap:                            0.10
Enumerated nodes:               13030
Total iterations:               10532645
Time (CPU seconds):             1800.00
Time (Wallclock seconds):       1808.74

Total time (CPU seconds):       1800.01   (Wallclock seconds):       1808.76

