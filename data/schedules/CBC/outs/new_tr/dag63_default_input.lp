Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/dag63_default_input.lp sec 1800 solve solu solutions/new_tr/dag63_default_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.1305e+06 - 0.05 seconds
Cgl0002I 817 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 461 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0004I processed model has 2484 rows, 800 columns (800 integer (764 of which binary)) and 8163 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 800 objects (800 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 317 integers unsatisfied sum - 74.3859
Cbc0038I Pass   1: suminf.   30.56237 (236) obj. 1.23705e+06 iterations 739
Cbc0038I Pass   2: suminf.   26.27819 (211) obj. 1.24125e+06 iterations 224
Cbc0038I Pass   3: suminf.   23.23950 (192) obj. 1.24118e+06 iterations 138
Cbc0038I Pass   4: suminf.   15.53614 (148) obj. 1.25513e+06 iterations 312
Cbc0038I Pass   5: suminf.   14.67742 (147) obj. 1.26703e+06 iterations 63
Cbc0038I Pass   6: suminf.   11.71854 (127) obj. 1.3967e+06 iterations 131
Cbc0038I Pass   7: suminf.   11.47079 (126) obj. 1.39672e+06 iterations 11
Cbc0038I Pass   8: suminf.    3.82322 (63) obj. 1.44916e+06 iterations 278
Cbc0038I Pass   9: suminf.    3.15844 (51) obj. 1.44916e+06 iterations 27
Cbc0038I Pass  10: suminf.    0.00000 (0) obj. 1.2288e+06 iterations 385
Cbc0038I Solution found of 1.2288e+06
Cbc0038I Cleaned solution of 1.2288e+06
Cbc0038I Before mini branch and bound, 381 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I Round again with cutoff of 1.21897e+06
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass  11: suminf.   29.05396 (235) obj. 1.21897e+06 iterations 37
Cbc0038I Pass  12: suminf.   25.95796 (210) obj. 1.21897e+06 iterations 237
Cbc0038I Pass  13: suminf.   22.82799 (198) obj. 1.21897e+06 iterations 175
Cbc0038I Pass  14: suminf.   19.52034 (163) obj. 1.21897e+06 iterations 193
Cbc0038I Pass  15: suminf.   16.55466 (172) obj. 1.21897e+06 iterations 50
Cbc0038I Pass  16: suminf.   17.05268 (171) obj. 1.21897e+06 iterations 7
Cbc0038I Pass  17: suminf.   17.30402 (126) obj. 1.21897e+06 iterations 145
Cbc0038I Pass  18: suminf.   14.70146 (135) obj. 1.21897e+06 iterations 151
Cbc0038I Pass  19: suminf.   14.58662 (133) obj. 1.21897e+06 iterations 25
Cbc0038I Pass  20: suminf.    9.29705 (109) obj. 1.21897e+06 iterations 371
Cbc0038I Pass  21: suminf.    4.75919 (56) obj. 1.21897e+06 iterations 315
Cbc0038I Pass  22: suminf.    7.71208 (27) obj. 1.21897e+06 iterations 223
Cbc0038I Pass  23: suminf.    2.00709 (32) obj. 1.21897e+06 iterations 107
Cbc0038I Pass  24: suminf.    2.09966 (50) obj. 1.21897e+06 iterations 106
Cbc0038I Pass  25: suminf.    8.22026 (33) obj. 1.21897e+06 iterations 105
Cbc0038I Pass  26: suminf.    8.22026 (33) obj. 1.21897e+06 iterations 5
Cbc0038I Pass  27: suminf.    2.79184 (50) obj. 1.21897e+06 iterations 175
Cbc0038I Pass  28: suminf.    1.35606 (42) obj. 1.21897e+06 iterations 8
Cbc0038I Pass  29: suminf.    5.31198 (27) obj. 1.21897e+06 iterations 118
Cbc0038I Pass  30: suminf.    2.13210 (44) obj. 1.21897e+06 iterations 159
Cbc0038I Pass  31: suminf.    0.71156 (20) obj. 1.21897e+06 iterations 21
Cbc0038I Pass  32: suminf.    4.49478 (20) obj. 1.21897e+06 iterations 124
Cbc0038I Pass  33: suminf.    4.49765 (24) obj. 1.21897e+06 iterations 11
Cbc0038I Pass  34: suminf.    1.51950 (22) obj. 1.21897e+06 iterations 172
Cbc0038I Pass  35: suminf.    1.51950 (22) obj. 1.21897e+06 iterations 5
Cbc0038I Pass  36: suminf.    2.44717 (45) obj. 1.21897e+06 iterations 292
Cbc0038I Pass  37: suminf.    2.36687 (50) obj. 1.21897e+06 iterations 18
Cbc0038I Pass  38: suminf.    2.26723 (55) obj. 1.21897e+06 iterations 230
Cbc0038I Pass  39: suminf.    6.21064 (67) obj. 1.21897e+06 iterations 196
Cbc0038I Pass  40: suminf.    4.80761 (56) obj. 1.21897e+06 iterations 26
Cbc0038I Pass  41: suminf.    7.59945 (46) obj. 1.21897e+06 iterations 246
Cbc0038I Pass  42: suminf.    3.17599 (41) obj. 1.21897e+06 iterations 64
Cbc0038I Pass  43: suminf.    1.83429 (32) obj. 1.21897e+06 iterations 6
Cbc0038I Pass  44: suminf.    3.12003 (34) obj. 1.21897e+06 iterations 51
Cbc0038I Pass  45: suminf.    0.65258 (13) obj. 1.21897e+06 iterations 26
Cbc0038I Pass  46: suminf.    1.04798 (13) obj. 1.21897e+06 iterations 26
Cbc0038I Pass  47: suminf.   39.51409 (216) obj. 1.21897e+06 iterations 817
Cbc0038I Pass  48: suminf.   26.88252 (160) obj. 1.21897e+06 iterations 371
Cbc0038I Pass  49: suminf.   24.60155 (151) obj. 1.21897e+06 iterations 94
Cbc0038I Pass  50: suminf.   24.32636 (158) obj. 1.21897e+06 iterations 37
Cbc0038I Pass  51: suminf.   12.28180 (124) obj. 1.21897e+06 iterations 249
Cbc0038I Pass  52: suminf.   11.61448 (127) obj. 1.21897e+06 iterations 57
Cbc0038I Pass  53: suminf.   10.62065 (127) obj. 1.21897e+06 iterations 27
Cbc0038I Pass  54: suminf.    8.45995 (107) obj. 1.21897e+06 iterations 167
Cbc0038I Pass  55: suminf.    8.11692 (104) obj. 1.21897e+06 iterations 17
Cbc0038I Pass  56: suminf.    1.98186 (71) obj. 1.21897e+06 iterations 142
Cbc0038I Pass  57: suminf.    1.30136 (48) obj. 1.21897e+06 iterations 50
Cbc0038I Pass  58: suminf.    6.36983 (47) obj. 1.21897e+06 iterations 159
Cbc0038I Pass  59: suminf.    5.58426 (40) obj. 1.21897e+06 iterations 139
Cbc0038I Pass  60: suminf.    3.94800 (49) obj. 1.21897e+06 iterations 164
Cbc0038I Pass  61: suminf.    3.81422 (22) obj. 1.21897e+06 iterations 150
Cbc0038I Pass  62: suminf.    2.68836 (38) obj. 1.21897e+06 iterations 86
Cbc0038I Pass  63: suminf.    7.13378 (40) obj. 1.21897e+06 iterations 108
Cbc0038I Pass  64: suminf.    4.64691 (31) obj. 1.21897e+06 iterations 725
Cbc0038I Pass  65: suminf.    4.27354 (38) obj. 1.21897e+06 iterations 32
Cbc0038I Pass  66: suminf.    1.94375 (12) obj. 1.21897e+06 iterations 86
Cbc0038I Pass  67: suminf.    0.29991 (1) obj. 1.21897e+06 iterations 12
Cbc0038I Solution found of 1.21897e+06
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2485 rows 800 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 1.21242e+06
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1829 rows 542 columns - 181 fixed gives 588, 171 - ok now
Cbc0038I Full problem 2484 rows 800 columns, reduced to 48 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (1.34 seconds)
Cbc0038I Round again with cutoff of 1.19603e+06
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  68: suminf.   32.68904 (263) obj. 1.19603e+06 iterations 110
Cbc0038I Pass  69: suminf.   27.57519 (237) obj. 1.19603e+06 iterations 202
Cbc0038I Pass  70: suminf.   24.46672 (220) obj. 1.19603e+06 iterations 121
Cbc0038I Pass  71: suminf.   21.53108 (166) obj. 1.19603e+06 iterations 244
Cbc0038I Pass  72: suminf.   16.60147 (162) obj. 1.19603e+06 iterations 88
Cbc0038I Pass  73: suminf.   16.64936 (170) obj. 1.19603e+06 iterations 15
Cbc0038I Pass  74: suminf.   12.87657 (138) obj. 1.19603e+06 iterations 420
Cbc0038I Pass  75: suminf.   11.74532 (137) obj. 1.19603e+06 iterations 52
Cbc0038I Pass  76: suminf.   11.56033 (109) obj. 1.19603e+06 iterations 194
Cbc0038I Pass  77: suminf.    8.70243 (102) obj. 1.19603e+06 iterations 75
Cbc0038I Pass  78: suminf.    4.69912 (82) obj. 1.19603e+06 iterations 37
Cbc0038I Pass  79: suminf.   10.71208 (109) obj. 1.19603e+06 iterations 344
Cbc0038I Pass  80: suminf.   10.30054 (105) obj. 1.19603e+06 iterations 48
Cbc0038I Pass  81: suminf.    6.32080 (80) obj. 1.19603e+06 iterations 236
Cbc0038I Pass  82: suminf.    4.71983 (91) obj. 1.19603e+06 iterations 76
Cbc0038I Pass  83: suminf.    6.76893 (70) obj. 1.19603e+06 iterations 258
Cbc0038I Pass  84: suminf.    6.58607 (73) obj. 1.19603e+06 iterations 33
Cbc0038I Pass  85: suminf.    8.48779 (73) obj. 1.19603e+06 iterations 196
Cbc0038I Pass  86: suminf.    5.27327 (80) obj. 1.19603e+06 iterations 152
Cbc0038I Pass  87: suminf.    8.76633 (103) obj. 1.19603e+06 iterations 360
Cbc0038I Pass  88: suminf.    7.36077 (79) obj. 1.19603e+06 iterations 54
Cbc0038I Pass  89: suminf.    6.61079 (57) obj. 1.19603e+06 iterations 169
Cbc0038I Pass  90: suminf.    4.76138 (79) obj. 1.19603e+06 iterations 62
Cbc0038I Pass  91: suminf.    6.85337 (64) obj. 1.19603e+06 iterations 354
Cbc0038I Pass  92: suminf.    6.84853 (54) obj. 1.19603e+06 iterations 36
Cbc0038I Pass  93: suminf.    5.74555 (52) obj. 1.19603e+06 iterations 62
Cbc0038I Pass  94: suminf.    4.34127 (90) obj. 1.19603e+06 iterations 368
Cbc0038I Pass  95: suminf.    4.39638 (104) obj. 1.19603e+06 iterations 67
Cbc0038I Pass  96: suminf.   11.53384 (91) obj. 1.19603e+06 iterations 451
Cbc0038I Pass  97: suminf.    7.23742 (61) obj. 1.19603e+06 iterations 242
Cbc0038I Pass  98: suminf.    6.52041 (62) obj. 1.19603e+06 iterations 22
Cbc0038I Pass  99: suminf.    5.54714 (66) obj. 1.19603e+06 iterations 269
Cbc0038I Pass 100: suminf.    3.50561 (93) obj. 1.19603e+06 iterations 376
Cbc0038I Pass 101: suminf.    8.41664 (76) obj. 1.19603e+06 iterations 196
Cbc0038I Pass 102: suminf.    7.00340 (69) obj. 1.19603e+06 iterations 232
Cbc0038I Pass 103: suminf.    6.46207 (72) obj. 1.19603e+06 iterations 417
Cbc0038I Pass 104: suminf.    5.09074 (79) obj. 1.19603e+06 iterations 56
Cbc0038I Pass 105: suminf.    8.53453 (75) obj. 1.19603e+06 iterations 427
Cbc0038I Pass 106: suminf.    8.33440 (71) obj. 1.19603e+06 iterations 57
Cbc0038I Pass 107: suminf.    5.83722 (70) obj. 1.19603e+06 iterations 173
Cbc0038I Pass 108: suminf.    3.63142 (71) obj. 1.19603e+06 iterations 62
Cbc0038I Pass 109: suminf.    7.10568 (54) obj. 1.19603e+06 iterations 175
Cbc0038I Pass 110: suminf.    7.10568 (54) obj. 1.19603e+06 iterations 91
Cbc0038I Pass 111: suminf.    2.78812 (63) obj. 1.19603e+06 iterations 116
Cbc0038I Pass 112: suminf.    2.44963 (66) obj. 1.19603e+06 iterations 85
Cbc0038I Pass 113: suminf.    6.97446 (59) obj. 1.19603e+06 iterations 173
Cbc0038I Pass 114: suminf.    6.97348 (56) obj. 1.19603e+06 iterations 41
Cbc0038I Pass 115: suminf.    4.31573 (55) obj. 1.19603e+06 iterations 109
Cbc0038I Pass 116: suminf.    3.77929 (75) obj. 1.19603e+06 iterations 98
Cbc0038I Pass 117: suminf.   11.89296 (90) obj. 1.19603e+06 iterations 384
Cbc0038I Pass 118: suminf.    9.77897 (94) obj. 1.19603e+06 iterations 267
Cbc0038I Pass 119: suminf.    9.77897 (94) obj. 1.19603e+06 iterations 1
Cbc0038I Pass 120: suminf.    5.94090 (103) obj. 1.19603e+06 iterations 149
Cbc0038I Pass 121: suminf.    4.73051 (88) obj. 1.19603e+06 iterations 16
Cbc0038I Pass 122: suminf.   11.25153 (97) obj. 1.19603e+06 iterations 189
Cbc0038I Pass 123: suminf.   56.71380 (296) obj. 1.19603e+06 iterations 726
Cbc0038I Pass 124: suminf.   25.66408 (208) obj. 1.19603e+06 iterations 443
Cbc0038I Pass 125: suminf.   25.34048 (194) obj. 1.19603e+06 iterations 57
Cbc0038I Pass 126: suminf.   20.43897 (164) obj. 1.19603e+06 iterations 205
Cbc0038I Pass 127: suminf.   18.90599 (155) obj. 1.19603e+06 iterations 157
Cbc0038I Pass 128: suminf.   17.04703 (172) obj. 1.19603e+06 iterations 118
Cbc0038I Pass 129: suminf.   16.51615 (145) obj. 1.19603e+06 iterations 167
Cbc0038I Pass 130: suminf.   13.99692 (151) obj. 1.19603e+06 iterations 126
Cbc0038I Pass 131: suminf.   13.02928 (150) obj. 1.19603e+06 iterations 183
Cbc0038I Pass 132: suminf.   11.33194 (150) obj. 1.19603e+06 iterations 79
Cbc0038I Pass 133: suminf.   10.82632 (147) obj. 1.19603e+06 iterations 43
Cbc0038I Pass 134: suminf.   10.14482 (122) obj. 1.19603e+06 iterations 327
Cbc0038I Pass 135: suminf.    9.76737 (119) obj. 1.19603e+06 iterations 20
Cbc0038I Pass 136: suminf.    8.27425 (117) obj. 1.19603e+06 iterations 188
Cbc0038I Pass 137: suminf.    7.20890 (121) obj. 1.19603e+06 iterations 121
Cbc0038I Pass 138: suminf.    9.32839 (110) obj. 1.19603e+06 iterations 224
Cbc0038I Pass 139: suminf.    7.55291 (97) obj. 1.19603e+06 iterations 56
Cbc0038I Pass 140: suminf.    4.61678 (96) obj. 1.19603e+06 iterations 290
Cbc0038I Pass 141: suminf.    3.47606 (74) obj. 1.19603e+06 iterations 70
Cbc0038I Pass 142: suminf.    4.85552 (65) obj. 1.19603e+06 iterations 79
Cbc0038I Pass 143: suminf.    4.67962 (64) obj. 1.19603e+06 iterations 76
Cbc0038I Pass 144: suminf.    3.00709 (58) obj. 1.19603e+06 iterations 94
Cbc0038I Pass 145: suminf.    3.00709 (58) obj. 1.19603e+06 iterations 15
Cbc0038I Pass 146: suminf.    6.22844 (80) obj. 1.19603e+06 iterations 215
Cbc0038I Pass 147: suminf.    5.41290 (79) obj. 1.19603e+06 iterations 130
Cbc0038I Pass 148: suminf.    5.46224 (78) obj. 1.19603e+06 iterations 383
Cbc0038I Pass 149: suminf.    5.42396 (96) obj. 1.19603e+06 iterations 68
Cbc0038I Pass 150: suminf.    7.75221 (102) obj. 1.19603e+06 iterations 234
Cbc0038I Pass 151: suminf.    7.65104 (99) obj. 1.19603e+06 iterations 39
Cbc0038I Pass 152: suminf.    3.84522 (72) obj. 1.19603e+06 iterations 189
Cbc0038I Pass 153: suminf.    3.44283 (72) obj. 1.19603e+06 iterations 71
Cbc0038I Pass 154: suminf.    8.84104 (63) obj. 1.19603e+06 iterations 235
Cbc0038I Pass 155: suminf.    7.98622 (74) obj. 1.19603e+06 iterations 105
Cbc0038I Pass 156: suminf.    3.94428 (79) obj. 1.19603e+06 iterations 277
Cbc0038I Pass 157: suminf.    3.44777 (64) obj. 1.19603e+06 iterations 274
Cbc0038I Pass 158: suminf.    9.14293 (78) obj. 1.19603e+06 iterations 440
Cbc0038I Pass 159: suminf.    7.91707 (75) obj. 1.19603e+06 iterations 219
Cbc0038I Pass 160: suminf.    6.58579 (81) obj. 1.19603e+06 iterations 449
Cbc0038I Pass 161: suminf.    6.07371 (93) obj. 1.19603e+06 iterations 121
Cbc0038I Pass 162: suminf.    6.45133 (46) obj. 1.19603e+06 iterations 483
Cbc0038I Pass 163: suminf.    6.38703 (76) obj. 1.19603e+06 iterations 98
Cbc0038I Pass 164: suminf.    4.48330 (72) obj. 1.19603e+06 iterations 386
Cbc0038I Pass 165: suminf.    4.46582 (72) obj. 1.19603e+06 iterations 22
Cbc0038I Pass 166: suminf.   11.27333 (88) obj. 1.19603e+06 iterations 278
Cbc0038I Pass 167: suminf.   47.19915 (296) obj. 1.19603e+06 iterations 831
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2484 rows 800 columns, reduced to 2042 rows 630 columns - 187 fixed gives 879, 214 - ok now
Cbc0038I Full problem 2484 rows 800 columns, reduced to 48 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (3.13 seconds)
Cbc0038I After 3.13 seconds - Feasibility pump exiting with objective of 1.21242e+06 - took 2.95 seconds
Cbc0012I Integer solution of 1212416 found by feasibility pump after 0 iterations and 0 nodes (3.13 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1295 rows 353 columns - 150 fixed gives 283, 68 - ok now
Cbc0031I 37 added rows had average density of 8.5675676
Cbc0013I At root node, 37 cuts changed objective from 1130496 to 1130496 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 372 row cuts average 2.6 elements, 13 column cuts (13 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 115 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1212416 best solution, best possible 1130496 (5.07 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1476 rows 421 columns - 164 fixed gives 384, 110 - ok now
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1398 rows 370 columns - 144 fixed gives 418, 109 - ok now
Cbc0010I After 100 nodes, 6 on tree, 1212416 best solution, best possible 1130502 (32.40 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1550 rows 440 columns - 177 fixed gives 381, 105 - ok now
Cbc0010I After 200 nodes, 11 on tree, 1212416 best solution, best possible 1130502 (57.18 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1582 rows 457 columns - 180 fixed gives 391, 111 - ok now
Cbc0010I After 300 nodes, 22 on tree, 1212416 best solution, best possible 1130502 (83.10 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1545 rows 444 columns - 176 fixed gives 372, 104 - ok now
Cbc0010I After 400 nodes, 37 on tree, 1212416 best solution, best possible 1130502 (104.94 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1509 rows 429 columns - 174 fixed gives 352, 99 - ok now
Cbc0010I After 500 nodes, 52 on tree, 1212416 best solution, best possible 1130502 (129.01 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1601 rows 463 columns - 181 fixed gives 403, 116 - ok now
Cbc0010I After 600 nodes, 64 on tree, 1212416 best solution, best possible 1130502 (155.04 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1559 rows 435 columns - 173 fixed gives 386, 107 - ok now
Cbc0010I After 700 nodes, 79 on tree, 1212416 best solution, best possible 1130502 (178.27 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1525 rows 434 columns - 172 fixed gives 352, 99 - ok now
Cbc0010I After 800 nodes, 94 on tree, 1212416 best solution, best possible 1130502 (201.72 seconds)
Cbc0010I After 900 nodes, 109 on tree, 1212416 best solution, best possible 1130502 (225.32 seconds)
Cbc0010I After 1000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (248.04 seconds)
Cbc0010I After 1100 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (269.54 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1493 rows 434 columns - 173 fixed gives 358, 98 - ok now
Cbc0010I After 1200 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (291.03 seconds)
Cbc0010I After 1300 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (314.77 seconds)
Cbc0010I After 1400 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (333.00 seconds)
Cbc0010I After 1500 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (357.22 seconds)
Cbc0010I After 1600 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (382.00 seconds)
Cbc0010I After 1700 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (410.01 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1384 rows 368 columns - 140 fixed gives 408, 108 - ok now
Cbc0010I After 1800 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (430.25 seconds)
Cbc0010I After 1900 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (448.61 seconds)
Cbc0010I After 2000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (466.88 seconds)
Cbc0010I After 2100 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (484.06 seconds)
Cbc0010I After 2200 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (501.52 seconds)
Cbc0010I After 2300 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (520.25 seconds)
Cbc0010I After 2400 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (537.04 seconds)
Cbc0010I After 2500 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (553.80 seconds)
Cbc0010I After 2600 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (574.04 seconds)
Cbc0010I After 2700 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (592.35 seconds)
Cbc0010I After 2800 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (610.05 seconds)
Cbc0010I After 2900 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (628.70 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1339 rows 364 columns - 138 fixed gives 408, 108 - ok now
Cbc0010I After 3000 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (645.03 seconds)
Cbc0010I After 3100 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (664.07 seconds)
Cbc0010I After 3200 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (682.88 seconds)
Cbc0010I After 3300 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (703.94 seconds)
Cbc0010I After 3400 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (724.34 seconds)
Cbc0010I After 3500 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (746.72 seconds)
Cbc0010I After 3600 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (768.86 seconds)
Cbc0010I After 3700 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (789.96 seconds)
Cbc0010I After 3800 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (808.42 seconds)
Cbc0010I After 3900 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (825.96 seconds)
Cbc0010I After 4000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (845.46 seconds)
Cbc0010I After 4100 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (860.84 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1472 rows 391 columns - 164 fixed gives 305, 77 - ok now
Cbc0010I After 4200 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (877.42 seconds)
Cbc0010I After 4300 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (892.94 seconds)
Cbc0010I After 4400 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (907.46 seconds)
Cbc0010I After 4500 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (922.33 seconds)
Cbc0010I After 4600 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (936.39 seconds)
Cbc0010I After 4700 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (950.00 seconds)
Cbc0010I After 4800 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (965.06 seconds)
Cbc0010I After 4900 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (980.19 seconds)
Cbc0010I After 5000 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (997.55 seconds)
Cbc0010I After 5100 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1017.14 seconds)
Cbc0010I After 5200 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1034.08 seconds)
Cbc0010I After 5300 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1051.43 seconds)
Cbc0010I After 5400 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1065.88 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1372 rows 375 columns - 144 fixed gives 408, 108 - ok now
Cbc0010I After 5500 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1078.31 seconds)
Cbc0010I After 5600 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1091.84 seconds)
Cbc0010I After 5700 nodes, 126 on tree, 1212416 best solution, best possible 1130502 (1106.55 seconds)
Cbc0010I After 5800 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1125.30 seconds)
Cbc0010I After 5900 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1142.65 seconds)
Cbc0010I After 6000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1158.66 seconds)
Cbc0010I After 6100 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1172.81 seconds)
Cbc0010I After 6200 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1187.98 seconds)
Cbc0010I After 6300 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1203.83 seconds)
Cbc0010I After 6400 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1218.75 seconds)
Cbc0010I After 6500 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1232.50 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1344 rows 361 columns - 158 fixed gives 338, 81 - ok now
Cbc0010I After 6600 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1247.48 seconds)
Cbc0010I After 6700 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1264.25 seconds)
Cbc0010I After 6800 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1280.28 seconds)
Cbc0010I After 6900 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1294.29 seconds)
Cbc0010I After 7000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1310.28 seconds)
Cbc0010I After 7100 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1323.80 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1372 rows 375 columns - 144 fixed gives 408, 108 - ok now
Cbc0010I After 7200 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1340.76 seconds)
Cbc0010I After 7300 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1357.82 seconds)
Cbc0010I After 7400 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1373.89 seconds)
Cbc0010I After 7500 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1386.55 seconds)
Cbc0010I After 7600 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1403.71 seconds)
Cbc0010I After 7700 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1421.70 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1401 rows 381 columns - 161 fixed gives 306, 77 - ok now
Cbc0010I After 7800 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1438.60 seconds)
Cbc0010I After 7900 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1454.02 seconds)
Cbc0010I After 8000 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1468.35 seconds)
Cbc0010I After 8100 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1486.12 seconds)
Cbc0010I After 8200 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1501.52 seconds)
Cbc0010I After 8300 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1518.89 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1372 rows 375 columns - 144 fixed gives 408, 108 - ok now
Cbc0010I After 8400 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1534.68 seconds)
Cbc0010I After 8500 nodes, 125 on tree, 1212416 best solution, best possible 1130502 (1551.61 seconds)
Cbc0010I After 8600 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1566.06 seconds)
Cbc0010I After 8700 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1581.56 seconds)
Cbc0010I After 8800 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1597.94 seconds)
Cbc0010I After 8900 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1613.08 seconds)
Cbc0010I After 9000 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1629.14 seconds)
Cbc0010I After 9100 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1644.71 seconds)
Cbc0010I After 9200 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1659.70 seconds)
Cbc0010I After 9300 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1674.89 seconds)
Cbc0010I After 9400 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1690.07 seconds)
Cbc0010I After 9500 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1705.37 seconds)
Cbc0010I After 9600 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1724.48 seconds)
Cbc0038I Full problem 2484 rows 800 columns, reduced to 1376 rows 377 columns - 144 fixed gives 420, 111 - ok now
Cbc0010I After 9700 nodes, 123 on tree, 1212416 best solution, best possible 1130502 (1740.13 seconds)
Cbc0010I After 9800 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1755.72 seconds)
Cbc0010I After 9900 nodes, 124 on tree, 1212416 best solution, best possible 1130502 (1771.98 seconds)
Cbc0010I After 10000 nodes, 122 on tree, 1212416 best solution, best possible 1130502 (1786.90 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1212416 (best possible 1130502), took 11013534 iterations and 10091 nodes (1799.90 seconds)
Cbc0032I Strong branching done 20380 times (1675596 iterations), fathomed 289 nodes and fixed 163 variables
Cbc0035I Maximum depth 1722, 3 variables fixed on reduced cost
Cuts at root node changed objective from 1.1305e+06 to 1.1305e+06
Probing was tried 1713 times and created 133436 cuts of which 0 were active after adding rounds of cuts (5.186 seconds)
Gomory was tried 935 times and created 574 cuts of which 0 were active after adding rounds of cuts (2.238 seconds)
Knapsack was tried 935 times and created 2301 cuts of which 0 were active after adding rounds of cuts (0.750 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 10 times and created 115 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
ImplicationCuts was tried 42 times and created 1007 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Stopped on time limit

Objective value:                1212416.00000000
Lower bound:                    1130502.000
Gap:                            0.07
Enumerated nodes:               10091
Total iterations:               11013534
Time (CPU seconds):             1799.98
Time (Wallclock seconds):       1800.47

Total time (CPU seconds):       1799.99   (Wallclock seconds):       1800.48

