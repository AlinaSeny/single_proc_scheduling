Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/default60_tiers_input.lp sec 1800 solve solu solutions/new_tr/default60_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 50802.3 - 0.73 seconds
Cgl0002I 2851 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 595 strengthened rows, 8 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 5238 rows, 1580 columns (1580 integer (1519 of which binary)) and 17321 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1580 objects (1580 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 781 integers unsatisfied sum - 154.007
Cbc0038I Pass   1: (2.07 seconds) suminf.   83.67152 (513) obj. 64872.3 iterations 2234
Cbc0038I Pass   2: (2.16 seconds) suminf.   76.89971 (531) obj. 64501.7 iterations 326
Cbc0038I Pass   3: (2.25 seconds) suminf.   76.19083 (533) obj. 64597.6 iterations 299
Cbc0038I Pass   4: (2.31 seconds) suminf.   74.38019 (547) obj. 64481.1 iterations 153
Cbc0038I Pass   5: (2.33 seconds) suminf.   74.63445 (540) obj. 64483.1 iterations 49
Cbc0038I Pass   6: (2.42 seconds) suminf.   71.98530 (541) obj. 64693.5 iterations 276
Cbc0038I Pass   7: (2.47 seconds) suminf.   70.51025 (529) obj. 65040.8 iterations 142
Cbc0038I Pass   8: (2.48 seconds) suminf.   70.30453 (529) obj. 65041.1 iterations 12
Cbc0038I Pass   9: (2.58 seconds) suminf.   68.89759 (529) obj. 61167 iterations 350
Cbc0038I Pass  10: (2.63 seconds) suminf.   65.41900 (533) obj. 63325.1 iterations 149
Cbc0038I Pass  11: (2.66 seconds) suminf.   66.33682 (546) obj. 64538.5 iterations 76
Cbc0038I Pass  12: (2.82 seconds) suminf.   61.43895 (500) obj. 66868.4 iterations 599
Cbc0038I Pass  13: (2.85 seconds) suminf.   58.86344 (495) obj. 66730.9 iterations 89
Cbc0038I Pass  14: (2.86 seconds) suminf.   58.72668 (495) obj. 66730.9 iterations 10
Cbc0038I Pass  15: (2.95 seconds) suminf.   58.76168 (518) obj. 76357.6 iterations 291
Cbc0038I Pass  16: (3.00 seconds) suminf.   58.72905 (500) obj. 74574.8 iterations 168
Cbc0038I Pass  17: (3.07 seconds) suminf.   58.78293 (491) obj. 70291 iterations 199
Cbc0038I Pass  18: (3.11 seconds) suminf.   56.28017 (493) obj. 69934.8 iterations 107
Cbc0038I Pass  19: (3.23 seconds) suminf.   56.33811 (492) obj. 70678.4 iterations 456
Cbc0038I Pass  20: (3.28 seconds) suminf.   55.59621 (498) obj. 70562.2 iterations 163
Cbc0038I Pass  21: (3.39 seconds) suminf.   54.67960 (470) obj. 75782.2 iterations 375
Cbc0038I Pass  22: (3.45 seconds) suminf.   53.68283 (483) obj. 73789.2 iterations 175
Cbc0038I Pass  23: (3.53 seconds) suminf.   48.51953 (458) obj. 73175.8 iterations 267
Cbc0038I Pass  24: (3.57 seconds) suminf.   48.96861 (470) obj. 73355.7 iterations 109
Cbc0038I Pass  25: (3.62 seconds) suminf.   48.84475 (470) obj. 72963.6 iterations 163
Cbc0038I Pass  26: (3.66 seconds) suminf.   48.34062 (472) obj. 72319.1 iterations 90
Cbc0038I Pass  27: (3.78 seconds) suminf.   51.31469 (462) obj. 87872.4 iterations 488
Cbc0038I Pass  28: (3.91 seconds) suminf.   45.34115 (466) obj. 90253.2 iterations 436
Cbc0038I Pass  29: (4.04 seconds) suminf.   43.06019 (445) obj. 88286.5 iterations 499
Cbc0038I Pass  30: (4.12 seconds) suminf.   41.66737 (479) obj. 87953.8 iterations 229
Cbc0038I Pass  31: (4.21 seconds) suminf.   39.40056 (458) obj. 81620.7 iterations 319
Cbc0038I Pass  32: (4.27 seconds) suminf.   39.42224 (454) obj. 79504.4 iterations 159
Cbc0038I Pass  33: (4.30 seconds) suminf.   39.26795 (450) obj. 79477.2 iterations 88
Cbc0038I Pass  34: (4.38 seconds) suminf.   39.92375 (428) obj. 74528.3 iterations 249
Cbc0038I Pass  35: (4.41 seconds) suminf.   37.42444 (441) obj. 74429 iterations 82
Cbc0038I Pass  36: (4.48 seconds) suminf.   40.65739 (407) obj. 70853.4 iterations 212
Cbc0038I Pass  37: (4.50 seconds) suminf.   39.93269 (404) obj. 70853.4 iterations 64
Cbc0038I Pass  38: (4.54 seconds) suminf.   38.19142 (411) obj. 70861.6 iterations 130
Cbc0038I Pass  39: (4.55 seconds) suminf.   36.43676 (398) obj. 70858.2 iterations 30
Cbc0038I Pass  40: (4.57 seconds) suminf.   35.53917 (413) obj. 70860.3 iterations 47
Cbc0038I Pass  41: (4.59 seconds) suminf.   34.66436 (406) obj. 70857.6 iterations 56
Cbc0038I Pass  42: (4.65 seconds) suminf.   37.53043 (392) obj. 70839.5 iterations 216
Cbc0038I Pass  43: (4.66 seconds) suminf.   38.66291 (397) obj. 70840.2 iterations 24
Cbc0038I Pass  44: (4.69 seconds) suminf.   38.12720 (396) obj. 70833.9 iterations 96
Cbc0038I Pass  45: (4.71 seconds) suminf.   37.21939 (402) obj. 70831.3 iterations 82
Cbc0038I Pass  46: (4.75 seconds) suminf.   39.43080 (395) obj. 70840.7 iterations 145
Cbc0038I Pass  47: (4.77 seconds) suminf.   37.90465 (395) obj. 70841.2 iterations 68
Cbc0038I Pass  48: (4.79 seconds) suminf.   37.38491 (397) obj. 70841.3 iterations 43
Cbc0038I Pass  49: (4.85 seconds) suminf.   37.54842 (373) obj. 70853.4 iterations 206
Cbc0038I Pass  50: (4.88 seconds) suminf.   36.75046 (399) obj. 70843.1 iterations 109
Cbc0038I Pass  51: (4.89 seconds) suminf.   37.34403 (395) obj. 70843.5 iterations 27
Cbc0038I Pass  52: (4.92 seconds) suminf.   37.99891 (393) obj. 70839.6 iterations 83
Cbc0038I Pass  53: (4.93 seconds) suminf.   37.28006 (389) obj. 70843.9 iterations 31
Cbc0038I Pass  54: (4.96 seconds) suminf.   37.04264 (398) obj. 70829.9 iterations 120
Cbc0038I Pass  55: (4.98 seconds) suminf.   36.05845 (398) obj. 70836.2 iterations 68
Cbc0038I Pass  56: (5.01 seconds) suminf.   39.22967 (390) obj. 70837.1 iterations 102
Cbc0038I Pass  57: (5.02 seconds) suminf.   38.73264 (381) obj. 70843.4 iterations 37
Cbc0038I Pass  58: (5.03 seconds) suminf.   38.61971 (382) obj. 70852.3 iterations 3
Cbc0038I Pass  59: (5.07 seconds) suminf.   37.42661 (392) obj. 70844.1 iterations 144
Cbc0038I Pass  60: (5.09 seconds) suminf.   38.17937 (397) obj. 70843.8 iterations 33
Cbc0038I Pass  61: (5.10 seconds) suminf.   36.88678 (400) obj. 70844.2 iterations 52
Cbc0038I Pass  62: (5.15 seconds) suminf.   38.10198 (364) obj. 70853.4 iterations 183
Cbc0038I Pass  63: (5.16 seconds) suminf.   35.95176 (366) obj. 70853.4 iterations 20
Cbc0038I Pass  64: (5.19 seconds) suminf.   35.58729 (370) obj. 70853.4 iterations 99
Cbc0038I Pass  65: (5.21 seconds) suminf.   33.67892 (370) obj. 70853.4 iterations 62
Cbc0038I Pass  66: (5.24 seconds) suminf.   37.89739 (369) obj. 70853.4 iterations 135
Cbc0038I Pass  67: (5.27 seconds) suminf.   35.38648 (371) obj. 70853.4 iterations 84
Cbc0038I Pass  68: (5.29 seconds) suminf.   34.86957 (374) obj. 70853.4 iterations 88
Cbc0038I Pass  69: (5.31 seconds) suminf.   34.28490 (370) obj. 70853.4 iterations 59
Cbc0038I Pass  70: (5.36 seconds) suminf.   36.64733 (371) obj. 70848.1 iterations 184
Cbc0038I Pass  71: (5.38 seconds) suminf.   33.51897 (372) obj. 70847 iterations 81
Cbc0038I Pass  72: (5.40 seconds) suminf.   35.10092 (374) obj. 70853.4 iterations 73
Cbc0038I Pass  73: (5.41 seconds) suminf.   35.17079 (377) obj. 70847.4 iterations 7
Cbc0038I Pass  74: (5.47 seconds) suminf.   33.91824 (361) obj. 77122.9 iterations 271
Cbc0038I Pass  75: (5.51 seconds) suminf.   32.52946 (370) obj. 80589.3 iterations 148
Cbc0038I Pass  76: (5.55 seconds) suminf.   33.46385 (371) obj. 81995.6 iterations 158
Cbc0038I Pass  77: (5.57 seconds) suminf.   32.50609 (362) obj. 82039.1 iterations 47
Cbc0038I Pass  78: (5.60 seconds) suminf.   31.77246 (350) obj. 81590.7 iterations 108
Cbc0038I Pass  79: (5.62 seconds) suminf.   30.46958 (348) obj. 81941.6 iterations 75
Cbc0038I Pass  80: (5.65 seconds) suminf.   30.50448 (342) obj. 77699.8 iterations 143
Cbc0038I Pass  81: (5.68 seconds) suminf.   28.88959 (333) obj. 77746.3 iterations 106
Cbc0038I Pass  82: (5.69 seconds) suminf.   28.83559 (334) obj. 77745.7 iterations 23
Cbc0038I Pass  83: (5.73 seconds) suminf.   26.56510 (325) obj. 76407.5 iterations 155
Cbc0038I Pass  84: (5.75 seconds) suminf.   25.72057 (324) obj. 76480.7 iterations 47
Cbc0038I Pass  85: (5.81 seconds) suminf.   24.39893 (320) obj. 74822.5 iterations 257
Cbc0038I Pass  86: (5.84 seconds) suminf.   22.27105 (318) obj. 75244.4 iterations 120
Cbc0038I Pass  87: (5.88 seconds) suminf.   23.44919 (291) obj. 75864.3 iterations 170
Cbc0038I Pass  88: (5.90 seconds) suminf.   22.19830 (285) obj. 75801.9 iterations 64
Cbc0038I Pass  89: (5.96 seconds) suminf.   19.91054 (297) obj. 75843.2 iterations 232
Cbc0038I Pass  90: (5.98 seconds) suminf.   19.17124 (290) obj. 76093.6 iterations 81
Cbc0038I Pass  91: (6.00 seconds) suminf.   19.19748 (297) obj. 75874.4 iterations 64
Cbc0038I Pass  92: (6.05 seconds) suminf.   19.91000 (303) obj. 75596 iterations 244
Cbc0038I Pass  93: (6.07 seconds) suminf.   18.58525 (296) obj. 75602.8 iterations 78
Cbc0038I Pass  94: (6.09 seconds) suminf.   16.65410 (290) obj. 75603.3 iterations 90
Cbc0038I Pass  95: (6.10 seconds) suminf.   16.65410 (290) obj. 75603.3 iterations 4
Cbc0038I Pass  96: (6.12 seconds) suminf.   14.90004 (281) obj. 70918.9 iterations 98
Cbc0038I Pass  97: (6.13 seconds) suminf.   14.76980 (280) obj. 70918.9 iterations 20
Cbc0038I Pass  98: (6.16 seconds) suminf.   16.70475 (288) obj. 75595.1 iterations 126
Cbc0038I Pass  99: (6.17 seconds) suminf.   16.16587 (290) obj. 75603 iterations 22
Cbc0038I Pass 100: (6.37 seconds) suminf.   75.95272 (415) obj. 81648 iterations 971
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 390 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5238 rows 1580 columns, reduced to 3166 rows 941 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.73 seconds)
Cbc0038I After 9.73 seconds - Feasibility pump exiting - took 8.25 seconds
Cbc0031I 27 added rows had average density of 92.703704
Cbc0013I At root node, 27 cuts changed objective from 50882.673 to 52242.64 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 52 row cuts average 678.3 elements, 0 column cuts (0 active)  in 0.816 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 94 row cuts average 34.6 elements, 0 column cuts (0 active)  in 0.342 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 52243 (34.60 seconds)
Cbc0010I After 100 nodes, 6 on tree, 1e+50 best solution, best possible 52246 (246.79 seconds)
Cbc0010I After 200 nodes, 5 on tree, 1e+50 best solution, best possible 52246 (483.71 seconds)
Cbc0010I After 300 nodes, 23 on tree, 1e+50 best solution, best possible 52246 (779.96 seconds)
Cbc0010I After 400 nodes, 29 on tree, 1e+50 best solution, best possible 52246 (1022.79 seconds)
Cbc0010I After 500 nodes, 43 on tree, 1e+50 best solution, best possible 52246 (1217.70 seconds)
Cbc0010I After 600 nodes, 53 on tree, 1e+50 best solution, best possible 52246 (1431.26 seconds)
Cbc0010I After 700 nodes, 67 on tree, 1e+50 best solution, best possible 52246 (1543.19 seconds)
Cbc0010I After 800 nodes, 72 on tree, 1e+50 best solution, best possible 52246 (1621.74 seconds)
Cbc0010I After 900 nodes, 73 on tree, 1e+50 best solution, best possible 52246 (1689.20 seconds)
Cbc0010I After 1000 nodes, 70 on tree, 1e+50 best solution, best possible 52246 (1761.43 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 52246), took 3496535 iterations and 1055 nodes (1800.78 seconds)
Cbc0032I Strong branching done 10572 times (898861 iterations), fathomed 56 nodes and fixed 306 variables
Cbc0035I Maximum depth 110, 0 variables fixed on reduced cost
Cuts at root node changed objective from 50882.7 to 52243
Probing was tried 234 times and created 23620 cuts of which 0 were active after adding rounds of cuts (1.104 seconds)
Gomory was tried 167 times and created 130 cuts of which 0 were active after adding rounds of cuts (2.415 seconds)
Knapsack was tried 167 times and created 1116 cuts of which 0 were active after adding rounds of cuts (0.360 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 167 times and created 4098 cuts of which 0 were active after adding rounds of cuts (0.918 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.061 seconds)
ImplicationCuts was tried 35 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    52246.000
Enumerated nodes:               1055
Total iterations:               3496535
Time (CPU seconds):             1800.78
Time (Wallclock seconds):       1801.23

Total time (CPU seconds):       1800.84   (Wallclock seconds):       1801.29

