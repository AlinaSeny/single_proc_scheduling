Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump15_down_left_input.lp sec 1800 solve solu solutions/new_tr/jump15_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 17408 - 0.00 seconds
Cgl0002I 50 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 101 strengthened rows, 0 substitutions
Cgl0004I processed model has 476 rows, 167 columns (167 integer (151 of which binary)) and 1575 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 167 objects (167 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 98 integers unsatisfied sum - 27.2313
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 20480 iterations 126
Cbc0038I Solution found of 20480
Cbc0038I Cleaned solution of 20480
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 20171.9
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.67337 (17) obj. 20171 iterations 24
Cbc0038I Pass   3: suminf.    0.77132 (18) obj. 20171.9 iterations 1
Cbc0038I Pass   4: suminf.    0.75696 (42) obj. 20171.9 iterations 142
Cbc0038I Pass   5: suminf.   10.96749 (50) obj. 20171.9 iterations 69
Cbc0038I Pass   6: suminf.    9.15704 (40) obj. 20171.9 iterations 34
Cbc0038I Pass   7: suminf.    8.42334 (41) obj. 20171.9 iterations 18
Cbc0038I Pass   8: suminf.    7.73867 (39) obj. 20171.9 iterations 82
Cbc0038I Pass   9: suminf.    3.66607 (22) obj. 20171.9 iterations 64
Cbc0038I Pass  10: suminf.    2.44274 (15) obj. 20171.9 iterations 36
Cbc0038I Pass  11: suminf.    2.44274 (15) obj. 20171.9 iterations 1
Cbc0038I Pass  12: suminf.    1.61573 (17) obj. 20171.9 iterations 51
Cbc0038I Pass  13: suminf.    0.09991 (1) obj. 20171.9 iterations 6
Cbc0038I Solution found of 20171.9
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 477 rows 167 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 19456
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 364 rows 119 columns - 34 fixed gives 165, 42 - ok now
Cbc0038I Full problem 476 rows 167 columns, reduced to 44 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 19045.6
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  14: suminf.    5.16257 (28) obj. 19045.6 iterations 36
Cbc0038I Pass  15: suminf.    5.16257 (28) obj. 19045.6 iterations 0
Cbc0038I Pass  16: suminf.    6.66284 (37) obj. 19045.6 iterations 54
Cbc0038I Pass  17: suminf.    5.91614 (27) obj. 19045.6 iterations 24
Cbc0038I Pass  18: suminf.    7.77692 (30) obj. 19045.6 iterations 53
Cbc0038I Pass  19: suminf.    4.44662 (30) obj. 19045.6 iterations 8
Cbc0038I Pass  20: suminf.   10.43745 (47) obj. 19045.6 iterations 62
Cbc0038I Pass  21: suminf.    5.56201 (29) obj. 19045.6 iterations 37
Cbc0038I Pass  22: suminf.    4.26763 (27) obj. 19045.6 iterations 21
Cbc0038I Pass  23: suminf.    7.53020 (35) obj. 19045.6 iterations 36
Cbc0038I Pass  24: suminf.    5.93070 (34) obj. 19045.6 iterations 27
Cbc0038I Pass  25: suminf.    8.22472 (35) obj. 19045.6 iterations 58
Cbc0038I Pass  26: suminf.    4.26763 (29) obj. 19045.6 iterations 21
Cbc0038I Pass  27: suminf.    6.61413 (37) obj. 19045.6 iterations 43
Cbc0038I Pass  28: suminf.    5.91614 (27) obj. 19045.6 iterations 21
Cbc0038I Pass  29: suminf.    7.77692 (30) obj. 19045.6 iterations 64
Cbc0038I Pass  30: suminf.    4.44662 (30) obj. 19045.6 iterations 14
Cbc0038I Pass  31: suminf.   10.43176 (47) obj. 19045.6 iterations 66
Cbc0038I Pass  32: suminf.    8.52063 (40) obj. 19045.6 iterations 49
Cbc0038I Pass  33: suminf.    4.00304 (28) obj. 19045.6 iterations 49
Cbc0038I Pass  34: suminf.   10.38578 (52) obj. 19045.6 iterations 80
Cbc0038I Pass  35: suminf.   10.52780 (51) obj. 19045.6 iterations 59
Cbc0038I Pass  36: suminf.    7.66097 (35) obj. 19045.6 iterations 25
Cbc0038I Pass  37: suminf.    7.76036 (36) obj. 19045.6 iterations 5
Cbc0038I Pass  38: suminf.   11.64376 (37) obj. 19045.6 iterations 51
Cbc0038I Pass  39: suminf.    5.80019 (38) obj. 19045.6 iterations 32
Cbc0038I Pass  40: suminf.    5.91614 (27) obj. 19045.6 iterations 3
Cbc0038I Pass  41: suminf.    5.57138 (28) obj. 19045.6 iterations 18
Cbc0038I Pass  42: suminf.    4.00304 (28) obj. 19045.6 iterations 9
Cbc0038I Pass  43: suminf.   10.38578 (52) obj. 19045.6 iterations 54
Cbc0038I Pass  44: suminf.    8.02361 (33) obj. 19045.6 iterations 48
Cbc0038I Pass  45: suminf.    4.44662 (30) obj. 19045.6 iterations 25
Cbc0038I Pass  46: suminf.   10.26870 (40) obj. 19045.6 iterations 52
Cbc0038I Pass  47: suminf.   10.23141 (49) obj. 19045.6 iterations 11
Cbc0038I Pass  48: suminf.    5.06919 (32) obj. 19045.6 iterations 29
Cbc0038I Pass  49: suminf.   14.51702 (66) obj. 19045.6 iterations 121
Cbc0038I Pass  50: suminf.   10.05956 (56) obj. 19045.6 iterations 66
Cbc0038I Pass  51: suminf.    8.51280 (52) obj. 19045.6 iterations 8
Cbc0038I Pass  52: suminf.    5.30127 (42) obj. 19045.6 iterations 34
Cbc0038I Pass  53: suminf.    5.36297 (37) obj. 19045.6 iterations 10
Cbc0038I Pass  54: suminf.    6.82631 (37) obj. 19045.6 iterations 44
Cbc0038I Pass  55: suminf.    6.82631 (37) obj. 19045.6 iterations 0
Cbc0038I Pass  56: suminf.   11.99412 (33) obj. 19045.6 iterations 50
Cbc0038I Pass  57: suminf.    9.85574 (46) obj. 19045.6 iterations 22
Cbc0038I Pass  58: suminf.    5.56681 (36) obj. 19045.6 iterations 46
Cbc0038I Pass  59: suminf.    5.12003 (32) obj. 19045.6 iterations 14
Cbc0038I Pass  60: suminf.    6.40513 (37) obj. 19045.6 iterations 50
Cbc0038I Pass  61: suminf.    6.27513 (43) obj. 19045.6 iterations 10
Cbc0038I Pass  62: suminf.    8.12783 (40) obj. 19045.6 iterations 71
Cbc0038I Pass  63: suminf.    6.81762 (43) obj. 19045.6 iterations 33
Cbc0038I Pass  64: suminf.    7.77469 (37) obj. 19045.6 iterations 55
Cbc0038I Pass  65: suminf.    6.43628 (35) obj. 19045.6 iterations 18
Cbc0038I Pass  66: suminf.    6.69064 (45) obj. 19045.6 iterations 45
Cbc0038I Pass  67: suminf.    6.36130 (49) obj. 19045.6 iterations 17
Cbc0038I Pass  68: suminf.    5.83752 (31) obj. 19045.6 iterations 30
Cbc0038I Pass  69: suminf.    3.80530 (25) obj. 19045.6 iterations 16
Cbc0038I Pass  70: suminf.    7.52262 (40) obj. 19045.6 iterations 64
Cbc0038I Pass  71: suminf.    4.60547 (27) obj. 19045.6 iterations 27
Cbc0038I Pass  72: suminf.    6.22391 (37) obj. 19045.6 iterations 42
Cbc0038I Pass  73: suminf.    6.22391 (37) obj. 19045.6 iterations 0
Cbc0038I Pass  74: suminf.   11.89917 (40) obj. 19045.6 iterations 60
Cbc0038I Pass  75: suminf.    7.60043 (46) obj. 19045.6 iterations 80
Cbc0038I Pass  76: suminf.    5.96544 (34) obj. 19045.6 iterations 28
Cbc0038I Pass  77: suminf.   12.50602 (51) obj. 19045.6 iterations 75
Cbc0038I Pass  78: suminf.   12.50602 (51) obj. 19045.6 iterations 0
Cbc0038I Pass  79: suminf.    8.43286 (40) obj. 19045.6 iterations 69
Cbc0038I Pass  80: suminf.    6.01414 (45) obj. 19045.6 iterations 27
Cbc0038I Pass  81: suminf.    8.45449 (44) obj. 19045.6 iterations 64
Cbc0038I Pass  82: suminf.    6.73837 (42) obj. 19045.6 iterations 19
Cbc0038I Pass  83: suminf.    5.18466 (35) obj. 19045.6 iterations 19
Cbc0038I Pass  84: suminf.    4.24175 (37) obj. 19045.6 iterations 45
Cbc0038I Pass  85: suminf.    4.61366 (35) obj. 19045.6 iterations 24
Cbc0038I Pass  86: suminf.    7.69835 (37) obj. 19045.6 iterations 74
Cbc0038I Pass  87: suminf.    6.69857 (35) obj. 19045.6 iterations 17
Cbc0038I Pass  88: suminf.   10.97201 (43) obj. 19045.6 iterations 66
Cbc0038I Pass  89: suminf.   10.19162 (43) obj. 19045.6 iterations 14
Cbc0038I Pass  90: suminf.   10.13093 (43) obj. 19045.6 iterations 14
Cbc0038I Pass  91: suminf.    6.56192 (41) obj. 19045.6 iterations 47
Cbc0038I Pass  92: suminf.    5.22154 (36) obj. 19045.6 iterations 13
Cbc0038I Pass  93: suminf.    5.36602 (42) obj. 19045.6 iterations 32
Cbc0038I Pass  94: suminf.    5.52536 (33) obj. 19045.6 iterations 18
Cbc0038I Pass  95: suminf.    7.05950 (44) obj. 19045.6 iterations 48
Cbc0038I Pass  96: suminf.    7.05950 (44) obj. 19045.6 iterations 0
Cbc0038I Pass  97: suminf.    8.04623 (29) obj. 19045.6 iterations 53
Cbc0038I Pass  98: suminf.    4.60547 (27) obj. 19045.6 iterations 32
Cbc0038I Pass  99: suminf.    6.22391 (37) obj. 19045.6 iterations 51
Cbc0038I Pass 100: suminf.    6.22391 (37) obj. 19045.6 iterations 0
Cbc0038I Pass 101: suminf.   11.58050 (43) obj. 19045.6 iterations 72
Cbc0038I Pass 102: suminf.   11.61094 (37) obj. 19045.6 iterations 19
Cbc0038I Pass 103: suminf.    5.13620 (27) obj. 19045.6 iterations 59
Cbc0038I Pass 104: suminf.    5.13620 (27) obj. 19045.6 iterations 4
Cbc0038I Pass 105: suminf.   12.23537 (33) obj. 19045.6 iterations 92
Cbc0038I Pass 106: suminf.   11.89917 (40) obj. 19045.6 iterations 14
Cbc0038I Pass 107: suminf.    7.60043 (46) obj. 19045.6 iterations 101
Cbc0038I Pass 108: suminf.    5.96544 (34) obj. 19045.6 iterations 30
Cbc0038I Pass 109: suminf.   12.50602 (51) obj. 19045.6 iterations 71
Cbc0038I Pass 110: suminf.   12.50602 (51) obj. 19045.6 iterations 0
Cbc0038I Pass 111: suminf.    8.38069 (46) obj. 19045.6 iterations 92
Cbc0038I Pass 112: suminf.    4.48666 (29) obj. 19045.6 iterations 22
Cbc0038I Pass 113: suminf.   10.96769 (49) obj. 19045.6 iterations 64
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 476 rows 167 columns, reduced to 427 rows 144 columns - 34 fixed gives 238, 72 - ok now
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of 19456 - took 0.16 seconds
Cbc0012I Integer solution of 19456 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 476 rows 167 columns, reduced to 332 rows 105 columns - 34 fixed gives 138, 31 - ok now
Cbc0038I Full problem 476 rows 167 columns, reduced to 32 rows 12 columns
Cbc0031I 3 added rows had average density of 9.6666667
Cbc0013I At root node, 75 cuts changed objective from 17408 to 17408 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 24 row cuts average 2.2 elements, 16 column cuts (16 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 1.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 48 row cuts average 42.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0001I Search completed - best objective 19456, took 318 iterations and 0 nodes (0.20 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Cuts at root node changed objective from 17408 to 17408
Probing was tried 1 times and created 40 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Gomory was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Knapsack was tried 1 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
TwoMirCuts was tried 1 times and created 48 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)

Result - Optimal solution found

Objective value:                19456.00000000
Enumerated nodes:               0
Total iterations:               318
Time (CPU seconds):             0.21
Time (Wallclock seconds):       0.21

Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

