Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang6_3_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang6_3_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 306.447 - 0.01 seconds
Cgl0002I 269 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 199 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 61 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 769 rows, 276 columns (276 integer (255 of which binary)) and 2600 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 276 objects (276 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 154 integers unsatisfied sum - 47.3797
Cbc0038I Pass   1: suminf.   20.53306 (91) obj. 365.889 iterations 250
Cbc0038I Pass   2: suminf.   14.71862 (82) obj. 360.046 iterations 53
Cbc0038I Pass   3: suminf.   15.35354 (86) obj. 360.865 iterations 20
Cbc0038I Pass   4: suminf.    8.23091 (50) obj. 393 iterations 76
Cbc0038I Pass   5: suminf.    7.76028 (48) obj. 393 iterations 17
Cbc0038I Pass   6: suminf.    7.50745 (52) obj. 393 iterations 21
Cbc0038I Pass   7: suminf.    4.44359 (50) obj. 394.714 iterations 65
Cbc0038I Pass   8: suminf.    3.21724 (44) obj. 394.123 iterations 18
Cbc0038I Pass   9: suminf.    2.78279 (25) obj. 411.748 iterations 116
Cbc0038I Pass  10: suminf.    1.93865 (22) obj. 411.534 iterations 2
Cbc0038I Pass  11: suminf.    0.00000 (0) obj. 393 iterations 34
Cbc0038I Solution found of 393
Cbc0038I Cleaned solution of 393
Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 581 rows 181 columns - 14 fixed gives 400, 124 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I Round again with cutoff of 383.445
Cbc0038I Pass  12: suminf.   20.53306 (91) obj. 365.889 iterations 0
Cbc0038I Pass  13: suminf.   14.71862 (82) obj. 360.046 iterations 62
Cbc0038I Pass  14: suminf.   15.35354 (86) obj. 360.865 iterations 10
Cbc0038I Pass  15: suminf.   11.90896 (67) obj. 383.445 iterations 123
Cbc0038I Pass  16: suminf.    8.01347 (58) obj. 383.445 iterations 43
Cbc0038I Pass  17: suminf.    8.01347 (58) obj. 383.445 iterations 1
Cbc0038I Pass  18: suminf.    4.25376 (20) obj. 383.445 iterations 81
Cbc0038I Pass  19: suminf.    2.17352 (19) obj. 383.445 iterations 31
Cbc0038I Pass  20: suminf.    2.08709 (20) obj. 383.445 iterations 21
Cbc0038I Pass  21: suminf.    4.88096 (31) obj. 383.445 iterations 50
Cbc0038I Pass  22: suminf.    0.44478 (1) obj. 383.445 iterations 77
Cbc0038I Solution found of 383.445
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 770 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 370
Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 569 rows 175 columns - 67 fixed gives 204, 58 - ok now
Cbc0038I Full problem 769 rows 276 columns, reduced to 68 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I Round again with cutoff of 356.489
Cbc0038I Pass  23: suminf.   19.52356 (111) obj. 356 iterations 33
Cbc0038I Pass  24: suminf.   15.44125 (87) obj. 356.489 iterations 108
Cbc0038I Pass  25: suminf.   15.75065 (97) obj. 356.489 iterations 25
Cbc0038I Pass  26: suminf.   12.48457 (83) obj. 356.489 iterations 94
Cbc0038I Pass  27: suminf.   11.75318 (83) obj. 356.489 iterations 14
Cbc0038I Pass  28: suminf.    9.17828 (54) obj. 356.489 iterations 115
Cbc0038I Pass  29: suminf.    7.15473 (56) obj. 356.489 iterations 62
Cbc0038I Pass  30: suminf.    8.86415 (85) obj. 356.489 iterations 79
Cbc0038I Pass  31: suminf.    8.57832 (84) obj. 356.489 iterations 6
Cbc0038I Pass  32: suminf.    7.14968 (73) obj. 356.489 iterations 93
Cbc0038I Pass  33: suminf.    6.12353 (81) obj. 356.489 iterations 30
Cbc0038I Pass  34: suminf.    7.47284 (76) obj. 356.489 iterations 104
Cbc0038I Pass  35: suminf.    6.35589 (73) obj. 356.489 iterations 24
Cbc0038I Pass  36: suminf.    6.11050 (75) obj. 356.489 iterations 69
Cbc0038I Pass  37: suminf.    6.08622 (73) obj. 356.489 iterations 6
Cbc0038I Pass  38: suminf.    8.23085 (78) obj. 356.489 iterations 84
Cbc0038I Pass  39: suminf.    6.83664 (70) obj. 356.489 iterations 52
Cbc0038I Pass  40: suminf.    4.08327 (56) obj. 356.489 iterations 99
Cbc0038I Pass  41: suminf.    4.02092 (57) obj. 356.489 iterations 9
Cbc0038I Pass  42: suminf.    3.28555 (50) obj. 356.489 iterations 45
Cbc0038I Pass  43: suminf.    1.65388 (61) obj. 356.489 iterations 47
Cbc0038I Pass  44: suminf.    6.48549 (77) obj. 356.489 iterations 117
Cbc0038I Pass  45: suminf.    3.84713 (63) obj. 356.489 iterations 51
Cbc0038I Pass  46: suminf.    4.55662 (67) obj. 356.489 iterations 43
Cbc0038I Pass  47: suminf.    3.82034 (52) obj. 356.489 iterations 20
Cbc0038I Pass  48: suminf.    9.00431 (65) obj. 356.489 iterations 87
Cbc0038I Pass  49: suminf.    5.94675 (57) obj. 356.489 iterations 21
Cbc0038I Pass  50: suminf.    5.87612 (48) obj. 356.489 iterations 109
Cbc0038I Pass  51: suminf.    4.54253 (42) obj. 356.489 iterations 21
Cbc0038I Pass  52: suminf.    4.12238 (53) obj. 356.489 iterations 60
Cbc0038I Pass  53: suminf.    2.90839 (48) obj. 356.489 iterations 31
Cbc0038I Pass  54: suminf.    5.80102 (63) obj. 356.489 iterations 57
Cbc0038I Pass  55: suminf.    4.50506 (58) obj. 356.489 iterations 14
Cbc0038I Pass  56: suminf.    2.12653 (46) obj. 356.489 iterations 33
Cbc0038I Pass  57: suminf.    1.92649 (48) obj. 356.489 iterations 3
Cbc0038I Pass  58: suminf.    6.71485 (59) obj. 356.489 iterations 169
Cbc0038I Pass  59: suminf.    4.12098 (38) obj. 356.489 iterations 17
Cbc0038I Pass  60: suminf.    4.11323 (37) obj. 356.489 iterations 4
Cbc0038I Pass  61: suminf.    1.23744 (26) obj. 356.489 iterations 23
Cbc0038I Pass  62: suminf.    1.23744 (26) obj. 356.489 iterations 1
Cbc0038I Pass  63: suminf.    1.13885 (42) obj. 356.489 iterations 45
Cbc0038I Pass  64: suminf.    1.04129 (40) obj. 356.489 iterations 4
Cbc0038I Pass  65: suminf.    3.83854 (53) obj. 356.489 iterations 35
Cbc0038I Pass  66: suminf.    3.14576 (48) obj. 356.489 iterations 89
Cbc0038I Pass  67: suminf.    3.01242 (34) obj. 356.489 iterations 14
Cbc0038I Pass  68: suminf.    3.42357 (50) obj. 356.489 iterations 72
Cbc0038I Pass  69: suminf.    3.37125 (48) obj. 356.489 iterations 4
Cbc0038I Pass  70: suminf.    0.48946 (1) obj. 356.489 iterations 45
Cbc0038I Solution found of 356.489
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 770 rows 276 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 354
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 668 rows 220 columns - 52 fixed gives 381, 120 - ok now
Cbc0038I Full problem 769 rows 276 columns, reduced to 224 rows 79 columns
Cbc0038I Mini branch and bound improved solution from 354 to 336 (0.31 seconds)
Cbc0038I Round again with cutoff of 326.434
Cbc0038I Pass  71: suminf.   26.07364 (116) obj. 326.434 iterations 72
Cbc0038I Pass  72: suminf.   23.63545 (106) obj. 326.434 iterations 89
Cbc0038I Pass  73: suminf.   21.77903 (100) obj. 326.434 iterations 19
Cbc0038I Pass  74: suminf.   21.15733 (97) obj. 326.434 iterations 11
Cbc0038I Pass  75: suminf.   19.18959 (91) obj. 326.434 iterations 45
Cbc0038I Pass  76: suminf.   16.14921 (85) obj. 326.434 iterations 33
Cbc0038I Pass  77: suminf.   16.10371 (90) obj. 326.434 iterations 16
Cbc0038I Pass  78: suminf.   18.13470 (83) obj. 326.434 iterations 74
Cbc0038I Pass  79: suminf.   17.79355 (96) obj. 326.434 iterations 23
Cbc0038I Pass  80: suminf.   17.49025 (93) obj. 326.434 iterations 55
Cbc0038I Pass  81: suminf.   16.37736 (91) obj. 326.434 iterations 23
Cbc0038I Pass  82: suminf.   19.62366 (72) obj. 326.434 iterations 87
Cbc0038I Pass  83: suminf.   15.16789 (81) obj. 326.434 iterations 71
Cbc0038I Pass  84: suminf.   16.40624 (88) obj. 326.434 iterations 50
Cbc0038I Pass  85: suminf.   20.33152 (100) obj. 326.434 iterations 126
Cbc0038I Pass  86: suminf.   18.36260 (95) obj. 326.434 iterations 115
Cbc0038I Pass  87: suminf.   17.84499 (95) obj. 326.434 iterations 6
Cbc0038I Pass  88: suminf.   20.21505 (95) obj. 326.434 iterations 82
Cbc0038I Pass  89: suminf.   19.27699 (105) obj. 326.434 iterations 39
Cbc0038I Pass  90: suminf.   18.92804 (94) obj. 326.434 iterations 12
Cbc0038I Pass  91: suminf.   18.16077 (102) obj. 326.434 iterations 45
Cbc0038I Pass  92: suminf.   19.05077 (88) obj. 326.434 iterations 48
Cbc0038I Pass  93: suminf.   26.40684 (121) obj. 326.434 iterations 144
Cbc0038I Pass  94: suminf.   19.74988 (97) obj. 326.434 iterations 86
Cbc0038I Pass  95: suminf.   18.71072 (101) obj. 326.434 iterations 18
Cbc0038I Pass  96: suminf.   17.44017 (111) obj. 326.434 iterations 37
Cbc0038I Pass  97: suminf.    9.32383 (77) obj. 326.434 iterations 81
Cbc0038I Pass  98: suminf.    9.36061 (94) obj. 326.434 iterations 35
Cbc0038I Pass  99: suminf.    9.56953 (33) obj. 326.434 iterations 95
Cbc0038I Pass 100: suminf.    7.73568 (38) obj. 326.434 iterations 18
Cbc0038I Pass 101: suminf.    7.73568 (38) obj. 326.434 iterations 3
Cbc0038I Pass 102: suminf.    9.50433 (44) obj. 326.434 iterations 97
Cbc0038I Pass 103: suminf.    7.34460 (38) obj. 326.434 iterations 52
Cbc0038I Pass 104: suminf.    6.88610 (38) obj. 326.434 iterations 4
Cbc0038I Pass 105: suminf.    8.23036 (34) obj. 326.434 iterations 52
Cbc0038I Pass 106: suminf.    6.96970 (36) obj. 326.434 iterations 13
Cbc0038I Pass 107: suminf.    6.90474 (45) obj. 326.434 iterations 46
Cbc0038I Pass 108: suminf.    6.33434 (39) obj. 326.434 iterations 39
Cbc0038I Pass 109: suminf.    8.68781 (43) obj. 326.434 iterations 68
Cbc0038I Pass 110: suminf.    7.86393 (40) obj. 326.434 iterations 33
Cbc0038I Pass 111: suminf.    6.57646 (35) obj. 326.434 iterations 35
Cbc0038I Pass 112: suminf.    5.59435 (33) obj. 326.434 iterations 26
Cbc0038I Pass 113: suminf.    6.32165 (39) obj. 326.434 iterations 59
Cbc0038I Pass 114: suminf.    6.01857 (39) obj. 326.434 iterations 19
Cbc0038I Pass 115: suminf.    9.59082 (42) obj. 326.434 iterations 71
Cbc0038I Pass 116: suminf.    7.88365 (41) obj. 326.434 iterations 56
Cbc0038I Pass 117: suminf.    7.88365 (41) obj. 326.434 iterations 2
Cbc0038I Pass 118: suminf.    5.09741 (28) obj. 326.434 iterations 59
Cbc0038I Pass 119: suminf.    5.00610 (31) obj. 326.434 iterations 25
Cbc0038I Pass 120: suminf.    7.19023 (34) obj. 326.434 iterations 66
Cbc0038I Pass 121: suminf.    6.09061 (31) obj. 326.434 iterations 45
Cbc0038I Pass 122: suminf.    5.58410 (31) obj. 326.434 iterations 54
Cbc0038I Pass 123: suminf.    5.58410 (31) obj. 326.434 iterations 12
Cbc0038I Pass 124: suminf.    5.74120 (32) obj. 326.434 iterations 40
Cbc0038I Pass 125: suminf.    4.42412 (29) obj. 326.434 iterations 50
Cbc0038I Pass 126: suminf.    6.08011 (28) obj. 326.434 iterations 40
Cbc0038I Pass 127: suminf.    5.75214 (28) obj. 326.434 iterations 14
Cbc0038I Pass 128: suminf.    4.65628 (29) obj. 326.434 iterations 25
Cbc0038I Pass 129: suminf.    3.60323 (25) obj. 326.434 iterations 31
Cbc0038I Pass 130: suminf.    7.07031 (21) obj. 326.434 iterations 92
Cbc0038I Pass 131: suminf.    7.07031 (21) obj. 326.434 iterations 10
Cbc0038I Pass 132: suminf.    4.64115 (24) obj. 326.434 iterations 35
Cbc0038I Pass 133: suminf.    3.58759 (21) obj. 326.434 iterations 30
Cbc0038I Pass 134: suminf.   13.95441 (69) obj. 326.434 iterations 115
Cbc0038I Pass 135: suminf.    8.81650 (51) obj. 326.434 iterations 87
Cbc0038I Pass 136: suminf.    6.11692 (25) obj. 326.434 iterations 103
Cbc0038I Pass 137: suminf.    4.41967 (13) obj. 326.434 iterations 37
Cbc0038I Pass 138: suminf.    4.07812 (16) obj. 326.434 iterations 35
Cbc0038I Pass 139: suminf.    3.02456 (13) obj. 326.434 iterations 33
Cbc0038I Pass 140: suminf.    4.41967 (13) obj. 326.434 iterations 24
Cbc0038I Pass 141: suminf.   17.74519 (88) obj. 326.434 iterations 115
Cbc0038I Pass 142: suminf.    7.81969 (42) obj. 326.434 iterations 96
Cbc0038I Pass 143: suminf.    4.07812 (16) obj. 326.434 iterations 66
Cbc0038I Pass 144: suminf.    3.02456 (13) obj. 326.434 iterations 46
Cbc0038I Pass 145: suminf.    4.41967 (13) obj. 326.434 iterations 24
Cbc0038I Pass 146: suminf.    4.41967 (13) obj. 326.434 iterations 11
Cbc0038I Pass 147: suminf.    4.07812 (16) obj. 326.434 iterations 18
Cbc0038I Pass 148: suminf.   16.62678 (99) obj. 326.434 iterations 114
Cbc0038I Pass 149: suminf.    5.92290 (28) obj. 326.434 iterations 83
Cbc0038I Pass 150: suminf.    5.92290 (28) obj. 326.434 iterations 0
Cbc0038I Pass 151: suminf.    6.00154 (36) obj. 326.434 iterations 92
Cbc0038I Pass 152: suminf.    4.94798 (33) obj. 326.434 iterations 29
Cbc0038I Pass 153: suminf.    6.81464 (36) obj. 326.434 iterations 79
Cbc0038I Pass 154: suminf.    6.66993 (38) obj. 326.434 iterations 27
Cbc0038I Pass 155: suminf.    8.86177 (47) obj. 326.434 iterations 65
Cbc0038I Pass 156: suminf.    7.80821 (44) obj. 326.434 iterations 34
Cbc0038I Pass 157: suminf.    7.16780 (38) obj. 326.434 iterations 49
Cbc0038I Pass 158: suminf.    6.81877 (50) obj. 326.434 iterations 33
Cbc0038I Pass 159: suminf.   10.41700 (53) obj. 326.434 iterations 50
Cbc0038I Pass 160: suminf.    5.61045 (37) obj. 326.434 iterations 34
Cbc0038I Pass 161: suminf.    5.58410 (31) obj. 326.434 iterations 31
Cbc0038I Pass 162: suminf.    5.58410 (31) obj. 326.434 iterations 8
Cbc0038I Pass 163: suminf.    6.24597 (39) obj. 326.434 iterations 47
Cbc0038I Pass 164: suminf.    4.88234 (35) obj. 326.434 iterations 37
Cbc0038I Pass 165: suminf.    6.90707 (26) obj. 326.434 iterations 48
Cbc0038I Pass 166: suminf.    4.41967 (13) obj. 326.434 iterations 10
Cbc0038I Pass 167: suminf.    4.07812 (16) obj. 326.434 iterations 25
Cbc0038I Pass 168: suminf.    3.02456 (13) obj. 326.434 iterations 33
Cbc0038I Pass 169: suminf.    4.41967 (13) obj. 326.434 iterations 15
Cbc0038I Pass 170: suminf.   17.68914 (86) obj. 326.434 iterations 120
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 769 rows 276 columns, reduced to 737 rows 257 columns - 55 fixed gives 478, 153 - still too large
Cbc0038I Full problem 769 rows 276 columns, reduced to 273 rows 98 columns
Cbc0038I Mini branch and bound did not improve solution (0.59 seconds)
Cbc0038I After 0.59 seconds - Feasibility pump exiting with objective of 336 - took 0.53 seconds
Cbc0012I Integer solution of 336 found by feasibility pump after 0 iterations and 0 nodes (0.59 seconds)
Cbc0038I Full problem 769 rows 276 columns, reduced to 539 rows 160 columns - 51 fixed gives 200, 44 - ok now
Cbc0038I Full problem 769 rows 276 columns, reduced to 70 rows 25 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 25 added rows had average density of 13.28
Cbc0013I At root node, 29 cuts changed objective from 306.44692 to 335 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 2.6 elements, 37 column cuts (37 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 164 row cuts average 99.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective 336, took 2262 iterations and 0 nodes (0.79 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Cuts at root node changed objective from 306.447 to 335
Probing was tried 3 times and created 284 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
Gomory was tried 2 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Knapsack was tried 2 times and created 15 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Clique was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 2 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
TwoMirCuts was tried 2 times and created 164 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                336.00000000
Enumerated nodes:               0
Total iterations:               2262
Time (CPU seconds):             0.80
Time (Wallclock seconds):       0.82

Total time (CPU seconds):       0.81   (Wallclock seconds):       0.83

