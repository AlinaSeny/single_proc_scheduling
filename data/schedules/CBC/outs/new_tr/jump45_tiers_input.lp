Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump45_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump45_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 51067.8 - 11.17 seconds
Cgl0002I 457 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 896 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 6076 rows, 1810 columns (1810 integer (1764 of which binary)) and 20371 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1810 objects (1810 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1079 integers unsatisfied sum - 315.841
Cbc0038I Pass   1: (15.14 seconds) suminf.  124.55331 (1029) obj. 79068.3 iterations 3470
Cbc0038I Pass   2: (15.48 seconds) suminf.   97.55267 (993) obj. 78906.4 iterations 911
Cbc0038I Pass   3: (15.71 seconds) suminf.   93.97752 (891) obj. 78916.9 iterations 647
Cbc0038I Pass   4: (15.88 seconds) suminf.   87.90754 (888) obj. 78628.3 iterations 438
Cbc0038I Pass   5: (16.01 seconds) suminf.   87.31045 (908) obj. 78582.2 iterations 358
Cbc0038I Pass   6: (16.20 seconds) suminf.   77.76763 (890) obj. 79609.5 iterations 530
Cbc0038I Pass   7: (16.28 seconds) suminf.   78.20935 (864) obj. 79694.7 iterations 192
Cbc0038I Pass   8: (16.38 seconds) suminf.   79.22954 (874) obj. 79727.8 iterations 218
Cbc0038I Pass   9: (16.49 seconds) suminf.   78.83974 (885) obj. 79603.3 iterations 246
Cbc0038I Pass  10: (16.52 seconds) suminf.   78.05246 (874) obj. 79698.9 iterations 53
Cbc0038I Pass  11: (16.64 seconds) suminf.   77.79377 (884) obj. 79711.7 iterations 295
Cbc0038I Pass  12: (16.80 seconds) suminf.   73.04659 (876) obj. 80082.7 iterations 468
Cbc0038I Pass  13: (16.86 seconds) suminf.   72.88419 (878) obj. 79882.6 iterations 135
Cbc0038I Pass  14: (17.04 seconds) suminf.   72.84413 (902) obj. 80321.5 iterations 510
Cbc0038I Pass  15: (17.06 seconds) suminf.   71.88830 (904) obj. 80333 iterations 20
Cbc0038I Pass  16: (17.30 seconds) suminf.   67.28731 (925) obj. 81457.4 iterations 658
Cbc0038I Pass  17: (17.39 seconds) suminf.   65.59009 (921) obj. 80881.9 iterations 188
Cbc0038I Pass  18: (17.40 seconds) suminf.   65.32944 (922) obj. 80783 iterations 16
Cbc0038I Pass  19: (17.63 seconds) suminf.   56.35947 (930) obj. 79890.2 iterations 633
Cbc0038I Pass  20: (17.75 seconds) suminf.   56.17936 (932) obj. 80791 iterations 296
Cbc0038I Pass  21: (18.10 seconds) suminf.   59.10421 (935) obj. 79115.7 iterations 1069
Cbc0038I Pass  22: (18.21 seconds) suminf.   60.80524 (958) obj. 77956.8 iterations 257
Cbc0038I Pass  23: (18.45 seconds) suminf.   57.39646 (928) obj. 79215.6 iterations 649
Cbc0038I Pass  24: (18.57 seconds) suminf.   55.00345 (937) obj. 79629.5 iterations 283
Cbc0038I Pass  25: (18.61 seconds) suminf.   54.21856 (933) obj. 79572.1 iterations 97
Cbc0038I Pass  26: (18.67 seconds) suminf.   54.13683 (939) obj. 79717.4 iterations 119
Cbc0038I Pass  27: (18.79 seconds) suminf.   60.12868 (909) obj. 78740.8 iterations 320
Cbc0038I Pass  28: (18.96 seconds) suminf.   58.32177 (922) obj. 78534.1 iterations 480
Cbc0038I Pass  29: (19.27 seconds) suminf.   55.52738 (954) obj. 77795.1 iterations 977
Cbc0038I Pass  30: (19.37 seconds) suminf.   55.16703 (963) obj. 77395.4 iterations 254
Cbc0038I Pass  31: (19.60 seconds) suminf.   55.49142 (923) obj. 79135.6 iterations 706
Cbc0038I Pass  32: (19.78 seconds) suminf.   53.84823 (960) obj. 80361.4 iterations 515
Cbc0038I Pass  33: (20.15 seconds) suminf.   58.42994 (891) obj. 84141.2 iterations 1136
Cbc0038I Pass  34: (20.28 seconds) suminf.   51.01259 (874) obj. 83970 iterations 368
Cbc0038I Pass  35: (20.39 seconds) suminf.   50.21367 (892) obj. 84007.4 iterations 265
Cbc0038I Pass  36: (20.45 seconds) suminf.   49.73758 (882) obj. 83918.8 iterations 137
Cbc0038I Pass  37: (20.73 seconds) suminf.   54.27893 (880) obj. 90005.8 iterations 885
Cbc0038I Pass  38: (20.88 seconds) suminf.   52.15319 (895) obj. 90361.9 iterations 401
Cbc0038I Pass  39: (21.19 seconds) suminf.   54.17000 (900) obj. 91327.2 iterations 918
Cbc0038I Pass  40: (21.31 seconds) suminf.   53.98126 (883) obj. 90592.2 iterations 283
Cbc0038I Pass  41: (21.57 seconds) suminf.   52.38894 (864) obj. 91265.7 iterations 789
Cbc0038I Pass  42: (21.70 seconds) suminf.   49.81274 (859) obj. 90062.2 iterations 381
Cbc0038I Pass  43: (21.85 seconds) suminf.   50.47640 (876) obj. 90235.8 iterations 403
Cbc0038I Pass  44: (21.94 seconds) suminf.   50.19283 (872) obj. 90316.7 iterations 188
Cbc0038I Pass  45: (22.17 seconds) suminf.   50.51125 (857) obj. 91380.9 iterations 694
Cbc0038I Pass  46: (22.30 seconds) suminf.   48.82797 (883) obj. 91038.3 iterations 362
Cbc0038I Pass  47: (22.69 seconds) suminf.   51.15955 (839) obj. 94083 iterations 1266
Cbc0038I Pass  48: (22.97 seconds) suminf.   48.47819 (866) obj. 97946 iterations 937
Cbc0038I Pass  49: (23.12 seconds) suminf.   47.38588 (861) obj. 99533.8 iterations 417
Cbc0038I Pass  50: (23.23 seconds) suminf.   46.95590 (867) obj. 99408.6 iterations 244
Cbc0038I Pass  51: (23.51 seconds) suminf.   47.47956 (875) obj. 101466 iterations 877
Cbc0038I Pass  52: (23.70 seconds) suminf.   46.96419 (852) obj. 99169.2 iterations 591
Cbc0038I Pass  53: (23.95 seconds) suminf.   44.83642 (875) obj. 101408 iterations 768
Cbc0038I Pass  54: (24.08 seconds) suminf.   48.63724 (878) obj. 101055 iterations 375
Cbc0038I Pass  55: (24.27 seconds) suminf.   48.81623 (881) obj. 100795 iterations 535
Cbc0038I Pass  56: (24.62 seconds) suminf.   47.92048 (842) obj. 99272.3 iterations 1047
Cbc0038I Pass  57: (24.80 seconds) suminf.   46.37795 (850) obj. 99197.5 iterations 468
Cbc0038I Pass  58: (25.04 seconds) suminf.   49.79440 (813) obj. 100619 iterations 677
Cbc0038I Pass  59: (25.26 seconds) suminf.   47.24512 (826) obj. 99109.2 iterations 612
Cbc0038I Pass  60: (25.53 seconds) suminf.   48.23416 (831) obj. 99336 iterations 761
Cbc0038I Pass  61: (25.71 seconds) suminf.   48.72293 (832) obj. 98822.9 iterations 480
Cbc0038I Pass  62: (26.00 seconds) suminf.   54.52868 (830) obj. 101391 iterations 849
Cbc0038I Pass  63: (26.36 seconds) suminf.   49.13462 (855) obj. 99021 iterations 1073
Cbc0038I Pass  64: (26.40 seconds) suminf.   48.96452 (821) obj. 99018.8 iterations 84
Cbc0038I Pass  65: (26.63 seconds) suminf.   48.36729 (808) obj. 99839.4 iterations 656
Cbc0038I Pass  66: (26.71 seconds) suminf.   47.91190 (814) obj. 99345 iterations 184
Cbc0038I Pass  67: (27.05 seconds) suminf.   47.39577 (828) obj. 105022 iterations 1012
Cbc0038I Pass  68: (27.19 seconds) suminf.   45.90102 (825) obj. 107080 iterations 323
Cbc0038I Pass  69: (27.42 seconds) suminf.   44.57668 (839) obj. 105773 iterations 638
Cbc0038I Pass  70: (27.52 seconds) suminf.   43.91228 (838) obj. 105911 iterations 231
Cbc0038I Pass  71: (27.87 seconds) suminf.   46.04852 (898) obj. 107084 iterations 1069
Cbc0038I Pass  72: (28.00 seconds) suminf.   44.24587 (823) obj. 107081 iterations 310
Cbc0038I Pass  73: (28.22 seconds) suminf.   45.10958 (827) obj. 107063 iterations 640
Cbc0038I Pass  74: (28.30 seconds) suminf.   44.39516 (827) obj. 107113 iterations 180
Cbc0038I Pass  75: (28.31 seconds) suminf.   44.81110 (827) obj. 107053 iterations 11
Cbc0038I Pass  76: (28.64 seconds) suminf.   52.96258 (801) obj. 104167 iterations 972
Cbc0038I Pass  77: (28.88 seconds) suminf.   52.21773 (782) obj. 104439 iterations 642
Cbc0038I Pass  78: (29.15 seconds) suminf.   52.88664 (789) obj. 104948 iterations 839
Cbc0038I Pass  79: (29.39 seconds) suminf.   49.03650 (801) obj. 104510 iterations 687
Cbc0038I Pass  80: (29.41 seconds) suminf.   48.32162 (796) obj. 104555 iterations 48
Cbc0038I Pass  81: (29.73 seconds) suminf.   47.31489 (732) obj. 107443 iterations 903
Cbc0038I Pass  82: (29.96 seconds) suminf.   46.03711 (812) obj. 106807 iterations 621
Cbc0038I Pass  83: (30.05 seconds) suminf.   45.80660 (784) obj. 105347 iterations 199
Cbc0038I Pass  84: (30.34 seconds) suminf.   46.18314 (789) obj. 103570 iterations 876
Cbc0038I Pass  85: (30.47 seconds) suminf.   43.44937 (783) obj. 103792 iterations 324
Cbc0038I Pass  86: (30.68 seconds) suminf.   44.72762 (807) obj. 104124 iterations 607
Cbc0038I Pass  87: (30.84 seconds) suminf.   47.07062 (801) obj. 105082 iterations 454
Cbc0038I Pass  88: (30.90 seconds) suminf.   46.58408 (783) obj. 105081 iterations 157
Cbc0038I Pass  89: (31.12 seconds) suminf.   50.56306 (806) obj. 104705 iterations 609
Cbc0038I Pass  90: (31.29 seconds) suminf.   48.12736 (826) obj. 104830 iterations 471
Cbc0038I Pass  91: (31.47 seconds) suminf.   46.03773 (802) obj. 104588 iterations 448
Cbc0038I Pass  92: (31.53 seconds) suminf.   46.17303 (775) obj. 104645 iterations 132
Cbc0038I Pass  93: (31.86 seconds) suminf.   47.29690 (745) obj. 102360 iterations 1034
Cbc0038I Pass  94: (32.06 seconds) suminf.   46.41676 (774) obj. 105043 iterations 576
Cbc0038I Pass  95: (32.17 seconds) suminf.   46.08029 (778) obj. 107933 iterations 253
Cbc0038I Pass  96: (32.36 seconds) suminf.   47.54743 (731) obj. 107485 iterations 562
Cbc0038I Pass  97: (32.48 seconds) suminf.   45.64931 (728) obj. 106958 iterations 321
Cbc0038I Pass  98: (32.59 seconds) suminf.   47.41734 (742) obj. 106828 iterations 296
Cbc0038I Pass  99: (32.91 seconds) suminf.   48.85423 (802) obj. 104765 iterations 959
Cbc0038I Pass 100: (33.55 seconds) suminf.  104.63533 (897) obj. 108315 iterations 2048
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 150 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6076 rows 1810 columns, reduced to 5686 rows 1646 columns - too large
Cbc0038I Mini branch and bound did not improve solution (33.64 seconds)
Cbc0038I After 33.64 seconds - Feasibility pump exiting - took 19.85 seconds
Cbc0031I 46 added rows had average density of 97
Cbc0013I At root node, 46 cuts changed objective from 51067.754 to 53377.166 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 23 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 108 row cuts average 170.0 elements, 0 column cuts (0 active)  in 1.252 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 310 row cuts average 130.6 elements, 0 column cuts (0 active)  in 0.992 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53377.166 (70.92 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 53982.095 (490.60 seconds)
Cbc0010I After 200 nodes, 7 on tree, 1e+50 best solution, best possible 53982.095 (850.83 seconds)
Cbc0010I After 300 nodes, 5 on tree, 1e+50 best solution, best possible 53982.095 (1144.30 seconds)
Cbc0010I After 400 nodes, 24 on tree, 1e+50 best solution, best possible 53982.095 (1467.45 seconds)
Cbc0010I After 500 nodes, 43 on tree, 1e+50 best solution, best possible 53982.095 (1709.79 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53982.095), took 2740245 iterations and 540 nodes (1798.75 seconds)
Cbc0032I Strong branching done 5936 times (555847 iterations), fathomed 11 nodes and fixed 82 variables
Cbc0035I Maximum depth 56, 0 variables fixed on reduced cost
Cuts at root node changed objective from 51067.8 to 53377.2
Probing was tried 122 times and created 1394 cuts of which 0 were active after adding rounds of cuts (0.562 seconds)
Gomory was tried 114 times and created 274 cuts of which 0 were active after adding rounds of cuts (3.168 seconds)
Knapsack was tried 114 times and created 377 cuts of which 0 were active after adding rounds of cuts (0.227 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
FlowCover was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
TwoMirCuts was tried 114 times and created 2367 cuts of which 0 were active after adding rounds of cuts (2.154 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.101 seconds)
ImplicationCuts was tried 35 times and created 49 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53982.095
Enumerated nodes:               540
Total iterations:               2740245
Time (CPU seconds):             1798.75
Time (Wallclock seconds):       1800.81

Total time (CPU seconds):       1798.78   (Wallclock seconds):       1800.84

