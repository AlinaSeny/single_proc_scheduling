Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_50_down_left_input.lp sec 1800 solve solu solutions/new_tr/jump_3_50_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 53377.3 - 9.68 seconds
Cgl0002I 612 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 643 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 6914 rows, 2008 columns (2008 integer (1957 of which binary)) and 23263 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2008 objects (2008 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1283 integers unsatisfied sum - 334.895
Cbc0038I Pass   1: (25.04 seconds) suminf.  122.57090 (1032) obj. 78578.3 iterations 4891
Cbc0038I Pass   2: (25.48 seconds) suminf.  112.58762 (965) obj. 78204.5 iterations 1159
Cbc0038I Pass   3: (25.67 seconds) suminf.  105.68803 (963) obj. 78067.9 iterations 449
Cbc0038I Pass   4: (25.87 seconds) suminf.   97.60983 (886) obj. 77924.5 iterations 442
Cbc0038I Pass   5: (25.88 seconds) suminf.   97.19017 (885) obj. 77908.4 iterations 6
Cbc0038I Pass   6: (26.11 seconds) suminf.   99.38198 (855) obj. 77691.8 iterations 559
Cbc0038I Pass   7: (26.18 seconds) suminf.   98.05099 (855) obj. 77690.3 iterations 130
Cbc0038I Pass   8: (26.22 seconds) suminf.   98.20984 (844) obj. 77751.5 iterations 57
Cbc0038I Pass   9: (26.30 seconds) suminf.   97.12330 (861) obj. 77737.3 iterations 171
Cbc0038I Pass  10: (26.34 seconds) suminf.   97.02429 (842) obj. 77732.8 iterations 63
Cbc0038I Pass  11: (26.50 seconds) suminf.   93.83259 (859) obj. 77631.9 iterations 304
Cbc0038I Pass  12: (26.55 seconds) suminf.   93.84288 (822) obj. 77623 iterations 97
Cbc0038I Pass  13: (26.68 seconds) suminf.   92.54863 (820) obj. 77613.8 iterations 254
Cbc0038I Pass  14: (26.72 seconds) suminf.   92.32276 (819) obj. 77668.3 iterations 71
Cbc0038I Pass  15: (26.82 seconds) suminf.   92.04622 (812) obj. 77382.9 iterations 194
Cbc0038I Pass  16: (26.89 seconds) suminf.   91.02098 (810) obj. 77465.1 iterations 137
Cbc0038I Pass  17: (27.11 seconds) suminf.   89.41062 (783) obj. 78008.9 iterations 480
Cbc0038I Pass  18: (27.23 seconds) suminf.   84.30533 (805) obj. 78560 iterations 238
Cbc0038I Pass  19: (27.32 seconds) suminf.   84.44735 (790) obj. 78321.6 iterations 184
Cbc0038I Pass  20: (27.40 seconds) suminf.   83.14500 (790) obj. 78053.1 iterations 166
Cbc0038I Pass  21: (27.62 seconds) suminf.   79.12652 (820) obj. 78460.4 iterations 554
Cbc0038I Pass  22: (27.74 seconds) suminf.   76.58207 (826) obj. 78541.2 iterations 259
Cbc0038I Pass  23: (27.89 seconds) suminf.   77.72749 (807) obj. 82186.2 iterations 338
Cbc0038I Pass  24: (27.93 seconds) suminf.   77.80732 (810) obj. 82061.2 iterations 63
Cbc0038I Pass  25: (28.00 seconds) suminf.   79.26390 (798) obj. 78837.4 iterations 151
Cbc0038I Pass  26: (28.06 seconds) suminf.   77.54144 (806) obj. 78651.1 iterations 132
Cbc0038I Pass  27: (28.09 seconds) suminf.   77.06579 (807) obj. 78599.2 iterations 33
Cbc0038I Pass  28: (28.26 seconds) suminf.   73.33015 (776) obj. 77355.6 iterations 449
Cbc0038I Pass  29: (28.36 seconds) suminf.   75.92782 (760) obj. 77302.5 iterations 183
Cbc0038I Pass  30: (28.50 seconds) suminf.   73.33892 (749) obj. 77479.3 iterations 344
Cbc0038I Pass  31: (28.67 seconds) suminf.   71.19877 (811) obj. 77465.9 iterations 442
Cbc0038I Pass  32: (28.75 seconds) suminf.   72.18624 (793) obj. 77587.4 iterations 157
Cbc0038I Pass  33: (28.81 seconds) suminf.   71.37700 (808) obj. 77465.7 iterations 127
Cbc0038I Pass  34: (29.28 seconds) suminf.  108.20728 (760) obj. 82001.4 iterations 1375
Cbc0038I Pass  35: (29.83 seconds) suminf.   73.87251 (711) obj. 77830.2 iterations 1629
Cbc0038I Pass  36: (29.95 seconds) suminf.   73.28114 (711) obj. 77950.8 iterations 256
Cbc0038I Pass  37: (30.03 seconds) suminf.   72.58855 (714) obj. 78135.6 iterations 182
Cbc0038I Pass  38: (30.11 seconds) suminf.   72.75441 (704) obj. 78210.8 iterations 170
Cbc0038I Pass  39: (30.19 seconds) suminf.   71.72685 (693) obj. 77841.4 iterations 186
Cbc0038I Pass  40: (30.24 seconds) suminf.   71.17828 (693) obj. 77818.4 iterations 101
Cbc0038I Pass  41: (30.28 seconds) suminf.   71.48295 (688) obj. 77842.9 iterations 94
Cbc0038I Pass  42: (30.91 seconds) suminf.   95.95800 (734) obj. 82759.2 iterations 1948
Cbc0038I Pass  43: (31.28 seconds) suminf.   73.85774 (665) obj. 82282.7 iterations 1064
Cbc0038I Pass  44: (31.34 seconds) suminf.   74.95165 (663) obj. 82361.6 iterations 134
Cbc0038I Pass  45: (31.50 seconds) suminf.   69.92910 (682) obj. 82211 iterations 406
Cbc0038I Pass  46: (31.53 seconds) suminf.   68.53294 (678) obj. 82223.8 iterations 76
Cbc0038I Pass  47: (31.68 seconds) suminf.   63.37449 (660) obj. 88855.1 iterations 377
Cbc0038I Pass  48: (31.74 seconds) suminf.   64.31016 (655) obj. 88940.7 iterations 130
Cbc0038I Pass  49: (31.94 seconds) suminf.   61.62425 (643) obj. 89621 iterations 552
Cbc0038I Pass  50: (31.97 seconds) suminf.   61.37175 (644) obj. 89617.1 iterations 72
Cbc0038I Pass  51: (32.11 seconds) suminf.   61.47298 (653) obj. 90894.7 iterations 371
Cbc0038I Pass  52: (32.16 seconds) suminf.   59.47386 (636) obj. 94911.3 iterations 103
Cbc0038I Pass  53: (32.18 seconds) suminf.   58.96882 (630) obj. 95623.1 iterations 39
Cbc0038I Pass  54: (32.24 seconds) suminf.   57.71683 (641) obj. 95618.8 iterations 137
Cbc0038I Pass  55: (32.35 seconds) suminf.   58.62070 (658) obj. 96678.3 iterations 253
Cbc0038I Pass  56: (32.47 seconds) suminf.   57.77109 (649) obj. 95964.5 iterations 270
Cbc0038I Pass  57: (32.54 seconds) suminf.   56.60534 (652) obj. 98237.8 iterations 145
Cbc0038I Pass  58: (32.58 seconds) suminf.   57.12018 (635) obj. 98778.5 iterations 107
Cbc0038I Pass  59: (32.68 seconds) suminf.   56.90657 (626) obj. 98231.9 iterations 229
Cbc0038I Pass  60: (32.80 seconds) suminf.   54.62090 (632) obj. 98572 iterations 302
Cbc0038I Pass  61: (33.09 seconds) suminf.   53.52652 (620) obj. 98889.4 iterations 871
Cbc0038I Pass  62: (33.17 seconds) suminf.   52.99298 (618) obj. 98553.1 iterations 195
Cbc0038I Pass  63: (33.23 seconds) suminf.   52.25132 (623) obj. 98555.2 iterations 164
Cbc0038I Pass  64: (33.44 seconds) suminf.   53.24016 (615) obj. 98206.2 iterations 677
Cbc0038I Pass  65: (33.55 seconds) suminf.   52.98766 (628) obj. 98561 iterations 249
Cbc0038I Pass  66: (33.65 seconds) suminf.   53.68413 (627) obj. 98236.7 iterations 248
Cbc0038I Pass  67: (33.74 seconds) suminf.   53.50525 (621) obj. 99892.3 iterations 219
Cbc0038I Pass  68: (34.08 seconds) suminf.   51.12414 (558) obj. 97984.1 iterations 1082
Cbc0038I Pass  69: (34.18 seconds) suminf.   49.37427 (560) obj. 98491.1 iterations 266
Cbc0038I Pass  70: (34.34 seconds) suminf.   46.35005 (565) obj. 97709.1 iterations 431
Cbc0038I Pass  71: (34.38 seconds) suminf.   45.15098 (557) obj. 98515.2 iterations 100
Cbc0038I Pass  72: (34.66 seconds) suminf.   44.04950 (585) obj. 98962.4 iterations 822
Cbc0038I Pass  73: (34.69 seconds) suminf.   43.39727 (583) obj. 98990.1 iterations 67
Cbc0038I Pass  74: (34.88 seconds) suminf.   43.22100 (589) obj. 102093 iterations 538
Cbc0038I Pass  75: (34.93 seconds) suminf.   42.08341 (596) obj. 101880 iterations 104
Cbc0038I Pass  76: (35.06 seconds) suminf.   41.42600 (601) obj. 98540.3 iterations 339
Cbc0038I Pass  77: (35.21 seconds) suminf.   42.93188 (585) obj. 93980.7 iterations 431
Cbc0038I Pass  78: (35.32 seconds) suminf.   41.63196 (585) obj. 93058.1 iterations 251
Cbc0038I Pass  79: (35.39 seconds) suminf.   41.17276 (582) obj. 93141.2 iterations 140
Cbc0038I Pass  80: (35.59 seconds) suminf.   40.36811 (584) obj. 93073.6 iterations 573
Cbc0038I Pass  81: (35.64 seconds) suminf.   39.97389 (582) obj. 93079.1 iterations 119
Cbc0038I Pass  82: (35.85 seconds) suminf.   42.01090 (572) obj. 93828.1 iterations 642
Cbc0038I Pass  83: (35.98 seconds) suminf.   42.43628 (597) obj. 93836.3 iterations 288
Cbc0038I Pass  84: (36.17 seconds) suminf.   40.23738 (588) obj. 94324 iterations 484
Cbc0038I Pass  85: (36.22 seconds) suminf.   40.96244 (589) obj. 94476.8 iterations 123
Cbc0038I Pass  86: (36.43 seconds) suminf.   41.91003 (563) obj. 98609.1 iterations 653
Cbc0038I Pass  87: (36.57 seconds) suminf.   41.56149 (578) obj. 98367.7 iterations 331
Cbc0038I Pass  88: (36.76 seconds) suminf.   40.45938 (568) obj. 98249 iterations 554
Cbc0038I Pass  89: (36.80 seconds) suminf.   42.14969 (570) obj. 98366.6 iterations 87
Cbc0038I Pass  90: (36.95 seconds) suminf.   41.18463 (570) obj. 98249.6 iterations 399
Cbc0038I Pass  91: (37.00 seconds) suminf.   40.57249 (577) obj. 98368.2 iterations 140
Cbc0038I Pass  92: (37.28 seconds) suminf.   42.01702 (574) obj. 91667.5 iterations 919
Cbc0038I Pass  93: (37.40 seconds) suminf.   42.92055 (590) obj. 91625.9 iterations 287
Cbc0038I Pass  94: (37.41 seconds) suminf.   42.92055 (590) obj. 91625.9 iterations 2
Cbc0038I Pass  95: (37.57 seconds) suminf.   41.01605 (561) obj. 91637.5 iterations 499
Cbc0038I Pass  96: (37.66 seconds) suminf.   40.30323 (563) obj. 91512.1 iterations 197
Cbc0038I Pass  97: (37.83 seconds) suminf.   42.44619 (574) obj. 91282.5 iterations 515
Cbc0038I Pass  98: (37.96 seconds) suminf.   40.37890 (559) obj. 91734.8 iterations 363
Cbc0038I Pass  99: (37.96 seconds) suminf.   40.37890 (559) obj. 91734.8 iterations 0
Cbc0038I Pass 100: (38.38 seconds) suminf.   74.21293 (680) obj. 97217.5 iterations 1330
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 250 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6914 rows 2008 columns, reduced to 5795 rows 1658 columns - too large
Cbc0038I Mini branch and bound did not improve solution (38.74 seconds)
Cbc0038I After 38.74 seconds - Feasibility pump exiting - took 15.90 seconds
Cbc0031I 33 added rows had average density of 61.575758
Cbc0013I At root node, 33 cuts changed objective from 53625.706 to 53841.848 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 7 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 57 row cuts average 105.8 elements, 0 column cuts (0 active)  in 1.627 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 65 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.740 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53842 (47.05 seconds)
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 53844 (218.77 seconds)
Cbc0010I After 200 nodes, 21 on tree, 1e+50 best solution, best possible 53844 (384.48 seconds)
Cbc0010I After 300 nodes, 17 on tree, 1e+50 best solution, best possible 53844 (578.03 seconds)
Cbc0010I After 400 nodes, 25 on tree, 1e+50 best solution, best possible 53844 (753.30 seconds)
Cbc0010I After 500 nodes, 35 on tree, 1e+50 best solution, best possible 53844 (920.75 seconds)
Cbc0010I After 600 nodes, 44 on tree, 1e+50 best solution, best possible 53844 (1094.56 seconds)
Cbc0010I After 700 nodes, 49 on tree, 1e+50 best solution, best possible 53844 (1261.26 seconds)
Cbc0010I After 800 nodes, 49 on tree, 1e+50 best solution, best possible 53844 (1428.12 seconds)
Cbc0010I After 900 nodes, 58 on tree, 1e+50 best solution, best possible 53844 (1629.03 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53844), took 1786913 iterations and 989 nodes (1787.97 seconds)
Cbc0032I Strong branching done 8362 times (779013 iterations), fathomed 27 nodes and fixed 78 variables
Cbc0035I Maximum depth 138, 0 variables fixed on reduced cost
Cuts at root node changed objective from 53625.7 to 53842
Probing was tried 10 times and created 7 cuts of which 0 were active after adding rounds of cuts (0.154 seconds)
Gomory was tried 152 times and created 95 cuts of which 0 were active after adding rounds of cuts (5.318 seconds)
Knapsack was tried 152 times and created 73 cuts of which 0 were active after adding rounds of cuts (0.365 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 65 cuts of which 0 were active after adding rounds of cuts (0.740 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.142 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53844.000
Enumerated nodes:               989
Total iterations:               1786913
Time (CPU seconds):             1787.97
Time (Wallclock seconds):       1788.12

Total time (CPU seconds):       1788.00   (Wallclock seconds):       1788.17

