Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag322_up_right_input.lp sec 1800 solve solu transitive/dag322_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.39398e+06 - 0.87 seconds
Cgl0002I 2197 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1304 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 107 strengthened rows, 0 substitutions
Cgl0004I processed model has 6948 rows, 2249 columns (2249 integer (2189 of which binary)) and 23173 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2249 objects (2249 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 963 integers unsatisfied sum - 191.491
Cbc0038I Pass   1: (2.31 seconds) suminf.  121.31385 (925) obj. 1.54459e+06 iterations 1863
Cbc0038I Pass   2: (2.48 seconds) suminf.  114.22658 (916) obj. 1.676e+06 iterations 464
Cbc0038I Pass   3: (2.50 seconds) suminf.  114.68270 (916) obj. 1.68855e+06 iterations 16
Cbc0038I Pass   4: (2.75 seconds) suminf.  107.20447 (904) obj. 1.57705e+06 iterations 747
Cbc0038I Pass   5: (2.87 seconds) suminf.  105.73932 (906) obj. 1.57039e+06 iterations 249
Cbc0038I Pass   6: (3.05 seconds) suminf.   96.55121 (910) obj. 1.59826e+06 iterations 488
Cbc0038I Pass   7: (3.14 seconds) suminf.   96.10172 (886) obj. 1.57623e+06 iterations 164
Cbc0038I Pass   8: (3.33 seconds) suminf.   84.37218 (912) obj. 1.6108e+06 iterations 526
Cbc0038I Pass   9: (3.37 seconds) suminf.   84.04971 (908) obj. 1.60731e+06 iterations 79
Cbc0038I Pass  10: (3.53 seconds) suminf.   79.31786 (880) obj. 1.73138e+06 iterations 403
Cbc0038I Pass  11: (3.57 seconds) suminf.   78.76825 (880) obj. 1.73112e+06 iterations 77
Cbc0038I Pass  12: (3.82 seconds) suminf.   70.49473 (852) obj. 1.7273e+06 iterations 697
Cbc0038I Pass  13: (3.87 seconds) suminf.   70.25193 (851) obj. 1.72791e+06 iterations 121
Cbc0038I Pass  14: (3.90 seconds) suminf.   69.63841 (857) obj. 1.72774e+06 iterations 55
Cbc0038I Pass  15: (4.07 seconds) suminf.   67.65585 (861) obj. 1.72621e+06 iterations 440
Cbc0038I Pass  16: (4.13 seconds) suminf.   67.72095 (856) obj. 1.72642e+06 iterations 130
Cbc0038I Pass  17: (4.30 seconds) suminf.   68.36285 (875) obj. 1.7317e+06 iterations 451
Cbc0038I Pass  18: (4.42 seconds) suminf.   64.69717 (869) obj. 1.72613e+06 iterations 289
Cbc0038I Pass  19: (4.59 seconds) suminf.   64.65855 (853) obj. 1.67723e+06 iterations 455
Cbc0038I Pass  20: (4.71 seconds) suminf.   62.59435 (841) obj. 1.68532e+06 iterations 259
Cbc0038I Pass  21: (4.84 seconds) suminf.   61.51598 (867) obj. 1.67566e+06 iterations 303
Cbc0038I Pass  22: (4.95 seconds) suminf.   59.85306 (876) obj. 1.72832e+06 iterations 232
Cbc0038I Pass  23: (4.95 seconds) suminf.   59.85306 (876) obj. 1.72832e+06 iterations 0
Cbc0038I Pass  24: (5.17 seconds) suminf.   56.98780 (812) obj. 1.72186e+06 iterations 626
Cbc0038I Pass  25: (5.23 seconds) suminf.   55.31718 (804) obj. 1.72252e+06 iterations 116
Cbc0038I Pass  26: (5.25 seconds) suminf.   55.08055 (801) obj. 1.7225e+06 iterations 12
Cbc0038I Pass  27: (5.40 seconds) suminf.   55.02894 (793) obj. 1.71395e+06 iterations 419
Cbc0038I Pass  28: (5.48 seconds) suminf.   54.53696 (783) obj. 1.72424e+06 iterations 153
Cbc0038I Pass  29: (5.67 seconds) suminf.   54.48048 (768) obj. 1.67635e+06 iterations 529
Cbc0038I Pass  30: (5.71 seconds) suminf.   54.51978 (780) obj. 1.67596e+06 iterations 92
Cbc0038I Pass  31: (5.90 seconds) suminf.   50.32641 (778) obj. 1.6775e+06 iterations 535
Cbc0038I Pass  32: (5.93 seconds) suminf.   49.86808 (775) obj. 1.6774e+06 iterations 52
Cbc0038I Pass  33: (6.10 seconds) suminf.   48.43024 (769) obj. 1.68397e+06 iterations 482
Cbc0038I Pass  34: (6.11 seconds) suminf.   48.63796 (770) obj. 1.68345e+06 iterations 7
Cbc0038I Pass  35: (6.33 seconds) suminf.   48.54193 (786) obj. 1.77898e+06 iterations 639
Cbc0038I Pass  36: (6.39 seconds) suminf.   48.39204 (783) obj. 1.78841e+06 iterations 151
Cbc0038I Pass  37: (6.57 seconds) suminf.   48.15461 (767) obj. 1.76827e+06 iterations 495
Cbc0038I Pass  38: (6.60 seconds) suminf.   47.45782 (766) obj. 1.7854e+06 iterations 74
Cbc0038I Pass  39: (6.82 seconds) suminf.   53.34830 (770) obj. 1.74747e+06 iterations 637
Cbc0038I Pass  40: (6.94 seconds) suminf.   48.83677 (748) obj. 1.74818e+06 iterations 317
Cbc0038I Pass  41: (7.07 seconds) suminf.   48.19372 (747) obj. 1.75486e+06 iterations 363
Cbc0038I Pass  42: (7.09 seconds) suminf.   48.71679 (752) obj. 1.75527e+06 iterations 30
Cbc0038I Pass  43: (7.21 seconds) suminf.   49.37597 (755) obj. 1.75124e+06 iterations 326
Cbc0038I Pass  44: (7.22 seconds) suminf.   49.41613 (760) obj. 1.75129e+06 iterations 21
Cbc0038I Pass  45: (7.33 seconds) suminf.   47.99621 (743) obj. 1.75249e+06 iterations 276
Cbc0038I Pass  46: (7.35 seconds) suminf.   47.85195 (748) obj. 1.75261e+06 iterations 42
Cbc0038I Pass  47: (7.52 seconds) suminf.   51.65505 (730) obj. 1.75002e+06 iterations 479
Cbc0038I Pass  48: (7.57 seconds) suminf.   50.88929 (732) obj. 1.75154e+06 iterations 117
Cbc0038I Pass  49: (7.79 seconds) suminf.   49.48306 (730) obj. 1.74004e+06 iterations 667
Cbc0038I Pass  50: (7.85 seconds) suminf.   47.74731 (728) obj. 1.73846e+06 iterations 144
Cbc0038I Pass  51: (7.89 seconds) suminf.   47.63948 (719) obj. 1.73974e+06 iterations 70
Cbc0038I Pass  52: (8.04 seconds) suminf.   49.40932 (716) obj. 1.70929e+06 iterations 444
Cbc0038I Pass  53: (8.10 seconds) suminf.   48.93667 (714) obj. 1.70617e+06 iterations 147
Cbc0038I Pass  54: (8.24 seconds) suminf.   48.62094 (708) obj. 1.72281e+06 iterations 387
Cbc0038I Pass  55: (8.31 seconds) suminf.   48.50299 (710) obj. 1.72877e+06 iterations 190
Cbc0038I Pass  56: (8.51 seconds) suminf.   48.81903 (711) obj. 1.73579e+06 iterations 614
Cbc0038I Pass  57: (8.61 seconds) suminf.   47.20804 (707) obj. 1.78184e+06 iterations 219
Cbc0038I Pass  58: (8.70 seconds) suminf.   46.16066 (705) obj. 1.73248e+06 iterations 221
Cbc0038I Pass  59: (8.85 seconds) suminf.   44.32721 (716) obj. 1.68512e+06 iterations 427
Cbc0038I Pass  60: (8.92 seconds) suminf.   44.76671 (690) obj. 1.68675e+06 iterations 141
Cbc0038I Pass  61: (9.05 seconds) suminf.   44.23255 (719) obj. 1.69008e+06 iterations 370
Cbc0038I Pass  62: (9.08 seconds) suminf.   44.15542 (703) obj. 1.68429e+06 iterations 39
Cbc0038I Pass  63: (9.24 seconds) suminf.   45.98234 (692) obj. 1.68586e+06 iterations 504
Cbc0038I Pass  64: (9.34 seconds) suminf.   43.97551 (693) obj. 1.68448e+06 iterations 236
Cbc0038I Pass  65: (9.35 seconds) suminf.   43.97551 (693) obj. 1.68448e+06 iterations 1
Cbc0038I Pass  66: (9.50 seconds) suminf.   44.23515 (691) obj. 1.79123e+06 iterations 411
Cbc0038I Pass  67: (9.55 seconds) suminf.   44.53246 (688) obj. 1.78646e+06 iterations 121
Cbc0038I Pass  68: (9.69 seconds) suminf.   44.58226 (660) obj. 1.77764e+06 iterations 383
Cbc0038I Pass  69: (9.73 seconds) suminf.   41.90151 (669) obj. 1.77821e+06 iterations 73
Cbc0038I Pass  70: (9.84 seconds) suminf.   42.33784 (660) obj. 1.7665e+06 iterations 290
Cbc0038I Pass  71: (9.86 seconds) suminf.   42.64026 (666) obj. 1.76619e+06 iterations 36
Cbc0038I Pass  72: (10.00 seconds) suminf.   45.52768 (680) obj. 1.8297e+06 iterations 331
Cbc0038I Pass  73: (10.05 seconds) suminf.   43.92765 (674) obj. 1.83373e+06 iterations 125
Cbc0038I Pass  74: (10.19 seconds) suminf.   46.46198 (657) obj. 1.84082e+06 iterations 394
Cbc0038I Pass  75: (10.24 seconds) suminf.   45.14480 (648) obj. 1.84114e+06 iterations 110
Cbc0038I Pass  76: (10.35 seconds) suminf.   43.63814 (671) obj. 1.83566e+06 iterations 297
Cbc0038I Pass  77: (10.37 seconds) suminf.   43.57721 (669) obj. 1.8356e+06 iterations 16
Cbc0038I Pass  78: (10.55 seconds) suminf.   48.15666 (660) obj. 1.8738e+06 iterations 585
Cbc0038I Pass  79: (10.61 seconds) suminf.   46.83313 (651) obj. 1.87533e+06 iterations 143
Cbc0038I Pass  80: (10.76 seconds) suminf.   47.70485 (659) obj. 1.89208e+06 iterations 438
Cbc0038I Pass  81: (10.81 seconds) suminf.   46.00934 (677) obj. 1.8795e+06 iterations 126
Cbc0038I Pass  82: (10.92 seconds) suminf.   44.82455 (657) obj. 2.00256e+06 iterations 266
Cbc0038I Pass  83: (10.98 seconds) suminf.   43.73382 (651) obj. 2.0214e+06 iterations 152
Cbc0038I Pass  84: (11.14 seconds) suminf.   49.24933 (638) obj. 2.06926e+06 iterations 469
Cbc0038I Pass  85: (11.21 seconds) suminf.   44.77262 (633) obj. 2.06911e+06 iterations 187
Cbc0038I Pass  86: (11.24 seconds) suminf.   44.29721 (630) obj. 2.06911e+06 iterations 63
Cbc0038I Pass  87: (11.25 seconds) suminf.   43.82679 (629) obj. 2.06914e+06 iterations 28
Cbc0038I Pass  88: (11.40 seconds) suminf.   51.84799 (638) obj. 2.07129e+06 iterations 428
Cbc0038I Pass  89: (11.44 seconds) suminf.   49.50396 (644) obj. 2.07242e+06 iterations 90
Cbc0038I Pass  90: (11.46 seconds) suminf.   49.25527 (657) obj. 2.07211e+06 iterations 49
Cbc0038I Pass  91: (11.50 seconds) suminf.   48.73400 (649) obj. 2.07263e+06 iterations 112
Cbc0038I Pass  92: (11.51 seconds) suminf.   48.58550 (649) obj. 2.07263e+06 iterations 1
Cbc0038I Pass  93: (11.59 seconds) suminf.   47.96968 (674) obj. 2.07251e+06 iterations 179
Cbc0038I Pass  94: (11.61 seconds) suminf.   47.63332 (662) obj. 2.07259e+06 iterations 39
Cbc0038I Pass  95: (11.74 seconds) suminf.   50.78255 (642) obj. 2.07144e+06 iterations 371
Cbc0038I Pass  96: (11.79 seconds) suminf.   49.44369 (626) obj. 2.07132e+06 iterations 123
Cbc0038I Pass  97: (11.81 seconds) suminf.   48.90793 (625) obj. 2.07153e+06 iterations 39
Cbc0038I Pass  98: (11.92 seconds) suminf.   49.06996 (646) obj. 2.06622e+06 iterations 270
Cbc0038I Pass  99: (11.97 seconds) suminf.   49.22926 (634) obj. 2.07024e+06 iterations 118
Cbc0038I Pass 100: (12.27 seconds) suminf.   68.98570 (608) obj. 2.1181e+06 iterations 1125
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 719 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6948 rows 2249 columns, reduced to 3440 rows 1105 columns
Cbc0038I Mini branch and bound did not improve solution (13.18 seconds)
Cbc0038I After 13.18 seconds - Feasibility pump exiting - took 11.44 seconds
Cbc0031I 50 added rows had average density of 5.4
Cbc0013I At root node, 50 cuts changed objective from 1396356.5 to 1425408 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 24 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 54 row cuts average 8.2 elements, 0 column cuts (0 active)  in 1.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 109 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.467 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1425408 (23.33 seconds)
Cbc0010I After 100 nodes, 35 on tree, 1e+50 best solution, best possible 1425408 (104.61 seconds)
Cbc0010I After 200 nodes, 42 on tree, 1e+50 best solution, best possible 1425408 (118.64 seconds)
Cbc0010I After 300 nodes, 39 on tree, 1e+50 best solution, best possible 1425408 (132.84 seconds)
Cbc0010I After 400 nodes, 42 on tree, 1e+50 best solution, best possible 1425408 (148.21 seconds)
Cbc0010I After 500 nodes, 35 on tree, 1e+50 best solution, best possible 1425408 (165.05 seconds)
Cbc0010I After 600 nodes, 34 on tree, 1e+50 best solution, best possible 1425408 (182.41 seconds)
Cbc0010I After 700 nodes, 30 on tree, 1e+50 best solution, best possible 1425408 (198.47 seconds)
Cbc0010I After 800 nodes, 44 on tree, 1e+50 best solution, best possible 1425408 (210.64 seconds)
Cbc0010I After 900 nodes, 43 on tree, 1e+50 best solution, best possible 1425408 (219.28 seconds)
Cbc0010I After 1000 nodes, 46 on tree, 1e+50 best solution, best possible 1425408 (227.33 seconds)
Cbc0010I After 1100 nodes, 81 on tree, 1e+50 best solution, best possible 1425408 (284.78 seconds)
Cbc0010I After 1200 nodes, 90 on tree, 1e+50 best solution, best possible 1425408 (364.79 seconds)
Cbc0010I After 1300 nodes, 84 on tree, 1e+50 best solution, best possible 1425408 (460.75 seconds)
Cbc0010I After 1400 nodes, 86 on tree, 1e+50 best solution, best possible 1425408 (569.44 seconds)
Cbc0010I After 1500 nodes, 87 on tree, 1e+50 best solution, best possible 1425408 (627.38 seconds)
Cbc0010I After 1600 nodes, 83 on tree, 1e+50 best solution, best possible 1425408 (694.56 seconds)
Cbc0010I After 1700 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (781.39 seconds)
Cbc0010I After 1800 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (836.53 seconds)
Cbc0010I After 1900 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (885.05 seconds)
Cbc0010I After 2000 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (963.94 seconds)
Cbc0010I After 2100 nodes, 67 on tree, 1e+50 best solution, best possible 1425408 (1075.02 seconds)
Cbc0010I After 2200 nodes, 70 on tree, 1e+50 best solution, best possible 1425408 (1142.66 seconds)
Cbc0010I After 2300 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (1187.54 seconds)
Cbc0010I After 2400 nodes, 67 on tree, 1e+50 best solution, best possible 1425408 (1257.05 seconds)
Cbc0010I After 2500 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (1631.22 seconds)
Cbc0010I After 2600 nodes, 77 on tree, 1e+50 best solution, best possible 1425408 (1671.78 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1425408), took 2934692 iterations and 2684 nodes (1811.46 seconds)
Cbc0032I Strong branching done 28180 times (1492051 iterations), fathomed 339 nodes and fixed 2059 variables
Cbc0035I Maximum depth 60, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.39636e+06 to 1.42541e+06
Probing was tried 678 times and created 134536 cuts of which 0 were active after adding rounds of cuts (5.090 seconds)
Gomory was tried 321 times and created 818 cuts of which 0 were active after adding rounds of cuts (3.740 seconds)
Knapsack was tried 321 times and created 2145 cuts of which 0 were active after adding rounds of cuts (0.704 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
FlowCover was tried 10 times and created 3 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 321 times and created 9130 cuts of which 0 were active after adding rounds of cuts (1.456 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.088 seconds)
ImplicationCuts was tried 29 times and created 20 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1425408.000
Enumerated nodes:               2684
Total iterations:               2934692
Time (CPU seconds):             1811.46
Time (Wallclock seconds):       1811.79

Total time (CPU seconds):       1811.51   (Wallclock seconds):       1811.85

