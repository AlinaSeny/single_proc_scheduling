Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_50_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_2_50_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 55329.8 - 1.54 seconds
Cgl0002I 1180 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 735 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 113 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 5665 rows, 1680 columns (1680 integer (1629 of which binary)) and 18988 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1680 objects (1680 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 783 integers unsatisfied sum - 212.029
Cbc0038I Pass   1: (2.65 seconds) suminf.   68.57438 (557) obj. 61423.7 iterations 2297
Cbc0038I Pass   2: (2.74 seconds) suminf.   66.27196 (476) obj. 62163.3 iterations 301
Cbc0038I Pass   3: (2.74 seconds) suminf.   66.27196 (476) obj. 62163.3 iterations 1
Cbc0038I Pass   4: (2.85 seconds) suminf.   63.28509 (481) obj. 61901.5 iterations 371
Cbc0038I Pass   5: (2.89 seconds) suminf.   59.99884 (477) obj. 61756.2 iterations 106
Cbc0038I Pass   6: (2.90 seconds) suminf.   59.84706 (477) obj. 61747 iterations 21
Cbc0038I Pass   7: (3.00 seconds) suminf.   54.95393 (456) obj. 63807.9 iterations 297
Cbc0038I Pass   8: (3.02 seconds) suminf.   53.63829 (455) obj. 63742.4 iterations 45
Cbc0038I Pass   9: (3.03 seconds) suminf.   53.71435 (452) obj. 63738.2 iterations 14
Cbc0038I Pass  10: (3.15 seconds) suminf.   48.28732 (462) obj. 63695.1 iterations 414
Cbc0038I Pass  11: (3.20 seconds) suminf.   46.10486 (429) obj. 63683.8 iterations 151
Cbc0038I Pass  12: (3.21 seconds) suminf.   45.49389 (429) obj. 63683.8 iterations 17
Cbc0038I Pass  13: (3.27 seconds) suminf.   45.51510 (435) obj. 63719.2 iterations 176
Cbc0038I Pass  14: (3.29 seconds) suminf.   44.63315 (429) obj. 63706.8 iterations 53
Cbc0038I Pass  15: (3.35 seconds) suminf.   44.91736 (425) obj. 63906.1 iterations 179
Cbc0038I Pass  16: (3.38 seconds) suminf.   44.27277 (424) obj. 63881.3 iterations 113
Cbc0038I Pass  17: (3.42 seconds) suminf.   44.73549 (424) obj. 63873.8 iterations 95
Cbc0038I Pass  18: (3.43 seconds) suminf.   44.71513 (429) obj. 63826.2 iterations 34
Cbc0038I Pass  19: (3.48 seconds) suminf.   40.39244 (412) obj. 63687.5 iterations 174
Cbc0038I Pass  20: (3.51 seconds) suminf.   40.99620 (412) obj. 63687.5 iterations 89
Cbc0038I Pass  21: (3.59 seconds) suminf.   41.95525 (426) obj. 63874.5 iterations 235
Cbc0038I Pass  22: (3.63 seconds) suminf.   40.58231 (424) obj. 63786.8 iterations 119
Cbc0038I Pass  23: (3.71 seconds) suminf.   39.86621 (379) obj. 65432 iterations 236
Cbc0038I Pass  24: (3.74 seconds) suminf.   39.07954 (384) obj. 65388.2 iterations 108
Cbc0038I Pass  25: (3.78 seconds) suminf.   37.36634 (374) obj. 64555.1 iterations 144
Cbc0038I Pass  26: (3.80 seconds) suminf.   37.57164 (373) obj. 64499.8 iterations 24
Cbc0038I Pass  27: (3.88 seconds) suminf.   31.84999 (393) obj. 66398.7 iterations 284
Cbc0038I Pass  28: (3.91 seconds) suminf.   32.20218 (404) obj. 66251.7 iterations 77
Cbc0038I Pass  29: (3.92 seconds) suminf.   31.94951 (396) obj. 66308.1 iterations 20
Cbc0038I Pass  30: (3.99 seconds) suminf.   31.01821 (380) obj. 66639.9 iterations 205
Cbc0038I Pass  31: (4.01 seconds) suminf.   30.84695 (383) obj. 66628.6 iterations 60
Cbc0038I Pass  32: (4.09 seconds) suminf.   31.55333 (354) obj. 67860.4 iterations 247
Cbc0038I Pass  33: (4.12 seconds) suminf.   28.67657 (348) obj. 67983.4 iterations 130
Cbc0038I Pass  34: (4.14 seconds) suminf.   28.66853 (350) obj. 68225.3 iterations 19
Cbc0038I Pass  35: (4.23 seconds) suminf.   29.05806 (341) obj. 67906.5 iterations 347
Cbc0038I Pass  36: (4.26 seconds) suminf.   26.88577 (344) obj. 67906.5 iterations 119
Cbc0038I Pass  37: (4.27 seconds) suminf.   26.77170 (344) obj. 67906.5 iterations 5
Cbc0038I Pass  38: (4.35 seconds) suminf.   27.50860 (348) obj. 66710.1 iterations 248
Cbc0038I Pass  39: (4.36 seconds) suminf.   27.73041 (353) obj. 66672.5 iterations 32
Cbc0038I Pass  40: (4.40 seconds) suminf.   27.59401 (334) obj. 67482.7 iterations 137
Cbc0038I Pass  41: (4.43 seconds) suminf.   26.82052 (342) obj. 67984 iterations 87
Cbc0038I Pass  42: (4.54 seconds) suminf.   30.92622 (337) obj. 66174.5 iterations 471
Cbc0038I Pass  43: (4.58 seconds) suminf.   30.41643 (337) obj. 66267.7 iterations 113
Cbc0038I Pass  44: (4.66 seconds) suminf.   30.60517 (343) obj. 66242.6 iterations 277
Cbc0038I Pass  45: (4.68 seconds) suminf.   30.72423 (344) obj. 66240.4 iterations 86
Cbc0038I Pass  46: (4.77 seconds) suminf.   27.69767 (334) obj. 69464.4 iterations 315
Cbc0038I Pass  47: (4.83 seconds) suminf.   24.25838 (343) obj. 72469.8 iterations 195
Cbc0038I Pass  48: (4.85 seconds) suminf.   23.51233 (339) obj. 72401 iterations 76
Cbc0038I Pass  49: (4.98 seconds) suminf.   26.31703 (325) obj. 70636.5 iterations 538
Cbc0038I Pass  50: (5.02 seconds) suminf.   25.14090 (322) obj. 71444.9 iterations 147
Cbc0038I Pass  51: (5.04 seconds) suminf.   23.19542 (321) obj. 71489.7 iterations 69
Cbc0038I Pass  52: (5.06 seconds) suminf.   23.18148 (323) obj. 71513.5 iterations 64
Cbc0038I Pass  53: (5.19 seconds) suminf.   24.02423 (331) obj. 72294.9 iterations 529
Cbc0038I Pass  54: (5.22 seconds) suminf.   23.10153 (336) obj. 72629.8 iterations 125
Cbc0038I Pass  55: (5.33 seconds) suminf.   21.99744 (303) obj. 70764.2 iterations 467
Cbc0038I Pass  56: (5.38 seconds) suminf.   19.85987 (311) obj. 71561.6 iterations 174
Cbc0038I Pass  57: (5.48 seconds) suminf.   22.35092 (312) obj. 72056.7 iterations 428
Cbc0038I Pass  58: (5.49 seconds) suminf.   22.37196 (314) obj. 71996.6 iterations 17
Cbc0038I Pass  59: (5.51 seconds) suminf.   21.55893 (315) obj. 71996.2 iterations 65
Cbc0038I Pass  60: (5.64 seconds) suminf.   21.09313 (302) obj. 71544 iterations 628
Cbc0038I Pass  61: (5.66 seconds) suminf.   20.25806 (303) obj. 71606.6 iterations 76
Cbc0038I Pass  62: (5.71 seconds) suminf.   22.05549 (307) obj. 71956.6 iterations 178
Cbc0038I Pass  63: (5.74 seconds) suminf.   18.64459 (302) obj. 72931.6 iterations 90
Cbc0038I Pass  64: (5.76 seconds) suminf.   18.29061 (301) obj. 73080.9 iterations 38
Cbc0038I Pass  65: (5.84 seconds) suminf.   19.65712 (306) obj. 71090.9 iterations 305
Cbc0038I Pass  66: (5.87 seconds) suminf.   17.99891 (301) obj. 70910.3 iterations 127
Cbc0038I Pass  67: (5.95 seconds) suminf.   23.42968 (303) obj. 71227.1 iterations 287
Cbc0038I Pass  68: (5.98 seconds) suminf.   19.56026 (312) obj. 71305.4 iterations 114
Cbc0038I Pass  69: (5.99 seconds) suminf.   19.07001 (312) obj. 71272.5 iterations 19
Cbc0038I Pass  70: (6.10 seconds) suminf.   17.91610 (312) obj. 72482.1 iterations 425
Cbc0038I Pass  71: (6.17 seconds) suminf.   17.15782 (302) obj. 72792.5 iterations 282
Cbc0038I Pass  72: (6.25 seconds) suminf.   16.87682 (292) obj. 70669.3 iterations 288
Cbc0038I Pass  73: (6.32 seconds) suminf.   15.74088 (293) obj. 70940.6 iterations 245
Cbc0038I Pass  74: (6.41 seconds) suminf.   19.13002 (255) obj. 72923.9 iterations 443
Cbc0038I Pass  75: (6.45 seconds) suminf.   14.86767 (255) obj. 72601.8 iterations 154
Cbc0038I Pass  76: (6.46 seconds) suminf.   14.67301 (255) obj. 72605.1 iterations 7
Cbc0038I Pass  77: (6.53 seconds) suminf.   18.04749 (257) obj. 70823 iterations 261
Cbc0038I Pass  78: (6.58 seconds) suminf.   14.63385 (247) obj. 72748.9 iterations 240
Cbc0038I Pass  79: (6.60 seconds) suminf.   14.25356 (259) obj. 72745.7 iterations 29
Cbc0038I Pass  80: (6.69 seconds) suminf.   12.05562 (238) obj. 74268.9 iterations 397
Cbc0038I Pass  81: (6.79 seconds) suminf.   11.47390 (207) obj. 72341.8 iterations 475
Cbc0038I Pass  82: (7.07 seconds) suminf.   13.17468 (200) obj. 76803.4 iterations 1346
Cbc0038I Pass  83: (7.11 seconds) suminf.   11.82361 (190) obj. 75325.5 iterations 165
Cbc0038I Pass  84: (7.34 seconds) suminf.   11.32368 (154) obj. 69283.3 iterations 968
Cbc0038I Pass  85: (7.35 seconds) suminf.   11.29058 (154) obj. 69283.3 iterations 11
Cbc0038I Pass  86: (7.48 seconds) suminf.   11.66831 (152) obj. 71382.1 iterations 512
Cbc0038I Pass  87: (7.53 seconds) suminf.   10.40510 (161) obj. 71294.4 iterations 164
Cbc0038I Pass  88: (7.56 seconds) suminf.    8.68090 (153) obj. 71148.3 iterations 102
Cbc0038I Pass  89: (7.57 seconds) suminf.    8.41357 (153) obj. 71148.3 iterations 11
Cbc0038I Pass  90: (7.67 seconds) suminf.   11.18417 (105) obj. 66726.8 iterations 378
Cbc0038I Pass  91: (7.68 seconds) suminf.   10.80298 (100) obj. 66758.2 iterations 19
Cbc0038I Pass  92: (7.76 seconds) suminf.    6.54525 (87) obj. 71965.6 iterations 298
Cbc0038I Pass  93: (7.80 seconds) suminf.    6.04908 (89) obj. 72052.5 iterations 112
Cbc0038I Pass  94: (7.98 seconds) suminf.    6.83205 (195) obj. 69222.4 iterations 828
Cbc0038I Pass  95: (8.05 seconds) suminf.    4.92144 (186) obj. 69225.9 iterations 243
Cbc0038I Pass  96: (8.06 seconds) suminf.    5.25611 (183) obj. 69222.5 iterations 9
Cbc0038I Pass  97: (8.35 seconds) suminf.    4.66437 (148) obj. 72163.8 iterations 1452
Cbc0038I Pass  98: (8.36 seconds) suminf.    4.66019 (156) obj. 72163.9 iterations 13
Cbc0038I Pass  99: (8.43 seconds) suminf.    6.94620 (163) obj. 69055.5 iterations 374
Cbc0038I Pass 100: (8.68 seconds) suminf.   66.71663 (351) obj. 80085 iterations 1312
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 482 integers at bound fixed and 0 continuous
Cbc0038I Full problem 5665 rows 1680 columns, reduced to 3340 rows 996 columns - too large
Cbc0038I Mini branch and bound did not improve solution (9.35 seconds)
Cbc0038I After 9.35 seconds - Feasibility pump exiting - took 7.29 seconds
Cbc0031I 18 added rows had average density of 9.1666667
Cbc0013I At root node, 18 cuts changed objective from 55379.027 to 56320 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 3 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.323 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 25 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.266 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 7 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.319 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 56320 (11.26 seconds)
Cbc0010I After 100 nodes, 31 on tree, 1e+50 best solution, best possible 56320 (99.47 seconds)
Cbc0010I After 200 nodes, 27 on tree, 1e+50 best solution, best possible 56320 (221.25 seconds)
Cbc0010I After 300 nodes, 56 on tree, 1e+50 best solution, best possible 56320 (308.30 seconds)
Cbc0010I After 400 nodes, 56 on tree, 1e+50 best solution, best possible 56320 (426.18 seconds)
Cbc0010I After 500 nodes, 59 on tree, 1e+50 best solution, best possible 56320 (478.78 seconds)
Cbc0010I After 600 nodes, 47 on tree, 1e+50 best solution, best possible 56320 (550.76 seconds)
Cbc0010I After 700 nodes, 22 on tree, 1e+50 best solution, best possible 56320 (1223.37 seconds)
Cbc0010I After 800 nodes, 3 on tree, 1e+50 best solution, best possible 56320 (1675.91 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 56320), took 3602814 iterations and 815 nodes (1799.65 seconds)
Cbc0032I Strong branching done 7620 times (527137 iterations), fathomed 115 nodes and fixed 510 variables
Cbc0035I Maximum depth 50, 0 variables fixed on reduced cost
Cuts at root node changed objective from 55379 to 56320
Probing was tried 154 times and created 7203 cuts of which 0 were active after adding rounds of cuts (0.672 seconds)
Gomory was tried 141 times and created 161 cuts of which 0 were active after adding rounds of cuts (1.360 seconds)
Knapsack was tried 141 times and created 517 cuts of which 0 were active after adding rounds of cuts (0.288 seconds)
Clique was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 141 times and created 1631 cuts of which 0 were active after adding rounds of cuts (0.686 seconds)
ZeroHalf was tried 141 times and created 45 cuts of which 0 were active after adding rounds of cuts (5.977 seconds)
ImplicationCuts was tried 38 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    56320.000
Enumerated nodes:               815
Total iterations:               3602814
Time (CPU seconds):             1799.65
Time (Wallclock seconds):       1801.93

Total time (CPU seconds):       1799.68   (Wallclock seconds):       1801.98

