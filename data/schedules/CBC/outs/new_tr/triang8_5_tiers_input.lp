Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_5_tiers_input.lp sec 1800 solve solu solutions/new_tr/triang8_5_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 376.603 - 0.38 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 40 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 2625 rows, 916 columns (916 integer (880 of which binary)) and 8568 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 455 integers unsatisfied sum - 106.026
Cbc0038I Pass   1: suminf.   55.34038 (380) obj. 487.919 iterations 905
Cbc0038I Pass   2: suminf.   56.49813 (382) obj. 490.835 iterations 126
Cbc0038I Pass   3: suminf.   55.93159 (389) obj. 493.93 iterations 29
Cbc0038I Pass   4: suminf.   55.03473 (374) obj. 490.252 iterations 177
Cbc0038I Pass   5: suminf.   54.47059 (369) obj. 490.135 iterations 50
Cbc0038I Pass   6: suminf.   48.24527 (347) obj. 443.249 iterations 215
Cbc0038I Pass   7: suminf.   47.59584 (356) obj. 442.939 iterations 78
Cbc0038I Pass   8: suminf.   40.98426 (328) obj. 501.997 iterations 281
Cbc0038I Pass   9: suminf.   37.14044 (309) obj. 503.245 iterations 166
Cbc0038I Pass  10: suminf.   32.68030 (261) obj. 524.822 iterations 329
Cbc0038I Pass  11: suminf.   32.45765 (258) obj. 525.586 iterations 62
Cbc0038I Pass  12: suminf.   25.73810 (241) obj. 527.27 iterations 206
Cbc0038I Pass  13: suminf.   24.38446 (237) obj. 526.814 iterations 52
Cbc0038I Pass  14: suminf.   24.38446 (237) obj. 526.814 iterations 2
Cbc0038I Pass  15: suminf.   23.00210 (214) obj. 527.156 iterations 102
Cbc0038I Pass  16: suminf.   22.85662 (216) obj. 527.199 iterations 5
Cbc0038I Pass  17: suminf.   21.94803 (208) obj. 529.185 iterations 56
Cbc0038I Pass  18: suminf.   21.59207 (203) obj. 528.978 iterations 28
Cbc0038I Pass  19: suminf.   21.55965 (213) obj. 529.942 iterations 79
Cbc0038I Pass  20: suminf.   20.35371 (206) obj. 530.043 iterations 41
Cbc0038I Pass  21: suminf.   20.35244 (210) obj. 529.971 iterations 16
Cbc0038I Pass  22: suminf.   17.81309 (187) obj. 436.321 iterations 139
Cbc0038I Pass  23: suminf.   17.38924 (180) obj. 436.082 iterations 30
Cbc0038I Pass  24: suminf.   10.41427 (142) obj. 462.486 iterations 170
Cbc0038I Pass  25: suminf.    9.57661 (143) obj. 462.509 iterations 17
Cbc0038I Pass  26: suminf.    9.11135 (130) obj. 462.481 iterations 150
Cbc0038I Pass  27: suminf.    7.87100 (142) obj. 462.443 iterations 16
Cbc0038I Pass  28: suminf.    5.13754 (111) obj. 453.719 iterations 137
Cbc0038I Pass  29: suminf.    4.98029 (109) obj. 453.744 iterations 26
Cbc0038I Pass  30: suminf.    7.53775 (69) obj. 541.069 iterations 282
Cbc0038I Pass  31: suminf.    6.96015 (61) obj. 539.167 iterations 38
Cbc0038I Pass  32: suminf.    4.28416 (44) obj. 453.498 iterations 169
Cbc0038I Pass  33: suminf.    1.82962 (19) obj. 453.501 iterations 92
Cbc0038I Pass  34: suminf.    0.00000 (0) obj. 442 iterations 218
Cbc0038I Solution found of 442
Cbc0038I Cleaned solution of 442
Cbc0038I Before mini branch and bound, 295 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1957 rows 620 columns - 72 fixed gives 1445, 402 - still too large
Cbc0038I Mini branch and bound did not improve solution (1.44 seconds)
Cbc0038I Round again with cutoff of 434.56
Cbc0038I Pass  35: suminf.   55.40158 (401) obj. 434 iterations 114
Cbc0038I Pass  36: suminf.   57.88376 (390) obj. 434.56 iterations 173
Cbc0038I Pass  37: suminf.   53.30801 (365) obj. 434.56 iterations 210
Cbc0038I Pass  38: suminf.   53.38635 (384) obj. 434.56 iterations 44
Cbc0038I Pass  39: suminf.   51.45348 (369) obj. 434.56 iterations 147
Cbc0038I Pass  40: suminf.   51.27976 (375) obj. 434.56 iterations 68
Cbc0038I Pass  41: suminf.   48.10977 (338) obj. 434.56 iterations 183
Cbc0038I Pass  42: suminf.   47.55175 (342) obj. 434.56 iterations 98
Cbc0038I Pass  43: suminf.   44.22595 (328) obj. 434.56 iterations 49
Cbc0038I Pass  44: suminf.   43.58779 (334) obj. 434.56 iterations 46
Cbc0038I Pass  45: suminf.   37.45237 (284) obj. 434.56 iterations 215
Cbc0038I Pass  46: suminf.   34.36757 (282) obj. 434.56 iterations 110
Cbc0038I Pass  47: suminf.   32.64521 (246) obj. 434.56 iterations 148
Cbc0038I Pass  48: suminf.   32.29021 (251) obj. 434.56 iterations 20
Cbc0038I Pass  49: suminf.   27.99263 (227) obj. 434.56 iterations 127
Cbc0038I Pass  50: suminf.   28.10753 (222) obj. 434.56 iterations 15
Cbc0038I Pass  51: suminf.   25.89021 (224) obj. 434.56 iterations 77
Cbc0038I Pass  52: suminf.   25.64062 (223) obj. 434.56 iterations 15
Cbc0038I Pass  53: suminf.   24.45227 (218) obj. 434.56 iterations 181
Cbc0038I Pass  54: suminf.   23.67140 (220) obj. 434.56 iterations 42
Cbc0038I Pass  55: suminf.   23.69279 (220) obj. 434.56 iterations 6
Cbc0038I Pass  56: suminf.   22.57415 (212) obj. 434.56 iterations 87
Cbc0038I Pass  57: suminf.   21.43193 (212) obj. 434.56 iterations 26
Cbc0038I Pass  58: suminf.   18.05847 (193) obj. 434.56 iterations 55
Cbc0038I Pass  59: suminf.   17.08479 (192) obj. 434.56 iterations 33
Cbc0038I Pass  60: suminf.   16.39077 (206) obj. 434.56 iterations 275
Cbc0038I Pass  61: suminf.   15.52841 (200) obj. 434.56 iterations 20
Cbc0038I Pass  62: suminf.   12.29637 (198) obj. 434.56 iterations 55
Cbc0038I Pass  63: suminf.   12.12205 (204) obj. 434.56 iterations 11
Cbc0038I Pass  64: suminf.   12.31909 (165) obj. 434.56 iterations 89
Cbc0038I Pass  65: suminf.   10.31928 (158) obj. 434.56 iterations 17
Cbc0038I Pass  66: suminf.   11.20035 (142) obj. 434.56 iterations 139
Cbc0038I Pass  67: suminf.   10.89473 (155) obj. 434.56 iterations 16
Cbc0038I Pass  68: suminf.    8.03422 (131) obj. 434.56 iterations 64
Cbc0038I Pass  69: suminf.    8.22578 (134) obj. 434.56 iterations 6
Cbc0038I Pass  70: suminf.    2.31947 (72) obj. 434.56 iterations 78
Cbc0038I Pass  71: suminf.    2.19629 (68) obj. 434.56 iterations 2
Cbc0038I Pass  72: suminf.    0.91421 (28) obj. 434.56 iterations 51
Cbc0038I Pass  73: suminf.    0.91421 (28) obj. 434.56 iterations 5
Cbc0038I Pass  74: suminf.    4.60996 (45) obj. 434.56 iterations 79
Cbc0038I Pass  75: suminf.    1.42098 (21) obj. 434.56 iterations 9
Cbc0038I Pass  76: suminf.    1.42098 (21) obj. 434.56 iterations 5
Cbc0038I Pass  77: suminf.    0.43962 (1) obj. 434.56 iterations 26
Cbc0038I Solution found of 434.56
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2626 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 421
Cbc0038I Before mini branch and bound, 269 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2625 rows 916 columns, reduced to 2012 rows 645 columns - 200 fixed gives 764, 210 - ok now
Cbc0038I Full problem 2625 rows 916 columns, reduced to 130 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (2.08 seconds)
Cbc0038I Round again with cutoff of 411.321
Cbc0038I Pass  78: suminf.   58.24323 (410) obj. 411.321 iterations 115
Cbc0038I Pass  79: suminf.   59.39929 (397) obj. 411.321 iterations 131
Cbc0038I Pass  80: suminf.   57.27417 (400) obj. 411.321 iterations 49
Cbc0038I Pass  81: suminf.   57.00548 (400) obj. 411.321 iterations 6
Cbc0038I Pass  82: suminf.   56.77149 (397) obj. 411.321 iterations 130
Cbc0038I Pass  83: suminf.   56.80199 (404) obj. 411.321 iterations 86
Cbc0038I Pass  84: suminf.   54.26849 (383) obj. 411.321 iterations 133
Cbc0038I Pass  85: suminf.   54.13394 (382) obj. 411.321 iterations 62
Cbc0038I Pass  86: suminf.   46.01841 (361) obj. 411.321 iterations 258
Cbc0038I Pass  87: suminf.   45.48499 (363) obj. 411.321 iterations 88
Cbc0038I Pass  88: suminf.   44.78248 (330) obj. 411.321 iterations 163
Cbc0038I Pass  89: suminf.   42.58094 (316) obj. 411.321 iterations 75
Cbc0038I Pass  90: suminf.   40.89135 (326) obj. 411.321 iterations 73
Cbc0038I Pass  91: suminf.   40.30982 (347) obj. 411.321 iterations 31
Cbc0038I Pass  92: suminf.   40.87352 (302) obj. 411.321 iterations 210
Cbc0038I Pass  93: suminf.   41.13627 (316) obj. 411.321 iterations 60
Cbc0038I Pass  94: suminf.   38.02183 (257) obj. 411.321 iterations 316
Cbc0038I Pass  95: suminf.   32.63857 (257) obj. 411.321 iterations 192
Cbc0038I Pass  96: suminf.   31.88364 (259) obj. 411.321 iterations 46
Cbc0038I Pass  97: suminf.   29.01674 (228) obj. 411.321 iterations 259
Cbc0038I Pass  98: suminf.   26.70413 (223) obj. 411.321 iterations 74
Cbc0038I Pass  99: suminf.   27.76205 (225) obj. 411.321 iterations 216
Cbc0038I Pass 100: suminf.   26.11000 (223) obj. 411.321 iterations 76
Cbc0038I Pass 101: suminf.   23.90970 (215) obj. 411.321 iterations 34
Cbc0038I Pass 102: suminf.   23.59936 (214) obj. 411.321 iterations 98
Cbc0038I Pass 103: suminf.   22.78693 (213) obj. 411.321 iterations 30
Cbc0038I Pass 104: suminf.   22.54892 (205) obj. 411.321 iterations 188
Cbc0038I Pass 105: suminf.   20.57326 (209) obj. 411.321 iterations 76
Cbc0038I Pass 106: suminf.   19.05734 (210) obj. 411.321 iterations 48
Cbc0038I Pass 107: suminf.   22.10125 (202) obj. 411.321 iterations 156
Cbc0038I Pass 108: suminf.   19.06655 (182) obj. 411.321 iterations 50
Cbc0038I Pass 109: suminf.   17.13714 (176) obj. 411.321 iterations 53
Cbc0038I Pass 110: suminf.   18.41410 (194) obj. 411.321 iterations 94
Cbc0038I Pass 111: suminf.   16.63083 (191) obj. 411.321 iterations 96
Cbc0038I Pass 112: suminf.   20.25838 (203) obj. 411.321 iterations 107
Cbc0038I Pass 113: suminf.   17.42719 (183) obj. 411.321 iterations 63
Cbc0038I Pass 114: suminf.   15.83888 (184) obj. 411.321 iterations 111
Cbc0038I Pass 115: suminf.   14.94609 (199) obj. 411.321 iterations 55
Cbc0038I Pass 116: suminf.   14.95511 (182) obj. 411.321 iterations 155
Cbc0038I Pass 117: suminf.   13.09617 (188) obj. 411.321 iterations 30
Cbc0038I Pass 118: suminf.   14.49002 (165) obj. 411.321 iterations 107
Cbc0038I Pass 119: suminf.   14.37630 (177) obj. 411.321 iterations 23
Cbc0038I Pass 120: suminf.    9.10863 (138) obj. 411.321 iterations 112
Cbc0038I Pass 121: suminf.    6.78113 (132) obj. 411.321 iterations 45
Cbc0038I Pass 122: suminf.    6.09091 (140) obj. 411.321 iterations 87
Cbc0038I Pass 123: suminf.    6.02946 (128) obj. 411.321 iterations 23
Cbc0038I Pass 124: suminf.   10.05723 (116) obj. 411.321 iterations 167
Cbc0038I Pass 125: suminf.    6.22437 (91) obj. 411.321 iterations 63
Cbc0038I Pass 126: suminf.    6.22437 (91) obj. 411.321 iterations 13
Cbc0038I Pass 127: suminf.    7.60578 (104) obj. 411.321 iterations 84
Cbc0038I Pass 128: suminf.    6.96411 (110) obj. 411.321 iterations 32
Cbc0038I Pass 129: suminf.    9.72355 (123) obj. 411.321 iterations 162
Cbc0038I Pass 130: suminf.    6.17979 (89) obj. 411.321 iterations 67
Cbc0038I Pass 131: suminf.    6.17979 (89) obj. 411.321 iterations 10
Cbc0038I Pass 132: suminf.    3.53828 (55) obj. 411.321 iterations 114
Cbc0038I Pass 133: suminf.    3.52038 (54) obj. 411.321 iterations 8
Cbc0038I Pass 134: suminf.    5.56908 (32) obj. 411.321 iterations 115
Cbc0038I Pass 135: suminf.    4.52031 (53) obj. 411.321 iterations 106
Cbc0038I Pass 136: suminf.    4.12089 (47) obj. 411.321 iterations 101
Cbc0038I Pass 137: suminf.    3.08353 (77) obj. 411.321 iterations 188
Cbc0038I Pass 138: suminf.   11.21196 (94) obj. 411.321 iterations 95
Cbc0038I Pass 139: suminf.    6.62301 (68) obj. 411.321 iterations 317
Cbc0038I Pass 140: suminf.    3.60477 (52) obj. 411.321 iterations 14
Cbc0038I Pass 141: suminf.    4.23851 (44) obj. 411.321 iterations 52
Cbc0038I Pass 142: suminf.   43.98040 (282) obj. 411.321 iterations 609
Cbc0038I Pass 143: suminf.   28.84988 (187) obj. 411.321 iterations 485
Cbc0038I Pass 144: suminf.   28.50060 (186) obj. 411.321 iterations 49
Cbc0038I Pass 145: suminf.   24.27200 (191) obj. 411.321 iterations 73
Cbc0038I Pass 146: suminf.   24.27200 (191) obj. 411.321 iterations 2
Cbc0038I Pass 147: suminf.   19.68787 (175) obj. 411.321 iterations 172
Cbc0038I Pass 148: suminf.   17.91926 (170) obj. 411.321 iterations 69
Cbc0038I Pass 149: suminf.   17.91866 (171) obj. 411.321 iterations 5
Cbc0038I Pass 150: suminf.   10.20876 (160) obj. 411.321 iterations 177
Cbc0038I Pass 151: suminf.   10.51645 (159) obj. 411.321 iterations 17
Cbc0038I Pass 152: suminf.   10.93856 (159) obj. 411.321 iterations 105
Cbc0038I Pass 153: suminf.   10.02160 (160) obj. 411.321 iterations 53
Cbc0038I Pass 154: suminf.    9.41291 (83) obj. 411.321 iterations 177
Cbc0038I Pass 155: suminf.    8.98202 (138) obj. 411.321 iterations 95
Cbc0038I Pass 156: suminf.    7.70748 (70) obj. 411.321 iterations 224
Cbc0038I Pass 157: suminf.    3.55268 (66) obj. 411.321 iterations 231
Cbc0038I Pass 158: suminf.    3.88244 (40) obj. 411.321 iterations 42
Cbc0038I Pass 159: suminf.   53.32236 (282) obj. 411.321 iterations 601
Cbc0038I Pass 160: suminf.   29.99128 (215) obj. 411.321 iterations 416
Cbc0038I Pass 161: suminf.   24.57580 (191) obj. 411.321 iterations 117
Cbc0038I Pass 162: suminf.   24.72466 (192) obj. 411.321 iterations 42
Cbc0038I Pass 163: suminf.   22.55031 (189) obj. 411.321 iterations 82
Cbc0038I Pass 164: suminf.   13.62504 (172) obj. 411.321 iterations 157
Cbc0038I Pass 165: suminf.   13.89195 (162) obj. 411.321 iterations 40
Cbc0038I Pass 166: suminf.   11.95009 (144) obj. 411.321 iterations 116
Cbc0038I Pass 167: suminf.    9.91200 (127) obj. 411.321 iterations 34
Cbc0038I Pass 168: suminf.    7.89656 (121) obj. 411.321 iterations 104
Cbc0038I Pass 169: suminf.    7.92766 (121) obj. 411.321 iterations 20
Cbc0038I Pass 170: suminf.    7.48538 (99) obj. 411.321 iterations 99
Cbc0038I Pass 171: suminf.    5.58484 (105) obj. 411.321 iterations 103
Cbc0038I Pass 172: suminf.    6.33500 (93) obj. 411.321 iterations 98
Cbc0038I Pass 173: suminf.    4.38633 (82) obj. 411.321 iterations 44
Cbc0038I Pass 174: suminf.    8.52280 (90) obj. 411.321 iterations 76
Cbc0038I Pass 175: suminf.    4.30602 (61) obj. 411.321 iterations 18
Cbc0038I Pass 176: suminf.    1.91815 (42) obj. 410.772 iterations 48
Cbc0038I Pass 177: suminf.   48.14979 (295) obj. 411.321 iterations 641
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 119 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (3.40 seconds)
Cbc0038I After 3.40 seconds - Feasibility pump exiting with objective of 421 - took 2.66 seconds
Cbc0012I Integer solution of 421 found by feasibility pump after 0 iterations and 0 nodes (3.40 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1696 rows 492 columns - 179 fixed gives 433, 103 - ok now
Cbc0031I 48 added rows had average density of 32.208333
Cbc0013I At root node, 48 cuts changed objective from 376.60292 to 392.1594 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.5 elements, 9 column cuts (9 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 135 row cuts average 430.9 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 43 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 189 row cuts average 77.5 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 421 best solution, best possible 392.1594 (8.53 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1697 rows 490 columns - 196 fixed gives 150, 43 - ok now
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1535 rows 437 columns - 167 fixed gives 272, 73 - ok now
Cbc0010I After 100 nodes, 3 on tree, 421 best solution, best possible 396 (45.31 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1446 rows 403 columns - 150 fixed gives 372, 108 - ok now
Cbc0010I After 200 nodes, 11 on tree, 421 best solution, best possible 397 (71.39 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1534 rows 436 columns - 154 fixed gives 394, 119 - ok now
Cbc0010I After 300 nodes, 15 on tree, 421 best solution, best possible 398 (96.87 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1442 rows 403 columns - 143 fixed gives 145, 44 - ok now
Cbc0010I After 400 nodes, 18 on tree, 421 best solution, best possible 398 (111.93 seconds)
Cbc0010I After 500 nodes, 15 on tree, 421 best solution, best possible 398 (129.13 seconds)
Cbc0010I After 600 nodes, 14 on tree, 421 best solution, best possible 398 (143.65 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 516 rows 157 columns
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1357 rows 372 columns - 124 fixed gives 382, 106 - ok now
Cbc0010I After 700 nodes, 16 on tree, 421 best solution, best possible 398 (161.56 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 797 rows 242 columns
Cbc0010I After 800 nodes, 19 on tree, 421 best solution, best possible 398 (177.07 seconds)
Cbc0010I After 900 nodes, 12 on tree, 421 best solution, best possible 398 (185.00 seconds)
Cbc0010I After 1000 nodes, 9 on tree, 421 best solution, best possible 398 (205.18 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1437 rows 440 columns - 160 fixed gives 124, 41 - ok now
Cbc0010I After 1100 nodes, 14 on tree, 421 best solution, best possible 398 (226.55 seconds)
Cbc0010I After 1200 nodes, 8 on tree, 421 best solution, best possible 398 (244.08 seconds)
Cbc0010I After 1300 nodes, 20 on tree, 421 best solution, best possible 398 (262.99 seconds)
Cbc0010I After 1400 nodes, 14 on tree, 421 best solution, best possible 398 (276.95 seconds)
Cbc0010I After 1500 nodes, 15 on tree, 421 best solution, best possible 398 (292.85 seconds)
Cbc0010I After 1600 nodes, 17 on tree, 421 best solution, best possible 398 (307.42 seconds)
Cbc0010I After 1700 nodes, 7 on tree, 421 best solution, best possible 398 (323.81 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1681 rows 489 columns - 185 fixed gives 303, 83 - ok now
Cbc0010I After 1800 nodes, 5 on tree, 421 best solution, best possible 398 (337.59 seconds)
Cbc0010I After 1900 nodes, 19 on tree, 421 best solution, best possible 398 (352.19 seconds)
Cbc0010I After 2000 nodes, 7 on tree, 421 best solution, best possible 398 (366.48 seconds)
Cbc0010I After 2100 nodes, 3 on tree, 421 best solution, best possible 398 (375.67 seconds)
Cbc0010I After 2200 nodes, 2 on tree, 421 best solution, best possible 400 (396.03 seconds)
Cbc0010I After 2300 nodes, 24 on tree, 421 best solution, best possible 402 (408.25 seconds)
Cbc0010I After 2400 nodes, 14 on tree, 421 best solution, best possible 402 (433.17 seconds)
Cbc0010I After 2500 nodes, 8 on tree, 421 best solution, best possible 402 (453.54 seconds)
Cbc0010I After 2600 nodes, 9 on tree, 421 best solution, best possible 403 (468.70 seconds)
Cbc0010I After 2700 nodes, 8 on tree, 421 best solution, best possible 403 (481.46 seconds)
Cbc0010I After 2800 nodes, 7 on tree, 421 best solution, best possible 403 (495.42 seconds)
Cbc0010I After 2900 nodes, 13 on tree, 421 best solution, best possible 403 (507.07 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1456 rows 431 columns - 157 fixed gives 300, 78 - ok now
Cbc0010I After 3000 nodes, 11 on tree, 421 best solution, best possible 403 (519.62 seconds)
Cbc0010I After 3100 nodes, 8 on tree, 421 best solution, best possible 404 (533.10 seconds)
Cbc0010I After 3200 nodes, 13 on tree, 421 best solution, best possible 404 (546.39 seconds)
Cbc0010I After 3300 nodes, 10 on tree, 421 best solution, best possible 404 (561.63 seconds)
Cbc0010I After 3400 nodes, 5 on tree, 421 best solution, best possible 404 (576.22 seconds)
Cbc0010I After 3500 nodes, 6 on tree, 421 best solution, best possible 404 (587.14 seconds)
Cbc0038I Full problem 2625 rows 916 columns, reduced to 1480 rows 419 columns - 149 fixed gives 301, 88 - ok now
Cbc0010I After 3600 nodes, 13 on tree, 421 best solution, best possible 405 (594.15 seconds)
Cbc0010I After 3700 nodes, 30 on tree, 421 best solution, best possible 405 (598.52 seconds)
Cbc0010I After 3800 nodes, 25 on tree, 421 best solution, best possible 405 (601.52 seconds)
Cbc0004I Integer solution of 405 found after 3123031 iterations and 3823 nodes (602.35 seconds)
Cbc0001I Search completed - best objective 405, took 3123031 iterations and 3823 nodes (602.35 seconds)
Cbc0032I Strong branching done 17018 times (1118356 iterations), fathomed 217 nodes and fixed 1139 variables
Cbc0035I Maximum depth 62, 0 variables fixed on reduced cost
Cuts at root node changed objective from 376.603 to 392.159
Probing was tried 800 times and created 104958 cuts of which 0 were active after adding rounds of cuts (2.598 seconds)
Gomory was tried 538 times and created 1484 cuts of which 0 were active after adding rounds of cuts (1.695 seconds)
Knapsack was tried 538 times and created 3710 cuts of which 0 were active after adding rounds of cuts (0.491 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
MixedIntegerRounding2 was tried 10 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.010 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 538 times and created 11798 cuts of which 0 were active after adding rounds of cuts (0.798 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
ImplicationCuts was tried 73 times and created 465 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)

Result - Optimal solution found

Objective value:                405.00000000
Enumerated nodes:               3823
Total iterations:               3123031
Time (CPU seconds):             602.43
Time (Wallclock seconds):       603.10

Total time (CPU seconds):       602.44   (Wallclock seconds):       603.11

