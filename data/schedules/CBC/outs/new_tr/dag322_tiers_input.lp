Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc new_inputs_trans/order/dag322_tiers_input.lp sec 1800 solve solu transitive/dag322_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 1.39398e+06 - 1.08 seconds
Cgl0002I 2197 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1248 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0004I processed model has 6948 rows, 2249 columns (2249 integer (2189 of which binary)) and 23080 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2249 objects (2249 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 990 integers unsatisfied sum - 227.244
Cbc0038I Pass   1: (2.37 seconds) suminf.  140.90926 (965) obj. 1.65931e+06 iterations 1878
Cbc0038I Pass   2: (2.64 seconds) suminf.  124.97199 (926) obj. 1.54769e+06 iterations 799
Cbc0038I Pass   3: (2.81 seconds) suminf.  120.00496 (914) obj. 1.53016e+06 iterations 435
Cbc0038I Pass   4: (2.98 seconds) suminf.  116.27071 (896) obj. 1.51249e+06 iterations 467
Cbc0038I Pass   5: (3.08 seconds) suminf.  112.82285 (898) obj. 1.51463e+06 iterations 200
Cbc0038I Pass   6: (3.12 seconds) suminf.  112.89643 (892) obj. 1.51638e+06 iterations 79
Cbc0038I Pass   7: (3.28 seconds) suminf.  106.08654 (885) obj. 1.54172e+06 iterations 417
Cbc0038I Pass   8: (3.37 seconds) suminf.  108.12905 (879) obj. 1.56254e+06 iterations 162
Cbc0038I Pass   9: (3.49 seconds) suminf.  104.44183 (874) obj. 1.59974e+06 iterations 316
Cbc0038I Pass  10: (3.55 seconds) suminf.  103.87288 (853) obj. 1.60163e+06 iterations 140
Cbc0038I Pass  11: (3.67 seconds) suminf.  104.00124 (878) obj. 1.68444e+06 iterations 283
Cbc0038I Pass  12: (3.76 seconds) suminf.  102.52903 (870) obj. 1.69009e+06 iterations 196
Cbc0038I Pass  13: (3.90 seconds) suminf.  103.53830 (890) obj. 1.688e+06 iterations 357
Cbc0038I Pass  14: (3.97 seconds) suminf.  104.35445 (892) obj. 1.68902e+06 iterations 143
Cbc0038I Pass  15: (4.03 seconds) suminf.  103.73684 (860) obj. 1.68707e+06 iterations 122
Cbc0038I Pass  16: (4.05 seconds) suminf.  103.65496 (878) obj. 1.68612e+06 iterations 52
Cbc0038I Pass  17: (4.06 seconds) suminf.  103.50115 (885) obj. 1.68585e+06 iterations 7
Cbc0038I Pass  18: (4.11 seconds) suminf.  104.35061 (876) obj. 1.68685e+06 iterations 109
Cbc0038I Pass  19: (4.13 seconds) suminf.  104.51963 (878) obj. 1.68696e+06 iterations 36
Cbc0038I Pass  20: (4.27 seconds) suminf.  100.81412 (887) obj. 1.68897e+06 iterations 344
Cbc0038I Pass  21: (4.33 seconds) suminf.   99.54181 (893) obj. 1.68937e+06 iterations 107
Cbc0038I Pass  22: (4.34 seconds) suminf.   99.72096 (901) obj. 1.68891e+06 iterations 28
Cbc0038I Pass  23: (4.41 seconds) suminf.   99.72128 (896) obj. 1.68853e+06 iterations 133
Cbc0038I Pass  24: (4.43 seconds) suminf.   99.68320 (898) obj. 1.689e+06 iterations 39
Cbc0038I Pass  25: (4.58 seconds) suminf.   96.50950 (858) obj. 1.68925e+06 iterations 361
Cbc0038I Pass  26: (4.69 seconds) suminf.   93.60453 (867) obj. 1.69193e+06 iterations 241
Cbc0038I Pass  27: (4.75 seconds) suminf.   94.21423 (885) obj. 1.69181e+06 iterations 132
Cbc0038I Pass  28: (4.86 seconds) suminf.   93.07688 (869) obj. 1.68707e+06 iterations 236
Cbc0038I Pass  29: (4.92 seconds) suminf.   92.68256 (885) obj. 1.68644e+06 iterations 112
Cbc0038I Pass  30: (4.97 seconds) suminf.   92.85131 (885) obj. 1.68629e+06 iterations 127
Cbc0038I Pass  31: (5.05 seconds) suminf.   91.10052 (862) obj. 1.68487e+06 iterations 166
Cbc0038I Pass  32: (5.08 seconds) suminf.   90.69983 (869) obj. 1.68472e+06 iterations 44
Cbc0038I Pass  33: (5.11 seconds) suminf.   90.32441 (859) obj. 1.68486e+06 iterations 71
Cbc0038I Pass  34: (5.54 seconds) suminf.  115.19793 (829) obj. 1.8376e+06 iterations 1329
Cbc0038I Pass  35: (5.83 seconds) suminf.   93.92826 (745) obj. 1.83436e+06 iterations 982
Cbc0038I Pass  36: (5.89 seconds) suminf.   91.38991 (747) obj. 1.83805e+06 iterations 139
Cbc0038I Pass  37: (5.95 seconds) suminf.   90.79144 (740) obj. 1.83579e+06 iterations 147
Cbc0038I Pass  38: (6.01 seconds) suminf.   89.62308 (735) obj. 1.89838e+06 iterations 158
Cbc0038I Pass  39: (6.14 seconds) suminf.   84.86493 (703) obj. 1.96923e+06 iterations 369
Cbc0038I Pass  40: (6.18 seconds) suminf.   84.86072 (716) obj. 1.96888e+06 iterations 89
Cbc0038I Pass  41: (6.27 seconds) suminf.   84.59517 (708) obj. 1.96795e+06 iterations 218
Cbc0038I Pass  42: (6.29 seconds) suminf.   84.87875 (705) obj. 1.96755e+06 iterations 34
Cbc0038I Pass  43: (6.38 seconds) suminf.   81.20066 (725) obj. 2.00176e+06 iterations 240
Cbc0038I Pass  44: (6.40 seconds) suminf.   80.81920 (713) obj. 2.00097e+06 iterations 31
Cbc0038I Pass  45: (6.52 seconds) suminf.   76.74578 (697) obj. 2.0558e+06 iterations 339
Cbc0038I Pass  46: (6.54 seconds) suminf.   76.95455 (695) obj. 2.05216e+06 iterations 31
Cbc0038I Pass  47: (6.59 seconds) suminf.   77.40414 (667) obj. 2.05345e+06 iterations 151
Cbc0038I Pass  48: (6.79 seconds) suminf.   74.43395 (707) obj. 2.02274e+06 iterations 655
Cbc0038I Pass  49: (6.86 seconds) suminf.   72.82290 (692) obj. 2.02064e+06 iterations 176
Cbc0038I Pass  50: (7.05 seconds) suminf.   69.08084 (724) obj. 2.07104e+06 iterations 562
Cbc0038I Pass  51: (7.10 seconds) suminf.   68.29254 (740) obj. 2.07102e+06 iterations 139
Cbc0038I Pass  52: (7.13 seconds) suminf.   66.63962 (741) obj. 2.07216e+06 iterations 59
Cbc0038I Pass  53: (7.31 seconds) suminf.   64.15565 (697) obj. 2.0774e+06 iterations 523
Cbc0038I Pass  54: (7.33 seconds) suminf.   63.97053 (704) obj. 2.04974e+06 iterations 60
Cbc0038I Pass  55: (7.36 seconds) suminf.   63.81806 (701) obj. 2.04961e+06 iterations 59
Cbc0038I Pass  56: (7.50 seconds) suminf.   60.70770 (687) obj. 2.1027e+06 iterations 401
Cbc0038I Pass  57: (7.54 seconds) suminf.   60.51914 (689) obj. 2.08162e+06 iterations 92
Cbc0038I Pass  58: (7.58 seconds) suminf.   60.83453 (692) obj. 2.0762e+06 iterations 90
Cbc0038I Pass  59: (7.74 seconds) suminf.   58.79495 (664) obj. 2.03673e+06 iterations 497
Cbc0038I Pass  60: (7.77 seconds) suminf.   58.51391 (663) obj. 2.05473e+06 iterations 84
Cbc0038I Pass  61: (7.92 seconds) suminf.   61.21879 (663) obj. 2.07372e+06 iterations 439
Cbc0038I Pass  62: (8.00 seconds) suminf.   58.89316 (661) obj. 2.07103e+06 iterations 226
Cbc0038I Pass  63: (8.10 seconds) suminf.   60.20532 (653) obj. 2.04255e+06 iterations 231
Cbc0038I Pass  64: (8.12 seconds) suminf.   59.55713 (662) obj. 2.04885e+06 iterations 46
Cbc0038I Pass  65: (8.15 seconds) suminf.   57.01924 (670) obj. 2.05172e+06 iterations 74
Cbc0038I Pass  66: (8.27 seconds) suminf.   57.50323 (612) obj. 2.10653e+06 iterations 331
Cbc0038I Pass  67: (8.29 seconds) suminf.   56.61101 (615) obj. 2.11619e+06 iterations 48
Cbc0038I Pass  68: (8.30 seconds) suminf.   56.42483 (614) obj. 2.11626e+06 iterations 12
Cbc0038I Pass  69: (8.37 seconds) suminf.   57.87966 (609) obj. 2.12041e+06 iterations 144
Cbc0038I Pass  70: (8.39 seconds) suminf.   56.76454 (605) obj. 2.11868e+06 iterations 32
Cbc0038I Pass  71: (8.42 seconds) suminf.   55.83823 (599) obj. 2.11954e+06 iterations 69
Cbc0038I Pass  72: (8.44 seconds) suminf.   55.74917 (605) obj. 2.12002e+06 iterations 34
Cbc0038I Pass  73: (8.52 seconds) suminf.   56.93311 (582) obj. 2.1205e+06 iterations 186
Cbc0038I Pass  74: (8.57 seconds) suminf.   54.84705 (592) obj. 2.13037e+06 iterations 154
Cbc0038I Pass  75: (8.58 seconds) suminf.   54.41678 (593) obj. 2.13016e+06 iterations 8
Cbc0038I Pass  76: (8.69 seconds) suminf.   54.44258 (576) obj. 2.07326e+06 iterations 307
Cbc0038I Pass  77: (8.72 seconds) suminf.   53.29117 (579) obj. 2.07737e+06 iterations 79
Cbc0038I Pass  78: (8.80 seconds) suminf.   53.17227 (575) obj. 2.06406e+06 iterations 209
Cbc0038I Pass  79: (8.83 seconds) suminf.   50.32007 (577) obj. 2.06399e+06 iterations 58
Cbc0038I Pass  80: (8.84 seconds) suminf.   50.50762 (577) obj. 2.06399e+06 iterations 8
Cbc0038I Pass  81: (8.94 seconds) suminf.   53.22485 (550) obj. 2.06168e+06 iterations 280
Cbc0038I Pass  82: (9.00 seconds) suminf.   50.42310 (573) obj. 2.06227e+06 iterations 156
Cbc0038I Pass  83: (9.02 seconds) suminf.   50.75586 (563) obj. 2.06406e+06 iterations 43
Cbc0038I Pass  84: (9.05 seconds) suminf.   50.23173 (572) obj. 2.06369e+06 iterations 62
Cbc0038I Pass  85: (9.15 seconds) suminf.   48.52163 (547) obj. 2.06274e+06 iterations 258
Cbc0038I Pass  86: (9.17 seconds) suminf.   48.51404 (542) obj. 2.06113e+06 iterations 36
Cbc0038I Pass  87: (9.21 seconds) suminf.   48.30112 (544) obj. 2.06191e+06 iterations 90
Cbc0038I Pass  88: (9.22 seconds) suminf.   48.20597 (543) obj. 2.06116e+06 iterations 32
Cbc0038I Pass  89: (9.28 seconds) suminf.   49.97784 (557) obj. 2.05934e+06 iterations 138
Cbc0038I Pass  90: (9.32 seconds) suminf.   48.77982 (550) obj. 2.06041e+06 iterations 113
Cbc0038I Pass  91: (9.43 seconds) suminf.   47.01069 (532) obj. 2.06361e+06 iterations 306
Cbc0038I Pass  92: (9.47 seconds) suminf.   47.30005 (540) obj. 2.06147e+06 iterations 101
Cbc0038I Pass  93: (9.58 seconds) suminf.   46.92200 (540) obj. 2.0566e+06 iterations 276
Cbc0038I Pass  94: (9.62 seconds) suminf.   45.44824 (536) obj. 2.06252e+06 iterations 106
Cbc0038I Pass  95: (9.73 seconds) suminf.   46.32634 (544) obj. 2.06314e+06 iterations 299
Cbc0038I Pass  96: (9.77 seconds) suminf.   46.22448 (541) obj. 2.0707e+06 iterations 84
Cbc0038I Pass  97: (9.84 seconds) suminf.   45.94983 (535) obj. 2.07321e+06 iterations 179
Cbc0038I Pass  98: (9.89 seconds) suminf.   44.46961 (542) obj. 2.0684e+06 iterations 137
Cbc0038I Pass  99: (9.96 seconds) suminf.   45.89022 (503) obj. 2.07914e+06 iterations 173
Cbc0038I Pass 100: (10.21 seconds) suminf.   67.53191 (535) obj. 2.18774e+06 iterations 943
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 625 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6948 rows 2249 columns, reduced to 3784 rows 1198 columns - too large
Cbc0038I Mini branch and bound did not improve solution (11.11 seconds)
Cbc0038I After 11.11 seconds - Feasibility pump exiting - took 9.33 seconds
Cbc0031I 45 added rows had average density of 4.9333333
Cbc0013I At root node, 45 cuts changed objective from 1396416.1 to 1425408 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 28 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.163 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 101 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.988 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 29 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 5 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 114 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.459 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 1425408 (18.21 seconds)
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 1425408 (111.83 seconds)
Cbc0010I After 200 nodes, 51 on tree, 1e+50 best solution, best possible 1425408 (169.57 seconds)
Cbc0010I After 300 nodes, 64 on tree, 1e+50 best solution, best possible 1425408 (241.25 seconds)
Cbc0010I After 400 nodes, 67 on tree, 1e+50 best solution, best possible 1425408 (307.09 seconds)
Cbc0010I After 500 nodes, 70 on tree, 1e+50 best solution, best possible 1425408 (370.39 seconds)
Cbc0010I After 600 nodes, 69 on tree, 1e+50 best solution, best possible 1425408 (396.39 seconds)
Cbc0010I After 700 nodes, 76 on tree, 1e+50 best solution, best possible 1425408 (420.43 seconds)
Cbc0010I After 800 nodes, 81 on tree, 1e+50 best solution, best possible 1425408 (436.46 seconds)
Cbc0010I After 900 nodes, 86 on tree, 1e+50 best solution, best possible 1425408 (442.52 seconds)
Cbc0010I After 1000 nodes, 78 on tree, 1e+50 best solution, best possible 1425408 (449.57 seconds)
Cbc0010I After 1100 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (473.33 seconds)
Cbc0010I After 1200 nodes, 78 on tree, 1e+50 best solution, best possible 1425408 (497.73 seconds)
Cbc0010I After 1300 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (527.93 seconds)
Cbc0010I After 1400 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (538.49 seconds)
Cbc0010I After 1500 nodes, 78 on tree, 1e+50 best solution, best possible 1425408 (546.58 seconds)
Cbc0010I After 1600 nodes, 77 on tree, 1e+50 best solution, best possible 1425408 (559.14 seconds)
Cbc0010I After 1700 nodes, 67 on tree, 1e+50 best solution, best possible 1425408 (589.74 seconds)
Cbc0010I After 1800 nodes, 87 on tree, 1e+50 best solution, best possible 1425408 (635.21 seconds)
Cbc0010I After 1900 nodes, 97 on tree, 1e+50 best solution, best possible 1425408 (639.81 seconds)
Cbc0010I After 2000 nodes, 100 on tree, 1e+50 best solution, best possible 1425408 (644.21 seconds)
Cbc0010I After 2100 nodes, 93 on tree, 1e+50 best solution, best possible 1425408 (648.20 seconds)
Cbc0010I After 2200 nodes, 88 on tree, 1e+50 best solution, best possible 1425408 (654.57 seconds)
Cbc0010I After 2300 nodes, 78 on tree, 1e+50 best solution, best possible 1425408 (673.24 seconds)
Cbc0010I After 2400 nodes, 80 on tree, 1e+50 best solution, best possible 1425408 (692.36 seconds)
Cbc0010I After 2500 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (706.91 seconds)
Cbc0010I After 2600 nodes, 72 on tree, 1e+50 best solution, best possible 1425408 (723.02 seconds)
Cbc0010I After 2700 nodes, 61 on tree, 1e+50 best solution, best possible 1425408 (749.61 seconds)
Cbc0010I After 2800 nodes, 86 on tree, 1e+50 best solution, best possible 1425408 (774.13 seconds)
Cbc0010I After 2900 nodes, 88 on tree, 1e+50 best solution, best possible 1425408 (789.52 seconds)
Cbc0010I After 3000 nodes, 82 on tree, 1e+50 best solution, best possible 1425408 (802.73 seconds)
Cbc0010I After 3100 nodes, 82 on tree, 1e+50 best solution, best possible 1425408 (814.91 seconds)
Cbc0010I After 3200 nodes, 81 on tree, 1e+50 best solution, best possible 1425408 (827.64 seconds)
Cbc0010I After 3300 nodes, 82 on tree, 1e+50 best solution, best possible 1425408 (849.91 seconds)
Cbc0010I After 3400 nodes, 87 on tree, 1e+50 best solution, best possible 1425408 (862.54 seconds)
Cbc0010I After 3500 nodes, 72 on tree, 1e+50 best solution, best possible 1425408 (882.73 seconds)
Cbc0010I After 3600 nodes, 80 on tree, 1e+50 best solution, best possible 1425408 (899.92 seconds)
Cbc0010I After 3700 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (918.77 seconds)
Cbc0010I After 3800 nodes, 71 on tree, 1e+50 best solution, best possible 1425408 (945.28 seconds)
Cbc0010I After 3900 nodes, 79 on tree, 1e+50 best solution, best possible 1425408 (967.55 seconds)
Cbc0010I After 4000 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (991.00 seconds)
Cbc0010I After 4100 nodes, 77 on tree, 1e+50 best solution, best possible 1425408 (1013.38 seconds)
Cbc0010I After 4200 nodes, 70 on tree, 1e+50 best solution, best possible 1425408 (1032.78 seconds)
Cbc0010I After 4300 nodes, 82 on tree, 1e+50 best solution, best possible 1425408 (1058.69 seconds)
Cbc0010I After 4400 nodes, 72 on tree, 1e+50 best solution, best possible 1425408 (1084.89 seconds)
Cbc0010I After 4500 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (1100.46 seconds)
Cbc0010I After 4600 nodes, 65 on tree, 1e+50 best solution, best possible 1425408 (1134.62 seconds)
Cbc0010I After 4700 nodes, 68 on tree, 1e+50 best solution, best possible 1425408 (1160.58 seconds)
Cbc0010I After 4800 nodes, 66 on tree, 1e+50 best solution, best possible 1425408 (1180.93 seconds)
Cbc0010I After 4900 nodes, 83 on tree, 1e+50 best solution, best possible 1425408 (1201.48 seconds)
Cbc0010I After 5000 nodes, 64 on tree, 1e+50 best solution, best possible 1425408 (1224.96 seconds)
Cbc0010I After 5100 nodes, 65 on tree, 1e+50 best solution, best possible 1425408 (1252.62 seconds)
Cbc0010I After 5200 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (1277.54 seconds)
Cbc0010I After 5300 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (1299.36 seconds)
Cbc0010I After 5400 nodes, 75 on tree, 1e+50 best solution, best possible 1425408 (1323.36 seconds)
Cbc0010I After 5500 nodes, 72 on tree, 1e+50 best solution, best possible 1425408 (1348.90 seconds)
Cbc0010I After 5600 nodes, 76 on tree, 1e+50 best solution, best possible 1425408 (1392.15 seconds)
Cbc0010I After 5700 nodes, 74 on tree, 1e+50 best solution, best possible 1425408 (1424.76 seconds)
Cbc0010I After 5800 nodes, 66 on tree, 1e+50 best solution, best possible 1425408 (1454.03 seconds)
Cbc0010I After 5900 nodes, 61 on tree, 1e+50 best solution, best possible 1425408 (1475.02 seconds)
Cbc0010I After 6000 nodes, 60 on tree, 1e+50 best solution, best possible 1425408 (1507.21 seconds)
Cbc0010I After 6100 nodes, 73 on tree, 1e+50 best solution, best possible 1425408 (1525.40 seconds)
Cbc0010I After 6200 nodes, 83 on tree, 1e+50 best solution, best possible 1425408 (1549.24 seconds)
Cbc0010I After 6300 nodes, 53 on tree, 1e+50 best solution, best possible 1425408 (1587.09 seconds)
Cbc0010I After 6400 nodes, 52 on tree, 1e+50 best solution, best possible 1425408 (1659.62 seconds)
Cbc0010I After 6500 nodes, 60 on tree, 1e+50 best solution, best possible 1425408 (1711.62 seconds)
Cbc0010I After 6600 nodes, 57 on tree, 1e+50 best solution, best possible 1425408 (1744.90 seconds)
Cbc0010I After 6700 nodes, 58 on tree, 1e+50 best solution, best possible 1425408 (1769.53 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1425408), took 3419931 iterations and 6796 nodes (1799.87 seconds)
Cbc0032I Strong branching done 40382 times (2035742 iterations), fathomed 708 nodes and fixed 3232 variables
Cbc0035I Maximum depth 115, 0 variables fixed on reduced cost
Cuts at root node changed objective from 1.39642e+06 to 1.42541e+06
Probing was tried 1190 times and created 55254 cuts of which 0 were active after adding rounds of cuts (2.286 seconds)
Gomory was tried 868 times and created 2307 cuts of which 0 were active after adding rounds of cuts (6.474 seconds)
Knapsack was tried 868 times and created 5974 cuts of which 0 were active after adding rounds of cuts (1.858 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.025 seconds)
MixedIntegerRounding2 was tried 10 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.027 seconds)
FlowCover was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.021 seconds)
TwoMirCuts was tried 868 times and created 19927 cuts of which 0 were active after adding rounds of cuts (2.408 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.090 seconds)
ImplicationCuts was tried 18 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    1425408.000
Enumerated nodes:               6796
Total iterations:               3419931
Time (CPU seconds):             1799.87
Time (Wallclock seconds):       1802.73

Total time (CPU seconds):       1799.92   (Wallclock seconds):       1802.78

