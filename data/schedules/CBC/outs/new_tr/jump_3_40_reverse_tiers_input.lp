Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_40_reverse_tiers_input.lp sec 1800 solve solu solutions/new_tr/jump_3_40_reverse_tiers_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 41757.3 - 2.36 seconds
Cgl0002I 403 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 734 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 126 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 4657 rows, 1399 columns (1399 integer (1358 of which binary)) and 15727 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1399 objects (1399 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 843 integers unsatisfied sum - 213.442
Cbc0038I Pass   1: (4.03 seconds) suminf.   90.30768 (577) obj. 68418.4 iterations 2975
Cbc0038I Pass   2: (4.21 seconds) suminf.   84.69158 (519) obj. 74180.4 iterations 818
Cbc0038I Pass   3: (4.33 seconds) suminf.   84.03079 (523) obj. 74198.1 iterations 462
Cbc0038I Pass   4: (4.36 seconds) suminf.   83.85741 (512) obj. 74185.9 iterations 70
Cbc0038I Pass   5: (4.38 seconds) suminf.   83.30263 (521) obj. 74201.6 iterations 45
Cbc0038I Pass   6: (4.77 seconds) suminf.  101.90956 (584) obj. 98068.9 iterations 1706
Cbc0038I Pass   7: (5.03 seconds) suminf.   75.82351 (553) obj. 99254.9 iterations 984
Cbc0038I Pass   8: (5.11 seconds) suminf.   72.97357 (548) obj. 99632.2 iterations 267
Cbc0038I Pass   9: (5.23 seconds) suminf.   69.95572 (554) obj. 99754 iterations 408
Cbc0038I Pass  10: (5.32 seconds) suminf.   68.26264 (538) obj. 99425.8 iterations 300
Cbc0038I Pass  11: (5.34 seconds) suminf.   69.02287 (541) obj. 99434.7 iterations 35
Cbc0038I Pass  12: (5.46 seconds) suminf.   66.26184 (512) obj. 99793.5 iterations 435
Cbc0038I Pass  13: (5.54 seconds) suminf.   62.74679 (503) obj. 99804.2 iterations 285
Cbc0038I Pass  14: (5.55 seconds) suminf.   61.35835 (503) obj. 99806.3 iterations 31
Cbc0038I Pass  15: (5.63 seconds) suminf.   60.24544 (510) obj. 98532.9 iterations 225
Cbc0038I Pass  16: (5.66 seconds) suminf.   58.84906 (501) obj. 98626.1 iterations 108
Cbc0038I Pass  17: (5.67 seconds) suminf.   58.82065 (500) obj. 98674.2 iterations 19
Cbc0038I Pass  18: (5.74 seconds) suminf.   58.63801 (486) obj. 99458.1 iterations 182
Cbc0038I Pass  19: (5.75 seconds) suminf.   57.71575 (494) obj. 99549.8 iterations 30
Cbc0038I Pass  20: (5.86 seconds) suminf.   54.27137 (455) obj. 98274 iterations 405
Cbc0038I Pass  21: (5.87 seconds) suminf.   54.38102 (457) obj. 98221.4 iterations 29
Cbc0038I Pass  22: (5.92 seconds) suminf.   53.15478 (440) obj. 98417.5 iterations 153
Cbc0038I Pass  23: (5.94 seconds) suminf.   52.61635 (433) obj. 98528.8 iterations 46
Cbc0038I Pass  24: (6.02 seconds) suminf.   53.21708 (447) obj. 98971 iterations 315
Cbc0038I Pass  25: (6.05 seconds) suminf.   52.58550 (429) obj. 98201.3 iterations 79
Cbc0038I Pass  26: (6.11 seconds) suminf.   52.38723 (440) obj. 98608.1 iterations 184
Cbc0038I Pass  27: (6.13 seconds) suminf.   52.79748 (427) obj. 98673.3 iterations 55
Cbc0038I Pass  28: (6.21 seconds) suminf.   51.18392 (425) obj. 94002.8 iterations 340
Cbc0038I Pass  29: (6.28 seconds) suminf.   49.84668 (434) obj. 92214.6 iterations 232
Cbc0038I Pass  30: (6.31 seconds) suminf.   48.85094 (439) obj. 92354.9 iterations 80
Cbc0038I Pass  31: (6.38 seconds) suminf.   46.44185 (411) obj. 95791.3 iterations 270
Cbc0038I Pass  32: (6.41 seconds) suminf.   45.82726 (407) obj. 96998.2 iterations 100
Cbc0038I Pass  33: (6.50 seconds) suminf.   44.66310 (399) obj. 104567 iterations 350
Cbc0038I Pass  34: (6.51 seconds) suminf.   43.77521 (406) obj. 106138 iterations 33
Cbc0038I Pass  35: (6.55 seconds) suminf.   42.23478 (411) obj. 105858 iterations 119
Cbc0038I Pass  36: (6.57 seconds) suminf.   41.40585 (386) obj. 105861 iterations 49
Cbc0038I Pass  37: (6.63 seconds) suminf.   41.36608 (382) obj. 105375 iterations 190
Cbc0038I Pass  38: (6.64 seconds) suminf.   41.25162 (382) obj. 105378 iterations 7
Cbc0038I Pass  39: (6.70 seconds) suminf.   42.81591 (369) obj. 105518 iterations 198
Cbc0038I Pass  40: (6.72 seconds) suminf.   42.25459 (385) obj. 106289 iterations 78
Cbc0038I Pass  41: (6.75 seconds) suminf.   40.66114 (382) obj. 105175 iterations 103
Cbc0038I Pass  42: (6.76 seconds) suminf.   40.85254 (382) obj. 106134 iterations 10
Cbc0038I Pass  43: (6.80 seconds) suminf.   41.06199 (379) obj. 102389 iterations 138
Cbc0038I Pass  44: (6.82 seconds) suminf.   40.58870 (374) obj. 103636 iterations 61
Cbc0038I Pass  45: (6.83 seconds) suminf.   40.32089 (377) obj. 105293 iterations 25
Cbc0038I Pass  46: (6.87 seconds) suminf.   40.72881 (379) obj. 105662 iterations 130
Cbc0038I Pass  47: (6.89 seconds) suminf.   40.32368 (376) obj. 105231 iterations 69
Cbc0038I Pass  48: (6.96 seconds) suminf.   40.16946 (368) obj. 106124 iterations 240
Cbc0038I Pass  49: (6.99 seconds) suminf.   40.14359 (368) obj. 106196 iterations 92
Cbc0038I Pass  50: (7.07 seconds) suminf.   37.41570 (372) obj. 105016 iterations 319
Cbc0038I Pass  51: (7.08 seconds) suminf.   36.78608 (369) obj. 105034 iterations 40
Cbc0038I Pass  52: (7.14 seconds) suminf.   38.85786 (357) obj. 106702 iterations 197
Cbc0038I Pass  53: (7.17 seconds) suminf.   38.18995 (357) obj. 106705 iterations 101
Cbc0038I Pass  54: (7.19 seconds) suminf.   38.85556 (360) obj. 106707 iterations 77
Cbc0038I Pass  55: (7.24 seconds) suminf.   38.82537 (357) obj. 106676 iterations 182
Cbc0038I Pass  56: (7.28 seconds) suminf.   37.24548 (365) obj. 105925 iterations 129
Cbc0038I Pass  57: (7.34 seconds) suminf.   39.74398 (366) obj. 106672 iterations 242
Cbc0038I Pass  58: (7.37 seconds) suminf.   38.37947 (375) obj. 106715 iterations 97
Cbc0038I Pass  59: (7.41 seconds) suminf.   38.05191 (365) obj. 105918 iterations 129
Cbc0038I Pass  60: (7.49 seconds) suminf.   40.23619 (348) obj. 99972.6 iterations 340
Cbc0038I Pass  61: (7.52 seconds) suminf.   38.41768 (357) obj. 100418 iterations 109
Cbc0038I Pass  62: (7.53 seconds) suminf.   38.60492 (355) obj. 100430 iterations 11
Cbc0038I Pass  63: (7.61 seconds) suminf.   34.79429 (332) obj. 97463.2 iterations 390
Cbc0038I Pass  64: (7.66 seconds) suminf.   33.75641 (338) obj. 93697.8 iterations 172
Cbc0038I Pass  65: (7.74 seconds) suminf.   33.78958 (351) obj. 94611.8 iterations 398
Cbc0038I Pass  66: (7.80 seconds) suminf.   32.64297 (347) obj. 93415.8 iterations 202
Cbc0038I Pass  67: (7.85 seconds) suminf.   35.05025 (338) obj. 94420.6 iterations 218
Cbc0038I Pass  68: (7.87 seconds) suminf.   34.20072 (327) obj. 94203 iterations 63
Cbc0038I Pass  69: (7.89 seconds) suminf.   34.60632 (325) obj. 94310.4 iterations 84
Cbc0038I Pass  70: (7.97 seconds) suminf.   35.82331 (334) obj. 94829.5 iterations 346
Cbc0038I Pass  71: (8.03 seconds) suminf.   33.84503 (350) obj. 94804.4 iterations 231
Cbc0038I Pass  72: (8.10 seconds) suminf.   34.07984 (314) obj. 95007.8 iterations 317
Cbc0038I Pass  73: (8.12 seconds) suminf.   33.74595 (316) obj. 94769.3 iterations 60
Cbc0038I Pass  74: (8.14 seconds) suminf.   33.83156 (317) obj. 94768.4 iterations 53
Cbc0038I Pass  75: (8.20 seconds) suminf.   34.34758 (300) obj. 91810 iterations 278
Cbc0038I Pass  76: (8.24 seconds) suminf.   34.26041 (303) obj. 91815.7 iterations 166
Cbc0038I Pass  77: (8.30 seconds) suminf.   31.98363 (298) obj. 93397.3 iterations 252
Cbc0038I Pass  78: (8.35 seconds) suminf.   30.56255 (305) obj. 91879.4 iterations 181
Cbc0038I Pass  79: (8.36 seconds) suminf.   30.40934 (302) obj. 91998.2 iterations 69
Cbc0038I Pass  80: (8.42 seconds) suminf.   32.07027 (298) obj. 91512.6 iterations 226
Cbc0038I Pass  81: (8.44 seconds) suminf.   32.04372 (295) obj. 91519.9 iterations 61
Cbc0038I Pass  82: (8.49 seconds) suminf.   31.84320 (301) obj. 91991.5 iterations 232
Cbc0038I Pass  83: (8.52 seconds) suminf.   31.21612 (304) obj. 91560.8 iterations 88
Cbc0038I Pass  84: (8.58 seconds) suminf.   31.64307 (297) obj. 91621 iterations 252
Cbc0038I Pass  85: (8.61 seconds) suminf.   31.81247 (293) obj. 91370.7 iterations 113
Cbc0038I Pass  86: (8.64 seconds) suminf.   30.18937 (295) obj. 91778.3 iterations 150
Cbc0038I Pass  87: (8.66 seconds) suminf.   30.41135 (302) obj. 91352.5 iterations 70
Cbc0038I Pass  88: (8.73 seconds) suminf.   30.39804 (294) obj. 92799.7 iterations 244
Cbc0038I Pass  89: (8.76 seconds) suminf.   30.31055 (294) obj. 92556.3 iterations 168
Cbc0038I Pass  90: (8.86 seconds) suminf.   29.91872 (304) obj. 96323.4 iterations 434
Cbc0038I Pass  91: (8.88 seconds) suminf.   29.00591 (289) obj. 96237.3 iterations 66
Cbc0038I Pass  92: (8.95 seconds) suminf.   26.29043 (272) obj. 100044 iterations 334
Cbc0038I Pass  93: (8.97 seconds) suminf.   25.02674 (271) obj. 100059 iterations 66
Cbc0038I Pass  94: (8.99 seconds) suminf.   24.53852 (271) obj. 100239 iterations 66
Cbc0038I Pass  95: (9.04 seconds) suminf.   27.33087 (279) obj. 98517.8 iterations 212
Cbc0038I Pass  96: (9.07 seconds) suminf.   26.65613 (280) obj. 98827 iterations 104
Cbc0038I Pass  97: (9.13 seconds) suminf.   26.13319 (291) obj. 98857.6 iterations 260
Cbc0038I Pass  98: (9.16 seconds) suminf.   25.86491 (283) obj. 98749.4 iterations 90
Cbc0038I Pass  99: (9.20 seconds) suminf.   25.09219 (264) obj. 98751.1 iterations 154
Cbc0038I Pass 100: (9.44 seconds) suminf.   71.31713 (438) obj. 91755.8 iterations 1242
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 166 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4657 rows 1399 columns, reduced to 4193 rows 1209 columns - too large
Cbc0038I Mini branch and bound did not improve solution (11.63 seconds)
Cbc0038I After 11.63 seconds - Feasibility pump exiting - took 8.35 seconds
Cbc0031I 9 added rows had average density of 6.2222222
Cbc0013I At root node, 9 cuts changed objective from 42064.529 to 42135.443 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.253 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 12 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 42135.443 (15.04 seconds)
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 42155 (84.91 seconds)
Cbc0010I After 200 nodes, 2 on tree, 1e+50 best solution, best possible 42164 (154.30 seconds)
Cbc0010I After 300 nodes, 3 on tree, 1e+50 best solution, best possible 42164 (228.41 seconds)
Cbc0010I After 400 nodes, 10 on tree, 1e+50 best solution, best possible 42164 (298.98 seconds)
Cbc0010I After 500 nodes, 14 on tree, 1e+50 best solution, best possible 42164 (371.46 seconds)
Cbc0010I After 600 nodes, 26 on tree, 1e+50 best solution, best possible 42164 (441.94 seconds)
Cbc0010I After 700 nodes, 30 on tree, 1e+50 best solution, best possible 42164 (521.31 seconds)
Cbc0010I After 800 nodes, 36 on tree, 1e+50 best solution, best possible 42164 (601.83 seconds)
Cbc0010I After 900 nodes, 47 on tree, 1e+50 best solution, best possible 42164 (682.74 seconds)
Cbc0010I After 1000 nodes, 50 on tree, 1e+50 best solution, best possible 42164 (763.50 seconds)
Cbc0010I After 1100 nodes, 47 on tree, 1e+50 best solution, best possible 42183 (832.74 seconds)
Cbc0010I After 1200 nodes, 46 on tree, 1e+50 best solution, best possible 42183 (908.17 seconds)
Cbc0010I After 1300 nodes, 46 on tree, 1e+50 best solution, best possible 42183 (985.60 seconds)
Cbc0010I After 1400 nodes, 49 on tree, 1e+50 best solution, best possible 42183 (1065.36 seconds)
Cbc0010I After 1500 nodes, 55 on tree, 1e+50 best solution, best possible 42183 (1135.16 seconds)
Cbc0010I After 1600 nodes, 49 on tree, 1e+50 best solution, best possible 42183 (1210.34 seconds)
Cbc0010I After 1700 nodes, 49 on tree, 1e+50 best solution, best possible 42183 (1285.50 seconds)
Cbc0010I After 1800 nodes, 47 on tree, 1e+50 best solution, best possible 42183 (1360.44 seconds)
Cbc0010I After 1900 nodes, 57 on tree, 1e+50 best solution, best possible 42183 (1428.23 seconds)
Cbc0010I After 2000 nodes, 50 on tree, 1e+50 best solution, best possible 42183 (1489.75 seconds)
Cbc0010I After 2100 nodes, 58 on tree, 1e+50 best solution, best possible 42183 (1551.70 seconds)
Cbc0010I After 2200 nodes, 57 on tree, 1e+50 best solution, best possible 42183 (1612.49 seconds)
Cbc0010I After 2300 nodes, 46 on tree, 1e+50 best solution, best possible 42183 (1679.42 seconds)
Cbc0010I After 2400 nodes, 47 on tree, 1e+50 best solution, best possible 42183 (1750.10 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 42183), took 2683923 iterations and 2470 nodes (1799.17 seconds)
Cbc0032I Strong branching done 19962 times (1873733 iterations), fathomed 58 nodes and fixed 102 variables
Cbc0035I Maximum depth 175, 0 variables fixed on reduced cost
Cuts at root node changed objective from 42064.5 to 42135.4
Probing was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.041 seconds)
Gomory was tried 299 times and created 178 cuts of which 0 were active after adding rounds of cuts (3.529 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.013 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
TwoMirCuts was tried 4 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.193 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    42183.000
Enumerated nodes:               2470
Total iterations:               2683923
Time (CPU seconds):             1799.17
Time (Wallclock seconds):       1800.76

Total time (CPU seconds):       1799.19   (Wallclock seconds):       1800.78

