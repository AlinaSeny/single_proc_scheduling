Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang7_3_up_right_input.lp sec 1800 solve solu solutions/new_tr/triang7_3_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 297.673 - 0.07 seconds
Cgl0002I 474 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 370 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 186 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1485 rows, 526 columns (526 integer (498 of which binary)) and 4993 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 526 objects (526 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 260 integers unsatisfied sum - 64.4786
Cbc0038I Pass   1: suminf.   28.85297 (179) obj. 362.981 iterations 569
Cbc0038I Pass   2: suminf.   27.40652 (176) obj. 360.806 iterations 84
Cbc0038I Pass   3: suminf.   23.25809 (178) obj. 355.91 iterations 73
Cbc0038I Pass   4: suminf.   23.71643 (181) obj. 356.041 iterations 26
Cbc0038I Pass   5: suminf.   22.16285 (168) obj. 401.646 iterations 111
Cbc0038I Pass   6: suminf.   22.90770 (178) obj. 398.518 iterations 43
Cbc0038I Pass   7: suminf.   20.49725 (146) obj. 414.147 iterations 183
Cbc0038I Pass   8: suminf.   19.11355 (146) obj. 419.218 iterations 54
Cbc0038I Pass   9: suminf.   18.73601 (144) obj. 417.56 iterations 49
Cbc0038I Pass  10: suminf.   15.05090 (119) obj. 447.439 iterations 213
Cbc0038I Pass  11: suminf.   12.01602 (118) obj. 461.051 iterations 97
Cbc0038I Pass  12: suminf.   11.48723 (124) obj. 442.09 iterations 46
Cbc0038I Pass  13: suminf.   11.44398 (99) obj. 445.507 iterations 127
Cbc0038I Pass  14: suminf.   10.87303 (93) obj. 445.538 iterations 17
Cbc0038I Pass  15: suminf.    8.40649 (96) obj. 443.218 iterations 117
Cbc0038I Pass  16: suminf.    6.45202 (92) obj. 443.11 iterations 24
Cbc0038I Pass  17: suminf.    6.39317 (88) obj. 443.587 iterations 29
Cbc0038I Pass  18: suminf.    1.83882 (54) obj. 438.958 iterations 133
Cbc0038I Pass  19: suminf.    1.83882 (54) obj. 438.958 iterations 13
Cbc0038I Pass  20: suminf.    3.80471 (44) obj. 417.714 iterations 169
Cbc0038I Pass  21: suminf.    3.80471 (44) obj. 417.714 iterations 2
Cbc0038I Pass  22: suminf.    4.52507 (56) obj. 384.147 iterations 141
Cbc0038I Pass  23: suminf.    4.05727 (51) obj. 384.095 iterations 30
Cbc0038I Pass  24: suminf.    3.40674 (40) obj. 384.07 iterations 27
Cbc0038I Pass  25: suminf.    1.08670 (34) obj. 384.013 iterations 9
Cbc0038I Pass  26: suminf.    1.32382 (34) obj. 436.038 iterations 106
Cbc0038I Pass  27: suminf.    1.30346 (33) obj. 436.038 iterations 1
Cbc0038I Pass  28: suminf.    1.20508 (34) obj. 447.837 iterations 62
Cbc0038I Pass  29: suminf.    3.54917 (39) obj. 420.515 iterations 98
Cbc0038I Pass  30: suminf.    1.55920 (42) obj. 421.412 iterations 52
Cbc0038I Pass  31: suminf.    2.67749 (29) obj. 469 iterations 77
Cbc0038I Pass  32: suminf.    2.67749 (29) obj. 469 iterations 6
Cbc0038I Pass  33: suminf.    0.59536 (18) obj. 469 iterations 72
Cbc0038I Pass  34: suminf.    0.59536 (18) obj. 469 iterations 6
Cbc0038I Pass  35: suminf.    0.00000 (0) obj. 469 iterations 38
Cbc0038I Solution found of 469
Cbc0038I Cleaned solution of 469
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1117 rows 355 columns - 24 fixed gives 931, 283 - still too large
Cbc0038I Mini branch and bound did not improve solution (0.53 seconds)
Cbc0038I Round again with cutoff of 450.967
Cbc0038I Pass  36: suminf.   28.85297 (179) obj. 362.981 iterations 0
Cbc0038I Pass  37: suminf.   27.40652 (176) obj. 360.806 iterations 85
Cbc0038I Pass  38: suminf.   23.25809 (178) obj. 355.91 iterations 80
Cbc0038I Pass  39: suminf.   23.71643 (181) obj. 356.041 iterations 38
Cbc0038I Pass  40: suminf.   22.90890 (174) obj. 431.082 iterations 186
Cbc0038I Pass  41: suminf.   20.55749 (165) obj. 419.921 iterations 82
Cbc0038I Pass  42: suminf.   21.39863 (163) obj. 415.516 iterations 9
Cbc0038I Pass  43: suminf.   18.09930 (147) obj. 407.084 iterations 173
Cbc0038I Pass  44: suminf.   15.72309 (144) obj. 406.813 iterations 67
Cbc0038I Pass  45: suminf.   15.42802 (151) obj. 403.451 iterations 33
Cbc0038I Pass  46: suminf.   16.08804 (138) obj. 430.215 iterations 185
Cbc0038I Pass  47: suminf.   15.30785 (141) obj. 426.17 iterations 60
Cbc0038I Pass  48: suminf.   15.62838 (128) obj. 450.967 iterations 204
Cbc0038I Pass  49: suminf.   14.44390 (139) obj. 450.967 iterations 130
Cbc0038I Pass  50: suminf.   13.58128 (121) obj. 450.967 iterations 99
Cbc0038I Pass  51: suminf.   11.90520 (119) obj. 450.967 iterations 17
Cbc0038I Pass  52: suminf.   11.89050 (117) obj. 450.967 iterations 6
Cbc0038I Pass  53: suminf.   11.19666 (107) obj. 450.967 iterations 52
Cbc0038I Pass  54: suminf.   11.10888 (108) obj. 450.967 iterations 17
Cbc0038I Pass  55: suminf.   14.16840 (113) obj. 450.967 iterations 140
Cbc0038I Pass  56: suminf.   11.53971 (111) obj. 450.967 iterations 45
Cbc0038I Pass  57: suminf.   14.10378 (111) obj. 450.967 iterations 167
Cbc0038I Pass  58: suminf.   12.20496 (114) obj. 450.967 iterations 30
Cbc0038I Pass  59: suminf.   13.85521 (96) obj. 450.967 iterations 184
Cbc0038I Pass  60: suminf.   12.95078 (114) obj. 450.967 iterations 54
Cbc0038I Pass  61: suminf.    8.46837 (103) obj. 450.967 iterations 76
Cbc0038I Pass  62: suminf.    6.98577 (88) obj. 450.967 iterations 52
Cbc0038I Pass  63: suminf.    4.89523 (78) obj. 450.967 iterations 34
Cbc0038I Pass  64: suminf.    4.40363 (54) obj. 450.967 iterations 111
Cbc0038I Pass  65: suminf.    1.35645 (24) obj. 450.967 iterations 49
Cbc0038I Pass  66: suminf.    0.03256 (1) obj. 450.967 iterations 27
Cbc0038I Solution found of 450.967
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 1486 rows 526 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 371
Cbc0038I Before mini branch and bound, 161 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1128 rows 361 columns - 60 fixed gives 717, 208 - ok now
Cbc0038I Full problem 1485 rows 526 columns, reduced to 80 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.80 seconds)
Cbc0038I Round again with cutoff of 355.535
Cbc0038I Pass  67: suminf.   28.69065 (179) obj. 355 iterations 12
Cbc0038I Pass  68: suminf.   23.92528 (186) obj. 355.535 iterations 130
Cbc0038I Pass  69: suminf.   24.08588 (185) obj. 355.535 iterations 70
Cbc0038I Pass  70: suminf.   24.00260 (184) obj. 355.535 iterations 114
Cbc0038I Pass  71: suminf.   23.22079 (173) obj. 355.535 iterations 41
Cbc0038I Pass  72: suminf.   22.82504 (174) obj. 355.535 iterations 30
Cbc0038I Pass  73: suminf.   24.52665 (172) obj. 355.535 iterations 184
Cbc0038I Pass  74: suminf.   22.13973 (165) obj. 355.535 iterations 93
Cbc0038I Pass  75: suminf.   23.67694 (169) obj. 355.535 iterations 162
Cbc0038I Pass  76: suminf.   21.44806 (155) obj. 355.535 iterations 60
Cbc0038I Pass  77: suminf.   21.10974 (169) obj. 355.535 iterations 37
Cbc0038I Pass  78: suminf.   21.97739 (149) obj. 355.535 iterations 213
Cbc0038I Pass  79: suminf.   19.32573 (161) obj. 355.535 iterations 63
Cbc0038I Pass  80: suminf.   18.83613 (131) obj. 355.535 iterations 220
Cbc0038I Pass  81: suminf.   17.70468 (146) obj. 355.535 iterations 57
Cbc0038I Pass  82: suminf.   17.14374 (112) obj. 355.535 iterations 153
Cbc0038I Pass  83: suminf.   14.29785 (135) obj. 355.535 iterations 101
Cbc0038I Pass  84: suminf.   18.39013 (127) obj. 355.535 iterations 125
Cbc0038I Pass  85: suminf.   16.14567 (135) obj. 355.535 iterations 52
Cbc0038I Pass  86: suminf.   14.33262 (128) obj. 355.535 iterations 53
Cbc0038I Pass  87: suminf.   19.23133 (126) obj. 355.535 iterations 122
Cbc0038I Pass  88: suminf.   14.32635 (106) obj. 355.535 iterations 80
Cbc0038I Pass  89: suminf.   14.10452 (108) obj. 355.535 iterations 23
Cbc0038I Pass  90: suminf.   14.01753 (108) obj. 355.535 iterations 6
Cbc0038I Pass  91: suminf.   11.48960 (87) obj. 355.535 iterations 97
Cbc0038I Pass  92: suminf.   11.75210 (94) obj. 355.535 iterations 16
Cbc0038I Pass  93: suminf.   13.47311 (95) obj. 355.535 iterations 139
Cbc0038I Pass  94: suminf.    9.90928 (67) obj. 355.535 iterations 53
Cbc0038I Pass  95: suminf.    9.95729 (69) obj. 355.535 iterations 15
Cbc0038I Pass  96: suminf.    8.91785 (77) obj. 355.535 iterations 75
Cbc0038I Pass  97: suminf.    8.55886 (81) obj. 355.535 iterations 41
Cbc0038I Pass  98: suminf.    9.93611 (81) obj. 355.535 iterations 102
Cbc0038I Pass  99: suminf.    9.67348 (95) obj. 355.535 iterations 115
Cbc0038I Pass 100: suminf.   10.42523 (76) obj. 355.535 iterations 73
Cbc0038I Pass 101: suminf.    7.47714 (72) obj. 355.535 iterations 43
Cbc0038I Pass 102: suminf.    7.31716 (74) obj. 355.535 iterations 11
Cbc0038I Pass 103: suminf.   13.21720 (79) obj. 355.535 iterations 103
Cbc0038I Pass 104: suminf.   14.19601 (78) obj. 355.535 iterations 17
Cbc0038I Pass 105: suminf.   12.06178 (86) obj. 355.535 iterations 111
Cbc0038I Pass 106: suminf.    9.08682 (78) obj. 355.535 iterations 65
Cbc0038I Pass 107: suminf.    7.74393 (73) obj. 355.535 iterations 59
Cbc0038I Pass 108: suminf.   12.38535 (52) obj. 355.535 iterations 135
Cbc0038I Pass 109: suminf.    8.64942 (70) obj. 355.535 iterations 103
Cbc0038I Pass 110: suminf.    7.83261 (68) obj. 355.535 iterations 27
Cbc0038I Pass 111: suminf.    8.15192 (52) obj. 355.535 iterations 137
Cbc0038I Pass 112: suminf.    7.74393 (73) obj. 355.535 iterations 95
Cbc0038I Pass 113: suminf.   14.73123 (87) obj. 355.535 iterations 159
Cbc0038I Pass 114: suminf.   10.20404 (71) obj. 355.535 iterations 107
Cbc0038I Pass 115: suminf.    8.38944 (91) obj. 355.535 iterations 210
Cbc0038I Pass 116: suminf.    8.32707 (85) obj. 355.535 iterations 68
Cbc0038I Pass 117: suminf.   11.48559 (98) obj. 355.535 iterations 180
Cbc0038I Pass 118: suminf.    9.86900 (96) obj. 355.535 iterations 37
Cbc0038I Pass 119: suminf.    9.23946 (57) obj. 355.535 iterations 209
Cbc0038I Pass 120: suminf.    8.43476 (64) obj. 355.535 iterations 110
Cbc0038I Pass 121: suminf.   14.14595 (74) obj. 355.535 iterations 172
Cbc0038I Pass 122: suminf.   14.76963 (70) obj. 355.535 iterations 78
Cbc0038I Pass 123: suminf.    6.67397 (58) obj. 355.535 iterations 96
Cbc0038I Pass 124: suminf.    6.14803 (72) obj. 355.535 iterations 52
Cbc0038I Pass 125: suminf.   11.93625 (77) obj. 355.535 iterations 159
Cbc0038I Pass 126: suminf.    5.24247 (89) obj. 355.535 iterations 141
Cbc0038I Pass 127: suminf.    3.88862 (62) obj. 355.535 iterations 88
Cbc0038I Pass 128: suminf.    3.96360 (77) obj. 355.535 iterations 27
Cbc0038I Pass 129: suminf.   13.34866 (108) obj. 355.535 iterations 166
Cbc0038I Pass 130: suminf.   13.84692 (108) obj. 355.535 iterations 26
Cbc0038I Pass 131: suminf.   10.57632 (62) obj. 355.535 iterations 148
Cbc0038I Pass 132: suminf.    8.67624 (89) obj. 355.535 iterations 111
Cbc0038I Pass 133: suminf.    6.18386 (79) obj. 355.535 iterations 245
Cbc0038I Pass 134: suminf.    6.48080 (85) obj. 355.535 iterations 81
Cbc0038I Pass 135: suminf.    6.04730 (91) obj. 355.535 iterations 30
Cbc0038I Pass 136: suminf.   11.39539 (54) obj. 355.535 iterations 134
Cbc0038I Pass 137: suminf.   10.45501 (58) obj. 355.535 iterations 35
Cbc0038I Pass 138: suminf.    8.10084 (73) obj. 355.535 iterations 110
Cbc0038I Pass 139: suminf.    7.14555 (77) obj. 355.535 iterations 48
Cbc0038I Pass 140: suminf.    7.05909 (56) obj. 355.535 iterations 105
Cbc0038I Pass 141: suminf.    7.01177 (87) obj. 355.535 iterations 161
Cbc0038I Pass 142: suminf.    9.47696 (95) obj. 355.535 iterations 150
Cbc0038I Pass 143: suminf.    8.74042 (101) obj. 355.535 iterations 26
Cbc0038I Pass 144: suminf.    9.22175 (74) obj. 355.535 iterations 73
Cbc0038I Pass 145: suminf.    8.56216 (90) obj. 355.535 iterations 39
Cbc0038I Pass 146: suminf.    8.49271 (85) obj. 355.535 iterations 19
Cbc0038I Pass 147: suminf.    8.02120 (58) obj. 355.535 iterations 231
Cbc0038I Pass 148: suminf.    5.86924 (94) obj. 355.535 iterations 95
Cbc0038I Pass 149: suminf.    6.87246 (82) obj. 355.535 iterations 164
Cbc0038I Pass 150: suminf.    6.22956 (76) obj. 355.535 iterations 36
Cbc0038I Pass 151: suminf.   11.30734 (58) obj. 355.535 iterations 178
Cbc0038I Pass 152: suminf.    8.79797 (57) obj. 355.535 iterations 47
Cbc0038I Pass 153: suminf.    8.05073 (56) obj. 355.535 iterations 20
Cbc0038I Pass 154: suminf.    5.52076 (63) obj. 355.535 iterations 154
Cbc0038I Pass 155: suminf.    4.49433 (89) obj. 355.535 iterations 96
Cbc0038I Pass 156: suminf.    7.38165 (86) obj. 355.535 iterations 160
Cbc0038I Pass 157: suminf.    8.83945 (98) obj. 355.535 iterations 27
Cbc0038I Pass 158: suminf.    9.30915 (102) obj. 355.535 iterations 128
Cbc0038I Pass 159: suminf.    9.33494 (100) obj. 355.535 iterations 48
Cbc0038I Pass 160: suminf.    8.18554 (66) obj. 355.535 iterations 186
Cbc0038I Pass 161: suminf.    6.05165 (76) obj. 355.535 iterations 63
Cbc0038I Pass 162: suminf.    7.56168 (104) obj. 355.535 iterations 220
Cbc0038I Pass 163: suminf.    7.22419 (101) obj. 355.535 iterations 33
Cbc0038I Pass 164: suminf.    7.05591 (88) obj. 355.535 iterations 118
Cbc0038I Pass 165: suminf.    5.86121 (85) obj. 355.535 iterations 74
Cbc0038I Pass 166: suminf.   31.05497 (190) obj. 355.535 iterations 247
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 1485 rows 526 columns, reduced to 1262 rows 420 columns - 62 fixed gives 857, 255 - still too large
Cbc0038I Full problem 1485 rows 526 columns, reduced to 84 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (1.57 seconds)
Cbc0038I After 1.57 seconds - Feasibility pump exiting with objective of 371 - took 1.36 seconds
Cbc0012I Integer solution of 371 found by feasibility pump after 0 iterations and 0 nodes (1.57 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 941 rows 271 columns - 60 fixed gives 614, 158 - ok now
Cbc0031I 36 added rows had average density of 213.88889
Cbc0013I At root node, 36 cuts changed objective from 297.67347 to 312 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 100 row cuts average 2.1 elements, 7 column cuts (7 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 41 row cuts average 286.0 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 203 row cuts average 329.0 elements, 0 column cuts (0 active)  in 0.441 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 371 best solution, best possible 312 (3.40 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 379 rows 114 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 349 rows 110 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 397 rows 126 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 361 rows 115 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 325 rows 105 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 357 rows 108 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 374 rows 120 columns
Cbc0010I After 1000 nodes, 13 on tree, 371 best solution, best possible 318 (28.34 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 394 rows 126 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 396 rows 124 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 425 rows 137 columns
Cbc0010I After 2000 nodes, 11 on tree, 371 best solution, best possible 318 (41.09 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 287 rows 91 columns
Cbc0010I After 3000 nodes, 4 on tree, 371 best solution, best possible 318 (52.38 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 384 rows 123 columns
Cbc0010I After 4000 nodes, 13 on tree, 371 best solution, best possible 320 (61.31 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 384 rows 123 columns
Cbc0010I After 5000 nodes, 6 on tree, 371 best solution, best possible 321 (70.56 seconds)
Cbc0010I After 6000 nodes, 20 on tree, 371 best solution, best possible 322 (83.82 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 412 rows 130 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 497 rows 157 columns
Cbc0010I After 7000 nodes, 6 on tree, 371 best solution, best possible 322 (96.91 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 458 rows 145 columns
Cbc0010I After 8000 nodes, 14 on tree, 371 best solution, best possible 323 (108.00 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 387 rows 121 columns
Cbc0038I Full problem 1485 rows 526 columns, reduced to 406 rows 125 columns
Cbc0010I After 9000 nodes, 5 on tree, 371 best solution, best possible 323 (120.88 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 468 rows 149 columns
Cbc0010I After 10000 nodes, 13 on tree, 371 best solution, best possible 324 (135.03 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 387 rows 123 columns
Cbc0010I After 11000 nodes, 7 on tree, 371 best solution, best possible 324 (146.37 seconds)
Cbc0010I After 12000 nodes, 19 on tree, 371 best solution, best possible 325 (157.56 seconds)
Cbc0010I After 13000 nodes, 15 on tree, 371 best solution, best possible 325 (167.32 seconds)
Cbc0010I After 14000 nodes, 2 on tree, 371 best solution, best possible 325 (179.41 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 385 rows 118 columns
Cbc0010I After 15000 nodes, 15 on tree, 371 best solution, best possible 326 (190.69 seconds)
Cbc0010I After 16000 nodes, 13 on tree, 371 best solution, best possible 326 (201.75 seconds)
Cbc0010I After 17000 nodes, 24 on tree, 371 best solution, best possible 327 (213.37 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 372 rows 114 columns
Cbc0010I After 18000 nodes, 11 on tree, 371 best solution, best possible 327 (224.11 seconds)
Cbc0010I After 19000 nodes, 27 on tree, 371 best solution, best possible 327 (233.26 seconds)
Cbc0010I After 20000 nodes, 24 on tree, 371 best solution, best possible 327 (243.68 seconds)
Cbc0010I After 21000 nodes, 21 on tree, 371 best solution, best possible 328 (254.00 seconds)
Cbc0010I After 22000 nodes, 16 on tree, 371 best solution, best possible 328 (264.59 seconds)
Cbc0010I After 23000 nodes, 13 on tree, 371 best solution, best possible 328 (273.91 seconds)
Cbc0010I After 24000 nodes, 10 on tree, 371 best solution, best possible 328 (283.19 seconds)
Cbc0010I After 25000 nodes, 12 on tree, 371 best solution, best possible 329 (291.76 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 349 rows 107 columns
Cbc0010I After 26000 nodes, 12 on tree, 371 best solution, best possible 329 (300.11 seconds)
Cbc0010I After 27000 nodes, 33 on tree, 371 best solution, best possible 329 (309.21 seconds)
Cbc0010I After 28000 nodes, 25 on tree, 371 best solution, best possible 329 (320.94 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 434 rows 138 columns
Cbc0010I After 29000 nodes, 23 on tree, 371 best solution, best possible 330 (329.83 seconds)
Cbc0010I After 30000 nodes, 15 on tree, 371 best solution, best possible 330 (340.34 seconds)
Cbc0010I After 31000 nodes, 33 on tree, 371 best solution, best possible 330 (350.70 seconds)
Cbc0010I After 32000 nodes, 11 on tree, 371 best solution, best possible 331 (360.53 seconds)
Cbc0010I After 33000 nodes, 26 on tree, 371 best solution, best possible 331 (371.05 seconds)
Cbc0010I After 34000 nodes, 14 on tree, 371 best solution, best possible 331 (380.16 seconds)
Cbc0010I After 35000 nodes, 20 on tree, 371 best solution, best possible 331 (387.75 seconds)
Cbc0010I After 36000 nodes, 13 on tree, 371 best solution, best possible 331 (398.05 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 346 rows 110 columns
Cbc0010I After 37000 nodes, 4 on tree, 371 best solution, best possible 332 (407.71 seconds)
Cbc0010I After 38000 nodes, 16 on tree, 371 best solution, best possible 332 (415.89 seconds)
Cbc0010I After 39000 nodes, 29 on tree, 371 best solution, best possible 332 (423.88 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 377 rows 118 columns
Cbc0010I After 40000 nodes, 25 on tree, 371 best solution, best possible 332 (433.27 seconds)
Cbc0010I After 41000 nodes, 28 on tree, 371 best solution, best possible 332 (442.11 seconds)
Cbc0010I After 42000 nodes, 14 on tree, 371 best solution, best possible 332 (452.10 seconds)
Cbc0010I After 43000 nodes, 13 on tree, 371 best solution, best possible 333 (461.88 seconds)
Cbc0010I After 44000 nodes, 21 on tree, 371 best solution, best possible 333 (470.55 seconds)
Cbc0010I After 45000 nodes, 18 on tree, 371 best solution, best possible 333 (479.13 seconds)
Cbc0010I After 46000 nodes, 11 on tree, 371 best solution, best possible 333 (487.54 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 434 rows 133 columns
Cbc0010I After 47000 nodes, 22 on tree, 371 best solution, best possible 334 (498.29 seconds)
Cbc0010I After 48000 nodes, 21 on tree, 371 best solution, best possible 334 (506.66 seconds)
Cbc0010I After 49000 nodes, 14 on tree, 371 best solution, best possible 334 (516.11 seconds)
Cbc0010I After 50000 nodes, 12 on tree, 371 best solution, best possible 335 (524.32 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 366 rows 114 columns
Cbc0010I After 51000 nodes, 40 on tree, 371 best solution, best possible 335 (533.42 seconds)
Cbc0010I After 52000 nodes, 36 on tree, 371 best solution, best possible 335 (543.31 seconds)
Cbc0010I After 53000 nodes, 37 on tree, 371 best solution, best possible 335 (552.00 seconds)
Cbc0038I Full problem 1485 rows 526 columns, reduced to 338 rows 106 columns
Cbc0010I After 54000 nodes, 12 on tree, 371 best solution, best possible 335 (562.10 seconds)
Cbc0010I After 55000 nodes, 18 on tree, 371 best solution, best possible 335 (571.62 seconds)
Cbc0010I After 56000 nodes, 22 on tree, 371 best solution, best possible 336 (581.15 seconds)
Cbc0010I After 57000 nodes, 43 on tree, 371 best solution, best possible 336 (590.26 seconds)
Cbc0010I After 58000 nodes, 18 on tree, 371 best solution, best possible 336 (601.49 seconds)
Cbc0010I After 59000 nodes, 17 on tree, 371 best solution, best possible 336 (610.83 seconds)
Cbc0004I Integer solution of 336 found after 5780812 iterations and 59462 nodes (614.94 seconds)
Cbc0001I Search completed - best objective 336, took 5780812 iterations and 59462 nodes (614.94 seconds)
Cbc0032I Strong branching done 32860 times (1245845 iterations), fathomed 1618 nodes and fixed 4417 variables
Cbc0035I Maximum depth 55, 0 variables fixed on reduced cost
Cuts at root node changed objective from 297.673 to 312
Probing was tried 11594 times and created 495301 cuts of which 0 were active after adding rounds of cuts (14.072 seconds)
Gomory was tried 5384 times and created 5277 cuts of which 0 were active after adding rounds of cuts (4.902 seconds)
Knapsack was tried 5384 times and created 23920 cuts of which 0 were active after adding rounds of cuts (2.925 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 5384 times and created 54451 cuts of which 0 were active after adding rounds of cuts (2.978 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
ImplicationCuts was tried 81 times and created 104 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)

Result - Optimal solution found

Objective value:                336.00000000
Enumerated nodes:               59462
Total iterations:               5780812
Time (CPU seconds):             614.97
Time (Wallclock seconds):       616.15

Total time (CPU seconds):       614.98   (Wallclock seconds):       616.16

