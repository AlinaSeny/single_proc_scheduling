Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/triang8_1_down_left_input.lp sec 1800 solve solu solutions/new_tr/triang8_1_down_left_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 275.954 - 0.39 seconds
Cgl0002I 776 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 641 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 2628 rows, 916 columns (916 integer (880 of which binary)) and 8520 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 916 objects (916 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 440 integers unsatisfied sum - 111.157
Cbc0038I Pass   1: suminf.   29.42017 (200) obj. 315.421 iterations 942
Cbc0038I Pass   2: suminf.   25.07884 (159) obj. 319.901 iterations 160
Cbc0038I Pass   3: suminf.   24.07647 (160) obj. 320.971 iterations 58
Cbc0038I Pass   4: suminf.   20.56877 (151) obj. 332.346 iterations 159
Cbc0038I Pass   5: suminf.   19.58522 (140) obj. 332.082 iterations 40
Cbc0038I Pass   6: suminf.   20.68913 (114) obj. 327.962 iterations 77
Cbc0038I Pass   7: suminf.   19.37237 (131) obj. 320.293 iterations 95
Cbc0038I Pass   8: suminf.   10.56012 (75) obj. 336.32 iterations 279
Cbc0038I Pass   9: suminf.    9.79208 (71) obj. 336.32 iterations 209
Cbc0038I Pass  10: suminf.    6.00563 (41) obj. 323.03 iterations 124
Cbc0038I Pass  11: suminf.    3.29387 (33) obj. 326.122 iterations 69
Cbc0038I Pass  12: suminf.    1.47738 (9) obj. 339 iterations 207
Cbc0038I Pass  13: suminf.    0.00000 (0) obj. 339 iterations 11
Cbc0038I Solution found of 339
Cbc0038I Cleaned solution of 339
Cbc0038I Before mini branch and bound, 395 integers at bound fixed and 0 continuous of which 1 were internal integer and 0 internal continuous
Cbc0038I Mini branch and bound did not improve solution (0.91 seconds)
Cbc0038I Round again with cutoff of 331.796
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 2
Cbc0038I Pass  14: suminf.   29.42017 (200) obj. 315.421 iterations 0
Cbc0038I Pass  15: suminf.   25.07884 (159) obj. 319.901 iterations 181
Cbc0038I Pass  16: suminf.   24.07647 (160) obj. 320.971 iterations 44
Cbc0038I Pass  17: suminf.   12.75337 (118) obj. 317.594 iterations 234
Cbc0038I Pass  18: suminf.   12.30363 (110) obj. 317.612 iterations 34
Cbc0038I Pass  19: suminf.   12.43803 (111) obj. 317.604 iterations 2
Cbc0038I Pass  20: suminf.    9.93745 (98) obj. 325.887 iterations 88
Cbc0038I Pass  21: suminf.    3.64669 (42) obj. 331.796 iterations 161
Cbc0038I Pass  22: suminf.    3.64669 (42) obj. 331.796 iterations 0
Cbc0038I Pass  23: suminf.    2.35384 (19) obj. 331.796 iterations 96
Cbc0038I Pass  24: suminf.    1.56871 (36) obj. 331.796 iterations 118
Cbc0038I Pass  25: suminf.    6.34383 (53) obj. 331.796 iterations 78
Cbc0038I Pass  26: suminf.    6.16752 (49) obj. 331.796 iterations 38
Cbc0038I Pass  27: suminf.    3.90627 (38) obj. 331.796 iterations 69
Cbc0038I Pass  28: suminf.   49.57049 (245) obj. 331.796 iterations 660
Cbc0038I Pass  29: suminf.   25.49174 (187) obj. 331.796 iterations 427
Cbc0038I Pass  30: suminf.   24.56449 (191) obj. 331.796 iterations 44
Cbc0038I Pass  31: suminf.   24.22744 (189) obj. 331.796 iterations 32
Cbc0038I Pass  32: suminf.   24.15740 (189) obj. 331.796 iterations 11
Cbc0038I Pass  33: suminf.   16.70177 (161) obj. 331.796 iterations 145
Cbc0038I Pass  34: suminf.   13.40631 (151) obj. 331.796 iterations 62
Cbc0038I Pass  35: suminf.   14.69386 (157) obj. 331.796 iterations 156
Cbc0038I Pass  36: suminf.   14.14569 (161) obj. 331.796 iterations 58
Cbc0038I Pass  37: suminf.   13.36454 (159) obj. 331.796 iterations 24
Cbc0038I Pass  38: suminf.    8.39425 (127) obj. 331.796 iterations 196
Cbc0038I Pass  39: suminf.    6.34846 (117) obj. 331.796 iterations 28
Cbc0038I Pass  40: suminf.    6.88564 (93) obj. 331.796 iterations 188
Cbc0038I Pass  41: suminf.    6.29735 (93) obj. 331.796 iterations 19
Cbc0038I Pass  42: suminf.    5.65536 (83) obj. 331.796 iterations 196
Cbc0038I Pass  43: suminf.    5.54495 (78) obj. 331.796 iterations 24
Cbc0038I Pass  44: suminf.    4.09641 (71) obj. 331.796 iterations 61
Cbc0038I Pass  45: suminf.    3.65316 (73) obj. 331.796 iterations 35
Cbc0038I Pass  46: suminf.   10.38659 (99) obj. 331.796 iterations 485
Cbc0038I Pass  47: suminf.   10.21080 (100) obj. 331.796 iterations 18
Cbc0038I Pass  48: suminf.    9.33027 (59) obj. 331.796 iterations 132
Cbc0038I Pass  49: suminf.    7.08458 (52) obj. 331.796 iterations 51
Cbc0038I Pass  50: suminf.    9.03667 (76) obj. 331.796 iterations 244
Cbc0038I Pass  51: suminf.    7.29794 (64) obj. 331.796 iterations 55
Cbc0038I Pass  52: suminf.    7.05570 (70) obj. 331.796 iterations 139
Cbc0038I Pass  53: suminf.    7.35360 (68) obj. 331.796 iterations 57
Cbc0038I Pass  54: suminf.    4.32891 (66) obj. 331.796 iterations 57
Cbc0038I Pass  55: suminf.    3.84800 (59) obj. 331.796 iterations 52
Cbc0038I Pass  56: suminf.    7.02959 (46) obj. 331.796 iterations 101
Cbc0038I Pass  57: suminf.    3.74185 (35) obj. 331.796 iterations 44
Cbc0038I Pass  58: suminf.    2.91205 (23) obj. 331.796 iterations 20
Cbc0038I Pass  59: suminf.    2.91205 (23) obj. 331.796 iterations 2
Cbc0038I Pass  60: suminf.    0.20395 (1) obj. 331.796 iterations 43
Cbc0038I Solution found of 331.796
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2629 rows 916 columns, reduced to 0 rows 0 columns
Cbc0038I Cleaned solution of 321
Cbc0038I Before mini branch and bound, 304 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1919 rows 610 columns - 213 fixed gives 591, 155 - ok now
Cbc0038I Full problem 2628 rows 916 columns, reduced to 122 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 321 to 315 (1.61 seconds)
Cbc0038I Round again with cutoff of 306.392
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 3
Cbc0038I Pass  61: suminf.   30.23709 (202) obj. 306 iterations 74
Cbc0038I Pass  62: suminf.   26.78439 (176) obj. 306.392 iterations 177
Cbc0038I Pass  63: suminf.   25.79886 (167) obj. 306.392 iterations 69
Cbc0038I Pass  64: suminf.   20.09613 (163) obj. 306.392 iterations 148
Cbc0038I Pass  65: suminf.   19.55950 (156) obj. 306.392 iterations 37
Cbc0038I Pass  66: suminf.   13.90699 (136) obj. 306.392 iterations 185
Cbc0038I Pass  67: suminf.   13.60762 (138) obj. 306.392 iterations 12
Cbc0038I Pass  68: suminf.   12.75885 (129) obj. 306.392 iterations 120
Cbc0038I Pass  69: suminf.   11.23721 (129) obj. 306.392 iterations 51
Cbc0038I Pass  70: suminf.   10.99909 (100) obj. 306.392 iterations 116
Cbc0038I Pass  71: suminf.   11.14034 (116) obj. 306.392 iterations 46
Cbc0038I Pass  72: suminf.   11.33767 (116) obj. 306.392 iterations 20
Cbc0038I Pass  73: suminf.   10.63666 (98) obj. 306.392 iterations 103
Cbc0038I Pass  74: suminf.   10.95165 (120) obj. 306.392 iterations 64
Cbc0038I Pass  75: suminf.   10.68193 (122) obj. 306.392 iterations 8
Cbc0038I Pass  76: suminf.   12.61715 (122) obj. 306.392 iterations 161
Cbc0038I Pass  77: suminf.   11.23151 (120) obj. 306.392 iterations 49
Cbc0038I Pass  78: suminf.   49.86235 (277) obj. 306.392 iterations 604
Cbc0038I Pass  79: suminf.   31.21166 (188) obj. 306.392 iterations 416
Cbc0038I Pass  80: suminf.   26.41587 (178) obj. 306.392 iterations 156
Cbc0038I Pass  81: suminf.   23.40481 (167) obj. 306.392 iterations 138
Cbc0038I Pass  82: suminf.   23.30654 (166) obj. 306.392 iterations 62
Cbc0038I Pass  83: suminf.   19.64480 (169) obj. 306.392 iterations 198
Cbc0038I Pass  84: suminf.   17.68880 (166) obj. 306.392 iterations 96
Cbc0038I Pass  85: suminf.   17.95734 (160) obj. 306.392 iterations 239
Cbc0038I Pass  86: suminf.   15.87488 (152) obj. 306.392 iterations 110
Cbc0038I Pass  87: suminf.   17.57130 (145) obj. 306.392 iterations 116
Cbc0038I Pass  88: suminf.   15.82913 (146) obj. 306.392 iterations 46
Cbc0038I Pass  89: suminf.   17.61244 (138) obj. 306.392 iterations 171
Cbc0038I Pass  90: suminf.   17.34650 (146) obj. 306.392 iterations 36
Cbc0038I Pass  91: suminf.   14.49301 (155) obj. 306.392 iterations 153
Cbc0038I Pass  92: suminf.   14.22048 (152) obj. 306.392 iterations 38
Cbc0038I Pass  93: suminf.   11.51239 (138) obj. 306.392 iterations 185
Cbc0038I Pass  94: suminf.   12.08557 (138) obj. 306.392 iterations 21
Cbc0038I Pass  95: suminf.   10.83025 (141) obj. 306.392 iterations 62
Cbc0038I Pass  96: suminf.   10.54999 (140) obj. 306.392 iterations 55
Cbc0038I Pass  97: suminf.   12.86506 (127) obj. 306.392 iterations 161
Cbc0038I Pass  98: suminf.   12.22830 (128) obj. 306.392 iterations 77
Cbc0038I Pass  99: suminf.   11.15479 (132) obj. 306.392 iterations 76
Cbc0038I Pass 100: suminf.   11.67801 (119) obj. 306.392 iterations 194
Cbc0038I Pass 101: suminf.    9.76902 (110) obj. 306.392 iterations 50
Cbc0038I Pass 102: suminf.   10.66529 (116) obj. 306.392 iterations 18
Cbc0038I Pass 103: suminf.   12.21675 (108) obj. 306.392 iterations 130
Cbc0038I Pass 104: suminf.    8.28739 (124) obj. 306.392 iterations 120
Cbc0038I Pass 105: suminf.    8.28739 (124) obj. 306.392 iterations 1
Cbc0038I Pass 106: suminf.   11.51723 (106) obj. 306.392 iterations 88
Cbc0038I Pass 107: suminf.   11.42403 (113) obj. 306.392 iterations 38
Cbc0038I Pass 108: suminf.   13.00521 (104) obj. 306.392 iterations 154
Cbc0038I Pass 109: suminf.   11.67069 (97) obj. 306.392 iterations 50
Cbc0038I Pass 110: suminf.   11.72219 (101) obj. 306.392 iterations 14
Cbc0038I Pass 111: suminf.    9.75614 (92) obj. 306.392 iterations 104
Cbc0038I Pass 112: suminf.    9.25628 (89) obj. 306.392 iterations 21
Cbc0038I Pass 113: suminf.    7.42582 (97) obj. 306.392 iterations 82
Cbc0038I Pass 114: suminf.    7.16090 (96) obj. 306.392 iterations 28
Cbc0038I Pass 115: suminf.    8.20028 (97) obj. 306.392 iterations 47
Cbc0038I Pass 116: suminf.   29.49400 (227) obj. 306.392 iterations 460
Cbc0038I Pass 117: suminf.   12.38961 (146) obj. 306.392 iterations 453
Cbc0038I Pass 118: suminf.   12.29913 (140) obj. 306.392 iterations 27
Cbc0038I Pass 119: suminf.   13.18886 (129) obj. 306.392 iterations 151
Cbc0038I Pass 120: suminf.   12.09761 (124) obj. 306.392 iterations 89
Cbc0038I Pass 121: suminf.   12.90693 (108) obj. 306.392 iterations 157
Cbc0038I Pass 122: suminf.   11.55840 (106) obj. 306.392 iterations 102
Cbc0038I Pass 123: suminf.    9.56373 (95) obj. 306.392 iterations 152
Cbc0038I Pass 124: suminf.    7.47612 (77) obj. 306.392 iterations 119
Cbc0038I Pass 125: suminf.    9.30578 (82) obj. 306.392 iterations 167
Cbc0038I Pass 126: suminf.    8.94590 (78) obj. 306.392 iterations 46
Cbc0038I Pass 127: suminf.    6.35087 (76) obj. 306.392 iterations 31
Cbc0038I Pass 128: suminf.    6.28262 (71) obj. 306.392 iterations 56
Cbc0038I Pass 129: suminf.    8.34181 (66) obj. 306.392 iterations 192
Cbc0038I Pass 130: suminf.    6.75475 (67) obj. 306.392 iterations 158
Cbc0038I Pass 131: suminf.    4.55532 (70) obj. 306.392 iterations 62
Cbc0038I Pass 132: suminf.   12.49293 (84) obj. 306.392 iterations 139
Cbc0038I Pass 133: suminf.    9.88276 (85) obj. 306.392 iterations 78
Cbc0038I Pass 134: suminf.    3.43632 (52) obj. 306.392 iterations 250
Cbc0038I Pass 135: suminf.    2.70631 (59) obj. 306.392 iterations 66
Cbc0038I Pass 136: suminf.    7.19420 (74) obj. 306.392 iterations 101
Cbc0038I Pass 137: suminf.    6.27045 (78) obj. 306.392 iterations 74
Cbc0038I Pass 138: suminf.    5.34703 (63) obj. 306.392 iterations 112
Cbc0038I Pass 139: suminf.    4.70413 (60) obj. 306.392 iterations 56
Cbc0038I Pass 140: suminf.    9.97102 (66) obj. 306.392 iterations 173
Cbc0038I Pass 141: suminf.   10.70947 (81) obj. 306.392 iterations 72
Cbc0038I Pass 142: suminf.    6.86469 (58) obj. 306.392 iterations 132
Cbc0038I Pass 143: suminf.    6.27170 (62) obj. 306.392 iterations 46
Cbc0038I Pass 144: suminf.    5.96880 (60) obj. 306.392 iterations 20
Cbc0038I Pass 145: suminf.    7.46646 (82) obj. 306.392 iterations 143
Cbc0038I Pass 146: suminf.    7.59648 (71) obj. 306.392 iterations 63
Cbc0038I Pass 147: suminf.    7.69445 (75) obj. 306.392 iterations 38
Cbc0038I Pass 148: suminf.    6.48089 (59) obj. 306.392 iterations 83
Cbc0038I Pass 149: suminf.    5.99070 (65) obj. 306.392 iterations 54
Cbc0038I Pass 150: suminf.    6.11392 (70) obj. 306.392 iterations 131
Cbc0038I Pass 151: suminf.    4.53922 (65) obj. 306.392 iterations 59
Cbc0038I Pass 152: suminf.    8.27985 (74) obj. 306.392 iterations 138
Cbc0038I Pass 153: suminf.    7.82280 (73) obj. 306.392 iterations 30
Cbc0038I Pass 154: suminf.    5.70755 (59) obj. 306.392 iterations 183
Cbc0038I Pass 155: suminf.    3.73061 (64) obj. 306.392 iterations 101
Cbc0038I Pass 156: suminf.   16.70859 (88) obj. 306.392 iterations 282
Cbc0038I Pass 157: suminf.   13.61050 (89) obj. 306.392 iterations 79
Cbc0038I Pass 158: suminf.   11.73130 (78) obj. 306.392 iterations 57
Cbc0038I Pass 159: suminf.   13.17080 (80) obj. 306.392 iterations 47
Cbc0038I Pass 160: suminf.   38.64688 (198) obj. 306.392 iterations 643
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2628 rows 916 columns, reduced to 2129 rows 691 columns - 225 fixed gives 789, 200 - ok now
Cbc0038I Mini branch and bound did not improve solution (2.93 seconds)
Cbc0038I After 2.93 seconds - Feasibility pump exiting with objective of 315 - took 2.29 seconds
Cbc0012I Integer solution of 315 found by feasibility pump after 0 iterations and 0 nodes (2.93 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1557 rows 453 columns - 178 fixed gives 391, 87 - ok now
Cbc0031I 50 added rows had average density of 7.46
Cbc0013I At root node, 50 cuts changed objective from 275.95955 to 279 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 231 row cuts average 2.6 elements, 34 column cuts (34 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.178 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 68 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 7 (ZeroHalf) - 5 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 315 best solution, best possible 279 (4.32 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 915 rows 274 columns
Cbc0038I Full problem 2628 rows 916 columns, reduced to 674 rows 201 columns
Cbc0010I After 100 nodes, 11 on tree, 315 best solution, best possible 281 (31.58 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 687 rows 209 columns
Cbc0010I After 200 nodes, 7 on tree, 315 best solution, best possible 281 (42.40 seconds)
Cbc0010I After 300 nodes, 4 on tree, 315 best solution, best possible 281 (57.14 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 700 rows 216 columns
Cbc0010I After 400 nodes, 19 on tree, 315 best solution, best possible 281 (69.04 seconds)
Cbc0010I After 500 nodes, 10 on tree, 315 best solution, best possible 281 (79.58 seconds)
Cbc0010I After 600 nodes, 13 on tree, 315 best solution, best possible 281 (91.94 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 825 rows 258 columns
Cbc0010I After 700 nodes, 9 on tree, 315 best solution, best possible 281 (100.77 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 879 rows 260 columns
Cbc0010I After 800 nodes, 8 on tree, 315 best solution, best possible 281 (116.52 seconds)
Cbc0010I After 900 nodes, 3 on tree, 315 best solution, best possible 281 (124.71 seconds)
Cbc0010I After 1000 nodes, 8 on tree, 315 best solution, best possible 281 (133.85 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 1346 rows 396 columns - 150 fixed gives 281, 73 - ok now
Cbc0038I Full problem 2628 rows 916 columns, reduced to 864 rows 268 columns
Cbc0010I After 1100 nodes, 10 on tree, 315 best solution, best possible 281 (145.64 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 868 rows 249 columns
Cbc0010I After 1200 nodes, 3 on tree, 315 best solution, best possible 281 (155.79 seconds)
Cbc0010I After 1300 nodes, 20 on tree, 315 best solution, best possible 281 (165.44 seconds)
Cbc0010I After 1400 nodes, 10 on tree, 315 best solution, best possible 281 (175.58 seconds)
Cbc0010I After 1500 nodes, 5 on tree, 315 best solution, best possible 281 (182.15 seconds)
Cbc0010I After 1600 nodes, 5 on tree, 315 best solution, best possible 281 (188.32 seconds)
Cbc0010I After 1700 nodes, 11 on tree, 315 best solution, best possible 281 (196.32 seconds)
Cbc0010I After 1800 nodes, 10 on tree, 315 best solution, best possible 281 (203.86 seconds)
Cbc0010I After 1900 nodes, 26 on tree, 315 best solution, best possible 281 (209.03 seconds)
Cbc0010I After 2000 nodes, 15 on tree, 315 best solution, best possible 281 (214.98 seconds)
Cbc0010I After 2100 nodes, 8 on tree, 315 best solution, best possible 281 (221.34 seconds)
Cbc0010I After 2200 nodes, 19 on tree, 315 best solution, best possible 281 (227.42 seconds)
Cbc0010I After 2300 nodes, 7 on tree, 315 best solution, best possible 281 (232.54 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 786 rows 236 columns
Cbc0010I After 2400 nodes, 5 on tree, 315 best solution, best possible 281 (238.85 seconds)
Cbc0010I After 2500 nodes, 8 on tree, 315 best solution, best possible 281 (245.57 seconds)
Cbc0010I After 2600 nodes, 9 on tree, 315 best solution, best possible 281 (250.51 seconds)
Cbc0010I After 2700 nodes, 9 on tree, 315 best solution, best possible 281 (258.00 seconds)
Cbc0010I After 2800 nodes, 4 on tree, 315 best solution, best possible 281 (263.62 seconds)
Cbc0010I After 2900 nodes, 10 on tree, 315 best solution, best possible 281 (268.97 seconds)
Cbc0010I After 3000 nodes, 6 on tree, 315 best solution, best possible 281 (273.40 seconds)
Cbc0010I After 3100 nodes, 5 on tree, 315 best solution, best possible 281 (277.91 seconds)
Cbc0010I After 3200 nodes, 5 on tree, 315 best solution, best possible 281 (281.33 seconds)
Cbc0010I After 3300 nodes, 19 on tree, 315 best solution, best possible 281 (286.02 seconds)
Cbc0010I After 3400 nodes, 9 on tree, 315 best solution, best possible 281 (289.53 seconds)
Cbc0010I After 3500 nodes, 6 on tree, 315 best solution, best possible 281 (293.24 seconds)
Cbc0010I After 3600 nodes, 12 on tree, 315 best solution, best possible 281 (296.60 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 501 rows 146 columns
Cbc0010I After 3700 nodes, 12 on tree, 315 best solution, best possible 281 (300.30 seconds)
Cbc0010I After 3800 nodes, 14 on tree, 315 best solution, best possible 281 (303.98 seconds)
Cbc0010I After 3900 nodes, 13 on tree, 315 best solution, best possible 281 (307.54 seconds)
Cbc0010I After 4000 nodes, 7 on tree, 315 best solution, best possible 281 (311.06 seconds)
Cbc0010I After 4100 nodes, 17 on tree, 315 best solution, best possible 281 (314.32 seconds)
Cbc0038I Full problem 2628 rows 916 columns, reduced to 484 rows 140 columns
Cbc0010I After 4200 nodes, 11 on tree, 315 best solution, best possible 281 (318.09 seconds)
Cbc0004I Integer solution of 307 found after 1317876 iterations and 4286 nodes (320.94 seconds)
Cbc0001I Search completed - best objective 307, took 1324435 iterations and 4293 nodes (322.60 seconds)
Cbc0032I Strong branching done 15360 times (825115 iterations), fathomed 231 nodes and fixed 841 variables
Cbc0035I Maximum depth 50, 10 variables fixed on reduced cost
Cuts at root node changed objective from 275.96 to 279
Probing was tried 881 times and created 114953 cuts of which 0 were active after adding rounds of cuts (2.692 seconds)
Gomory was tried 483 times and created 847 cuts of which 0 were active after adding rounds of cuts (1.241 seconds)
Knapsack was tried 483 times and created 3132 cuts of which 0 were active after adding rounds of cuts (0.440 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)
TwoMirCuts was tried 483 times and created 9362 cuts of which 0 were active after adding rounds of cuts (0.652 seconds)
ZeroHalf was tried 483 times and created 1287 cuts of which 0 were active after adding rounds of cuts (4.913 seconds)
ImplicationCuts was tried 91 times and created 1519 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)

Result - Optimal solution found

Objective value:                307.00000000
Enumerated nodes:               4293
Total iterations:               1324435
Time (CPU seconds):             322.69
Time (Wallclock seconds):       322.90

Total time (CPU seconds):       322.70   (Wallclock seconds):       322.92

