Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_3_50_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_3_50_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 53377.3 - 12.53 seconds
Cgl0002I 612 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 1002 strengthened rows, 2 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 159 strengthened rows, 0 substitutions
Cgl0004I processed model has 6914 rows, 2008 columns (2008 integer (1957 of which binary)) and 23697 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 2008 objects (2008 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 1281 integers unsatisfied sum - 336.129
Cbc0038I Pass   1: (29.62 seconds) suminf.  115.91944 (1043) obj. 84678.5 iterations 5234
Cbc0038I Pass   2: (30.11 seconds) suminf.   93.42633 (958) obj. 88846.6 iterations 1165
Cbc0038I Pass   3: (30.27 seconds) suminf.   91.38139 (958) obj. 88896.9 iterations 293
Cbc0038I Pass   4: (30.41 seconds) suminf.   90.03072 (965) obj. 88119.5 iterations 258
Cbc0038I Pass   5: (30.57 seconds) suminf.   89.65178 (955) obj. 88039.4 iterations 290
Cbc0038I Pass   6: (30.79 seconds) suminf.   92.06380 (915) obj. 87689.6 iterations 482
Cbc0038I Pass   7: (30.94 seconds) suminf.   89.50463 (941) obj. 87464.5 iterations 261
Cbc0038I Pass   8: (31.10 seconds) suminf.   87.74996 (952) obj. 87779 iterations 292
Cbc0038I Pass   9: (31.25 seconds) suminf.   85.52190 (923) obj. 88086.2 iterations 252
Cbc0038I Pass  10: (31.35 seconds) suminf.   86.25686 (927) obj. 87684.3 iterations 196
Cbc0038I Pass  11: (31.60 seconds) suminf.   83.86449 (946) obj. 87694.2 iterations 553
Cbc0038I Pass  12: (31.69 seconds) suminf.   83.27543 (942) obj. 87744.6 iterations 164
Cbc0038I Pass  13: (31.92 seconds) suminf.   76.72603 (908) obj. 87641.2 iterations 484
Cbc0038I Pass  14: (31.96 seconds) suminf.   76.81542 (916) obj. 87678.7 iterations 69
Cbc0038I Pass  15: (32.22 seconds) suminf.   78.66673 (908) obj. 87543 iterations 567
Cbc0038I Pass  16: (32.26 seconds) suminf.   77.30994 (899) obj. 87552.1 iterations 68
Cbc0038I Pass  17: (32.62 seconds) suminf.   75.08766 (925) obj. 94730 iterations 836
Cbc0038I Pass  18: (32.71 seconds) suminf.   76.66081 (906) obj. 96828.3 iterations 175
Cbc0038I Pass  19: (32.98 seconds) suminf.   74.76764 (920) obj. 95522.7 iterations 620
Cbc0038I Pass  20: (33.08 seconds) suminf.   74.07711 (906) obj. 94147.7 iterations 165
Cbc0038I Pass  21: (33.13 seconds) suminf.   73.50876 (903) obj. 94148.9 iterations 92
Cbc0038I Pass  22: (33.36 seconds) suminf.   73.48106 (905) obj. 94186.1 iterations 505
Cbc0038I Pass  23: (33.42 seconds) suminf.   73.04160 (929) obj. 94184.3 iterations 96
Cbc0038I Pass  24: (33.68 seconds) suminf.   71.16790 (901) obj. 94408.4 iterations 637
Cbc0038I Pass  25: (33.80 seconds) suminf.   71.55640 (909) obj. 94401.1 iterations 208
Cbc0038I Pass  26: (33.83 seconds) suminf.   71.78045 (906) obj. 94398.3 iterations 31
Cbc0038I Pass  27: (34.00 seconds) suminf.   72.50508 (896) obj. 94376.6 iterations 317
Cbc0038I Pass  28: (34.06 seconds) suminf.   72.51294 (897) obj. 94354.6 iterations 107
Cbc0038I Pass  29: (34.29 seconds) suminf.   71.78417 (894) obj. 94206.9 iterations 522
Cbc0038I Pass  30: (34.37 seconds) suminf.   71.90004 (911) obj. 94211.4 iterations 136
Cbc0038I Pass  31: (34.59 seconds) suminf.   72.09804 (901) obj. 94389.5 iterations 493
Cbc0038I Pass  32: (34.70 seconds) suminf.   72.22757 (904) obj. 94391.3 iterations 199
Cbc0038I Pass  33: (34.85 seconds) suminf.   71.51745 (897) obj. 94170.5 iterations 271
Cbc0038I Pass  34: (34.94 seconds) suminf.   70.46073 (902) obj. 94227.3 iterations 155
Cbc0038I Pass  35: (35.01 seconds) suminf.   70.55632 (898) obj. 94168.9 iterations 136
Cbc0038I Pass  36: (36.04 seconds) suminf.  101.32716 (855) obj. 97638.3 iterations 2524
Cbc0038I Pass  37: (36.66 seconds) suminf.   78.06947 (850) obj. 99742.8 iterations 1557
Cbc0038I Pass  38: (36.80 seconds) suminf.   79.61586 (836) obj. 99679.7 iterations 246
Cbc0038I Pass  39: (36.85 seconds) suminf.   79.63243 (840) obj. 99685.7 iterations 77
Cbc0038I Pass  40: (36.99 seconds) suminf.   75.87340 (814) obj. 99760.3 iterations 264
Cbc0038I Pass  41: (37.07 seconds) suminf.   76.04575 (821) obj. 99714.4 iterations 143
Cbc0038I Pass  42: (37.40 seconds) suminf.   70.50259 (802) obj. 100691 iterations 781
Cbc0038I Pass  43: (37.55 seconds) suminf.   69.44457 (804) obj. 100491 iterations 282
Cbc0038I Pass  44: (37.61 seconds) suminf.   69.32693 (806) obj. 100742 iterations 112
Cbc0038I Pass  45: (37.64 seconds) suminf.   69.29904 (806) obj. 100686 iterations 45
Cbc0038I Pass  46: (38.43 seconds) suminf.   92.69482 (841) obj. 100445 iterations 2095
Cbc0038I Pass  47: (38.90 seconds) suminf.   80.17045 (863) obj. 100610 iterations 1200
Cbc0038I Pass  48: (38.91 seconds) suminf.   80.17045 (863) obj. 100610 iterations 13
Cbc0038I Pass  49: (39.07 seconds) suminf.   75.95378 (851) obj. 100900 iterations 304
Cbc0038I Pass  50: (39.15 seconds) suminf.   73.69177 (839) obj. 100895 iterations 162
Cbc0038I Pass  51: (39.17 seconds) suminf.   73.95423 (843) obj. 100895 iterations 18
Cbc0038I Pass  52: (39.46 seconds) suminf.   73.33789 (782) obj. 100808 iterations 620
Cbc0038I Pass  53: (39.53 seconds) suminf.   71.96819 (788) obj. 100752 iterations 113
Cbc0038I Pass  54: (39.82 seconds) suminf.   72.78896 (752) obj. 103216 iterations 657
Cbc0038I Pass  55: (39.99 seconds) suminf.   71.52438 (807) obj. 104863 iterations 360
Cbc0038I Pass  56: (40.13 seconds) suminf.   71.06403 (812) obj. 104717 iterations 230
Cbc0038I Pass  57: (40.17 seconds) suminf.   71.06799 (827) obj. 104766 iterations 74
Cbc0038I Pass  58: (40.34 seconds) suminf.   72.25787 (821) obj. 104854 iterations 306
Cbc0038I Pass  59: (40.38 seconds) suminf.   72.71099 (809) obj. 104855 iterations 60
Cbc0038I Pass  60: (40.58 seconds) suminf.   70.25389 (820) obj. 104755 iterations 407
Cbc0038I Pass  61: (41.50 seconds) suminf.   98.18222 (742) obj. 105701 iterations 2385
Cbc0038I Pass  62: (41.87 seconds) suminf.   80.02662 (774) obj. 106585 iterations 1010
Cbc0038I Pass  63: (42.06 seconds) suminf.   76.76955 (774) obj. 103264 iterations 421
Cbc0038I Pass  64: (42.09 seconds) suminf.   76.96233 (777) obj. 104846 iterations 32
Cbc0038I Pass  65: (42.25 seconds) suminf.   74.12719 (785) obj. 107100 iterations 313
Cbc0038I Pass  66: (42.27 seconds) suminf.   74.30549 (782) obj. 107179 iterations 25
Cbc0038I Pass  67: (42.43 seconds) suminf.   73.40057 (810) obj. 107225 iterations 307
Cbc0038I Pass  68: (42.50 seconds) suminf.   73.00679 (809) obj. 107184 iterations 123
Cbc0038I Pass  69: (42.67 seconds) suminf.   71.55851 (789) obj. 107049 iterations 343
Cbc0038I Pass  70: (42.71 seconds) suminf.   70.83082 (785) obj. 107050 iterations 70
Cbc0038I Pass  71: (42.80 seconds) suminf.   71.42825 (775) obj. 107027 iterations 164
Cbc0038I Pass  72: (42.85 seconds) suminf.   70.87800 (770) obj. 107036 iterations 89
Cbc0038I Pass  73: (43.08 seconds) suminf.   68.04806 (768) obj. 107416 iterations 497
Cbc0038I Pass  74: (43.09 seconds) suminf.   67.53409 (765) obj. 107317 iterations 22
Cbc0038I Pass  75: (43.28 seconds) suminf.   68.52577 (766) obj. 106853 iterations 381
Cbc0038I Pass  76: (43.32 seconds) suminf.   68.09335 (766) obj. 106825 iterations 75
Cbc0038I Pass  77: (43.51 seconds) suminf.   68.47363 (760) obj. 106441 iterations 384
Cbc0038I Pass  78: (43.54 seconds) suminf.   68.27087 (765) obj. 106629 iterations 43
Cbc0038I Pass  79: (43.56 seconds) suminf.   67.61405 (764) obj. 106782 iterations 31
Cbc0038I Pass  80: (43.69 seconds) suminf.   67.73692 (755) obj. 107013 iterations 226
Cbc0038I Pass  81: (43.76 seconds) suminf.   68.32595 (769) obj. 106826 iterations 122
Cbc0038I Pass  82: (43.95 seconds) suminf.   67.52472 (772) obj. 106992 iterations 415
Cbc0038I Pass  83: (44.00 seconds) suminf.   68.56412 (761) obj. 106840 iterations 94
Cbc0038I Pass  84: (44.06 seconds) suminf.   68.74328 (757) obj. 105601 iterations 114
Cbc0038I Pass  85: (44.20 seconds) suminf.   68.54602 (747) obj. 106822 iterations 269
Cbc0038I Pass  86: (44.24 seconds) suminf.   67.60032 (752) obj. 106802 iterations 61
Cbc0038I Pass  87: (44.34 seconds) suminf.   67.92832 (773) obj. 107052 iterations 178
Cbc0038I Pass  88: (44.37 seconds) suminf.   67.83841 (779) obj. 106812 iterations 47
Cbc0038I Pass  89: (44.59 seconds) suminf.   66.85811 (759) obj. 100324 iterations 478
Cbc0038I Pass  90: (44.62 seconds) suminf.   66.77863 (755) obj. 100364 iterations 61
Cbc0038I Pass  91: (44.64 seconds) suminf.   67.22437 (753) obj. 100365 iterations 10
Cbc0038I Pass  92: (44.93 seconds) suminf.   64.61051 (715) obj. 100476 iterations 754
Cbc0038I Pass  93: (44.99 seconds) suminf.   63.79247 (705) obj. 100433 iterations 106
Cbc0038I Pass  94: (45.21 seconds) suminf.   62.92116 (713) obj. 100316 iterations 517
Cbc0038I Pass  95: (45.26 seconds) suminf.   61.53739 (730) obj. 100318 iterations 90
Cbc0038I Pass  96: (45.47 seconds) suminf.   63.59854 (697) obj. 99740.1 iterations 456
Cbc0038I Pass  97: (45.69 seconds) suminf.   61.37530 (710) obj. 100459 iterations 529
Cbc0038I Pass  98: (45.88 seconds) suminf.   60.72496 (709) obj. 100405 iterations 417
Cbc0038I Pass  99: (45.92 seconds) suminf.   60.46771 (720) obj. 100407 iterations 74
Cbc0038I Pass 100: (46.61 seconds) suminf.   85.15556 (758) obj. 99108.2 iterations 1767
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 212 integers at bound fixed and 0 continuous
Cbc0038I Full problem 6914 rows 2008 columns, reduced to 6028 rows 1717 columns - too large
Cbc0038I Mini branch and bound did not improve solution (55.65 seconds)
Cbc0038I After 55.65 seconds - Feasibility pump exiting - took 28.54 seconds
Cbc0031I 43 added rows had average density of 53.883721
Cbc0013I At root node, 43 cuts changed objective from 53624.886 to 53834.38 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 49 row cuts average 192.1 elements, 0 column cuts (0 active)  in 1.641 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 68 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is -100
Cbc0014I Cut generator 7 (ZeroHalf) - 10 row cuts average 22.0 elements, 0 column cuts (0 active)  in 1.318 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 53835 (67.19 seconds)
Cbc0010I After 100 nodes, 4 on tree, 1e+50 best solution, best possible 53843 (255.75 seconds)
Cbc0010I After 200 nodes, 10 on tree, 1e+50 best solution, best possible 53843 (464.54 seconds)
Cbc0010I After 300 nodes, 22 on tree, 1e+50 best solution, best possible 53843 (663.65 seconds)
Cbc0010I After 400 nodes, 38 on tree, 1e+50 best solution, best possible 53843 (862.19 seconds)
Cbc0010I After 500 nodes, 52 on tree, 1e+50 best solution, best possible 53843 (1045.17 seconds)
Cbc0010I After 600 nodes, 67 on tree, 1e+50 best solution, best possible 53843 (1244.36 seconds)
Cbc0010I After 700 nodes, 74 on tree, 1e+50 best solution, best possible 53843 (1416.86 seconds)
Cbc0010I After 800 nodes, 90 on tree, 1e+50 best solution, best possible 53843 (1604.08 seconds)
Cbc0010I After 900 nodes, 106 on tree, 1e+50 best solution, best possible 53843 (1780.33 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 53843), took 1627523 iterations and 904 nodes (1786.11 seconds)
Cbc0032I Strong branching done 8626 times (786684 iterations), fathomed 13 nodes and fixed 96 variables
Cbc0035I Maximum depth 142, 0 variables fixed on reduced cost
Cuts at root node changed objective from 53624.9 to 53835
Probing was tried 10 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.157 seconds)
Gomory was tried 157 times and created 104 cuts of which 0 were active after adding rounds of cuts (5.154 seconds)
Knapsack was tried 157 times and created 199 cuts of which 0 were active after adding rounds of cuts (0.372 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.064 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.022 seconds)
TwoMirCuts was tried 10 times and created 68 cuts of which 0 were active after adding rounds of cuts (0.746 seconds)
ZeroHalf was tried 10 times and created 10 cuts of which 0 were active after adding rounds of cuts (1.318 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    53843.000
Enumerated nodes:               904
Total iterations:               1627523
Time (CPU seconds):             1786.11
Time (Wallclock seconds):       1786.47

Total time (CPU seconds):       1786.14   (Wallclock seconds):       1786.51

