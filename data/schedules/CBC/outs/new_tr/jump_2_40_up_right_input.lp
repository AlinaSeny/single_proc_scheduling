Welcome to the CBC MILP Solver 
Version: 2.10.7 
Build Date: Feb 14 2022 

command line - cbc inputs/new_tr/order/jump_2_40_up_right_input.lp sec 1800 solve solu solutions/new_tr/jump_2_40_up_right_input.lp (default strategy 1)
seconds was changed from 1e+100 to 1800
Continuous objective value is 61483.3 - 0.25 seconds
Cgl0002I 700 variables fixed
Cgl0003I 0 fixed, 1 tightened bounds, 560 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 80 strengthened rows, 0 substitutions
Cgl0004I processed model has 3582 rows, 1113 columns (1113 integer (1072 of which binary)) and 11997 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 1 integer variables out of 1113 objects (1113 integer) have cost of 1 - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 625 integers unsatisfied sum - 167.217
Cbc0038I Pass   1: (0.79 seconds) suminf.   52.71647 (343) obj. 81969.7 iterations 1741
Cbc0038I Pass   2: (0.85 seconds) suminf.   42.43989 (321) obj. 83390.3 iterations 356
Cbc0038I Pass   3: (0.90 seconds) suminf.   40.11474 (329) obj. 83976.8 iterations 260
Cbc0038I Pass   4: (0.95 seconds) suminf.   36.29668 (337) obj. 83637.5 iterations 303
Cbc0038I Pass   5: (0.98 seconds) suminf.   35.11251 (321) obj. 83574.7 iterations 102
Cbc0038I Pass   6: (1.03 seconds) suminf.   31.25981 (333) obj. 83633.2 iterations 278
Cbc0038I Pass   7: (1.06 seconds) suminf.   30.98023 (337) obj. 83660.6 iterations 138
Cbc0038I Pass   8: (1.09 seconds) suminf.   31.39063 (321) obj. 83678.2 iterations 131
Cbc0038I Pass   9: (1.11 seconds) suminf.   30.11429 (336) obj. 83659.9 iterations 119
Cbc0038I Pass  10: (1.16 seconds) suminf.   32.34303 (294) obj. 83511.1 iterations 271
Cbc0038I Pass  11: (1.18 seconds) suminf.   30.29240 (290) obj. 83493 iterations 51
Cbc0038I Pass  12: (1.19 seconds) suminf.   29.24925 (301) obj. 83470.9 iterations 75
Cbc0038I Pass  13: (1.27 seconds) suminf.   28.38247 (273) obj. 83049.8 iterations 438
Cbc0038I Pass  14: (1.31 seconds) suminf.   26.02481 (269) obj. 83501.7 iterations 231
Cbc0038I Pass  15: (1.32 seconds) suminf.   25.19481 (276) obj. 83512.6 iterations 61
Cbc0038I Pass  16: (1.37 seconds) suminf.   30.66350 (308) obj. 83490.2 iterations 259
Cbc0038I Pass  17: (1.41 seconds) suminf.   27.87916 (271) obj. 83461.1 iterations 219
Cbc0038I Pass  18: (1.46 seconds) suminf.   24.85485 (269) obj. 83603.4 iterations 299
Cbc0038I Pass  19: (1.49 seconds) suminf.   23.77925 (281) obj. 83597.3 iterations 131
Cbc0038I Pass  20: (1.54 seconds) suminf.   25.35837 (280) obj. 83816.5 iterations 298
Cbc0038I Pass  21: (1.55 seconds) suminf.   24.92656 (290) obj. 83857.5 iterations 61
Cbc0038I Pass  22: (1.59 seconds) suminf.   25.72785 (273) obj. 83853.8 iterations 206
Cbc0038I Pass  23: (1.62 seconds) suminf.   23.65250 (293) obj. 83877.3 iterations 145
Cbc0038I Pass  24: (1.66 seconds) suminf.   26.16163 (290) obj. 83813.4 iterations 217
Cbc0038I Pass  25: (1.69 seconds) suminf.   24.51561 (289) obj. 83846.6 iterations 129
Cbc0038I Pass  26: (1.70 seconds) suminf.   23.47333 (274) obj. 83844.9 iterations 40
Cbc0038I Pass  27: (1.75 seconds) suminf.   26.95712 (287) obj. 84043 iterations 297
Cbc0038I Pass  28: (1.78 seconds) suminf.   24.67588 (294) obj. 84018 iterations 130
Cbc0038I Pass  29: (1.82 seconds) suminf.   28.40329 (304) obj. 84028 iterations 233
Cbc0038I Pass  30: (1.87 seconds) suminf.   22.62109 (298) obj. 83978.2 iterations 192
Cbc0038I Pass  31: (1.88 seconds) suminf.   22.33889 (277) obj. 84010 iterations 77
Cbc0038I Pass  32: (1.93 seconds) suminf.   27.33962 (294) obj. 84188.7 iterations 287
Cbc0038I Pass  33: (1.98 seconds) suminf.   24.51886 (278) obj. 83964.2 iterations 217
Cbc0038I Pass  34: (2.05 seconds) suminf.   26.79406 (270) obj. 87281.6 iterations 443
Cbc0038I Pass  35: (2.08 seconds) suminf.   25.33150 (273) obj. 84319.3 iterations 194
Cbc0038I Pass  36: (2.11 seconds) suminf.   22.10149 (277) obj. 84351.7 iterations 159
Cbc0038I Pass  37: (2.16 seconds) suminf.   24.97618 (287) obj. 84116 iterations 237
Cbc0038I Pass  38: (2.20 seconds) suminf.   22.49547 (268) obj. 84279.4 iterations 192
Cbc0038I Pass  39: (2.22 seconds) suminf.   22.34153 (268) obj. 84299.2 iterations 122
Cbc0038I Pass  40: (2.33 seconds) suminf.   26.58107 (261) obj. 88922.4 iterations 779
Cbc0038I Pass  41: (2.37 seconds) suminf.   23.42628 (266) obj. 90194.6 iterations 172
Cbc0038I Pass  42: (2.37 seconds) suminf.   23.42628 (266) obj. 90194.6 iterations 2
Cbc0038I Pass  43: (2.42 seconds) suminf.   22.41266 (259) obj. 90197.3 iterations 325
Cbc0038I Pass  44: (2.45 seconds) suminf.   19.56153 (268) obj. 90185.8 iterations 149
Cbc0038I Pass  45: (2.46 seconds) suminf.   19.67468 (274) obj. 90190.4 iterations 17
Cbc0038I Pass  46: (2.50 seconds) suminf.   22.41825 (250) obj. 90475.4 iterations 246
Cbc0038I Pass  47: (2.53 seconds) suminf.   18.17958 (258) obj. 92655.2 iterations 148
Cbc0038I Pass  48: (2.54 seconds) suminf.   17.70566 (257) obj. 92665.1 iterations 36
Cbc0038I Pass  49: (2.58 seconds) suminf.   19.40184 (245) obj. 92528.5 iterations 223
Cbc0038I Pass  50: (2.60 seconds) suminf.   17.02472 (246) obj. 92624.5 iterations 71
Cbc0038I Pass  51: (2.64 seconds) suminf.   22.83482 (231) obj. 92507.5 iterations 247
Cbc0038I Pass  52: (2.66 seconds) suminf.   21.47628 (229) obj. 92631 iterations 86
Cbc0038I Pass  53: (2.70 seconds) suminf.   18.42066 (237) obj. 92511.7 iterations 301
Cbc0038I Pass  54: (2.72 seconds) suminf.   17.96268 (231) obj. 92487.3 iterations 102
Cbc0038I Pass  55: (2.76 seconds) suminf.   18.21069 (239) obj. 92512.2 iterations 173
Cbc0038I Pass  56: (2.77 seconds) suminf.   18.00160 (240) obj. 92482.1 iterations 61
Cbc0038I Pass  57: (2.82 seconds) suminf.   17.20978 (228) obj. 92516.4 iterations 272
Cbc0038I Pass  58: (2.84 seconds) suminf.   16.20070 (226) obj. 92505 iterations 117
Cbc0038I Pass  59: (2.87 seconds) suminf.   17.67857 (233) obj. 92487.2 iterations 191
Cbc0038I Pass  60: (2.89 seconds) suminf.   17.75623 (232) obj. 92520.5 iterations 61
Cbc0038I Pass  61: (2.93 seconds) suminf.   16.34384 (213) obj. 92480.9 iterations 288
Cbc0038I Pass  62: (2.94 seconds) suminf.   15.89576 (220) obj. 92476 iterations 63
Cbc0038I Pass  63: (2.99 seconds) suminf.   17.62297 (186) obj. 92431.9 iterations 281
Cbc0038I Pass  64: (3.01 seconds) suminf.   16.50351 (192) obj. 92456.2 iterations 105
Cbc0038I Pass  65: (3.01 seconds) suminf.   15.98144 (205) obj. 92456.1 iterations 40
Cbc0038I Pass  66: (3.06 seconds) suminf.   13.02381 (179) obj. 90226.1 iterations 299
Cbc0038I Pass  67: (3.09 seconds) suminf.   12.52810 (168) obj. 90231.1 iterations 203
Cbc0038I Pass  68: (3.13 seconds) suminf.   10.40534 (147) obj. 90226.3 iterations 191
Cbc0038I Pass  69: (3.13 seconds) suminf.   10.29394 (143) obj. 90226.2 iterations 12
Cbc0038I Pass  70: (3.17 seconds) suminf.   13.74832 (142) obj. 90229.5 iterations 203
Cbc0038I Pass  71: (3.18 seconds) suminf.   13.07983 (146) obj. 90229.5 iterations 59
Cbc0038I Pass  72: (3.22 seconds) suminf.   13.77082 (152) obj. 90231.1 iterations 217
Cbc0038I Pass  73: (3.25 seconds) suminf.   11.15654 (166) obj. 90226.7 iterations 195
Cbc0038I Pass  74: (3.29 seconds) suminf.   11.21560 (140) obj. 90440.4 iterations 313
Cbc0038I Pass  75: (3.30 seconds) suminf.   10.81413 (142) obj. 90377.3 iterations 10
Cbc0038I Pass  76: (3.34 seconds) suminf.   13.07902 (120) obj. 91096.1 iterations 314
Cbc0038I Pass  77: (3.35 seconds) suminf.    9.60134 (135) obj. 90882.9 iterations 40
Cbc0038I Pass  78: (3.35 seconds) suminf.    9.59630 (136) obj. 90883.2 iterations 5
Cbc0038I Pass  79: (3.39 seconds) suminf.   11.48785 (120) obj. 98332.8 iterations 225
Cbc0038I Pass  80: (3.40 seconds) suminf.    8.08536 (123) obj. 98332.4 iterations 111
Cbc0038I Pass  81: (3.41 seconds) suminf.    8.05921 (123) obj. 98332.4 iterations 32
Cbc0038I Pass  82: (3.43 seconds) suminf.    4.47861 (106) obj. 98332.8 iterations 111
Cbc0038I Pass  83: (3.43 seconds) suminf.    4.47861 (106) obj. 98332.8 iterations 8
Cbc0038I Pass  84: (3.46 seconds) suminf.    7.01177 (98) obj. 98331.1 iterations 182
Cbc0038I Pass  85: (3.47 seconds) suminf.    6.35454 (95) obj. 98332.8 iterations 86
Cbc0038I Pass  86: (3.48 seconds) suminf.    6.55445 (91) obj. 98332.8 iterations 86
Cbc0038I Pass  87: (3.49 seconds) suminf.    6.19607 (88) obj. 98329.7 iterations 49
Cbc0038I Pass  88: (3.50 seconds) suminf.    6.32512 (83) obj. 98304 iterations 68
Cbc0038I Pass  89: (3.51 seconds) suminf.    5.88668 (95) obj. 98304 iterations 36
Cbc0038I Pass  90: (3.52 seconds) suminf.    5.21631 (96) obj. 98304 iterations 20
Cbc0038I Pass  91: (3.55 seconds) suminf.    2.51663 (47) obj. 98304 iterations 192
Cbc0038I Pass  92: (3.55 seconds) suminf.    2.51663 (47) obj. 98304 iterations 1
Cbc0038I Pass  93: (3.57 seconds) suminf.    5.10247 (45) obj. 98304 iterations 168
Cbc0038I Pass  94: (3.59 seconds) suminf.    3.65792 (38) obj. 98304 iterations 80
Cbc0038I Pass  95: (3.61 seconds) suminf.    5.78365 (54) obj. 98304 iterations 188
Cbc0038I Pass  96: (3.63 seconds) suminf.    3.39738 (85) obj. 98304 iterations 110
Cbc0038I Pass  97: (3.63 seconds) suminf.    3.39738 (85) obj. 98304 iterations 2
Cbc0038I Pass  98: (3.71 seconds) suminf.    0.91095 (41) obj. 98304 iterations 540
Cbc0038I Pass  99: (3.72 seconds) suminf.    0.84477 (41) obj. 98304 iterations 62
Cbc0038I Pass 100: (3.88 seconds) suminf.   63.57161 (430) obj. 102394 iterations 1107
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 170 integers at bound fixed and 0 continuous
Cbc0038I Full problem 3582 rows 1113 columns, reduced to 2905 rows 873 columns - too large
Cbc0038I Mini branch and bound did not improve solution (4.25 seconds)
Cbc0038I After 4.25 seconds - Feasibility pump exiting - took 3.77 seconds
Cbc0031I 56 added rows had average density of 19.821429
Cbc0013I At root node, 56 cuts changed objective from 61530.353 to 66560 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 18 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 110 row cuts average 464.0 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 134 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 66560 (10.53 seconds)
Cbc0010I After 100 nodes, 7 on tree, 1e+50 best solution, best possible 66561 (99.01 seconds)
Cbc0010I After 200 nodes, 4 on tree, 1e+50 best solution, best possible 66566 (206.74 seconds)
Cbc0010I After 300 nodes, 28 on tree, 1e+50 best solution, best possible 66566 (312.58 seconds)
Cbc0010I After 400 nodes, 30 on tree, 1e+50 best solution, best possible 66566 (442.31 seconds)
Cbc0010I After 500 nodes, 39 on tree, 1e+50 best solution, best possible 66566 (553.82 seconds)
Cbc0010I After 600 nodes, 44 on tree, 1e+50 best solution, best possible 66566 (634.74 seconds)
Cbc0010I After 700 nodes, 62 on tree, 1e+50 best solution, best possible 66566 (686.70 seconds)
Cbc0010I After 800 nodes, 80 on tree, 1e+50 best solution, best possible 66566 (735.68 seconds)
Cbc0010I After 900 nodes, 98 on tree, 1e+50 best solution, best possible 66566 (788.35 seconds)
Cbc0010I After 1000 nodes, 99 on tree, 1e+50 best solution, best possible 66566 (848.08 seconds)
Cbc0010I After 1100 nodes, 88 on tree, 1e+50 best solution, best possible 66566 (913.49 seconds)
Cbc0010I After 1200 nodes, 78 on tree, 1e+50 best solution, best possible 66566 (982.69 seconds)
Cbc0010I After 1300 nodes, 72 on tree, 1e+50 best solution, best possible 66566 (1028.26 seconds)
Cbc0010I After 1400 nodes, 63 on tree, 1e+50 best solution, best possible 66566 (1068.58 seconds)
Cbc0010I After 1500 nodes, 48 on tree, 1e+50 best solution, best possible 66566 (1117.93 seconds)
Cbc0010I After 1600 nodes, 42 on tree, 1e+50 best solution, best possible 66566 (1231.56 seconds)
Cbc0010I After 1700 nodes, 25 on tree, 1e+50 best solution, best possible 66566 (1342.47 seconds)
Cbc0010I After 1800 nodes, 12 on tree, 1e+50 best solution, best possible 66566 (1449.18 seconds)
Cbc0010I After 1900 nodes, 12 on tree, 1e+50 best solution, best possible 66567 (1574.38 seconds)
Cbc0010I After 2000 nodes, 1 on tree, 1e+50 best solution, best possible 66577 (1636.54 seconds)
Cbc0010I After 2100 nodes, 4 on tree, 1e+50 best solution, best possible 66585 (1693.75 seconds)
Cbc0010I After 2200 nodes, 6 on tree, 1e+50 best solution, best possible 66585 (1749.14 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 66585), took 5678981 iterations and 2293 nodes (1799.85 seconds)
Cbc0032I Strong branching done 17060 times (1368168 iterations), fathomed 176 nodes and fixed 848 variables
Cbc0035I Maximum depth 62, 0 variables fixed on reduced cost
Cuts at root node changed objective from 61530.4 to 66560
Probing was tried 10 times and created 18 cuts of which 0 were active after adding rounds of cuts (0.066 seconds)
Gomory was tried 420 times and created 554 cuts of which 0 were active after adding rounds of cuts (2.575 seconds)
Knapsack was tried 420 times and created 1744 cuts of which 0 were active after adding rounds of cuts (0.597 seconds)
Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 420 times and created 6635 cuts of which 0 were active after adding rounds of cuts (0.969 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.032 seconds)
ImplicationCuts was tried 107 times and created 43 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)

Result - Stopped on time limit

No feasible solution found
Lower bound:                    66585.000
Enumerated nodes:               2293
Total iterations:               5678981
Time (CPU seconds):             1799.85
Time (Wallclock seconds):       1804.10

Total time (CPU seconds):       1799.87   (Wallclock seconds):       1804.14

